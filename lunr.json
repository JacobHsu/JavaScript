{"index":{"version":"2.1.0","fields":["title","body"],"fieldVectors":[["title/ajax.html",[0,4.069]],["body/ajax.html",[0,3.03,1,0.306,2,0.365,3,0.398,4,0.468,5,0.489,6,0.557,7,0.739,8,0.818,9,1.003,10,0.931,11,1.258,12,0.917,13,4.123,14,0.038,15,2.163,16,4.007,17,4.123,18,2.486,19,1.291,20,4.123,21,1.033,22,4.123,23,4.123,24,2.57,25,4.123,26,4.123,27,1.677,28,4.123,29,3.487,30,3.487,31,2.769,32,2.664,33,4.123,34,1.708,35,4.123,36,1.101,37,1.298,38,1.181,39,0.885,40,0.934,41,1.071,42,1.117,43,1.182,44,1.166,45,1.253,46,3.855,47,5.344,48,4.123,49,4.123,50,4.123,51,4.709,52,5.965,53,4.123,54,2.89,55,2.89,56,4.123,57,4.123,58,1.429,59,4.123,60,5.965,61,4.123,62,0.818,63,4.123,64,4.123,65,2.769,66,4.123,67,3.693,68,4.123,69,4.123,70,4.123,71,4.123,72,4.123,73,4.123,74,4.123,75,4.123,76,4.123,77,4.123,78,4.123,79,4.123,80,4.123,81,4.123,82,4.123,83,3.41,84,5.965,85,4.934,86,4.123,87,4.384,88,4.934,89,4.123,90,7.01,91,4.123,92,4.123,93,4.123,94,4.123,95,5.965,96,4.123,97,4.123,98,5.965,99,4.123,100,4.123,101,5.965,102,3.199,103,4.123,104,4.123,105,4.123,106,4.123,107,4.123,108,3.41,109,3.41,110,4.123,111,3.41,112,4.123,113,3.41,114,1.939,115,3.833,116,4.127,117,3.41,118,4.371,119,2.335,120,2.057,121,2.57,122,3.41,123,2.215]],["title/RegExp.html",[14,0.015,124,4.154]],["body/RegExp.html",[1,0.3,2,0.367,3,0.344,4,0.322,9,1.011,12,0.925,14,0.038,19,1.892,58,1.581,62,0.735,123,3.246,125,6.042,126,6.042,127,6.042,128,6.042,129,6.042,130,6.042,131,6.042,132,6.042,133,8.351,134,6.042,135,6.042,136,7.745,137,6.042,138,1.57,139,6.042,140,5.429,141,7.745,142,7.745,143,7.745,144,5.203,145,7.745,146,8.549,147,7.745,148,7.745,149,2.881,150,1.921,151,6.042,152,6.042,153,4.441,154,5.413,155,1.835,156,5.413,157,7.658,158,7.658,159,6.938,160,5.413,161,4.059,162,4.998,163,5.413,164,4.998]],["title/RegExp.html#match",[153,4.069]],["body/RegExp.html#match",[1,0.285,2,0.305,3,0.333,4,0.4,14,0.037,58,1.314,62,0.645,123,4.027,154,6.714,155,2.02,156,6.714,157,7.923,158,7.923,159,7.923,160,6.714,161,5.034,162,6.2,163,6.714,164,6.2,165,7.495,166,7.495,167,7.495,168,4.136]],["title/RESTfulAPI.html",[18,2.505,169,2.911]],["body/RESTfulAPI.html",[1,0.205,2,0.259,14,0.038,18,5.988,29,4.686,37,1.181,46,6.416,169,5.619,170,5.713,171,5.713,172,6.378,173,6.378,174,6.378,175,6.378,176,6.378,177,7.181,178,5.713,179,5.713,180,5.713,181,5.713,182,6.378,183,6.378,184,8.016,185,6.378,186,6.378,187,6.378,188,7.181,189,6.22,190,6.378,191,5.713,192,5.713,193,5.276,194,5.713,195,7.181,196,5.713,197,5.713,198,2.594,199,5.713,200,5.713,201,7.181,202,5.713,203,5.713,204,4.688,205,5.713,206,5.713,207,5.713]],["title/RESTfulAPI.html#動詞",[208,4.959]],["body/RESTfulAPI.html#動詞",[14,0.031,29,4.336,46,6.054,169,5.199,171,6.644,177,7.874,178,6.644,179,6.644,180,6.644,181,6.644,208,6.644,209,7.417,210,7.417,211,7.417,212,7.417,213,7.417,214,7.417,215,7.417,216,7.417,217,7.417,218,7.417,219,7.417,220,7.417,221,7.417,222,7.417,223,7.417,224,7.417,225,7.417,226,7.417,227,7.417,228,5.199,229,7.417,230,7.417,231,7.417,232,6.644,233,7.417,234,7.417]],["title/RESTfulAPI.html#狀態碼",[235,5.536]],["body/RESTfulAPI.html#狀態碼",[1,0.239,2,0.302,18,5.963,29,4.336,188,7.874,189,6.82,191,6.644,192,6.644,193,6.135,194,6.644,195,6.644,196,6.644,197,6.644,236,7.417,237,7.417,238,7.417,239,7.417,240,7.417,241,7.417,242,7.417,243,7.417,244,7.417,245,7.417,246,7.417,247,7.417,248,7.417,249,7.417,250,7.417,251,7.417,252,7.417,253,7.417,254,7.417,255,5.755,256,7.417,257,7.417]],["title/RESTfulAPI.html#References",[198,2.252]],["body/RESTfulAPI.html#References",[18,5.539,37,1.48,199,7.163,200,7.163,201,8.227,202,7.163,203,7.163,204,5.877,205,7.163,206,7.163,207,7.163]],["title/es6.html",[6,0.284,258,3.721]],["body/es6.html",[1,0.284,2,0.359,3,0.332,6,0.511,14,0.037,87,7.456,258,6.696,259,6.49,260,6.852,261,7.91,262,6.696,263,6.852,264,6.696,265,6.696,266,6.696,267,4.37,268,4.661,269,7.475]],["title/es6.html#Module-的加载实现",[259,3.053,270,4.154]],["body/es6.html#Module-的加载实现",[1,0.287,2,0.362,3,0.336,14,0.027,87,7.475,259,5.567,260,6.905,261,7.972,262,6.785,263,6.905,264,6.785,265,6.785,266,6.785,267,4.427,268,4.722,271,7.574,272,7.574,273,7.574,274,4.722,275,7.574,276,7.574,277,7.574]],["title/event.html",[278,4.959]],["body/event.html",[1,0.268,2,0.338,3,0.369,4,0.444,5,0.499,6,0.568,7,0.754,8,0.679,9,0.884,12,0.993,14,0.038,21,0.91,51,4.547,149,3.228,279,6.064,280,7.452,281,8.414,282,8.414,283,7.452,284,6.064,285,6.064,286,6.064,287,3.637,288,4.745,289,6.064,290,6.064,291,7.452,292,6.064,293,6.064,294,6.064]],["title/event.html#代理",[295,5.536]],["body/event.html#代理",[1,0.267,2,0.337,3,0.368,4,0.442,5,0.497,6,0.566,7,0.751,8,0.675,9,0.878,12,0.989,14,0.038,21,0.904,51,4.515,149,3.205,279,6.021,280,7.419,281,7.419,282,8.394,283,7.419,284,6.021,285,6.021,286,6.021,287,3.611,288,4.711,289,6.021,291,6.021,292,6.021,293,6.021,294,6.021,296,6.722,297,6.722,298,6.722,299,6.722,300,6.722,301,6.722,302,6.722,303,6.021,304,6.722,305,6.722,306,3.709]],["title/arrowFunction.html",[14,0.02]],["body/arrowFunction.html",[1,0.288,2,0.364,3,0.397,4,0.408,5,0.459,6,0.579,7,0.694,8,0.768,9,0.999,10,0.719,14,0.038,19,1.857,21,0.797,62,0.77,114,1.846,138,2.202,155,1.643,307,3.697,308,8.02,309,2.433,310,4.227,311,3.452,312,1.253,313,5.938,314,5.081,315,3.852,316,4.358,317,2.767,318,4.601,319,4.358,320,4.601,321,2.547,322,7.59,323,6.855,324,5.312]],["title/arrowFunction.html#Arrow-Function",[21,0.558,307,2.59]],["body/arrowFunction.html#Arrow-Function",[1,0.287,2,0.363,3,0.396,4,0.406,5,0.457,6,0.577,7,0.69,8,0.764,9,0.994,10,0.713,14,0.038,19,1.842,62,0.768,114,1.84,138,2.193,155,1.634,228,5.335,308,7.995,309,2.42,310,3.798,311,3.442,312,1.247,313,5.906,314,5.065,315,3.84,316,4.322,317,2.744,318,4.563,319,4.322,321,2.534,322,7.56,323,6.819,324,5.268,325,5.881,326,5.881,327,5.881,328,5.881,329,5.881,330,6.819,331,4.865,332,5.881,333,5.881,334,5.881,335,5.881,336,5.881,337,5.881,338,5.881,339,5.881,340,2.744,341,5.881]],["title/asynchronous.html",[342,5.536]],["body/asynchronous.html",[1,0.315,2,0.391,3,0.427,4,0.5,5,0.598,6,0.585,7,0.717,8,0.793,9,0.967,10,0.813,11,1.099,12,0.988,14,0.038,15,2.552,18,2.304,21,1.259,32,3.646,36,1.054,37,1.242,38,0.757,39,0.82,40,0.866,58,1.623,62,0.862,113,3.16,114,2.029,115,4.86,116,3.981,117,3.16,118,4.183,119,2.403,120,1.906,121,2.382,122,3.16,123,2.053,267,2.233,343,3.422,344,3.943,345,5.055,346,2.945,347,3.981,348,3.821,349,3.422,350,6.637,351,3.821,352,2.304,353,2.001,354,4.362,355,3.821,356,3.821,357,1.424,358,3.821,359,3.16,360,1.424,361,1.863,362,3.422]],["title/asynchronous.html#異步",[363,5.536]],["body/asynchronous.html#異步",[1,0.312,2,0.394,3,0.431,4,0.503,5,0.485,6,0.552,7,0.732,8,0.81,9,1.054,10,0.979,11,1.322,14,0.038,15,2.214,21,1.158,36,1.269,37,1.495,38,1.064,39,1.154,40,1.218,58,1.62,62,0.869,113,4.445,114,2.084,115,4.479,116,4.629,117,4.445,118,5.035,119,2.729,120,2.681,121,3.351,122,4.445,123,2.887,343,4.814,364,5.374]],["title/asynchronous.html#setTimeout",[115,2.762]],["body/asynchronous.html#setTimeout",[1,0.302,2,0.365,3,0.399,4,0.464,5,0.605,6,0.567,7,0.611,8,0.676,9,0.639,12,1.073,14,0.038,15,2.559,18,2.953,21,1.26,32,4.353,58,1.525,62,0.818,114,1.71,115,4.678,344,4.338,345,6.034,346,3.24,347,4.455,349,4.387,350,7.429,352,2.953,353,2.564,354,4.798,357,1.825,361,2.388,362,4.387,365,4.897,366,4.897,367,4.897,368,4.897,369,4.897,370,4.897,371,5.572,372,4.897,373,4.897,374,4.897,375,4.387,376,4.897,377,4.897,378,4.897,379,4.897,380,4.897,381,4.897,382,4.897,383,4.897,384,4.897,385,4.897,386,4.897,387,4.897,388,4.897,389,4.897,390,4.897,391,4.897,392,4.897,393,4.897,394,4.897,395,4.721,396,4.897,397,4.897,398,4.897,399,4.897,400,4.897,401,4.897,402,4.897,403,4.897]],["title/core.html",[14,0.015,404,1.321]],["body/core.html",[0,0.458,1,0.316,2,0.386,3,0.414,4,0.476,5,0.529,6,0.58,7,0.745,8,0.799,9,0.969,10,0.971,11,1.102,12,1.101,14,0.038,15,1.538,16,0.419,19,1.561,21,1.241,24,0.389,27,1.03,30,0.689,32,0.403,34,1.801,36,1.071,37,1.209,38,1.203,39,1.182,40,1.211,41,1.431,42,1.24,43,1.247,44,1.085,45,1.08,58,1.279,62,0.848,114,1.855,115,0.588,119,1.572,120,1.617,138,1.431,149,0.8,150,0.923,155,1.304,198,0.254,287,0.335,290,1.056,307,0.389,309,0.676,310,0.311,311,1.25,312,1.015,313,0.484,317,0.783,318,0.484,319,0.458,321,1.779,344,1.263,346,1.082,347,1.142,352,0.376,353,0.327,354,0.344,357,0.944,360,1.43,404,1.129,405,0.458,406,0.624,407,2.095,408,1.056,409,0.559,410,0.559,411,0.559,412,0.559,413,0.559,414,0.458,415,1.49,416,2.228,417,0.624,418,3.954,419,3.449,420,1.325,421,0.867,422,1.361,423,1.751,424,1.179,425,2.759,426,0.437,427,0.867,428,0.735,429,0.792,430,0.762,431,0.857,432,0.389,433,1.111,434,0.735,435,0.766,436,0.867,437,0.403,438,0.319,439,1.046,440,0.403,441,0.403,442,0.365,443,1.374,444,0.403,445,3.126,446,1.111,447,0.711,448,0.735,449,0.389,450,2.719,451,1.471,452,0.389,453,2.05,454,0.376,455,0.365,456,0.365,457,0.365,458,0.365,459,1.26,460,0.624,461,0.365,462,0.669,463,1.697,464,0.365,465,0.365,466,0.365,467,0.365,468,0.365,469,0.365,470,0.365,471,0.365,472,1.036,473,0.8,474,0.689,475,0.344,476,0.365,477,0.365,478,0.689,479,0.365,480,0.365,481,1.08,482,1.129,483,1.131,484,1.406,485,1.139,486,0.865,487,0.865,488,0.881,489,0.913,490,0.881,491,0.834,492,0.881,493,0.695,494,0.736,495,1.179,496,0.624,497,0.354,498,0.354,499,0.354,501,0.624,502,0.354,503,0.419,504,0.327,505,0.354,506,0.925,507,0.344,508,0.344,509,0.344,510,0.344,511,0.344,512,0.624,513,0.488,514,0.471,515,0.488,516,0.507,517,0.722,518,0.488,519,0.507,520,0.517,521,0.517,522,0.517,523,0.507,524,0.517,525,0.539,526,0.539,527,0.539,528,1.528,529,0.539,530,0.539,531,0.539,532,0.539,533,0.319,534,0.335,535,1.741,536,1.061,537,0.624,538,2.377,539,3.552,540,1.061,541,0.633,542,0.901,543,0.633,544,0.624,545,0.901,546,0.335,547,0.335,548,1.772,549,0.335,550,0.335,551,0.562,552,0.335,553,0.327,554,2.814,555,1.036,556,0.335,557,0.335,558,0.335,559,0.335,560,0.335,561,0.55,562,2.515,563,1.502,564,1.233,565,2.6,566,0.484,567,0.624,568,1.056,569,1.387,570,1.056,571,1.056,572,1.056,573,1.056,574,1.056,575,0.516,576,0.516,577,0.516,578,0.516,579,0.516,580,0.516,581,1.301,582,0.516,583,0.516,584,0.516,585,0.484,586,0.484,587,0.559,588,1.301,589,0.689,590,0.484,591,0.915,592,0.484,593,0.484,594,1.056,595,0.484,596,0.624,597,0.826,598,0.419,599,1.398,600,0.484,601,0.484,602,0.484,603,0.762,604,0.335,605,0.484,606,0.484,607,2.118,608,0.915,609,1.301,610,0.484,611,1.179,612,0.484,613,1.233,614,0.975,615,1.233,616,0.708,617,0.458,618,0.458,619,0.458,620,0.458,621,0.458,622,0.419,623,1.142,624,0.762,625,1.326,626,0.624,627,0.458,628,0.458,629,0.458,630,0.458,631,0.624,632,0.437,633,0.437,634,0.624,635,0.792,636,0.437,637,0.437,638,0.437,639,0.419,640,0.437,641,0.437,642,0.437,643,0.516,644,0.792,645,0.419,646,0.792,647,0.419,648,0.419,649,1.126,650,1.126,651,0.419,652,0.792,653,0.419,654,1.428,655,0.624,656,0.419,657,0.419,658,0.419,659,0.792,660,2.295,661,0.624,662,0.624,663,1.282,664,0.403,665,0.98,666,0.403,667,0.762,668,0.403,669,0.403,670,0.403,671,0.403,672,0.335,673,0.403,674,0.403,675,1.061,676,0.389,677,0.389,678,0.389,679,0.624,680,0.735,681,2.221,682,1.113,683,0.389,684,0.344,685,1.697,686,2.148,687,0.376,688,0.376,689,0.376,690,0.98,691,0.98,692,0.689,693,1.751,694,1.064,695,0.952,696,0.376,697,0.624,698,0.624,699,1.904,700,0.559,701,0.559,702,0.559,703,1.056,704,0.559,705,0.559,706,0.458,707,0.975,708,0.458,709,0.559,710,0.952,711,0.711,712,0.735,713,1.861,714,1.175,715,0.624,716,1.056,717,0.484,718,0.484,719,0.559,720,0.559,721,0.559,722,0.559,723,2.6,724,2.6,725,0.559,726,0.559,727,1.387,728,0.559,729,2.269,730,3.438,731,0.624,732,0.559,733,1.398,734,1.387,735,0.624,736,1.904,737,1.056,738,0.559,739,1.056,740,0.559,741,0.559,742,2.489,743,1.387,744,1.876,745,0.516,746,0.516,747,1.965,748,0.915,749,1.904,750,0.516,751,0.516,752,0.624,753,0.335,754,0.975,755,0.516,756,0.516,757,0.516,758,0.516,759,0.516,760,0.516,761,0.867,762,0.516,763,0.867,764,0.516,765,0.867,766,0.516,767,0.867,768,0.516,769,1.301,770,1.502,771,0.559,772,1.301,773,0.559,774,0.559,775,0.624,776,0.559,777,0.559,778,0.559,779,0.559,780,1.056,781,1.179,782,0.559,783,0.559,784,0.559,785,null,786,1.056,787,0.559,788,0.559,789,0.559,790,0.559,791,0.559,792,0.319,793,0.792,794,2.6,795,0.559,796,0.559,797,1.056,798,1.502,799,0.559,800,0.559,801,1.056,802,0.559,803,0.559,804,0.559,805,1.056,806,1.502,807,1.502,808,1.056,809,3.393,810,0.975,811,0.559,812,1.904,813,0.559,814,1.084,815,1.056,816,1.179,817,0.559,818,0.867,819,1.056,820,0.559,821,0.559,822,0.559,823,0.559,824,0.559,825,0.624,826,0.559,827,2.48,828,1.056,829,0.559,830,1.126,831,0.975,832,0.484,833,0.559,834,1.056,835,0.516,836,0.559,837,0.559,838,0.559,839,0.559,840,0.559,841,0.559,842,0.624,843,0.624,844,0.559,845,0.559,846,0.559,847,0.559,848,1.502,849,1.562,850,0.915,851,0.975,852,0.624,853,1.387,854,0.559,855,1.056,856,0.559,857,1.502,858,1.056,859,0.559,860,0.559,861,0.559,862,0.458,863,1.056,864,0.559,865,0.559,866,0.559,867,0.559,868,0.559,869,0.559,870,0.559,871,0.559,872,0.403,873,1.056,874,1.056,875,1.056,876,1.904,877,1.904,878,0.559,879,1.056,880,1.056]],["title/core.html#JavaScript-直譯器轉換過程",[404,1.321,881,4.154]],["body/core.html#JavaScript-直譯器轉換過程",[1,0.316,2,0.386,3,0.401,4,0.461,5,0.502,6,0.537,7,0.698,8,0.734,9,0.892,10,1.014,11,0.865,12,1.097,14,0.038,15,1.445,19,2.292,21,1.15,27,1.904,34,1.939,36,0.971,37,0.867,38,0.927,39,0.642,40,0.678,41,1.217,42,0.81,43,0.858,44,0.845,45,0.909,58,1.403,62,0.865,114,2.018,115,0.866,119,0.909,138,1.901,149,1.878,150,1.488,155,0.846,168,0.958,306,2.173,310,0.866,311,1.153,312,0.284,317,0.81,321,2.173,331,1.435,340,0.81,346,0.647,353,0.909,357,0.647,360,0.647,404,1.252,407,2.473,408,2.678,409,1.555,410,1.555,411,1.555,412,1.555,413,1.555,414,1.275,416,1.78,418,0.932,419,3.717,420,1.864,421,2.197,422,2.046,426,1.216,427,1.275,428,1.864,429,2.008,430,1.932,431,0.887,432,1.082,433,1.312,434,1.864,435,0.793,436,2.197,437,1.121,438,0.887,439,2.456,440,1.121,441,1.121,442,1.014,444,1.121,445,2.657,446,2.316,447,1.047,448,1.864,449,1.082,450,2.532,451,2.561,452,1.082,453,1.773,454,1.047,455,1.014,456,1.014,457,1.014,458,1.014,459,1.726,461,1.014,462,0.985,463,3.086,464,1.014,465,1.014,466,1.014,467,1.014,468,1.014,469,1.014,470,1.014,471,1.014,472,2.283,473,1.878,474,1.748,475,0.958,476,1.014,477,1.014,478,1.748,479,1.014,480,1.014,481,0.909,482,0.951,483,1.043,484,1.096,485,1.173,486,1.216,487,1.216,488,1.239,489,1.078,490,1.239,491,1.173,492,1.239,493,1.239,494,1.728,497,0.985,498,0.985,499,0.985,502,0.985,504,0.909,505,0.985,506,0.958,507,0.958,508,0.958,509,0.958,510,0.958,511,0.958,513,0.719,514,0.693,515,0.719,516,0.747,517,0.747,518,0.719,519,0.747,520,0.761,521,0.761,522,0.761,523,0.747,524,0.761,525,0.793,526,0.793,527,0.793,528,0.747,529,0.793,530,0.793,531,0.793,532,0.793,533,0.887,534,0.932,535,3.321,536,1.492,538,2.232,540,0.866,541,0.932,542,0.932,543,0.932,545,0.932,546,0.932,547,0.932,548,1.965,549,0.932,550,0.932,551,0.827,552,0.932,553,0.909,555,2.283,556,0.932,557,0.932,558,0.932,559,0.932,560,0.932,561,0.81,882,1.735,883,1.735,884,1.735,885,1.735,886,2.99,887,1.735,888,1.735,889,1.735,890,1.735,891,1.735,892,1.735,893,2.473,894,1.555,895,3.047,896,1.555,897,1.555,898,1.555,899,1.555,900,3.528,901,1.555,902,1.555,903,1.555,904,1.555,905,3.084,906,1.555,907,3.528,908,1.555,909,1.555,910,1.555,911,1.555,912,1.555,913,2.836,914,1.555,915,1.121,916,1.555,917,1.555,918,1.435,919,1.435,920,1.435,921,1.435,922,1.435,923,1.435,924,1.435,925,1.435,926,1.435,927,1.435,928,1.435,929,1.435,930,1.435,931,1.346,932,1.346,933,1.346,934,1.346,935,1.346,936,1.346,937,2.095,938,1.275,939,1.275,940,1.275,941,1.275,942,1.275,943,1.65,944,0.909,945,2.095,946,1.216,947,1.216,948,1.216,949,1.932,950,1.166,951,1.166,952,1.166,953,1.166,954,1.166,955,1.166,956,1.166,957,1.166,958,3.598,959,1.166,960,1.166,961,2.008,962,2.008,963,1.166,964,1.166,965,1.166,966,1.166,967,1.166,968,1.166,969,1.166,970,1.082,971,1.121,972,1.121,973,1.121,974,1.121,975,1.121,976,1.082,977,1.082,978,1.082,979,1.082,980,1.014,981,1.082,982,1.082,983,1.082,984,1.082,985,1.082,986,1.082,987,1.082,988,1.082,989,1.082,990,1.748,991,1.014,992,1.047,993,1.047,994,1.047,995,1.047,996,1.047,997,1.047,998,1.047,999,1.047,1000,1.047,1001,1.047,1002,1.697,1003,1.697,1004,1.014,1005,1.014,1006,1.014,1007,1.014,1008,1.014,1009,1.014,1010,1.748,1011,1.014,1012,1.014,1013,1.014,1014,1.014,1015,1.014,1016,1.014,1017,1.014,1018,1.014,1019,1.014,1020,1.014,1021,1.014,1022,1.014,1023,1.014,1024,0.985,1025,0.909,1026,0.985,1027,0.985,1028,0.958,1029,0.958,1030,0.958,1031,0.958,1032,0.932,1033,0.958,1034,0.932,1035,0.958,1036,0.958,1037,0.958,1038,0.958,1039,0.958,1040,0.958,1041,0.958,1042,0.932,1043,0.958,1044,0.958,1045,0.827,1046,0.958,1047,0.887,1048,0.958,1049,1.262,1050,0.958,1051,0.958,1052,1.65,1053,0.958,1054,0.958,1055,1.65,1056,1.65,1057,1.65,1058,0.958,1059,0.958,1060,0.958,1061,0.958,1062,0.958,1063,0.932]],["title/core.html#提升（Hoisting）",[893,4.579]],["body/core.html#提升（Hoisting）",[1,0.316,2,0.386,3,0.402,4,0.463,5,0.504,6,0.539,7,0.702,8,0.738,9,0.897,10,1.018,11,0.872,12,1.1,14,0.038,15,1.459,19,2.304,21,1.154,27,1.923,34,1.959,36,0.978,37,0.875,38,0.936,39,0.65,40,0.686,41,1.229,42,0.82,43,0.868,44,0.856,45,0.92,58,1.41,62,0.866,114,2.021,115,0.879,119,0.92,138,1.912,149,1.899,150,1.503,155,0.855,168,0.972,306,2.198,310,0.879,311,1.167,312,0.288,317,0.822,321,2.188,340,0.822,346,0.656,353,0.922,357,0.656,360,0.656,404,1.266,416,1.795,418,0.946,419,3.733,420,1.888,421,2.225,422,2.063,426,1.234,427,1.294,428,1.888,429,2.034,430,1.956,431,0.9,432,1.098,433,1.328,434,1.888,435,0.805,436,2.225,437,1.138,438,0.9,439,2.483,440,1.138,441,1.138,442,1.029,444,1.138,445,2.683,446,2.337,447,1.062,448,1.888,449,1.098,450,2.552,451,2.58,452,1.098,453,1.786,454,1.062,455,1.029,456,1.029,457,1.029,458,1.029,459,1.737,461,1.029,462,0.999,463,3.113,464,1.029,465,1.029,466,1.029,467,1.029,468,1.029,469,1.029,470,1.029,471,1.029,472,2.305,473,1.899,474,1.77,475,0.972,476,1.029,477,1.029,478,1.77,479,1.029,480,1.029,481,0.92,482,0.963,483,1.057,484,1.109,485,1.188,486,1.231,487,1.231,488,1.254,489,1.091,490,1.254,491,1.188,492,1.254,493,1.254,494,1.747,497,0.999,498,0.999,499,0.999,502,0.999,504,0.922,505,0.999,506,0.972,507,0.972,508,0.972,509,0.972,510,0.972,511,0.972,513,0.729,514,0.703,515,0.729,516,0.758,517,0.758,518,0.729,519,0.758,520,0.773,521,0.773,522,0.773,523,0.758,524,0.773,525,0.805,526,0.805,527,0.805,528,0.758,529,0.805,530,0.805,531,0.805,532,0.805,533,0.9,534,0.946,535,3.345,536,1.51,538,2.254,540,0.879,541,0.946,542,0.946,543,0.946,545,0.946,546,0.946,547,0.946,548,1.987,549,0.946,550,0.946,551,0.84,552,0.946,553,0.922,555,2.305,556,0.946,557,0.946,558,0.946,559,0.946,560,0.946,561,0.822,893,1.457,894,1.577,895,3.068,896,1.577,897,1.577,898,1.577,899,1.577,900,3.567,901,1.577,902,1.577,903,1.577,904,1.577,905,3.107,906,1.577,907,3.567,908,1.577,909,1.577,910,1.577,911,1.577,912,1.577,913,2.862,914,1.577,915,1.138,916,1.577,917,1.577,918,1.457,919,1.457,920,1.457,921,1.457,922,1.457,923,1.457,924,1.457,925,1.457,926,1.457,927,1.457,928,1.457,929,1.457,930,1.457,931,1.366,932,1.366,933,1.366,934,1.366,935,1.366,936,1.366,937,2.122,938,1.294,939,1.294,940,1.294,941,1.294,942,1.294,943,1.671,944,0.922,945,2.122,946,1.234,947,1.234,948,1.234,949,1.956,950,1.183,951,1.183,952,1.183,953,1.183,954,1.183,955,1.183,956,1.183,957,1.183,958,3.627,959,1.183,960,1.183,961,2.034,962,2.034,963,1.183,964,1.183,965,1.183,966,1.183,967,1.183,968,1.183,969,1.183,970,1.098,971,1.138,972,1.138,973,1.138,974,1.138,975,1.138,976,1.098,977,1.098,978,1.098,979,1.098,980,1.029,981,1.098,982,1.098,983,1.098,984,1.098,985,1.098,986,1.098,987,1.098,988,1.098,989,1.098,990,1.77,991,1.029,992,1.062,993,1.062,994,1.062,995,1.062,996,1.062,997,1.062,998,1.062,999,1.062,1000,1.062,1001,1.062,1002,1.718,1003,1.718,1004,1.029,1005,1.029,1006,1.029,1007,1.029,1008,1.029,1009,1.029,1010,1.77,1011,1.029,1012,1.029,1013,1.029,1014,1.029,1015,1.029,1016,1.029,1017,1.029,1018,1.029,1019,1.029,1020,1.029,1021,1.029,1022,1.029,1023,1.029,1024,0.999,1025,0.922,1026,0.999,1027,0.999,1028,0.972,1029,0.972,1030,0.972,1031,0.972,1032,0.946,1033,0.972,1034,0.946,1035,0.972,1036,0.972,1037,0.972,1038,0.972,1039,0.972,1040,0.972,1041,0.972,1042,0.946,1043,0.972,1044,0.972,1045,0.84,1046,0.972,1047,0.9,1048,0.972,1049,1.278,1050,0.972,1051,0.972,1052,1.671,1053,0.972,1054,0.972,1055,1.671,1056,1.671,1057,1.671,1058,0.972,1059,0.972,1060,0.972,1061,0.972,1062,0.972,1063,0.946]],["title/core.html#同步-非同步",[918,4.579]],["body/core.html#同步-非同步",[1,0.315,2,0.38,3,0.393,4,0.439,5,0.485,6,0.528,7,0.682,8,0.701,9,0.869,10,1.041,11,0.847,12,1.075,14,0.038,15,1.595,19,2.355,21,1.011,27,2.102,34,2.141,36,0.983,37,0.957,38,1.024,39,0.73,40,0.77,41,1.343,42,0.921,43,0.975,44,0.961,45,1.033,58,1.466,62,0.867,114,2.028,115,1.006,119,1.033,138,1.954,149,2.1,150,1.643,155,0.946,168,1.113,306,2.431,310,1.006,311,1.311,312,0.33,321,1.721,340,0.941,346,0.752,353,1.056,357,0.752,360,0.752,404,1.081,416,1.049,418,1.084,420,1.258,422,1.833,426,1.414,427,1.483,428,2.119,429,2.283,430,2.196,431,1.031,432,1.258,433,1.491,434,2.119,435,0.922,436,2.498,437,1.304,438,1.031,439,2.746,440,1.304,441,1.304,442,1.179,444,1.304,445,2.934,446,2.532,447,1.217,448,2.119,449,1.258,450,2.744,451,2.757,452,1.258,453,1.909,454,1.217,455,1.179,456,1.179,457,1.179,458,1.179,459,1.838,461,1.179,462,1.145,463,3.373,464,1.179,465,1.179,466,1.179,467,1.179,468,1.179,469,1.179,470,1.179,471,1.179,472,2.52,473,2.1,474,1.987,475,1.113,476,1.179,477,1.179,478,1.987,479,1.179,480,1.179,481,1.033,482,1.081,483,1.186,484,1.246,485,1.334,486,1.382,487,1.382,488,1.408,489,1.225,490,1.408,491,1.334,492,1.408,493,1.408,494,1.933,497,1.145,498,1.145,499,1.145,502,1.145,504,1.056,505,1.145,506,1.113,507,1.113,508,1.113,509,1.113,510,1.113,511,1.113,513,0.836,514,0.806,515,0.836,516,0.868,517,0.868,518,0.836,519,0.868,520,0.885,521,0.885,522,0.885,523,0.868,524,0.885,525,0.922,526,0.922,527,0.922,528,0.868,529,0.922,530,0.922,531,0.922,532,0.922,533,1.031,534,1.084,535,3.575,536,1.696,538,2.465,540,1.006,541,1.084,542,1.084,543,1.084,545,1.084,546,1.084,547,1.084,548,2.197,549,1.084,550,1.084,551,0.962,552,1.084,553,1.056,555,2.52,556,1.084,557,1.084,558,1.084,559,1.084,560,1.084,561,0.941,895,2.692,905,3.121,913,1.826,919,1.669,920,1.669,921,1.669,922,1.669,923,1.669,924,1.669,925,1.669,926,1.669,927,1.669,928,1.669,929,1.669,930,1.669,931,1.565,932,1.565,933,1.565,934,1.565,935,1.565,936,1.565,937,2.382,938,1.483,939,1.483,940,1.483,941,1.483,942,1.483,943,1.876,944,1.056,945,2.382,946,1.414,947,1.414,948,1.414,949,2.196,950,1.355,951,1.355,952,1.355,953,1.355,954,1.355,955,1.355,956,1.355,957,1.355,958,3.9,959,1.355,960,1.355,961,2.283,962,2.283,963,1.355,964,1.355,965,1.355,966,1.355,967,1.355,968,1.355,969,1.355,970,1.258,971,1.304,972,1.304,973,1.304,974,1.304,975,1.304,976,1.258,977,1.258,978,1.258,979,1.258,980,1.179,981,1.258,982,1.258,983,1.258,984,1.258,985,1.258,986,1.258,987,1.258,988,1.258,989,1.258,990,1.987,991,1.179,992,1.217,993,1.217,994,1.217,995,1.217,996,1.217,997,1.217,998,1.217,999,1.217,1000,1.217,1001,1.217,1002,1.929,1003,1.929,1004,1.179,1005,1.179,1006,1.179,1007,1.179,1008,1.179,1009,1.179,1010,1.987,1011,1.179,1012,1.179,1013,1.179,1014,1.179,1015,1.179,1016,1.179,1017,1.179,1018,1.179,1019,1.179,1020,1.179,1021,1.179,1022,1.179,1023,1.179,1024,1.145,1025,1.056,1026,1.145,1027,1.145,1028,1.113,1029,1.113,1030,1.113,1031,1.113,1032,1.084,1033,1.113,1034,1.084,1035,1.113,1036,1.113,1037,1.113,1038,1.113,1039,1.113,1040,1.113,1041,1.113,1042,1.084,1043,1.113,1044,1.113,1045,0.962,1046,1.113,1047,1.031,1048,1.113,1049,1.435,1050,1.113,1051,1.113,1052,1.876,1053,1.113,1054,1.113,1055,1.876,1056,1.876,1057,1.876,1058,1.113,1059,1.113,1060,1.113,1061,1.113,1062,1.113,1063,1.084]],["title/core.html#LHS",[427,4.069]],["body/core.html#LHS",[1,0.315,2,0.379,3,0.391,4,0.442,5,0.488,6,0.532,7,0.687,8,0.707,9,0.877,10,1.046,11,0.857,12,1.079,14,0.038,15,1.615,19,2.371,21,0.985,27,2.128,34,2.168,36,0.992,37,0.969,38,1.036,39,0.742,40,0.783,41,1.36,42,0.936,43,0.991,44,0.977,45,1.05,58,1.474,62,0.867,114,2.028,119,1.05,138,1.968,149,2.13,150,1.664,155,0.959,168,1.135,306,2.465,310,1.026,311,1.332,312,0.337,321,1.742,340,0.96,346,0.766,353,1.077,357,0.766,360,0.766,404,1.098,416,1.066,418,1.105,420,1.282,422,1.856,428,2.154,429,2.32,430,2.232,431,1.051,432,1.282,433,1.516,434,2.154,435,0.94,436,2.539,437,1.329,438,1.051,439,2.785,440,1.329,441,1.329,442,1.202,444,1.329,445,2.97,446,2.56,447,1.24,448,2.154,449,1.282,450,2.772,451,2.782,452,1.282,453,1.926,454,1.24,455,1.202,456,1.202,457,1.202,458,1.202,459,1.852,461,1.202,462,1.167,463,3.41,464,1.202,465,1.202,466,1.202,467,1.202,468,1.202,469,1.202,470,1.202,471,1.202,472,2.551,473,2.13,474,2.019,475,1.135,476,1.202,477,1.202,478,2.019,479,1.202,480,1.202,481,1.05,482,1.098,483,1.205,484,1.266,485,1.355,486,1.405,487,1.405,488,1.431,489,1.245,490,1.431,491,1.355,492,1.431,493,1.431,494,1.96,497,1.167,498,1.167,499,1.167,502,1.167,504,1.077,505,1.167,506,1.135,507,1.135,508,1.135,509,1.135,510,1.135,511,1.135,513,0.852,514,0.821,515,0.852,516,0.885,517,0.885,518,0.852,519,0.885,520,0.902,521,0.902,522,0.902,523,0.885,524,0.902,525,0.94,526,0.94,527,0.94,528,0.885,529,0.94,530,0.94,531,0.94,532,0.94,533,1.051,534,1.105,535,3.607,536,1.723,538,2.495,540,1.026,541,1.105,542,1.105,543,1.105,545,1.105,546,1.105,547,1.105,548,2.228,549,1.105,550,1.105,551,0.981,552,1.105,553,1.077,555,2.551,556,1.105,557,1.105,558,1.105,559,1.105,560,1.105,561,0.96,895,2.722,905,3.151,913,1.856,931,1.596,932,1.596,933,1.596,934,1.596,935,1.596,936,1.596,937,2.421,938,1.511,939,1.511,940,1.511,941,1.511,942,1.511,943,1.906,944,1.077,945,2.421,946,1.441,947,1.441,948,1.441,949,2.232,950,1.381,951,1.381,952,1.381,953,1.381,954,1.381,955,1.381,956,1.381,957,1.381,958,3.939,959,1.381,960,1.381,961,2.32,962,2.32,963,1.381,964,1.381,965,1.381,966,1.381,967,1.381,968,1.381,969,1.381,970,1.282,971,1.329,972,1.329,973,1.329,974,1.329,975,1.329,976,1.282,977,1.282,978,1.282,979,1.282,980,1.202,981,1.282,982,1.282,983,1.282,984,1.282,985,1.282,986,1.282,987,1.282,988,1.282,989,1.282,990,2.019,991,1.202,992,1.24,993,1.24,994,1.24,995,1.24,996,1.24,997,1.24,998,1.24,999,1.24,1000,1.24,1001,1.24,1002,1.96,1003,1.96,1004,1.202,1005,1.202,1006,1.202,1007,1.202,1008,1.202,1009,1.202,1010,2.019,1011,1.202,1012,1.202,1013,1.202,1014,1.202,1015,1.202,1016,1.202,1017,1.202,1018,1.202,1019,1.202,1020,1.202,1021,1.202,1022,1.202,1023,1.202,1024,1.167,1025,1.077,1026,1.167,1027,1.167,1028,1.135,1029,1.135,1030,1.135,1031,1.135,1032,1.105,1033,1.135,1034,1.105,1035,1.135,1036,1.135,1037,1.135,1038,1.135,1039,1.135,1040,1.135,1041,1.135,1042,1.105,1043,1.135,1044,1.135,1045,0.981,1046,1.135,1047,1.051,1048,1.135,1049,1.458,1050,1.135,1051,1.135,1052,1.906,1053,1.135,1054,1.135,1055,1.906,1056,1.906,1057,1.906,1058,1.135,1059,1.135,1060,1.135,1061,1.135,1062,1.135,1063,1.105]],["title/core.html#陳述式-表達式",[937,2.911,938,3.053]],["body/core.html#陳述式-表達式",[1,0.315,2,0.38,3,0.393,4,0.444,5,0.491,6,0.535,7,0.692,8,0.713,9,0.885,10,1.051,11,0.868,12,1.084,14,0.038,15,1.635,19,2.389,21,0.993,27,2.156,34,2.196,36,1.003,37,0.981,38,1.05,39,0.754,40,0.796,41,1.377,42,0.952,43,1.008,44,0.993,45,1.068,58,1.482,62,0.869,114,2.033,119,1.068,138,1.847,149,2.161,150,1.685,155,0.973,168,1.158,306,2.501,310,1.047,311,1.355,312,0.344,321,1.764,340,0.979,346,0.782,353,1.099,357,0.782,360,0.782,404,0.667,416,1.084,418,1.127,422,1.88,433,0.921,434,1.308,437,1.356,438,1.072,439,2.826,440,1.356,441,1.356,442,1.227,444,1.356,445,3.008,446,2.589,447,1.266,448,2.191,449,1.308,450,2.8,451,2.808,452,1.308,453,1.944,454,1.266,455,1.227,456,1.227,457,1.227,458,1.227,459,1.867,461,1.227,462,1.191,463,3.449,464,1.227,465,1.227,466,1.227,467,1.227,468,1.227,469,1.227,470,1.227,471,1.227,472,2.584,473,2.161,474,2.054,475,1.158,476,1.227,477,1.227,478,2.054,479,1.227,480,1.227,481,1.068,482,1.117,483,1.226,484,1.288,485,1.379,486,1.429,487,1.429,488,1.456,489,1.266,490,1.456,491,1.379,492,1.456,493,1.456,494,1.989,497,1.191,498,1.191,499,1.191,502,1.191,504,1.099,505,1.191,506,1.158,507,1.158,508,1.158,509,1.158,510,1.158,511,1.158,513,0.869,514,0.838,515,0.869,516,0.903,517,0.903,518,0.869,519,0.903,520,0.921,521,0.921,522,0.921,523,0.903,524,0.921,525,0.959,526,0.959,527,0.959,528,0.903,529,0.959,530,0.959,531,0.959,532,0.959,533,1.072,534,1.127,535,3.641,536,1.753,538,2.527,540,1.047,541,1.127,542,1.127,543,1.127,545,1.127,546,1.127,547,1.127,548,2.261,549,1.127,550,1.127,551,1.001,552,1.127,553,1.099,555,2.584,556,1.127,557,1.127,558,1.127,559,1.127,560,1.127,561,0.979,895,2.753,905,3.184,913,1.888,937,1.471,939,1.542,940,1.542,941,1.542,942,1.542,943,1.939,944,1.099,945,2.463,946,1.471,947,1.471,948,1.471,949,2.27,950,1.41,951,1.41,952,1.41,953,1.41,954,1.41,955,1.41,956,1.41,957,1.41,958,3.979,959,1.41,960,1.41,961,2.36,962,2.36,963,1.41,964,1.41,965,1.41,966,1.41,967,1.41,968,1.41,969,1.41,970,1.308,971,1.356,972,1.356,973,1.356,974,1.356,975,1.356,976,1.308,977,1.308,978,1.308,979,1.308,980,1.227,981,1.308,982,1.308,983,1.308,984,1.308,985,1.308,986,1.308,987,1.308,988,1.308,989,1.308,990,2.054,991,1.227,992,1.266,993,1.266,994,1.266,995,1.266,996,1.266,997,1.266,998,1.266,999,1.266,1000,1.266,1001,1.266,1002,1.994,1003,1.994,1004,1.227,1005,1.227,1006,1.227,1007,1.227,1008,1.227,1009,1.227,1010,2.054,1011,1.227,1012,1.227,1013,1.227,1014,1.227,1015,1.227,1016,1.227,1017,1.227,1018,1.227,1019,1.227,1020,1.227,1021,1.227,1022,1.227,1023,1.227,1024,1.191,1025,1.099,1026,1.191,1027,1.191,1028,1.158,1029,1.158,1030,1.158,1031,1.158,1032,1.127,1033,1.158,1034,1.127,1035,1.158,1036,1.158,1037,1.158,1038,1.158,1039,1.158,1040,1.158,1041,1.158,1042,1.127,1043,1.158,1044,1.158,1045,1.001,1046,1.158,1047,1.072,1048,1.158,1049,1.483,1050,1.158,1051,1.158,1052,1.939,1053,1.158,1054,1.158,1055,1.939,1056,1.939,1057,1.939,1058,1.158,1059,1.158,1060,1.158,1061,1.158,1062,1.158,1063,1.127]],["title/core.html#立即函式",[944,2.899]],["body/core.html#立即函式",[1,0.314,2,0.38,3,0.392,4,0.44,5,0.486,6,0.527,7,0.678,8,0.689,9,0.846,10,1.046,11,0.884,12,1.074,14,0.038,15,1.666,19,2.415,21,1.005,27,2.196,34,2.237,36,1.018,37,1,38,1.069,39,0.773,40,0.816,41,1.403,42,0.976,43,1.033,44,1.018,45,1.095,58,1.494,62,0.871,114,2.039,138,1.87,149,2.208,150,1.717,155,0.994,168,1.193,306,2.555,310,1.079,311,1.389,312,0.354,321,1.797,340,1.009,346,0.806,357,0.806,360,0.806,404,0.687,416,0.667,422,1.915,433,0.949,434,1.348,439,2.887,440,1.397,441,1.397,442,1.264,444,1.397,445,3.065,446,2.632,447,1.304,448,2.246,449,1.348,450,2.843,451,2.846,452,1.348,453,1.971,454,1.304,455,1.264,456,1.264,457,1.264,458,1.264,459,1.889,461,1.264,462,1.227,463,3.507,464,1.264,465,1.264,466,1.264,467,1.264,468,1.264,469,1.264,470,1.264,471,1.264,472,2.633,473,2.208,474,2.105,475,1.193,476,1.264,477,1.264,478,2.105,479,1.264,480,1.264,481,1.095,482,1.145,483,1.257,484,1.32,485,1.413,486,1.465,487,1.465,488,1.492,489,1.298,490,1.492,491,1.413,492,1.492,493,1.492,494,2.031,497,1.227,498,1.227,499,1.227,502,1.227,504,1.132,505,1.227,506,1.193,507,1.193,508,1.193,509,1.193,510,1.193,511,1.193,513,0.896,514,0.863,515,0.896,516,0.93,517,0.93,518,0.896,519,0.93,520,0.949,521,0.949,522,0.949,523,0.93,524,0.949,525,0.988,526,0.988,527,0.988,528,0.93,529,0.988,530,0.988,531,0.988,532,0.988,533,1.104,534,1.161,535,3.691,536,1.797,538,2.575,540,1.079,541,1.161,542,1.161,543,1.161,545,1.161,546,1.161,547,1.161,548,2.31,549,1.161,550,1.161,551,1.031,552,1.161,553,1.132,555,2.633,556,1.161,557,1.161,558,1.161,559,1.161,560,1.161,561,1.009,895,2.799,905,3.232,913,1.935,943,1.193,945,2.524,946,1.515,947,1.515,948,1.515,949,2.327,950,1.452,951,1.452,952,1.452,953,1.452,954,1.452,955,1.452,956,1.452,957,1.452,958,4.039,959,1.452,960,1.452,961,2.419,962,2.419,963,1.452,964,1.452,965,1.452,966,1.452,967,1.452,968,1.452,969,1.452,970,1.348,971,1.397,972,1.397,973,1.397,974,1.397,975,1.397,976,1.348,977,1.348,978,1.348,979,1.348,980,1.264,981,1.348,982,1.348,983,1.348,984,1.348,985,1.348,986,1.348,987,1.348,988,1.348,989,1.348,990,2.105,991,1.264,992,1.304,993,1.304,994,1.304,995,1.304,996,1.304,997,1.304,998,1.304,999,1.304,1000,1.304,1001,1.304,1002,2.044,1003,2.044,1004,1.264,1005,1.264,1006,1.264,1007,1.264,1008,1.264,1009,1.264,1010,2.105,1011,1.264,1012,1.264,1013,1.264,1014,1.264,1015,1.264,1016,1.264,1017,1.264,1018,1.264,1019,1.264,1020,1.264,1021,1.264,1022,1.264,1023,1.264,1024,1.227,1025,1.132,1026,1.227,1027,1.227,1028,1.193,1029,1.193,1030,1.193,1031,1.193,1032,1.161,1033,1.193,1034,1.161,1035,1.193,1036,1.193,1037,1.193,1038,1.193,1039,1.193,1040,1.193,1041,1.193,1042,1.161,1043,1.193,1044,1.193,1045,1.031,1046,1.193,1047,1.104,1048,1.193,1049,1.52,1050,1.193,1051,1.193,1052,1.988,1053,1.193,1054,1.193,1055,1.988,1056,1.988,1057,1.988,1058,1.193,1059,1.193,1060,1.193,1061,1.193,1062,1.193,1063,1.161]],["title/core.html#ASI-自動分號插入",[439,2.59,949,2.684]],["body/core.html#ASI-自動分號插入",[1,0.313,2,0.379,3,0.389,4,0.442,5,0.488,6,0.53,7,0.682,8,0.694,9,0.853,10,1.051,11,0.893,12,1.077,14,0.038,15,1.683,19,2.428,21,0.974,27,2.218,34,2.259,36,1.026,37,1.01,38,1.08,39,0.784,40,0.827,41,1.417,42,0.989,43,1.047,44,1.032,45,1.11,58,1.5,62,0.871,114,2.039,138,1.883,149,2.233,150,1.734,155,1.005,168,1.212,306,2.584,310,1.096,311,1.407,312,0.36,321,1.815,340,1.025,346,0.819,357,0.819,360,0.819,404,0.698,416,0.678,422,1.934,433,0.964,434,1.37,439,2.276,440,1.419,441,1.419,442,1.284,444,1.419,445,3.095,446,2.656,447,1.325,448,2.276,449,1.37,450,2.865,451,2.867,452,1.37,453,1.985,454,1.325,455,1.284,456,1.284,457,1.284,458,1.284,459,1.901,461,1.284,462,1.247,463,3.538,464,1.284,465,1.284,466,1.284,467,1.284,468,1.284,469,1.284,470,1.284,471,1.284,472,2.659,473,2.233,474,2.133,475,1.212,476,1.284,477,1.284,478,2.133,479,1.284,480,1.284,481,1.11,482,1.16,483,1.274,484,1.338,485,1.432,486,1.484,487,1.484,488,1.512,489,1.316,490,1.512,491,1.432,492,1.512,493,1.512,494,2.055,497,1.247,498,1.247,499,1.247,502,1.247,504,1.15,505,1.247,506,1.212,507,1.212,508,1.212,509,1.212,510,1.212,511,1.212,513,0.91,514,0.877,515,0.91,516,0.945,517,0.945,518,0.91,519,0.945,520,0.964,521,0.964,522,0.964,523,0.945,524,0.964,525,1.004,526,1.004,527,1.004,528,0.945,529,1.004,530,1.004,531,1.004,532,1.004,533,1.122,534,1.18,535,3.718,536,1.821,538,2.601,540,1.096,541,1.18,542,1.18,543,1.18,545,1.18,546,1.18,547,1.18,548,2.336,549,1.18,550,1.18,551,1.047,552,1.18,553,1.15,555,2.659,556,1.18,557,1.18,558,1.18,559,1.18,560,1.18,561,1.025,895,2.545,905,3.258,913,1.961,943,1.212,949,1.419,950,1.475,951,1.475,952,1.475,953,1.475,954,1.475,955,1.475,956,1.475,957,1.475,958,4.072,959,1.475,960,1.475,961,2.452,962,2.452,963,1.475,964,1.475,965,1.475,966,1.475,967,1.475,968,1.475,969,1.475,970,1.37,971,1.419,972,1.419,973,1.419,974,1.419,975,1.419,976,1.37,977,1.37,978,1.37,979,1.37,980,1.284,981,1.37,982,1.37,983,1.37,984,1.37,985,1.37,986,1.37,987,1.37,988,1.37,989,1.37,990,2.133,991,1.284,992,1.325,993,1.325,994,1.325,995,1.325,996,1.325,997,1.325,998,1.325,999,1.325,1000,1.325,1001,1.325,1002,2.071,1003,2.071,1004,1.284,1005,1.284,1006,1.284,1007,1.284,1008,1.284,1009,1.284,1010,2.133,1011,1.284,1012,1.284,1013,1.284,1014,1.284,1015,1.284,1016,1.284,1017,1.284,1018,1.284,1019,1.284,1020,1.284,1021,1.284,1022,1.284,1023,1.284,1024,1.247,1025,1.15,1026,1.247,1027,1.247,1028,1.212,1029,1.212,1030,1.212,1031,1.212,1032,1.18,1033,1.212,1034,1.18,1035,1.212,1036,1.212,1037,1.212,1038,1.212,1039,1.212,1040,1.212,1041,1.212,1042,1.18,1043,1.212,1044,1.212,1045,1.047,1046,1.212,1047,1.122,1048,1.212,1049,1.541,1050,1.212,1051,1.212,1052,2.014,1053,1.212,1054,1.212,1055,2.014,1056,2.014,1057,2.014,1058,1.212,1059,1.212,1060,1.212,1061,1.212,1062,1.212,1063,1.18]],["title/core.html#動態型別",[970,3.452]],["body/core.html#動態型別",[1,0.314,2,0.38,3,0.387,4,0.435,5,0.478,6,0.529,7,0.678,8,0.719,9,0.885,10,1.07,11,0.936,12,1.076,14,0.038,15,1.764,19,2.494,21,0.665,27,2.326,34,2.369,36,1.065,37,1.059,38,1.132,39,0.835,40,0.882,41,1.486,42,1.054,43,1.116,44,1.1,45,1.183,58,1.53,62,0.875,114,2.055,138,1.942,149,2.357,150,1.818,155,1.061,168,1.309,306,2.728,310,1.184,311,1.5,312,0.389,321,1.903,340,1.107,346,0.884,357,0.884,360,0.884,404,0.754,416,0.732,422,1.753,433,1.041,445,3.245,446,2.769,447,1.431,448,2.425,449,1.479,450,2.975,451,2.966,452,1.479,453,2.054,454,1.431,455,1.387,456,1.387,457,1.387,458,1.387,459,1.956,461,1.387,462,1.347,463,3.689,464,1.387,465,1.387,466,1.387,467,1.387,468,1.387,469,1.387,470,1.387,471,1.387,472,2.788,473,2.357,474,2.274,475,1.309,476,1.387,477,1.387,478,2.274,479,1.387,480,1.387,481,1.183,482,1.237,483,1.357,484,1.426,485,1.526,486,1.582,487,1.582,488,1.611,489,1.402,490,1.611,491,1.526,492,1.611,493,1.611,494,2.169,497,1.347,498,1.347,499,1.347,502,1.347,504,1.243,505,1.347,506,1.309,507,1.309,508,1.309,509,1.309,510,1.309,511,1.309,513,0.983,514,0.948,515,0.983,516,1.021,517,1.021,518,0.983,519,1.021,520,1.041,521,1.041,522,1.041,523,1.021,524,1.041,525,1.084,526,1.084,527,1.084,528,1.021,529,1.084,530,1.084,531,1.084,532,1.084,533,1.212,534,1.275,535,3.847,536,1.941,538,2.726,540,1.184,541,1.275,542,1.275,543,1.275,545,1.275,546,1.275,547,1.275,548,2.466,549,1.275,550,1.275,551,1.131,552,1.275,553,1.243,555,2.788,556,1.275,557,1.275,558,1.275,559,1.275,560,1.275,561,1.107,895,2.668,905,3.382,913,2.09,943,1.309,971,1.533,972,1.533,973,1.533,974,1.533,975,1.533,976,1.479,977,1.479,978,1.479,979,1.479,980,1.387,981,1.479,982,1.479,983,1.479,984,1.479,985,1.479,986,1.479,987,1.479,988,1.479,989,1.479,990,2.274,991,1.387,992,1.431,993,1.431,994,1.431,995,1.431,996,1.431,997,1.431,998,1.431,999,1.431,1000,1.431,1001,1.431,1002,2.208,1003,2.208,1004,1.387,1005,1.387,1006,1.387,1007,1.387,1008,1.387,1009,1.387,1010,2.274,1011,1.387,1012,1.387,1013,1.387,1014,1.387,1015,1.387,1016,1.387,1017,1.387,1018,1.387,1019,1.387,1020,1.387,1021,1.387,1022,1.387,1023,1.387,1024,1.347,1025,1.243,1026,1.347,1027,1.347,1028,1.309,1029,1.309,1030,1.309,1031,1.309,1032,1.275,1033,1.309,1034,1.275,1035,1.309,1036,1.309,1037,1.309,1038,1.309,1039,1.309,1040,1.309,1041,1.309,1042,1.275,1043,1.309,1044,1.309,1045,1.131,1046,1.309,1047,1.212,1048,1.309,1049,1.642,1050,1.309,1051,1.309,1052,2.147,1053,1.309,1054,1.309,1055,2.147,1056,2.147,1057,2.147,1058,1.309,1059,1.309,1060,1.309,1061,1.309,1062,1.309,1063,1.275]],["title/core.html#原始型別及物件型別",[976,3.452]],["body/core.html#原始型別及物件型別",[1,0.314,2,0.381,3,0.382,4,0.433,5,0.474,6,0.522,7,0.664,8,0.698,9,0.848,10,1.071,11,0.84,12,1.055,14,0.038,15,1.822,19,2.539,21,0.69,27,2.402,34,2.126,36,1.02,37,0.95,38,1.016,39,0.873,40,0.922,41,1.535,42,1.102,43,1.166,44,1.15,45,1.236,58,1.55,62,0.876,114,2.058,138,1.983,149,2.447,150,1.878,155,1.102,306,2.832,310,1.25,311,1.568,312,0.41,321,1.966,340,1.169,346,0.934,357,0.934,360,0.934,404,0.797,416,0.773,422,1.82,433,1.099,446,1.784,451,2.69,453,2.102,454,1.511,455,1.465,456,1.465,457,1.465,458,1.465,459,1.994,461,1.465,462,1.422,463,3.796,464,1.465,465,1.465,466,1.465,467,1.465,468,1.465,469,1.465,470,1.465,471,1.465,472,2.88,473,2.447,474,2.377,475,1.383,476,1.465,477,1.465,478,2.377,479,1.465,480,1.465,481,1.236,482,1.293,483,1.419,484,1.49,485,1.596,486,1.654,487,1.654,488,1.685,489,1.466,490,1.685,491,1.596,492,1.685,493,1.685,494,2.252,497,1.422,498,1.422,499,1.422,502,1.422,504,1.312,505,1.422,506,1.383,507,1.383,508,1.383,509,1.383,510,1.383,511,1.383,513,1.038,514,1.001,515,1.038,516,1.078,517,1.078,518,1.038,519,1.078,520,1.099,521,1.099,522,1.099,523,1.078,524,1.099,525,1.145,526,1.145,527,1.145,528,1.078,529,1.145,530,1.145,531,1.145,532,1.145,533,1.28,534,1.346,535,3.936,536,2.029,538,2.816,540,1.25,541,1.346,542,1.346,543,1.346,545,1.346,546,1.346,547,1.346,548,2.56,549,1.346,550,1.346,551,1.195,552,1.346,553,1.312,555,2.88,556,1.346,557,1.346,558,1.346,559,1.346,560,1.346,561,1.169,895,1.169,905,3.47,913,2.185,943,1.383,977,1.562,978,1.562,979,1.562,980,1.465,981,1.562,982,1.562,983,1.562,984,1.562,985,1.562,986,1.562,987,1.562,988,1.562,989,1.562,990,2.377,991,1.465,992,1.511,993,1.511,994,1.511,995,1.511,996,1.511,997,1.511,998,1.511,999,1.511,1000,1.511,1001,1.511,1002,2.308,1003,2.308,1004,1.465,1005,1.465,1006,1.465,1007,1.465,1008,1.465,1009,1.465,1010,2.377,1011,1.465,1012,1.465,1013,1.465,1014,1.465,1015,1.465,1016,1.465,1017,1.465,1018,1.465,1019,1.465,1020,1.465,1021,1.465,1022,1.465,1023,1.465,1024,1.422,1025,1.312,1026,1.422,1027,1.422,1028,1.383,1029,1.383,1030,1.383,1031,1.383,1032,1.346,1033,1.383,1034,1.346,1035,1.383,1036,1.383,1037,1.383,1038,1.383,1039,1.383,1040,1.383,1041,1.383,1042,1.346,1043,1.383,1044,1.383,1045,1.195,1046,1.383,1047,1.28,1048,1.383,1049,1.716,1050,1.383,1051,1.383,1052,2.244,1053,1.383,1054,1.383,1055,2.244,1056,2.244,1057,2.244,1058,1.383,1059,1.383,1060,1.383,1061,1.383,1062,1.383,1063,1.346]],["title/core.html#運算子",[990,3.236]],["body/core.html#運算子",[1,0.314,2,0.381,3,0.379,4,0.426,5,0.48,6,0.529,7,0.674,8,0.71,9,0.864,10,1.08,11,0.862,12,1.036,14,0.038,15,0.802,19,2.569,21,0.707,27,2.454,34,1.735,36,1.04,37,0.974,38,1.042,39,0.899,40,0.949,41,1.568,42,1.135,43,1.201,44,1.184,45,1.273,58,1.563,62,0.877,114,2.062,138,2.011,150,1.918,155,1.13,306,2.903,310,1.296,311,1.615,312,0.426,321,2.008,340,1.213,346,0.968,357,0.968,360,0.968,404,0.826,416,0.802,422,1.485,433,1.14,451,2.741,453,1.898,455,1.519,456,1.519,457,1.519,458,1.519,459,2.019,461,1.519,462,1.475,463,3.868,464,1.519,465,1.519,466,1.519,467,1.519,468,1.519,469,1.519,470,1.519,471,1.519,472,2.942,473,2.509,474,2.448,475,1.434,476,1.519,477,1.519,478,2.448,479,1.519,480,1.519,481,1.273,482,1.332,483,1.462,484,1.535,485,1.643,486,1.703,487,1.703,488,1.735,489,1.51,490,1.735,491,1.643,492,1.735,493,1.735,494,2.308,497,1.475,498,1.475,499,1.475,502,1.475,504,1.361,505,1.475,506,1.434,507,1.434,508,1.434,509,1.434,510,1.434,511,1.434,513,1.077,514,1.038,515,1.077,516,1.118,517,1.118,518,1.077,519,1.118,520,1.14,521,1.14,522,1.14,523,1.118,524,1.14,525,1.187,526,1.187,527,1.187,528,1.118,529,1.187,530,1.187,531,1.187,532,1.187,533,1.328,534,1.396,535,3.996,536,2.089,538,2.877,540,1.296,541,1.396,542,1.396,543,1.396,545,1.396,546,1.396,547,1.396,548,2.625,549,1.396,550,1.396,551,1.239,552,1.396,553,1.361,555,2.942,556,1.396,557,1.396,558,1.396,559,1.396,560,1.396,561,1.213,905,3.528,913,2.25,943,1.434,990,1.519,991,1.519,992,1.567,993,1.567,994,1.567,995,1.567,996,1.567,997,1.567,998,1.567,999,1.567,1000,1.567,1001,1.567,1002,2.377,1003,2.377,1004,1.519,1005,1.519,1006,1.519,1007,1.519,1008,1.519,1009,1.519,1010,2.448,1011,1.519,1012,1.519,1013,1.519,1014,1.519,1015,1.519,1016,1.519,1017,1.519,1018,1.519,1019,1.519,1020,1.519,1021,1.519,1022,1.519,1023,1.519,1024,1.475,1025,1.361,1026,1.475,1027,1.475,1028,1.434,1029,1.434,1030,1.434,1031,1.434,1032,1.396,1033,1.434,1034,1.396,1035,1.434,1036,1.434,1037,1.434,1038,1.434,1039,1.434,1040,1.434,1041,1.434,1042,1.396,1043,1.434,1044,1.434,1045,1.239,1046,1.434,1047,1.328,1048,1.434,1049,1.768,1050,1.434,1051,1.434,1052,2.311,1053,1.434,1054,1.434,1055,2.311,1056,2.311,1057,2.311,1058,1.434,1059,1.434,1060,1.434,1061,1.434,1062,1.434,1063,1.396]],["title/core.html#嚴格相等-寬鬆相等",[1002,2.357,1003,2.357]],["body/core.html#嚴格相等-寬鬆相等",[1,0.292,2,0.337,3,0.314,4,0.377,5,0.424,6,0.433,7,0.575,8,0.527,9,0.686,10,1.035,11,0.861,12,0.906,14,0.038,15,1.072,19,2.501,21,0.706,27,2.874,34,2.177,36,0.826,37,0.973,38,1.041,39,1.128,40,1.191,41,1.836,42,1.424,43,1.507,44,1.486,45,1.598,58,1.454,62,0.872,114,2.063,138,1.836,155,1.128,306,2.9,311,2.026,321,2.352,340,1.621,357,1.294,404,1.104,416,1.072,451,3.144,453,2.027,459,1.786,473,1.656,481,1.598,482,1.671,483,1.834,484,1.926,485,2.062,486,2.137,487,2.137,488,2.177,489,1.894,490,2.177,491,2.062,492,2.177,493,2.177,494,2.781,497,1.971,498,1.971,499,1.971,502,1.971,504,1.819,505,1.971,506,1.917,507,1.917,508,1.917,509,1.917,510,1.917,511,1.917,513,1.439,514,1.387,515,1.439,516,1.495,517,1.495,518,1.439,519,1.495,520,1.524,521,1.524,522,1.524,523,1.495,524,1.524,525,1.587,526,1.587,527,1.587,528,1.495,529,1.587,530,1.587,531,1.587,532,1.587,533,1.775,534,1.866,535,4.455,536,2.622,538,3.37,540,1.733,541,1.866,542,1.866,543,1.866,545,1.866,546,1.866,547,1.866,548,3.162,549,1.866,550,1.866,551,1.656,552,1.866,553,1.819,555,3.446,556,1.866,557,1.866,558,1.866,559,1.866,560,1.866,561,1.621,905,3.162,913,2.823,943,1.917,1002,1.971,1003,1.971,1004,2.03,1005,2.03,1006,2.03,1007,2.03,1008,2.03,1009,2.03,1010,3.072,1011,2.03,1012,2.03,1013,2.03,1014,2.03,1015,2.03,1016,2.03,1017,2.03,1018,2.03,1019,2.03,1020,2.03,1021,2.03,1022,2.03,1023,2.03,1024,1.971,1025,1.819,1026,1.971,1027,1.971,1028,1.917,1029,1.917,1030,1.917,1031,1.917,1032,1.866,1033,1.917,1034,1.866,1035,1.917,1036,1.917,1037,1.917,1038,1.917,1039,1.917,1040,1.917,1041,1.917,1042,1.866,1043,1.917,1044,1.917,1045,1.656,1046,1.917,1047,1.775,1048,1.917,1049,2.218,1050,1.917,1051,1.917,1052,2.9,1053,1.917,1054,1.917,1055,2.9,1056,2.9,1057,2.9,1058,1.917,1059,1.917,1060,1.917,1061,1.917,1062,1.917,1063,1.866]],["title/core.html#Truthy",[506,3.055]],["body/core.html#Truthy",[1,0.297,2,0.357,3,0.329,4,0.395,5,0.445,6,0.438,7,0.581,8,0.457,9,0.595,10,0.776,11,0.746,12,0.884,14,0.038,15,1.405,19,2.006,21,0.861,36,0.716,37,0.843,38,0.902,39,0.978,40,1.032,41,1.184,42,1.234,43,1.306,44,1.288,45,1.385,58,1.409,62,0.845,114,1.899,155,1.375,311,2.47,340,2.125,357,1.697,416,1.405,453,1.306,459,1.872,473,2.172,481,1.385,482,1.448,483,1.589,484,1.669,485,1.787,486,1.852,487,1.852,488,1.887,489,1.642,490,1.887,491,1.787,492,1.887,493,1.887,494,1.999,507,2.513,508,2.513,509,2.513,510,2.513,511,2.513,513,1.887,514,1.819,515,1.887,516,1.96,517,1.96,518,1.887,519,1.96,520,1.999,521,1.999,522,1.999,523,1.96,524,1.999,525,2.081,526,2.081,527,2.081,528,1.96,529,2.081,530,2.081,531,2.081,532,2.081,533,2.327,534,2.447,535,4.848,536,3.195,538,3.832,540,2.272,541,2.447,542,2.447,543,2.447,545,2.447,546,2.447,547,2.447,548,3.696,549,2.447,550,2.447,551,2.172,552,2.447,553,2.385,555,3.919,556,2.447,557,2.447,558,2.447,559,2.447,560,2.447,561,2.125,913,3.441,943,2.513,1024,2.585,1025,2.385,1026,2.585,1027,2.585,1028,2.513,1029,2.513,1030,2.513,1031,2.513,1032,2.447,1033,2.513,1034,2.447,1035,2.513,1036,2.513,1037,2.513,1038,2.513,1039,2.513,1040,2.513,1041,2.513,1042,2.447,1043,2.513,1044,2.513,1045,2.172,1046,2.513,1047,2.327,1048,2.513,1049,2.704,1050,2.513,1051,2.513,1052,3.534,1053,2.513,1054,2.513,1055,3.534,1056,3.534,1057,3.534,1058,2.513,1059,2.513,1060,2.513,1061,2.513,1062,2.513,1063,2.447]],["title/core.html#邏輯運算子及函式預設值",[1028,3.055]],["body/core.html#邏輯運算子及函式預設值",[1,0.295,2,0.351,3,0.295,4,0.354,5,0.399,6,0.454,7,0.602,8,0.482,9,0.627,10,0.805,11,0.786,12,0.909,14,0.038,19,1.503,21,0.893,36,0.754,37,0.888,38,0.95,39,1.03,40,1.087,41,1.247,42,1.3,43,1.376,44,1.357,45,1.459,58,1.442,62,0.84,114,1.841,155,1.426,311,2.561,340,2.239,357,1.788,416,1.481,459,1.925,473,2.288,481,1.459,482,1.526,483,1.675,484,1.759,485,1.883,486,1.952,487,1.952,488,1.988,489,1.73,490,1.988,491,1.883,492,1.988,493,1.988,494,2.106,513,1.988,514,1.917,515,1.988,516,2.065,517,2.065,518,1.988,519,2.065,520,2.106,521,2.106,522,2.106,523,2.065,524,2.106,525,2.193,526,2.193,527,2.193,528,2.065,529,2.193,530,2.193,531,2.193,532,2.193,533,2.452,534,2.578,535,4.918,536,3.314,538,3.92,540,2.394,541,2.578,542,2.578,543,2.578,545,2.578,546,2.578,547,2.578,548,3.801,549,2.578,550,2.578,551,2.288,552,2.578,553,2.513,555,4.009,556,2.578,557,2.578,558,2.578,559,2.578,560,2.578,561,2.239,913,3.569,943,2.648,1029,2.648,1030,2.648,1031,2.648,1032,2.578,1033,2.648,1034,2.578,1035,2.648,1036,2.648,1037,2.648,1038,2.648,1039,2.648,1040,2.648,1041,2.648,1042,2.578,1043,2.648,1044,2.648,1045,2.288,1046,2.648,1047,2.452,1048,2.648,1049,2.804,1050,2.648,1051,2.648,1052,3.665,1053,2.648,1054,2.648,1055,3.665,1056,3.665,1057,3.665,1058,2.648,1059,2.648,1060,2.648,1061,2.648,1062,2.648,1063,2.578]],["title/core.html#物件記憶體空間",[1064,5.536]],["body/core.html#物件記憶體空間",[1,0.308,2,0.378,3,0.416,4,0.451,5,0.513,6,0.563,7,0.747,8,0.815,9,1.003,10,0.91,11,1.196,12,1.12,14,0.038,15,0.919,16,1.16,21,1.282,30,1.74,34,0.715,36,1.112,37,1.31,38,1.29,39,1.236,40,1.304,41,1.368,42,1.265,43,1.338,44,1.11,45,1.193,58,1.348,62,0.838,114,1.548,119,0.905,120,0.862,138,0.449,150,0.549,198,0.702,309,0.549,311,0.666,312,1.067,317,0.806,344,1.958,346,0.644,352,1.042,354,0.953,357,0.644,360,2.145,404,0.947,416,1.902,418,2.108,419,3.816,422,1.392,433,1.306,435,0.789,443,2.536,450,1.306,453,1.51,459,0.992,481,1.193,482,1.248,483,1.369,484,1.438,485,1.54,486,1.211,487,1.211,488,1.233,489,1.415,490,1.233,491,1.168,492,1.233,493,0.715,513,0.715,514,0.69,515,0.715,516,0.743,517,0.743,518,0.715,519,0.743,520,0.758,521,0.758,522,0.758,523,0.743,524,0.758,525,0.789,526,0.789,527,0.789,528,0.743,529,0.789,530,0.789,531,0.789,532,0.789,538,2.225,540,1.958,548,2.626,554,2.384,561,0.806,562,3.045,563,3.515,564,1.269,565,5.155,566,1.34,568,2.667,569,2.463,570,1.547,571,2.667,572,2.667,573,1.547,574,2.667,575,1.428,576,1.428,577,1.428,578,1.428,579,1.428,580,1.428,581,1.34,583,1.428,584,1.428,585,1.34,586,1.34,588,3.045,589,1.009,590,1.34,591,2.31,592,1.34,593,1.34,595,1.34,597,2.087,598,1.16,599,1.643,600,1.34,601,1.34,602,1.34,603,1.116,604,0.928,605,1.34,606,1.34,607,3.402,608,2.31,609,3.045,610,1.34,612,1.34,613,2.884,615,2.884,616,1.257,617,1.269,618,1.269,619,1.269,620,1.269,621,1.269,622,1.16,623,1.6,624,1.116,625,2.132,627,1.269,628,1.269,629,1.269,630,1.269,632,1.21,633,1.21,635,2,636,1.21,637,1.21,638,1.21,639,1.16,640,1.21,641,1.21,642,1.21,644,2,645,1.16,646,2,647,1.16,648,1.16,649,2.636,650,2.636,651,1.16,652,1.16,653,1.16,654,3.135,656,1.16,657,1.16,658,1.16,659,2,660,3.015,663,1.796,664,1.116,665,1.74,666,1.116,667,1.924,668,1.116,669,1.116,670,1.116,671,1.116,672,0.928,673,1.116,674,1.116,675,0.862,676,1.077,677,1.077,678,1.077,680,1.856,681,2.94,682,2.444,683,1.077,684,0.953,685,1.74,686,1.559,687,1.042,688,1.042,689,1.042,690,1.009,691,1.74,692,1.009,693,3.471,694,2.109,695,2.227,696,1.042,895,3.18,915,1.924,944,1.559,980,1.009,1025,0.904,1045,1.871,1047,0.882,1049,0.729,1065,1.727,1066,2.977,1067,2.977,1068,1.727,1069,1.727,1070,1.727,1071,1.727,1072,1.547,1073,1.547,1074,1.547,1075,1.547,1076,1.547,1077,2.667,1078,2.667,1079,1.547,1080,1.547,1081,1.547,1082,1.547,1083,1.547,1084,1.547,1085,1.428,1086,1.428,1087,1.428,1088,2.31,1089,1.428,1090,1.428,1091,1.428,1092,1.428,1093,1.428,1094,1.428,1095,1.428,1096,2.31,1097,1.428,1098,1.428,1099,1.428,1100,1.21,1101,1.34,1102,1.269,1103,1.34,1104,1.34,1105,1.34,1106,1.34,1107,1.34,1108,1.34,1109,1.34,1110,1.34,1111,2.31,1112,1.34,1113,1.34,1114,1.34,1115,1.34,1116,1.34,1117,1.34,1118,1.269,1119,1.269,1120,1.269,1121,1.269,1122,1.269,1123,1.269,1124,1.269,1125,2.814,1126,1.269,1127,1.269,1128,1.269,1129,1.269,1130,1.269,1131,1.269,1132,1.21,1133,1.21,1134,1.21,1135,1.21,1136,1.21,1137,1.21,1138,1.21,1139,1.21,1140,1.21,1141,1.21,1142,1.21,1143,1.21,1144,1.21,1145,1.21,1146,1.21,1147,1.21,1148,1.21,1149,1.21,1150,1.21,1151,1.21,1152,1.21,1153,1.21,1154,1.16,1155,1.16,1156,1.16,1157,1.16,1158,2.636,1159,2,1160,2,1161,1.16,1162,2,1163,2,1164,1.16,1165,1.16,1166,1.16,1167,1.16,1168,1.16,1169,1.16,1170,1.16,1171,2,1172,1.16,1173,1.16,1174,1.009,1175,1.116,1176,1.116,1177,1.116,1178,1.116,1179,1.116,1180,1.856,1181,1.116,1182,1.077,1183,1.856,1184,1.077,1185,1.077,1186,1.077,1187,1.077]],["title/core.html#純值無法新增屬性",[1072,4.959]],["body/core.html#純值無法新增屬性",[1,0.308,2,0.378,3,0.417,4,0.446,5,0.509,6,0.564,7,0.748,8,0.815,9,1.022,10,0.927,11,1.221,12,1.116,14,0.038,15,0.962,16,1.224,21,1.291,30,1.823,34,0.755,36,1.136,37,1.339,38,1.323,39,1.273,40,1.343,41,1.413,42,1.311,43,1.388,44,1.155,45,1.242,58,1.372,62,0.843,114,1.578,119,0.948,120,0.909,138,0.474,150,0.579,198,0.741,309,0.579,311,0.703,312,1.094,317,0.85,344,2.039,346,0.679,352,1.099,354,1.006,357,0.679,360,0.679,404,0.991,416,1.678,418,0.979,419,3.871,422,1.449,433,1.368,435,0.833,443,2.641,450,1.368,453,1.56,459,1.033,481,1.242,482,1.299,483,1.426,484,1.498,485,1.604,486,1.268,487,1.268,488,1.292,489,1.473,490,1.292,491,1.224,492,1.292,493,0.755,513,0.755,514,0.728,515,0.755,516,0.784,517,0.784,518,0.755,519,0.784,520,0.8,521,0.8,522,0.8,523,0.784,524,0.8,525,0.833,526,0.833,527,0.833,528,0.784,529,0.833,530,0.833,531,0.833,532,0.833,538,2.307,540,0.909,548,2.713,554,2.472,561,0.85,575,1.507,576,1.507,577,1.507,578,1.507,579,1.507,580,1.507,581,1.414,583,1.507,584,1.507,585,1.414,586,1.414,588,3.171,589,1.065,590,1.414,591,2.419,592,1.414,593,1.414,595,1.414,597,2.185,598,1.224,599,1.721,600,1.414,601,1.414,602,1.414,603,1.178,604,0.979,605,1.414,606,1.414,607,3.496,608,2.419,609,3.171,610,1.414,612,1.414,613,3.003,615,3.003,616,1.316,617,1.339,618,1.339,619,1.339,620,1.339,621,1.339,622,1.224,623,1.675,624,1.178,625,2.21,627,1.339,628,1.339,629,1.339,630,1.339,632,1.277,633,1.277,635,2.094,636,1.277,637,1.277,638,1.277,639,1.224,640,1.277,641,1.277,642,1.277,644,2.094,645,1.224,646,2.094,647,1.224,648,1.224,649,2.745,650,2.745,651,1.224,652,1.224,653,1.224,654,3.25,656,1.224,657,1.224,658,1.224,659,2.094,660,3.126,663,1.88,664,1.178,665,1.823,666,1.178,667,2.015,668,1.178,669,1.178,670,1.178,671,1.178,672,0.979,673,1.178,674,1.178,675,0.909,676,1.136,677,1.136,678,1.136,680,1.944,681,3.028,682,2.533,683,1.136,684,1.006,685,1.823,686,1.633,687,1.099,688,1.099,689,1.099,690,1.065,691,1.823,692,1.065,693,3.575,694,2.172,695,2.319,696,1.099,895,2.956,915,2.015,944,1.633,980,1.065,1025,0.954,1045,1.487,1047,0.931,1049,0.769,1073,1.633,1074,1.633,1075,1.633,1076,1.633,1077,2.793,1078,2.793,1079,1.633,1080,1.633,1081,1.633,1082,1.633,1083,1.633,1084,1.633,1085,1.507,1086,1.507,1087,1.507,1088,2.419,1089,1.507,1090,1.507,1091,1.507,1092,1.507,1093,1.507,1094,1.507,1095,1.507,1096,2.419,1097,1.507,1098,1.507,1099,1.507,1100,1.277,1101,1.414,1102,1.339,1103,1.414,1104,1.414,1105,1.414,1106,1.414,1107,1.414,1108,1.414,1109,1.414,1110,1.414,1111,2.419,1112,1.414,1113,1.414,1114,1.414,1115,1.414,1116,1.414,1117,1.414,1118,1.339,1119,1.339,1120,1.339,1121,1.339,1122,1.339,1123,1.339,1124,1.339,1125,2.918,1126,1.339,1127,1.339,1128,1.339,1129,1.339,1130,1.339,1131,1.339,1132,1.277,1133,1.277,1134,1.277,1135,1.277,1136,1.277,1137,1.277,1138,1.277,1139,1.277,1140,1.277,1141,1.277,1142,1.277,1143,1.277,1144,1.277,1145,1.277,1146,1.277,1147,1.277,1148,1.277,1149,1.277,1150,1.277,1151,1.277,1152,1.277,1153,1.277,1154,1.224,1155,1.224,1156,1.224,1157,1.224,1158,2.745,1159,2.094,1160,2.094,1161,1.224,1162,2.094,1163,2.094,1164,1.224,1165,1.224,1166,1.224,1167,1.224,1168,1.224,1169,1.224,1170,1.224,1171,2.094,1172,1.224,1173,1.224,1174,1.065,1175,1.178,1176,1.178,1177,1.178,1178,1.178,1179,1.178,1180,1.944,1181,1.178,1182,1.136,1183,1.944,1184,1.136,1185,1.136,1186,1.136,1187,1.136]],["title/core.html#深淺拷貝",[1085,4.579]],["body/core.html#深淺拷貝",[1,0.309,2,0.379,3,0.418,4,0.445,5,0.508,6,0.562,7,0.746,8,0.812,9,1.014,10,0.917,11,1.204,12,1.114,14,0.038,15,0.587,16,1.277,21,1.295,30,1.889,36,1.115,37,1.314,38,1.348,39,1.302,40,1.374,41,1.449,42,1.348,43,1.427,44,1.192,45,1.282,58,1.391,62,0.839,114,1.561,119,0.983,120,0.948,138,0.494,150,0.604,309,0.604,311,0.733,312,1.115,317,0.887,344,2.104,346,0.708,352,1.146,354,1.049,357,0.708,404,1.028,416,1.72,418,1.021,419,3.912,422,1.495,433,1.418,435,0.869,443,2.725,450,1.418,453,1.599,459,1.066,481,1.282,482,1.341,483,1.471,484,1.545,485,1.655,486,1.315,487,1.315,488,1.339,489,1.52,490,1.339,491,1.268,492,1.339,493,0.788,513,0.788,514,0.759,515,0.788,516,0.818,517,0.818,518,0.788,519,0.818,520,0.834,521,0.834,522,0.834,523,0.818,524,0.834,525,0.869,526,0.869,527,0.869,528,0.818,529,0.869,530,0.869,531,0.869,532,0.869,538,2.372,540,0.948,548,2.781,554,2.541,561,0.887,585,1.475,586,1.475,588,3.272,589,1.111,590,1.475,591,2.508,592,1.475,593,1.475,595,1.475,597,2.266,598,1.277,599,1.784,600,1.475,601,1.475,602,1.475,603,1.228,604,1.021,605,1.475,606,1.475,607,3.569,608,2.508,609,3.272,610,1.475,612,1.475,613,3.099,615,3.099,616,1.364,617,1.397,618,1.397,619,1.397,620,1.397,621,1.397,622,1.277,623,1.737,624,1.228,625,2.273,627,1.397,628,1.397,629,1.397,630,1.397,632,1.332,633,1.332,635,2.171,636,1.332,637,1.332,638,1.332,639,1.277,640,1.332,641,1.332,642,1.332,644,2.171,645,1.277,646,2.171,647,1.277,648,1.277,649,2.832,650,2.832,651,1.277,652,1.277,653,1.277,654,3.341,656,1.277,657,1.277,658,1.277,659,2.171,660,3.214,663,1.949,664,1.228,665,1.889,666,1.228,667,2.089,668,1.228,669,1.228,670,1.228,671,1.228,672,1.021,673,1.228,674,1.228,675,0.948,676,1.185,677,1.185,678,1.185,680,2.015,681,3.098,682,2.605,683,1.185,684,1.049,685,1.889,686,1.693,687,1.146,688,1.146,689,1.146,690,1.111,691,1.889,692,1.111,693,3.657,694,2.222,695,2.393,696,1.146,895,2.601,915,2.089,944,1.693,1045,1.541,1047,0.971,1049,0.802,1086,1.572,1087,1.572,1088,2.508,1089,1.572,1090,1.572,1091,1.572,1092,1.572,1093,1.572,1094,1.572,1095,1.572,1096,2.508,1097,1.572,1098,1.572,1099,1.572,1100,1.332,1101,1.475,1102,1.397,1103,1.475,1104,1.475,1105,1.475,1106,1.475,1107,1.475,1108,1.475,1109,1.475,1110,1.475,1111,2.508,1112,1.475,1113,1.475,1114,1.475,1115,1.475,1116,1.475,1117,1.475,1118,1.397,1119,1.397,1120,1.397,1121,1.397,1122,1.397,1123,1.397,1124,1.397,1125,3,1126,1.397,1127,1.397,1128,1.397,1129,1.397,1130,1.397,1131,1.397,1132,1.332,1133,1.332,1134,1.332,1135,1.332,1136,1.332,1137,1.332,1138,1.332,1139,1.332,1140,1.332,1141,1.332,1142,1.332,1143,1.332,1144,1.332,1145,1.332,1146,1.332,1147,1.332,1148,1.332,1149,1.332,1150,1.332,1151,1.332,1152,1.332,1153,1.332,1154,1.277,1155,1.277,1156,1.277,1157,1.277,1158,2.832,1159,2.171,1160,2.171,1161,1.277,1162,2.171,1163,2.171,1164,1.277,1165,1.277,1166,1.277,1167,1.277,1168,1.277,1169,1.277,1170,1.277,1171,2.171,1172,1.277,1173,1.277,1174,1.111,1175,1.228,1176,1.228,1177,1.228,1178,1.228,1179,1.228,1180,2.015,1181,1.228,1182,1.185,1183,2.015,1184,1.185,1185,1.185,1186,1.185,1187,1.185]],["title/core.html#陣列",[1100,3.88]],["body/core.html#陣列",[1,0.312,2,0.383,3,0.422,4,0.451,5,0.514,6,0.568,7,0.754,8,0.82,9,1.022,10,0.923,11,1.208,12,1.098,14,0.038,15,0.645,16,1.404,21,1.31,30,2.047,36,1.115,37,1.314,38,1.34,39,1.264,40,1.334,41,1.374,42,1.225,43,1.297,44,0.99,45,1.065,58,1.433,62,0.836,114,1.614,119,1.065,120,1.043,138,0.543,150,0.665,309,0.665,311,0.806,312,1.162,317,0.976,344,2.255,346,0.779,352,1.261,354,1.154,404,1.114,416,1.632,418,1.123,419,4.003,422,1.603,435,0.955,443,1.351,450,1.537,453,1.517,459,1.142,481,1.065,482,1.114,483,1.222,484,1.284,485,1.374,486,0.85,487,0.85,488,0.866,489,1.263,490,0.866,491,0.82,492,0.866,493,0.866,513,0.866,514,0.835,515,0.866,516,0.9,517,0.9,518,0.866,519,0.9,520,0.917,521,0.917,522,0.917,523,0.9,524,0.917,525,0.955,526,0.955,527,0.955,528,0.9,529,0.955,530,0.955,531,0.955,532,0.955,554,2.702,561,0.976,607,2.494,613,3.322,615,3.322,616,1.479,617,1.537,618,1.537,619,1.537,620,1.537,621,1.537,622,1.404,623,1.882,624,1.351,625,2.416,627,1.537,628,1.537,629,1.537,630,1.537,632,1.465,633,1.465,635,2.353,636,1.465,637,1.465,638,1.465,639,1.404,640,1.465,641,1.465,642,1.465,644,2.353,645,1.404,646,2.353,647,1.404,648,1.404,649,3.036,650,3.036,651,1.404,652,1.404,653,1.404,654,3.552,656,1.404,657,1.404,658,1.404,659,2.353,660,3.417,663,2.112,664,1.351,665,2.047,666,1.351,667,2.263,668,1.351,669,1.351,670,1.351,671,1.351,672,1.123,673,1.351,674,1.351,675,1.043,676,1.304,677,1.304,678,1.304,680,2.184,681,3.255,682,2.769,683,1.304,684,1.154,685,2.047,686,1.834,687,1.261,688,1.261,689,1.261,690,1.222,691,2.047,692,1.222,693,3.842,694,2.335,695,2.565,696,1.261,895,2.748,915,2.263,944,1.834,1045,0.997,1049,0.883,1088,1.622,1096,1.622,1101,1.622,1102,1.537,1103,1.622,1104,1.622,1105,1.622,1106,1.622,1107,1.622,1108,1.622,1109,1.622,1110,1.622,1111,2.718,1112,1.622,1113,1.622,1114,1.622,1115,1.622,1116,1.622,1117,1.622,1118,1.537,1119,1.537,1120,1.537,1121,1.537,1122,1.537,1123,1.537,1124,1.537,1125,3.189,1126,1.537,1127,1.537,1128,1.537,1129,1.537,1130,1.537,1131,1.537,1132,1.465,1133,1.465,1134,1.465,1135,1.465,1136,1.465,1137,1.465,1138,1.465,1139,1.465,1140,1.465,1141,1.465,1142,1.465,1143,1.465,1144,1.465,1145,1.465,1146,1.465,1147,1.465,1148,1.465,1149,1.465,1150,1.465,1151,1.465,1152,1.465,1153,1.465,1154,1.404,1155,1.404,1156,1.404,1157,1.404,1158,3.036,1159,2.353,1160,2.353,1161,1.404,1162,2.353,1163,2.353,1164,1.404,1165,1.404,1166,1.404,1167,1.404,1168,1.404,1169,1.404,1170,1.404,1171,2.353,1172,1.404,1173,1.404,1174,1.222,1175,1.351,1176,1.351,1177,1.351,1178,1.351,1179,1.351,1180,2.184,1181,1.351,1182,1.304,1183,2.184,1184,1.304,1185,1.304,1186,1.304,1187,1.304]],["title/core.html#JSON",[607,3.055]],["body/core.html#JSON",[1,0.306,2,0.378,3,0.41,4,0.441,5,0.484,6,0.551,7,0.732,8,0.81,9,1.025,10,0.92,11,1.193,12,1.094,14,0.038,15,0.762,16,1.66,21,1.329,30,2.35,36,1.086,37,1.279,38,1.277,39,1.091,40,1.152,41,1.321,42,1.09,43,1.153,44,1.137,45,1.222,58,1.415,62,0.837,114,1.703,119,1.222,120,1.233,150,0.786,311,0.953,312,1.193,317,1.153,344,2.006,346,0.921,352,1.49,354,1.364,404,1.278,416,1.241,419,4.152,422,0.876,435,1.129,443,1.597,450,1.764,453,0.709,459,0.625,481,1.222,482,1.278,483,1.403,484,1.473,485,1.578,486,1.005,487,1.005,488,1.024,489,1.449,490,1.024,491,0.97,492,1.024,493,1.024,513,1.024,514,0.987,515,1.024,516,1.063,517,1.063,518,1.024,519,1.063,520,1.084,521,1.084,522,1.084,523,1.063,524,1.084,525,1.129,526,1.129,527,1.129,528,1.063,529,1.129,530,1.129,531,1.129,532,1.129,554,2.993,561,1.153,607,2.219,616,1.043,623,1.328,625,1.129,632,1.732,633,1.732,635,2.701,636,1.732,637,1.732,638,1.732,639,1.66,640,1.732,641,1.732,642,1.732,644,2.701,645,1.66,646,2.701,647,1.66,648,1.66,649,3.415,650,3.415,651,1.66,652,1.66,653,1.66,654,3.935,656,1.66,657,1.66,658,1.66,659,2.701,660,3.785,663,2.425,664,1.597,665,2.35,666,1.597,667,2.598,668,1.597,669,1.597,670,1.597,671,1.597,672,1.328,673,1.597,674,1.597,675,1.233,676,1.541,677,1.541,678,1.541,680,2.507,681,3.531,682,3.068,683,1.541,684,1.364,685,2.35,686,2.106,687,1.49,688,1.49,689,1.49,690,1.444,691,2.35,692,1.444,693,4.168,694,2.532,695,2.885,696,1.49,895,2.734,915,2.598,944,2.106,1049,1.043,1118,1.816,1119,1.816,1120,1.816,1121,1.816,1122,1.816,1123,1.816,1124,1.816,1125,3.533,1126,1.816,1127,1.816,1128,1.816,1129,1.816,1130,1.816,1131,1.816,1132,1.732,1133,1.732,1134,1.732,1135,1.732,1136,1.732,1137,1.732,1138,1.732,1139,1.732,1140,1.732,1141,1.732,1142,1.732,1143,1.732,1144,1.732,1145,1.732,1146,1.732,1147,1.732,1148,1.732,1149,1.732,1150,1.732,1151,1.732,1152,1.732,1153,1.732,1154,1.66,1155,1.66,1156,1.66,1157,1.66,1158,3.415,1159,2.701,1160,2.701,1161,1.66,1162,2.701,1163,2.701,1164,1.66,1165,1.66,1166,1.66,1167,1.66,1168,1.66,1169,1.66,1170,1.66,1171,2.701,1172,1.66,1173,1.66,1174,1.444,1175,1.597,1176,1.597,1177,1.597,1178,1.597,1179,1.597,1180,2.507,1181,1.597,1182,1.541,1183,2.507,1184,1.541,1185,1.541,1186,1.541,1187,1.541]],["title/core.html#function",[21,0.744]],["body/core.html#function",[1,0.307,2,0.379,3,0.411,4,0.438,5,0.48,6,0.546,7,0.725,8,0.803,9,1.011,10,0.903,11,1.219,12,1.087,14,0.038,21,1.331,36,1.113,37,1.311,38,1.312,39,1.132,40,1.194,41,1.37,42,1.137,43,1.204,44,1.187,45,1.276,58,1.44,62,0.837,114,1.693,119,1.276,150,0.828,311,1.005,312,1.219,317,1.216,344,2.094,346,0.971,352,1.571,354,1.438,404,1.334,416,1.295,419,4.197,422,0.924,435,1.191,450,1.842,453,0.747,459,0.659,481,1.276,482,1.334,483,1.465,484,1.538,485,1.647,486,1.06,487,1.06,488,1.079,489,1.513,490,1.079,491,1.022,492,1.079,493,1.079,513,1.079,514,1.041,515,1.079,516,1.121,517,1.121,518,1.079,519,1.121,520,1.143,521,1.143,522,1.143,523,1.121,524,1.143,525,1.191,526,1.191,527,1.191,528,1.121,529,1.191,530,1.191,531,1.191,532,1.191,554,3.087,561,1.216,616,1.1,623,1.4,625,1.191,644,2.819,645,1.75,646,2.819,647,1.75,648,1.75,649,3.54,650,3.54,651,1.75,652,1.75,653,1.75,654,4.059,656,1.75,657,1.75,658,1.75,659,2.819,660,3.905,663,2.531,664,1.684,665,2.454,666,1.684,667,2.712,668,1.684,669,1.684,670,1.684,671,1.684,672,1.4,673,1.684,674,1.684,675,1.3,676,1.625,677,1.625,678,1.625,680,2.617,681,3.618,682,3.165,683,1.625,684,1.438,685,2.454,686,2.198,687,1.571,688,1.571,689,1.571,690,1.523,691,2.454,692,1.523,693,4.271,694,2.595,695,2.991,696,1.571,895,2.82,915,2.712,944,2.198,1125,3.179,1132,1.826,1133,1.826,1134,1.826,1135,1.826,1136,1.826,1137,1.826,1138,1.826,1139,1.826,1140,1.826,1141,1.826,1142,1.826,1143,1.826,1144,1.826,1145,1.826,1146,1.826,1147,1.826,1148,1.826,1149,1.826,1150,1.826,1151,1.826,1152,1.826,1153,1.826,1154,1.75,1155,1.75,1156,1.75,1157,1.75,1158,3.54,1159,2.819,1160,2.819,1161,1.75,1162,2.819,1163,2.819,1164,1.75,1165,1.75,1166,1.75,1167,1.75,1168,1.75,1169,1.75,1170,1.75,1171,2.819,1172,1.75,1173,1.75,1174,1.523,1175,1.684,1176,1.684,1177,1.684,1178,1.684,1179,1.684,1180,2.617,1181,1.684,1182,1.625,1183,2.617,1184,1.625,1185,1.625,1186,1.625,1187,1.625]],["title/core.html#立即函式-IIFE",[1154,3.719]],["body/core.html#立即函式-IIFE",[1,0.309,2,0.385,3,0.418,4,0.439,5,0.478,6,0.544,7,0.722,8,0.799,9,0.995,10,0.924,11,1.249,12,1.081,14,0.038,21,1.323,36,1.131,37,1.333,38,1.317,39,1.032,40,1.089,41,1.249,42,0.838,43,0.887,44,0.874,45,0.94,58,1.515,62,0.82,114,1.572,119,0.94,150,0.983,311,1.192,312,1.249,317,1.443,344,2.398,346,1.152,352,1.865,354,1.706,416,1.483,419,4.185,422,1.096,435,1.413,453,0.887,459,0.781,481,0.94,482,0.983,483,1.079,484,1.133,485,1.213,486,1.257,487,1.257,488,1.281,489,1.114,490,1.281,491,1.213,492,1.281,493,1.281,513,1.281,514,1.235,515,1.281,516,1.33,517,1.33,518,1.281,519,1.33,520,1.357,521,1.357,522,1.357,523,1.33,524,1.357,525,1.413,526,1.413,527,1.413,528,1.33,529,1.413,530,1.413,531,1.413,532,1.413,554,3.397,616,1.305,623,1.661,625,1.413,660,4.297,663,2.898,664,1.998,665,2.809,666,1.998,667,3.105,668,1.998,669,1.998,670,1.998,671,1.998,672,1.661,673,1.998,674,1.998,675,1.542,676,1.928,677,1.928,678,1.928,680,2.996,681,3.895,682,3.482,683,1.928,684,1.706,685,2.809,686,2.517,687,1.865,688,1.865,689,1.865,690,1.807,691,2.809,692,1.807,693,4.598,694,2.794,695,3.346,696,1.865,895,3.103,944,2.517,1125,2.898,1155,2.077,1156,2.077,1157,2.077,1158,3.96,1159,3.228,1160,3.228,1161,2.077,1162,3.228,1163,3.228,1164,2.077,1165,2.077,1166,2.077,1167,2.077,1168,2.077,1169,2.077,1170,2.077,1171,3.228,1172,2.077,1173,2.077,1174,1.807,1175,1.998,1176,1.998,1177,1.998,1178,1.998,1179,1.998,1180,2.996,1181,1.998,1182,1.928,1183,2.996,1184,1.928,1185,1.928,1186,1.928,1187,1.928]],["title/core.html#參數",[1174,3.236]],["body/core.html#參數",[1,0.316,2,0.394,3,0.433,4,0.464,5,0.506,6,0.575,7,0.764,8,0.845,9,1.053,10,0.978,11,1.321,12,1.102,14,0.038,21,1.304,36,1.193,37,1.405,38,1.368,39,0.863,40,0.911,41,1.044,58,1.619,62,0.794,114,1.425,119,1.222,312,1.321,317,1.875,344,2.921,346,1.498,354,2.218,416,1.24,419,4.399,422,1.425,453,1.153,554,3.878,616,1.696,623,2.159,625,1.836,665,2.349,675,2.005,676,2.506,677,2.506,678,2.506,680,3.651,681,4.303,682,3.975,683,2.506,684,2.218,685,3.423,686,3.066,687,2.424,688,2.424,689,2.424,690,2.349,691,3.423,692,2.349,693,5.079,694,3.086,695,3.921,696,2.424,895,1.875,944,2.104,1125,3.532,1175,2.597,1176,2.597,1177,2.597,1178,2.597,1179,2.597,1180,3.651,1181,2.597,1182,2.506,1183,3.651,1184,2.506,1185,2.506,1186,2.506,1187,2.506]],["title/core.html#閉包-Closure",[684,2.292,1182,2.59]],["body/core.html#閉包-Closure",[1,0.305,2,0.385,3,0.426,4,0.439,5,0.494,6,0.563,7,0.747,8,0.826,9,1.075,10,0.998,11,1.348,12,1.146,14,0.038,21,1.274,36,1.199,37,1.413,38,1.511,39,1.034,40,1.091,41,1.251,58,1.638,62,0.788,114,1.373,119,1.464,312,1.415,344,3.322,346,1.794,354,2.657,419,4.467,554,4.206,616,2.032,685,3.892,686,3.486,687,2.904,688,2.904,689,2.904,690,2.814,691,3.892,692,2.814,693,5.391,694,3.276,695,4.331,696,2.904,944,2.521,1125,4.015,1183,4.151,1184,3.002,1185,3.002,1186,3.002,1187,3.002]],["title/core.html#函式工廠",[1188,5.536]],["body/core.html#函式工廠",[1,0.247,2,0.312,3,0.341,4,0.41,5,0.461,6,0.525,7,0.697,8,0.771,9,1.003,10,0.723,11,0.977,12,1.071,14,0.038,21,1.278,24,3.72,36,0.937,37,1.105,38,1.182,39,1.281,40,1.352,41,1.55,42,1.617,43,1.711,44,1.687,62,0.661,119,2.584,312,1.47,346,2.863,360,2.223,484,2.816,536,2.977,554,5.005,685,5.246,686,4.978,690,4.491,691,3.488,699,8.039,700,5.345,701,5.345,702,5.345,703,6.883,704,5.345,705,5.345,1189,5.967,1190,5.967,1191,5.967]],["title/core.html#this",[]],["body/core.html#this",[1,0.307,2,0.37,3,0.388,4,0.459,5,0.533,6,0.598,7,0.725,8,0.739,9,0.83,10,0.77,11,1.041,12,1.086,14,0.038,15,2.136,21,1.246,27,1.158,34,2.868,36,0.998,37,1.176,38,1.107,39,1.2,40,1.267,41,1.452,42,0.771,43,0.816,44,0.805,45,0.865,62,0.814,114,1.739,115,1.42,119,1.369,138,0.74,311,2.155,312,1.041,321,1.86,346,1.061,347,3.414,416,2.272,418,2.42,419,2.903,425,4.823,435,1.3,445,4.673,450,1.249,451,1.179,453,2.112,459,0.719,481,0.865,482,0.905,483,0.993,484,1.043,485,1.117,538,1.357,554,2.855,569,2.354,581,3.495,616,1.201,623,1.529,624,1.839,625,1.3,675,2.247,706,2.092,707,2.354,708,2.092,709,2.55,710,3.172,711,2.716,712,1.775,713,4.67,714,3.917,716,4.035,717,2.208,718,2.208,719,2.55,720,2.55,721,2.55,722,2.55,723,6.596,724,6.596,725,2.55,726,2.55,727,4.623,728,2.55,729,6.202,730,4.035,732,2.55,736,5.692,737,4.035,738,2.55,739,4.035,740,2.55,741,2.55,742,3.157,743,4.623,744,3.612,745,2.354,746,2.354,747,3.495,748,2.208,750,2.354,751,2.354,753,1.529,754,3.725,755,2.354,756,2.354,757,2.354,758,2.354,759,2.354,760,2.354,761,3.31,762,2.354,763,3.31,764,2.354,765,3.31,766,2.354,767,3.31,768,2.354,895,4.015,1045,2.665,1102,2.092,1192,2.846,1193,2.846,1194,2.846,1195,2.846,1196,2.846,1197,2.846,1198,2.846,1199,2.846,1200,4.035,1201,2.846,1202,2.092,1203,2.846,1204,2.846,1205,2.846,1206,2.846,1207,2.846,1208,2.846,1209,2.846,1210,2.846,1211,2.846,1212,2.846,1213,4.504,1214,2.846,1215,2.846,1216,2.846,1217,2.846,1218,2.846,1219,7.712,1220,2.846,1221,2.846,1222,2.846,1223,2.846,1224,2.846,1225,2.846,1226,2.846,1227,3.725,1228,3.725,1229,2.846,1230,2.846,1231,2.846,1232,2.846,1233,2.846,1234,2.846,1235,2.846,1236,2.846,1237,2.55,1238,2.55,1239,2.55,1240,2.55,1241,2.55,1242,2.55,1243,2.55,1244,2.55,1245,2.55,1246,2.55,1247,2.55,1248,2.55,1249,2.55,1250,2.55,1251,4.035]],["title/core.html#new",[15,1.708]],["body/core.html#new",[1,0.274,2,0.285,3,0.311,4,0.374,5,0.476,6,0.479,7,0.635,8,0.703,9,0.915,10,0.849,11,1.148,12,1.135,14,0.038,15,2.448,21,1.193,34,3.676,36,1.101,37,1.297,38,1.388,39,1.505,40,1.588,41,1.821,42,1.406,43,1.488,44,1.467,45,1.578,62,0.837,114,1.07,138,1.348,312,1.299,347,4.564,416,2.621,450,2.277,451,2.15,459,1.312,481,1.578,482,1.65,483,1.811,484,1.902,485,2.036,625,2.371,742,4.912,743,6.563,744,5.127,745,4.292,746,4.292,747,5.437,748,4.026,750,4.292,751,4.292,753,2.788,754,5.796,755,4.292,756,4.292,757,4.292,758,4.292,759,4.292,760,4.292,761,5.15,762,4.292,763,5.15,764,4.292,765,5.15,766,4.292,767,5.15,768,4.292,1237,4.649,1238,4.649,1239,4.649,1240,4.649,1241,4.649,1242,4.649,1243,4.649,1244,4.649,1245,4.649,1246,4.649,1247,4.649,1248,4.649,1249,4.649,1250,4.649,1251,6.277]],["title/core.html#繼承",[1252,5.536]],["body/core.html#繼承",[1,0.23,2,0.29,3,0.316,4,0.38,5,0.428,6,0.487,7,0.646,8,0.715,9,0.931,10,0.864,11,1.168,12,1.025,14,0.038,15,1.643,21,1.203,36,1.12,37,1.32,38,1.412,39,1.531,40,1.616,41,1.853,42,1.932,43,1.527,44,1.505,45,1.619,62,0.77,114,1.657,309,1.693,321,1.772,416,2.903,453,2.567,481,1.619,482,1.693,538,3.833,742,6.456,744,5.194,748,4.131,749,4.769,769,6.237,770,7.2,771,4.769,772,5.532,773,4.769,774,4.769,776,4.769,777,4.769,778,4.769,780,6.386,782,4.769,783,4.769,784,4.769,785,null,786,4.769,787,4.769,788,4.769,789,4.769,790,4.769,791,4.769,1049,3.393,1253,8.038,1254,5.324,1255,5.324,1256,5.324,1257,7.129,1258,5.324,1259,5.324,1260,5.324,1261,5.324,1262,5.324,1263,5.324,1264,5.324,1265,5.324,1266,7.129,1267,5.324,1268,5.324,1269,5.324,1270,5.324,1271,5.324,1272,5.324,1273,5.324]],["title/core.html#屬性特徵",[1274,5.536]],["body/core.html#屬性特徵",[1,0.292,2,0.391,3,0.403,4,0.463,5,0.504,6,0.55,7,0.73,8,0.807,9,0.898,10,0.834,11,1.127,12,0.961,14,0.038,15,1.231,19,2.155,21,0.925,36,1.081,37,1.274,38,1.363,39,1.251,40,1.32,41,1.514,42,1.579,43,1.671,44,1.128,45,1.213,62,0.746,114,0.823,119,1.771,120,2.907,138,1.788,150,1.269,155,0.857,306,3.215,309,1.269,312,1.127,317,1.862,318,3.096,319,2.933,340,1.862,360,1.487,404,1.269,433,1.751,447,2.407,453,2.488,459,1.009,462,2.265,481,1.213,482,1.269,483,1.393,484,1.462,625,1.823,686,3.051,692,2.333,747,3.096,792,2.039,793,3.913,794,6.777,795,3.575,796,3.575,797,5.219,798,6.164,799,3.575,800,3.575,801,3.575,802,3.575,803,3.575,804,3.575,805,5.219,806,5.219,807,5.219,808,5.219,809,7.356,810,4.819,811,3.575,812,5.219,813,3.575,814,4.446,815,5.219,817,3.575,818,4.282,819,5.219,820,3.575,821,3.575,822,3.575,823,3.575,824,3.575,826,3.575,827,5.199,828,5.219,829,3.575,830,2.681,831,3.301,832,3.096,833,3.575,834,5.219,835,3.301,836,3.575,837,3.575,838,3.575,839,3.575,840,3.575,841,3.575,1063,2.144,1174,2.333,1227,3.301,1228,3.301,1275,3.991,1276,3.991,1277,3.991,1278,3.991,1279,3.991,1280,3.991,1281,3.991,1282,3.991,1283,3.991,1284,3.991,1285,3.991,1286,3.991,1287,3.991,1288,3.991,1289,3.991,1290,3.991,1291,3.991,1292,3.991,1293,3.991,1294,5.826,1295,5.826,1296,3.991,1297,3.991,1298,3.991,1299,3.991,1300,3.991,1301,3.991,1302,3.575,1303,3.991,1304,3.991,1305,3.991,1306,3.991,1307,3.991,1308,3.991,1309,3.991,1310,3.991,1311,3.991,1312,3.991,1313,3.991,1314,3.991,1315,3.991,1316,3.991,1317,3.991,1318,3.991,1319,3.991]],["title/core.html#Let",[]],["body/core.html#Let",[1,0.284,2,0.359,3,0.392,4,0.471,5,0.449,6,0.511,10,0.906,12,0.892,14,0.036,58,1.311,62,0.808,344,4.406,416,2.725,418,4.016,665,4.37,844,6.696,895,3.488,1045,3.564,1320,7.475,1321,8.831,1322,7.475,1323,5.021,1324,7.475]],["title/core.html#const",[155,1.189]],["body/core.html#const",[1,0.286,2,0.362,3,0.395,4,0.436,5,0.491,6,0.559,7,0.741,8,0.821,9,1.067,10,0.991,11,1.078,12,0.976,14,0.037,36,1.034,37,1.219,62,0.703,155,1.909,331,5.445,346,2.453,395,4.614,416,2.031,453,1.888,536,3.284,554,3.363,562,7.217,707,5.445,845,5.897,846,5.897,847,5.897,848,7.324,849,6.537,850,5.108,851,5.445,1325,6.583,1326,6.583,1327,6.583,1328,6.583,1329,6.583,1330,6.583,1331,6.583,1332,6.583,1333,6.583,1334,6.583,1335,6.583,1336,6.583,1337,6.583,1338,6.583,1339,6.583]],["title/core.html#ES6-Airbnb",[599,2.292,853,3.436]],["body/core.html#ES6-Airbnb",[14,0.027,32,4.92,307,4.748,407,7.834,564,6.561,589,4.451,599,4.202,733,4.926,853,7.384,854,6.821,855,7.997,856,6.821,857,8.484,858,7.997,859,6.821,860,6.821,1340,7.614,1341,7.614,1342,7.614,1343,7.614,1344,7.614,1345,7.614]],["title/core.html#箭頭函數",[1346,4.295]],["body/core.html#箭頭函數",[1,0.322,2,0.384,3,0.423,4,0.497,5,0.551,6,0.484,7,0.642,8,0.606,9,0.548,10,0.939,14,0.038,15,1.294,21,1.041,39,0.901,58,1.358,62,0.828,114,1.692,119,2.152,120,3.864,155,2.066,287,2.254,303,5.411,309,1.334,311,1.618,312,0.989,313,3.255,321,1.396,420,3.766,431,3.086,450,4.222,528,3.678,551,2,681,4.193,809,4.997,827,2.711,830,2.818,831,3.47,849,3.083,851,3.47,861,3.758,863,5.411,864,3.758,865,3.758,866,3.758,867,3.758,868,3.758,869,3.758,870,3.758,871,3.758,872,2.711,873,5.411,874,3.758,875,5.411,876,6.937,877,6.937,878,3.758,879,5.411,880,5.411,1174,2.452,1323,2.818,1346,3.255,1347,4.195,1348,4.195,1349,4.195,1350,3.758,1351,4.195,1352,4.195,1353,4.195,1354,4.195,1355,4.195,1356,4.195,1357,4.195,1358,4.195,1359,4.195,1360,4.195,1361,4.195]],["title/index.html",[1362,2.036,1363,2.036,1364,2.036,1365,2.036]],["body/index.html",[1,0.296,14,0.035,144,4.294,161,4.294,189,4.96,204,4.698,287,4.945,314,3.628,733,4.843,850,4.96,1362,7.3,1363,7.113,1364,6.765,1365,6.45,1366,5.726,1367,5.726,1368,7.142,1369,5.726,1370,5.726,1371,5.726,1372,5.187,1373,5.726,1374,5.726,1375,5.726,1376,5.726,1377,5.726,1378,5.726,1379,5.726,1380,5.726,1381,5.726,1382,5.726,1383,7.259,1384,5.726,1385,8.245,1386,7.191,1387,5.005,1388,4.96,1389,7.191,1390,5.726,1391,5.726,1392,5.726,1393,5.726,1394,5.726,1395,7.191,1396,5.726,1397,5.726,1398,5.726,1399,4.96,1400,4.131,1401,5.726,1402,5.726,1403,5.726,1404,5.726,1405,5.726,1406,6.64,1407,6.64,1408,5.726,1409,5.726]],["title/index.html#hexo-theme-doc-seed",[1362,2.036,1363,2.036,1364,2.036,1365,2.036]],["body/index.html#hexo-theme-doc-seed",[14,0.027,287,4.796,733,5.226,1362,6.961,1363,6.961,1364,5.596,1365,5.596,1366,6.821,1367,6.821,1368,6.926,1369,6.821,1370,6.821,1371,6.821,1372,4.92,1373,6.821,1374,6.821,1375,6.821,1376,6.821,1377,6.821,1378,6.821,1379,6.821,1380,6.821,1381,6.821]],["title/index.html#Getting-Started",[1382,3.721,1383,3.436]],["body/index.html#Getting-Started",[1,0.308,14,0.034,144,4.796,161,4.796,189,5.54,287,3.836,314,4.052,850,5.54,1362,7.03,1363,6.315,1364,6.315,1365,5.248,1368,5.54,1372,4.614,1383,7.107,1384,6.396,1385,8.569,1386,7.697,1387,5.358,1388,5.54,1389,7.697,1390,6.396,1391,6.396,1392,6.396,1393,6.396,1394,6.396,1395,7.697,1396,6.396,1397,6.396,1398,6.396,1399,5.54,1400,4.614,1401,6.396,1402,6.396,1403,6.396,1404,6.396,1405,6.396]],["title/index.html#More-Informations",[1406,3.436,1407,3.436]],["body/index.html#More-Informations",[14,0.029,204,5.96,287,4.357,1368,6.292,1406,6.708,1407,6.708,1408,7.264,1409,7.264]],["title/copy.html",[604,2.974]],["body/copy.html",[1,0.277,2,0.349,3,0.381,4,0.458,5,0.516,6,0.57,7,0.582,8,0.644,9,0.462,10,1.15,11,0.58,12,1.124,14,0.038,15,1.093,19,2.009,21,0.862,36,0.557,37,0.656,38,0.701,39,0.761,40,0.803,41,0.92,42,0.96,43,1.016,44,2.532,45,1.077,62,0.838,114,1.323,119,2.722,138,0.92,150,2.847,155,1.145,198,1.441,309,1.126,312,0.873,316,2.603,321,1.179,360,1.32,422,1.256,433,1.554,443,3.446,446,3.132,453,2.307,459,2.379,473,2.543,481,1.077,482,1.126,489,3.168,582,2.93,589,2.071,603,4.612,604,4.113,607,4.439,616,2.251,681,1.81,708,5.246,713,2.603,733,2.943,753,1.903,827,2.289,1410,3.542,1411,3.173,1412,3.173,1413,6.582,1414,6.314,1415,4.977,1416,6.135,1417,5.626,1418,3.542,1419,3.542,1420,4.411,1421,2.93,1422,2.93,1423,2.93,1424,2.93,1425,6.477,1426,4.411,1427,4.977,1428,4.138,1429,4.138,1430,3.542,1431,2.483,1432,2.93,1433,2.93,1434,2.483,1435,2.93,1436,2.748,1437,2.93,1438,2.93,1439,2.93,1440,2.93,1441,3.542,1442,2.93,1443,2.379,1444,4.411,1445,4.411,1446,2.93,1447,2.93,1448,5.305,1449,4.411,1450,2.93,1451,2.748,1452,2.93,1453,2.93,1454,2.93,1455,4.977,1456,3.173,1457,3.542,1458,3.542,1459,3.173,1460,4.777,1461,3.542,1462,2.603,1463,3.173,1464,3.173]],["title/copy.html#淺拷貝-Shallow-Copy",[604,2.232,1465,4.154]],["body/copy.html#淺拷貝-Shallow-Copy",[1,0.264,2,0.333,3,0.364,4,0.437,5,0.492,6,0.56,7,0.546,8,0.604,9,0.545,10,1.129,11,0.684,12,1.075,14,0.038,15,1.289,19,1.308,21,0.561,36,0.656,37,0.773,38,0.827,39,0.897,40,0.946,41,1.085,42,1.132,43,1.198,44,2.413,45,1.27,62,0.801,119,2.738,138,1.085,150,2.797,155,1.293,198,1.699,309,1.328,312,0.986,316,3.07,360,1.556,422,1.481,446,2.642,453,2.025,459,2.383,473,2.871,481,1.27,482,1.328,489,3.077,589,2.441,603,3.891,604,3.794,616,1.763,708,5.68,713,3.07,733,3.323,753,2.244,827,2.699,1411,3.741,1412,3.741,1413,5.68,1414,5.68,1415,4.672,1416,5.68,1417,5.19,1420,3.455,1421,3.455,1422,3.455,1423,3.455,1424,3.455,1425,5.997,1426,4.981,1427,3.241,1428,3.241,1429,3.241,1431,2.927,1432,3.455,1433,3.455,1434,2.927,1435,3.455,1436,3.241,1437,3.455,1438,3.455,1439,3.455,1440,3.455,1442,3.455,1443,2.806,1444,3.455,1445,4.981,1446,3.455,1447,3.455,1448,5.841,1449,4.981,1450,3.455,1451,3.241,1452,3.455,1453,3.455,1454,3.455,1466,4.177,1467,4.177,1468,5.394,1469,4.177,1470,4.177,1471,4.177,1472,4.177,1473,4.177,1474,3.741,1475,3.241,1476,3.741,1477,3.741,1478,3.741,1479,3.741,1480,3.741,1481,3.741,1482,3.741,1483,5.394,1484,3.741,1485,3.741,1486,3.741]],["title/copy.html#深拷貝-Deep-Copy",[604,2.232,1474,3.721]],["body/copy.html#深拷貝-Deep-Copy",[1,0.245,2,0.31,3,0.338,4,0.406,5,0.457,6,0.52,7,0.602,8,0.667,9,0.627,10,1.046,11,0.786,12,0.982,14,0.038,15,1.481,19,1.503,21,0.645,36,0.754,37,0.888,38,0.95,39,1.03,40,1.087,41,1.247,42,1.3,43,1.376,44,2.154,45,1.459,62,0.768,119,2.624,138,1.247,150,2.614,155,1.426,309,1.526,312,1.088,316,3.527,446,2.914,453,2.185,459,2.182,473,3.167,481,1.459,482,1.526,489,2.746,589,2.805,603,4.292,604,3.569,616,2.026,708,6.043,713,3.527,733,3.665,827,3.101,1413,4.882,1414,5.599,1415,3.723,1416,5.599,1417,4.882,1420,3.969,1421,3.969,1422,3.969,1423,3.969,1424,3.969,1425,6.379,1426,5.494,1427,3.723,1428,3.723,1429,3.723,1431,3.363,1432,3.969,1433,3.969,1434,3.363,1435,3.969,1436,3.723,1437,3.969,1438,3.969,1439,3.969,1440,3.969,1442,3.969,1443,3.223,1444,3.969,1445,5.494,1446,3.969,1447,3.969,1448,6.301,1449,5.494,1450,3.969,1451,3.723,1452,3.969,1453,3.969,1454,3.969,1468,4.299,1475,3.723,1476,4.299,1477,4.299,1478,4.299,1479,4.299,1480,4.299,1481,4.299,1482,4.299,1483,5.95,1484,4.299,1485,4.299,1486,4.299]],["title/copy.html#Object-assign",[1455,4.295]],["body/copy.html#Object-assign",[1,0.228,2,0.287,3,0.314,4,0.377,5,0.424,6,0.483,10,1.112,12,1.02,14,0.037,44,2.415,62,0.735,119,2.597,150,2.918,433,3.102,453,2.028,459,2.32,489,3.308,1413,6.746,1414,5.196,1415,5.486,1416,5.196,1417,5.196,1455,5.486,1456,6.333,1475,5.486,1487,7.07,1488,7.07,1489,7.07,1490,7.07,1491,7.07]],["title/copy.html#轉成-JSON-再轉回來",[607,1.834,1492,3.324,1493,3.324]],["body/copy.html#轉成-JSON-再轉回來",[1,0.257,2,0.324,3,0.354,4,0.425,5,0.479,6,0.432,7,0.573,8,0.634,10,0.966,12,1.094,14,0.038,19,2.497,21,0.85,44,2.254,62,0.843,114,1.8,443,5.151,446,3.498,582,5.229,603,4.085,604,3.396,607,5.059,1413,5.859,1414,6.417,1416,5.859,1417,4.646,1425,6.775,1427,4.905,1428,4.905,1429,4.905,1459,5.663,1460,7.141,1462,4.646,1463,5.663,1464,5.663,1475,4.905,1494,6.322,1495,6.322,1496,6.322,1497,6.322,1498,6.322,1499,6.322]],["title/closures.html",[684,3.055]],["body/closures.html",[1,0.291,2,0.403,3,0.415,4,0.482,5,0.579,6,0.607,7,0.863,8,0.854,9,1.078,10,1.077,11,1.236,12,1.04,14,0.038,21,1.296,36,1.297,37,1.165,38,1.031,40,1.18,44,0.97,62,0.818,114,1.703,140,3.65,149,2.483,150,1.655,155,1.706,310,1.712,312,1.558,321,1.142,414,3.827,416,2.33,419,3.209,421,2.522,423,3.14,446,1.506,459,2.087,475,1.894,503,5.072,553,4.162,672,1.844,1400,2.218,1500,4.665,1501,3.432,1502,4.04,1503,5.207,1504,6.292,1505,3.293,1506,5.571,1507,6.292,1508,6.292,1509,6.292,1510,6.292,1511,3.432,1512,3.432,1513,7.12,1514,3.432,1515,3.432,1516,5.207,1517,3.432,1518,3.432,1519,3.432,1520,6.292,1521,2.663,1522,4.665,1523,4.665,1524,3.074,1525,3.074,1526,3.074,1527,3.074,1528,3.074,1529,3.074,1530,3.074,1531,3.074,1532,3.074,1533,3.074,1534,3.074]],["title/closures.html#傳多個函數",[1535,5.536]],["body/closures.html#傳多個函數",[1,0.285,2,0.39,3,0.418,4,0.473,5,0.551,6,0.605,7,0.758,8,0.754,9,0.752,10,0.698,14,0.038,21,1.266,40,1.702,62,0.719,114,1.188,150,1.832,155,1.901,312,1.542,419,3.819,421,4.236,459,2.239,475,3.18,503,5.614,1049,3.738,1500,5.162,1513,5.162,1520,7.487,1522,6.729,1523,6.729,1524,5.162,1525,5.162,1526,5.162,1527,5.162,1528,5.162,1529,5.162,1530,5.162,1531,5.162,1532,5.162,1533,5.162,1534,5.162,1536,5.763]],["title/num.html",[451,2.293]],["body/num.html",[1,0.28,2,0.274,3,0.416,4,0.359,5,0.404,6,0.46,7,0.752,8,0.676,9,1.135,10,1.116,11,1.103,12,0.804,14,0.038,21,1.237,36,1.058,37,1.247,38,1.334,58,1.35,62,0.748,114,1.793,155,1.653,309,2.142,312,1.507,404,1.557,450,3.378,451,3.436,625,4.284,1537,4.897,1538,4.387,1539,4.387,1540,4.387,1541,6.897,1542,4.387,1543,8.049,1544,8.523,1545,6.572,1546,6.391,1547,4.387,1548,4.387,1549,4.387,1550,4.387,1551,4.387,1552,6.034,1553,6.746,1554,2.953,1555,6.034,1556,4.387,1557,6.034,1558,6.034,1559,4.897,1560,6.034,1561,4.387,1562,6.897,1563,4.387,1564,6.897,1565,4.387,1566,4.387,1567,4.387]],["title/num.html#取值",[1568,5.536]],["body/num.html#取值",[1,0.211,2,0.266,3,0.29,4,0.349,5,0.392,6,0.447,7,0.593,8,0.656,9,0.854,10,1.125,11,1.071,14,0.037,21,1.192,36,1.027,37,1.21,38,1.295,155,1.904,312,1.452,451,3.673,1538,5.857,1539,5.857,1540,5.857,1541,7.942,1542,5.857,1543,8.718,1544,9.012,1545,6.821,1546,6.516,1547,5.857,1548,5.857,1549,5.857,1550,5.857,1551,5.857,1569,6.538,1570,6.538,1571,6.538,1572,6.538]],["title/num.html#補數字",[1573,5.536]],["body/num.html#補數字",[1,0.285,2,0.234,3,0.425,4,0.307,5,0.345,6,0.393,7,0.757,8,0.577,9,1.09,10,1.012,11,0.942,12,0.896,14,0.038,21,1.19,36,0.904,37,1.065,38,1.139,58,1.009,62,0.789,114,1.893,309,2.385,312,1.449,404,1.829,450,3.664,451,2.383,625,4.442,1545,5.258,1546,5.514,1552,6.721,1553,7.122,1555,6.721,1556,5.152,1557,6.721,1558,6.721,1560,6.721,1561,5.152,1562,7.48,1563,5.152,1564,7.48,1565,5.152,1566,5.152,1567,5.152,1574,5.751,1575,5.751,1576,5.751,1577,5.751,1578,5.751,1579,5.751]],["title/operators.html",[1580,4.295]],["body/operators.html",[1,0.328,2,0.404,3,0.391,4,0.444,5,0.549,6,0.462,7,0.613,8,0.679,9,0.883,10,0.82,11,0.933,12,0.89,14,0.038,19,2.906,21,0.909,27,1.575,34,1.604,36,0.895,37,1.055,38,1.129,39,0.831,40,0.877,58,1.507,62,0.87,114,1.818,138,2.16,198,1.575,312,1.107,321,1.289,344,3.72,353,2.028,422,2.021,423,2.335,428,2.414,429,2.601,430,2.502,431,1.978,432,2.414,451,1.604,453,2.139,459,2.009,481,1.177,491,1.519,494,3.647,504,2.984,533,1.978,599,2.137,616,1.634,733,2.137,1505,3.444,1506,2.714,1580,4.422,1581,3.469,1582,3.469,1583,6.68,1584,3.469,1585,3.469,1586,7.12,1587,7.12,1588,3.469,1589,3.469,1590,3.469,1591,3.469,1592,3.469,1593,3.469,1594,5.105,1595,3.203,1596,3.469,1597,3.469,1598,6.68,1599,3.469,1600,3.469,1601,4.422,1602,3.203,1603,3.469,1604,3.469,1605,3.469,1606,3.469,1607,3.469,1608,3.872,1609,3.469,1610,2.263,1611,3.469,1612,5.105]],["title/operators.html#What-is-the-difference-between-the-equality-operators-and",[14,0.015,504,0.967,1580,1.433,1581,1.655,1582,1.655]],["body/operators.html#What-is-the-difference-between-the-equality-operators-and",[1,0.314,2,0.309,3,0.337,4,0.405,5,0.352,6,0.4,7,0.531,8,0.588,9,0.765,10,0.71,11,0.959,12,0.699,14,0.037,19,3.138,27,2.382,36,0.92,37,1.084,38,1.16,58,1.688,62,0.856,138,2.458,321,1.95,453,2.556,459,1.48,494,3.91,504,3.067,599,3.232,733,3.232,1049,3.205,1583,7.983,1584,5.247,1585,5.247,1586,8.27,1587,8.27,1588,5.247,1589,5.247,1590,5.247,1591,5.247,1613,5.857,1614,5.857,1615,5.857,1616,5.857,1617,5.857,1618,5.857,1619,5.857,1620,5.857,1621,5.857,1622,5.857,1623,5.857,1624,5.857,1625,5.857,1626,5.857,1627,5.857,1628,5.857,1629,5.857,1630,3.324]],["title/operators.html#Increment",[14,0.015,1592,3.721]],["body/operators.html#Increment",[1,0.328,2,0.401,3,0.403,4,0.46,5,0.518,6,0.421,7,0.558,8,0.618,9,0.804,10,0.746,11,1.009,14,0.038,21,1.16,36,0.968,37,1.14,38,1.22,39,1.322,40,1.396,62,0.856,198,2.505,312,1.413,344,4.53,422,2.781,1505,3.885,1593,5.517,1594,7.024,1595,5.094,1596,5.517,1597,5.517,1598,8.134,1599,5.517,1600,5.517,1601,4.779,1602,5.094,1631,6.159,1632,6.159,1633,6.159,1634,6.159,1635,6.159,1636,6.159,1637,6.159]],["title/operators.html#references",[198,2.252]],["body/operators.html#references",[1601,6.401,1602,6.824]],["title/operators.html#Adding-Strings-and-Numbers",[34,1.377,451,1.377,1603,2.977]],["body/operators.html#Adding-Strings-and-Numbers",[1,0.317,2,0.41,3,0.346,4,0.325,5,0.574,6,0.416,7,0.553,8,0.612,9,0.796,10,0.739,12,1.025,14,0.038,62,0.846,114,2.029,353,3.191,423,3.675,428,3.799,429,4.093,430,3.938,431,3.113,432,3.799,459,2.286,481,1.853,491,2.391,494,2.674,533,3.113,616,2.572,1505,2.524,1506,4.271,1580,4.728,1601,4.728,1604,5.459,1605,5.459,1606,5.459,1607,5.459,1609,5.459,1610,3.562,1611,5.459,1612,6.976,1638,6.093]],["title/performance.html",[1639,5.536]],["body/performance.html",[1,0.28,2,0.354,3,0.386,4,0.465,5,0.503,6,0.543,7,0.57,8,0.631,9,0.821,10,0.963,11,0.726,12,1.111,14,0.038,21,1.068,32,2.866,36,0.697,58,1.28,83,3.669,87,4.62,88,3.669,115,2.213,119,1.348,120,4.344,260,5.665,267,2.592,287,4.915,288,5.117,311,1.71,315,1.908,357,2.721,404,1.41,566,5.665,625,2.026,639,2.979,712,5.883,862,4.62,1505,3.474,1640,4.435,1641,3.973,1642,4.435,1643,5.631,1644,3.973,1645,3.973,1646,6.039,1647,3.973,1648,5.117,1649,4.435,1650,6.54,1651,6.54,1652,3.973,1653,4.435,1654,3.973,1655,3.973,1656,3.973,1657,5.631,1658,5.631,1659,3.973,1660,3.973,1661,5.199,1662,3.973,1663,3.973,1664,4.062,1665,7.115,1666,5.631,1667,3.973,1668,3.973,1669,3.973,1670,3.973,1671,5.631,1672,6.54,1673,4.435,1674,3.973,1675,2.675,1676,6.54,1677,3.973,1678,3.973,1679,2.592,1680,3.973,1681,3.973]],["title/performance.html#優化原則和方向",[1682,5.536]],["body/performance.html#優化原則和方向",[88,6.135,357,2.764,712,4.625,1641,6.644,1643,6.644,1644,6.644,1645,6.644,1646,6.135,1647,6.644,1648,6.161,1683,7.417,1684,7.417,1685,7.417,1686,7.417,1687,7.417,1688,7.417,1689,7.417,1690,7.417,1691,7.417,1692,7.417,1693,7.417,1694,7.417,1695,8.79,1696,7.417,1697,7.417,1698,7.417,1699,7.417,1700,7.417,1701,6.644,1702,7.417,1703,7.417,1704,7.874,1705,7.417,1706,6.644,1707,7.417,1708,7.417,1709,7.417,1710,7.417]],["title/performance.html#懶加載",[1711,5.536]],["body/performance.html#懶加載",[1,0.234,2,0.295,3,0.323,4,0.388,5,0.436,12,0.868,14,0.036,83,6.011,87,6.382,120,4.8,260,7.206,267,4.248,287,3.904,288,5.093,1648,5.093,1650,7.779,1651,7.779,1652,6.51,1654,6.51,1655,6.51,1656,6.51,1712,7.267,1713,7.267,1714,7.267,1715,7.267,1716,7.267,1717,7.267,1718,7.267,1719,7.267,1720,7.267,1721,7.267,1722,7.267,1723,7.267,1724,7.267]],["title/performance.html#DOM-查詢做緩存",[712,2.59,1701,3.721]],["body/performance.html#DOM-查詢做緩存",[1,0.281,2,0.355,3,0.388,4,0.466,5,0.441,6,0.502,12,1.114,14,0.037,58,1.532,287,4.694,625,3.354,712,5.447,1350,7.826,1657,7.826,1658,7.826,1659,6.576,1660,6.576,1725,7.341,1726,7.341,1727,7.341,1728,7.341,1729,7.341]],["title/performance.html#合併-DOM-插入-createDocumentFragment",[712,1.727,1661,2.292,1730,2.77,1731,2.77]],["body/performance.html#合併-DOM-插入-createDocumentFragment",[1,0.224,2,0.283,3,0.309,4,0.372,5,0.418,6,0.476,7,0.632,8,0.699,9,0.91,10,1.105,12,1.089,14,0.037,58,1.222,287,4.9,288,4.883,315,2.998,371,5.763,712,5.278,1505,4.027,1661,5.763,1662,6.241,1663,6.241,1664,4.502,1665,8.498,1666,7.584,1667,6.241,1668,6.241,1669,6.241,1670,6.241,1732,6.967,1733,6.967,1734,6.967,1735,6.967,1736,6.967,1737,6.967,1738,6.967,1739,6.967,1740,6.967]],["title/performance.html#儘早執行操作-DOMContentLoaded",[1646,3.436,1741,4.154]],["body/performance.html#儘早執行操作-DOMContentLoaded",[1,0.246,2,0.311,3,0.34,4,0.408,5,0.46,6,0.523,14,0.037,21,1.204,287,4.113,311,2.952,712,4.773,1671,8.022,1742,7.655,1743,7.655,1744,7.655,1745,7.655]],["title/performance.html#事件節流",[1706,4.959]],["body/performance.html#事件節流",[1,0.225,2,0.284,3,0.31,4,0.373,5,0.419,6,0.477,7,0.633,8,0.701,9,0.912,10,0.846,11,1.144,12,1.012,14,0.037,21,1.14,36,1.097,115,3.484,119,2.123,287,3.752,288,4.895,566,7.084,1672,6.256,1674,6.256,1676,8.178,1677,6.256,1678,6.256,1679,4.082,1680,6.256,1681,6.256,1746,6.984,1747,6.984,1748,6.984,1749,6.984,1750,6.984,1751,6.984,1752,6.984,1753,6.984,1754,6.984,1755,6.984,1756,8.478,1757,6.984,1758,6.984]],["title/math.html",[14,0.02]],["body/math.html",[1,0.291,2,0.404,3,0.285,4,0.343,5,0.385,6,0.507,7,0.414,8,0.459,10,0.554,12,0.886,14,0.038,19,1.431,36,0.718,58,1.617,62,0.638,114,0.942,119,1.952,138,1.928,150,1.453,155,0.981,268,2.849,312,0.748,357,1.703,404,2.041,459,1.155,472,2.228,753,2.455,1387,2.849,1505,1.893,1506,4.499,1545,4.499,1546,3.358,1553,4.981,1554,2.756,1610,2.671,1675,2.756,1679,2.671,1759,4.093,1760,4.093,1761,3.358,1762,4.627,1763,4.312,1764,3.358,1765,3.358,1766,3.358,1767,3.358,1768,3.358,1769,4.312,1770,4.312,1771,2.671,1772,3.069,1773,3.069,1774,2.671,1775,3.069,1776,3.069,1777,5.663,1778,5.611,1779,4.956,1780,2.849,1781,4.093,1782,4.627,1783,4.002,1784,4.093,1785,4.093,1786,2.849,1787,4.093,1788,6.04,1789,4.002,1790,5.482,1791,5.018,1792,4.002,1793,4.002,1794,4.002,1795,2.849,1796,4.093,1797,4.093,1798,2.849,1799,2.849,1800,2.849,1801,2.849,1802,2.849,1803,2.849,1804,2.849,1805,2.849,1806,2.849,1807,2.849,1808,2.849]],["title/math.html#Math",[1545,3.88]],["body/math.html#Math",[1,0.29,2,0.402,3,0.284,4,0.341,5,0.384,6,0.506,7,0.412,8,0.456,10,0.551,12,0.884,14,0.037,19,1.424,36,0.714,58,1.615,62,0.637,114,0.938,119,1.945,138,1.923,150,1.446,155,0.976,255,3.528,268,2.835,274,2.835,312,0.745,404,1.446,459,1.149,472,2.217,753,2.443,1387,2.835,1505,1.884,1506,4.484,1545,3.187,1546,3.342,1553,4.964,1554,2.743,1610,2.658,1630,2.581,1675,2.743,1679,2.658,1759,4.074,1760,4.074,1761,3.342,1762,4.615,1763,4.298,1764,3.342,1765,3.342,1766,3.342,1767,3.342,1768,3.342,1769,3.055,1770,4.298,1771,2.658,1772,3.055,1773,3.055,1774,2.658,1775,3.055,1776,3.055,1777,5.606,1778,5.606,1779,4.695,1780,2.835,1782,2.835,1783,3.989,1786,2.835,1788,6.035,1789,2.835,1790,5.474,1791,5.008,1792,3.989,1793,3.989,1794,3.989,1795,2.835,1798,2.835,1799,2.835,1800,2.835,1801,2.835,1802,2.835,1803,2.835,1804,2.835,1805,2.835,1806,2.835,1807,2.835,1808,2.835,1809,4.547,1810,4.547,1811,3.762,1812,3.762,1813,3.762,1814,3.762,1815,3.762,1816,3.762,1817,3.762,1818,3.762,1819,3.762,1820,3.762,1821,3.342,1822,3.342,1823,3.342,1824,3.055,1825,3.528,1826,3.528,1827,3.528,1828,3.055,1829,3.055,1830,3.055,1831,3.055,1832,3.055,1833,3.055,1834,3.055,1835,3.055,1836,3.055,1837,3.055,1838,3.055,1839,3.055,1840,5.897,1841,5.897,1842,5.897,1843,5.897,1844,3.055,1845,3.055,1846,3.055,1847,3.055,1848,3.055,1849,3.055,1850,3.055,1851,3.055,1852,3.055,1853,3.055,1854,3.055,1855,3.055]],["title/math.html#浮點數運算的坑",[1811,4.579]],["body/math.html#浮點數運算的坑",[1,0.286,2,0.401,3,0.291,4,0.35,5,0.394,6,0.448,7,0.427,8,0.473,12,0.901,14,0.037,19,1.476,36,0.74,58,1.629,62,0.564,119,1.994,138,1.96,150,1.498,268,2.938,274,2.938,312,0.772,404,1.498,459,1.191,472,2.297,753,2.532,1387,2.938,1554,2.842,1610,2.754,1630,2.674,1675,2.842,1679,2.754,1761,3.463,1762,4.704,1763,4.406,1764,3.463,1765,3.463,1766,3.463,1767,3.463,1768,3.463,1769,3.165,1770,4.406,1771,2.754,1772,3.165,1773,3.165,1774,2.754,1775,3.165,1776,3.165,1777,5.644,1778,5.644,1779,4.768,1780,2.938,1782,2.938,1783,4.089,1786,2.938,1788,6.073,1789,2.938,1790,5.536,1791,5.086,1792,4.089,1793,4.089,1794,4.089,1795,2.938,1798,2.938,1799,2.938,1800,2.938,1801,2.938,1802,2.938,1803,2.938,1804,2.938,1805,2.938,1806,2.938,1807,2.938,1808,2.938,1812,3.898,1813,3.898,1814,3.898,1815,3.898,1816,3.898,1817,3.898,1818,3.898,1819,3.898,1820,3.898,1821,3.463,1822,3.463,1823,3.463,1824,3.165,1825,3.656,1826,3.656,1827,3.656,1828,3.165,1829,3.165,1830,3.165,1831,3.165,1832,3.165,1833,3.165,1834,3.165,1835,3.165,1836,3.165,1837,3.165,1838,3.165,1839,3.165,1840,5.964,1841,5.964,1842,5.964,1843,5.964,1844,3.165,1845,3.165,1846,3.165,1847,3.165,1848,3.165,1849,3.165,1850,3.165,1851,3.165,1852,3.165,1853,3.165,1854,3.165,1855,3.165]],["title/math.html#科學符號處理",[1821,4.069]],["body/math.html#科學符號處理",[1,0.285,2,0.405,3,0.229,4,0.275,5,0.31,6,0.353,7,0.468,8,0.518,14,0.037,19,1.616,58,1.665,138,1.814,268,3.218,274,3.218,312,0.845,1387,3.218,1554,3.113,1610,3.017,1630,2.929,1675,3.113,1679,3.017,1762,3.218,1769,3.467,1770,4.69,1771,3.017,1772,3.467,1773,3.467,1774,3.017,1775,3.467,1776,3.467,1777,5.737,1778,5.737,1779,4.955,1780,3.218,1782,3.218,1783,4.353,1786,3.218,1788,6.165,1789,3.218,1790,5.692,1791,5.285,1792,4.353,1793,4.353,1794,4.353,1795,3.218,1798,3.218,1799,3.218,1800,3.218,1801,3.218,1802,3.218,1803,3.218,1804,3.218,1805,3.218,1806,3.218,1807,3.218,1808,3.218,1822,3.793,1823,3.793,1824,3.467,1825,4.005,1826,4.005,1827,4.005,1828,3.467,1829,3.467,1830,3.467,1831,3.467,1832,3.467,1833,3.467,1834,3.467,1835,3.467,1836,3.467,1837,3.467,1838,3.467,1839,3.467,1840,6.132,1841,6.132,1842,6.132,1843,6.132,1844,3.467,1845,3.467,1846,3.467,1847,3.467,1848,3.467,1849,3.467,1850,3.467,1851,3.467,1852,3.467,1853,3.467,1854,3.467,1855,3.467]],["title/math.html#why-0-1-0-2-0-3",[14,0.014,1777,1.388,1778,1.388,1779,1.388]],["body/math.html#why-0-1-0-2-0-3",[1,0.28,2,0.406,14,0.037,19,1.715,58,1.687,138,1.888,274,3.415,1554,3.303,1610,3.201,1630,3.108,1679,3.201,1762,3.415,1777,5.748,1778,5.748,1779,4.765,1780,3.415,1782,3.415,1783,4.53,1786,3.415,1788,6.223,1789,3.415,1790,5.79,1791,5.413,1792,4.53,1793,4.53,1794,4.53,1795,3.415,1798,3.415,1799,3.415,1800,3.415,1801,3.415,1802,3.415,1803,3.415,1804,3.415,1805,3.415,1806,3.415,1807,3.415,1808,3.415,1824,3.679,1825,4.249,1826,4.249,1827,4.249,1828,3.679,1829,3.679,1830,3.679,1831,3.679,1832,3.679,1833,3.679,1834,3.679,1835,3.679,1836,3.679,1837,3.679,1838,3.679,1839,3.679,1840,6.238,1841,6.238,1842,6.238,1843,6.238,1844,3.679,1845,3.679,1846,3.679,1847,3.679,1848,3.679,1849,3.679,1850,3.679,1851,3.679,1852,3.679,1853,3.679,1854,3.679,1855,3.679]],["title/this.html",[]],["body/this.html",[1,0.31,2,0.388,3,0.408,4,0.477,5,0.533,6,0.595,7,0.781,8,0.844,9,1.082,10,1.044,11,1.128,12,1.177,14,0.038,19,0.611,21,1.284,27,1.343,36,0.889,37,1.048,38,0.851,39,0.922,40,0.974,41,0.858,42,0.895,43,0.947,44,1.43,45,0.593,55,1.367,58,0.887,62,0.794,111,1.613,114,1.844,115,1.648,119,2.093,150,1.954,155,0.709,198,0.793,307,1.216,309,1.954,311,1.274,312,1.216,315,2.176,317,1.541,321,2.046,346,0.727,357,0.727,360,2.766,404,0.62,416,3.03,419,2.311,422,0.692,423,1.992,425,3.05,435,0.891,438,0.996,453,1.232,459,1.553,481,0.593,489,0.703,494,1.449,554,3.903,599,1.076,616,0.823,624,1.26,625,0.891,663,1.992,672,3.04,675,3.066,682,1.73,684,1.076,694,1.21,710,2.87,711,2.591,714,5.969,717,1.513,733,1.076,734,1.613,792,4,818,1.433,1400,3.656,1502,2.563,1505,2.713,1774,1.14,1856,1.747,1857,3.849,1858,4.39,1859,1.747,1860,1.747,1861,3.554,1862,2.959,1863,1.747,1864,1.747,1865,2.959,1866,4.53,1867,2.959,1868,1.95,1869,1.747,1870,1.367,1871,1.747,1872,5.069,1873,1.747,1874,2.428,1875,1.747,1876,5.866,1877,4.53,1878,4.53,1879,5.069,1880,2.959,1881,2.959,1882,2.959,1883,2.959,1884,4.68,1885,1.433,1886,1.95,1887,1.31,1888,3.158,1889,1.513,1890,2.959,1891,1.747,1892,1.747,1893,1.95,1894,1.367,1895,1.747,1896,2.959,1897,2.959,1898,1.747,1899,3.849,1900,1.747,1901,1.747,1902,1.95,1903,1.747,1904,1.747,1905,1.747,1906,1.747,1907,1.95,1908,1.747,1909,1.95,1910,1.747,1911,2.959,1912,2.791,1913,1.95,1914,3.153,1915,1.14,1916,1.513,1917,1.95,1918,3.303,1919,1.95,1920,1.95,1921,1.95,1922,1.95,1923,1.747,1924,1.747,1925,1.747,1926,1.747,1927,1.747,1928,1.747,1929,1.747]],["title/this.html#物件的方法調用-As-an-object-method",[453,0.953,1774,1.943,1930,3.324]],["body/this.html#物件的方法調用-As-an-object-method",[1,0.269,2,0.339,3,0.37,4,0.445,5,0.501,6,0.57,7,0.756,8,0.837,9,1.089,10,0.908,11,1.227,12,1.144,14,0.038,21,1.189,36,1.177,37,1.387,38,1.137,39,1.232,40,1.301,62,0.717,114,1.72,317,2.678,416,3.082,435,2.623,616,2.423,714,7.081,792,4.262,1323,5.033,1505,2.378,1856,5.142,1857,6.712,1858,6.472,1859,5.142,1860,5.142,1861,4.748,1931,5.74,1932,5.74,1933,6.131,1934,6.198,1935,5.74,1936,6.198,1937,7.492,1938,7.492,1939,5.142,1940,5.74,1941,5.74,1942,5.74]],["title/this.html#簡易呼叫",[1200,4.959]],["body/this.html#簡易呼叫",[1,0.294,2,0.371,3,0.385,4,0.463,5,0.52,6,0.592,7,0.786,8,0.87,9,1.089,10,0.957,11,1.019,12,1.185,14,0.038,19,1.37,21,1.199,27,2.531,36,0.687,37,0.81,58,1.091,62,0.798,114,1.839,150,2.756,312,1.366,321,1.456,360,3.506,416,2.813,419,2.844,438,2.235,459,2.191,663,3.754,672,3.344,792,4.261,1227,3.618,1228,3.618,1323,2.938,1400,4.682,1505,2.579,1861,5.148,1862,5.576,1863,3.918,1864,3.918,1865,5.576,1866,7.071,1867,5.576,1869,3.918,1870,3.066,1871,3.918,1872,7.472,1873,3.918,1933,5.325,1939,6.491,1943,8.668,1944,4.374,1945,7.246,1946,6.224,1947,4.374,1948,4.374,1949,4.374,1950,4.374,1951,4.374,1952,6.224]],["title/this.html#立即函式：",[1953,5.536]],["body/this.html#立即函式：",[1,0.285,2,0.36,3,0.393,4,0.472,5,0.531,6,0.555,7,0.736,8,0.653,9,0.85,10,0.789,12,1.138,14,0.038,21,1.282,62,0.761,114,1.824,416,3.075,714,4.562,792,3.325,1323,5.453,1858,5.05,1874,5.967,1933,6.503,1934,6.715,1936,5.384]],["title/this.html#Closure",[684,3.055]],["body/this.html#Closure",[1,0.239,2,0.301,3,0.329,4,0.396,5,0.445,6,0.507,7,0.672,8,0.744,9,0.968,10,1.065,11,1.214,12,1.18,14,0.038,21,1.227,36,0.888,37,1.046,38,1.119,39,1.213,40,1.28,41,1.468,42,1.531,43,1.62,44,2.34,62,0.638,114,1.529,119,2.902,312,1.214,317,2.636,346,2.105,416,2.816,489,2.036,554,4.948,1323,3.795,1875,5.061,1876,8.552,1877,7.873,1878,7.873,1879,8.176,1880,6.642,1881,6.642,1882,6.642,1883,6.642,1884,6.847,1933,5.45,1954,5.649]],["title/this.html#Callback",[675,2.762]],["body/this.html#Callback",[1,0.298,2,0.377,3,0.411,4,0.433,5,0.391,6,0.445,7,0.59,12,0.969,14,0.037,21,1.282,62,0.698,111,5.384,114,1.674,119,1.979,309,2.813,312,1.066,315,3.493,554,4.52,624,4.206,675,4.622,682,3.408,717,5.05,818,4.784,1042,3.497,1884,6.715,1885,4.784,1887,4.372,1888,5.967,1889,5.05,1890,7.272,1891,5.83,1892,5.83,1955,6.508,1956,6.508,1957,6.508,1958,6.508,1959,6.508,1960,6.508,1961,6.508,1962,6.508,1963,6.508,1964,6.508,1965,6.508]],["title/this.html#bind-apply-call",[425,2.005,710,1.886,711,2.005]],["body/this.html#bind-apply-call",[1,0.307,2,0.374,3,0.372,4,0.429,5,0.482,6,0.549,7,0.685,8,0.758,9,0.986,10,1.05,11,0.951,12,1.034,14,0.038,21,1.165,36,0.624,37,0.736,38,0.787,39,0.853,40,0.901,41,1.033,42,1.077,43,1.14,44,1.124,45,1.208,55,2.785,58,1.019,62,0.764,114,1.656,115,2.898,155,1.247,198,1.616,228,2.785,307,2.478,309,1.847,311,2.24,312,0.951,315,2.499,321,2.513,404,1.263,416,2.965,422,1.409,423,3.503,425,4.14,453,1.666,481,1.208,494,2.549,599,2.193,625,1.816,675,1.983,682,2.081,694,2.128,710,3.296,711,3.503,714,4.811,792,3.507,905,3.425,1025,2.081,1100,2.785,1174,2.323,1180,2.478,1323,5.072,1502,4.507,1505,3.128,1858,3.084,1888,2.921,1894,2.785,1895,3.56,1896,5.203,1897,5.203,1898,3.56,1899,6.149,1900,3.56,1901,3.56,1903,3.56,1904,3.56,1905,3.56,1906,3.56,1908,3.56,1910,3.56,1911,5.203,1912,4.167,1914,4.28,1915,2.323,1916,3.084,1923,3.56,1924,3.56,1925,3.56,1926,3.56,1927,3.56,1928,3.56,1929,3.56,1933,4.269,1934,4.804,1936,5.678,1966,3.974,1967,3.974,1968,3.56,1969,3.974,1970,3.974,1971,3.56,1972,3.56,1973,3.974,1974,3.974,1975,3.974,1976,3.56,1977,3.974,1978,5.808,1979,5.808,1980,3.974,1981,3.974,1982,3.974,1983,3.974,1984,3.974,1985,3.974,1986,3.974,1987,3.974,1988,3.974,1989,5.326,1990,3.974,1991,3.974,1992,3.974,1993,3.974,1994,3.974,1995,3.974,1996,3.974,1997,3.974,1998,3.974,1999,3.974,2000,4.804,2001,3.974,2002,5.808,2003,3.974,2004,3.974,2005,3.974,2006,3.974,2007,3.974,2008,3.974,2009,3.974,2010,3.974,2011,3.974,2012,3.974,2013,3.974,2014,3.974]],["title/scope.html",[414,4.069]],["body/scope.html",[1,0.314,2,0.386,3,0.416,4,0.5,5,0.562,6,0.601,7,0.73,8,0.745,9,0.969,10,0.554,12,1.192,14,0.038,21,1.29,62,0.826,114,0.942,198,1.858,312,1.051,321,1.521,357,1.703,360,3.492,414,5.454,419,4.212,431,3.28,435,2.933,438,2.334,459,2.034,562,3.545,616,2.71,672,5.034,727,5.31,733,4.095,734,6.138,753,3.449,1400,5.836,1870,4.499,1874,3.358,1894,3.203,2015,6.419,2016,6.822,2017,4.569,2018,6.419,2019,4.569,2020,6.419,2021,4.569,2022,4.569,2023,4.569,2024,4.569,2025,4.569,2026,3.78,2027,4.569]],["title/url.html",[46,3.577]],["body/url.html",[14,0.034,47,6.988,319,5.733,2028,7.801,2029,7.801,2030,7.801,2031,7.801,2032,9.054,2033,9.054,2034,7.801,2035,7.801,2036,5.468,2037,7.801,2038,7.801,2039,7.801,2040,7.801,2041,6.452,2042,7.801]],["title/variable.html",[2043,5.536]],["body/variable.html",[1,0.321,2,0.399,3,0.407,4,0.489,5,0.541,6,0.604,7,0.781,8,0.864,9,1.124,10,1.111,11,1.225,12,1.122,14,0.038,21,1.264,34,2.373,36,0.612,62,0.869,114,1.958,119,1.185,138,1.013,311,3.213,321,2.941,360,2.134,415,2.732,416,2.657,418,4.844,419,3.807,422,3.054,431,1.992,435,1.781,438,4.257,445,3.25,446,2.979,451,2.373,555,3.31,587,3.492,616,1.646,672,3.077,1400,3.701,1443,3.847,1870,4.014,1874,4.209,2016,3.025,2026,3.225,2044,6.788,2045,5.727,2046,6.788,2047,3.898,2048,6.788,2049,3.898,2050,3.492,2051,3.492,2052,3.492,2053,3.492,2054,3.492,2055,3.492,2056,3.492,2057,3.492,2058,5.13,2059,3.492,2060,3.492]],["title/variable.html#變數的作用域在函式內",[2061,5.536]],["body/variable.html#變數的作用域在函式內",[1,0.301,2,0.363,3,0.365,4,0.439,5,0.494,6,0.563,7,0.747,8,0.826,9,1.075,10,0.998,11,1.349,12,1.146,14,0.038,21,1.255,36,1.046,62,0.803,321,2.217,360,3.069,438,4.207,672,4.424,1400,5.321,1870,5.772,2016,5.167,2050,5.966,2051,5.966,2052,5.966,2053,5.966,2054,5.966,2055,5.966,2056,5.966,2057,5.966]],["title/variable.html#Hoisting",[415,3.88]],["body/variable.html#Hoisting",[1,0.321,2,0.403,3,0.4,4,0.481,5,0.52,6,0.556,7,0.738,8,0.817,9,1.062,10,0.878,12,1.035,14,0.038,21,1.247,62,0.858,114,1.678,321,3.003,416,2.236,418,2.931,419,4.238,422,3.357,431,2.787,435,2.493,438,4.429,445,4.113,616,2.303,895,3.381,905,2.722,1049,2.303,1443,4.868,1874,5.326,1989,4.233,2058,6.491,2062,5.456,2063,5.456,2064,5.456,2065,5.456,2066,5.456,2067,5.456]],["title/variable.html#動態型別",[970,3.452]],["body/variable.html#動態型別",[1,0.28,2,0.295,3,0.323,4,0.388,5,0.436,6,0.497,10,1.052,12,0.868,14,0.037,34,3.597,62,0.828,114,1.984,119,2.209,138,1.888,168,4.01,446,4.075,451,3.597,905,3.626,2026,6.011,2059,6.51,2060,6.51,2068,8.683]],["title/F2E/GraphQL.html",[2069,4.959]],["body/F2E/GraphQL.html",[14,0.038,18,5.847,102,6.53,169,6.365,198,2.806,267,4.033,430,5.438,830,4.635,1399,6.53,1451,5.354,2069,8.833,2070,6.9,2071,6.9,2072,6.9,2073,6.9,2074,5.707,2075,6.9,2076,7.046,2077,6.9,2078,6.181,2079,6.181]],["title/F2E/GraphQL.html#References",[198,2.252]],["body/F2E/GraphQL.html#References",[2078,7.39,2079,7.39]],["title/F2E/header.html",[2080,3.88]],["body/F2E/header.html",[1,0.238,2,0.3,3,0.327,14,0.037,29,5.122,46,4.768,198,4.074,1505,3.872,2081,7.379,2082,7.379,2083,7.379,2084,7.379,2085,8.763,2086,7.379,2087,7.379,2088,8.763,2089,7.379,2090,7.379,2091,7.379]],["title/F2E/token.html",[405,4.069]],["body/F2E/token.html",[14,0.037,170,7.997,405,6.561,459,1.925,607,4.926,2080,6.638,2092,8.927,2093,6.298,2094,7.834,2095,7.834]],["title/F2E/token.html#provisional-headers-are-shown",[2080,2.33,2094,2.749,2095,2.749]],["body/F2E/token.html#provisional-headers-are-shown",[2080,6.468,2094,6.67,2095,6.67,2096,8.064,2097,8.064,2098,8.064,2099,8.064,2100,8.064,2101,8.064]],["title/F2E/cookie.html",[2102,4.295]],["body/F2E/cookie.html",[14,0.038,29,3.51,51,5.725,198,2.442,1399,5.986,2093,8.114,2102,8.12,2103,6.004,2104,6.004,2105,6.004,2106,6.004,2107,7.714,2108,5.379,2109,5.379,2110,5.379,2111,5.379,2112,6.004,2113,5.379,2114,6.004,2115,6.004,2116,7.635,2117,7.714,2118,6.004,2119,6.004,2120,6.004,2121,6.004,2122,6.004,2123,6.004,2124,6.004,2125,5.379,2126,6.004,2127,6.004,2128,6.004,2129,6.004,2130,6.004,2131,6.004,2132,6.004,2133,6.004,2134,6.004,2135,6.004,2136,6.004,2137,6.004,2138,6.004,2139,6.004,2140,6.004,2141,5.379,2142,6.004,2143,6.004,2144,6.004,2145,6.004,2146,6.004]],["title/F2E/cookie.html#什麼是-Cookie？",[2147,4.154,2148,4.154]],["body/F2E/cookie.html#什麼是-Cookie？",[2102,7.506,2149,8.019,2150,8.019,2151,8.019,2152,7.183,2153,8.019,2154,8.019,2155,8.019,2156,8.019,2157,8.019]],["title/F2E/cookie.html#第一方Cookie和第三方Cookie區別",[2158,4.959]],["body/F2E/cookie.html#第一方Cookie和第三方Cookie區別",[51,4.237,198,2.566,228,4.421,232,5.651,255,4.894,340,3.715,2093,7.577,2102,7.484,2108,5.651,2109,5.651,2110,5.651,2111,5.651,2113,5.651,2116,7.131,2125,5.651,2141,5.651,2152,5.651,2158,5.651,2159,6.308,2160,6.308,2161,6.308,2162,6.308,2163,6.308,2164,6.308,2165,6.308,2166,6.308,2167,6.308,2168,6.308,2169,6.308,2170,6.308,2171,6.308,2172,6.308,2173,6.308,2174,6.308,2175,6.308,2176,6.308,2177,6.308,2178,6.308,2179,6.308,2180,6.308,2181,6.308,2182,6.308,2183,6.308,2184,6.308,2185,6.308,2186,6.308,2187,6.308,2188,6.308,2189,6.308,2190,6.308,2191,6.308,2192,6.308,2193,6.308,2194,6.308,2195,6.308,2196,6.308,2197,6.308,2198,6.308,2199,6.308,2200,6.308,2201,6.308,2202,6.308,2203,6.308,2204,6.308,2205,6.308,2206,6.308,2207,6.308,2208,6.308,2209,6.308,2210,6.308,2211,6.308,2212,6.308,2213,6.308,2214,6.308,2215,6.308,2216,6.308,2217,6.308,2218,6.308,2219,6.308,2220,6.308,2221,6.308,2222,6.308,2223,6.308,2224,6.308,2225,6.308,2226,6.308,2227,6.308,2228,6.308,2229,6.308,2230,6.308,2231,6.308,2232,6.308,2233,6.308,2234,6.308,2235,6.308,2236,6.308,2237,6.308,2238,6.308,2239,6.308]],["title/api/promise.html",[]],["body/api/promise.html",[0,3.76,1,0.284,2,0.359,3,0.392,4,0.451,5,0.473,6,0.474,7,0.629,8,0.696,9,0.906,10,0.841,11,0.838,14,0.038,15,2.141,36,0.804,37,0.947,38,1.013,39,1.098,40,1.159,41,1.329,42,1.386,43,1.467,55,3.585,58,0.897,62,0.801,114,1.055,116,5.42,118,4.327,121,5.266,123,3.728,155,1.49,312,1.29,404,2.206,551,3.309,862,5.789,2240,4.582,2241,4.582,2242,4.582,2243,5.74,2244,5.74,2245,6.255,2246,4.582,2247,4.582,2248,4.582,2249,6.986,2250,6.986,2251,5.74,2252,5.115,2253,3.76,2254,4.231,2255,4.582,2256,6.216,2257,6.553]],["title/api/promise.html#Promise",[116,2.974]],["body/api/promise.html#Promise",[0,4.719,1,0.259,2,0.327,3,0.357,4,0.43,5,0.483,6,0.439,7,0.582,8,0.644,9,0.838,10,0.778,14,0.037,15,2.484,62,0.692,116,5.341,118,5.019,121,5.483,155,1.379,274,4.003,404,2.559,551,3.062,862,6.463,1125,3.872,1704,5.752,1968,5.752,2240,5.752,2241,5.752,2242,5.752,2243,5.311,2244,6.659,2245,5.907,2246,5.752,2247,5.752,2248,5.752,2249,5.311,2250,5.311,2251,5.311,2258,6.421,2259,6.421,2260,6.421,2261,6.421,2262,6.421,2263,6.421,2264,6.421,2265,6.421,2266,6.421,2267,6.421,2268,6.421,2269,6.421,2270,6.421,2271,6.421,2272,6.421,2273,6.421,2274,6.421,2275,6.421,2276,6.421,2277,6.421,2278,6.421,2279,6.421,2280,5.752,2281,6.421,2282,6.421,2283,6.421,2284,6.421,2285,6.421]],["title/api/promise.html#鏈接",[2286,5.536]],["body/api/promise.html#鏈接",[1,0.277,2,0.35,3,0.382,4,0.418,5,0.369,6,0.42,7,0.557,8,0.617,9,0.802,10,0.745,11,1.006,14,0.038,36,0.966,37,1.138,38,1.217,39,1.32,40,1.393,41,1.597,42,1.665,43,1.763,55,4.308,58,1.078,62,0.806,114,1.267,116,5.231,123,4.207,155,1.32,312,1.411,551,2.93,2245,6.095,2249,7.128,2250,7.128,2251,5.084,2253,4.517,2255,5.505,2256,7.014,2257,6.075,2280,5.505,2287,6.146,2288,6.146,2289,6.146,2290,6.146,2291,6.146,2292,6.146,2293,6.146,2294,6.146,2295,6.146,2296,6.146,2297,6.146,2298,6.146,2299,6.146,2300,6.146,2301,6.146,2302,6.146,2303,6.146,2304,6.146,2305,6.146]],["title/array/array_method.html",[309,1.321,1774,2.428]],["body/array/array_method.html",[1,0.31,2,0.378,3,0.413,4,0.464,5,0.558,6,0.635,8,0.873,14,0.037,15,2.248,62,0.627,155,1.867,523,3.742,810,7.194,1664,5.62,2306,7.285,2307,7.285]],["title/array/good_part.html",[14,0.015,357,1.548]],["body/array/good_part.html",[1,0.259,14,0.036,404,2.557,599,4.437,2308,8.041,2309,8.041,2310,8.041]],["title/array/array_insert.html",[309,1.321,442,2.428]],["body/array/array_insert.html",[1,0.331,2,0.415,3,0.45,4,0.529,5,0.6,6,0.66,7,0.465,8,0.514,14,0.038,27,1.366,58,1.549,62,0.801,120,1.676,155,1.76,309,1.629,315,1.446,360,1.909,361,2.498,442,1.964,682,1.759,694,3.498,695,1.907,1675,3.09,1915,5.062,1916,2.607,2311,3.36,2312,3.36,2313,3.009,2314,3.009,2315,4.564,2316,3.009,2317,4.819,2318,3.009,2319,4.59,2320,4.59,2321,3.009,2322,2.779,2323,3.009,2324,5.563,2325,3.36,2326,3.36,2327,3.36,2328,4.59,2329,4.59,2330,4.59,2331,3.009,2332,3.766,2333,3.009,2334,2.257,2335,2.779,2336,4.238,2337,2.556,2338,3.009,2339,3.009,2340,3.009,2341,3.009,2342,4.59,2343,4.59,2344,3.36,2345,3.009,2346,3.009,2347,3.36,2348,3.009,2349,3.009,2350,2.171,2351,3.009,2352,3.009,2353,3.009,2354,3.009,2355,3.009,2356,3.009,2357,3.36]],["title/array/array_insert.html#把數據插入陣列尾部",[2358,5.536]],["body/array/array_insert.html#把數據插入陣列尾部",[1,0.326,2,0.412,3,0.45,4,0.525,5,0.59,6,0.672,14,0.038,62,0.777,395,6.004,694,3.558,695,3.444,1202,5.708,1915,5.279,2313,5.435,2314,5.435,2315,4.46,2316,5.435,2317,4.708,2359,6.068,2360,5.019]],["title/array/array_insert.html#把數據插入陣列頭部",[2361,4.959]],["body/array/array_insert.html#把數據插入陣列頭部",[1,0.324,2,0.408,3,0.446,4,0.518,5,0.583,6,0.604,14,0.038,58,1.55,62,0.76,395,6.195,694,3.491,1202,5.958,1915,5.167,2315,4.773,2317,5.038,2318,5.817,2319,7.262,2360,5.371]],["title/array/array_insert.html#把數據插入陣列指定位置",[2362,5.536]],["body/array/array_insert.html#把數據插入陣列指定位置",[1,0.317,2,0.384,3,0.419,4,0.448,5,0.504,14,0.038,58,1.471,62,0.779,155,1.474,315,2.955,395,4.813,442,4.014,682,3.596,1202,5.047,1916,5.328,2320,7.517,2321,6.151,2322,5.68,2323,6.151,2324,7.517,2328,7.517,2329,7.517,2330,6.151,2363,6.867,2364,6.867,2365,6.867,2366,6.867,2367,6.867,2368,6.867]],["title/array/array_insert.html#拼接兩個陣列",[2369,5.536]],["body/array/array_insert.html#拼接兩個陣列",[1,0.328,2,0.413,3,0.435,4,0.5,5,0.562,14,0.038,58,1.643,62,0.712,395,5.805,694,3.526,1202,4.94,1915,4.841,2315,4.94,2317,5.216,2331,6.021,2360,5.56]],["title/array/array_insert.html#fill",[2332,4.069]],["body/array/array_insert.html#fill",[1,0.314,2,0.362,3,0.395,4,0.497,5,0.594,6,0.676,7,0.598,8,0.662,14,0.037,58,1.157,62,0.704,155,2.055,309,2.098,361,3.992,2332,4.85,2333,5.911,2334,4.432,2335,5.458,2336,6.773,2337,4.085,2338,5.911,2339,5.911,2340,5.911,2341,5.911,2342,7.335,2343,7.335,2345,5.911,2346,5.911,2348,5.911,2349,5.911,2370,6.598,2371,6.598,2372,6.598]],["title/array/array_insert.html#example",[2350,3.577]],["body/array/array_insert.html#example",[1,0.246,2,0.31,3,0.339,4,0.407,5,0.458,6,0.522,7,0.692,8,0.766,14,0.036,27,3.105,120,3.809,155,1.639,360,3.332,1675,5.392,2351,6.839,2352,6.839,2353,6.839,2354,6.839,2355,6.839,2356,6.839,2361,6.839,2373,7.634,2374,7.634]],["title/array/array_merge.html",[309,1.321,2375,4.154]],["body/array/array_merge.html",[1,0.322,2,0.404,3,0.409,4,0.492,5,0.504,6,0.574,7,0.528,8,0.584,12,1.1,14,0.038,62,0.812,150,3.132,315,2.505,357,2.169,422,2.064,459,2.43,472,2.838,682,4.398,694,2.133,1887,3.91,1915,4.909,2315,4.279,2376,5.821,2377,7.562,2378,5.821,2379,5.821,2380,5.821,2381,7.562,2382,7.562,2383,5.821,2384,5.821,2385,3.63,2386,3.91,2387,4.08,2388,3.304,2389,3.91]],["title/array/array_methods.html",[309,1.321,1774,2.428]],["body/array/array_methods.html",[1,0.316,2,0.403,3,0.434,4,0.5,5,0.547,6,0.587,7,0.741,8,0.759,9,0.618,10,0.705,11,0.496,12,1.119,14,0.038,21,1.154,34,1.255,36,0.476,37,0.561,38,0.6,39,0.65,40,0.687,41,0.787,42,0.821,43,0.869,44,0.857,45,0.921,58,0.83,62,0.784,65,2.035,119,1.438,138,1.965,155,1.412,309,1.504,310,2.903,312,1.406,314,2.685,315,3.069,320,4.515,321,1.008,361,4.187,404,1.504,450,2.886,459,1.911,481,0.921,482,0.963,483,1.057,503,3.178,564,2.227,597,2.123,622,2.035,623,4.062,686,3.444,694,3.258,814,3.057,827,1.958,1431,2.123,1521,2.351,1885,3.477,1887,3.178,1888,3.477,1912,4.358,1914,1.889,1915,1.771,2334,2.035,2337,4.284,2350,1.958,2385,3.629,2386,3.909,2387,3.316,2388,4.482,2389,3.909,2390,2.714,2391,2.714,2392,2.714,2393,2.351,2394,2.351,2395,3.316,2396,2.351,2397,2.351,2398,2.351,2399,2.714,2400,2.714,2401,2.714,2402,2.714,2403,2.714,2404,2.714,2405,2.714,2406,2.714,2407,2.714,2408,2.714,2409,3.67,2410,2.714,2411,2.714,2412,2.714,2413,3.67,2414,2.714,2415,2.714,2416,2.714,2417,2.714,2418,4.237,2419,2.714,2420,4.237,2421,2.714,2422,2.714,2423,2.351,2424,2.714,2425,2.714,2426,2.714,2427,2.506,2428,4.814,2429,3.029,2430,4.814,2431,4.814,2432,2.506,2433,3.029,2434,3.029,2435,3.029,2436,2.506,2437,2.506,2438,2.506,2439,3.029,2440,2.506,2441,2.506,2442,2.506,2443,2.506,2444,2.506,2445,2.506,2446,3.029,2447,2.506,2448,2.506,2449,2.506]],["title/array/array_methods.html#Array",[309,1.76]],["body/array/array_methods.html#Array",[1912,4.539,2385,5.129,2450,8.226]],["title/array/array_methods.html#forEach",[623,2.974]],["body/array/array_methods.html#forEach",[1,0.311,2,0.392,3,0.414,4,0.391,5,0.44,6,0.5,7,0.664,8,0.735,9,0.956,12,0.874,14,0.037,21,0.984,58,1.284,62,0.63,361,4.543,694,2.683,1887,4.919,2337,4.648,2388,4.156,2390,6.56,2391,6.56,2392,6.56,2451,7.323]],["title/array/array_methods.html#map",[1912,3.055]],["body/array/array_methods.html#map",[1,0.282,2,0.356,3,0.389,4,0.394,5,0.443,6,0.504,7,0.669,12,1.046,14,0.037,21,0.992,62,0.635,312,1.208,315,3.175,361,3.598,694,2.704,2337,3.682,2386,4.957,2388,4.188,2389,4.957,2393,5.726,2394,5.726,2395,5.172,2396,5.726,2397,5.726,2398,5.726,2452,6.61,2453,6.61,2454,6.61]],["title/array/array_methods.html#filter",[2385,3.452]],["body/array/array_methods.html#filter",[1,0.281,2,0.379,3,0.414,4,0.392,5,0.441,6,0.502,7,0.666,8,0.737,12,1.043,14,0.037,21,0.987,62,0.631,138,1.908,312,1.202,315,3.159,361,3.579,694,2.69,2337,3.663,2386,4.931,2387,5.146,2388,4.166,2389,4.931,2399,6.576,2400,6.576,2455,7.341]],["title/array/array_methods.html#find",[564,4.069]],["body/array/array_methods.html#find",[1,0.302,2,0.381,3,0.391,4,0.397,5,0.446,6,0.508,12,1.051,14,0.037,21,1,62,0.64,312,1.218,315,3.2,321,2.475,361,3.626,694,2.725,2337,3.71,2388,4.22,2401,6.662,2402,6.662,2403,6.662,2404,6.662,2405,6.662,2456,7.436]],["title/array/array_methods.html#sort",[2406,4.959]],["body/array/array_methods.html#sort",[1,0.299,2,0.377,3,0.412,4,0.495,5,0.557,6,0.495,7,0.657,12,1.035,14,0.037,21,0.974,62,0.623,312,1.42,361,3.534,459,2.192,503,4.869,694,2.656,2337,3.616,2386,4.869,2389,4.869,2407,6.493,2408,6.493,2409,5.624,2457,7.249,2458,7.249,2459,7.249]],["title/array/array_methods.html#every",[]],["body/array/array_methods.html#every",[1,0.281,2,0.355,3,0.387,4,0.465,5,0.44,6,0.5,7,0.664,8,0.735,12,1.041,14,0.037,21,0.984,62,0.63,138,2.267,312,1.199,314,4.156,315,3.151,361,3.57,694,2.683,2337,3.653,2388,4.156,2410,6.56,2411,6.56,2412,6.56,2413,5.682,2460,6.56,2461,7.323]],["title/array/array_methods.html#some",[]],["body/array/array_methods.html#some",[1,0.281,2,0.379,3,0.387,4,0.391,5,0.44,6,0.5,7,0.664,8,0.735,12,1.041,14,0.037,21,0.984,62,0.63,138,2.267,312,1.199,314,4.156,315,3.151,361,3.57,694,2.683,2337,3.653,2388,4.156,2413,5.682,2414,6.56,2415,6.56,2416,6.56,2460,6.56,2462,7.323]],["title/array/array_methods.html#reduce",[320,4.295]],["body/array/array_methods.html#reduce",[1,0.295,2,0.379,3,0.406,4,0.478,5,0.504,6,0.5,7,0.403,8,0.632,9,0.581,10,0.886,11,0.729,12,0.95,14,0.038,21,0.983,34,1.843,36,0.699,37,0.824,38,0.881,39,0.955,40,1.008,41,1.156,42,1.206,43,1.276,44,1.258,45,1.353,58,0.78,62,0.771,65,2.988,119,1.353,138,1.156,155,1.708,168,2.455,309,1.414,310,3.649,312,1.198,320,4.888,340,2.076,361,2.169,404,2.003,450,3.49,459,1.592,481,1.353,482,1.414,483,1.552,503,2.988,597,3.118,622,2.988,623,4.51,686,4.165,694,3.076,814,2.875,827,2.875,1431,3.118,1521,3.452,1630,2.525,1885,3.27,1887,2.988,1888,4.63,1912,4.632,1914,2.774,1915,2.6,2334,2.988,2337,2.22,2350,2.875,2385,2.774,2387,3.118,2388,2.525,2395,3.118,2409,3.452,2417,3.985,2418,5.643,2419,3.985,2420,5.643,2421,3.985,2422,3.985,2423,3.452,2424,3.985,2425,3.985,2426,3.985,2427,3.68,2428,6.049,2430,6.049,2431,3.68,2432,3.68,2436,3.68,2437,3.68,2438,3.68,2440,3.68,2441,3.68,2442,3.68,2443,3.68,2444,3.68,2445,3.68,2447,3.68,2448,3.68,2449,3.68,2463,4.449,2464,5.643,2465,3.985,2466,5.643,2467,3.985,2468,3.985,2469,3.985,2470,3.985,2471,3.985,2472,3.985,2473,3.985,2474,3.985,2475,3.985,2476,3.985,2477,3.985,2478,3.985,2479,3.985,2480,3.985,2481,3.985,2482,3.985,2483,3.985,2484,3.985,2485,3.985,2486,3.985,2487,3.985,2488,3.985,2489,3.985,2490,3.985]],["title/array/array_methods.html#examples",[2350,3.577]],["body/array/array_methods.html#examples",[1,0.273,2,0.36,3,0.376,4,0.452,5,0.508,6,0.476,7,0.467,8,0.7,9,0.673,10,0.845,11,0.844,12,0.832,14,0.038,21,1.063,36,0.809,37,0.954,38,1.02,39,1.106,40,1.168,41,1.339,42,1.396,43,1.478,44,1.457,45,1.566,58,0.903,62,0.761,65,3.461,119,1.566,138,1.339,155,1.497,310,3.944,312,1.142,340,2.404,450,3.717,481,1.566,482,1.638,483,1.798,503,3.461,623,4.755,686,4.436,694,3.104,814,3.329,1431,3.611,1521,3.998,1630,2.924,1885,3.787,1887,3.461,1912,4.884,1914,3.212,1915,3.012,2385,3.212,2387,3.611,2388,2.924,2395,3.611,2409,3.998,2427,4.262,2428,6.539,2430,6.539,2431,4.262,2432,4.262,2436,4.262,2437,4.262,2438,4.262,2440,4.262,2441,4.262,2442,4.262,2443,4.262,2444,4.262,2445,4.262,2447,4.262,2448,4.262,2449,4.262,2464,6.247,2465,4.615,2466,6.247,2467,4.615,2468,4.615,2469,4.615,2470,4.615,2471,4.615,2472,4.615,2473,4.615,2474,4.615,2475,4.615,2476,4.615,2477,4.615,2478,4.615,2479,4.615,2480,4.615,2481,4.615,2482,4.615,2483,4.615,2484,4.615,2485,4.615,2486,4.615,2487,4.615,2488,4.615,2489,4.615,2490,4.615]],["title/array/splice.html",[309,1.321,2322,3.436]],["body/array/splice.html",[1,0.317,2,0.39,3,0.432,4,0.512,5,0.576,6,0.656,7,0.871,8,0.964,9,1.254,10,0.701,11,0.948,14,0.038,36,0.909,58,1.468,62,0.763,155,1.617,312,1.233,744,5.411,1664,5.411,2491,5.183,2492,6.747,2493,5.183,2494,5.183,2495,5.183,2496,5.183,2497,7.946]],["title/array/splice.html#分割指定长度的元素数组",[2498,5.536]],["body/array/splice.html#分割指定长度的元素数组",[1,0.317,2,0.39,3,0.431,4,0.512,5,0.575,6,0.655,7,0.869,8,0.962,9,1.252,10,0.697,11,0.942,14,0.038,36,0.904,58,1.464,62,0.761,155,1.611,312,1.229,744,5.396,1664,5.396,2491,5.152,2492,6.721,2493,5.152,2494,5.152,2495,5.152,2496,5.152,2497,7.927]],["title/array/map.html",[]],["body/array/map.html",[1,0.287,2,0.362,3,0.364,4,0.437,5,0.455,6,0.518,7,0.688,8,0.663,9,0.862,10,0.577,11,0.779,12,0.788,14,0.038,21,0.888,36,0.748,37,0.881,38,0.942,39,1.022,40,1.497,41,1.237,42,1.79,43,1.365,44,1.346,45,1.447,58,1.158,62,0.568,116,2.557,123,3.548,155,1.848,309,1.513,312,1.409,315,2.048,359,3.936,360,3.47,361,3.22,459,1.669,481,1.447,482,1.513,483,1.661,484,1.744,485,1.867,486,1.935,487,1.935,488,1.971,489,1.715,490,1.971,491,2.591,492,1.971,493,1.971,513,1.971,514,1.901,515,1.971,516,2.048,517,2.048,518,1.971,519,2.048,520,2.088,521,2.088,522,2.088,523,2.048,524,2.088,694,1.744,1505,2.736,1771,3.86,1912,3.644,2245,3.197,2253,3.498,2334,3.197,2337,3.295,2386,3.197,2388,2.701,2389,3.197,2393,3.692,2394,3.692,2395,3.335,2396,3.692,2397,3.692,2398,3.692,2499,3.692,2500,4.263,2501,3.692,2502,4.263,2503,5.916,2504,4.263,2505,4.263,2506,4.263,2507,4.263,2508,4.263,2509,4.263,2510,4.263,2511,4.263,2512,6.794,2513,4.263,2514,4.263,2515,4.263,2516,4.263,2517,5.885,2518,4.263,2519,4.263,2520,5.916,2521,4.263,2522,7.978,2523,5.916,2524,4.263,2525,4.263,2526,7.709,2527,4.263,2528,4.263,2529,3.692,2530,5.916,2531,4.263,2532,4.263,2533,4.263]],["title/array/map.html#map",[1912,3.055]],["body/array/map.html#map",[1,0.285,2,0.36,3,0.36,4,0.433,5,0.45,6,0.513,7,0.681,8,0.654,9,0.85,10,0.566,11,0.764,12,0.778,14,0.038,21,0.876,36,0.733,37,0.864,38,0.924,39,1.002,40,1.476,41,1.212,42,1.765,43,1.338,44,1.319,45,1.419,58,1.142,62,0.56,116,2.507,123,3.5,155,1.835,309,1.483,312,1.399,315,2.008,359,3.859,360,3.385,361,3.176,481,1.419,482,1.483,483,1.628,484,1.71,485,1.831,486,1.898,487,1.898,488,1.933,489,1.682,490,1.933,491,2.556,492,1.933,493,1.933,513,1.933,514,1.864,515,1.933,516,2.008,517,2.008,518,1.933,519,2.008,520,2.047,521,2.047,522,2.047,523,2.008,524,2.047,694,1.71,1505,2.699,1771,3.808,1912,2.575,2245,3.134,2253,3.429,2334,3.134,2337,3.25,2386,3.134,2388,2.648,2389,3.134,2393,3.62,2394,3.62,2395,3.27,2396,3.62,2397,3.62,2398,3.62,2452,4.18,2453,4.18,2454,4.18,2499,3.62,2500,4.18,2501,3.62,2502,4.18,2503,5.835,2504,4.18,2505,4.18,2506,4.18,2507,4.18,2508,4.18,2509,4.18,2510,4.18,2511,4.18,2512,6.723,2513,4.18,2514,4.18,2515,4.18,2516,4.18,2517,5.054,2518,4.18,2519,4.18,2520,5.835,2521,4.18,2522,7.654,2523,5.835,2524,4.18,2525,4.18,2526,7.654,2527,4.18,2528,4.18,2529,3.62,2530,5.835,2531,4.18,2532,4.18,2533,4.18,2534,4.666,2535,4.666,2536,4.666]],["title/array/object_to_array.html",[309,1.321,453,1.191]],["body/array/object_to_array.html",[1,0.25,14,0.036,155,1.67,309,2.473,360,2.899,453,2.593,589,5.284,694,2.851,2537,7.779,2538,7.779,2539,7.779,2540,7.779,2541,7.779,2542,7.779,2543,7.779,2544,7.779,2545,7.779]],["title/array/filter.html",[309,1.321,2385,2.59]],["body/array/filter.html",[1,0.319,2,0.403,3,0.387,4,0.337,5,0.379,6,0.431,10,0.965,12,0.753,14,0.038,21,0.848,58,1.396,62,0.543,138,2.069,155,1.354,312,1.033,314,3.58,321,2.1,494,2.768,514,2.52,675,3.972,694,2.917,1505,3.298,1912,3.481,1914,5.712,2385,5.438,2387,4.421,2413,4.894,2546,6.308,2547,6.308,2548,6.308,2549,6.308,2550,6.308,2551,6.308,2552,6.308,2553,6.308,2554,5.651,2555,6.308,2556,6.308,2557,6.308]],["title/array/filter.html#‘1’-‘2’-‘3’-filter-parseInt",[14,0.01,2558,2.482,2559,2.482,2560,2.77]],["body/array/filter.html#‘1’-‘2’-‘3’-filter-parseInt",[1,0.308,2,0.388,3,0.316,14,0.037,58,1.249,138,2.229,494,3.125,675,4.28,905,4.28,1914,5.959,1989,6.657,2000,5.892,2385,4.441,2554,6.38,2561,7.122,2562,7.122,2563,7.122,2564,7.122,2565,7.122,2566,8.58,2567,7.122,2568,7.122,2569,7.122,2570,7.122,2571,6.38,2572,6.38,2573,6.38,2574,7.122,2575,7.122,2576,7.122,2577,7.122]],["title/array/fill.html",[309,1.321,2332,3.053]],["body/array/fill.html",[1,0.317,2,0.391,3,0.372,4,0.491,5,0.585,6,0.657,7,0.527,8,0.583,9,0.759,10,0.704,11,0.951,14,0.037,21,0.781,24,5.232,27,4.198,36,1.186,37,1.076,58,1.558,62,0.764,155,1.621,309,1.847,312,0.951,361,4.091,433,2.549,453,1.666,792,3.858,2332,6.529,2334,3.902,2335,6.94,2336,6.94,2337,4.186,2578,5.81,2579,5.81,2580,5.81,2581,5.81,2582,8.39,2583,6.94,2584,5.81,2585,5.81,2586,5.81]],["title/cases/replace.html",[162,4.579]],["body/cases/replace.html",[1,0.279,2,0.295,3,0.322,4,0.387,5,0.435,6,0.495,7,0.657,8,0.727,12,1.035,14,0.037,19,2.27,21,0.974,62,0.623,138,1.884,153,5.328,161,4.869,614,5.996,625,3.962,1505,3.003,2587,7.249,2588,8.67,2589,7.249,2590,6.493,2591,7.767,2592,7.767,2593,8.67,2594,7.249,2595,7.249]],["title/cases/if.html",[]],["body/cases/if.html",[1,0.268,2,0.339,3,0.37,4,0.445,5,0.5,6,0.569,7,0.615,8,0.681,9,0.886,10,0.822,11,1.111,12,0.81,14,0.037,19,2.125,27,2.76,36,1.066,37,1.256,38,1.344,39,1.457,40,1.538,55,5.839,58,1.461,62,0.716,114,1.718,138,2.165,155,1.457,314,5.476,357,2.529,459,2.106,2254,5.613,2596,5.613,2597,6.785,2598,6.785,2599,6.785,2600,6.785,2601,8.33,2602,8.33]],["title/cases/math.html",[14,0.02]],["body/cases/math.html",[1,0.286,2,0.404,3,0.292,4,0.352,5,0.396,6,0.45,7,0.43,8,0.476,12,0.904,14,0.038,19,1.485,36,0.745,58,1.632,62,0.567,119,2.003,138,1.967,150,1.508,268,2.957,312,0.777,357,1.767,404,2.095,459,1.199,472,2.313,753,2.548,1387,2.957,1554,2.861,1610,2.773,1675,2.861,1679,2.773,1761,3.486,1762,4.721,1763,4.426,1764,3.486,1765,3.486,1766,3.486,1767,3.486,1768,3.486,1769,4.426,1770,4.426,1771,2.773,1772,3.186,1773,3.186,1774,2.773,1775,3.186,1776,3.186,1777,5.651,1778,5.651,1779,5.025,1780,2.957,1781,4.249,1782,2.957,1783,2.957,1784,4.249,1785,4.249,1786,2.957,1787,4.249,1788,6.08,1789,4.108,1790,5.547,1791,5.101,1792,4.108,1793,4.108,1794,4.108,1795,2.957,1796,4.249,1797,4.249,1798,2.957,1799,2.957,1800,2.957,1801,2.957,1802,2.957,1803,2.957,1804,2.957,1805,2.957,1806,2.957,1807,2.957,1808,2.957,2603,4.743,2604,4.743]],["title/cases/math.html#浮點數運算的坑",[1811,4.579]],["body/cases/math.html#浮點數運算的坑",[1,0.286,2,0.402,3,0.291,4,0.35,5,0.394,6,0.449,7,0.428,8,0.474,12,0.901,14,0.037,19,1.478,36,0.742,58,1.63,62,0.565,119,1.996,138,1.962,150,1.501,268,2.943,274,2.943,312,0.773,404,1.501,459,1.193,472,2.301,753,2.536,1387,2.943,1554,2.846,1610,2.759,1630,2.679,1675,2.846,1679,2.759,1761,3.469,1762,4.708,1763,4.411,1764,3.469,1765,3.469,1766,3.469,1767,3.469,1768,3.469,1769,3.17,1770,4.411,1771,2.759,1772,3.17,1773,3.17,1774,2.759,1775,3.17,1776,3.17,1777,5.645,1778,5.645,1779,4.772,1780,2.943,1782,2.943,1783,2.943,1786,2.943,1788,6.075,1789,2.943,1790,5.539,1791,5.09,1792,4.094,1793,4.094,1794,4.094,1795,2.943,1798,2.943,1799,2.943,1800,2.943,1801,2.943,1802,2.943,1803,2.943,1804,2.943,1805,2.943,1806,2.943,1807,2.943,1808,2.943,1812,3.904,1813,3.904,1814,3.904,1815,3.904,1816,3.904,1817,3.904,1818,3.904,1819,3.904,1820,3.904,1821,3.469,1822,3.469,1823,3.469,1824,3.17,1828,3.17,1829,3.17,1830,3.17,1831,3.17,1832,3.17,1833,3.17,1834,3.17,1835,3.17,1836,3.17,1837,3.17,1838,3.17,1839,3.17,1840,5.967,1841,5.967,1842,5.967,1843,5.967,1844,3.17,1845,3.17,1846,3.17,1847,3.17,1848,3.17,1849,3.17,1850,3.17,1851,3.17,1852,3.17,1853,3.17,1854,3.17,1855,3.17,2605,3.904,2606,3.904]],["title/cases/math.html#科學符號處理",[1821,4.069]],["body/cases/math.html#科學符號處理",[1,0.285,2,0.405,3,0.229,4,0.276,5,0.31,6,0.353,7,0.469,8,0.519,14,0.037,19,1.619,58,1.665,138,1.816,268,3.224,274,3.224,312,0.847,1387,3.224,1554,3.118,1610,3.022,1630,2.935,1675,3.118,1679,3.022,1762,3.224,1769,3.473,1770,4.696,1771,3.022,1772,3.473,1773,3.473,1774,3.022,1775,3.473,1776,3.473,1777,5.738,1778,5.738,1779,4.959,1780,3.224,1782,3.224,1783,3.224,1786,3.224,1788,6.167,1789,3.224,1790,5.695,1791,5.289,1792,4.359,1793,4.359,1794,4.359,1795,3.224,1798,3.224,1799,3.224,1800,3.224,1801,3.224,1802,3.224,1803,3.224,1804,3.224,1805,3.224,1806,3.224,1807,3.224,1808,3.224,1822,3.8,1823,3.8,1824,3.473,1828,3.473,1829,3.473,1830,3.473,1831,3.473,1832,3.473,1833,3.473,1834,3.473,1835,3.473,1836,3.473,1837,3.473,1838,3.473,1839,3.473,1840,6.135,1841,6.135,1842,6.135,1843,6.135,1844,3.473,1845,3.473,1846,3.473,1847,3.473,1848,3.473,1849,3.473,1850,3.473,1851,3.473,1852,3.473,1853,3.473,1854,3.473,1855,3.473,2605,4.277,2606,4.277]],["title/cases/math.html#why-0-1-0-2-0-3",[14,0.014,1777,1.388,1778,1.388,1779,1.388]],["body/cases/math.html#why-0-1-0-2-0-3",[1,0.28,2,0.406,14,0.037,19,1.722,58,1.688,138,1.893,274,3.428,1554,3.316,1610,3.214,1630,3.12,1679,3.214,1762,3.428,1777,5.752,1778,5.752,1779,4.774,1780,3.428,1782,3.428,1783,3.428,1786,3.428,1788,6.226,1789,3.428,1790,5.796,1791,5.422,1792,4.541,1793,4.541,1794,4.541,1795,3.428,1798,3.428,1799,3.428,1800,3.428,1801,3.428,1802,3.428,1803,3.428,1804,3.428,1805,3.428,1806,3.428,1807,3.428,1808,3.428,1824,3.693,1828,3.693,1829,3.693,1830,3.693,1831,3.693,1832,3.693,1833,3.693,1834,3.693,1835,3.693,1836,3.693,1837,3.693,1838,3.693,1839,3.693,1840,6.244,1841,6.244,1842,6.244,1843,6.244,1844,3.693,1845,3.693,1846,3.693,1847,3.693,1848,3.693,1849,3.693,1850,3.693,1851,3.693,1852,3.693,1853,3.693,1854,3.693,1855,3.693,2605,4.548,2606,4.548]],["title/cases/arr.html",[309,1.76]],["body/cases/arr.html",[1,0.324,2,0.409,3,0.419,4,0.404,5,0.35,6,0.399,7,0.529,8,0.844,9,0.762,10,1.019,11,0.955,14,0.038,36,0.916,37,1.08,38,1.155,39,1.626,58,1.328,62,0.651,155,1.626,309,3.004,312,1.24,404,1.855,451,2.417,482,2.407,487,2.372,491,2.971,494,2.559,514,2.33,1763,3.918,1912,4.639,1914,5.749,2607,4.825,2608,5.833,2609,5.833,2610,5.833,2611,8.407,2612,5.833,2613,5.833,2614,5.833,2615,7.572,2616,5.833,2617,5.833,2618,5.833,2619,5.833]],["title/cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組",[2620,5.536]],["body/cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組",[1,0.294,2,0.386,3,0.309,4,0.372,14,0.038,58,1.222,451,2.886,494,3.057,905,4.733,1763,4.68,1912,5.033,1914,6.061,1989,7.36,2000,7.847,2558,6.241,2559,6.241,2571,6.241,2572,6.241,2573,6.241,2621,6.967,2622,6.967,2623,6.967,2624,6.967]],["title/cases/delay.html",[2625,4.959]],["body/cases/delay.html",[1,0.263,2,0.266,3,0.291,4,0.35,5,0.393,6,0.448,7,0.594,8,0.658,9,0.856,10,0.794,11,1.073,14,0.037,15,2.865,31,5.476,36,1.03,37,1.213,38,1.298,39,1.407,40,1.485,62,0.701,116,4.38,118,5.534,120,3.269,121,5.534,123,3.521,138,1.703,155,2.051,164,5.42,263,5.085,346,2.442,347,4.38,551,3.125,616,2.766,635,4.402,2245,4.402,2254,5.42,2625,7.95,2626,8.153,2627,5.87,2628,8.153,2629,6.553,2630,7.303,2631,6.553,2632,8.153,2633,8.153,2634,6.553]],["title/cases/str.html",[14,0.015,34,1.721]],["body/cases/str.html",[1,0.303,2,0.366,3,0.4,4,0.445,5,0.407,12,1.076,14,0.038,21,0.912,46,5.825,58,1.19,62,0.775,85,5.613,114,1.399,155,1.457,312,1.111,423,5.669,614,6.891,1502,6.464,2590,6.078,2635,6.785,2636,8.33,2637,6.785,2638,6.785,2639,6.785,2640,6.785,2641,6.785,2642,6.785,2643,6.785,2644,6.785,2645,6.078,2646,8.33,2647,6.078,2648,6.078]],["title/cases/str.html#url",[46,3.577]],["body/cases/str.html#url",[1,0.25,2,0.315,3,0.344,12,0.926,14,0.036,46,5.832,62,0.667,85,6.418,155,1.666,168,4.281,1049,3.81,2645,6.95,2647,6.95,2648,6.95,2649,9.025]],["title/function/factory​_factory.html",[21,0.558,2650,3.436]],["body/function/factory​_factory.html",[1,0.292,2,0.368,3,0.414,4,0.483,5,0.543,6,0.619,7,0.821,8,0.869,9,1.13,10,1.016,11,1.373,14,0.038,15,1.223,21,1.28,36,1.261,37,1.269,38,1.357,39,0.851,116,4.311,118,3.614,121,2.471,155,1.619,193,3.278,267,5.188,312,1.527,314,3.29,347,2.129,404,1.843,598,2.662,607,2.187,681,2.025,785,null,849,2.913,872,3.746,1388,3.075,2650,4.795,2651,6.139,2652,6.755,2653,3.963,2654,3.963,2655,5.796,2656,6.853,2657,5.192,2658,5.796,2659,3.963,2660,6.755,2661,3.55,2662,3.55,2663,7.187,2664,3.55,2665,3.55,2666,3.55,2667,3.075,2668,3.278,2669,5.192,2670,3.55,2671,3.55,2672,5.192,2673,3.55,2674,3.55,2675,3.55,2676,3.55,2677,7.755,2678,7.951,2679,5.192,2680,5.796,2681,6.139,2682,5.192,2683,3.55,2684,3.55,2685,3.55,2686,3.55,2687,3.55,2688,3.963,2689,3.55,2690,3.55,2691,3.55,2692,3.55,2693,3.55,2694,3.963,2695,5.192,2696,4.795,2697,3.55,2698,4.498,2699,3.55,2700,5.192,2701,3.55]],["title/function/factory​_factory.html#組合的工廠函數",[2702,5.536]],["body/function/factory​_factory.html#組合的工廠函數",[1,0.282,2,0.355,3,0.388,4,0.467,5,0.525,6,0.597,7,0.793,8,0.877,9,1.142,10,1.027,11,1.388,14,0.038,15,1.263,21,1.246,36,1.277,37,1.292,38,1.383,39,0.879,116,4.113,118,3.7,121,2.552,155,1.644,267,4.751,312,1.495,314,3.368,347,2.199,404,1.301,598,2.749,607,2.259,681,2.091,785,null,849,3.008,872,2.645,1388,3.176,2650,3.386,2651,5.316,2652,3.667,2657,3.667,2660,5.316,2661,3.667,2662,3.667,2663,6.859,2664,3.667,2665,3.667,2666,3.667,2667,3.176,2668,3.386,2669,5.316,2670,3.667,2671,3.667,2672,5.316,2673,3.667,2674,3.667,2675,3.667,2676,3.667,2677,7.833,2678,8.023,2679,5.316,2681,6.254,2682,5.316,2683,3.667,2684,3.667,2685,3.667,2686,3.667,2687,3.667,2689,3.667,2690,3.667,2691,3.667,2692,3.667,2693,3.667,2695,5.316,2696,4.909,2697,3.667,2698,4.605,2699,3.667,2700,5.316,2701,3.667,2703,4.093,2704,4.093,2705,4.093,2706,4.093,2707,4.093,2708,4.093,2709,4.093,2710,4.093,2711,4.093,2712,4.093,2713,4.093,2714,4.093,2715,4.093,2716,3.667,2717,4.093,2718,4.093,2719,5.934,2720,4.093,2721,4.093,2722,4.093,2723,4.093,2724,4.093,2725,4.093,2726,5.934,2727,5.934,2728,4.093,2729,4.093,2730,4.093,2731,4.093,2732,4.093,2733,4.093,2734,4.093,2735,4.093,2736,4.093,2737,4.093,2738,4.093,2739,4.093,2740,4.093,2741,4.093,2742,4.093,2743,4.093,2744,4.093,2745,4.093,2746,4.093,2747,4.093,2748,4.093]],["title/global/promise.html",[116,2.974]],["body/global/promise.html",[1,0.271,2,0.309,3,0.374,4,0.405,5,0.456,6,0.472,7,0.627,8,0.694,9,0.903,10,0.488,11,0.659,12,0.825,14,0.038,15,2.344,21,1.021,24,2.509,36,0.632,37,0.745,38,0.797,39,0.864,40,0.912,41,1.046,42,1.091,43,1.154,44,1.138,45,1.223,58,1.028,62,0.748,114,0.83,115,4.204,116,5.211,118,5.423,119,1.782,120,2.924,121,5.034,149,1.919,150,2.567,155,1.868,198,1.637,278,3.605,312,1.132,314,3.924,360,1.5,404,1.279,438,2.995,459,2.041,481,1.223,482,1.279,483,1.404,484,1.475,485,1.579,486,1.637,487,1.637,488,1.667,489,1.451,490,1.667,491,1.579,492,1.667,493,1.667,513,1.667,514,1.607,515,1.667,516,1.732,517,1.732,518,1.667,519,1.732,536,2.008,616,1.699,675,4.447,814,2.6,818,2.958,862,2.958,2016,3.122,2243,4.849,2244,3.329,2245,5.102,2253,2.958,2337,2.008,2350,2.6,2591,3.605,2592,5.251,2627,3.605,2749,4.024,2750,4.024,2751,4.024,2752,4.024,2753,4.024,2754,5.862,2755,5.862,2756,4.024,2757,4.024,2758,4.024,2759,4.024,2760,8.426,2761,4.024,2762,4.024,2763,4.024,2764,4.024,2765,4.024,2766,4.024,2767,5.862,2768,5.862,2769,4.024,2770,4.024,2771,4.024,2772,4.024,2773,4.024,2774,4.024,2775,4.024,2776,4.024,2777,4.024,2778,4.024,2779,4.024,2780,4.024,2781,4.024,2782,4.024]],["title/global/date.html",[347,2.974]],["body/global/date.html",[1,0.252,2,0.318,3,0.382,4,0.417,5,0.469,6,0.419,7,0.709,10,0.948,11,1.281,12,1.118,14,0.038,15,3.003,36,0.964,41,2.237,42,1.662,58,1.51,62,0.673,140,4.298,155,1.679,347,5.344,483,2.14,484,2.247,761,4.507,763,4.507,765,4.507,767,5.747,2783,9.066,2784,6.133,2785,9.066,2786,6.133,2787,6.133,2788,5.494,2789,5.494,2790,5.494,2791,5.494,2792,5.494,2793,5.494,2794,6.067,2795,6.067,2796,7.005,2797,5.494,2798,5.494,2799,5.494]],["title/global/date.html#Date-prototype-toISOString",[2788,4.959]],["body/global/date.html#Date-prototype-toISOString",[1,0.23,2,0.291,3,0.318,4,0.382,5,0.43,6,0.489,7,0.78,10,1.043,14,0.037,15,2.655,42,1.94,58,1.509,62,0.74,140,5.017,155,1.848,347,4.623,484,2.623,761,5.261,763,5.261,765,5.261,767,5.261,2789,6.412,2790,6.412,2791,6.412,2792,6.412,2793,6.412,2794,6.677,2795,6.677,2796,7.709,2797,6.412,2798,6.412,2799,6.412,2800,7.158,2801,7.158]],["title/http/caching.html",[14,0.015,29,2.428]],["body/http/caching.html",[1,0.192,2,0.285,3,0.362,4,0.319,5,0.358,6,0.408,7,0.541,8,0.599,9,0.78,10,0.989,11,0.978,12,0.713,14,0.038,19,1.87,24,2.574,29,4.767,30,3.491,36,0.649,37,0.764,38,0.818,109,7.683,123,3.208,133,3.698,138,1.552,153,6.248,155,1.65,198,1.679,347,2.218,353,4.701,426,2.894,643,3.415,706,4.389,830,4.011,1372,3.859,2036,4.185,2076,7.681,2080,5.717,2517,6.328,2802,3.698,2803,3.698,2804,7.616,2805,7.853,2806,3.698,2807,5.965,2808,4.128,2809,3.698,2810,4.128,2811,4.128,2812,4.128,2813,6.359,2814,6.746,2815,4.939,2816,4.939,2817,4.939,2818,4.939,2819,5.349,2820,4.939,2821,5.971,2822,4.939,2823,8.518,2824,7.616,2825,7.306,2826,8.041,2827,5.349,2828,7.306,2829,4.128,2830,3.698,2831,3.698]],["title/http/caching.html#強緩存",[2832,5.536]],["body/http/caching.html#強緩存",[1,0.178,2,0.225,3,0.387,4,0.295,5,0.332,6,0.378,7,0.501,8,0.555,9,0.722,10,0.993,11,0.906,12,0.66,14,0.037,19,2.29,24,3.448,29,4.274,30,4.274,109,7.855,123,2.971,155,1.57,255,4.29,340,2.58,353,4.289,371,4.574,426,3.876,643,4.574,706,5.374,830,3.714,958,3.448,1032,2.971,1372,3.573,1630,4.149,2036,3.876,2076,7.837,2080,6.352,2802,4.953,2803,4.953,2804,8.119,2805,8.119,2806,4.953,2807,5.673,2809,4.953,2813,6.048,2814,4.574,2815,4.574,2816,4.574,2817,4.574,2818,4.574,2819,4.953,2820,4.574,2822,4.574,2833,5.529,2834,5.529,2835,5.529,2836,5.529,2837,5.529,2838,5.529,2839,5.529,2840,5.529,2841,5.529,2842,5.529,2843,5.529,2844,5.529,2845,5.529,2846,5.529,2847,5.529,2848,5.529,2849,5.529,2850,5.529,2851,5.529,2852,5.529,2853,5.529,2854,5.529,2855,5.529,2856,5.529,2857,5.529,2858,5.529,2859,4.953,2860,5.529,2861,5.529,2862,4.953,2863,7.311,2864,4.953,2865,4.953,2866,4.953,2867,5.529,2868,5.529,2869,4.953,2870,5.529,2871,5.529,2872,5.529,2873,5.529,2874,5.529,2875,5.529,2876,5.529,2877,5.529,2878,5.529,2879,5.529,2880,5.529,2881,5.529,2882,5.529,2883,5.529,2884,5.529,2885,5.529]],["title/http/caching.html#協商緩存",[2886,5.536]],["body/http/caching.html#協商緩存",[1,0.18,2,0.228,3,0.249,4,0.299,5,0.336,6,0.383,7,0.508,8,0.563,9,0.732,10,0.679,11,0.918,12,0.669,14,0.037,36,0.881,37,1.038,38,1.11,123,3.011,138,1.917,153,6.869,155,1.584,353,4.318,830,3.765,1372,3.622,1630,3.181,2036,3.929,2517,6.798,2716,6.608,2813,6.102,2814,6.821,2815,4.636,2816,4.636,2817,4.636,2818,4.636,2820,4.636,2822,4.636,2823,8.971,2824,8.373,2825,8.155,2826,8.373,2827,6.608,2828,8.155,2830,5.021,2831,5.021,2859,5.021,2862,5.021,2864,5.021,2865,5.021,2866,5.021,2869,5.021,2887,5.605,2888,5.605,2889,5.605,2890,5.605,2891,5.605,2892,5.605,2893,5.605,2894,5.605,2895,5.605,2896,5.605,2897,5.605,2898,5.605,2899,5.605,2900,5.605,2901,5.605,2902,5.605,2903,5.605,2904,5.605,2905,5.605,2906,5.605,2907,5.605,2908,5.605,2909,5.605,2910,5.605,2911,5.605,2912,5.605,2913,5.605,2914,5.605,2915,5.605,2916,5.605,2917,7.377,2918,5.605,2919,7.377,2920,5.605,2921,5.605,2922,5.605,2923,5.605,2924,5.605,2925,5.605,2926,5.605,2927,5.605,2928,7.377,2929,5.605]],["title/http/caching.html#References",[198,2.252]],["body/http/caching.html#References",[29,5.438,2076,6.346,2930,8.179,2931,8.179]],["title/glossary/hoisting.html",[2932,4.154,2933,4.154]],["body/glossary/hoisting.html",[1,0.312,2,0.389,3,0.425,4,0.479,5,0.539,6,0.613,7,0.814,8,0.9,9,1.124,10,0.65,12,1.125,14,0.038,21,1.304,62,0.834,114,1.106,150,2.997,317,2.503,321,2.385,404,1.705,416,3.048,422,2.541,434,3.345,446,3.144,472,3.493,594,7.227,665,5.033,681,2.741,2934,7.165,2935,7.165,2936,7.165,2937,7.165,2938,5.364,2939,5.364,2940,5.364,2941,5.364]],["title/operators/delete.html",[]],["body/operators/delete.html",[1,0.308,2,0.318,3,0.347,4,0.417,14,0.036,21,1.051,312,1.281,555,4.669,1505,4.082]],["title/operators/delete.html#delete",[555,2.699]],["body/operators/delete.html#delete",[1,0.308,2,0.318,3,0.347,4,0.417,14,0.036,21,1.051,312,1.281,555,3.814,1505,3.967,2942,7.822,2943,7.822,2944,7.822]],["title/object/object​_keys.html",[2945,4.959]],["body/object/object​_keys.html",[1,0.297,2,0.391,3,0.337,4,0.405,5,0.456,6,0.519,7,0.808,8,0.762,9,0.991,10,0.92,11,0.959,12,1.006,14,0.038,29,3.424,31,5.658,36,0.92,37,1.084,38,1.16,39,1.258,40,1.327,41,1.522,58,1.477,62,0.839,114,1.737,119,2.308,123,3.147,150,2.678,155,1.808,204,6.191,267,4.924,453,2.713,459,2.129,589,3.424,694,2.146,792,2.992,2945,5.247,2946,5.857,2947,5.857,2948,5.857,2949,5.857,2950,5.857,2951,5.857,2952,5.857,2953,5.857,2954,5.857,2955,5.857,2956,7.592,2957,5.857,2958,5.857,2959,5.857,2960,5.857]],["title/global/function.html",[]],["body/global/function.html",[1,0.307,2,0.339,3,0.388,4,0.445,5,0.501,6,0.57,7,0.703,8,0.778,9,1.013,10,0.824,11,1.114,12,0.593,14,0.038,15,1.532,21,1.175,36,0.78,37,0.919,38,0.983,39,1.066,40,1.125,62,0.751,114,1.802,115,4.161,198,2.019,307,4.24,309,1.578,321,2.263,346,3.108,416,2.851,423,4.101,425,5.031,453,1.424,681,2.537,710,5.339,711,5.269,718,6.017,742,4.766,772,5.276,785,null,1894,3.48,2667,3.852,2961,6.8,2962,4.447,2963,4.447,2964,4.447,2965,4.447,2966,4.447,2967,4.447,2968,7.472,2969,7.827,2970,7.827,2971,4.447,2972,4.447,2973,4.447,2974,4.447,2975,4.447,2976,4.965,2977,6.091,2978,4.447]],["title/global/function.html#call、apply、bind",[2979,4.959]],["body/global/function.html#call、apply、bind",[309,2.542,453,2.294,710,4.538,711,4.823,1976,7.163,2962,7.163,2963,7.163,2964,7.163,2980,7.996,2981,7.996,2982,7.996,2983,7.996,2984,7.996]],["title/global/function.html#為什麼我們需要-apply-bind-call-？",[14,0.011,425,1.114,710,1.048,711,1.114,2985,1.847,2986,1.847]],["body/global/function.html#為什麼我們需要-apply-bind-call-？",[321,2.684,681,4.12,2965,7.224,2987,8.064,2988,8.064,2989,8.064,2990,8.064,2991,8.064,2992,8.064,2993,8.064]],["title/global/function.html#cab-call-apply-vs-bind",[14,0.016,425,0.836,710,0.786,711,0.836,1894,0.971,2966,1.241]],["body/global/function.html#cab-call-apply-vs-bind",[228,5.438,307,4.837,425,5.443,710,5.122,711,5.443,958,5.951,1346,6.02,1971,6.95,1972,6.95,2994,7.758,2995,7.758,2996,7.758,2997,6.418,2998,7.758,2999,7.758,3000,7.758,3001,7.758,3002,7.758,3003,7.758]],["title/global/function.html#bind",[710,3.142]],["body/global/function.html#bind",[1,0.291,2,0.352,3,0.385,4,0.463,5,0.52,6,0.592,7,0.738,8,0.817,9,1.062,10,0.878,11,1.187,12,0.651,14,0.038,15,1.683,21,1.165,36,0.857,37,1.01,38,1.081,39,1.171,40,1.236,62,0.776,114,1.861,115,4.325,307,3.402,321,1.816,346,3.23,416,2.92,423,3.29,710,3.096,718,5.623,742,5.079,772,4.233,785,null,1049,2.303,1302,4.887,1346,4.233,2667,4.233,2967,4.887,2968,7.766,2969,8.083,2970,8.083,2971,4.887,2972,4.887,2973,4.887,2974,4.887,2975,4.887,2977,4.887,2978,4.887,2997,6.73,3004,8.669,3005,8.669,3006,5.456,3007,5.456,3008,5.456,3009,5.456,3010,5.456,3011,5.456,3012,5.456,3013,5.456,3014,5.456]],["title/global/function.html#References",[198,2.252]],["body/global/function.html#References",[3,0.363,2979,7.327,2997,6.765,3015,8.179,3016,8.179]],["title/object/assign.html",[433,1.823,453,1.191]],["body/object/assign.html",[1,0.325,2,0.402,3,0.434,4,0.409,5,0.46,6,0.524,7,0.539,12,1.191,14,0.038,62,0.771,150,3.072,433,3.362,453,2.433,459,2.4,604,3.192,792,4.578,793,5.147,1455,5.946,3017,5.942,3018,7.016,3019,7.412,3020,7.412,3021,5.323,3022,5.323,3023,5.942]],["title/object/assign.html#合併物件",[3024,5.536]],["body/object/assign.html#合併物件",[1,0.307,2,0.388,3,0.424,4,0.379,5,0.426,6,0.485,7,0.644,12,1.14,14,0.037,62,0.737,150,2.924,453,2.038,459,2.325,792,3.63,793,4.773,3018,5.877,3019,7.086,3020,7.086,3021,6.365,3022,6.365,3025,7.105]],["title/object/assign.html#有相同屬性時合併物件區段",[3026,5.536]],["body/object/assign.html#有相同屬性時合併物件區段",[1,0.314,2,0.388,3,0.408,4,0.378,5,0.425,6,0.484,12,1.139,14,0.038,62,0.61,150,3.033,433,3.11,453,2.033,459,2.322,792,3.621,793,4.761,3018,7.076,3019,7.076,3020,7.076,3027,7.087]],["title/object/create.html",[769,4.295]],["body/object/create.html",[1,0.297,2,0.308,3,0.259,4,0.312,5,0.351,6,0.399,7,0.53,8,0.587,9,0.763,10,0.708,11,0.957,12,0.698,14,0.038,15,1.804,21,1.131,36,0.918,37,1.082,38,1.158,39,1.255,40,1.325,41,1.519,42,1.584,43,1.677,44,1.653,45,1.777,58,1.33,62,0.766,67,5.236,114,1.563,138,1.97,321,1.946,361,2.85,425,3.525,453,2.175,481,1.777,482,1.858,483,2.04,484,2.142,485,2.294,486,2.377,598,3.926,694,2.142,769,6.529,779,6.792,785,null,872,3.777,1505,3.917,1506,6.241,1915,3.417,2668,4.835,2696,6.271,3028,9.454,3029,5.845,3030,4.535,3031,9.454,3032,5.845,3033,5.845,3034,5.845,3035,5.845,3036,9.226,3037,6.271,3038,5.845]],["title/operators/typeof.html",[]],["body/operators/typeof.html",[1,0.308,2,0.332,3,0.362,4,0.436,5,0.49,12,0.784,14,0.037,15,2.027,19,2.057,21,1.249,27,3.613,65,5.484,161,6.707,312,1.337,357,3.042,405,4.827,420,5.091,431,3.356,432,4.095,435,3.001,446,4.194,451,2.721,453,2.342,1462,6.001,3037,6.753,3039,7.959,3040,5.884,3041,6.568,3042,5.884,3043,5.884,3044,5.884,3045,5.884,3046,5.884,3047,5.096,3048,5.884]],["title/operators/typeof.html#typeof",[446,2.429]],["body/operators/typeof.html#typeof",[1,0.276,2,0.348,3,0.38,4,0.457,5,0.514,12,0.848,14,0.037,21,1.236,65,4.773,161,6.805,312,1.403,420,4.43,431,3.63,435,3.246,446,4.036,451,2.943,1462,6.297,3039,8.239,3040,6.365,3049,7.105,3050,7.105,3051,7.105,3052,7.105,3053,7.105,3054,6.365,3055,7.105]],["title/operators/typeof.html#null",[27,2.252]],["body/operators/typeof.html#null",[1,0.286,14,0.036,19,2.36,27,3.608,65,5.061,357,2.808,405,5.538,420,4.698,432,4.698,446,3.306,453,2.161,3037,7.338,3042,6.749,3043,6.749,3044,6.749,3045,6.749,3046,6.749,3047,5.846,3048,6.749,3056,7.534,3057,7.534,3058,7.534,3059,7.534,3060,7.534,3061,7.534,3062,7.534,3063,7.534]],["title/operators/destructuring_assignment.html",[]],["body/operators/destructuring_assignment.html",[1,0.242,2,0.306,3,0.334,4,0.402,5,0.546,6,0.585,7,0.804,8,0.657,9,0.613,10,1.169,11,0.769,14,0.038,36,0.738,37,0.869,38,0.93,39,1.008,40,1.064,41,1.22,42,1.273,43,1.347,44,2.728,45,1.428,62,0.854,140,4.587,150,3.068,155,1.617,169,5.279,312,0.769,347,4.376,422,3.037,433,2.061,453,1.877,459,2.439,481,1.428,482,1.493,489,3.087,518,3.375,528,2.816,753,4.602,792,2.399,2257,6.32,2499,3.644,2501,3.644,2794,5.077,2795,5.077,3064,4.207,3065,5.862,3066,4.207,3067,4.207,3068,4.207,3069,6.746,3070,5.862,3071,5.862,3072,7.297,3073,4.207,3074,4.207,3075,4.207,3076,4.207,3077,4.207,3078,6.544,3079,4.207,3080,4.207]],["title/operators/destructuring_assignment.html#Destructuring-assignment",[433,1.823,3064,3.721]],["body/operators/destructuring_assignment.html#Destructuring-assignment",[1,0.24,2,0.303,3,0.331,4,0.398,5,0.544,6,0.582,7,0.8,8,0.649,9,0.603,10,1.166,11,0.757,14,0.038,36,0.726,37,0.855,38,0.915,39,0.992,40,1.047,41,1.201,42,1.252,43,1.325,44,2.72,45,1.405,62,0.852,140,4.535,150,3.058,155,1.603,169,5.233,312,0.757,347,4.346,422,3.019,453,1.856,459,2.431,481,1.405,482,1.469,489,3.069,518,3.351,528,2.784,753,4.574,792,2.361,2257,6.276,2499,3.585,2501,3.585,2794,5.02,2795,5.02,3065,5.796,3066,4.139,3067,4.139,3068,4.139,3069,6.688,3070,5.796,3071,5.796,3072,7.245,3073,4.139,3074,4.139,3075,4.139,3076,4.139,3077,4.139,3079,4.139,3080,4.139,3081,6.47]],["title/swagger/to-html.html",[1648,2.911,3082,2.59]],["body/swagger/to-html.html",[14,0.027,24,4.647,27,2.316,30,5.831,31,5.582,32,6.066,34,4.019,51,5.582,102,7.831,119,1.731,198,3.818,309,1.81,312,0.933,315,2.45,416,2.3,604,4.464,616,3.508,733,4.113,832,6.447,872,3.68,1372,6.446,1434,3.991,1505,3.442,1648,3.991,1664,3.68,1771,4.857,2036,5.824,2041,7.765,2074,4.71,2337,2.841,2607,4.71,2698,4.418,2807,4.418,3030,4.418,3047,6.447,3082,4.647,3083,5.101,3084,5.101,3085,4.71,3086,4.71,3087,6.425,3088,5.101,3089,8.409,3090,7.897,3091,5.101,3092,7.444,3093,6.677,3094,5.101,3095,6.677,3096,6.677,3097,6.447,3098,6.165,3099,5.101,3100,4.71,3101,4.71,3102,5.101,3103,5.101,3104,5.101,3105,5.101]],["title/swagger/to-html.html#Swagger-to-HTML",[1648,2.911,3082,2.59]],["body/swagger/to-html.html#Swagger-to-HTML",[14,0.027,24,4.659,27,2.325,30,5.835,31,5.592,32,6.073,34,4.023,51,5.592,102,7.835,119,1.738,198,3.822,309,1.818,312,0.936,315,2.46,416,2.306,604,4.473,616,3.514,733,4.124,832,6.46,872,3.694,1372,6.45,1434,4.007,1505,3.449,1664,3.694,1771,4.867,2036,5.835,2041,7.773,2074,4.729,2337,2.852,2607,4.729,2698,4.436,2807,4.436,3030,4.436,3047,6.46,3082,3.565,3083,5.121,3084,5.121,3085,4.729,3086,4.729,3087,6.431,3088,5.121,3089,8.418,3090,7.909,3091,5.121,3092,7.458,3093,6.694,3094,5.121,3095,6.694,3096,6.694,3097,6.46,3098,6.181,3099,5.121,3100,4.729,3101,4.729,3102,5.121,3103,5.121,3104,5.121,3105,5.121]],["title/swagger/to-html.html#undefined",[3082,2.59,3085,3.436]],["body/swagger/to-html.html#undefined",[1434,5.782,3086,6.824]],["title/swagger/to-html.html#List-all-pets",[1664,2.684,3087,2.79]],["body/swagger/to-html.html#List-all-pets",[3087,5.557]],["title/swagger/to-html.html#Create-a-pet",[872,2.684,3087,2.79]],["body/swagger/to-html.html#Create-a-pet",[3087,5.541,3098,6.824]],["title/swagger/to-html.html#Info-for-a-specific-pet",[3030,2.579,3087,2.233,3100,2.749]],["body/swagger/to-html.html#Info-for-a-specific-pet",[3101,6.843]],["title/operators/precedence.html",[]],["body/operators/precedence.html",[1,0.311,2,0.404,3,0.365,4,0.392,5,0.441,6,0.501,7,0.504,8,0.558,9,0.726,10,0.674,11,0.911,12,1.043,14,0.038,36,0.874,37,1.03,38,1.101,39,1.194,40,1.26,41,1.445,42,1.507,43,1.595,44,1.573,45,1.691,62,0.751,114,1.147,138,1.445,144,5.518,321,2.443,360,3.061,459,2.208,481,1.691,482,1.768,483,1.941,484,2.038,485,2.182,486,2.262,487,2.262,488,2.304,489,2.005,490,2.304,491,2.182,492,2.304,493,2.304,513,2.304,514,2.222,515,2.304,1505,3.619,3106,8.214,3107,4.982,3108,7.358,3109,6.574,3110,5.562,3111,8.902,3112,7.825,3113,4.982,3114,4.982,3115,4.982,3116,4.982,3117,5.562,3118,5.562]],["title/operators/precedence.html#運算子優先序",[991,3.236]],["body/operators/precedence.html#運算子優先序",[1,0.235,2,0.297,3,0.324,12,0.872,14,0.037,62,0.749,114,1.506,138,1.898,144,6.252,360,3.468,3107,6.543,3108,8.337,3109,7.802,3119,9.637,3120,7.304,3121,7.304,3122,9.307]],["title/operators/precedence.html#運算符比-運算符高",[14,0.012,3123,2.977,3124,3.324]],["body/operators/precedence.html#運算符比-運算符高",[1,0.311,2,0.406,3,0.341,4,0.409,5,0.461,6,0.524,7,0.54,8,0.598,9,0.777,10,0.722,11,0.975,12,1.014,14,0.038,36,0.936,37,1.102,38,1.179,39,1.278,40,1.349,41,1.547,42,1.614,43,1.708,44,1.684,45,1.81,62,0.66,321,2.554,330,5.334,459,2.267,481,1.81,482,1.893,483,2.078,484,2.182,485,2.336,486,2.422,487,2.422,488,2.467,489,2.146,490,2.467,491,2.336,492,2.467,493,2.467,513,2.467,514,2.378,515,2.467,1505,3.517,3111,8.999,3112,7.605,3113,5.334,3114,5.334,3115,5.334,3116,5.334,3123,5.334,3125,5.954,3126,5.954,3127,5.954,3128,5.954,3129,5.954,3130,5.954,3131,5.954,3132,5.954]],["title/swagger/ui.html",[3082,2.59,3133,3.436]],["body/swagger/ui.html",[1,0.301,14,0.037,21,1.18,259,6.451,312,1.212,2423,5.74,3082,5.472,3097,5.74,3133,6.12,3134,6.627,3135,6.627,3136,6.627,3137,6.627,3138,6.627,3139,7.862,3140,6.627,3141,6.627,3142,6.627,3143,6.627,3144,6.627,3145,6.627,3146,6.627,3147,6.627,3148,6.627,3149,6.627,3150,6.627,3151,6.627]],["title/swagger/ui.html#Swagger-UI",[3082,2.59,3133,3.436]],["body/swagger/ui.html#Swagger-UI",[1,0.302,14,0.037,21,1.183,259,6.47,312,1.218,2423,5.77,3082,4.637,3097,5.77,3134,6.662,3135,6.662,3136,6.662,3137,6.662,3138,6.662,3139,7.886,3140,6.662,3141,6.662,3142,6.662,3143,6.662,3144,6.662,3145,6.662,3146,6.662,3147,6.662,3148,6.662,3149,6.662,3150,6.662,3151,6.662]],["title/operators/function.html",[]],["body/operators/function.html",[1,0.288,2,0.363,3,0.396,4,0.439,5,0.494,6,0.454,12,1.066,14,0.038,21,1.356,62,0.571,114,1.37,317,3.1,353,3.479,404,2.112,415,4.657,416,2.537,437,5.771,1443,6.776,1870,4.657,3152,6.644,3153,6.644,3154,6.644,3155,7.366,3156,5.496,3157,8]],["title/operators/function.html#函數表達式",[3158,4.959]],["body/operators/function.html#函數表達式",[1,0.285,2,0.36,3,0.393,4,0.434,5,0.489,6,0.447,12,1.058,14,0.038,21,1.327,62,0.562,114,1.348,317,3.051,353,3.424,415,4.583,416,2.512,437,5.729,1443,6.758,3054,5.857,3155,7.293,3156,5.408,3157,7.942,3158,7.293,3159,6.538,3160,6.538,3161,6.538,3162,6.538,3163,6.538,3164,6.538,3165,6.538,3166,6.538,3167,6.538]],["title/statements/AsyncFunction.html",[3168,4.959]],["body/statements/AsyncFunction.html",[1,0.298,2,0.293,3,0.32,4,0.385,5,0.433,6,0.493,7,0.654,8,0.724,10,1.122,11,1.181,14,0.038,21,0.97,58,1.265,62,0.796,114,1.487,263,6.707,419,3.95,422,2.558,1894,5.055,2630,7.744,3168,6.461,3169,7.212,3170,7.212]],["title/statements/let.html",[]],["body/statements/let.html",[1,0.291,2,0.367,3,0.344,4,0.414,5,0.466,12,0.926,14,0.037,62,0.667,108,6.418,138,2.016,422,2.751,431,3.964,3171,6.95,3172,6.95]],["title/statements/let.html#let",[]],["body/statements/let.html#let",[1,0.29,2,0.366,3,0.342,4,0.412,5,0.463,12,0.921,14,0.036,62,0.664,108,6.383,138,2.005,422,2.737,431,3.943,3171,6.913,3172,6.913,3173,7.717,3174,7.717,3175,7.717,3176,7.717]],["title/string/split.html",[]],["body/string/split.html",[1,0.318,2,0.299,3,0.327,4,0.393,5,0.442,6,0.503,7,0.667,8,0.739,9,0.961,10,0.892,14,0.037,21,0.989,54,6.133,58,1.291,62,0.633,312,1.205,625,3.363,2583,6.088,3177,6.593,3178,7.36,3179,7.36,3180,6.593,3181,8.655,3182,6.593,3183,6.593]],["title/string/split.html#split",[54,3.88]],["body/string/split.html#split",[1,0.31,2,0.297,3,0.324,4,0.39,5,0.438,6,0.499,7,0.662,8,0.733,9,0.954,10,0.885,14,0.037,21,0.982,54,5.119,58,1.281,62,0.628,312,1.196,625,3.337,905,3.644,2583,6.042,3177,6.543,3180,6.543,3181,8.633,3182,6.543,3183,6.543,3184,7.304,3185,7.304,3186,7.304,3187,7.304,3188,6.543]],["title/statements/if...else.html",[]],["body/statements/if...else.html",[1,0.311,2,0.392,3,0.354,4,0.425,5,0.479,6,0.545,7,0.723,8,0.8,9,0.825,10,0.766,11,1.035,14,0.038,31,6.349,36,0.993,37,1.17,38,1.252,39,1.357,40,1.433,41,1.643,42,1.713,62,0.813,114,1.89,267,5.641,346,2.356,792,4.461,793,4.247,814,5.642,3189,6.322,3190,6.322,3191,7.821,3192,6.322,3193,7.141,3194,7.971,3195,6.322,3196,6.322,3197,6.322,3198,6.322,3199,6.322,3200,5.663]],["title/statements/if...else.html#if…else",[3201,5.536]],["body/statements/if...else.html#if…else",[]],["title/statements/if...else.html#條件組合的問題",[3202,5.536]],["body/statements/if...else.html#條件組合的問題",[1,0.31,2,0.391,3,0.351,4,0.422,5,0.475,6,0.541,7,0.718,8,0.794,9,0.816,10,0.758,11,1.024,14,0.037,31,6.328,36,0.982,37,1.158,38,1.238,39,1.343,40,1.417,41,1.625,42,1.694,62,0.81,114,1.883,267,5.625,346,2.33,792,4.438,793,4.2,814,4.041,3191,5.601,3193,5.601,3200,5.601,3203,6.253,3204,6.253,3205,7.916,3206,7.916,3207,6.253,3208,7.916,3209,7.916,3210,7.916,3211,6.253,3212,6.253,3213,6.253,3214,6.253,3215,6.253,3216,6.253,3217,6.253,3218,6.253,3219,6.253,3220,6.253,3221,6.253]],["title/statements/for.html",[]],["body/statements/for.html",[1,0.29,2,0.366,3,0.423,4,0.412,5,0.572,6,0.528,7,0.864,8,0.775,9,1.009,10,0.936,11,1.265,14,0.038,36,0.945,58,1.355,62,0.774,309,1.913,344,4.491,360,3.355,423,3.629,438,4.599,589,4.987,599,3.32,835,4.977,1889,7.393,3222,6.017,3223,6.017,3224,9.002,3225,7.643,3226,8.064,3227,5.39,3228,6.017,3229,5.39]],["title/statements/for.html#for…of與for…in的差別",[3230,5.536]],["body/statements/for.html#for…of與for…in的差別",[1,0.288,2,0.364,3,0.421,4,0.408,5,0.57,6,0.523,7,0.861,8,0.768,9,0.999,10,0.928,11,1.253,14,0.037,36,0.932,58,1.342,62,0.77,228,4.156,340,2.767,344,4.467,375,5.312,438,3.91,599,3.272,913,3.186,1034,4.111,1100,4.156,1889,7.364,3225,7.59,3226,8.02,3227,5.312,3229,5.312,3231,5.93,3232,8.473,3233,5.93,3234,5.93,3235,5.93,3236,5.93,3237,5.93,3238,5.93,3239,5.93,3240,5.93,3241,5.93,3242,5.93,3243,5.93,3244,5.93,3245,5.93,3246,5.93,3247,5.93,3248,5.93,3249,5.93,3250,5.93,3251,5.93,3252,5.93,3253,7.652,3254,5.93,3255,5.93,3256,5.93,3257,5.93,3258,5.93,3259,5.93]],["title/statements/block.html",[14,0.02]],["body/statements/block.html",[1,0.317,2,0.397,3,0.406,4,0.489,5,0.55,6,0.59,7,0.746,8,0.667,9,0.868,10,0.806,11,1.089,12,1.145,14,0.038,19,2.388,21,1.161,36,0.755,37,0.89,38,0.952,39,1.032,40,1.089,41,1.249,62,0.825,114,1.697,155,1.032,312,0.787,321,2.739,361,2.344,415,5.344,416,1.483,422,2.918,431,2.456,435,2.196,438,5.089,446,3.92,459,1.927,706,3.533,753,3.573,1436,3.73,1462,4.888,1505,3.408,1595,3.976,3156,3.976,3260,4.807,3261,8.637,3262,6.65,3263,6.65,3264,4.807,3265,4.807]],["title/string/queue.html",[3266,4.295]],["body/string/queue.html",[1,0.277,2,0.318,3,0.347,4,0.382,5,0.43,6,0.489,7,0.649,8,0.719,9,0.935,10,0.868,11,1.173,12,0.732,14,0.038,18,2.583,21,1.308,36,1.125,37,1.326,38,1.418,39,1.538,40,1.389,41,1.593,42,1.661,43,1.759,44,1.734,45,1.864,54,3.002,58,1.256,62,0.616,144,4.118,149,3.415,155,0.92,198,1.742,312,1.485,315,3.364,354,2.363,357,1.596,428,4.875,473,2.042,481,1.302,482,1.362,483,1.495,744,2.767,1505,2.54,2350,5.562,2529,3.323,2596,6.844,3266,5.557,3267,3.836,3268,4.757,3269,3.836,3270,4.757,3271,3.836,3272,5.492,3273,3.836,3274,3.836,3275,5.071,3276,5.492,3277,5.492,3278,5.492,3279,3.836,3280,3.836,3281,4.283,3282,4.283,3283,4.283,3284,4.283,3285,4.283,3286,5.924,3287,3.543,3288,3.543,3289,3.543,3290,3.543,3291,3.543,3292,3.543,3293,6.415,3294,6.415,3295,3.836,3296,7.003,3297,5.492,3298,3.836,3299,7.003,3300,5.492,3301,3.836,3302,3.836,3303,3.836,3304,3.836,3305,3.836,3306,3.836,3307,3.836]],["title/string/queue.html#數據結構：隊列（Queue）",[3308,5.536]],["body/string/queue.html#數據結構：隊列（Queue）",[1,0.205,2,0.259,3,0.282,4,0.34,5,0.382,6,0.435,7,0.577,8,0.639,9,0.831,10,0.771,11,1.042,14,0.038,21,1.319,36,1,37,1.178,38,1.26,39,1.366,40,1.442,41,1.654,42,1.725,43,1.825,44,1.799,45,1.935,58,1.404,149,3.035,312,1.505,315,3.768,744,4.112,3266,4.938,3267,5.701,3268,4.938,3269,5.701,3270,4.938,3271,5.701,3272,7.171,3273,5.701,3274,5.701,3275,5.264,3276,5.701,3309,6.364,3310,6.364,3311,6.364,3312,6.364,3313,6.364,3314,6.364,3315,6.364,3316,6.364]],["title/string/queue.html#時間複雜度",[3317,5.536]],["body/string/queue.html#時間複雜度",[1,0.214,2,0.271,3,0.296,4,0.355,5,0.4,6,0.455,7,0.604,8,0.668,9,0.869,10,0.807,11,1.091,14,0.038,21,1.29,36,1.046,37,1.233,38,1.319,39,1.43,149,3.927,312,1.349,315,2.865,3268,5.167,3270,5.167,3275,5.509,3277,7.377,3278,7.377,3279,5.966,3280,5.966,3286,6.812,3287,5.509,3288,5.509,3289,5.509,3290,5.509,3291,5.509,3292,5.509,3318,6.659,3319,6.659,3320,6.659,3321,6.659,3322,6.659,3323,6.659,3324,6.659,3325,6.659,3326,6.659,3327,6.659,3328,6.659,3329,6.659,3330,6.659,3331,6.659,3332,6.659,3333,5.966,3334,5.966]],["title/string/queue.html#雙端隊列（Deque）",[3333,4.959]],["body/string/queue.html#雙端隊列（Deque）",[1,0.227,2,0.286,3,0.312,4,0.375,5,0.422,6,0.481,7,0.638,8,0.706,9,0.919,10,0.853,11,1.152,14,0.038,21,1.31,36,1.105,37,1.302,38,1.393,39,1.51,149,4.061,312,1.395,315,3.027,3268,5.459,3270,5.459,3286,7.044,3287,5.819,3288,5.819,3289,5.819,3290,5.819,3291,5.819,3292,5.819,3334,6.302]],["title/string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞",[3335,5.536]],["body/string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞",[1,0.266,2,0.301,3,0.329,4,0.301,5,0.338,6,0.385,7,0.511,8,0.566,9,0.736,10,0.683,11,0.923,12,0.884,14,0.038,18,3.4,21,0.996,36,0.886,37,1.044,38,1.117,39,1.211,40,1.278,41,1.465,42,1.528,43,1.617,44,1.594,45,1.714,54,3.952,58,0.989,62,0.711,144,4.974,155,1.211,168,4.087,312,1.213,357,2.101,428,5.475,473,2.689,481,1.714,482,1.793,483,1.968,1049,4.307,2350,5.675,2529,4.375,2596,7.544,3188,5.051,3266,4.375,3293,7.408,3294,7.408,3295,5.051,3296,7.867,3297,6.634,3298,5.051,3299,7.867,3300,6.634,3301,5.051,3302,5.051,3303,5.051,3304,5.051,3305,5.051,3306,5.051,3307,5.051,3336,5.638,3337,5.638,3338,5.638,3339,5.638,3340,5.638,3341,5.638,3342,7.405,3343,5.638,3344,5.638,3345,5.638,3346,5.638,3347,5.638,3348,5.638,3349,5.638,3350,5.638]],["title/string/queue.html#References",[198,2.252]],["body/string/queue.html#References",[3351,8.273]]],"invertedIndex":[["",{"_index":14,"title":{"RegExp.html":{},"arrowFunction.html":{},"core.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"math.html":{},"math.html#why-0-1-0-2-0-3":{},"array/good_part.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/math.html":{},"cases/math.html#why-0-1-0-2-0-3":{},"cases/str.html":{},"http/caching.html":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"global/function.html#cab-call-apply-vs-bind":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{}},"body":{"ajax.html":{},"RegExp.html":{},"RegExp.html#match":{},"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{},"es6.html":{},"es6.html#Module-的加载实现":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#ES6-Airbnb":{},"core.html#箭頭函數":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{},"index.html#More-Informations":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"closures.html":{},"closures.html#傳多個函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"url.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"F2E/GraphQL.html":{},"F2E/header.html":{},"F2E/token.html":{},"F2E/cookie.html":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_method.html":{},"array/good_part.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/map.html":{},"array/map.html#map":{},"array/object_to_array.html":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"array/fill.html":{},"cases/replace.html":{},"cases/if.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"cases/delay.html":{},"cases/str.html":{},"cases/str.html#url":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"glossary/hoisting.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/create.html":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/typeof.html#null":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/AsyncFunction.html":{},"statements/let.html":{},"statements/let.html#let":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["0",{"_index":58,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"RegExp.html#match":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#Let":{},"core.html#箭頭函數":{},"num.html":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"performance.html":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"this.html":{},"this.html#簡易呼叫":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/map.html":{},"array/map.html#map":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"array/fill.html":{},"cases/if.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"cases/str.html":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/object​_keys.html":{},"object/create.html":{},"statements/AsyncFunction.html":{},"string/split.html":{},"string/split.html#split":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["0&#x4e5f;&#x662f;&#x6700;&#x5f8c;&#x57f7;&#x884c",{"_index":930,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["0)&#xff1a;radix&#x7684;&#x503c;&#x70ba;0&#xff0c;&#x5224;&#x65b7;&#x5b57;&#x7b26;&#x4e32;&#x767c;&#x73fe;&#x4ecb;&#x65bc;1~9&#xff0c;&#x7528;10&#x9032;&#x5236;&#x8f49;&#x63db;&#xff0c;&#x7d50;&#x679c;&#x70ba;1&#xff0c;&#x6240;&#x4ee5;callback&#x7684;&#x7d50;&#x679c;&#x7b49;&#x50f9;&#x65bc;true&#xff0c;&#x8fd4;&#x56de;&#x5143;&#x7d20;&#x2019;1&#x2019;&#x3002",{"_index":2568,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["0)：radix的值為0，判斷字符串發現介於1~9，用10進制轉換，結果為1，所以callback的結果等價於true，返回元素’1",{"_index":2548,"title":{},"body":{"array/filter.html":{}}}],["0,1,2",{"_index":1868,"title":{},"body":{"this.html":{}}}],["0,1,2,3,4",{"_index":350,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{}}}],["0.00011",{"_index":1787,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["0.000110",{"_index":1795,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.009",{"_index":1768,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["0.009000000000000001",{"_index":1767,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["0.1",{"_index":1777,"title":{"math.html#why-0-1-0-2-0-3":{},"cases/math.html#why-0-1-0-2-0-3":{}},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.1.tostring(2",{"_index":1786,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.1的二進制格式是：0.0001100011",{"_index":1796,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["0.2",{"_index":1778,"title":{"math.html#why-0-1-0-2-0-3":{},"cases/math.html#why-0-1-0-2-0-3":{}},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.2).tofixed(10",{"_index":1799,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.2).toprecision(10",{"_index":1798,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.3",{"_index":1779,"title":{"math.html#why-0-1-0-2-0-3":{},"cases/math.html#why-0-1-0-2-0-3":{}},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.30000000000000004",{"_index":1780,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.4",{"_index":1790,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.6",{"_index":1793,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.8",{"_index":1791,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.9",{"_index":1766,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["0.999",{"_index":1563,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["00010",{"_index":1531,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["0011",{"_index":1788,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["007",{"_index":1557,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["01",{"_index":1789,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["01&#x201d",{"_index":1838,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["02",{"_index":1610,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["03",{"_index":1808,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["03:24:00",{"_index":2786,"title":{},"body":{"global/date.html":{}}}],["05",{"_index":2795,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["0x",{"_index":496,"title":{},"body":{"core.html":{}}}],["0x&#x662f;&#x6307;&#x5341;&#x516d;&#x9032;&#x5236;&#x6578",{"_index":1011,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["0x01",{"_index":565,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["0x02",{"_index":574,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["0x11",{"_index":495,"title":{},"body":{"core.html":{}}}],["1",{"_index":1,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"RegExp.html#match":{},"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{},"es6.html":{},"es6.html#Module-的加载实现":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"index.html":{},"index.html#Getting-Started":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"closures.html":{},"closures.html#傳多個函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"F2E/header.html":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_method.html":{},"array/good_part.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/map.html":{},"array/map.html#map":{},"array/object_to_array.html":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"array/fill.html":{},"cases/replace.html":{},"cases/if.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"cases/delay.html":{},"cases/str.html":{},"cases/str.html#url":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"glossary/hoisting.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/create.html":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/typeof.html#null":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/AsyncFunction.html":{},"statements/let.html":{},"statements/let.html#let":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["1&#x662f;&#x6574;&#x578b",{"_index":3060,"title":{},"body":{"operators/typeof.html#null":{}}}],["1&#xff0c;&#x53ea;&#x662f;&#x8a08;&#x7b97;&#x548c;&#x8ce6;&#x503c;&#x7684;&#x9806;&#x5e8f;&#x4e0d;&#x4e00;&#x6a23;&#x3002",{"_index":1635,"title":{},"body":{"operators.html#Increment":{}}}],["1','2','3",{"_index":1913,"title":{},"body":{"this.html":{}}}],["1(function",{"_index":444,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["1)&#xff1a;radix&#x7684;&#x503c;&#x70ba;1&#xff0c;&#x5982;&#x679c;&#x8a72;&#x53c3;&#x6578;&#x5c0f;&#x65bc",{"_index":2570,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["1)：radix的值為1",{"_index":2550,"title":{},"body":{"array/filter.html":{}}}],["1,2,3",{"_index":2379,"title":{},"body":{"array/array_merge.html":{}}}],["1,2,3,4",{"_index":2340,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["1,2,3,4,5,6",{"_index":2378,"title":{},"body":{"array/array_merge.html":{}}}],["1.&#x5728;&#x9810;&#x71b1;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;vip&#x7528;&#x6236;&#x8d08;&#x9001",{"_index":3204,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["1.0",{"_index":3044,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["1.0.0",{"_index":3086,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#undefined":{}}}],["1.0.name",{"_index":3043,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["1.1",{"_index":191,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["1.2",{"_index":1794,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["1.4",{"_index":1765,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["1.4000000000000001",{"_index":1761,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["1.6",{"_index":1792,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["1.name",{"_index":3045,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["1.在預熱中參與活動，vip",{"_index":3190,"title":{},"body":{"statements/if...else.html":{}}}],["10",{"_index":10,"title":{},"body":{"ajax.html":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"asynchronous.html":{},"asynchronous.html#異步":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"closures.html":{},"closures.html#傳多個函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/map.html":{},"array/map.html#map":{},"array/filter.html":{},"array/fill.html":{},"cases/if.html":{},"cases/arr.html":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"glossary/hoisting.html":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/AsyncFunction.html":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["100",{"_index":119,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"performance.html":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"this.html":{},"this.html#Closure":{},"this.html#Callback":{},"variable.html":{},"variable.html#動態型別":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"global/promise.html":{},"object/object​_keys.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["1000",{"_index":346,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#const":{},"this.html":{},"this.html#Closure":{},"cases/delay.html":{},"global/function.html":{},"global/function.html#bind":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["10000",{"_index":475,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"closures.html":{},"closures.html#傳多個函數":{}}}],["1000000",{"_index":1760,"title":{},"body":{"math.html":{},"math.html#Math":{}}}],["100m",{"_index":2749,"title":{},"body":{"global/promise.html":{}}}],["11",{"_index":11,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"closures.html":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"performance.html":{},"performance.html#事件節流":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/if.html":{},"cases/arr.html":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/AsyncFunction.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["11&#x8868;&#x793a;2+1=3",{"_index":2010,"title":{},"body":{"this.html#bind-apply-call":{}}}],["11*11",{"_index":467,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["110",{"_index":1880,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["1100",{"_index":689,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["11中包含了兩個1,數字20中不包含1,數字1到21中共包含了13個1",{"_index":3179,"title":{},"body":{"string/split.html":{}}}],["11表示2+1=3",{"_index":1922,"title":{},"body":{"this.html":{}}}],["12",{"_index":36,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"closures.html":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"performance.html":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/if.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/arr.html":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"http/caching.html":{},"http/caching.html#協商緩存":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["120",{"_index":1881,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["121",{"_index":468,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["122",{"_index":1607,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["123",{"_index":1462,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/block.html":{}}}],["12345",{"_index":194,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["125",{"_index":819,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["13",{"_index":37,"title":{},"body":{"ajax.html":{},"RESTfulAPI.html":{},"RESTfulAPI.html#References":{},"asynchronous.html":{},"asynchronous.html#異步":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"closures.html":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/if.html":{},"cases/arr.html":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"http/caching.html":{},"http/caching.html#協商緩存":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["1337",{"_index":2755,"title":{},"body":{"global/promise.html":{}}}],["13t04:00:00.000z",{"_index":3079,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["14",{"_index":38,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"closures.html":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"cases/if.html":{},"cases/arr.html":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"http/caching.html":{},"http/caching.html#協商緩存":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["140",{"_index":2582,"title":{},"body":{"array/fill.html":{}}}],["141.449997",{"_index":3080,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["142.970001",{"_index":3077,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["14t04:00:00.000z",{"_index":3076,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["15",{"_index":39,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"operators.html":{},"operators.html#Increment":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"cases/if.html":{},"cases/arr.html":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["150",{"_index":1885,"title":{},"body":{"this.html":{},"this.html#Callback":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["16",{"_index":40,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"closures.html":{},"closures.html#傳多個函數":{},"operators.html":{},"operators.html#Increment":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"cases/if.html":{},"cases/delay.html":{},"global/promise.html":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["16+1",{"_index":497,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["17",{"_index":41,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"this.html":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"global/date.html":{},"object/object​_keys.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["17t03:24:00",{"_index":2787,"title":{},"body":{"global/date.html":{}}}],["18",{"_index":42,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"this.html":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["180",{"_index":3182,"title":{},"body":{"string/split.html":{},"string/split.html#split":{}}}],["19",{"_index":43,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"this.html":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["1995",{"_index":2785,"title":{},"body":{"global/date.html":{}}}],["1:200",{"_index":2579,"title":{},"body":{"array/fill.html":{}}}],["1xx",{"_index":182,"title":{},"body":{"RESTfulAPI.html":{}}}],["1xx&#xff1a;&#x76f8;&#x95dc;&#x4fe1;&#x606f",{"_index":236,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["1到400之間所有數字中包含的1的個數，比如數字1中包含了一個1",{"_index":3178,"title":{},"body":{"string/split.html":{}}}],["2",{"_index":2,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"RegExp.html#match":{},"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{},"es6.html":{},"es6.html#Module-的加载实现":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"closures.html":{},"closures.html#傳多個函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"F2E/header.html":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_method.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/map.html":{},"array/map.html#map":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"array/fill.html":{},"cases/replace.html":{},"cases/if.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"cases/delay.html":{},"cases/str.html":{},"cases/str.html#url":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"glossary/hoisting.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/create.html":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/AsyncFunction.html":{},"statements/let.html":{},"statements/let.html#let":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["2&#x5b9a;&#x7fa9;&#x4e00;&#x6bb5;&#x51fd;&#x5f0f;&#x4e26;&#x8ce6;&#x4e88;&#x5230;&#x53c3;&#x6578;&#x4e0a",{"_index":1153,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["2.&#x5728;&#x9032;&#x884c;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;vip&#x7528;&#x6236;&#x8d08;&#x9001",{"_index":3207,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["2.在進行中參與活動，vip",{"_index":3192,"title":{},"body":{"statements/if...else.html":{}}}],["20",{"_index":44,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"closures.html":{},"this.html":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["200",{"_index":24,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#函式工廠":{},"array/fill.html":{},"global/promise.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["201",{"_index":3099,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["2019年j",{"_index":125,"title":{},"body":{"RegExp.html":{}}}],["2020",{"_index":2794,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["21",{"_index":45,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"this.html":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["22",{"_index":481,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["23",{"_index":482,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"cases/arr.html":{},"global/promise.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["24",{"_index":483,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"global/date.html":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["25",{"_index":484,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["250",{"_index":818,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"this.html":{},"this.html#Callback":{},"global/promise.html":{}}}],["26",{"_index":485,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["27",{"_index":486,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["28",{"_index":487,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"cases/arr.html":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["29",{"_index":488,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["2:140",{"_index":2580,"title":{},"body":{"array/fill.html":{}}}],["2xx",{"_index":183,"title":{},"body":{"RESTfulAPI.html":{}}}],["2xx&#xff1a;&#x64cd;&#x4f5c;&#x6210;&#x529f",{"_index":237,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["2不會存在nan",{"_index":1920,"title":{},"body":{"this.html":{}}}],["3",{"_index":3,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"RegExp.html#match":{},"es6.html":{},"es6.html#Module-的加载实现":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"closures.html":{},"closures.html#傳多個函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"F2E/header.html":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_method.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/map.html":{},"array/map.html#map":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"array/fill.html":{},"cases/replace.html":{},"cases/if.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"cases/delay.html":{},"cases/str.html":{},"cases/str.html#url":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"glossary/hoisting.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"global/function.html#References":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/create.html":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/AsyncFunction.html":{},"statements/let.html":{},"statements/let.html#let":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["3&#x8ce6;&#x4e88;&#x81f3;b&#x7684",{"_index":994,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["30",{"_index":489,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"this.html":{},"this.html#Closure":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["300",{"_index":814,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"global/promise.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["3000",{"_index":426,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"http/caching.html":{},"http/caching.html#強緩存":{}}}],["3001",{"_index":2830,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["301狀態碼（永久重定向）和302狀態碼（暫時重定向，307也是這個含義），因為它們可以由應用級別返回，瀏覽器會直接跳轉，api",{"_index":187,"title":{},"body":{"RESTfulAPI.html":{}}}],["303",{"_index":188,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["304",{"_index":2825,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["31",{"_index":490,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["32",{"_index":491,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"array/map.html":{},"array/map.html#map":{},"cases/arr.html":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["33",{"_index":492,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["34",{"_index":493,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["35",{"_index":513,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["36",{"_index":514,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"array/filter.html":{},"cases/arr.html":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["36&#xff0c;&#x5247",{"_index":2572,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["37",{"_index":515,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["38",{"_index":516,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{}}}],["39",{"_index":517,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{}}}],["39;1&#39",{"_index":2555,"title":{},"body":{"array/filter.html":{}}}],["39;2&#39",{"_index":2556,"title":{},"body":{"array/filter.html":{}}}],["39;3&#39;].filter(parseint",{"_index":2557,"title":{},"body":{"array/filter.html":{}}}],["39;jacob&#39",{"_index":417,"title":{},"body":{"core.html":{}}}],["39;msg&#39",{"_index":3110,"title":{},"body":{"operators/precedence.html":{}}}],["39;use",{"_index":2022,"title":{},"body":{"scope.html":{}}}],["3xx",{"_index":184,"title":{},"body":{"RESTfulAPI.html":{}}}],["3xx&#xff1a;&#x91cd;&#x5b9a;&#x5411",{"_index":238,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["3’].filter(parseint",{"_index":2546,"title":{},"body":{"array/filter.html":{}}}],["3’].map(parseint",{"_index":2618,"title":{},"body":{"cases/arr.html":{}}}],["3”，它並不是基礎基數2的一個有效數字。所以這個子字符串將被解析為空。如果子字符串被解析成空了，函數將返回為nan",{"_index":2619,"title":{},"body":{"cases/arr.html":{}}}],["3賦予至b",{"_index":460,"title":{},"body":{"core.html":{}}}],["4",{"_index":4,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"RegExp.html#match":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"closures.html":{},"closures.html#傳多個函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_method.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/map.html":{},"array/map.html#map":{},"array/filter.html":{},"array/fill.html":{},"cases/replace.html":{},"cases/if.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"cases/delay.html":{},"cases/str.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"glossary/hoisting.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/create.html":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/AsyncFunction.html":{},"statements/let.html":{},"statements/let.html#let":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["4(finish",{"_index":3067,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["40",{"_index":518,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["400",{"_index":2583,"title":{},"body":{"array/fill.html":{},"string/split.html":{},"string/split.html#split":{}}}],["404",{"_index":2952,"title":{},"body":{"object/object​_keys.html":{}}}],["41",{"_index":519,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{}}}],["42",{"_index":520,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{}}}],["43",{"_index":521,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{}}}],["44",{"_index":522,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{}}}],["45",{"_index":523,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/array_method.html":{},"array/map.html":{},"array/map.html#map":{}}}],["46",{"_index":524,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{}}}],["47",{"_index":525,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["48",{"_index":526,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["49",{"_index":527,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["4xx",{"_index":185,"title":{},"body":{"RESTfulAPI.html":{}}}],["4xx&#xff1a;&#x5ba2;&#x6236;&#x7aef;&#x932f;&#x8aa4",{"_index":239,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["5",{"_index":5,"title":{},"body":{"ajax.html":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"closures.html":{},"closures.html#傳多個函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_method.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/map.html":{},"array/map.html#map":{},"array/filter.html":{},"array/fill.html":{},"cases/replace.html":{},"cases/if.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/arr.html":{},"cases/delay.html":{},"cases/str.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"glossary/hoisting.html":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/create.html":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/AsyncFunction.html":{},"statements/let.html":{},"statements/let.html#let":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["5&#xff1b",{"_index":374,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["5,5,5,5,5",{"_index":345,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{}}}],["50",{"_index":528,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#箭頭函數":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["500",{"_index":536,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#函式工廠":{},"core.html#const":{},"global/promise.html":{}}}],["51",{"_index":529,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["52",{"_index":530,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["52位有效數字，從第53",{"_index":1785,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["53",{"_index":531,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["53位開始)。當然，代價就是，0.1在計算機內部根本就不是精確的0.1，而是一個有舍入誤差的0.1。當代碼被編譯或解釋後，0.1",{"_index":1797,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["54",{"_index":532,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["55",{"_index":533,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["550",{"_index":2445,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["56",{"_index":534,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["5:400",{"_index":2581,"title":{},"body":{"array/fill.html":{}}}],["5xx",{"_index":186,"title":{},"body":{"RESTfulAPI.html":{}}}],["5xx&#xff1a;&#x670d;&#x52d9;&#x5668;&#x932f;&#x8aa4",{"_index":240,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["6",{"_index":6,"title":{"es6.html":{}},"body":{"ajax.html":{},"es6.html":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"closures.html":{},"closures.html#傳多個函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"performance.html":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_method.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/map.html":{},"array/map.html#map":{},"array/filter.html":{},"array/fill.html":{},"cases/replace.html":{},"cases/if.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/arr.html":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"glossary/hoisting.html":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/AsyncFunction.html":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["600",{"_index":700,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["7",{"_index":7,"title":{},"body":{"ajax.html":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"core.html#箭頭函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{},"closures.html":{},"closures.html#傳多個函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/replace.html":{},"cases/if.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/arr.html":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"glossary/hoisting.html":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/AsyncFunction.html":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["700",{"_index":3191,"title":{},"body":{"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["754",{"_index":1782,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["754&#x6a19;&#x6e96;&#x4e2d",{"_index":1826,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{}}}],["754&#x6a19;&#x6e96;&#x4e2d;&#x7684;&#x6d6e;&#x9ede;&#x6578;&#x4e26;&#x4e0d;&#x80fd;&#x7cbe;&#x78ba;&#x5730;&#x8868;&#x9054;&#x5c0f;&#x6578;&#xff08;&#x6bd4;&#x5982;&#x8aaa;0.1&#xff09;&#xff0c",{"_index":2606,"title":{},"body":{"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["754&#x6a19;&#x6e96;&#x6240;&#x7522;&#x751f;&#x7684;&#x5fc5;&#x7136;&#x7d50;&#x679c;&#x3002",{"_index":1825,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{}}}],["754&#x6a19;&#x6e96;&#x6240;&#x7522;&#x751f;&#x7684;&#x5fc5;&#x7136;&#x7d50;&#x679c;&#x3002;iee",{"_index":2605,"title":{},"body":{"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["754標準中的浮點數並不能精確地表達小數（比如說0.1",{"_index":2604,"title":{},"body":{"cases/math.html":{}}}],["754標準所產生的必然結果。ieee",{"_index":2603,"title":{},"body":{"cases/math.html":{}}}],["8",{"_index":8,"title":{},"body":{"ajax.html":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"core.html#箭頭函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{},"closures.html":{},"closures.html#傳多個函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_method.html":{},"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#filter":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/replace.html":{},"cases/if.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/arr.html":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"glossary/hoisting.html":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/AsyncFunction.html":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["80",{"_index":75,"title":{},"body":{"ajax.html":{}}}],["800",{"_index":3193,"title":{},"body":{"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["81",{"_index":471,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["8601",{"_index":2790,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["9",{"_index":9,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"core.html#箭頭函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"closures.html":{},"closures.html#傳多個函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/if.html":{},"cases/arr.html":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"glossary/hoisting.html":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["9*9",{"_index":470,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["999",{"_index":1566,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["999.999",{"_index":1567,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["9]1,2",{"_index":130,"title":{},"body":{"RegExp.html":{}}}],["9]1,2$)|(^[0",{"_index":128,"title":{},"body":{"RegExp.html":{}}}],["9]1,2[\\.]1[0",{"_index":129,"title":{},"body":{"RegExp.html":{}}}],["9_",{"_index":143,"title":{},"body":{"RegExp.html":{}}}],["_.clonedeep",{"_index":1442,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["__proto__",{"_index":500,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{},"core.html#new":{}}}],["a&#x201d",{"_index":3340,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["a&#x662f;&#x6536",{"_index":993,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["a(&#x5177;&#x6709",{"_index":2710,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["a(&#x662f",{"_index":2712,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["a*a",{"_index":469,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["a*b",{"_index":477,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["a+b",{"_index":479,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["a,&#x6b64;&#x6642;a&#x548c;b&#x6307;&#x5411;&#x540c;&#x4e00;&#x500b;&#x5c0d;&#x8c61;&#x3002",{"_index":3125,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["a,b",{"_index":503,"title":{},"body":{"core.html":{},"closures.html":{},"closures.html#傳多個函數":{},"array/array_methods.html":{},"array/array_methods.html#sort":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["a,b&#x4f7f;&#x7528;&#x540c;&#x500b;&#x53c3;&#x8003;&#x4f4d;&#x5740",{"_index":1023,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["a,此時a和b",{"_index":3117,"title":{},"body":{"operators/precedence.html":{}}}],["a.__proto__.getlast",{"_index":627,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["a.concat(b",{"_index":2377,"title":{},"body":{"array/array_merge.html":{}}}],["a.foreach",{"_index":624,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{},"this.html":{},"this.html#Callback":{}}}],["a.getlast",{"_index":629,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["a.length",{"_index":622,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["a.pric",{"_index":2442,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["a.tostr",{"_index":630,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["a.x",{"_index":3112,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["a.x&#x5df2;&#x7d93;&#x57f7;&#x884c;&#x904e;&#x4e86;,&#x6b64;&#x6642;&#x5c0d;&#x8c61;&#x7684;x&#x5c6c;&#x6027;&#x8ce6;&#x503c;&#x70ba;a,&#x6b64;&#x6642",{"_index":3131,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["a.x已經執行過了,此時對象的x屬性賦值為a",{"_index":3118,"title":{},"body":{"operators/precedence.html":{}}}],["a1",{"_index":283,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["a2",{"_index":284,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["a3",{"_index":285,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["a4",{"_index":286,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["a===b",{"_index":502,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["aahkvsbd5f40g8sufov1i9ehag",{"_index":2060,"title":{},"body":{"variable.html":{},"variable.html#動態型別":{}}}],["aailvqn7gcen3zeexnluhuzmag",{"_index":2025,"title":{},"body":{"scope.html":{}}}],["ab",{"_index":476,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["ab2",{"_index":1612,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["abc.png",{"_index":1653,"title":{},"body":{"performance.html":{}}}],["acc",{"_index":876,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["access",{"_index":108,"title":{},"body":{"ajax.html":{},"statements/let.html":{},"statements/let.html#let":{}}}],["accumul",{"_index":2418,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["achorad",{"_index":82,"title":{},"body":{"ajax.html":{}}}],["ad",{"_index":1603,"title":{"operators.html#Adding-Strings-and-Numbers":{}},"body":{"operators.html":{}}}],["add",{"_index":553,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"closures.html":{}}}],["add10",{"_index":1508,"title":{},"body":{"closures.html":{}}}],["add5",{"_index":1507,"title":{},"body":{"closures.html":{}}}],["add_transactionhash",{"_index":2526,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["addeventlisten",{"_index":1671,"title":{},"body":{"performance.html":{},"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["addf1",{"_index":1513,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["addf1(x,i",{"_index":1518,"title":{},"body":{"closures.html":{}}}],["addfirst",{"_index":3287,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["addlast",{"_index":3290,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["addr",{"_index":2087,"title":{},"body":{"F2E/header.html":{}}}],["admin/blob/master/mock",{"_index":1432,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["adobe.com",{"_index":2109,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["afunc",{"_index":1594,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["ag",{"_index":2808,"title":{},"body":{"http/caching.html":{}}}],["age&#xff1a;&#x55ae;&#x4f4d;&#x662f;&#x79d2;&#xff0c;&#x7de9;&#x5b58;&#x6642;&#x9593;&#x8a08;&#x7b97;&#x7684;&#x65b9;&#x5f0f;&#x662f;&#x8ddd;&#x96e2;&#x767c;&#x8d77;&#x7684;&#x6642;&#x9593;&#x7684;&#x79d2;&#x6578;&#xff0c;&#x8d85;&#x904e;&#x9593;&#x9694;&#x7684;&#x79d2;&#x6578;&#x7de9;&#x5b58;&#x5931;&#x6548",{"_index":2850,"title":{},"body":{"http/caching.html#強緩存":{}}}],["age=00",{"_index":2829,"title":{},"body":{"http/caching.html":{}}}],["age=00&apo",{"_index":2918,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["age=10",{"_index":2819,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["age=10&apo",{"_index":2867,"title":{},"body":{"http/caching.html#強緩存":{}}}],["ahdaa/blog1/test.html?id=ad&amp;val1=02&amp;val2=22#achorad",{"_index":78,"title":{},"body":{"ajax.html":{}}}],["airbnb",{"_index":853,"title":{"core.html#ES6-Airbnb":{}},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["ajax",{"_index":0,"title":{"ajax.html":{}},"body":{"ajax.html":{},"core.html":{},"api/promise.html":{},"api/promise.html#Promise":{}}}],["ajax讀json",{"_index":634,"title":{},"body":{"core.html":{}}}],["alert(target.innerhtml",{"_index":294,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["alert(x",{"_index":3260,"title":{},"body":{"statements/block.html":{}}}],["alert(xhr.responsetext",{"_index":25,"title":{},"body":{"ajax.html":{}}}],["all([p1",{"_index":2757,"title":{},"body":{"global/promise.html":{}}}],["all(hashlist.map",{"_index":2516,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["allow",{"_index":110,"title":{},"body":{"ajax.html":{}}}],["am&apo",{"_index":3005,"title":{},"body":{"global/function.html#bind":{}}}],["amp",{"_index":55,"title":{},"body":{"ajax.html":{},"this.html":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"cases/if.html":{}}}],["amp;&amp",{"_index":473,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["amp;typ",{"_index":3200,"title":{},"body":{"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["an",{"_index":2529,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["an_obj",{"_index":2949,"title":{},"body":{"object/object​_keys.html":{}}}],["anchorscrolldecorator($deleg",{"_index":3143,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["anchorscrool",{"_index":3147,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["angular",{"_index":2423,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["angular.bootstrap(document.getelementbyid('swagg",{"_index":3150,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["anim",{"_index":770,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["animal.cal",{"_index":780,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["animal.prototype.mov",{"_index":778,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["ans.map",{"_index":2531,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["ansarr",{"_index":2766,"title":{},"body":{"global/promise.html":{}}}],["ansarr.push(p",{"_index":2770,"title":{},"body":{"global/promise.html":{}}}],["anyon",{"_index":2542,"title":{},"body":{"array/object_to_array.html":{}}}],["anyth",{"_index":3145,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["api",{"_index":18,"title":{"RESTfulAPI.html":{}},"body":{"ajax.html":{},"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{},"RESTfulAPI.html#References":{},"asynchronous.html":{},"asynchronous.html#setTimeout":{},"F2E/GraphQL.html":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["api.github.com",{"_index":197,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["apo",{"_index":1049,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#繼承":{},"closures.html#傳多個函數":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"variable.html#Hoisting":{},"cases/str.html#url":{},"global/function.html#bind":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["apollo",{"_index":2075,"title":{},"body":{"F2E/GraphQL.html":{}}}],["apos;#app&apo",{"_index":1301,"title":{},"body":{"core.html#屬性特徵":{}}}],["apos;#object&apo",{"_index":1281,"title":{},"body":{"core.html#屬性特徵":{}}}],["apos;$&apo",{"_index":1057,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;&#x4f60;&#x597d;&apo",{"_index":1175,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["apos;&#x5168;&#x57df;&apo",{"_index":1933,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{}}}],["apos;&#x5168;&#x57df;2&apo",{"_index":1977,"title":{},"body":{"this.html#bind-apply-call":{}}}],["apos;&#x5177;&#x540d;&#x51fd;&#x5f0f;&apo",{"_index":1139,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;&#x51fd;&#x5f0f;&#x7684;&apo",{"_index":1940,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["apos;&#x51fd;&#x5f0f;&#x8868;&#x9054;&#x5f0f;&apo",{"_index":1140,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;&#x51fd;&#x5f0f;&#x9673;&#x8ff0;&#x5f0f;&apo",{"_index":1138,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;&#x52d5;&#x7269;&#x754c;&apo",{"_index":1262,"title":{},"body":{"core.html#繼承":{}}}],["apos;&#x533f;&#x540d;&#x51fd;&#x5f0f;&apo",{"_index":1141,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;&#x5340;&#x57df;&apo",{"_index":1934,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{},"this.html#立即函式：":{},"this.html#bind-apply-call":{}}}],["apos;&#x53c3;&#x6578;&#x5728;&#x9019;&apo",{"_index":1167,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["apos;&#x547c;&#x53eb;&apo",{"_index":1978,"title":{},"body":{"this.html#bind-apply-call":{}}}],["apos;&#x57f7;&#x884c;&#x51fd;&#x5f0f;&apo",{"_index":1152,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;&#x5c0f;&apo",{"_index":1239,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;&#x60a0;&#x904a;&#x5361;&apo",{"_index":1954,"title":{},"body":{"this.html#Closure":{}}}],["apos;&#x6253;&#x7d66",{"_index":2064,"title":{},"body":{"variable.html#Hoisting":{}}}],["apos;&#x666e;&#x901a;&#x7528;&#x6236;&#x5728;&#x9032;&#x884c;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;&#x8d08;&#x9001;300&#x7a4d;&#x5206;&apo",{"_index":3210,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;&#x666e;&#x901a;&#x7528;&#x6236;&#x5728;&#x9032;&#x884c;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;&#x8d08;&#x9001;800&#x7a4d;&#x5206;&apo",{"_index":3219,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;&#x666e;&#x901a;&#x7528;&#x6236;&#x5728;&#x9810;&#x552e;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;&#x8d08;&#x9001;700&#x7a4d;&#x5206;&apo",{"_index":3208,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;&#x68d5;&#x8272;&apo",{"_index":1238,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;&#x6bd4;&#x6bd4;&apo",{"_index":1237,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;&#x6c92;&#x6709;fna&#x4e5f;&#x53ef;&#x4ee5;&#x57f7;&#x884c;&apo",{"_index":1160,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["apos;&#x7269;&#x4ef6;&#x7684;&apo",{"_index":1939,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{}}}],["apos;&#x72ac;&#x79d1;&apo",{"_index":1265,"title":{},"body":{"core.html#繼承":{}}}],["apos;&#x72d7;&apo",{"_index":1256,"title":{},"body":{"core.html#繼承":{}}}],["apos;&#x7acb;&#x5373;&#x51fd;&#x5f0f;&apo",{"_index":1159,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["apos;&#x7db2;&#x8ecd;&apo",{"_index":1328,"title":{},"body":{"core.html#const":{}}}],["apos;&#x8c93;&#x79d1;&apo",{"_index":1263,"title":{},"body":{"core.html#繼承":{}}}],["apos;&#x8cd3;&#x5915;&#x6cd5;&#x5c3c;&#x4e9e;&#x5dde;&#x662f;&#x7f8e;&#x570b;&#x7684;&#x5dde;&#x4efd;&#x4e4b;&#x4e00;&#xff0c;&#x6b63;&#x5f0f;&#x540d;&#x7a31;&#x70ba;&#x300c;&#x8cd3;&#x5915;&#x6cd5;&#x5c3c;&#x4e9e;&#x90a6;&#x300d;(commonwealth",{"_index":165,"title":{},"body":{"RegExp.html#match":{}}}],["apos;&#x9019;&#x88e1;&#x662f;&#x5177;&#x540d;&#x51fd;&#x5f0f;&apo",{"_index":1161,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["apos;&#x9ee8;&#x5de5;&apo",{"_index":1327,"title":{},"body":{"core.html#const":{}}}],["apos;&apo",{"_index":168,"title":{},"body":{"RegExp.html#match":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"variable.html#動態型別":{},"array/array_methods.html#reduce":{},"cases/str.html#url":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["apos;(1",{"_index":3004,"title":{},"body":{"global/function.html#bind":{}}}],["apos;)&apo",{"_index":167,"title":{},"body":{"RegExp.html#match":{}}}],["apos;,&apo",{"_index":1943,"title":{},"body":{"this.html#簡易呼叫":{}}}],["apos;./index.js&apo",{"_index":277,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["apos;/&apo",{"_index":1251,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;/b&apo",{"_index":2454,"title":{},"body":{"array/array_methods.html#map":{},"array/map.html#map":{}}}],["apos;/public&apo",{"_index":2869,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["apos;0x11&apo",{"_index":1010,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["apos;1&apo",{"_index":905,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"this.html#bind-apply-call":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"string/split.html#split":{}}}],["apos;1&apos;,&apos;2&apos;,&apos;3&apo",{"_index":1997,"title":{},"body":{"this.html#bind-apply-call":{}}}],["apos;10&apo",{"_index":2068,"title":{},"body":{"variable.html#動態型別":{}}}],["apos;100&apo",{"_index":2469,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;150&apo",{"_index":2467,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;2&apo",{"_index":1989,"title":{},"body":{"this.html#bind-apply-call":{},"variable.html#Hoisting":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["apos;3&apo",{"_index":2000,"title":{},"body":{"this.html#bind-apply-call":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["apos;3&apos;].filter(parseint",{"_index":2577,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["apos;300&apo",{"_index":2473,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;4&apo",{"_index":1180,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"this.html#bind-apply-call":{}}}],["apos;5&apo",{"_index":1994,"title":{},"body":{"this.html#bind-apply-call":{}}}],["apos;7",{"_index":2470,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;a&apo",{"_index":306,"title":{},"body":{"event.html#代理":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#屬性特徵":{}}}],["apos;abc.png&apo",{"_index":1715,"title":{},"body":{"performance.html#懶加載":{}}}],["apos;april&apo",{"_index":2366,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["apos;b&apo",{"_index":2453,"title":{},"body":{"array/array_methods.html#map":{},"array/map.html#map":{}}}],["apos;bar&apo",{"_index":3167,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["apos;barking&apo",{"_index":1245,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;bcde&apo",{"_index":1250,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;cach",{"_index":2864,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["apos;cal",{"_index":1053,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;callfamily&apo",{"_index":1056,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;chen&apo",{"_index":1088,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["apos;chihuahua&apo",{"_index":1269,"title":{},"body":{"core.html#繼承":{}}}],["apos;claire&apo",{"_index":1071,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["apos;click&apo",{"_index":303,"title":{},"body":{"event.html#代理":{},"core.html#箭頭函數":{}}}],["apos;corgi&apo",{"_index":3006,"title":{},"body":{"global/function.html#bind":{}}}],["apos;dad&apo",{"_index":1047,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["apos;data",{"_index":1717,"title":{},"body":{"performance.html#懶加載":{}}}],["apos;deep&apo",{"_index":1097,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["apos;deepclone&apo",{"_index":1486,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["apos;dessert&apo",{"_index":2708,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["apos;dev&apo",{"_index":1070,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["apos;div1&apo",{"_index":302,"title":{},"body":{"event.html#代理":{}}}],["apos;domcontentloaded&apo",{"_index":1744,"title":{},"body":{"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["apos;done&apo",{"_index":2300,"title":{},"body":{"api/promise.html#鏈接":{}}}],["apos;error",{"_index":1484,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["apos;exec",{"_index":1145,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;express&apo",{"_index":2862,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["apos;falsy&apo",{"_index":1027,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["apos;feb&apo",{"_index":2368,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["apos;first&apo",{"_index":1329,"title":{},"body":{"core.html#const":{}}}],["apos;fn&apo",{"_index":1952,"title":{},"body":{"this.html#簡易呼叫":{}}}],["apos;from",{"_index":1822,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["apos;fun&apo",{"_index":1079,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["apos;function&apo",{"_index":1497,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["apos;global&apo",{"_index":1945,"title":{},"body":{"this.html#簡易呼叫":{}}}],["apos;hash&apo",{"_index":2536,"title":{},"body":{"array/map.html#map":{}}}],["apos;hello",{"_index":1302,"title":{},"body":{"core.html#屬性特徵":{},"global/function.html#bind":{}}}],["apos;hello&apo",{"_index":913,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"statements/for.html#for…of與for…in的差別":{}}}],["apos;hsu&apo",{"_index":1045,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{},"core.html#Let":{}}}],["apos;http://3000&apo",{"_index":2649,"title":{},"body":{"cases/str.html#url":{}}}],["apos;i",{"_index":1054,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;i&apo",{"_index":1183,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["apos;iife&apo",{"_index":1158,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["apos;img1&apo",{"_index":1716,"title":{},"body":{"performance.html#懶加載":{}}}],["apos;jacob&apo",{"_index":895,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"core.html#Let":{},"variable.html#Hoisting":{}}}],["apos;jan&apo",{"_index":2364,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["apos;jessica&apo",{"_index":1219,"title":{},"body":{"core.html#this":{}}}],["apos;jsfood.com/&apo",{"_index":2732,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["apos;june&apo",{"_index":2367,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["apos;keyup&apo",{"_index":1754,"title":{},"body":{"performance.html#事件節流":{}}}],["apos;lastest&apo",{"_index":1297,"title":{},"body":{"core.html#屬性特徵":{}}}],["apos;liao&apo",{"_index":1096,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["apos;list&apo",{"_index":1735,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["apos;load&apo",{"_index":1742,"title":{},"body":{"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["apos;local&apo",{"_index":1946,"title":{},"body":{"this.html#簡易呼叫":{}}}],["apos;march&apo",{"_index":2365,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["apos;max",{"_index":2866,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["apos;meal&apo",{"_index":2727,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["apos;mi",{"_index":1051,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;mom&apo",{"_index":1086,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["apos;mon&apo",{"_index":1046,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;money&apo",{"_index":1058,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;movie&apo",{"_index":2466,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;msg&apo",{"_index":3119,"title":{},"body":{"operators/precedence.html#運算子優先序":{}}}],["apos;music&apo",{"_index":2472,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;myname&apo",{"_index":1077,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["apos;name&apo",{"_index":1055,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;no",{"_index":2921,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["apos;object&apo",{"_index":1483,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["apos;order&apo",{"_index":2742,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["apos;others&apo",{"_index":1048,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;p&apo",{"_index":1350,"title":{},"body":{"core.html#箭頭函數":{},"performance.html#DOM-查詢做緩存":{}}}],["apos;pragma&apo",{"_index":2920,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["apos;reduce&apo",{"_index":327,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["apos;save&apo",{"_index":1295,"title":{},"body":{"core.html#屬性特徵":{}}}],["apos;second&apo",{"_index":1333,"title":{},"body":{"core.html#const":{}}}],["apos;select_title&apo",{"_index":2374,"title":{},"body":{"array/array_insert.html#example":{}}}],["apos;settimeout&apo",{"_index":364,"title":{},"body":{"asynchronous.html#異步":{}}}],["apos;small&apo",{"_index":1266,"title":{},"body":{"core.html#繼承":{}}}],["apos;someon",{"_index":926,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["apos;someone&apo",{"_index":1087,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["apos;status=1&amp;type=1&apo",{"_index":3215,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;status=1&amp;type=2&apo",{"_index":3216,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;status=2&amp;type=1&apo",{"_index":3217,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;status=2&amp;type=2&apo",{"_index":3218,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;str&apo",{"_index":1102,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{}}}],["apos;stranger&apo",{"_index":1089,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["apos;text&apo",{"_index":1753,"title":{},"body":{"performance.html#事件節流":{}}}],["apos;th",{"_index":2464,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;timestampiso&apo",{"_index":2534,"title":{},"body":{"array/map.html#map":{}}}],["apos;trifle&apo",{"_index":2722,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["apos;truthy&apo",{"_index":1026,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["apos;undefined&apo",{"_index":1498,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["apos;us",{"_index":1227,"title":{},"body":{"core.html#this":{},"core.html#屬性特徵":{},"this.html#簡易呼叫":{}}}],["apos;value&apo",{"_index":2535,"title":{},"body":{"array/map.html#map":{}}}],["apos;vip&#x7528;&#x6236;&#x5728;&#x9032;&#x884c;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;&#x8d08;&#x9001;800&#x7a4d;&#x5206;&apo",{"_index":3211,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;vip&#x7528;&#x6236;&#x5728;&#x9810;&#x552e;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;&#x8d08;&#x9001;1000&#x7a4d;&#x5206;&apo",{"_index":3209,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;watch&apo",{"_index":1935,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["apos;wating...&apo",{"_index":2372,"title":{},"body":{"array/array_insert.html#fill":{}}}],["apos;wating...&apos;,&apos;wating...&apo",{"_index":2371,"title":{},"body":{"array/array_insert.html#fill":{}}}],["apos;welsh",{"_index":1260,"title":{},"body":{"core.html#繼承":{}}}],["app",{"_index":830,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"F2E/GraphQL.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["app._data.obj",{"_index":841,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["app.listen",{"_index":2822,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["app.obj",{"_index":840,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["app.use(express.static((__dirnam",{"_index":2820,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["appli",{"_index":711,"title":{"this.html#bind-apply-call":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"global/function.html#cab-call-apply-vs-bind":{}},"body":{"core.html":{},"core.html#this":{},"this.html":{},"this.html#bind-apply-call":{},"global/function.html":{},"global/function.html#call、apply、bind":{},"global/function.html#cab-call-apply-vs-bind":{}}}],["apppli",{"_index":722,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["app一樣，百貨公司的餐飲店家們開發出一款點餐app",{"_index":2070,"title":{},"body":{"F2E/GraphQL.html":{}}}],["april",{"_index":2326,"title":{},"body":{"array/array_insert.html":{}}}],["arg",{"_index":849,"title":{},"body":{"core.html":{},"core.html#const":{},"core.html#箭頭函數":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["arg1",{"_index":1896,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["arg2",{"_index":1897,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["argument",{"_index":681,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#箭頭函數":{},"copy.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"glossary/hoisting.html":{},"global/function.html":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["arguments&apo",{"_index":1485,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["arguments.foreach",{"_index":683,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["ari",{"_index":52,"title":{},"body":{"ajax.html":{}}}],["arr",{"_index":694,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"this.html":{},"this.html#bind-apply-call":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"array/object_to_array.html":{},"array/filter.html":{},"object/object​_keys.html":{},"object/create.html":{}}}],["arr.concat",{"_index":2316,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{}}}],["arr.everi",{"_index":2412,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#every":{}}}],["arr.filt",{"_index":2387,"title":{},"body":{"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#filter":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/filter.html":{}}}],["arr.find",{"_index":2404,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#find":{}}}],["arr.foreach",{"_index":1887,"title":{},"body":{"this.html":{},"this.html#Callback":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["arr.lastindexof(item",{"_index":2382,"title":{},"body":{"array/array_merge.html":{}}}],["arr.map",{"_index":2395,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#map":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{}}}],["arr.push",{"_index":695,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{}}}],["arr.reduc",{"_index":2424,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["arr.som",{"_index":2416,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#some":{}}}],["arr.sort",{"_index":2409,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#sort":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["arr.splice(index",{"_index":2383,"title":{},"body":{"array/array_merge.html":{}}}],["arr.unshift",{"_index":2319,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列頭部":{}}}],["arr1",{"_index":2447,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["arr2",{"_index":2386,"title":{},"body":{"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#sort":{},"array/map.html":{},"array/map.html#map":{}}}],["arr[arr.length",{"_index":2313,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{}}}],["array",{"_index":309,"title":{"array/array_method.html":{},"array/array_insert.html":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#Array":{},"array/splice.html":{},"array/object_to_array.html":{},"array/filter.html":{},"array/fill.html":{},"cases/arr.html":{}},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"num.html":{},"num.html#補數字":{},"this.html":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/map.html":{},"array/map.html#map":{},"array/object_to_array.html":{},"array/fill.html":{},"cases/arr.html":{},"global/function.html":{},"global/function.html#call、apply、bind":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"statements/for.html":{}}}],["array&#xff0c;&#x5176;&#x4e2d",{"_index":3234,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["array.from",{"_index":874,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["array.includes(item",{"_index":2309,"title":{},"body":{"array/good_part.html":{}}}],["array.indexof(item",{"_index":2310,"title":{},"body":{"array/good_part.html":{}}}],["array.join",{"_index":2645,"title":{},"body":{"cases/str.html":{},"cases/str.html#url":{}}}],["array.prototype.concat",{"_index":2315,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_merge.html":{}}}],["array.prototype.everi",{"_index":2410,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#every":{}}}],["array.prototype.fil",{"_index":2333,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["array.prototype.filt",{"_index":2399,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#filter":{}}}],["array.prototype.find",{"_index":2401,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#find":{}}}],["array.prototype.foreach",{"_index":2390,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#forEach":{}}}],["array.prototype.map",{"_index":2393,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#map":{},"array/map.html":{},"array/map.html#map":{}}}],["array.prototype.push",{"_index":2314,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{}}}],["array.prototype.reduc",{"_index":2417,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["array.prototype.som",{"_index":2414,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#some":{}}}],["array.prototype.sort",{"_index":2407,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#sort":{}}}],["array.prototype.splic",{"_index":2320,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["array.prototype.unshift",{"_index":2318,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列頭部":{}}}],["array.reduc",{"_index":313,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#箭頭函數":{}}}],["array1",{"_index":2334,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{}}}],["array1.map",{"_index":2500,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["arrfilt",{"_index":2436,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["arrfn",{"_index":864,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["arrfnr",{"_index":866,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["arrfunc",{"_index":693,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["arrow",{"_index":307,"title":{"arrowFunction.html#Arrow-Function":{}},"body":{"arrowFunction.html":{},"core.html":{},"core.html#ES6-Airbnb":{},"this.html":{},"this.html#bind-apply-call":{},"global/function.html":{},"global/function.html#cab-call-apply-vs-bind":{},"global/function.html#bind":{}}}],["arrsortpric",{"_index":2440,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["articl",{"_index":177,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["article/2",{"_index":179,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["articles/2",{"_index":178,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["ary[i].split",{"_index":60,"title":{},"body":{"ajax.html":{}}}],["asi",{"_index":439,"title":{"core.html#ASI-自動分號插入":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["assign",{"_index":433,"title":{"object/assign.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#屬性特徵":{},"copy.html":{},"copy.html#Object-assign":{},"array/fill.html":{},"object/assign.html":{},"object/assign.html#有相同屬性時合併物件區段":{},"operators/destructuring_assignment.html":{}}}],["assign(o1",{"_index":3021,"title":{},"body":{"object/assign.html":{},"object/assign.html#合併物件":{}}}],["ast(abstract",{"_index":406,"title":{},"body":{"core.html":{}}}],["async",{"_index":263,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{},"cases/delay.html":{},"statements/AsyncFunction.html":{}}}],["async/await",{"_index":2780,"title":{},"body":{"global/promise.html":{}}}],["asyncfunct",{"_index":3168,"title":{"statements/AsyncFunction.html":{}},"body":{"statements/AsyncFunction.html":{}}}],["asynchron",{"_index":342,"title":{"asynchronous.html":{}},"body":{}}],["asyncrout",{"_index":1453,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["authors/12/categories/2",{"_index":180,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["authors/12?categories=2",{"_index":181,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["automat",{"_index":440,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["averag",{"_index":873,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["await",{"_index":2630,"title":{},"body":{"cases/delay.html":{},"statements/AsyncFunction.html":{}}}],["azqd8pdvbl5uk5mfq_ejlxmkag",{"_index":1927,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["a下的網頁，然後可能瀏覽了不論那個域名下的頁面，最後在域名b下的網頁完成註冊的情況。廣告可以在域名a下的網頁被跟蹤到，而註冊可以在域名b",{"_index":2121,"title":{},"body":{"F2E/cookie.html":{}}}],["a網站底下若有需要去access",{"_index":97,"title":{},"body":{"ajax.html":{}}}],["a網站是b",{"_index":106,"title":{},"body":{"ajax.html":{}}}],["b",{"_index":459,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"closures.html":{},"closures.html#傳多個函數":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Adding-Strings-and-Numbers":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"this.html":{},"this.html#簡易呼叫":{},"scope.html":{},"F2E/token.html":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#sort":{},"array/array_methods.html#reduce":{},"array/map.html":{},"cases/if.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"global/promise.html":{},"object/object​_keys.html":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{}}}],["b&#x53d6;&#x5f97;&#x7684;&#x662f;a&#x7684;&#x53c3;&#x8003;&#x4f4d;&#x5740",{"_index":1022,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["b,c",{"_index":1520,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["b.a",{"_index":463,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["b.a&#x6c92;&#x6709;&#x95dc;&#x9023;&#x6027",{"_index":999,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["b.length",{"_index":2425,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["b.n",{"_index":3114,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["b.person",{"_index":670,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["b.price",{"_index":2441,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["b.x",{"_index":3116,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["b1/b",{"_index":2396,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#map":{},"array/map.html":{},"array/map.html#map":{}}}],["b2/b",{"_index":2397,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#map":{},"array/map.html":{},"array/map.html#map":{}}}],["b3/b",{"_index":2398,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#map":{},"array/map.html":{},"array/map.html#map":{}}}],["b[b.length",{"_index":628,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["babelj",{"_index":3170,"title":{},"body":{"statements/AsyncFunction.html":{}}}],["bad",{"_index":2974,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["bar",{"_index":1870,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"operators/function.html":{}}}],["bark",{"_index":749,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["barking&apo",{"_index":1257,"title":{},"body":{"core.html#繼承":{}}}],["base",{"_index":1877,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["bcde",{"_index":752,"title":{},"body":{"core.html":{}}}],["be",{"_index":795,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["beauti",{"_index":412,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["befor",{"_index":3171,"title":{},"body":{"statements/let.html":{},"statements/let.html#let":{}}}],["behaviour",{"_index":3148,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["best",{"_index":201,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["between",{"_index":1582,"title":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}},"body":{"operators.html":{}}}],["bfunc",{"_index":1596,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["bibi",{"_index":745,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["bibi.__proto__",{"_index":751,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["bind",{"_index":710,"title":{"this.html#bind-apply-call":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"global/function.html#cab-call-apply-vs-bind":{},"global/function.html#bind":{}},"body":{"core.html":{},"core.html#this":{},"this.html":{},"this.html#bind-apply-call":{},"global/function.html":{},"global/function.html#call、apply、bind":{},"global/function.html#cab-call-apply-vs-bind":{},"global/function.html#bind":{}}}],["bind&#x7684;&#x61c9;&#x7528;&#x5834;&#x666f",{"_index":1982,"title":{},"body":{"this.html#bind-apply-call":{}}}],["bind(thi",{"_index":2978,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["binding&#x5927;&#x6cd5",{"_index":3013,"title":{},"body":{"global/function.html#bind":{}}}],["birthday",{"_index":2783,"title":{},"body":{"global/date.html":{}}}],["blog.xuite.net",{"_index":71,"title":{},"body":{"ajax.html":{}}}],["blog.xuite.net:80",{"_index":73,"title":{},"body":{"ajax.html":{}}}],["bodi",{"_index":1425,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{}}}],["boo",{"_index":2971,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["boo.laterhello",{"_index":2973,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["boo.sayhello",{"_index":2972,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["boolean",{"_index":511,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["boolean(fals",{"_index":508,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["boolean{fals",{"_index":509,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["bootstrap",{"_index":1370,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["bowl",{"_index":2662,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["browser",{"_index":1402,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["btn",{"_index":739,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["bug",{"_index":1438,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["busi",{"_index":2071,"title":{},"body":{"F2E/GraphQL.html":{}}}],["button",{"_index":736,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["b取得的是a",{"_index":501,"title":{},"body":{"core.html":{}}}],["b網站就可以在http",{"_index":107,"title":{},"body":{"ajax.html":{}}}],["b網站的http",{"_index":99,"title":{},"body":{"ajax.html":{}}}],["b網站的resourc",{"_index":98,"title":{},"body":{"ajax.html":{}}}],["b網站的web",{"_index":104,"title":{},"body":{"ajax.html":{}}}],["c",{"_index":150,"title":{},"body":{"RegExp.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#屬性特徵":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"closures.html":{},"closures.html#傳多個函數":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"this.html":{},"this.html#簡易呼叫":{},"array/array_merge.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"global/promise.html":{},"glossary/hoisting.html":{},"object/object​_keys.html":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["c(2)時會拋出typeerror",{"_index":2939,"title":{},"body":{"glossary/hoisting.html":{}}}],["cab",{"_index":2966,"title":{"global/function.html#cab-call-apply-vs-bind":{}},"body":{"global/function.html":{}}}],["cach",{"_index":2076,"title":{},"body":{"F2E/GraphQL.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#References":{}}}],["cache&apo",{"_index":2922,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["cachelist",{"_index":2492,"title":{},"body":{"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{}}}],["cachelist.push",{"_index":2495,"title":{},"body":{"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{}}}],["calcul",{"_index":308,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{}}}],["calculate.sum",{"_index":322,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{}}}],["call",{"_index":425,"title":{"this.html#bind-apply-call":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"global/function.html#cab-call-apply-vs-bind":{}},"body":{"core.html":{},"core.html#this":{},"this.html":{},"this.html#bind-apply-call":{},"global/function.html":{},"global/function.html#cab-call-apply-vs-bind":{},"object/create.html":{}}}],["call&#x3001;apply&#x3001;bind",{"_index":2979,"title":{"global/function.html#call、apply、bind":{}},"body":{"global/function.html#References":{}}}],["call&#x7684;thi",{"_index":1206,"title":{},"body":{"core.html#this":{}}}],["call&apo",{"_index":927,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["callarg",{"_index":680,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["callback",{"_index":675,"title":{"this.html#Callback":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"this.html":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"global/promise.html":{}}}],["callback(ansarr",{"_index":2771,"title":{},"body":{"global/promise.html":{}}}],["callback(money",{"_index":717,"title":{},"body":{"core.html":{},"core.html#this":{},"this.html":{},"this.html#Callback":{}}}],["callfamili",{"_index":545,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["callfn",{"_index":581,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#this":{}}}],["callnam",{"_index":714,"title":{},"body":{"core.html":{},"core.html#this":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#立即函式：":{},"this.html#bind-apply-call":{}}}],["callname.cal",{"_index":1900,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["callname.call(obj",{"_index":1901,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["callnamearrow",{"_index":1908,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["callsomefn",{"_index":659,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["callsomeon",{"_index":1874,"title":{},"body":{"this.html":{},"this.html#立即函式：":{},"scope.html":{},"variable.html":{},"variable.html#Hoisting":{}}}],["call、apply、bind",{"_index":2961,"title":{},"body":{"global/function.html":{}}}],["call的thi",{"_index":715,"title":{},"body":{"core.html":{}}}],["camelcasetyper",{"_index":2956,"title":{},"body":{"object/object​_keys.html":{}}}],["case",{"_index":1437,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["cash",{"_index":535,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["cat",{"_index":771,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["cat'",{"_index":2935,"title":{},"body":{"glossary/hoisting.html":{}}}],["catalog",{"_index":2430,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["catalog:&apos;music&apo",{"_index":2474,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["catalog:'mus",{"_index":2439,"title":{},"body":{"array/array_methods.html":{}}}],["catch",{"_index":2245,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"cases/delay.html":{},"global/promise.html":{}}}],["catch(onreject",{"_index":2246,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{}}}],["catch(reject",{"_index":2683,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["catnam",{"_index":2934,"title":{},"body":{"glossary/hoisting.html":{}}}],["cbfn",{"_index":676,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["cdn",{"_index":88,"title":{},"body":{"ajax.html":{},"performance.html":{},"performance.html#優化原則和方向":{}}}],["ceil(numb",{"_index":1551,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["cfunc",{"_index":1597,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["ch.md#%e4%b8%ba%e4%bb%80%e4%b9%88",{"_index":1807,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["chang",{"_index":566,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"performance.html":{},"performance.html#事件節流":{}}}],["char",{"_index":3299,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["check",{"_index":857,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["checkscop",{"_index":2018,"title":{},"body":{"scope.html":{}}}],["chen",{"_index":594,"title":{},"body":{"core.html":{},"glossary/hoisting.html":{}}}],["chihuahua",{"_index":786,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["chihuahua.bark",{"_index":788,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["chihuahua.famili",{"_index":790,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["chihuahua.mov",{"_index":789,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["chrome",{"_index":706,"title":{},"body":{"core.html":{},"core.html#this":{},"http/caching.html":{},"http/caching.html#強緩存":{},"statements/block.html":{}}}],["clair",{"_index":573,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["class",{"_index":2667,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#bind":{}}}],["class1",{"_index":2051,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["clean",{"_index":1640,"title":{},"body":{"performance.html":{}}}],["clear",{"_index":3274,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["cleartimeout(timeoutid",{"_index":1678,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["cli",{"_index":1386,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["click",{"_index":290,"title":{},"body":{"event.html":{},"core.html":{}}}],["client端與server端可以作一種對話，並將兩端建立關連，保持伺服器與client可以持續的與serv",{"_index":2127,"title":{},"body":{"F2E/cookie.html":{}}}],["clone",{"_index":1389,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["close",{"_index":2257,"title":{},"body":{"api/promise.html":{},"api/promise.html#鏈接":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["closur",{"_index":684,"title":{"core.html#閉包-Closure":{},"closures.html":{},"this.html#Closure":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"this.html":{}}}],["code",{"_index":32,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#ES6-Airbnb":{},"performance.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["coin",{"_index":654,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["color",{"_index":743,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["colour",{"_index":2653,"title":{},"body":{"function/factory​_factory.html":{}}}],["commonwealth",{"_index":157,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["compani",{"_index":568,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["comparison",{"_index":1589,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["concat",{"_index":2376,"title":{},"body":{"array/array_merge.html":{}}}],["concat(arr",{"_index":2331,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#拼接兩個陣列":{}}}],["conditiona",{"_index":2601,"title":{},"body":{"cases/if.html":{}}}],["conditionb",{"_index":2602,"title":{},"body":{"cases/if.html":{}}}],["config",{"_index":3137,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["configur",{"_index":798,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["consol",{"_index":62,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"RegExp.html#match":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"closures.html":{},"closures.html#傳多個函數":{},"num.html":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_method.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/map.html":{},"array/map.html#map":{},"array/filter.html":{},"array/fill.html":{},"cases/replace.html":{},"cases/if.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/arr.html":{},"cases/delay.html":{},"cases/str.html":{},"cases/str.html#url":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"glossary/hoisting.html":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/AsyncFunction.html":{},"statements/let.html":{},"statements/let.html#let":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["console.dir(object",{"_index":741,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["console.dir(thi",{"_index":740,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["console.log",{"_index":687,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["console.log(&apos;3&apo",{"_index":1990,"title":{},"body":{"this.html#bind-apply-call":{}}}],["console.log(&apos;6&apo",{"_index":1995,"title":{},"body":{"this.html#bind-apply-call":{}}}],["console.log(&apos;i&apo",{"_index":1186,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["console.log('3",{"_index":1907,"title":{},"body":{"this.html":{}}}],["console.log('6",{"_index":1909,"title":{},"body":{"this.html":{}}}],["console.log('i",{"_index":697,"title":{},"body":{"core.html":{}}}],["console.log(1++\"2\"+\"2",{"_index":1608,"title":{},"body":{"operators.html":{}}}],["console.log(1++2+2",{"_index":1638,"title":{},"body":{"operators.html#Adding-Strings-and-Numbers":{}}}],["console.log(11",{"_index":458,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["console.log(123",{"_index":455,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["console.log(32",{"_index":457,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["console.log(321",{"_index":456,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["console.log(a",{"_index":434,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"glossary/hoisting.html":{}}}],["console.log(ari",{"_index":56,"title":{},"body":{"ajax.html":{}}}],["console.log(c",{"_index":2937,"title":{},"body":{"glossary/hoisting.html":{}}}],["console.log(famili",{"_index":605,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["console.log(i,v",{"_index":2504,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["console.log(j)的時候顯示的就是每次循環時的i",{"_index":356,"title":{},"body":{"asynchronous.html":{}}}],["console.log(new",{"_index":507,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["console.log(obj",{"_index":3074,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["console.log(thi",{"_index":738,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["const",{"_index":155,"title":{"core.html#const":{}},"body":{"RegExp.html":{},"RegExp.html#match":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#屬性特徵":{},"core.html#const":{},"core.html#箭頭函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"closures.html":{},"closures.html#傳多個函數":{},"num.html":{},"num.html#取值":{},"math.html":{},"math.html#Math":{},"this.html":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_method.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/map.html":{},"array/map.html#map":{},"array/object_to_array.html":{},"array/filter.html":{},"array/fill.html":{},"cases/if.html":{},"cases/arr.html":{},"cases/delay.html":{},"cases/str.html":{},"cases/str.html#url":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["constructor",{"_index":785,"title":{},"body":{"core.html":{},"core.html#繼承":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{}}}],["contain",{"_index":1371,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["content",{"_index":1377,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["control",{"_index":109,"title":{},"body":{"ajax.html":{},"http/caching.html":{},"http/caching.html#強緩存":{}}}],["control&#x3002",{"_index":2880,"title":{},"body":{"http/caching.html#強緩存":{}}}],["control&apo",{"_index":2865,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["convers",{"_index":448,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["cooki",{"_index":2102,"title":{"F2E/cookie.html":{}},"body":{"F2E/cookie.html":{},"F2E/cookie.html#什麼是-Cookie？":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x3002",{"_index":2172,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x5982;&#x679c;&#x60a8;&#x5728",{"_index":2160,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x5982;&#x679c;&#x60a8;&#x9020;&#x8a2a",{"_index":2168,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x53ef;&#x4ee5;&#x7528;&#x4f86;&#x63d0;&#x5347;&#x7528;&#x6236;&#x9ad4;&#x9a57;&#xff0c;&#x6bd4;&#x5982;&#x7db2;&#x7ad9;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;cookie&#x4f86;&#x8a18;&#x9304;&#x7528;&#x6236;&#x7684;&#x767b;&#x9304;&#x72c0;&#x614b;&#xff0c;&#x7528;&#x6236;&#x53ea;&#x8981;&#x767b;&#x9304;&#x4e00;&#x6b21;&#x5c31;&#x53ef;&#x4ee5;&#x4e0d;&#x7528;&#x767b;&#x9304;&#x4e86;&#xff0c;&#x8cfc;&#x7269;&#x7db2;&#x7ad9;&#x901a;&#x904e;cookie&#x4f86;&#x4fdd;&#x5b58;&#x8cfc;&#x7269;&#x8eca;&#x4e2d;&#x7684;&#x5546;&#x54c1;&#x7b49;&#x3002;&#x540c;&#x6642;&#x5f88;&#x591a;&#x7684;&#x7db2;&#x7ad9;&#x5206;&#x6790;&#x90fd;&#x662f;&#x4f9d;&#x9760;cookie&#x4f86;&#x5b8c;&#x6210;&#x7684;&#x3002",{"_index":2157,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["cookie&#x5c31;&#x50cf",{"_index":2200,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x662f;&#x4e00;&#x5f35;&#x9818;&#x9910;&#x7684;&#x865f;&#x78bc;&#x724c;&#xff0c;&#x800c;session&#x53ef;&#x4ee5;&#x662f;&#x4e00;&#x5f35;&#x6578;&#x4f4d;&#x6703;&#x54e1;&#x5361",{"_index":2209,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x662f;&#x5fc5;&#x9808;&#x7684;&#xff0c;&#x96e2;&#x958b;cookie&#x6211;&#x5011;&#x4ec0;&#x9ebc;&#x4e5f;&#x5206;&#x6790;&#x4e0d;&#x4e86;&#x3002",{"_index":2173,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#xff0c",{"_index":2154,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["cookie&#xff1a",{"_index":2151,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["cookie&#xff1f",{"_index":2148,"title":{"F2E/cookie.html#什麼是-Cookie？":{}},"body":{}}],["cookies&#xff08;third",{"_index":2197,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookies&#xff09;&#x6703;&#x6d29;&#x6f0f;&#x7db2;&#x9801;&#x700f;&#x89bd;&#x7684;&#x96b1;&#x79c1",{"_index":2198,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookies（third",{"_index":2124,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie可以用來提升用戶體驗，比如網站可以使用cookie來記錄用戶的登錄狀態，用戶只要登錄一次就可以不用登錄了，購物網站通過cookie來保存購物車中的商品等。同時很多的網站分析都是依靠cooki",{"_index":2106,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie和session得結合，到底還會不會有被竄改的問題，這個時候就要靠”簽章”來驗證資料的真實性，在我使用cooki",{"_index":2140,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie和第三方cooki",{"_index":2107,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie是一張領餐的號碼牌，而sess",{"_index":2128,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie是必須的，離開cooki",{"_index":2112,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie與session彼此之間是可以互換的(指的是你可以把資料存放在session或是cookie，並不是指session可以被放在client端當cookie使用)。但是cookie在最單純的情況裡，是有安全性的問題(資料在client端)。所以考量到這點，大部分都會選擇session。但是正如cookie是一個外加的功能，session也不屬於http",{"_index":2142,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie，會為域名a建立一個cookie，為域名b再建立一個cooki",{"_index":2122,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie，那這個cooki",{"_index":2119,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie，那麼無論多少個域，都只有一個cookie，一個屬於第三方域的cookie，網站下所有域都能共享這個cooki",{"_index":2123,"title":{},"body":{"F2E/cookie.html":{}}}],["copi",{"_index":604,"title":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{},"object/assign.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["cor",{"_index":95,"title":{},"body":{"ajax.html":{}}}],["corgi",{"_index":772,"title":{},"body":{"core.html":{},"core.html#繼承":{},"global/function.html":{},"global/function.html#bind":{}}}],["corgi&apo",{"_index":1261,"title":{},"body":{"core.html#繼承":{}}}],["corgi.nam",{"_index":774,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["cors是一個w3c標準，全稱是”跨域資源共享”（cross",{"_index":89,"title":{},"body":{"ajax.html":{}}}],["cors需要瀏覽器和服務器同時支持。實現cors通信的關鍵是服務器。只要服務器實現了cor",{"_index":94,"title":{},"body":{"ajax.html":{}}}],["count",{"_index":3181,"title":{},"body":{"string/split.html":{},"string/split.html#split":{}}}],["cours",{"_index":2681,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["cpu",{"_index":1641,"title":{},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["cream",{"_index":2671,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["creat",{"_index":872,"title":{"swagger/to-html.html#Create-a-pet":{}},"body":{"core.html":{},"core.html#箭頭函數":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"object/create.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["create(animal.prototyp",{"_index":783,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["create(dog",{"_index":773,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["create(shape.prototyp",{"_index":3034,"title":{},"body":{"object/create.html":{}}}],["createalmond",{"_index":2676,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createcream",{"_index":2675,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createcustard",{"_index":2674,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createdessert",{"_index":2661,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createdocumentfrag",{"_index":1661,"title":{"performance.html#合併-DOM-插入-createDocumentFragment":{}},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["createel",{"_index":1667,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["createicecream",{"_index":2657,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createjelli",{"_index":2651,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createm",{"_index":2685,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createmeal(json",{"_index":2684,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createord",{"_index":2699,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createtrifl",{"_index":2673,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["crud",{"_index":171,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["css",{"_index":1643,"title":{},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["curl",{"_index":3092,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["currentvalu",{"_index":1888,"title":{},"body":{"this.html":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["custard",{"_index":2670,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["c已經被賦值為1",{"_index":2938,"title":{},"body":{"glossary/hoisting.html":{}}}],["c為o3.c的值，最後一個出現的屬性c",{"_index":3023,"title":{},"body":{"object/assign.html":{}}}],["d",{"_index":140,"title":{},"body":{"RegExp.html":{},"closures.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["d.setdate(d.getd",{"_index":2797,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["d.toisostring().substr",{"_index":2791,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["dad",{"_index":542,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["dark",{"_index":2432,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["data",{"_index":120,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"performance.html":{},"performance.html#懶加載":{},"array/array_insert.html":{},"array/array_insert.html#example":{},"cases/delay.html":{},"global/promise.html":{}}}],["data.id",{"_index":2354,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["data.nam",{"_index":2355,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["database&#x3001;&#x8a18;&#x61b6;&#x9ad4;&#x6216;&#x662f;&#x5229;&#x7528;&#x6a94;&#x6848;&#x4ea4;&#x63db;&#x7684;&#x65b9;&#x5f0f;&#xff0c;&#x4f86;&#x628a;&#x4f60;&#x7684;&#x9ede;&#x9910;&#x8cc7;&#x8a0a;&#x4f5c;&#x5132;&#x5b58;&#xff0c;&#x800c;&#x7576;&#x4f60;&#x53bb;&#x9818;&#x98f2;&#x6599;&#x6642;&#xff0c;&#x5e97;&#x54e1;&#x6703;&#x8f38;&#x5165;&#x4f60;&#x7684;&#x865f;&#x78bc;&#xff0c;&#x4e26;&#x5728;&#x53eb;&#x51fa;&#x4f60;&#x9ede;&#x7684;&#x5167;&#x5bb9;&#x3002;&#x4f46;&#x5982;&#x679c;&#x662f;&#x5927;&#x578b;&#x7db2;&#x7ad9;&#x4e0a;&#xff0c;&#x5982;&#x679c;&#x6709;&#x8ca0;&#x8f09;&#x5e73;&#x8861;&#x7684;&#x6a5f;&#x5236;&#xff0c;&#x4f60;&#x600e;&#x9ebc;&#x80fd;&#x78ba;&#x5b9a;&#x4f60;&#x7576;&#x521d;&#x8f38;&#x5165;&#x548c;&#x6700;&#x5f8c;&#x53d6;&#x9910;&#x7684;server&#x662f;&#x540c;&#x4e00;&#x53f0;&#x5462;&#xff0c;&#x800c;&#x9019;&#x6a23;&#x4f5c;&#x7576;&#x4f60;&#x8cc7;&#x6599;&#x91cf;&#x5927;&#x6642;&#xff0c;&#x4e5f;&#x6703;&#x6709;&#x6548;&#x80fd;&#x5f71;&#x97ff;&#x7684;&#x554f;&#x984c;&#xff0c;&#x9019;&#x6642;&#x5019;cookie&#x5c31;&#x51fa;&#x5834;&#x4e86;&#x3002",{"_index":2222,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["database、記憶體或是利用檔案交換的方式，來把你的點餐資訊作儲存，而當你去領飲料時，店員會輸入你的號碼，並在叫出你點的內容。但如果是大型網站上，如果有負載平衡的機制，你怎麼能確定你當初輸入和最後取餐的server是同一台呢，而這樣作當你資料量大時，也會有效能影響的問題，這時候cooki",{"_index":2134,"title":{},"body":{"F2E/cookie.html":{}}}],["dataopts.map",{"_index":2353,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["date",{"_index":347,"title":{"global/date.html":{}},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#this":{},"core.html#new":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"http/caching.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["date.prototype.toisostr",{"_index":2788,"title":{"global/date.html#Date-prototype-toISOString":{}},"body":{"global/date.html":{}}}],["dd",{"_index":761,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["debugg",{"_index":3156,"title":{},"body":{"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/block.html":{}}}],["decemb",{"_index":2784,"title":{},"body":{"global/date.html":{}}}],["decim",{"_index":1553,"title":{},"body":{"num.html":{},"num.html#補數字":{},"math.html":{},"math.html#Math":{}}}],["decimal.substr(decimal.indexof",{"_index":1556,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["decimal.tofixed(length",{"_index":1555,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["declar",{"_index":1511,"title":{},"body":{"closures.html":{}}}],["decreas",{"_index":702,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["deep",{"_index":603,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{}}}],["deepclon",{"_index":1444,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["deepclone([...constantrout",{"_index":1452,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["deepclone(source[key",{"_index":1450,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["default",{"_index":3097,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["defer",{"_index":264,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{}}}],["defer/script",{"_index":262,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{}}}],["defin",{"_index":435,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"scope.html":{},"variable.html":{},"variable.html#Hoisting":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/block.html":{}}}],["defind",{"_index":561,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["defineproperti",{"_index":824,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["defineproperty(b",{"_index":461,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["defineproperty(obj",{"_index":796,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["defineproperty(wallet",{"_index":821,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["delay",{"_index":2625,"title":{"cases/delay.html":{}},"body":{"cases/delay.html":{}}}],["deleg",{"_index":3142,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["delet",{"_index":555,"title":{"operators/delete.html#delete":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"variable.html":{},"operators/delete.html":{},"operators/delete.html#delete":{}}}],["delete&#x53ea;&#x80fd;&#x64cd;&#x4f5c;&#x5c0d;&#x8c61;&#x7684;&#x5c6c;&#x6027",{"_index":2943,"title":{},"body":{"operators/delete.html#delete":{}}}],["delete&#xff1a;&#x522a;&#x9664;&#xff08;delete&#xff09",{"_index":216,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["delete：刪除（delet",{"_index":176,"title":{},"body":{"RESTfulAPI.html":{}}}],["depend",{"_index":1397,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["dequ",{"_index":3286,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["dequeu",{"_index":3269,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["design",{"_index":200,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["dessert",{"_index":2660,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["dessert&#xff08;&#x751c;&#x9ede;&#xff09;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#xff0c;&#x901a;&#x904e;&#x524d;&#x9762;&#x7684",{"_index":2705,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["dessert.appli",{"_index":2664,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["dessert.prototyp",{"_index":2666,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["destructur",{"_index":3064,"title":{"operators/destructuring_assignment.html#Destructuring-assignment":{}},"body":{"operators/destructuring_assignment.html":{}}}],["dev",{"_index":570,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["devtool",{"_index":707,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#const":{}}}],["differ",{"_index":1581,"title":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}},"body":{"operators.html":{}}}],["dir",{"_index":754,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["dir(callfn",{"_index":584,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["directori",{"_index":1395,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["disk",{"_index":2802,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["div",{"_index":280,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["div1",{"_index":281,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["div1.addeventlisten",{"_index":289,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["do",{"_index":3144,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["dobyord",{"_index":2761,"title":{},"body":{"global/promise.html":{}}}],["dobyorder(task",{"_index":2775,"title":{},"body":{"global/promise.html":{}}}],["doc",{"_index":1364,"title":{"index.html":{},"index.html#hexo-theme-doc-seed":{}},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{}}}],["document",{"_index":287,"title":{},"body":{"event.html":{},"event.html#代理":{},"core.html":{},"core.html#箭頭函數":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{},"index.html#More-Informations":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{}}}],["documentfrag",{"_index":1645,"title":{},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["dog",{"_index":742,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"global/function.html":{},"global/function.html#bind":{}}}],["dog.prototyp",{"_index":782,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["dog.prototype.bark",{"_index":748,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{}}}],["dog.prototype.constructor",{"_index":784,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["dom",{"_index":712,"title":{"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}},"body":{"core.html":{},"core.html#this":{},"performance.html":{},"performance.html#優化原則和方向":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["dom&#x3002",{"_index":1734,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["dom&#x4e8b;&#x4ef6;&#x8655;&#x7406;&#x5668",{"_index":1203,"title":{},"body":{"core.html#this":{}}}],["domcontentload",{"_index":1646,"title":{"performance.html#儘早執行操作-DOMContentLoaded":{}},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["done",{"_index":2254,"title":{},"body":{"api/promise.html":{},"cases/if.html":{},"cases/delay.html":{}}}],["download",{"_index":3083,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["dummi",{"_index":1376,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["e",{"_index":149,"title":{},"body":{"RegExp.html":{},"event.html":{},"event.html#代理":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"closures.html":{},"global/promise.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["e.target",{"_index":292,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["easycard",{"_index":1876,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["ecm",{"_index":147,"title":{},"body":{"RegExp.html":{}}}],["ecmascript",{"_index":258,"title":{"es6.html":{}},"body":{"es6.html":{}}}],["edg",{"_index":1436,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"statements/block.html":{}}}],["el",{"_index":831,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{}}}],["ele.addeventlisten",{"_index":863,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["element",{"_index":1431,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["element.pric",{"_index":2444,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["email",{"_index":131,"title":{},"body":{"RegExp.html":{}}}],["empti",{"_index":619,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["emptyobject",{"_index":829,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["endpoint",{"_index":2077,"title":{},"body":{"F2E/GraphQL.html":{}}}],["enforc",{"_index":859,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["enqueu",{"_index":3267,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["enumer",{"_index":797,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["epirus\\src\\utils\\api\\queries.t",{"_index":2507,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["equal",{"_index":504,"title":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["erdong",{"_index":2940,"title":{},"body":{"glossary/hoisting.html":{}}}],["error",{"_index":616,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#this":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"scope.html":{},"variable.html":{},"variable.html#Hoisting":{},"cases/delay.html":{},"global/promise.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["es5",{"_index":835,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"statements/for.html":{}}}],["es5中新增的一個方法，可以改變函數內部的thi",{"_index":1902,"title":{},"body":{"this.html":{}}}],["es6",{"_index":599,"title":{"core.html#ES6-Airbnb":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#ES6-Airbnb":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"this.html":{},"this.html#bind-apply-call":{},"array/good_part.html":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["eslint",{"_index":855,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["esprima.org",{"_index":409,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["etag",{"_index":2814,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["etag/if",{"_index":2827,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["event",{"_index":278,"title":{"event.html":{}},"body":{"global/promise.html":{}}}],["ex",{"_index":67,"title":{},"body":{"ajax.html":{},"object/create.html":{}}}],["exampl",{"_index":2350,"title":{"array/array_insert.html#example":{},"array/array_methods.html#examples":{}},"body":{"array/array_insert.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"global/promise.html":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["example&#x201d",{"_index":3338,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["examplevalu",{"_index":2611,"title":{},"body":{"cases/arr.html":{}}}],["examplevalues.reduc",{"_index":2614,"title":{},"body":{"cases/arr.html":{}}}],["exec",{"_index":655,"title":{},"body":{"core.html":{}}}],["expect",{"_index":2337,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"global/promise.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["expir",{"_index":2804,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["explicit",{"_index":447,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#屬性特徵":{}}}],["exponenti",{"_index":1769,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["exponential&apo",{"_index":1823,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["export",{"_index":1541,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["express",{"_index":353,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["expression&#xff09;&#x975e;&#x5e38;&#x985e;&#x4f3c;&#x65bc;&#x51fd;&#x6578;&#x8072;&#x660e;&#xff08;funct",{"_index":3160,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["expression&#xff0c;&#x7e2e;&#x5beb;&#xff1a;iife&#xff09",{"_index":1157,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["expressionfn",{"_index":646,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["expression）非常類似於函數聲明（funct",{"_index":3152,"title":{},"body":{"operators/function.html":{}}}],["expression，縮寫：iif",{"_index":662,"title":{},"body":{"core.html":{}}}],["extend",{"_index":598,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"object/create.html":{}}}],["f",{"_index":3039,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#typeof":{}}}],["f1",{"_index":1522,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f1(b,c",{"_index":1523,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f1,f2",{"_index":1526,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f2",{"_index":1529,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f2(b",{"_index":1527,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f3",{"_index":1530,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f3(b,c",{"_index":1528,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["factor",{"_index":1544,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["factori",{"_index":2650,"title":{"function/factory​_factory.html":{}},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["factory(...arg",{"_index":2697,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["fail",{"_index":551,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#箭頭函數":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"cases/delay.html":{}}}],["fals",{"_index":19,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#屬性特徵":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"this.html":{},"this.html#簡易呼叫":{},"cases/replace.html":{},"cases/if.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"http/caching.html":{},"http/caching.html#強緩存":{},"operators/typeof.html":{},"operators/typeof.html#null":{},"statements/block.html":{}}}],["falseyvalu",{"_index":2613,"title":{},"body":{"cases/arr.html":{}}}],["falsi",{"_index":512,"title":{},"body":{"core.html":{}}}],["famili",{"_index":538,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#this":{},"core.html#繼承":{}}}],["family&apo",{"_index":1052,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["family.callfamili",{"_index":552,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["family.callnam",{"_index":721,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["family.json",{"_index":641,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["family.oth",{"_index":556,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["family[familymethod[i",{"_index":560,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["family[key",{"_index":591,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["familymethod",{"_index":557,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["familymethod.length;i",{"_index":558,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["father",{"_index":585,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["featur",{"_index":1381,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["feb",{"_index":2330,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["fetch(menuurl",{"_index":2679,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["fetchdata3",{"_index":2518,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["file",{"_index":1374,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["fill",{"_index":2332,"title":{"array/array_insert.html#fill":{},"array/fill.html":{}},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/fill.html":{}}}],["filter",{"_index":2385,"title":{"array/array_methods.html#filter":{},"array/filter.html":{}},"body":{"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#Array":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["final",{"_index":2253,"title":{},"body":{"api/promise.html":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{}}}],["find",{"_index":564,"title":{"array/array_methods.html#find":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#ES6-Airbnb":{},"array/array_methods.html":{}}}],["firefox",{"_index":3264,"title":{},"body":{"statements/block.html":{}}}],["first",{"_index":850,"title":{},"body":{"core.html":{},"core.html#const":{},"index.html":{},"index.html#Getting-Started":{}}}],["firstregexp",{"_index":132,"title":{},"body":{"RegExp.html":{}}}],["flavour",{"_index":2658,"title":{},"body":{"function/factory​_factory.html":{}}}],["floor(numb",{"_index":1549,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["fn",{"_index":419,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#this":{},"closures.html":{},"closures.html#傳多個函數":{},"this.html":{},"this.html#簡易呼叫":{},"scope.html":{},"variable.html":{},"variable.html#Hoisting":{},"statements/AsyncFunction.html":{}}}],["fn.apply(team",{"_index":726,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["fn.bind(team",{"_index":728,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["fn.call",{"_index":729,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["fn.call(team",{"_index":725,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["fn1",{"_index":2015,"title":{},"body":{"scope.html":{}}}],["fn2",{"_index":727,"title":{},"body":{"core.html":{},"core.html#this":{},"scope.html":{}}}],["fna",{"_index":663,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"this.html":{},"this.html#簡易呼叫":{}}}],["fna.bind",{"_index":1867,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["fnb",{"_index":1866,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["foo",{"_index":438,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"this.html":{},"this.html#簡易呼叫":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"global/promise.html":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"statements/block.html":{}}}],["foo&#xff0c;&#x53ef;&#x770b;&#x5230",{"_index":3255,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["foo.bar",{"_index":1872,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["for&#x2026;in",{"_index":3232,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["for&#x2026;of",{"_index":3231,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["for&#x2026;of&#x8207;for&#x2026;in&#x7684;&#x5dee;&#x5225",{"_index":3230,"title":{"statements/for.html#for…of與for…in的差別":{}},"body":{}}],["for...in",{"_index":3225,"title":{},"body":{"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["for...of",{"_index":3226,"title":{},"body":{"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["foreach",{"_index":623,"title":{"array/array_methods.html#forEach":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["format",{"_index":2793,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["forward",{"_index":2088,"title":{},"body":{"F2E/header.html":{}}}],["for…in",{"_index":3224,"title":{},"body":{"statements/for.html":{}}}],["for…of",{"_index":3223,"title":{},"body":{"statements/for.html":{}}}],["for…of與for…in",{"_index":3222,"title":{},"body":{"statements/for.html":{}}}],["for迴圈的時間複雜度為o(n2",{"_index":3281,"title":{},"body":{"string/queue.html":{}}}],["for（xff",{"_index":2090,"title":{},"body":{"F2E/header.html":{}}}],["found",{"_index":2403,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#find":{}}}],["frag",{"_index":1666,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["frag.appendchild(li",{"_index":1669,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["fragment",{"_index":1662,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["freez",{"_index":802,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["freeze(person",{"_index":846,"title":{},"body":{"core.html":{},"core.html#const":{}}}],["friday",{"_index":2693,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["fromexponenti",{"_index":1773,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["fromexponential(valu",{"_index":1776,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["fromtoarr",{"_index":2510,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["fromtoarr.push",{"_index":2514,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["fromtoarr[i].transactionhash",{"_index":2527,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["front",{"_index":3273,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["fulfil",{"_index":2244,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{},"global/promise.html":{}}}],["fulfilled/reject",{"_index":2751,"title":{},"body":{"global/promise.html":{}}}],["fun",{"_index":582,"title":{},"body":{"core.html":{},"copy.html":{},"copy.html#轉成-JSON-再轉回來":{}}}],["func",{"_index":1911,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["func.appli",{"_index":1898,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["func.cal",{"_index":1895,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["funcb",{"_index":677,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["funcb(cbfn",{"_index":678,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["function",{"_index":21,"title":{"arrowFunction.html#Arrow-Function":{},"core.html#function":{},"function/factory​_factory.html":{}},"body":{"ajax.html":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{},"closures.html":{},"closures.html#傳多個函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#Increment":{},"performance.html":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"array/filter.html":{},"array/fill.html":{},"cases/replace.html":{},"cases/str.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"glossary/hoisting.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/AsyncFunction.html":{},"string/split.html":{},"string/split.html#split":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["function#bind",{"_index":2975,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["function&#x662f;&#x7269;&#x4ef6",{"_index":1076,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["function&#xff0c;&#x4ee5;&#x6b64;&#x70ba;&#x57fa;&#x6e96;&#x7522;&#x751f;&#x4e00;&#x500b;&#x4f5c;&#x7528;&#x57df",{"_index":1988,"title":{},"body":{"this.html#bind-apply-call":{}}}],["function($provid",{"_index":3140,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["function(pric",{"_index":692,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#屬性特徵":{}}}],["function.nam",{"_index":3048,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["function.prototype.appli",{"_index":2963,"title":{},"body":{"global/function.html":{},"global/function.html#call、apply、bind":{}}}],["function.prototype.bind",{"_index":2964,"title":{},"body":{"global/function.html":{},"global/function.html#call、apply、bind":{}}}],["function.prototype.cal",{"_index":2962,"title":{},"body":{"global/function.html":{},"global/function.html#call、apply、bind":{}}}],["function1",{"_index":2053,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["function_express",{"_index":3040,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#typeof":{}}}],["functionc",{"_index":648,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["functiond",{"_index":649,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["functions&#xff09;&#x3002",{"_index":3163,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["function沒辦法轉成json",{"_index":1461,"title":{},"body":{"copy.html":{}}}],["functoind",{"_index":651,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["g",{"_index":161,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{},"index.html":{},"index.html#Getting-Started":{},"cases/replace.html":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{}}}],["get",{"_index":1382,"title":{"index.html#Getting-Started":{}},"body":{"index.html":{}}}],["get&#xff1a;&#x8b80;&#x53d6;&#xff08;read&#xff09",{"_index":213,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["getcount",{"_index":3180,"title":{},"body":{"string/split.html":{},"string/split.html#split":{}}}],["getdat",{"_index":762,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["getdata",{"_index":635,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"cases/delay.html":{}}}],["getdata(data",{"_index":2631,"title":{},"body":{"cases/delay.html":{}}}],["getelementbyid",{"_index":288,"title":{},"body":{"event.html":{},"event.html#代理":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{}}}],["getelementsbytagnam",{"_index":1657,"title":{},"body":{"performance.html":{},"performance.html#DOM-查詢做緩存":{}}}],["getfullyear",{"_index":766,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["getmeal",{"_index":2677,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["getmonth",{"_index":764,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["getnam",{"_index":1862,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["getobj",{"_index":2953,"title":{},"body":{"object/object​_keys.html":{}}}],["getobj[typ",{"_index":2957,"title":{},"body":{"object/object​_keys.html":{}}}],["getownpropertydescriptor(wallet",{"_index":823,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["getpricevalue(order.itempric",{"_index":1772,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["getpricevalue(valu",{"_index":1775,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["getr",{"_index":2628,"title":{},"body":{"cases/delay.html":{}}}],["getter",{"_index":807,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["getter/sett",{"_index":834,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["gettim",{"_index":2633,"title":{},"body":{"cases/delay.html":{}}}],["getweeksm",{"_index":2687,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["get|post|put|delet",{"_index":2643,"title":{},"body":{"cases/str.html":{}}}],["get傳遞之網址列資訊(queri",{"_index":33,"title":{},"body":{"ajax.html":{}}}],["get：讀取（read",{"_index":173,"title":{},"body":{"RESTfulAPI.html":{}}}],["git",{"_index":1391,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["github",{"_index":196,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["givememoney",{"_index":652,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["givememoney&apo",{"_index":1146,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["givemoremoney",{"_index":653,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["givemoremoney(num",{"_index":657,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["givetimestamp",{"_index":2695,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["global",{"_index":672,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"closures.html":{},"this.html":{},"this.html#簡易呼叫":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["global.person",{"_index":673,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["globalloc",{"_index":2021,"title":{},"body":{"scope.html":{}}}],["go",{"_index":1396,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["godfath",{"_index":2429,"title":{},"body":{"array/array_methods.html":{}}}],["godfather&apo",{"_index":2465,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["good",{"_index":2596,"title":{},"body":{"cases/if.html":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["goodby",{"_index":1503,"title":{},"body":{"closures.html":{}}}],["gpu",{"_index":1642,"title":{},"body":{"performance.html":{}}}],["graph",{"_index":2073,"title":{},"body":{"F2E/GraphQL.html":{}}}],["graphql",{"_index":2069,"title":{"F2E/GraphQL.html":{}},"body":{"F2E/GraphQL.html":{}}}],["groot",{"_index":546,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["hand",{"_index":429,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["happi",{"_index":205,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["hash",{"_index":2517,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["hash&#x78bc;&#x6703;&#x96a8;&#x4e4b;&#x6539;&#x8b8a;&#xff0c;&#x901a;&#x904e;&#x8acb;&#x6c42;&#x982d;&#x4e2d;&#x7684",{"_index":2897,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["hashlist",{"_index":2509,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["hashlist.push(v.transactionhash",{"_index":2515,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["hashtag",{"_index":2038,"title":{},"body":{"url.html":{}}}],["hateoa",{"_index":195,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["hateoas&#x3002",{"_index":253,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["header",{"_index":2080,"title":{"F2E/header.html":{},"F2E/token.html#provisional-headers-are-shown":{}},"body":{"F2E/token.html":{},"F2E/token.html#provisional-headers-are-shown":{},"http/caching.html":{},"http/caching.html#強緩存":{}}}],["hello",{"_index":423,"title":{},"body":{"core.html":{},"closures.html":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#bind-apply-call":{},"cases/str.html":{},"global/function.html":{},"global/function.html#bind":{},"statements/for.html":{}}}],["hello5",{"_index":1605,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["here",{"_index":2763,"title":{},"body":{"global/promise.html":{}}}],["hexo",{"_index":1362,"title":{"index.html":{},"index.html#hexo-theme-doc-seed":{}},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{}}}],["hi",{"_index":2970,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["hoist",{"_index":415,"title":{"variable.html#Hoisting":{}},"body":{"core.html":{},"variable.html":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/block.html":{}}}],["hoisting](https://developer.mozilla.org/zh",{"_index":2932,"title":{"glossary/hoisting.html":{}},"body":{}}],["host",{"_index":77,"title":{},"body":{"ajax.html":{}}}],["hostnam",{"_index":2032,"title":{},"body":{"url.html":{}}}],["href",{"_index":282,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["href=xxx",{"_index":86,"title":{},"body":{"ajax.html":{}}}],["hsu",{"_index":539,"title":{},"body":{"core.html":{}}}],["html",{"_index":1648,"title":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}},"body":{"performance.html":{},"performance.html#優化原則和方向":{},"performance.html#懶加載":{},"swagger/to-html.html":{}}}],["http",{"_index":29,"title":{"http/caching.html":{}},"body":{"ajax.html":{},"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{},"RESTfulAPI.html#狀態碼":{},"F2E/header.html":{},"F2E/cookie.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#References":{},"object/object​_keys.html":{}}}],["http/1.1",{"_index":2806,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["http://3000",{"_index":2646,"title":{},"body":{"cases/str.html":{}}}],["http://blog.xuite.net/ahdaa/blog1/test.html?id=ad&amp;val1=02&amp;val2=22#achorad",{"_index":68,"title":{},"body":{"ajax.html":{}}}],["http://example.com/?userid=jacob.hsu",{"_index":48,"title":{},"body":{"ajax.html":{}}}],["http://localhost:4000",{"_index":1403,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["http://ourjs.com/detail/54695381bc3f9b154e000046",{"_index":1801,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["http://petstore.swagger.io/v1/pet",{"_index":3093,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["http://petstore.swagger.io/v1/pets/{petid",{"_index":3104,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["http://www.dengzhr.com/js/1069",{"_index":1905,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["http://www.foo.com",{"_index":101,"title":{},"body":{"ajax.html":{}}}],["http://www.jstips.co/zh_tw/javascript/whi",{"_index":1588,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["http://www.ruanyifeng.com/blog/2018/10/rest",{"_index":206,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["https://${window.location.host",{"_index":2042,"title":{},"body":{"url.html":{}}}],["https://30secondsofinterviews.org",{"_index":1590,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["https://blog.florimondmanca.com/rest",{"_index":199,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["https://developer.mozilla.org/en",{"_index":1500,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["https://developer.mozilla.org/zh",{"_index":111,"title":{},"body":{"ajax.html":{},"this.html":{},"this.html#Callback":{}}}],["https://github.com/airbnb/javascript",{"_index":854,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["https://github.com/interviewmap/c",{"_index":1803,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["https://github.com/vuejs/vue/blob/dev/dist/vue.j",{"_index":828,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["https://github.com/zalando",{"_index":1392,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["https://graphql.cn/learn",{"_index":2078,"title":{},"body":{"F2E/GraphQL.html":{},"F2E/GraphQL.html#References":{}}}],["https://hacpai.com/article/1546570870626?r=vanessa",{"_index":1591,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["https://hacpai.com/article/1546665384680?r=vanessa",{"_index":1602,"title":{},"body":{"operators.html":{},"operators.html#Increment":{},"operators.html#references":{}}}],["https://hacpai.com/article/1547790109416?r=vanessa",{"_index":2449,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["https://is.gd/0iywu2",{"_index":1680,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["https://ithelp.ithome.com.tw/articles/10190254",{"_index":66,"title":{},"body":{"ajax.html":{}}}],["https://ithelp.ithome.com.tw/articles/10200678",{"_index":2079,"title":{},"body":{"F2E/GraphQL.html":{},"F2E/GraphQL.html#References":{}}}],["https://jsbin.com/cejijipevo/edit?js,consol",{"_index":1456,"title":{},"body":{"copy.html":{},"copy.html#Object-assign":{}}}],["https://jsbin.com/gaceyen/edit?js,consol",{"_index":2408,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#sort":{}}}],["https://jsbin.com/guqetaviho/edit?js,consol",{"_index":1585,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["https://jsbin.com/hajohit/edit?html,js,output",{"_index":279,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["https://jsbin.com/hipiruzoru/edit?js,consol",{"_index":113,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{}}}],["https://jsbin.com/honidujame/edit?js,consol",{"_index":343,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#異步":{}}}],["https://jsbin.com/hupumaxoru/edit?js,consol",{"_index":1606,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["https://jsbin.com/janoyunemu/edit?js,consol",{"_index":2610,"title":{},"body":{"cases/arr.html":{}}}],["https://jsbin.com/katifugevu/edit?js,console,output",{"_index":35,"title":{},"body":{"ajax.html":{}}}],["https://jsbin.com/keholuroba/edit?js,consol",{"_index":1412,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{}}}],["https://jsbin.com/kofawafune/edit?js,consol",{"_index":1459,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{}}}],["https://jsbin.com/lokejiveha/edit?js,consol",{"_index":1411,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{}}}],["https://jsbin.com/lufavuf/1/edit?js,consol",{"_index":2384,"title":{},"body":{"array/array_merge.html":{}}}],["https://jsbin.com/nefobuh/edit?js,consol",{"_index":2411,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#every":{}}}],["https://jsbin.com/nidizam/edit?js,consol",{"_index":2380,"title":{},"body":{"array/array_merge.html":{}}}],["https://jsbin.com/pupasabapa/edit?js,consol",{"_index":1903,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["https://jsbin.com/qapevom/edit?js,consol",{"_index":2402,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#find":{}}}],["https://jsbin.com/razufufago/edit?js,consol",{"_index":2421,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["https://jsbin.com/samaxubazo/edit?js,consol",{"_index":1593,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["https://jsbin.com/sidixofelo/edit?js,consol",{"_index":2951,"title":{},"body":{"object/object​_keys.html":{}}}],["https://jsbin.com/tagalenuje/edit?js,consol",{"_index":1875,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["https://jsbin.com/venezeyonu/edit?js,consol",{"_index":1424,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["https://jsbin.com/vihonezita/edit?js,consol",{"_index":1860,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{}}}],["https://jsbin.com/viziyewore/edit?js,consol",{"_index":1856,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{}}}],["https://jsbin.com/wurocegika/edit?js,consol",{"_index":2946,"title":{},"body":{"object/object​_keys.html":{}}}],["https://jsbin.com/wuxiqeciko/edit?js,consol",{"_index":1906,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["https://jsbin.com/xeqevarisa/1/edit?js,consol",{"_index":1421,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["https://jsbin.com/xevunu/edit?js,consol",{"_index":2394,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#map":{},"array/map.html":{},"array/map.html#map":{}}}],["https://jsbin.com/xoninaz/1/edit?js,consol",{"_index":2400,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#filter":{}}}],["https://jsbin.com/xoninaz/edit?js,consol",{"_index":2391,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#forEach":{}}}],["https://jsbin.com/yapugucezi/edit?js,consol",{"_index":2427,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["https://jsbin.com/yeleboz/edit?js,consol",{"_index":2415,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#some":{}}}],["https://jsbin.com/yijuyebixu/edit?js,consol",{"_index":1525,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["https://jsbin.com/zosebomeko/edit?js,console,output",{"_index":2759,"title":{},"body":{"global/promise.html":{}}}],["https://juejin.im/post/5dbff8735188252ddb2fd25",{"_index":2554,"title":{},"body":{"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["https://lodash.com/docs/4.17.15#clonedeep",{"_index":1454,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["https://paper.dropbox.com/doc/j",{"_index":2024,"title":{},"body":{"scope.html":{}}}],["https://paper.dropbox.com/doc/javascript",{"_index":2059,"title":{},"body":{"variable.html":{},"variable.html#動態型別":{}}}],["https://paper.dropbox.com/doc/jsjavascript",{"_index":1926,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["https://segmentfault.com/a/1190000012175422",{"_index":1802,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["https://tylermcginnis.com/arrow",{"_index":1512,"title":{},"body":{"closures.html":{}}}],["https://wcc723.github.io/javascript/2017/12/15/javascript",{"_index":2027,"title":{},"body":{"scope.html":{}}}],["https://wcc723.github.io/javascript/2017/12/21/javascript",{"_index":1929,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["https://wcc723.github.io/javascript/2019/03/18/j",{"_index":1925,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["https://www.jianshu.com/p/8f839f558319",{"_index":1681,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["https://www.sitepoint.com/factori",{"_index":2701,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["https://www.w3schools.com/js/js_operators.asp",{"_index":1601,"title":{},"body":{"operators.html":{},"operators.html#Increment":{},"operators.html#references":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["https://www.youtube.com/watch?v=wiommcfayvi",{"_index":856,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["https://zh.wikipedia.org/wiki",{"_index":537,"title":{},"body":{"core.html":{}}}],["http代理或負載均衡方式連接到web伺服器的用戶端最原始的ip位址的http",{"_index":2091,"title":{},"body":{"F2E/header.html":{}}}],["http的無狀態(stateless",{"_index":2104,"title":{},"body":{"F2E/cookie.html":{}}}],["http的無狀態性的「額外手段」之一，讓伺服器可以設定或讀取cookies中所包含資訊，藉此來維護我們在使用服務時，可以在背景完成向伺服器發送請求，接著伺服器就匯回傳包含登入憑據（使用者名稱加密碼的某種加密形式）的cookie文檔，到使用者的硬碟(或記憶體上)，在之後登入時，只要cookie尚未到期，瀏覽器會傳送該cooki",{"_index":2105,"title":{},"body":{"F2E/cookie.html":{}}}],["i++)&#x3000;&#x3000;for",{"_index":3320,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["i++)&#x3000;&#x3000;x",{"_index":3319,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["i=1",{"_index":3277,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{}}}],["i=ary.length",{"_index":59,"title":{},"body":{"ajax.html":{}}}],["i=n",{"_index":3278,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{}}}],["icecream",{"_index":2656,"title":{},"body":{"function/factory​_factory.html":{}}}],["icecream&#xff08;&#x51b0;&#x6dc7;&#x6dcb;&#xff09;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#x4f86;&#x5b9a;&#x7fa9;&#x3002",{"_index":2707,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["id",{"_index":51,"title":{},"body":{"ajax.html":{},"event.html":{},"event.html#代理":{},"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["id&#x3002",{"_index":2211,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#x4e5f;&#x6d88;&#x5931;&#x4e86;&#xff0c;&#x4f46;&#x53ea;&#x8981;&#x628a;&#x539f;&#x4f86;&#x7684;sess",{"_index":2228,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#x518d;&#x767c;&#x9001;&#x7d66;server&#xff0c;&#x90a3;&#x9084;&#x662f;&#x80fd;&#x5920;&#x627e;&#x5230;&#x539f;&#x4f86;&#x7684;sess",{"_index":2229,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#x7684;&#x65b9;&#x5f0f;&#x4e5f;&#x53ef;&#x4ee5;&#x63a1;&#x7528;cooki",{"_index":2224,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#xff0c;&#x4e26;&#x5728;&#x672c;&#x6b21;&#x97ff;&#x61c9;&#x4e2d;&#x8fd4;&#x56de;&#x7d66;&#x5ba2;&#x6236;&#x7aef;&#x4fdd;&#x5b58;&#x3002",{"_index":2217,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#xff0c;&#x5c31;&#x8868;&#x793a;&#x9019;&#x500b;&#x5ba2;&#x6236;&#x662f;&#x8001;&#x53f8;&#x6a5f;&#x5566;&#xff0c;&#x7576;&#x7136;&#x4f3a;&#x670d;&#x5668;&#x7aef;&#x4ee5;&#x524d;&#x5c31;&#x70ba;&#x4e86;&#x9019;&#x500b;&#x5ba2;&#x6236;&#x7aef;&#x5275;&#x5efa;&#x904e;session&#xff0c;&#x670d;&#x52d9;&#x5668;&#x5c31;&#x6309;&#x7167;sess",{"_index":2214,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#xff0c;&#x628a;&#x9019;&#x500b;session&#x627e;&#x51fa;&#x4f86;&#x4f7f;&#x7528;&#x3002;&#x4f46;&#x5982;&#x679c;&#x5ba2;&#x6236;&#x7aef;&#x8acb;&#x6c42;&#x4e0d;&#x5305;&#x542b;sess",{"_index":2215,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#xff0c;&#x7576;&#x7136;&#x5982;&#x679c;&#x5df2;&#x5305;&#x542b;&#x4e00;&#x500b;sess",{"_index":2213,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#xff0c;&#xff0c;&#x5247;&#x8868;&#x793a;&#x4ed6;&#x662f;&#x65b0;&#x81c9;&#x5b54;&#xff0c;&#x90a3;&#x4f3a;&#x670d;&#x5668;&#x7aef;&#x5c31;&#x70ba;&#x6b64;&#x5ba2;&#x6236;&#x7aef;&#x5275;&#x5efa;&#x4e00;&#x500b;session&#xff0c;&#x4e26;&#x751f;&#x6210;&#x4e00;&#x500b;sess",{"_index":2216,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id=ad&amp;val1=02&amp;val2=22#achorad",{"_index":80,"title":{},"body":{"ajax.html":{}}}],["id也消失了，但只要把原來的sess",{"_index":2138,"title":{},"body":{"F2E/cookie.html":{}}}],["id再發送給server，那還是能夠找到原來的sess",{"_index":2139,"title":{},"body":{"F2E/cookie.html":{}}}],["id的方式也可以採用cooki",{"_index":2135,"title":{},"body":{"F2E/cookie.html":{}}}],["id，就表示這個客戶是老司機啦，當然伺服器端以前就為了這個客戶端創建過session，服務器就按照sess",{"_index":2131,"title":{},"body":{"F2E/cookie.html":{}}}],["id，把這個session找出來使用。但如果客戶端請求不包含sess",{"_index":2132,"title":{},"body":{"F2E/cookie.html":{}}}],["id，當然如果已包含一個sess",{"_index":2130,"title":{},"body":{"F2E/cookie.html":{}}}],["id，，則表示他是新臉孔，那伺服器端就為此客戶端創建一個session，並生成一個sess",{"_index":2133,"title":{},"body":{"F2E/cookie.html":{}}}],["ie8",{"_index":837,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["ieee",{"_index":1783,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["if&#x2026;els",{"_index":3201,"title":{"statements/if...else.html#if…else":{}},"body":{}}],["if(a",{"_index":454,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["if…els",{"_index":3189,"title":{},"body":{"statements/if...else.html":{}}}],["if中的console.log(nam",{"_index":2941,"title":{},"body":{"glossary/hoisting.html":{}}}],["iif",{"_index":660,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["iife&#x3001;closure&#x3001;callback",{"_index":1963,"title":{},"body":{"this.html#Callback":{}}}],["iife&#xff08;immedi",{"_index":391,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["iife、closure、callback",{"_index":1893,"title":{},"body":{"this.html":{}}}],["iife（immedi",{"_index":351,"title":{},"body":{"asynchronous.html":{}}}],["img",{"_index":83,"title":{},"body":{"ajax.html":{},"performance.html":{},"performance.html#懶加載":{}}}],["img1",{"_index":1651,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["img1.getattribut",{"_index":1656,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["img1.src",{"_index":1655,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["immedi",{"_index":661,"title":{},"body":{"core.html":{}}}],["immut",{"_index":2311,"title":{},"body":{"array/array_insert.html":{}}}],["implement",{"_index":2762,"title":{},"body":{"global/promise.html":{}}}],["implicit",{"_index":449,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["import",{"_index":268,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["in&#x53ea;&#x80fd;&#x505a;&#x7b2c;&#x4e00;&#x5c64;&#x7684;&#x8907;&#x88fd",{"_index":1090,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["increas",{"_index":701,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["increment",{"_index":1592,"title":{"operators.html#Increment":{}},"body":{"operators.html":{}}}],["incubator/hexo",{"_index":1393,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["index",{"_index":682,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"this.html":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_merge.html":{}}}],["index,array",{"_index":1891,"title":{},"body":{"this.html":{},"this.html#Callback":{}}}],["index.j",{"_index":269,"title":{},"body":{"es6.html":{}}}],["inewarray.length;i",{"_index":620,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["info",{"_index":3030,"title":{"swagger/to-html.html#Info-for-a-specific-pet":{}},"body":{"object/create.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["inform",{"_index":1407,"title":{"index.html#More-Informations":{}},"body":{"index.html":{},"index.html#More-Informations":{}}}],["ingredi",{"_index":2700,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["initi",{"_index":3172,"title":{},"body":{"statements/let.html":{},"statements/let.html#let":{}}}],["initv",{"_index":699,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["inner",{"_index":3262,"title":{},"body":{"statements/block.html":{}}}],["insert",{"_index":442,"title":{"array/array_insert.html":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["insidefn",{"_index":1516,"title":{},"body":{"closures.html":{}}}],["instal",{"_index":1385,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["instanc",{"_index":2696,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"object/create.html":{}}}],["instanceof",{"_index":3037,"title":{},"body":{"object/create.html":{},"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["int32",{"_index":3090,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["int64",{"_index":3095,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["integ",{"_index":3089,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["interest",{"_index":2543,"title":{},"body":{"array/object_to_array.html":{}}}],["interview",{"_index":1804,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["invalid",{"_index":432,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["invok",{"_index":352,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["ip",{"_index":2085,"title":{},"body":{"F2E/header.html":{}}}],["isempti",{"_index":3271,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["iso",{"_index":2789,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["item",{"_index":315,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"this.html":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/map.html":{},"array/map.html#map":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["item,index",{"_index":2388,"title":{},"body":{"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{}}}],["item.catalog",{"_index":2437,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["items.length",{"_index":3272,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["items.pop",{"_index":3292,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["items.push(",{"_index":3268,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["items.shift",{"_index":3270,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["items.splice(items.length",{"_index":2321,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["items.unshift(",{"_index":3288,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["iter",{"_index":1889,"title":{},"body":{"this.html":{},"this.html#Callback":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["iterable.foo",{"_index":3229,"title":{},"body":{"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["j",{"_index":354,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"string/queue.html":{}}}],["j++)&#x3000;&#x3000;x",{"_index":3321,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["j=1",{"_index":3279,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{}}}],["j=n",{"_index":3280,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{}}}],["jacob",{"_index":418,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{},"core.html#Let":{},"variable.html":{},"variable.html#Hoisting":{}}}],["jacob&#x4f60;&#x597d;1",{"_index":1177,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["jacob.hsu",{"_index":64,"title":{},"body":{"ajax.html":{}}}],["jacob.hsu.tw",{"_index":139,"title":{},"body":{"RegExp.html":{}}}],["jacob.hsu.tw@gmail.com",{"_index":137,"title":{},"body":{"RegExp.html":{}}}],["jacob1",{"_index":2045,"title":{},"body":{"variable.html":{}}}],["jacob2",{"_index":2047,"title":{},"body":{"variable.html":{}}}],["jacob3",{"_index":2049,"title":{},"body":{"variable.html":{}}}],["jacob你好1",{"_index":679,"title":{},"body":{"core.html":{}}}],["jan",{"_index":2324,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["javascript",{"_index":404,"title":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#屬性特徵":{},"num.html":{},"num.html#補數字":{},"performance.html":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"this.html":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#Promise":{},"array/good_part.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/arr.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"glossary/hoisting.html":{},"operators/function.html":{}}}],["javascript&#x4e2d;&#x7684;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x6c92;&#x6709;&#x63d0;&#x5347;,&#x4e0d;&#x50cf;&#x51fd;&#x6578;&#x8072;&#x660e;,&#x4f60;&#x5728;&#x5b9a;&#x7fa9;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x4e4b;&#x524d;&#x4e0d;&#x80fd;&#x4f7f;&#x7528;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f",{"_index":3166,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["javascript&#x4e2d;&#x7684;&#x5c0f;&#x6578;&#x63a1;&#x7528;&#x7684;&#x662f;&#x96d9;&#x7cbe;&#x5ea6;(64&#x4f4d;)&#x8868;&#x793a;&#x7684;&#xff0c;&#x7531;&#x4e09;&#x90e8;&#x5206;&#x7d44;&#x6210;&#xff1a;&#x3000;&#x7b26",{"_index":1828,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["javascript中的小數採用的是雙精度(64",{"_index":1784,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["javascript構建的應用程序的複雜性比語言發展的速度還要快。這種情況迫使開發人員使用javascript",{"_index":2308,"title":{},"body":{"array/good_part.html":{}}}],["javascript遵循iee",{"_index":1781,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["jelli",{"_index":2652,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["jelly&#xff08;&#x679c;&#x51cd;&#xff09;&#x548c",{"_index":2706,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["jessica",{"_index":730,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["join",{"_index":2647,"title":{},"body":{"cases/str.html":{},"cases/str.html#url":{}}}],["jqueri",{"_index":597,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["jquery.extend",{"_index":601,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["js",{"_index":357,"title":{"array/good_part.html":{}},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"performance.html":{},"performance.html#優化原則和方向":{},"math.html":{},"this.html":{},"scope.html":{},"array/array_merge.html":{},"cases/if.html":{},"cases/math.html":{},"operators/typeof.html":{},"operators/typeof.html#null":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["js&#x5169;&#x7a2e;&#x578b;&#x5225",{"_index":1073,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["js&#x5c6c;&#x65bc;&#x975c;&#x614b;&#x4f5c;&#x7528;&#x57df",{"_index":890,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["js&#x662f;&#x55ae;&#x57f7;&#x884c;&#x5e8f",{"_index":919,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["js&#x6c92;&#x6709;&#x6574;&#x578b;&#x53ea;&#x6709;&#x5c0d;&#x8c61",{"_index":3062,"title":{},"body":{"operators/typeof.html#null":{}}}],["js&#x8a9e;&#x8a00;&#x4e2d;&#x51fd;&#x5f0f;&#x7684;&#x8a2d;&#x8a08;&#xff0c;&#x5fc5;&#x6709;&#x56de;&#x50b3;&#x503c;&#xff0c;&#x6c92;&#x5beb;&#x76f8;&#x7576;&#x65bc;&#x56de;&#x50b3",{"_index":1996,"title":{},"body":{"this.html#bind-apply-call":{}}}],["jsfood.com",{"_index":2688,"title":{},"body":{"function/factory​_factory.html":{}}}],["json",{"_index":607,"title":{"core.html#JSON":{},"copy.html#轉成-JSON-再轉回來":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"F2E/token.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["json&#x6240;&#x6709;&#x7684;&#x5c6c;&#x6027;&#x4e00;&#x5b9a;&#x90fd;&#x662f;&#x5b57;&#x4e32;&#x7684;&#x5f62;&#x5f0f",{"_index":1120,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["json.pars",{"_index":633,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["json.stringify(famili",{"_index":606,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["json是javascript的一個子集，但json",{"_index":631,"title":{},"body":{"core.html":{}}}],["json，這對於在會話之間持久化，通過http或websocket",{"_index":2694,"title":{},"body":{"function/factory​_factory.html":{}}}],["js正则表达式，限1",{"_index":126,"title":{},"body":{"RegExp.html":{}}}],["june",{"_index":2327,"title":{},"body":{"array/array_insert.html":{}}}],["jwt",{"_index":2092,"title":{},"body":{"F2E/token.html":{}}}],["k98zbcemd1ig9dzyynrul",{"_index":2026,"title":{},"body":{"scope.html":{},"variable.html":{},"variable.html#動態型別":{}}}],["key",{"_index":589,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#ES6-Airbnb":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"array/object_to_array.html":{},"object/object​_keys.html":{},"statements/for.html":{}}}],["key)，for…of",{"_index":3228,"title":{},"body":{"statements/for.html":{}}}],["keydown",{"_index":1673,"title":{},"body":{"performance.html":{}}}],["keydown&#xff1a;&#x6309;&#x4e0b;&#x9375;&#x76e4;&#x9375",{"_index":1750,"title":{},"body":{"performance.html#事件節流":{}}}],["keys(an_obj",{"_index":2950,"title":{},"body":{"object/object​_keys.html":{}}}],["keys(arr",{"_index":2947,"title":{},"body":{"object/object​_keys.html":{}}}],["keys(obj",{"_index":2948,"title":{},"body":{"object/object​_keys.html":{}}}],["keys(obj).map",{"_index":2544,"title":{},"body":{"array/object_to_array.html":{}}}],["keys(source).foreach",{"_index":1447,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["keys(types).foreach",{"_index":2954,"title":{},"body":{"object/object​_keys.html":{}}}],["keyup",{"_index":1672,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["keyup&#xff1a;&#x91cb;&#x653e;&#x9375;&#x76e4;&#x9375",{"_index":1751,"title":{},"body":{"performance.html#事件節流":{}}}],["kingdom",{"_index":777,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["knight",{"_index":2433,"title":{},"body":{"array/array_methods.html":{}}}],["knight&apo",{"_index":2468,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["knowledg",{"_index":1805,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["last",{"_index":2826,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["lastest",{"_index":825,"title":{},"body":{"core.html":{}}}],["lastindex",{"_index":2381,"title":{},"body":{"array/array_merge.html":{}}}],["lastmodifi",{"_index":2815,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["laterhello",{"_index":2968,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["layer",{"_index":2669,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["left",{"_index":428,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["length",{"_index":625,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"num.html":{},"num.html#補數字":{},"performance.html":{},"performance.html#DOM-查詢做緩存":{},"this.html":{},"this.html#bind-apply-call":{},"cases/replace.html":{},"string/split.html":{},"string/split.html#split":{}}}],["length).join",{"_index":1560,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["let&#x4f5c;&#x7528;&#x57df;&#x53ea;&#x5728;for",{"_index":1187,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["let&#x7684;&#x4f5c;&#x7528;&#x57df;&#x5247;&#x662f;&#x5728;&#x5340;&#x584a;(block",{"_index":1322,"title":{},"body":{"core.html#Let":{}}}],["let作用域只在for",{"_index":698,"title":{},"body":{"core.html":{}}}],["let的作用域則是在區塊(block",{"_index":843,"title":{},"body":{"core.html":{}}}],["lexic",{"_index":413,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["lh",{"_index":427,"title":{"core.html#LHS":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["lhs)&#xff0c;&#x5be6;&#x969b;&#x4e0a;&#x5728;&#x6b64;&#x5c31;&#x7121;&#x6cd5;&#x7e7c;&#x7e8c;&#x57f7;&#x884c",{"_index":932,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["li",{"_index":1665,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["li.innerhtml",{"_index":1668,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["liao",{"_index":611,"title":{},"body":{"core.html":{}}}],["limit",{"_index":3088,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["link",{"_index":85,"title":{},"body":{"ajax.html":{},"cases/str.html":{},"cases/str.html#url":{}}}],["list",{"_index":1664,"title":{"swagger/to-html.html#List-all-pets":{}},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"array/array_method.html":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["listchunk",{"_index":2491,"title":{},"body":{"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{}}}],["listnod",{"_index":1663,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["listnode.appendchild(frag",{"_index":1670,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["load",{"_index":639,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"performance.html":{}}}],["local",{"_index":1400,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{},"closures.html":{},"this.html":{},"this.html#簡易呼叫":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["locat",{"_index":192,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["location.hash",{"_index":81,"title":{},"body":{"ajax.html":{}}}],["location.host",{"_index":72,"title":{},"body":{"ajax.html":{}}}],["location.hostnam",{"_index":70,"title":{},"body":{"ajax.html":{}}}],["location.href",{"_index":47,"title":{},"body":{"ajax.html":{},"url.html":{}}}],["location.pathnam",{"_index":76,"title":{},"body":{"ajax.html":{}}}],["location.port",{"_index":74,"title":{},"body":{"ajax.html":{}}}],["location.protocol",{"_index":69,"title":{},"body":{"ajax.html":{}}}],["location.search",{"_index":79,"title":{},"body":{"ajax.html":{}}}],["locationprovid",{"_index":3139,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["locationprovider.hashprefix",{"_index":3149,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["lodash",{"_index":2538,"title":{},"body":{"array/object_to_array.html":{}}}],["lodash&apos;",{"_index":1482,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["lodash'",{"_index":1441,"title":{},"body":{"copy.html":{}}}],["log",{"_index":114,"title":{},"body":{"ajax.html":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"closures.html":{},"closures.html#傳多個函數":{},"num.html":{},"num.html#補數字":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"math.html":{},"math.html#Math":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"variable.html":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"api/promise.html":{},"api/promise.html#鏈接":{},"cases/if.html":{},"cases/str.html":{},"global/promise.html":{},"glossary/hoisting.html":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/AsyncFunction.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/block.html":{}}}],["log((",{"_index":3107,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{}}}],["log(++a",{"_index":3169,"title":{},"body":{"statements/AsyncFunction.html":{}}}],["log(++a*a",{"_index":466,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["log(a",{"_index":422,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"operators.html":{},"operators.html#Increment":{},"this.html":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#Hoisting":{},"array/array_merge.html":{},"glossary/hoisting.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/AsyncFunction.html":{},"statements/let.html":{},"statements/let.html#let":{},"statements/block.html":{}}}],["log(a.lastest",{"_index":826,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["log(a.n",{"_index":3113,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["log(a.x",{"_index":3115,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["log(a===b",{"_index":1587,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["log(a==b",{"_index":1586,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["log(add10",{"_index":1510,"title":{},"body":{"closures.html":{}}}],["log(add5",{"_index":1509,"title":{},"body":{"closures.html":{}}}],["log(addf1",{"_index":1514,"title":{},"body":{"closures.html":{}}}],["log(an",{"_index":3304,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["log(app",{"_index":833,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["log(arg",{"_index":851,"title":{},"body":{"core.html":{},"core.html#const":{},"core.html#箭頭函數":{}}}],["log(arr",{"_index":1915,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"object/create.html":{}}}],["log(arr1",{"_index":2448,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["log(arr2",{"_index":2389,"title":{},"body":{"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#sort":{},"array/map.html":{},"array/map.html#map":{}}}],["log(array1.fil",{"_index":2336,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/fill.html":{}}}],["log(array1.reduce(reduc",{"_index":2419,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["log(arrfilt",{"_index":2438,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["log(arrfn",{"_index":865,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(arrfnr",{"_index":867,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(arrsortpric",{"_index":2443,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["log(averag",{"_index":880,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(b",{"_index":753,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"scope.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/block.html":{}}}],["log(b.a",{"_index":464,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["log(b.lasttext",{"_index":756,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(bfunc",{"_index":1599,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["log(bibi",{"_index":746,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(c",{"_index":472,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"array/array_merge.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"glossary/hoisting.html":{}}}],["log(c.person",{"_index":671,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["log(callfn",{"_index":583,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["log(cfunc",{"_index":1600,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["log(chihuahua",{"_index":787,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["log(class1.value2",{"_index":2056,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["log(class1.value3",{"_index":2057,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["log(copi",{"_index":3017,"title":{},"body":{"object/assign.html":{}}}],["log(corgi",{"_index":776,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["log(dat",{"_index":759,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(data",{"_index":636,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["log(date.getfulld",{"_index":768,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(dog.prototyp",{"_index":750,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(error",{"_index":2634,"title":{},"body":{"cases/delay.html":{}}}],["log(expressionfn",{"_index":647,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["log(fail",{"_index":2251,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{}}}],["log(falseyvalu",{"_index":2617,"title":{},"body":{"cases/arr.html":{}}}],["log(famili",{"_index":548,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["log(family.nam",{"_index":547,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["log(family[a",{"_index":549,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["log(familymethod[i",{"_index":559,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["log(firstregexp.test",{"_index":136,"title":{},"body":{"RegExp.html":{}}}],["log(fn",{"_index":421,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"closures.html":{},"closures.html#傳多個函數":{}}}],["log(fns(addf1",{"_index":1524,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["log(fns(f1,f2,f3",{"_index":1532,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["log(foo+bar",{"_index":2020,"title":{},"body":{"scope.html":{}}}],["log(foo.bar",{"_index":1871,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["log(found",{"_index":2405,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#find":{}}}],["log(functionc",{"_index":650,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["log(getcount",{"_index":3183,"title":{},"body":{"string/split.html":{},"string/split.html#split":{}}}],["log(getnam",{"_index":1864,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["log(getobj",{"_index":2958,"title":{},"body":{"object/object​_keys.html":{}}}],["log(givememoney",{"_index":658,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["log(i",{"_index":344,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#Let":{},"operators.html":{},"operators.html#Increment":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["log(id",{"_index":63,"title":{},"body":{"ajax.html":{}}}],["log(iif",{"_index":664,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["log(item",{"_index":1916,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["log(item,index",{"_index":2392,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#forEach":{}}}],["log(j",{"_index":696,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["log(key",{"_index":590,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["log(link",{"_index":2648,"title":{},"body":{"cases/str.html":{},"cases/str.html#url":{}}}],["log(listchunk",{"_index":2497,"title":{},"body":{"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{}}}],["log(longest",{"_index":2426,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["log(map1",{"_index":2501,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["log(mingmoney",{"_index":691,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{}}}],["log(mingmoney.valu",{"_index":705,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["log(month",{"_index":2329,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["log(mynam",{"_index":2058,"title":{},"body":{"variable.html":{},"variable.html#Hoisting":{}}}],["log(nam",{"_index":665,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#Let":{},"glossary/hoisting.html":{}}}],["log(newarray",{"_index":615,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["log(newarray[i",{"_index":621,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["log(newstr",{"_index":577,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["log(newstr2",{"_index":580,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["log(num",{"_index":452,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["log(num.secondpow",{"_index":758,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(numfn",{"_index":869,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(numfunct",{"_index":871,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(o1",{"_index":3022,"title":{},"body":{"object/assign.html":{},"object/assign.html#合併物件":{}}}],["log(obj",{"_index":793,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["log(obj1",{"_index":1416,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{}}}],["log(obj1.bodi",{"_index":1428,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{}}}],["log(obj2",{"_index":1417,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{}}}],["log(paramet",{"_index":668,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["log(person",{"_index":674,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["log(pick",{"_index":3070,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["log(queu",{"_index":3302,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["log(r",{"_index":164,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{},"cases/delay.html":{}}}],["log(replacestr",{"_index":2644,"title":{},"body":{"cases/str.html":{}}}],["log(rest",{"_index":3065,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["log(result",{"_index":2413,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/filter.html":{}}}],["log(retarr",{"_index":2595,"title":{},"body":{"cases/replace.html":{}}}],["log(self.mynam",{"_index":720,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["log(sevendaysago",{"_index":2799,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["log(statementfn",{"_index":645,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["log(success",{"_index":2250,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{}}}],["log(sum",{"_index":1521,"title":{},"body":{"closures.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["log(today",{"_index":2792,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["log(tot",{"_index":878,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(translate(obj",{"_index":2586,"title":{},"body":{"array/fill.html":{}}}],["log(truthyvalu",{"_index":2616,"title":{},"body":{"cases/arr.html":{}}}],["log(typ",{"_index":2955,"title":{},"body":{"object/object​_keys.html":{}}}],["log(uniquelist",{"_index":2307,"title":{},"body":{"array/array_method.html":{}}}],["log(valu",{"_index":2016,"title":{},"body":{"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"global/promise.html":{}}}],["log(value1",{"_index":2055,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["log(wallet",{"_index":822,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["log(wallet.sav",{"_index":817,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["log(whereparamet",{"_index":669,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["log(word",{"_index":3301,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["log(x",{"_index":1595,"title":{},"body":{"operators.html":{},"operators.html#Increment":{},"statements/block.html":{}}}],["log).catch",{"_index":2750,"title":{},"body":{"global/promise.html":{}}}],["log.bind",{"_index":2776,"title":{},"body":{"global/promise.html":{}}}],["logic",{"_index":474,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["longest",{"_index":2420,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["look",{"_index":1384,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["loop",{"_index":2608,"title":{},"body":{"cases/arr.html":{}}}],["loot",{"_index":2777,"title":{},"body":{"global/promise.html":{}}}],["lot",{"_index":1435,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["lowercas",{"_index":2636,"title":{},"body":{"cases/str.html":{}}}],["m",{"_index":151,"title":{},"body":{"RegExp.html":{}}}],["main",{"_index":1380,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["make",{"_index":203,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["makeadd",{"_index":1504,"title":{},"body":{"closures.html":{}}}],["mani",{"_index":3091,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["map",{"_index":1912,"title":{"array/array_methods.html#map":{},"array/map.html#map":{}},"body":{"this.html":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#Array":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"array/filter.html":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["map()&#x3001;filter()&#x3001;reduc",{"_index":2489,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["map()、filter()、reduc",{"_index":2446,"title":{},"body":{"array/array_methods.html":{}}}],["map/blob/master/js/j",{"_index":1806,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["map1",{"_index":2499,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["march",{"_index":2325,"title":{},"body":{"array/array_insert.html":{}}}],["match",{"_index":153,"title":{"RegExp.html#match":{}},"body":{"RegExp.html":{},"cases/replace.html":{},"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["math",{"_index":1545,"title":{"math.html#Math":{}},"body":{"num.html":{},"num.html#取值":{},"num.html#補數字":{},"math.html":{},"math.html#Math":{}}}],["math.ceil",{"_index":1540,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["math.floor",{"_index":1539,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["math.j",{"_index":1800,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["math.pow",{"_index":1537,"title":{},"body":{"num.html":{}}}],["math.pow()&#x50b3;&#x56de;&#x6307;&#x5b9a;&#x4e58;&#x51aa;&#x6578;&#x7684;&#x57fa;&#x5e95;&#x904b;&#x7b97;&#x5f0f;&#x503c",{"_index":1569,"title":{},"body":{"num.html#取值":{}}}],["math.pow(x",{"_index":1759,"title":{},"body":{"math.html":{},"math.html#Math":{}}}],["math.round",{"_index":1538,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["max",{"_index":2807,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["md5",{"_index":1644,"title":{},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["mdn",{"_index":732,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["meal",{"_index":2680,"title":{},"body":{"function/factory​_factory.html":{}}}],["member",{"_index":540,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["memori",{"_index":2803,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["menuurl",{"_index":2678,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["merg",{"_index":2375,"title":{"array/array_merge.html":{}},"body":{}}],["messag",{"_index":832,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["method",{"_index":1774,"title":{"this.html#物件的方法調用-As-an-object-method":{},"array/array_method.html":{},"array/array_methods.html":{}},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"this.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["mingeasycard",{"_index":1879,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["mingmoney",{"_index":690,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{}}}],["mingmoney.decreas",{"_index":704,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["mingmoney.increas",{"_index":703,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["mm",{"_index":763,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["model",{"_index":2072,"title":{},"body":{"F2E/GraphQL.html":{}}}],["modern",{"_index":2539,"title":{},"body":{"array/object_to_array.html":{}}}],["modifi",{"_index":2823,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["modified/if",{"_index":2828,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["modul",{"_index":259,"title":{"es6.html#Module-的加载实现":{}},"body":{"es6.html":{},"es6.html#Module-的加载实现":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["module('swagg",{"_index":3134,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["mom",{"_index":587,"title":{},"body":{"core.html":{},"variable.html":{}}}],["mon",{"_index":541,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["monday",{"_index":2689,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["money",{"_index":554,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#const":{},"this.html":{},"this.html#Closure":{},"this.html#Callback":{}}}],["month",{"_index":2323,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["monther",{"_index":586,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["months.splic",{"_index":2328,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["more",{"_index":1406,"title":{"index.html#More-Informations":{}},"body":{"index.html":{},"index.html#More-Informations":{}}}],["move",{"_index":779,"title":{},"body":{"core.html":{},"object/create.html":{}}}],["move&apo",{"_index":1264,"title":{},"body":{"core.html#繼承":{}}}],["movi",{"_index":2431,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["mozilla",{"_index":1584,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["ms",{"_index":2626,"title":{},"body":{"cases/delay.html":{}}}],["msg",{"_index":3106,"title":{},"body":{"operators/precedence.html":{}}}],["music",{"_index":2435,"title":{},"body":{"array/array_methods.html":{}}}],["mutationobserver,promise.then",{"_index":2779,"title":{},"body":{"global/promise.html":{}}}],["mycb",{"_index":716,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["myeasycard",{"_index":1884,"title":{},"body":{"this.html":{},"this.html#Closure":{},"this.html#Callback":{}}}],["myfamili",{"_index":544,"title":{},"body":{"core.html":{}}}],["myfamily&apo",{"_index":1050,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["myfirstpromis",{"_index":2752,"title":{},"body":{"global/promise.html":{}}}],["myfirstpromise.then",{"_index":2753,"title":{},"body":{"global/promise.html":{}}}],["myfunct",{"_index":3155,"title":{},"body":{"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["mynam",{"_index":445,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#this":{},"variable.html":{},"variable.html#Hoisting":{}}}],["n",{"_index":3111,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["nam",{"_index":498,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["name",{"_index":416,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#Let":{},"core.html#const":{},"closures.html":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#Hoisting":{},"glossary/hoisting.html":{},"global/function.html":{},"global/function.html#bind":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/block.html":{}}}],["name&#x4e0d;&#x5c6c;&#x65bc;&#x9663;&#x5217;&#x88e1;&#x9762;&#x7684;&#x9577;&#x5ea6",{"_index":1106,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["name&#x653e;&#x5165;&#x8a18;&#x61b6;&#x9ad4",{"_index":897,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["name&#xff09;&#xff0c;&#x5728;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x4e2d;&#x53ef;&#x7701;&#x7565;&#x5b83;&#xff0c;&#x5f9e;&#x800c;&#x5275;&#x5efa;&#x533f;&#x540d;&#x51fd;&#x6578;&#xff08;anonym",{"_index":3162,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["name&apos;",{"_index":1065,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["name'",{"_index":567,"title":{},"body":{"core.html":{}}}],["name1",{"_index":2044,"title":{},"body":{"variable.html":{}}}],["name2",{"_index":2046,"title":{},"body":{"variable.html":{}}}],["name3",{"_index":2048,"title":{},"body":{"variable.html":{}}}],["name），在函數表達式中可省略它，從而創建匿名函數（anonym",{"_index":3154,"title":{},"body":{"operators/function.html":{}}}],["nan",{"_index":494,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#bind-apply-call":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["nan&#x3001",{"_index":1629,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["nan&#xff0c;&#x7d50;&#x679c;&#x4e0d;&#x7b49;&#x50f9;&#x65bc;true&#xff0c;&#x4e0d;&#x8fd4;&#x56de;&#x3002",{"_index":2574,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["nan2",{"_index":1611,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["nan，結果不等價於tru",{"_index":2551,"title":{},"body":{"array/filter.html":{}}}],["nativ",{"_index":2540,"title":{},"body":{"array/object_to_array.html":{}}}],["nest",{"_index":2599,"title":{},"body":{"cases/if.html":{}}}],["network",{"_index":643,"title":{},"body":{"core.html":{},"http/caching.html":{},"http/caching.html#強緩存":{}}}],["new",{"_index":15,"title":{"core.html#new":{}},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"api/promise.html":{},"api/promise.html#Promise":{},"array/array_method.html":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/typeof.html":{}}}],["new&#x51fa;&#x4f86;&#x7684",{"_index":3059,"title":{},"body":{"operators/typeof.html#null":{}}}],["newarray",{"_index":613,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["newarray.nam",{"_index":618,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["newarray.push",{"_index":617,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["newfamili",{"_index":588,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily.member.oth",{"_index":595,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily.nam",{"_index":593,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily2",{"_index":600,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily3",{"_index":602,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily4",{"_index":609,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily4.member.oth",{"_index":612,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily4.nam",{"_index":610,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily[key",{"_index":592,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfunc",{"_index":1598,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["newstr",{"_index":575,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["newstr.nam",{"_index":576,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["newstr2",{"_index":578,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["newstr2.nam",{"_index":579,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["nginx",{"_index":2084,"title":{},"body":{"F2E/header.html":{}}}],["ngsanit",{"_index":3135,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["none",{"_index":2824,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["note",{"_index":1892,"title":{},"body":{"this.html":{},"this.html#Callback":{}}}],["noth",{"_index":3109,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{}}}],["nothoist",{"_index":3157,"title":{},"body":{"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["now",{"_index":1388,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["npm",{"_index":1387,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["null",{"_index":27,"title":{"operators/typeof.html#null":{}},"body":{"ajax.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#this":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"this.html":{},"this.html#簡易呼叫":{},"array/array_insert.html":{},"array/array_insert.html#example":{},"array/fill.html":{},"cases/if.html":{},"operators/typeof.html":{},"operators/typeof.html#null":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["null,0,1,2",{"_index":1869,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["null不是object",{"_index":3041,"title":{},"body":{"operators/typeof.html":{}}}],["num",{"_index":450,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#this":{},"core.html#new":{},"core.html#箭頭函數":{},"num.html":{},"num.html#補數字":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["num).slic",{"_index":1561,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["num,coin",{"_index":656,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["number",{"_index":451,"title":{"num.html":{},"operators.html#Adding-Strings-and-Numbers":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#this":{},"core.html#new":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"variable.html":{},"variable.html#動態型別":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{}}}],["number([10",{"_index":499,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["number1",{"_index":731,"title":{},"body":{"core.html":{}}}],["number{1",{"_index":1221,"title":{},"body":{"core.html#this":{}}}],["numfn",{"_index":868,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["numfunct",{"_index":870,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["nums.length",{"_index":879,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["nums.reduc",{"_index":875,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["o(1",{"_index":3276,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["o(1)&#xff1c;o(log2n)&#xff1c;o(n)&#xff1c;o(nlog2n)&#xff1c;o(n2)&#xff1c;o(n3)&#xff1c;&#x2026;&#xff1c;o(2n)&#xff1c;o(n",{"_index":3328,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["o(1)＜o(log2n)＜o(n)＜o(nlog2n)＜o(n2)＜o(n3)＜…＜o(2n)＜o(n",{"_index":3283,"title":{},"body":{"string/queue.html":{}}}],["o(2n)&#x548c;o(n!)&#x7a31;&#x70ba",{"_index":3331,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["o(2n)和o(n",{"_index":3285,"title":{},"body":{"string/queue.html":{}}}],["o(log2n)&#x3001;o(n)&#x3001;o(nlog2n)&#x3001;o(n2)&#x548c;o(n3)&#x7a31;&#x70ba",{"_index":3329,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["o(log2n)、o(n)、o(nlog2n)、o(n2)和o(n3",{"_index":3284,"title":{},"body":{"string/queue.html":{}}}],["o(n",{"_index":3275,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{}}}],["o(n+n2)=o(n2",{"_index":3282,"title":{},"body":{"string/queue.html":{}}}],["o1",{"_index":3018,"title":{},"body":{"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{}}}],["o2",{"_index":3019,"title":{},"body":{"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{}}}],["o3",{"_index":3020,"title":{},"body":{"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{}}}],["obj",{"_index":792,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#bind-apply-call":{},"array/fill.html":{},"object/object​_keys.html":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["obj).slic",{"_index":2585,"title":{},"body":{"array/fill.html":{}}}],["obj.a",{"_index":799,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["obj.callnam",{"_index":1858,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#立即函式：":{},"this.html#bind-apply-call":{}}}],["obj.callnamearrow",{"_index":1910,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["obj.fn",{"_index":1865,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["obj.getnam",{"_index":1863,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["obj.watch.callnam",{"_index":1859,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{}}}],["obj.x",{"_index":1861,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{}}}],["obj1",{"_index":1413,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj1.a",{"_index":1422,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["obj1.b",{"_index":1420,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["obj1.bodi",{"_index":1426,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["obj1.c",{"_index":1423,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["obj1.fun",{"_index":1463,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj1叫做obj2",{"_index":1418,"title":{},"body":{"copy.html":{}}}],["obj1跟obj2",{"_index":1430,"title":{},"body":{"copy.html":{}}}],["obj2",{"_index":1414,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj2.b",{"_index":1415,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{}}}],["obj2.bodi",{"_index":1429,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj2.body.a",{"_index":1427,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj2.b也不會影響obj1",{"_index":1458,"title":{},"body":{"copy.html":{}}}],["obj2.b改成100",{"_index":1419,"title":{},"body":{"copy.html":{}}}],["obj2.fun",{"_index":1464,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj2會長得跟obj1",{"_index":1457,"title":{},"body":{"copy.html":{}}}],["obj[key",{"_index":2545,"title":{},"body":{"array/object_to_array.html":{}}}],["object",{"_index":453,"title":{"this.html#物件的方法調用-As-an-object-method":{},"array/object_to_array.html":{},"object/assign.html":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"this.html":{},"this.html#bind-apply-call":{},"array/object_to_array.html":{},"array/fill.html":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#call、apply、bind":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/create.html":{},"operators/typeof.html":{},"operators/typeof.html#null":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["object.assign",{"_index":1455,"title":{"copy.html#Object-assign":{}},"body":{"copy.html":{},"copy.html#Object-assign":{},"object/assign.html":{}}}],["object.cr",{"_index":769,"title":{"object/create.html":{}},"body":{"core.html":{},"core.html#繼承":{},"object/create.html":{}}}],["object.defineproperti",{"_index":794,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["object.defineproperty(&#x7269;&#x4ef6",{"_index":1280,"title":{},"body":{"core.html#屬性特徵":{}}}],["object.fn",{"_index":709,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["object.freez",{"_index":805,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["object.getownpropertydescriptor",{"_index":820,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["object.i",{"_index":1583,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["object.key",{"_index":3227,"title":{},"body":{"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["object.preventextens",{"_index":803,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["object.prototype.nam",{"_index":3042,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["object.s",{"_index":804,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["object​.key",{"_index":2945,"title":{"object/object​_keys.html":{}},"body":{"object/object​_keys.html":{}}}],["ok",{"_index":550,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["omtrdc.com",{"_index":2111,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["on",{"_index":2607,"title":{},"body":{"cases/arr.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["onclick",{"_index":737,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["onpress",{"_index":2255,"title":{},"body":{"api/promise.html":{},"api/promise.html#鏈接":{}}}],["open",{"_index":1401,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["oper",{"_index":1580,"title":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["operators/operator_preced",{"_index":465,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["opt",{"_index":2352,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["option",{"_index":2813,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["opts.unshift",{"_index":2356,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["order",{"_index":193,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{},"function/factory​_factory.html":{}}}],["oreq",{"_index":637,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["oreq.addeventlisten",{"_index":638,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["oreq.open",{"_index":640,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["oreq.send",{"_index":642,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["origin",{"_index":90,"title":{},"body":{"ajax.html":{}}}],["other",{"_index":543,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["outer",{"_index":3263,"title":{},"body":{"statements/block.html":{}}}],["output",{"_index":361,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"object/create.html":{},"statements/block.html":{}}}],["output(i",{"_index":362,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{}}}],["p",{"_index":862,"title":{},"body":{"core.html":{},"performance.html":{},"api/promise.html":{},"api/promise.html#Promise":{},"global/promise.html":{}}}],["p.catch",{"_index":2241,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{}}}],["p.final",{"_index":2242,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{}}}],["p.then",{"_index":2240,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{}}}],["p1",{"_index":2591,"title":{},"body":{"cases/replace.html":{},"global/promise.html":{}}}],["p1.length",{"_index":2594,"title":{},"body":{"cases/replace.html":{}}}],["p2",{"_index":2592,"title":{},"body":{"cases/replace.html":{},"global/promise.html":{}}}],["p3",{"_index":2756,"title":{},"body":{"global/promise.html":{}}}],["p3]).then",{"_index":2758,"title":{},"body":{"global/promise.html":{}}}],["pa",{"_index":156,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["pa.match",{"_index":160,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["pa_u",{"_index":159,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["padding3",{"_index":1552,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["padding4",{"_index":1558,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["paddingint",{"_index":1564,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["paddingpoint",{"_index":1562,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["page",{"_index":3094,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["para1",{"_index":723,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["para2",{"_index":724,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["param",{"_index":1443,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"variable.html":{},"variable.html#Hoisting":{},"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["paramet",{"_index":667,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["pars",{"_index":443,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"copy.html":{},"copy.html#轉成-JSON-再轉回來":{}}}],["parsefloat",{"_index":1763,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["parsefloat(1.4000000000000001.toprecision(12",{"_index":1764,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["parseint",{"_index":1914,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["parseint(&#x2018;1&#x2019",{"_index":2567,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["parseint(&#x2018;2&#x2019",{"_index":2569,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["parseint(&#x2018;3&#x2019",{"_index":2575,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["parseint(&apos;1&apo",{"_index":2001,"title":{},"body":{"this.html#bind-apply-call":{}}}],["parseint(&apos;11&apo",{"_index":2008,"title":{},"body":{"this.html#bind-apply-call":{}}}],["parseint(&apos;2&apo",{"_index":2002,"title":{},"body":{"this.html#bind-apply-call":{}}}],["parseint(&apos;3&apo",{"_index":2003,"title":{},"body":{"this.html#bind-apply-call":{}}}],["parseint('1",{"_index":1917,"title":{},"body":{"this.html":{}}}],["parseint('11",{"_index":1921,"title":{},"body":{"this.html":{}}}],["parseint('2",{"_index":1918,"title":{},"body":{"this.html":{}}}],["parseint('3",{"_index":1919,"title":{},"body":{"this.html":{}}}],["parseint(item",{"_index":1923,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["parseint(‘1",{"_index":2547,"title":{},"body":{"array/filter.html":{}}}],["parseint(‘2",{"_index":2549,"title":{},"body":{"array/filter.html":{}}}],["parseint(‘3",{"_index":2552,"title":{},"body":{"array/filter.html":{}}}],["parser",{"_index":410,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["parti",{"_index":2125,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["particip",{"_index":2341,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["pass",{"_index":359,"title":{},"body":{"asynchronous.html":{},"array/map.html":{},"array/map.html#map":{}}}],["passfn",{"_index":1515,"title":{},"body":{"closures.html":{}}}],["passfn(addf1",{"_index":1519,"title":{},"body":{"closures.html":{}}}],["patch&#xff1a;&#x66f4;&#x65b0;&#xff08;update&#xff09;&#xff0c;&#x901a;&#x5e38;&#x662f;&#x90e8;&#x5206;&#x66f4;&#x65b0",{"_index":215,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["patch：更新（upd",{"_index":175,"title":{},"body":{"RESTfulAPI.html":{}}}],["path",{"_index":2036,"title":{},"body":{"url.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["path/to/mymodule.j",{"_index":261,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{}}}],["pattern",{"_index":2598,"title":{},"body":{"cases/if.html":{}}}],["pend",{"_index":2243,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{},"global/promise.html":{}}}],["pending&#xff0c",{"_index":2276,"title":{},"body":{"api/promise.html#Promise":{}}}],["pennsylvania",{"_index":158,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["pennsylvania)&apo",{"_index":166,"title":{},"body":{"RegExp.html#match":{}}}],["perfect",{"_index":1440,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["perform",{"_index":1639,"title":{"performance.html":{}},"body":{}}],["person",{"_index":562,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#const":{},"scope.html":{}}}],["person.callsomeon",{"_index":2019,"title":{},"body":{"scope.html":{}}}],["person.money",{"_index":847,"title":{},"body":{"core.html":{},"core.html#const":{}}}],["person.nam",{"_index":845,"title":{},"body":{"core.html":{},"core.html#const":{}}}],["person2",{"_index":563,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["pet",{"_index":3087,"title":{"swagger/to-html.html#List-all-pets":{},"swagger/to-html.html#Create-a-pet":{},"swagger/to-html.html#Info-for-a-specific-pet":{}},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#List-all-pets":{},"swagger/to-html.html#Create-a-pet":{}}}],["petid",{"_index":3102,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["pets/{petid",{"_index":3101,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#Info-for-a-specific-pet":{}}}],["petstor",{"_index":3085,"title":{"swagger/to-html.html#undefined":{}},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["pick",{"_index":3069,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["picked(obj",{"_index":3075,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["pleas",{"_index":1408,"title":{},"body":{"index.html":{},"index.html#More-Informations":{}}}],["plist",{"_index":1658,"title":{},"body":{"performance.html":{},"performance.html#DOM-查詢做緩存":{}}}],["plist.length",{"_index":1659,"title":{},"body":{"performance.html":{},"performance.html#DOM-查詢做緩存":{}}}],["plu",{"_index":1375,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["plugin",{"_index":2114,"title":{},"body":{"F2E/cookie.html":{}}}],["plugins)&#x3002",{"_index":2178,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["polyfil",{"_index":791,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["port",{"_index":2033,"title":{},"body":{"url.html":{}}}],["posit",{"_index":2335,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/fill.html":{}}}],["post",{"_index":3098,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#Create-a-pet":{}}}],["post&#xff1a;&#x65b0;&#x5efa;&#xff08;create&#xff09",{"_index":212,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["postethgetfilterlogsr",{"_index":2508,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["postethgetfilterlogsres.map",{"_index":2511,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["postfix",{"_index":1609,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["post：新建（creat",{"_index":172,"title":{},"body":{"RESTfulAPI.html":{}}}],["pow",{"_index":1546,"title":{},"body":{"num.html":{},"num.html#取值":{},"num.html#補數字":{},"math.html":{},"math.html#Math":{}}}],["practic",{"_index":202,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["practices.html",{"_index":207,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["pragma",{"_index":2805,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["precis",{"_index":1543,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["precisionceil",{"_index":1550,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["precisionfloor",{"_index":1548,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["precisionround",{"_index":1542,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["prevent",{"_index":3146,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["preventextens",{"_index":800,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["preview",{"_index":1398,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["preview.jpg",{"_index":1652,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["preview.png是預覽圖片，比較小，加載很快，而且很多圖片都共用這個preview.png，加載一次即可。待頁面下拉，圖片顯示出來時，再去替換src",{"_index":1649,"title":{},"body":{"performance.html":{}}}],["price",{"_index":686,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#屬性特徵":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["primit",{"_index":358,"title":{},"body":{"asynchronous.html":{}}}],["private&#xff1a;&#x5c08;&#x7528;&#x65bc;&#x500b;&#x4eba;&#x7684;&#x7de9;&#x5b58;&#xff0c;&#x4e2d;&#x9593;&#x4ee3;&#x7406;&#x3001;cdn",{"_index":2853,"title":{},"body":{"http/caching.html#強緩存":{}}}],["private：專用於個人的緩存，中間代理、cdn",{"_index":2810,"title":{},"body":{"http/caching.html":{}}}],["problem",{"_index":858,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["produc",{"_index":411,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["product",{"_index":2428,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["program",{"_index":2597,"title":{},"body":{"cases/if.html":{}}}],["project",{"_index":1366,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["promis",{"_index":116,"title":{"api/promise.html#Promise":{},"global/promise.html":{}},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{}}}],["promise.al",{"_index":2686,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["promise.catch(onreject",{"_index":2248,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{}}}],["promise.rac",{"_index":2781,"title":{},"body":{"global/promise.html":{}}}],["promise.then",{"_index":122,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{}}}],["promise.then(onfulfil",{"_index":2247,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{}}}],["promise​.al",{"_index":2754,"title":{},"body":{"global/promise.html":{}}}],["propagating_right_shift",{"_index":1534,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["properti",{"_index":319,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#屬性特徵":{},"url.html":{}}}],["propos",{"_index":3068,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["props.task",{"_index":2339,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["proto",{"_index":510,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["protocol",{"_index":2030,"title":{},"body":{"url.html":{}}}],["prototyp",{"_index":747,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{}}}],["prototype.getfulld",{"_index":760,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["prototype.lasttext",{"_index":755,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["prototype.push.bind(a",{"_index":1904,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["prototype.secondpow",{"_index":757,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["provid",{"_index":3138,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["provide.decorator('$anchorscrol",{"_index":3141,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["provision",{"_index":2094,"title":{"F2E/token.html#provisional-headers-are-shown":{}},"body":{"F2E/token.html":{},"F2E/token.html#provisional-headers-are-shown":{}}}],["proxysett",{"_index":838,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["ps",{"_index":2965,"title":{},"body":{"global/function.html":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["public",{"_index":2821,"title":{},"body":{"http/caching.html":{}}}],["public&#xff1a;&#x97ff;&#x61c9;&#x53ef;&#x4ee5;&#x88ab;&#x4e2d;&#x9593;&#x4ee3;&#x7406;&#x3001;cdn",{"_index":2855,"title":{},"body":{"http/caching.html#強緩存":{}}}],["public：響應可以被中間代理、cdn",{"_index":2811,"title":{},"body":{"http/caching.html":{}}}],["push(examplevalu",{"_index":2615,"title":{},"body":{"cases/arr.html":{}}}],["push、pop、shift、unshift、reserve、sort、splic",{"_index":2312,"title":{},"body":{"array/array_insert.html":{}}}],["put",{"_index":2641,"title":{},"body":{"cases/str.html":{}}}],["put&#xff1a;&#x66f4;&#x65b0;&#xff08;update&#xff09",{"_index":214,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["put：更新（upd",{"_index":174,"title":{},"body":{"RESTfulAPI.html":{}}}],["qa",{"_index":572,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["queri",{"_index":2074,"title":{},"body":{"F2E/GraphQL.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["queryselector",{"_index":861,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["querystr",{"_index":49,"title":{},"body":{"ajax.html":{}}}],["queue",{"_index":3266,"title":{"string/queue.html":{}},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["queue.join",{"_index":3303,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["queue.unshift(word",{"_index":3300,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["queuer",{"_index":2343,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["queuers).fil",{"_index":2346,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["quickli",{"_index":1369,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["quotes.map",{"_index":3073,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["r\\t\\n\\f",{"_index":145,"title":{},"body":{"RegExp.html":{}}}],["raact",{"_index":2422,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["radix",{"_index":1924,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["radix&#x7684;&#x503c;&#x70ba;2&#xff0c;&#x9019;&#x5c31;&#x610f;&#x5473;&#x8457;&#x5b57;&#x7b26;&#x4e32;&#x5c07;&#x88ab;&#x89e3;&#x6790;&#x6210;&#x5b57;&#x7bc0;&#x6578;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x50c5;&#x50c5;&#x5305;&#x542b;&#x6578;&#x503c;0&#x548c;1&#x3002;parseint&#x7684;&#x898f;&#x7bc4;&#x6307;&#x51fa;&#xff0c;&#x5b83;&#x50c5;&#x5617;&#x8a66;&#x5206;&#x6790;&#x7b2c;&#x4e00;&#x500b;&#x5b57;&#x7b26;&#x7684;&#x5de6;&#x5074;&#x3002;&#x9019;&#x500b;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x7b2c;&#x4e00;&#x500b;&#x5b57;&#x7b26;&#x662f;&#x201c;3&#x201d;&#xff0c;&#x5b83;&#x4e26;&#x4e0d;&#x662f;&#x57fa;&#x790e;&#x57fa;&#x6578;2&#x7684;&#x4e00;&#x500b;&#x6709;&#x6548;&#x6578;&#x5b57;&#x3002;&#x6240;&#x4ee5;&#x9019;&#x500b;&#x5b50;&#x5b57;&#x7b26;&#x4e32;&#x5c07;&#x88ab;&#x89e3;&#x6790;&#x70ba;&#x7a7a;&#x3002;&#x5982;&#x679c;&#x5b50;&#x5b57;&#x7b26;&#x4e32;&#x88ab;&#x89e3;&#x6790;&#x6210;&#x7a7a;&#x4e86;&#xff0c;&#x51fd;&#x6578;&#x5c07;&#x8fd4;&#x56de;&#x70ba;nan&#x3002",{"_index":2576,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["radix的值為2，這就意味著字符串將被解析成字節數，也就是僅僅包含數值0和1。parseint的規範指出，它僅嘗試分析第一個字符的左側。這個字符串的第一個字符是“3”，它並不是基礎基數2的一個有效數字。所以這個子字符串將被解析為空。如果子字符串被解析成空了，函數將返回為nan",{"_index":2553,"title":{},"body":{"array/filter.html":{}}}],["rail",{"_index":2144,"title":{},"body":{"F2E/cookie.html":{}}}],["rails&#x4f86;&#x8aaa;&#xff0c",{"_index":2234,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["rd",{"_index":571,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["re",{"_index":123,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"RegExp.html#match":{},"asynchronous.html":{},"asynchronous.html#異步":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"cases/delay.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/object​_keys.html":{}}}],["react",{"_index":2505,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["reactivesett",{"_index":839,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["read",{"_index":318,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#屬性特徵":{}}}],["real",{"_index":2089,"title":{},"body":{"F2E/header.html":{}}}],["realsrc",{"_index":1650,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["realsrc&apo",{"_index":1718,"title":{},"body":{"performance.html#懶加載":{}}}],["rect",{"_index":3036,"title":{},"body":{"object/create.html":{}}}],["rect.mov",{"_index":3038,"title":{},"body":{"object/create.html":{}}}],["rectangl",{"_index":3031,"title":{},"body":{"object/create.html":{}}}],["rectangle.prototyp",{"_index":3033,"title":{},"body":{"object/create.html":{}}}],["rectangle.prototype.constructor",{"_index":3035,"title":{},"body":{"object/create.html":{}}}],["red",{"_index":2654,"title":{},"body":{"function/factory​_factory.html":{}}}],["reduc",{"_index":320,"title":{"array/array_methods.html#reduce":{}},"body":{"arrowFunction.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["ref",{"_index":65,"title":{},"body":{"ajax.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/typeof.html#null":{}}}],["refer",{"_index":198,"title":{"RESTfulAPI.html#References":{},"operators.html#references":{},"F2E/GraphQL.html#References":{},"http/caching.html#References":{},"global/function.html#References":{},"string/queue.html#References":{}},"body":{"RESTfulAPI.html":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"operators.html":{},"operators.html#Increment":{},"this.html":{},"this.html#bind-apply-call":{},"scope.html":{},"F2E/GraphQL.html":{},"F2E/header.html":{},"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"global/promise.html":{},"http/caching.html":{},"global/function.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"string/queue.html":{}}}],["referenceerror",{"_index":431,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#箭頭函數":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"scope.html":{},"variable.html":{},"variable.html#Hoisting":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/let.html":{},"statements/let.html#let":{},"statements/block.html":{}}}],["referr",{"_index":2081,"title":{},"body":{"F2E/header.html":{}}}],["reg1",{"_index":127,"title":{},"body":{"RegExp.html":{}}}],["regexp",{"_index":124,"title":{"RegExp.html":{}},"body":{}}],["reject",{"_index":121,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"api/promise.html":{},"api/promise.html#Promise":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{}}}],["reject&#xff0c;&#x6240;&#x4ee5;&#x6b64;&#x6bb5;&#x4e0d;&#x57f7;&#x884c",{"_index":2299,"title":{},"body":{"api/promise.html#鏈接":{}}}],["remot",{"_index":2086,"title":{},"body":{"F2E/header.html":{}}}],["removefirst",{"_index":3289,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["removelast",{"_index":3291,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["replac",{"_index":162,"title":{"cases/replace.html":{}},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["replacestr",{"_index":2642,"title":{},"body":{"cases/str.html":{}}}],["repositori",{"_index":1390,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["request",{"_index":102,"title":{},"body":{"ajax.html":{},"F2E/GraphQL.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["request的head",{"_index":100,"title":{},"body":{"ajax.html":{}}}],["request）的頭信息裡面，設計了一個refer",{"_index":2082,"title":{},"body":{"F2E/header.html":{}}}],["requir",{"_index":1372,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["res.map",{"_index":2502,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["res.set",{"_index":2818,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["res.then",{"_index":2256,"title":{},"body":{"api/promise.html":{},"api/promise.html#鏈接":{}}}],["resan",{"_index":2530,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["resolv",{"_index":118,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"api/promise.html":{},"api/promise.html#Promise":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{}}}],["resolve,reject",{"_index":117,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{}}}],["resourc",{"_index":91,"title":{},"body":{"ajax.html":{}}}],["respons",{"_index":30,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"http/caching.html":{},"http/caching.html#強緩存":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["rest",{"_index":169,"title":{"RESTfulAPI.html":{}},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{},"F2E/GraphQL.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["result",{"_index":314,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"index.html":{},"index.html#Getting-Started":{},"array/array_methods.html":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/filter.html":{},"cases/if.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{}}}],["result.json",{"_index":2682,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["retarr",{"_index":2589,"title":{},"body":{"cases/replace.html":{}}}],["retarr.push",{"_index":2593,"title":{},"body":{"cases/replace.html":{}}}],["retriev",{"_index":3103,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["return",{"_index":312,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"closures.html":{},"closures.html#傳多個函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#Increment":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"this.html":{},"this.html#簡易呼叫":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/map.html":{},"array/map.html#map":{},"array/filter.html":{},"array/fill.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/arr.html":{},"cases/str.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{},"string/split.html":{},"string/split.html#split":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["revalid",{"_index":2812,"title":{},"body":{"http/caching.html":{}}}],["revalidate&#xff1a;&#x5728;&#x7de9;&#x5b58;&#x904e;&#x671f;&#x524d;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#xff0c;&#x904e;&#x671f;&#x5f8c;&#x5fc5;&#x9808;&#x5411;&#x670d;&#x52d9;&#x5668;&#x9a57;&#x8b49",{"_index":2857,"title":{},"body":{"http/caching.html#強緩存":{}}}],["reverse().join",{"_index":3307,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["reverseword",{"_index":3293,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["rh",{"_index":436,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["right",{"_index":3294,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["ring",{"_index":2434,"title":{},"body":{"array/array_methods.html":{}}}],["rings&apo",{"_index":2471,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["round(numb",{"_index":1547,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["rout",{"_index":1451,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"F2E/GraphQL.html":{}}}],["rrefer",{"_index":1679,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["run",{"_index":1405,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["s",{"_index":144,"title":{},"body":{"RegExp.html":{},"index.html":{},"index.html#Getting-Started":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["s+/g",{"_index":3306,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["s.charat(left",{"_index":3297,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["s.charat(right",{"_index":3298,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["s.length",{"_index":3295,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["s.trim().replac",{"_index":3305,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["safari",{"_index":3265,"title":{},"body":{"statements/block.html":{}}}],["sampl",{"_index":2041,"title":{},"body":{"url.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["save",{"_index":812,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["save(pric",{"_index":811,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["sayhello",{"_index":2967,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["schema",{"_index":3084,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["scoop",{"_index":2655,"title":{},"body":{"function/factory​_factory.html":{}}}],["scope",{"_index":414,"title":{"scope.html":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"closures.html":{},"scope.html":{}}}],["script",{"_index":87,"title":{},"body":{"ajax.html":{},"es6.html":{},"es6.html#Module-的加载实现":{},"performance.html":{},"performance.html#懶加載":{}}}],["script標籤,settimeout,setinterval,setimmediate,requestanimationfram",{"_index":2778,"title":{},"body":{"global/promise.html":{}}}],["seal",{"_index":801,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["sec",{"_index":2969,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["second",{"_index":852,"title":{},"body":{"core.html":{}}}],["see",{"_index":189,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{},"index.html":{},"index.html#Getting-Started":{}}}],["seed",{"_index":1365,"title":{"index.html":{},"index.html#hexo-theme-doc-seed":{}},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{}}}],["seed.git",{"_index":1394,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["select_titl",{"_index":2357,"title":{},"body":{"array/array_insert.html":{}}}],["self",{"_index":718,"title":{},"body":{"core.html":{},"core.html#this":{},"global/function.html":{},"global/function.html#bind":{}}}],["self.nam",{"_index":2977,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["semicolon",{"_index":441,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["server",{"_index":1399,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{},"F2E/GraphQL.html":{},"F2E/cookie.html":{}}}],["server&#x7aef",{"_index":2220,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["server收到了這個request",{"_index":105,"title":{},"body":{"ajax.html":{}}}],["session",{"_index":2093,"title":{},"body":{"F2E/token.html":{},"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["session&#x53c8;&#x662f;&#x4ec0;&#x9ebc;&#x5462",{"_index":2199,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["session&#x6709;&#x9ede;&#x985e;&#x4f3c;&#x6703;&#x8a71;&#x7684;&#x6982;&#x5ff5;&#xff0c;session&#x6a5f;&#x5236;&#x662f;&#x4e00;&#x7a2e;&#x670d;&#x52d9;&#x5668;&#x7aef;&#x7684;&#x6a5f;&#x5236;&#x3002",{"_index":2203,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["session並不是一個很明確實體的機制，算是一個概念，只要符合概念所實作出來的功能都可以被叫做sess",{"_index":2146,"title":{},"body":{"F2E/cookie.html":{}}}],["session也會消失的錯覺，但本質上並非如此，就像會員卡，除非你主動提出銷卡，否則店家不會刪除顧客資料，這件事情對session來說也如出一轍，除非通知server刪除session，否則serv",{"_index":2136,"title":{},"body":{"F2E/cookie.html":{}}}],["session實現方式是由cooki",{"_index":2145,"title":{},"body":{"F2E/cookie.html":{}}}],["session有點類似會話的概念，sess",{"_index":2126,"title":{},"body":{"F2E/cookie.html":{}}}],["session機制都使用會話cookie來保存sess",{"_index":2137,"title":{},"body":{"F2E/cookie.html":{}}}],["session的時候，服務器首先檢查這個客戶端的請求裡是否有包含了sess",{"_index":2129,"title":{},"body":{"F2E/cookie.html":{}}}],["session的機制都被框架所實現了，以rubi",{"_index":2143,"title":{},"body":{"F2E/cookie.html":{}}}],["set",{"_index":810,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"array/array_method.html":{}}}],["sethead",{"_index":2816,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["setinterv",{"_index":349,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{}}}],["setter",{"_index":806,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["setter改變tot",{"_index":816,"title":{},"body":{"core.html":{}}}],["settimeout",{"_index":115,"title":{"asynchronous.html#setTimeout":{}},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#this":{},"performance.html":{},"performance.html#事件節流":{},"this.html":{},"this.html#bind-apply-call":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{}}}],["settimeout()&#x3002",{"_index":380,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["settimeout()內部回調運行的時候，主進程已經運行完畢了，此時i=5，所以輸出5",{"_index":348,"title":{},"body":{"asynchronous.html":{}}}],["settimeout(resolv",{"_index":2627,"title":{},"body":{"cases/delay.html":{},"global/promise.html":{}}}],["settimeout包裝成promise、等待所有settimout的callback",{"_index":2782,"title":{},"body":{"global/promise.html":{}}}],["sevendaysago",{"_index":2796,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["sevendaysago).toisostring().substr",{"_index":2798,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["shallow",{"_index":1410,"title":{},"body":{"copy.html":{}}}],["shape",{"_index":3028,"title":{},"body":{"object/create.html":{}}}],["shape.cal",{"_index":3032,"title":{},"body":{"object/create.html":{}}}],["shape.prototype.mov",{"_index":3029,"title":{},"body":{"object/create.html":{}}}],["share",{"_index":92,"title":{},"body":{"ajax.html":{}}}],["shim",{"_index":836,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["show",{"_index":1378,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["shown",{"_index":2095,"title":{"F2E/token.html#provisional-headers-are-shown":{}},"body":{"F2E/token.html":{},"F2E/token.html#provisional-headers-are-shown":{}}}],["shown&#x7684;&#x8fc7;&#x7a0b",{"_index":2097,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["side",{"_index":430,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"F2E/GraphQL.html":{}}}],["signedcooki",{"_index":2141,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["simpl",{"_index":713,"title":{},"body":{"core.html":{},"core.html#this":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["size",{"_index":744,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["skeleton",{"_index":1367,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["slice",{"_index":1565,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["slice和substr",{"_index":1559,"title":{},"body":{"num.html":{}}}],["small",{"_index":781,"title":{},"body":{"core.html":{}}}],["social",{"_index":2113,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["solut",{"_index":2541,"title":{},"body":{"array/object_to_array.html":{}}}],["someon",{"_index":424,"title":{},"body":{"core.html":{}}}],["someth",{"_index":3108,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{}}}],["son",{"_index":632,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["sort",{"_index":2406,"title":{"array/array_methods.html#sort":{}},"body":{"array/array_methods.html":{}}}],["sourc",{"_index":708,"title":{},"body":{"core.html":{},"core.html#this":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["source.constructor",{"_index":1446,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["source[key",{"_index":1448,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["span",{"_index":1770,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["specif",{"_index":3100,"title":{"swagger/to-html.html#Info-for-a-specific-pet":{}},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["splice",{"_index":2322,"title":{"array/splice.html":{}},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["split",{"_index":54,"title":{"string/split.html#split":{}},"body":{"ajax.html":{},"string/split.html":{},"string/split.html#split":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["spread",{"_index":2317,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#拼接兩個陣列":{}}}],["src",{"_index":260,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{},"performance.html":{},"performance.html#懶加載":{}}}],["src=./foo.js/script",{"_index":266,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{}}}],["src=xxx",{"_index":84,"title":{},"body":{"ajax.html":{}}}],["ssr",{"_index":1647,"title":{},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["stage",{"_index":3066,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["start",{"_index":1383,"title":{"index.html#Getting-Started":{}},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["stat",{"_index":2817,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["stateless",{"_index":2103,"title":{},"body":{"F2E/cookie.html":{}}}],["statement",{"_index":437,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["statement&#xff09;&#xff08;&#x8a73;&#x60c5;&#x67e5;&#x770b;&#x51fd;&#x6578;&#x8072;&#x660e;&#xff09;&#xff0c;&#x4e26;&#x4e14;&#x5169;&#x8005;&#x64c1;&#x6709;&#x5e7e;&#x4e4e;&#x76f8;&#x540c;&#x7684;&#x8a9e;&#x6cd5;&#x3002;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x8207;&#x51fd;&#x6578;&#x8072;&#x660e;&#x7684;&#x6700;&#x4e3b;&#x8981;&#x5340;&#x5225;&#x662f;&#x51fd;&#x6578;&#x540d;&#x7a31;&#xff08;funct",{"_index":3161,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["statementfn",{"_index":644,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["statement）（詳情查看函數聲明），並且兩者擁有幾乎相同的語法。函數表達式與函數聲明的最主要區別是函數名稱（funct",{"_index":3153,"title":{},"body":{"operators/function.html":{}}}],["statu",{"_index":31,"title":{},"body":{"ajax.html":{},"cases/delay.html":{},"object/object​_keys.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["status=1&amp;type=1",{"_index":3196,"title":{},"body":{"statements/if...else.html":{}}}],["status=1&amp;type=2",{"_index":3197,"title":{},"body":{"statements/if...else.html":{}}}],["status=2&amp;type=1",{"_index":3198,"title":{},"body":{"statements/if...else.html":{}}}],["status=2&amp;type=2",{"_index":3199,"title":{},"body":{"statements/if...else.html":{}}}],["statusr",{"_index":2959,"title":{},"body":{"object/object​_keys.html":{}}}],["store",{"_index":2809,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["storemoney",{"_index":685,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{}}}],["storemoney()(100",{"_index":688,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["str",{"_index":614,"title":{},"body":{"core.html":{},"cases/replace.html":{},"cases/str.html":{}}}],["str.charat",{"_index":2637,"title":{},"body":{"cases/str.html":{}}}],["str.replac",{"_index":2590,"title":{},"body":{"cases/replace.html":{},"cases/str.html":{}}}],["str.slice",{"_index":2639,"title":{},"body":{"cases/str.html":{}}}],["stranger",{"_index":596,"title":{},"body":{"core.html":{}}}],["strict",{"_index":734,"title":{},"body":{"core.html":{},"this.html":{},"scope.html":{}}}],["strict&#39",{"_index":2023,"title":{},"body":{"scope.html":{}}}],["strict&apo",{"_index":1228,"title":{},"body":{"core.html#this":{},"core.html#屬性特徵":{},"this.html#簡易呼叫":{}}}],["string",{"_index":34,"title":{"operators.html#Adding-Strings-and-Numbers":{},"cases/str.html":{}},"body":{"ajax.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#this":{},"core.html#new":{},"operators.html":{},"variable.html":{},"variable.html#動態型別":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["string&#x578b;&#x5225;&#x76f8;&#x52a0",{"_index":1001,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["string.prototype.match",{"_index":154,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["string.prototype.replac",{"_index":2587,"title":{},"body":{"cases/replace.html":{}}}],["string.prototype.split",{"_index":3177,"title":{},"body":{"string/split.html":{},"string/split.html#split":{}}}],["stringify(famili",{"_index":608,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["stringify(obj1",{"_index":1460,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{}}}],["string​.prototype​.replac",{"_index":2640,"title":{},"body":{"cases/str.html":{}}}],["string​.prototype​.tolower​cas",{"_index":2635,"title":{},"body":{"cases/str.html":{}}}],["structur",{"_index":1373,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["style",{"_index":860,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["substr",{"_index":163,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["success",{"_index":2249,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{}}}],["sum",{"_index":310,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"closures.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["sum(a,b",{"_index":478,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["super",{"_index":2668,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"object/create.html":{}}}],["swagger",{"_index":3082,"title":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#undefined":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["swaggerui",{"_index":3136,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["symbol",{"_index":3072,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["syntax",{"_index":407,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#ES6-Airbnb":{}}}],["syntaxerror",{"_index":3046,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["t",{"_index":2767,"title":{},"body":{"global/promise.html":{}}}],["t.then",{"_index":2769,"title":{},"body":{"global/promise.html":{}}}],["tabl",{"_index":505,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["tag",{"_index":3096,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["tag/if",{"_index":2831,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["target",{"_index":291,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["target.nodenam",{"_index":293,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["targetobj",{"_index":1445,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["targetobj[key",{"_index":1449,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["task",{"_index":2760,"title":{},"body":{"global/promise.html":{}}}],["task(resolv",{"_index":2765,"title":{},"body":{"global/promise.html":{}}}],["tasks.length",{"_index":2768,"title":{},"body":{"global/promise.html":{}}}],["tasks.map",{"_index":2764,"title":{},"body":{"global/promise.html":{}}}],["tasks[1",{"_index":2773,"title":{},"body":{"global/promise.html":{}}}],["tasks[2",{"_index":2774,"title":{},"body":{"global/promise.html":{}}}],["tasks[i",{"_index":2772,"title":{},"body":{"global/promise.html":{}}}],["tasksarr",{"_index":2338,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["tasksarr.concat(waitingarr",{"_index":2349,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["tasksarr.length",{"_index":2342,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["tdz",{"_index":848,"title":{},"body":{"core.html":{},"core.html#const":{}}}],["team",{"_index":569,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#this":{}}}],["ternari",{"_index":2600,"title":{},"body":{"cases/if.html":{}}}],["test",{"_index":3261,"title":{},"body":{"statements/block.html":{}}}],["text",{"_index":1675,"title":{},"body":{"performance.html":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"array/array_insert.html":{},"array/array_insert.html#example":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["text/javascript",{"_index":1654,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["textarea",{"_index":1674,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["textarea.addeventlisten",{"_index":1677,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["theme",{"_index":1363,"title":{"index.html":{},"index.html#hexo-theme-doc-seed":{}},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{}}}],["then&#x3001;catch",{"_index":2288,"title":{},"body":{"api/promise.html#鏈接":{}}}],["then、catch",{"_index":2252,"title":{},"body":{"api/promise.html":{}}}],["this&#x300d",{"_index":1986,"title":{},"body":{"this.html#bind-apply-call":{}}}],["this&#x6240;&#x6307;&#x5411;&#x7684;window&#x6703;&#x8b8a;undefin",{"_index":1230,"title":{},"body":{"core.html#this":{}}}],["this(指向class",{"_index":2976,"title":{},"body":{"global/function.html":{}}}],["this.array",{"_index":323,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{}}}],["this.nam",{"_index":1899,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["this.valu",{"_index":1873,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["thisarg",{"_index":1890,"title":{},"body":{"this.html":{},"this.html#Callback":{}}}],["this所指向的window會變undefin",{"_index":735,"title":{},"body":{"core.html":{}}}],["throw",{"_index":316,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["thursday",{"_index":2692,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["tigger",{"_index":2936,"title":{},"body":{"glossary/hoisting.html":{}}}],["time",{"_index":2698,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["timeoutid",{"_index":1676,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["timer函數包裹了起來，並用j捕獲了每次循環時的i",{"_index":355,"title":{},"body":{"asynchronous.html":{}}}],["timestamp",{"_index":2632,"title":{},"body":{"cases/delay.html":{}}}],["timestampiso",{"_index":2522,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["tmp",{"_index":2493,"title":{},"body":{"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{}}}],["tmp.length",{"_index":2494,"title":{},"body":{"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{}}}],["tmp.splice",{"_index":2496,"title":{},"body":{"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{}}}],["today",{"_index":767,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["todo",{"_index":1660,"title":{},"body":{"performance.html":{},"performance.html#DOM-查詢做緩存":{}}}],["tofix",{"_index":1554,"title":{},"body":{"num.html":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["tofixed&#x6307;&#x5b9a;&#x4fdd;&#x7559;&#x5e7e;&#x4f4d;&#x5c0f;&#x6578",{"_index":1577,"title":{},"body":{"num.html#補數字":{}}}],["token",{"_index":405,"title":{"F2E/token.html":{}},"body":{"core.html":{},"F2E/token.html":{},"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["tolowercas",{"_index":2638,"title":{},"body":{"cases/str.html":{}}}],["top",{"_index":2672,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["toprecis",{"_index":1762,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["tostr",{"_index":626,"title":{},"body":{"core.html":{}}}],["total",{"_index":809,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{}}}],["totalarr",{"_index":2348,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["transact",{"_index":2519,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["transactionhash",{"_index":2512,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["transactionsarr",{"_index":2520,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["transactionsarr.push",{"_index":2528,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["transform",{"_index":2537,"title":{},"body":{"array/object_to_array.html":{}}}],["translat",{"_index":2584,"title":{},"body":{"array/fill.html":{}}}],["tree",{"_index":408,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["tri",{"_index":2629,"title":{},"body":{"cases/delay.html":{}}}],["trifl",{"_index":2663,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["trifle.prototyp",{"_index":2665,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["true",{"_index":138,"title":{},"body":{"RegExp.html":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"variable.html":{},"variable.html#動態型別":{},"array/array_methods.html":{},"array/array_methods.html#filter":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/replace.html":{},"cases/if.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"cases/delay.html":{},"http/caching.html":{},"http/caching.html#協商緩存":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"statements/let.html":{},"statements/let.html#let":{}}}],["true&#xff0c;&#x56e0;&#x70ba;&#x7269;&#x4ef6;&#x7684;&#x8a18;&#x61b6;&#x9ad4;&#x5df2;&#x7d93;&#x5b58;&#x5728;&#x4e86",{"_index":989,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["truthi",{"_index":506,"title":{"core.html#Truthy":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["truthy&#xff08;&#x771f;&#x503c;&#xff09",{"_index":1024,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["truthyvalu",{"_index":2612,"title":{},"body":{"cases/arr.html":{}}}],["ts",{"_index":2506,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["tuesday",{"_index":2690,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["ture",{"_index":480,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["tw/docs/glossary/hoist",{"_index":2933,"title":{"glossary/hoisting.html":{}},"body":{}}],["tw/docs/http/access_control_cor",{"_index":112,"title":{},"body":{"ajax.html":{}}}],["tw/docs/web/javascript/reference/global_objects/array/foreach",{"_index":1886,"title":{},"body":{"this.html":{}}}],["tw/docs/web/javascript/reference/global_objects/array/foreach#&#x8a9e;&#x6cd5",{"_index":1955,"title":{},"body":{"this.html#Callback":{}}}],["two",{"_index":2609,"title":{},"body":{"cases/arr.html":{}}}],["type",{"_index":267,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{},"asynchronous.html":{},"performance.html":{},"performance.html#懶加載":{},"F2E/GraphQL.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"object/object​_keys.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["type&#xff09;&#x7684;&#x53c3;&#x6578;&#x50b3;&#x905e;&#x662f",{"_index":398,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["type=modul",{"_index":265,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{}}}],["typeerror",{"_index":317,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#屬性特徵":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#Closure":{},"glossary/hoisting.html":{},"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["typeof",{"_index":446,"title":{"operators/typeof.html#typeof":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{},"closures.html":{},"variable.html":{},"variable.html#動態型別":{},"glossary/hoisting.html":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/typeof.html#null":{},"statements/block.html":{}}}],["ui",{"_index":3133,"title":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}},"body":{"swagger/ui.html":{}}}],["uncaught",{"_index":420,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#箭頭函數":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/typeof.html#null":{}}}],["undefin",{"_index":321,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#this":{},"core.html#繼承":{},"core.html#箭頭函數":{},"copy.html":{},"closures.html":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"this.html":{},"this.html#簡易呼叫":{},"this.html#bind-apply-call":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"array/array_methods.html":{},"array/array_methods.html#find":{},"array/filter.html":{},"glossary/hoisting.html":{},"global/function.html":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"global/function.html#bind":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{}}}],["unexpect",{"_index":3047,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["uniquelist",{"_index":2306,"title":{},"body":{"array/array_method.html":{}}}],["unshift",{"_index":2351,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["until",{"_index":2578,"title":{},"body":{"array/fill.html":{}}}],["unwrap",{"_index":3071,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["up",{"_index":1404,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["updat",{"_index":1878,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["url",{"_index":46,"title":{"url.html":{},"cases/str.html#url":{}},"body":{"ajax.html":{},"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{},"F2E/header.html":{},"cases/str.html":{},"cases/str.html#url":{}}}],["url&#x3002;&#x5b83;&#x8207;302&#x548c;307&#x7684;&#x542b;&#x7fa9;&#x4e00;&#x6a23;&#xff0c;&#x4e5f;&#x662f;&#x201d;&#x66ab;&#x6642;&#x91cd;&#x5b9a;&#x5411;&#x201d;&#xff0c;&#x5340;&#x5225;&#x5728;&#x65bc;302&#x548c;307&#x7528;&#x65bc;get&#x8acb;&#x6c42;&#xff0c;&#x800c;303&#x7528;&#x65bc;post&#x3001;put&#x548c;delete&#x8acb;&#x6c42;&#x3002;&#x6536;&#x5230;303&#x4ee5;&#x5f8c;&#xff0c;&#x700f;&#x89bd;&#x5668;&#x4e0d;&#x6703;&#x81ea;&#x52d5;&#x8df3;&#x8f49;&#xff0c;&#x800c;&#x6703;&#x8b93;&#x7528;&#x6236;&#x81ea;&#x5df1;&#x6c7a;&#x5b9a;&#x4e0b;&#x4e00;&#x6b65;&#x600e;&#x9ebc;&#x8fa6;&#x3002",{"_index":245,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["url&#x3002;&#x9019;&#x7a2e;&#x65b9;&#x6cd5;&#x53eb;&#x505a",{"_index":252,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["url&#xff0c;&#x5c31;&#x53ef;&#x4ee5;&#x767c;&#x73fe;&#x5176;&#x4ed6;&#x7684",{"_index":251,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["url&#xff0c;&#x6bd4;&#x5982",{"_index":226,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["url&#xff0c;&#x6bd4;&#x5982;&#x7372;&#x53d6;&#x67d0;&#x500b;&#x4f5c;&#x8005;&#x7684;&#x67d0;&#x4e00;&#x985e;&#x6587;&#x7ae0;&#x3002",{"_index":231,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["url.indexof",{"_index":50,"title":{},"body":{"ajax.html":{}}}],["url.split",{"_index":53,"title":{},"body":{"ajax.html":{}}}],["url。一是功能url，即有的url",{"_index":2083,"title":{},"body":{"F2E/header.html":{}}}],["url。它與302和307的含義一樣，也是”暫時重定向”，區別在於302和307用於get請求，而303用於post、put和delete請求。收到303",{"_index":190,"title":{},"body":{"RESTfulAPI.html":{}}}],["us",{"_index":733,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"this.html":{},"scope.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["us/docs/web/javascript/closur",{"_index":1501,"title":{},"body":{"closures.html":{}}}],["us/docs/web/javascript/reference/operators/bitwise_operators#%3e%3e_(sign",{"_index":1533,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["usag",{"_index":1379,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["user",{"_index":204,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{},"index.html":{},"index.html#More-Informations":{},"object/object​_keys.html":{}}}],["userid",{"_index":61,"title":{},"body":{"ajax.html":{}}}],["userid=jacob.hsu",{"_index":57,"title":{},"body":{"ajax.html":{}}}],["usersr",{"_index":2960,"title":{},"body":{"object/object​_keys.html":{}}}],["utils.j",{"_index":1433,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["v",{"_index":1771,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"array/map.html":{},"array/map.html#map":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["v,i",{"_index":2503,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["v.add_transactionhash",{"_index":2533,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["v.functionmeta.param",{"_index":2525,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["v.functionmeta.params.length",{"_index":2524,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["v.timestampiso",{"_index":2523,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["v.transactionhash",{"_index":2513,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["v.valu",{"_index":2532,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["val",{"_index":877,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["valid",{"_index":3105,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["valu",{"_index":360,"title":{},"body":{"asynchronous.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#函式工廠":{},"core.html#屬性特徵":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"this.html":{},"this.html#簡易呼叫":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"array/array_insert.html":{},"array/array_insert.html#example":{},"array/map.html":{},"array/map.html#map":{},"array/object_to_array.html":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"statements/for.html":{}}}],["value&#xff09",{"_index":400,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["value1",{"_index":2050,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["value2",{"_index":2052,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["value3",{"_index":2054,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["value=1",{"_index":2017,"title":{},"body":{"scope.html":{}}}],["values.map",{"_index":2521,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["vanilla",{"_index":2659,"title":{},"body":{"function/factory​_factory.html":{}}}],["var",{"_index":12,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"event.html":{},"event.html#代理":{},"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"closures.html":{},"num.html":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Adding-Strings-and-Numbers":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"array/filter.html":{},"cases/replace.html":{},"cases/if.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/str.html":{},"cases/str.html#url":{},"global/promise.html":{},"global/date.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"glossary/hoisting.html":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/create.html":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/let.html":{},"statements/let.html#let":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["var&#x7684;&#x4f5c;&#x7528;&#x57df;&#x5728;&#x51fd;&#x6578;(funct",{"_index":1320,"title":{},"body":{"core.html#Let":{}}}],["variabl",{"_index":2043,"title":{"variable.html":{}},"body":{}}],["var的作用域在函數(funct",{"_index":842,"title":{},"body":{"core.html":{}}}],["version",{"_index":1434,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#undefined":{}}}],["vip用戶在進行中參與活動，贈送800",{"_index":3195,"title":{},"body":{"statements/if...else.html":{}}}],["vip用戶在預售中參與活動，贈送1000",{"_index":3194,"title":{},"body":{"statements/if...else.html":{}}}],["visit",{"_index":1409,"title":{},"body":{"index.html":{},"index.html#More-Informations":{}}}],["vm",{"_index":719,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["vs",{"_index":1894,"title":{"global/function.html#cab-call-apply-vs-bind":{}},"body":{"this.html":{},"this.html#bind-apply-call":{},"scope.html":{},"global/function.html":{},"statements/AsyncFunction.html":{}}}],["vti",{"_index":3078,"title":{},"body":{"operators/destructuring_assignment.html":{}}}],["vue",{"_index":827,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["vue!&apo",{"_index":1303,"title":{},"body":{"core.html#屬性特徵":{}}}],["w",{"_index":133,"title":{},"body":{"RegExp.html":{},"http/caching.html":{}}}],["w+)*@\\w",{"_index":134,"title":{},"body":{"RegExp.html":{}}}],["w+)*\\.\\w",{"_index":135,"title":{},"body":{"RegExp.html":{}}}],["waitingarr",{"_index":2345,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["wallet",{"_index":808,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["wallet.sav",{"_index":815,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["wallet.tot",{"_index":813,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["want",{"_index":1439,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["watch",{"_index":1857,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{}}}],["wate",{"_index":2347,"title":{},"body":{"array/array_insert.html":{}}}],["wating...','w",{"_index":2344,"title":{},"body":{"array/array_insert.html":{}}}],["web",{"_index":170,"title":{},"body":{"RESTfulAPI.html":{},"F2E/token.html":{}}}],["websit",{"_index":1368,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{},"index.html#More-Informations":{}}}],["wednesday",{"_index":2691,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["welcom",{"_index":148,"title":{},"body":{"RegExp.html":{}}}],["welsh",{"_index":775,"title":{},"body":{"core.html":{}}}],["whereparamet",{"_index":666,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["window",{"_index":311,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#箭頭函數":{},"performance.html":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"this.html":{},"this.html#bind-apply-call":{},"variable.html":{}}}],["window.array",{"_index":324,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{}}}],["window.i",{"_index":844,"title":{},"body":{"core.html":{},"core.html#Let":{}}}],["window.location.hash",{"_index":2037,"title":{},"body":{"url.html":{}}}],["window.location.host",{"_index":2031,"title":{},"body":{"url.html":{}}}],["window.location.hostnam",{"_index":2034,"title":{},"body":{"url.html":{}}}],["window.location.href",{"_index":2028,"title":{},"body":{"url.html":{}}}],["window.location.pathnam",{"_index":2035,"title":{},"body":{"url.html":{}}}],["window.location.port",{"_index":2039,"title":{},"body":{"url.html":{}}}],["window.location.protocol",{"_index":2029,"title":{},"body":{"url.html":{}}}],["window.location.search",{"_index":2040,"title":{},"body":{"url.html":{}}}],["word",{"_index":3296,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["workflow",{"_index":96,"title":{},"body":{"ajax.html":{}}}],["world",{"_index":1502,"title":{},"body":{"closures.html":{},"this.html":{},"this.html#bind-apply-call":{},"cases/str.html":{}}}],["wrap",{"_index":3151,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["writabl",{"_index":462,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#屬性特徵":{}}}],["www.a.com",{"_index":2116,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.a.com&#x9019;&#x500b;&#x7db2;&#x7ad9;&#x88ab;&#x8a2d;&#x7f6e;&#x4e86;&#x4e00;&#x500b;www.b.com&#x9019;&#x500b;&#x57df;&#x4e0b;&#x7684;cookie&#xff0c;&#x6240;&#x4ee5;&#x53eb;&#x7b2c;&#x4e09;&#x65b9;cookie&#x3002",{"_index":2190,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.a.com&#x9019;&#x500b;&#x7db2;&#x7ad9;&#xff0c;&#x7db2;&#x9801;&#x88e1;&#x6709;&#x7528;&#x5230",{"_index":2183,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.a.com&#x9019;&#x500b;&#x7db2;&#x7ad9;&#xff0c;&#x9019;&#x500b;&#x7db2;&#x7ad9;&#x8a2d;&#x7f6e;&#x4e86;&#x4e00;&#x500b;cookie&#xff0c;&#x9019;&#x500b;cookie&#x4e5f;&#x53ea;&#x80fd;&#x88ab",{"_index":2180,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.a.com這個網站被設置了一個www.b.com這個域下的cookie，所以叫第三方cooki",{"_index":2120,"title":{},"body":{"F2E/cookie.html":{}}}],["www.a.com這個網站，這個網站設置了一個cookie，這個cooki",{"_index":2115,"title":{},"body":{"F2E/cookie.html":{}}}],["www.adobe.com",{"_index":2110,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.adobe.com/tw",{"_index":2108,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.b.com",{"_index":2117,"title":{},"body":{"F2E/cookie.html":{}}}],["www.b.com&#x7db2;&#x7ad9;&#x7684;&#x4e00;&#x5f35;&#x5716;&#x7247;&#xff0c;&#x700f;&#x89bd;&#x5668;&#x5728",{"_index":2184,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.b.com&#x8acb;&#x6c42;&#x5716;&#x7247;&#x7684;&#x6642;&#x5019;&#xff0c;www.b.com",{"_index":2185,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.b.com&#x9019;&#x500b;&#x57df;&#x8a2a;&#x554f;&#xff0c;&#x53cd;&#x800c;&#x4e0d;&#x80fd;&#x88ab",{"_index":2187,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.b.com請求圖片的時候，www.b.com",{"_index":2118,"title":{},"body":{"F2E/cookie.html":{}}}],["www.foo.com的resourc",{"_index":103,"title":{},"body":{"ajax.html":{}}}],["w”、”l”、”o",{"_index":152,"title":{},"body":{"RegExp.html":{}}}],["x",{"_index":1505,"title":{},"body":{"closures.html":{},"operators.html":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"math.html":{},"math.html#Math":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#bind-apply-call":{},"F2E/header.html":{},"array/map.html":{},"array/map.html#map":{},"array/filter.html":{},"cases/replace.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"object/create.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{},"string/queue.html":{}}}],["x,i",{"_index":1517,"title":{},"body":{"closures.html":{}}}],["x2014",{"_index":2997,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{},"global/function.html#bind":{},"global/function.html#References":{}}}],["x2018;&#x56de;&#x50b3;&#x7d50;&#x679c;&#x2019",{"_index":995,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x2018;1&#x2019",{"_index":2558,"title":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x2018;2&#x2019",{"_index":2559,"title":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x2018;3&#x2019;].filter(parseint",{"_index":2560,"title":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}},"body":{}}],["x2018;3&#x2019;].map(parseint)&#x7684;&#x8f38;&#x51fa;&#x7d50;&#x679c;&#x662f;&#x4ec0;&#x9ebc;&#xff1f",{"_index":2621,"title":{},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x2018;a&#x2019",{"_index":3174,"title":{},"body":{"statements/let.html#let":{}}}],["x2018;vti&#x2019",{"_index":3081,"title":{},"body":{"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["x201c;&#x4e0d;&#x6703;&#x201d",{"_index":954,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x201c;0.00011",{"_index":1837,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x201c;a",{"_index":3337,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x201c;exampl",{"_index":3339,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x201c;function&#x201d",{"_index":3063,"title":{},"body":{"operators/typeof.html#null":{}}}],["x201c;object&#x201d",{"_index":3056,"title":{},"body":{"operators/typeof.html#null":{}}}],["x201c;w/&#x201c",{"_index":2902,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x2026",{"_index":3122,"title":{},"body":{"operators/precedence.html#運算子優先序":{}}}],["x2192",{"_index":1842,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x276f",{"_index":1343,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x3000;&#x9a57;&#x8b49;&#x5354;&#x5546;&#x7de9;&#x5b58",{"_index":2915,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x3000;&#x9a57;&#x8b49;&#x5f37;&#x7de9;&#x5b58",{"_index":2858,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x3000;vue",{"_index":1298,"title":{},"body":{"core.html#屬性特徵":{}}}],["x3001",{"_index":958,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"http/caching.html#強緩存":{},"global/function.html#cab-call-apply-vs-bind":{}}}],["x3001;undefin",{"_index":1224,"title":{},"body":{"core.html#this":{}}}],["x3002",{"_index":228,"title":{},"body":{"RESTfulAPI.html#動詞":{},"arrowFunction.html#Arrow-Function":{},"this.html#bind-apply-call":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"global/function.html#cab-call-apply-vs-bind":{},"statements/for.html#for…of與for…in的差別":{}}}],["x3002;&#xff08",{"_index":2990,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x3002;object.defineproperti",{"_index":1311,"title":{},"body":{"core.html#屬性特徵":{}}}],["x300c;&#x4fdd;&#x6301;&#x72c0;&#x614b;&#x300d;&#xff0c;&#x5247;&#x662f;&#x6307;&#x901a;&#x4fe1;&#x4ea4;&#x8ac7;&#x7684;&#x5176;&#x4e2d;&#x4e00;&#x65b9;&#xff0c;&#x53ef;&#x4ee5;&#x6240;&#x6709;&#x7684;&#x6d88;&#x606f;&#x4f5c;&#x95dc;&#x806f;&#xff0c;&#x5c31;&#x50cf;&#x662f;&#x5df7;&#x53e3;&#x7684;&#x65e9;&#x9910;&#x5e97;&#x963f;&#x59e8;&#xff0c;&#x9084;&#x8a18;&#x5f97;&#x4f60;&#x6700;&#x611b;&#x5403;&#x7684;&#x706b;&#x817f;&#x86cb;&#x4e0d;&#x559c;&#x6b61;&#x6709;&#x7f8e;&#x4e43;&#x6ecb;&#x3002",{"_index":2207,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x300c;&#x7bad;&#x982d;&#x51fd;&#x5f0f;&#x6c92;&#x6709;&#x81ea;&#x5df1;&#x7684",{"_index":1985,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x300c;&#x7d81;&#x5b9a;this&#x7684;&#x51fd;&#x6578;&#x300d",{"_index":1973,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x300c;&#x9762;&#x5411;&#x3001;&#x9023;&#x63a5;&#x300d;&#x8868;&#x662f;&#x5ba2;&#x6236;&#x7aef;&#x548c;server&#x7aef;&#x901a;&#x4fe1;&#x524d;&#x8981;&#x5148;&#x5efa;&#x7acb;&#x4e00;&#x500b;&#x901a;&#x4fe1;&#x7684;&#x6e20;&#x9053",{"_index":2206,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x300c;.&#x300d",{"_index":1135,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x39f;(1",{"_index":3325,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x4e00;&#x4e32",{"_index":2892,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x4e00;&#x4f46;&#x88ab;&#x7d81;&#x5b9a;&#xff0c;&#x5176;this&#x7121;&#x6cd5;&#x518d;&#x88ab;&#x4fee;&#x6539;&#x3002",{"_index":1974,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x4e00;&#x500b;&#x89e3;&#x6c7a;&#x65b9;&#x6cd5;&#x5c31;&#x662f;&#xff0c;&#x5728;&#x56de;&#x61c9;&#x4e2d;&#xff0c;&#x7d66;&#x51fa;&#x76f8;&#x95dc;&#x93c8;&#x63a5;&#xff0c;&#x4fbf;&#x65bc;&#x4e0b;&#x4e00;&#x6b65;&#x64cd;&#x4f5c;&#x3002;&#x9019;&#x6a23;&#x7684;&#x8a71;&#xff0c;&#x7528;&#x6236;&#x53ea;&#x8981;&#x8a18;&#x4f4f;&#x4e00;&#x500b",{"_index":250,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x4e00;&#x500b;&#x8cc7;&#x6e90;&#x7684;&#x6a19;&#x8b58",{"_index":2895,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x4e00;&#x6a23;&#x662f;&#x6703;&#x88ab;&#x5224;&#x5b9a",{"_index":988,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x4e00;&#x6a23;&#x6709;&#x5275;&#x9020;&#x968e;&#x6bb5",{"_index":1334,"title":{},"body":{"core.html#const":{}}}],["x4e00;&#x6b21;&#x3002;&#x5982;&#x679c;&#x8981;&#x591a;&#x6b21;&#x8abf;&#x7528;&#xff0c;&#x8acb;&#x4f7f;&#x7528",{"_index":377,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x4e00;&#x81f4;&#xff0c;&#x4e0d;&#x4f7f;&#x7528;&#x5f37;&#x7de9;&#x5b58;&#xff0c;&#x9700;&#x8981;&#x8207;&#x670d;&#x52d9;&#x5668;&#x9a57;&#x8b49;&#x7de9;&#x5b58;&#x662f;&#x5426;&#x65b0;&#x9bae;&#xff0c;&#x5728",{"_index":2884,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e00;&#x958b;&#x59cb;&#x5148;&#x7d66;&#x70ba",{"_index":1712,"title":{},"body":{"performance.html#懶加載":{}}}],["x4e09;&#x500b;&#x7b49;&#x865f",{"_index":1613,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x4e0a;&#x5217;&#x7684;&#x4e09;&#x7a2e;&#x72c0;&#x614b;&#x6bcf;&#x6b21;&#x57f7;&#x884c;&#x5fc5;&#x5b9a;&#x6703;&#x7d93;&#x904",{"_index":2275,"title":{},"body":{"api/promise.html#Promise":{}}}],["x4e0a;&#x9762;&#x4ee3;&#x7801;&#x4e2d;&#xff0c",{"_index":272,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["x4e0a;&#xff0c;&#x5982",{"_index":2221,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4e0b;&#x62c9;&#x9078;&#x55ae;&#x88dc;&#x6a19;&#x984c;&#x3000;&#x3000;&#x3000;&#x3000",{"_index":2373,"title":{},"body":{"array/array_insert.html#example":{}}}],["x4e0b;&#x9762;&#x662f;&#x4e00;&#x500b;&#x4f8b;&#x5b50;&#x3002",{"_index":246,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x4e0b;&#x9762;&#x662f;&#x8868;&#x9054;&#x5f0f",{"_index":1947,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x4e0d;&#x4ee5;&#x5efa;&#x69cb;&#x5f0f;&#x65b9;&#x5f0f;&#x5448;&#x73f",{"_index":1233,"title":{},"body":{"core.html#this":{}}}],["x4e0d;&#x5229;&#x65bc;&#x64f4;&#x5c55;&#xff0c;&#x8a9e;&#x7fa9;&#x4e5f;&#x4e0d;&#x660e;&#x78ba",{"_index":233,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x4e0d;&#x5e94;&#x8be5;&#x7528;&#x4e8e;&#x8fed;&#x4ee3;&#x4e00;&#x4e2a",{"_index":3233,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x4e0d;&#x5efa;&#x8b70;&#x8abf;&#x7528;thi",{"_index":1201,"title":{},"body":{"core.html#this":{}}}],["x4e0d;&#x652f;&#x6301",{"_index":1314,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4e0d;&#x662f;&#x5be6;&#x9ad4;&#x5c6c;&#x6027",{"_index":1107,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x4e0d;&#x662f;&#x6240;&#x6709;&#x533f;&#x540d;&#x51fd;&#x5f0f",{"_index":1142,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x4e0d;&#x662f;&#x7d14;&#x503c",{"_index":1074,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x4e0d;&#x662f;&#x7d14;&#x9663;&#x5217",{"_index":1179,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["x4e0d;&#x6703;&#x56de;&#x50b3;&#x7d50;&#x679c",{"_index":942,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{}}}],["x4e0d;&#x6703;&#x6539;&#x8b8a",{"_index":889,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x4e0d;&#x6703;&#x8f49;&#x6578;&#x5b57;&#x578b;&#x5225",{"_index":1012,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x4e0d;&#x7b49;&#x65bc;0.3",{"_index":1850,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x4e0d;&#x7ba1;&#x5982;&#x4f55;&#x8abf;&#x6574;&#x79d2;&#x6578",{"_index":928,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x4e0d;&#x80fd;&#x64cd;&#x4f5c;&#x8b8a;&#x91cf",{"_index":2944,"title":{},"body":{"operators/delete.html#delete":{}}}],["x4e0d;&#x80fd;&#x76f4;&#x63a5;&#x56de;&#x50b3;&#x7269;&#x4ef6;&#x5be6;&#x5b57",{"_index":1353,"title":{},"body":{"core.html#箭頭函數":{}}}],["x4e0d;&#x80fd;&#x8b8a;&#x52d5",{"_index":3049,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x4e0d;&#x80fd;&#x8fed;&#x4ee3;&#x7269;&#x4ef6;&#xff0c;&#x9700;&#x8981;&#x900f;&#x904e;&#x548c",{"_index":3247,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x4e0d;&#x8981;&#x76f8;&#x4fe1;js&#x7684;&#x8a08;&#x7b97",{"_index":1854,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x4e0d;&#x898b;&#x4e86",{"_index":3120,"title":{},"body":{"operators/precedence.html#運算子優先序":{}}}],["x4e0d;&#x8a8d;&#x70ba",{"_index":1626,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x4e0d;&#x8fd4;&#x56d",{"_index":2566,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x4e0d;&#x904e;&#x73fe;&#x5728;&#x505a;&#x7db2;&#x7ad9;&#x6211;&#x5011;&#x90fd;&#x6d41;&#x884c;&#x4f7f;&#x7528;&#x6846;&#x67b6;&#xff0c;session&#x7684;&#x6a5f;&#x5236;&#x90fd;&#x88ab;&#x6846;&#x67b6;&#x6240;&#x5be6;&#x73fe;&#x4e86;&#xff0c;&#x4ee5;rubi",{"_index":2233,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4e0d;&#x9700;&#x8981;&#x540d;&#x7a31",{"_index":1151,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x4e0d;&#x9700;&#x8981;&#x767c;&#x9001;&#x8acb;&#x6c42;&#x5230;&#x670d;&#x52d9;&#x7aef;&#xff0c;&#x76f4;&#x63a5;&#x8b80;&#x53d6;&#x700f;&#x89bd;&#x5668;&#x672c;&#x5730;&#x7de9;&#x5b58;&#xff0c;&#x5728",{"_index":2833,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e14",{"_index":2169,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4e14;&#x7121;&#x6cd5;&#x8abf;&#x6574;&#x503c",{"_index":1291,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4e26;&#x4e0d;&#x6703;&#x76f4;&#x63a5;&#x986f;&#x793a",{"_index":935,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x4e26;&#x4e14;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":2279,"title":{},"body":{"api/promise.html#Promise":{}}}],["x4e26;&#x4e14;&#x5728;&#x5f8c;&#x9762;&#x52a0;&#x5165",{"_index":947,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{}}}],["x4e26;&#x52a0;&#x8f09;&#x700f;&#x89bd;&#x5668;&#x7de9;&#x5b58;&#x3002",{"_index":2906,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x4e26;&#x975e;&#x6240;&#x6709;&#x5de5;&#x5ee0;&#x90fd;&#x6703;&#x7acb;&#x5373;&#x8fd4;&#x56de;&#x6578;&#x64da;&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x6709;&#x4e9b;&#x5fc5;&#x9808;&#x5148;&#x7372;&#x53d6;&#x6578;&#x64da;&#x3002",{"_index":2724,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4e2d",{"_index":1132,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x4e2d;&#x4e00;&#x4e2a;&#x65e0;&#x6cd5",{"_index":1312,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4e2d;&#x4e86",{"_index":1729,"title":{},"body":{"performance.html#DOM-查詢做緩存":{}}}],["x4e2d;&#x57fa;&#x672c;&#x985e;&#x578b;&#xff08;primit",{"_index":397,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x4e2d;&#x62ec;&#x5f27;(&#x53ef;&#x7528;&#x8b8a;&#x6578;&#x65b9;&#x5f0f",{"_index":1043,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x4e2d;&#x65b0;&#x589e;&#x7684;&#x5c6c;&#x6027;&#xff0c;&#x5728;&#x8acb;&#x6c42;&#x982d;&#x548c;&#x97ff;&#x61c9;&#x982d;&#x4e2d;&#x90fd;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#xff0c;&#x5e38;&#x7528;&#x7684;&#x5c6c;&#x6027;&#x503c;&#x5982;&#x6709;&#xff1a",{"_index":2849,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e2d;&#x6dfb;&#x52a0",{"_index":2871,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e2d;&#x7684",{"_index":2883,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x500b;&#x5143;&#x7d20;&#x4f5c;&#x70ba;&#x53c3;&#x6578;&#xff0c;&#x5e36;&#x9032;&#x672c",{"_index":1958,"title":{},"body":{"this.html#Callback":{}}}],["x4e2d;&#x81ea;&#x5b9a;&#x7fa9;&#x7684;&#x5c6c;&#x6027;&#xff0c;&#x90fd;&#x61c9;&#x8a72;&#x7528",{"_index":1722,"title":{},"body":{"performance.html#懶加載":{}}}],["x4e2d;&#x986f;&#x793a;&#x7684",{"_index":2834,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e2d;&#xff0c;&#x4f7f;&#x7528;&#x7b2c;&#x4e00;&#x65b9",{"_index":2161,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4e2d;&#xff0c;&#x5f37;&#x7de9;&#x5b58;&#x53c8;&#x5206;&#x70ba",{"_index":2837,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e2d;&#xff0c;&#x6700;&#x5f8c;&#x4e00;&#x6b21;&#x6027;&#x63d2;&#x5165;&#x5230",{"_index":1739,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x4e2d;&#xff0c;&#x6e1b;&#x5c11;&#x700f;&#x89bd;&#x5668;&#x4f7f;&#x7528",{"_index":1708,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x4e3a;&#x6570;&#x7ec4;&#x4e2d;&#x7684;&#x6bcf;&#x4e2a;&#x5143;&#x7d20;&#x8c03;&#x7528;&#x4e00;&#x6b21",{"_index":2561,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x4e4b;&#x4e2d;&#x7684;&#x90a3;&#x500b;&#x5143;&#x7d20;&#x3002",{"_index":1961,"title":{},"body":{"this.html#Callback":{}}}],["x4e5f;&#x662f;&#x4e00;&#x500b;&#x7269;&#x4ef6;&#x7684;&#x5c6c;&#x6027",{"_index":1110,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x4e5f;&#x662f;&#x7269;&#x4ef6;&#x7684;&#x4e00;&#x7a2e;&#xff0c;&#x53ea;&#x662f;&#x5b83;&#x662f;&#x64c1;&#x6709;&#x7a0b;&#x5f0f;&#x5340;&#x584a;&#x7684;&#x80fd;&#x529b;&#x7269;&#x4ef6;&#x800c;&#x5df2",{"_index":1134,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x4e5f;&#x662f;&#xff09",{"_index":2991,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x4e5f;&#x7121;&#x6cd5;&#x914d;&#x7f6e;&#x7279;&#x5fb5",{"_index":1288,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4e5f;&#x8f38;&#x51fa;&#x3002",{"_index":3257,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x4e8b;&#x4ef6",{"_index":1756,"title":{},"body":{"performance.html#事件節流":{}}}],["x4e8b;&#x4ef6;&#x4f47;&#x5217",{"_index":922,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x4e8b;&#x4ef6;&#x7bc0;&#x6d41",{"_index":1706,"title":{"performance.html#事件節流":{}},"body":{"performance.html#優化原則和方向":{}}}],["x4e8b;&#x4ef6;&#xff0c;&#x901a;&#x904",{"_index":1747,"title":{},"body":{"performance.html#事件節流":{}}}],["x4e8c;&#x9032;&#x4f4d",{"_index":1845,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x4e94;&#x5206;&#x9418;&#x6982;&#x8ff0;&#x7db2;&#x8def;&#x754c;&#x7684;&#x8a18;&#x61b6;&#x5927;&#x795",{"_index":2239,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4ec0;&#x9ebc;&#x662f",{"_index":2147,"title":{"F2E/cookie.html#什麼是-Cookie？":{}},"body":{}}],["x4ec0;&#x9ebc;&#x6642;&#x5019;&#x4e0d;&#x4f7f;&#x7528;&#x7bad;&#x982d;&#x51fd;&#x6578",{"_index":325,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x4ed6;&#x5011;&#x90fd;&#x6703;&#x4f7f;&#x8b8a;&#x91cf;&#x589e;&#x52a0",{"_index":1634,"title":{},"body":{"operators.html#Increment":{}}}],["x4ed6;&#x7684;this&#x6307;&#x5411;&#x5916;&#x5c64",{"_index":1349,"title":{},"body":{"core.html#箭頭函數":{}}}],["x4ee3;&#x7406",{"_index":295,"title":{"event.html#代理":{}},"body":{}}],["x4ee3;&#x78bc;&#x58d3;&#x7e2e;&#x5408;&#x4f75;&#x3001;css",{"_index":1691,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x4ee3;&#x78bc;&#x58d3;&#x7e2e;&#x5408;&#x4f75;&#xff09",{"_index":1692,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x4ee3;&#x78bc;&#x751f;&#x6210",{"_index":884,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x4ee3;&#x8868;&#x76ee;&#x524d;&#x88ab;&#x8655;&#x7406;&#x4e2d;&#x7684",{"_index":1960,"title":{},"body":{"this.html#Callback":{}}}],["x4ee3;&#x8868;&#x8457",{"_index":916,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x4ee5;&#x53ca;&#x66f4;&#x4f4e;&#x7248;&#x672c;&#x6d4f;&#x89c8;&#x5668;&#x7684;&#x539f;&#x56e0;&#x3002",{"_index":1315,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4f46;&#x4ed6;&#x5011;&#x6703;&#x5171;&#x7528;&#x540c;&#x4e00;&#x500b",{"_index":1480,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x4f46;&#x5176;&#x5be6;&#x662f",{"_index":933,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x4f46;&#x537b;&#x4e0d;&#x5c0f;&#x5fc3;&#x6539;&#x5230;obj1.b",{"_index":1471,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x4f46;&#x53ea;&#x6709;&#x53ef;&#x4ee5;&#x8f49;&#x6210;json&#x683c;&#x5f0f;&#x7684;&#x7269;&#x4ef6;&#x624d;&#x53ef;&#x4ee5;&#x9019;&#x6a23;&#x7528",{"_index":1495,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["x4f46;&#x5927;&#x5bb6;&#x90fd;&#x6703;&#x64d4;&#x5fc3;&#xff0c;cookie&#x548c;session&#x5f97;&#x7d50;&#x5408;&#xff0c;&#x5230;&#x5e95;&#x9084;&#x6703;&#x4e0d;&#x6703;&#x6709;&#x88ab;&#x7ac4;&#x6539;&#x7684;&#x554f;&#x984c;&#xff0c;&#x9019;&#x500b;&#x6642;&#x5019;&#x5c31;&#x8981;&#x9760;&#x201d;&#x7c3d;&#x7ae0;&#x201d;&#x4f86;&#x9a57;&#x8b49;&#x8cc7;&#x6599;&#x7684;&#x771f;&#x5be6;&#x6027;&#xff0c;&#x5728;&#x6211;&#x4f7f;&#x7528;cookie&#x8acb;&#x6c42;&#x6642;&#xff0c;&#x53ef;&#x4ee5;&#x52a0;&#x4e00;&#x500b;&#x7c3d;&#x7ae0;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x5728;&#x6211;&#x50b3;&#x8f38;&#x7684;&#x8cc7;&#x6599;&#x5f8c;&#x9762;&#x52a0;&#x4e0a;&#x4e00;&#x500b;&#x5c0d;&#x61c9;&#x7684;&#x79d8;&#x5bc6;&#x5b57;&#x4e32;&#xff0c;&#x7576;&#x4f3a;&#x670d;&#x5668;&#x56de;&#x50b3;&#x6642;&#xff0c;&#x53ef;&#x4ee5;&#x56de;&#x61c9;&#x8a72;&#x5b57;&#x4e32;&#xff0c;&#x82e5;&#x662f;&#x5176;&#x4ed6;&#x4f7f;&#x7528;&#x8005;&#x5077;&#x5077;&#x4e32;&#x6539;&#x7684;&#x8a71;&#xff0c;&#x7531;&#x65bc;&#x4e32;&#x6539;&#x7684;&#x8cc7;&#x6599;&#x548c;&#x6211;&#x7684;&#x79d8;&#x5bc6;&#x5b57;&#x4e32;&#x7121;&#x6cd5;&#x76f8;&#x7b26;&#xff0c;&#x7576;&#x7136;&#x4e5f;&#x7121;&#x6cd5;&#x4f5c;&#x507d;&#x9020;&#xff0c;&#x9019;&#x5c31;&#x662f;&#x6240;&#x8b02;&#x7684",{"_index":2230,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4f46;&#x5f9e;&#x5275;&#x9020;&#x5230;&#x5be6;&#x969b;&#x5ba3;&#x544a;&#x7684;&#x968e;&#x6bb5;&#x6703;&#x51fa;&#x73fe;tdz",{"_index":1335,"title":{},"body":{"core.html#const":{}}}],["x4f46;&#x5f9e;&#x9019;&#x88e1;&#x53ef;&#x5f97;&#x77e5;&#xff0c;session&#x4e26;&#x4e0d;&#x662f;&#x4e00;&#x500b;&#x5f88;&#x660e;&#x78ba;&#x5be6;&#x9ad4;&#x7684;&#x6a5f;&#x5236;&#xff0c;&#x7b97;&#x662f;&#x4e00;&#x500b;&#x6982;&#x5ff5;&#xff0c;&#x53ea;&#x8981;&#x7b26;&#x5408;&#x6982;&#x5ff5;&#x6240;&#x5be6;&#x4f5c;&#x51fa;&#x4f86;&#x7684;&#x529f;&#x80fd;&#x90fd;&#x53ef;&#x4ee5;&#x88ab;&#x53eb;&#x505a;session&#x3002",{"_index":2237,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4f46;&#x662f;&#x539f;&#x59cb;&#x578b;&#x5225;&#x76e1;&#x91cf;&#x4e0d;&#x7528;&#x6b64;&#x65b9;&#x5f0f",{"_index":979,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x4f46;&#x662f;&#x53ef;&#x4ee5;&#x8abf;&#x6574;&#x5c6c;&#x6027;&#x503c",{"_index":1289,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4f46;&#x662f;&#x5728;&#x6700;&#x521d;&#x7684",{"_index":2218,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4f46;&#x6df1;&#x62f7;&#x8c9d;&#x6703;&#x53e6;&#x5916;&#x5275;&#x9020;&#x4e00;&#x500b;&#x4e00;&#x6a21;&#x4e00;&#x6a23;&#x7684;&#x7269;&#x4ef6",{"_index":1476,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x4f46;&#x7121;&#x7e7c;&#x627f;&#x52d5;&#x7269;&#x754c;&#x7684;&#x5efa;&#x69cb;&#x51fd;&#x5f0f",{"_index":1271,"title":{},"body":{"core.html#繼承":{}}}],["x4f46;&#x7269;&#x4ef6;&#x5c31;&#x4e0d;&#x540c;&#xff0c;&#x7269;&#x4ef6;&#x50b3;&#x7684;&#x662f",{"_index":1467,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x4f46;&#x8a18;&#x4f4f;session&#x5c31;&#x50cf;&#x662f;&#x4f60;&#x7684;&#x6703;&#x54e1;&#x5361;&#x865f;&#xff0c;&#x4e0d;&#x898b;&#x4e5f;&#x8868;&#x793a;&#x4ecd;&#x7136;&#x6709;&#x8cc7;&#x6599;&#x88ab;&#x7aca;&#x53d6;&#x7684;&#x98a8;&#x96aa;&#x3002",{"_index":2231,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4f46;json&#x4e00;&#x5f8b;&#x7528;&#x96d9;&#x5f15;&#x865f",{"_index":1122,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x4f46;null&#x4e0d;&#x662f;object",{"_index":3058,"title":{},"body":{"operators/typeof.html#null":{}}}],["x4f46;target&#x53ef;&#x4ee5;&#x544a;&#x77e5;&#x9ede;&#x64ca;&#x5f9e;&#x54ea;&#x51fa;&#x767c;&#x7684",{"_index":305,"title":{},"body":{"event.html#代理":{}}}],["x4f5c;&#x70ba;&#x539f;&#x578b;&#x4f7f;&#x7528",{"_index":1259,"title":{},"body":{"core.html#繼承":{}}}],["x4f5c;&#x70ba;&#x547d;&#x540d;&#x7d04;&#x5b9a;&#x4f86;&#x986f;&#x793a;&#x9019;&#x4e9b;&#x5de5;&#x5ee0;&#x505a;&#x4e00;&#x4e9b;&#x7570;&#x6b65;&#x5de5;&#x4f5c;&#x548c;&#x8fd4;&#x56de;promise&#x3002",{"_index":2735,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f5c;&#x70ba;&#x7269;&#x4ef6;&#x65b9;&#x6cd5",{"_index":1197,"title":{},"body":{"core.html#this":{}}}],["x4f5c;&#x7528;&#x57df;&#x5c07;&#x4e0a;&#x4e0b;&#x6587;&#x7d81;&#x5b9a;&#x5230",{"_index":329,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x4f5c;&#x7528;&#x57df;&#x662f;&#x51fd;&#x6578;&#x8abf;&#x7528;&#x6642;&#x624d;&#x6c7a;&#x5b9a",{"_index":892,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x4f5c;&#x7528;&#x5b8c;&#x5168;&#x4e00;&#x6a23;&#xff0c;&#x53ea;&#x662f;&#x63a5;&#x53d7;&#x53c3;&#x6578;&#x7684;&#x65b9;&#x5f0f;&#x4e0d;&#x592a;&#x4e00;&#x6a23",{"_index":1975,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x4f5c;&#x958b;&#x59cb",{"_index":962,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x4f7f;&#x7528",{"_index":1695,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x4f7f;&#x7528;&#x4e09;&#x5143;&#x904b;&#x7b97;&#x5b50",{"_index":1031,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x4f7f;&#x7528;&#x5305;&#x88f9;&#x7269;&#x4ef6;&#x8f49;&#x63db",{"_index":1014,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x4f7f;&#x7528;&#x7d66;&#x5b9a;&#x7684;this&#x53c3;&#x6578;&#x4ee5;&#x53ca;&#x5206;&#x5225;&#x7d66;&#x5b9a;&#x7684;&#x53c3;&#x6578;&#x4f86;&#x547c;&#x53eb;&#x67d0;&#x500b;&#x51fd;&#x6578",{"_index":1976,"title":{},"body":{"this.html#bind-apply-call":{},"global/function.html#call、apply、bind":{}}}],["x4f7f;&#x7528;&#x8907;&#x6578",{"_index":224,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x4f7f;&#x7528;&#x9019;&#x4e9b;&#x7c21;&#x55ae;&#x7684;&#x69cb;&#x5efa;&#x584a;&#x4f7f;&#x5f97;&#x6211;&#x5011;&#x7684;&#x4ee3;&#x78bc;&#x66f4;&#x52a0;&#x53cb;&#x597d;&#xff0c;&#x9019;&#x7d55;&#x5c0d;&#x662f;&#x6211;&#x5011;&#x61c9;&#x8a72;&#x95dc;&#x5fc3;&#x7684;&#x4e8b;&#x60c5;&#x3002",{"_index":2746,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f7f;&#x7528;javascript&#x5167;&#x7f6e;&#x7684;&#x51fd;&#x6578",{"_index":1852,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x4f86;&#x4fdd;&#x7559;&#x4e00;&#x5b9a;&#x7684;&#x7cbe;&#x5ea6;&#xff1a",{"_index":1853,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x4f86;&#x53d6;&#x5f97;&#x6210;&#x529f;&#x7684;&#x7d50;&#x679c;&#xff0c;&#x5931;&#x6557;&#x7684;&#x90e8;&#x5206;&#x4ea4;&#x7531",{"_index":2283,"title":{},"body":{"api/promise.html#Promise":{}}}],["x4f86;&#x5b9a;&#x7fa9;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#x3002",{"_index":2726,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f86;&#x5b9a;&#x7fa9;&#x65b9;&#x6cd5;&#x3002",{"_index":336,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x4f86;&#x76e3;&#x807d;&#x3002;&#x4f7f;&#x7528;&#x7bc0;&#x6d41;&#x3002",{"_index":1748,"title":{},"body":{"performance.html#事件節流":{}}}],["x4f86;&#x7acb;&#x5373;&#x57f7;&#x884c;&#x51fd;&#x5f0f",{"_index":948,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{}}}],["x4f86;&#x81ea;&#x5728;&#x7db2;&#x9801;&#x4e0a;&#x5d4c;&#x5165;&#x5ee3;&#x544a;&#x6216;&#x5716;&#x7247;&#x7b49;&#x9805;&#x7684;&#x5176;&#x4ed6;&#x57df;&#x4f86;&#x6e90;&#x3002",{"_index":2156,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["x4f86;&#x8655;&#x7406",{"_index":2284,"title":{},"body":{"api/promise.html#Promise":{}}}],["x4f86;&#x8868;&#x793a;&#x3002;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#xff0c;&#x53ef;&#x4ee5;&#x7528;&#x7d44;&#x5408;&#x800c;&#x4e0d;&#x662f;&#x7e7c;&#x627f;&#x4f86;&#x5be6;&#x73fe;&#x3002",{"_index":2713,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f8b",{"_index":254,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x4f8b;&#x5982;&#x8981;&#x5728;&#x6587;&#x5b57;&#x6539;&#x8b8a;&#x6642;&#x89f8;&#x767c;&#x4e00;&#x500b",{"_index":1746,"title":{},"body":{"performance.html#事件節流":{}}}],["x4f8b;&#x5982;&#xff0c;&#x4f7f;&#x7528;&#x7e7c;&#x627f;&#x3002",{"_index":2714,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f8b;&#x5982;&#xff0c;&#x6211;&#x5011;&#x53ef;&#x4ee5;&#x5275;&#x5efa;&#x4e00;&#x500b",{"_index":2704,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f8b;:foreach",{"_index":1113,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x4f8b;:tostr",{"_index":1116,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x4f9d;&#x7136;&#x6307;&#x5411",{"_index":1993,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x4fdd;&#x5b58;&#x9019;&#x500b;session",{"_index":2223,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4fdd;&#x6301;&#x539f;&#x6709;&#x9663;&#x5217;&#x4e0d;&#x8b8a;&#x7684;&#x6b63;&#x78ba;&#x9078;&#x64c7",{"_index":2480,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x4fee;&#x6539;&#x65b0;&#x7269;&#x4ef6;&#x4e0d;&#x6703;&#x6539;&#x5230;&#x539f;&#x7269;&#x4ef6",{"_index":1478,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x500b",{"_index":371,"title":{},"body":{"asynchronous.html#setTimeout":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"http/caching.html#強緩存":{}}}],["x500b;&#x5b9a;&#x6642;&#x5668;&#xff0c;&#x4e00;&#x822c;&#x60c5;&#x6cc1;&#x4e0b;&#xff0c;&#x9019;&#x4e9b;&#x5b9a;&#x6642;&#x5668;&#x90fd;&#x6703;&#x5728",{"_index":368,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x500b;&#x5c6c;&#x6027;&#xff0c;&#x4ee3;&#x78bc;&#x5982;&#x4e0b;&#xff1a",{"_index":2861,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x500b;&#x65b9;&#x6cd5",{"_index":3016,"title":{},"body":{"global/function.html#References":{}}}],["x500b;&#x982d;&#x90e8;&#x5c6c;&#x6027;&#x4e2d;&#x7684;&#x512a;&#x5148;&#x7d1a;&#x6700;&#x9ad8;&#x3002",{"_index":2885,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x501f;&#x7528;array&#x7684;&#x539f;&#x751f;&#x65b9;&#x6cd5",{"_index":1983,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x503c",{"_index":1276,"title":{},"body":{"core.html#屬性特徵":{}}}],["x503c;&#x5f8c;&#x7db4;&#x8b8a;&#x5316;&#x7684;&#x6642;&#x5019;&#xff0c;&#x624d;&#x6703;&#x771f;&#x6b63;&#x5730;&#x8acb;&#x6c42;&#x8cc7;&#x6e90;&#xff0c;&#x5426;&#x5247;&#x8fd4;&#x56d",{"_index":2905,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x503c;&#x88ab;&#x8907;&#x88fd;&#x4e86",{"_index":403,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x503c;&#x9032;&#x884c;&#x6bd4;&#x8f03;&#xff0c;&#x5982;&#x679c;&#x76f8;&#x7b49;&#x5247;&#x8868;&#x793a;&#x547d;&#x4e2d;&#x5354;&#x5546;&#x7de9;&#x5b58;&#x3002;etag",{"_index":2899,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x503c;(valu",{"_index":3244,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x505c;&#x4e0b;&#x624d;&#x89f8;&#x767c",{"_index":1757,"title":{},"body":{"performance.html#事件節流":{}}}],["x50b3;&#x503c;(call",{"_index":1081,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x50b3;&#x5165;&#x7684;&#x53c3;&#x6578;&#x51fd;&#x5f0f",{"_index":1149,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x50b3;&#x5165;&#x7684;&#x5b57;&#x4e32",{"_index":1130,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x50b3;&#x53c3;&#x8003;&#x7279;&#x6027;&#x6703;&#x6c92;&#x6709",{"_index":1095,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x50b3;&#x53c3;&#x8003;(call",{"_index":1084,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x50b3;&#x591a;&#x500b;&#x51fd;&#x6578",{"_index":1535,"title":{"closures.html#傳多個函數":{}},"body":{}}],["x50b3;&#x7d14;&#x503c",{"_index":1220,"title":{},"body":{"core.html#this":{}}}],["x50b3;&#x905e;&#x8b8a;&#x6578",{"_index":1170,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x50cf;function&#x6c92;&#x8fa6;&#x6cd5;&#x8f49;&#x6210;json",{"_index":1496,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["x5118;&#x65e9;&#x57f7;&#x884c;&#x64cd;&#x4f5c",{"_index":1741,"title":{"performance.html#儘早執行操作-DOMContentLoaded":{}},"body":{}}],["x5118;&#x65e9;&#x57f7;&#x884c;&#x64cd;&#x4f5c;&#xff08",{"_index":1705,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x5118;&#x7ba1;json&#x662f;javascript&#x7684;&#x4e00;&#x500b;&#x5b50;&#x96c6;&#xff0c;&#x4f46;json&#x662f;&#x7368;&#x7acb;&#x65bc;&#x8a9e;&#x8a00;&#x7684;&#x6587;&#x5b57;&#x683c;&#x5f0f",{"_index":1119,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x5118;&#x91cf;&#x4f7f;&#x7528;&#x5168;&#x7b49;&#x64cd;&#x4f5c;&#x7b26;&#x3002;&#x56e0;&#x70ba;&#x5176;&#x6c92;&#x6709;&#x96b1;&#x5f0f;&#x8f49;&#x63db;&#xff0c;&#x9019;&#x6a23;&#x7d50;&#x679c;&#x6703;&#x6bd4;&#x8f03;&#x5bb9;&#x6613;&#x9810;&#x6e2c;&#x3001;&#x8a08;&#x7b97;&#x4e5f;&#x6703;&#x6bd4;&#x8f03;&#x5feb",{"_index":1617,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x512a;&#x5148;&#x5e8f;&#x9ad8;&#x65bc",{"_index":3121,"title":{},"body":{"operators/precedence.html#運算子優先序":{}}}],["x512a;&#x5148;&#x8f09;&#x5165",{"_index":903,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x512a;&#x5316;&#x539f;&#x5247;&#x548c;&#x65b9;&#x5411",{"_index":1682,"title":{"performance.html#優化原則和方向":{}},"body":{}}],["x512a;&#x5316;&#x7684;&#x65b9;&#x5411;&#x6709;&#x5169;&#x500b;&#xff1a",{"_index":1688,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x512a;&#x5316;&#x9801;&#x9762;&#x6e32;&#x67d3",{"_index":1697,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x5148;&#x5ba3;&#x544a;&#x8b8a;&#x6578",{"_index":898,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5148;&#x628a;&#x9019;&#x908a;&#x7684;this(&#x6307;&#x5411;class&#x5167;&#x90e8;)&#x5b58;&#x8d77;&#x4f86",{"_index":3010,"title":{},"body":{"global/function.html#bind":{}}}],["x5148;&#x653e;&#x5728",{"_index":1738,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x5148;&#x8ce6;&#x4e88;&#x547d;&#x540d;&#x7a7a;&#x9593",{"_index":972,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x5168;&#x4ecb;&#x7d39",{"_index":2258,"title":{},"body":{"api/promise.html#Promise":{}}}],["x5168;&#x57df",{"_index":1323,"title":{},"body":{"core.html#Let":{},"core.html#箭頭函數":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{}}}],["x5168;&#x57df;,0,1,2",{"_index":1944,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x5169;&#x8005;&#x5b8c;&#x5168;&#x7121;&#x95dc",{"_index":1098,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x5171;&#x6709;&#x5169;&#x7a2e;&#x985e;&#x578b;&#x7684",{"_index":2150,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["x5176",{"_index":2998,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x5176;&#x4ed6;&#x7db2;&#x57df;&#x4e2d;&#x7684",{"_index":2167,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5177;&#x540d;&#x51fd;&#x5f0f;&#x80fd;&#x5920;&#x5728;&#x51fd;&#x5f0f;&#x5167;&#x88ab;&#x8abf;&#x7528",{"_index":1144,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x518d;&#x5c07;&#x968a;&#x5217;&#x8f49;&#x63db;&#x6210;&#x5b57;&#x7b26;&#x4e32;&#x8f38;&#x51fa;&#xff08;&#x5df2;&#x7a7a;&#x683c;&#x70ba;&#x5206;&#x9694;&#x7b26;&#xff09",{"_index":3349,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x518d;&#x8f49;&#x56de;&#x4f86",{"_index":1493,"title":{"copy.html#轉成-JSON-再轉回來":{}},"body":{}}],["x51cd;&#x7d50",{"_index":1285,"title":{},"body":{"core.html#屬性特徵":{}}}],["x51e1;&#x662f;&#x4f7f;&#x7528",{"_index":984,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x51fa;&#x4f86;&#x7684;&#x8cc7;&#x6599;&#x662f;&#x4e00;&#x500b;&#x7269;&#x4ef6;&#xff0c;&#x6240;&#x4ee5;&#x7269;&#x4ef6;&#x6703;&#x6709;&#x50b3;&#x53c3;&#x8003;&#x7279;&#x6027",{"_index":1126,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x51fa;&#x73fe;&#x5728",{"_index":2098,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["x51fa;&#x968a",{"_index":3310,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x51fd;&#x5f0f",{"_index":1083,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x51fd;&#x5f0f;&#x4e0a",{"_index":1247,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x51fd;&#x5f0f;&#x5c07;&#x6703;&#x628a",{"_index":1957,"title":{},"body":{"this.html#Callback":{}}}],["x51fd;&#x5f0f;&#x5de5;&#x5ee0",{"_index":1188,"title":{"core.html#函式工廠":{}},"body":{}}],["x51fd;&#x5f0f;&#x6703;&#x56de;&#x50b3;&#x5927;&#x65bc;&#x7b49;&#x65bc;&#x6240;&#x7d66;&#x6578;&#x5b57;&#x7684;&#x6700;&#x5c0f;&#x6574;&#x6578",{"_index":1572,"title":{},"body":{"num.html#取值":{}}}],["x51fd;&#x5f0f;&#x6703;&#x56de;&#x50b3;&#x7121;&#x689d;&#x4ef6;&#x6368;&#x53bb;&#x5f8c;&#x7684;&#x6700;&#x5927;&#x6574;&#x6578",{"_index":1571,"title":{},"body":{"num.html#取值":{}}}],["x51fd;&#x5f0f;&#x6703;&#x81ea;&#x52d5;&#x63d0;&#x5347",{"_index":2062,"title":{},"body":{"variable.html#Hoisting":{}}}],["x51fd;&#x5f0f;&#x672c;&#x8eab;&#x5c31;&#x662f;&#x4e00;&#x500b;&#x7269;&#x4ef6",{"_index":1240,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x51fd;&#x5f0f;&#x7269;&#x4ef6;&#x6709;&#x4e00;&#x500b;&#x7279;&#x5225;&#x7684;&#x5c6c;&#x6027",{"_index":1241,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x51fd;&#x5f0f;&#x7269;&#x4ef6;&#x7279;&#x6709;&#x7684;&#x5c6c;&#x6027",{"_index":1244,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x51fd;&#x5f0f;&#x8868;&#x9054;&#x5f0f",{"_index":910,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x51fd;&#x5f0f;&#x88e1;&#xff0c;&#x6bcf;&#x500b;&#x5143;&#x7d20;&#x5404;&#x57f7;&#x884c;&#x4e00;&#x6b21;&#xff0c;&#x63a5;&#x6536;&#x4e09;&#x500b;&#x53c3;&#x6578;&#xff1a",{"_index":1959,"title":{},"body":{"this.html#Callback":{}}}],["x51fd;&#x5f0f;&#xff0c;&#x5247;&#x6703",{"_index":2291,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x51fd;&#x5f0f;&#xff0c;&#x5728;&#x4e0b;&#x4e00;&#x500b",{"_index":2295,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x51fd;&#x6570;&#xff0c;&#x5e76;&#x5229;&#x7528;&#x6240;&#x6709;&#x4f7f;&#x5f97",{"_index":2562,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x51fd;&#x6578",{"_index":3055,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x51fd;&#x6578;&#x539f;&#x578b;&#x6700;&#x5be6;&#x7528;&#x7684",{"_index":3015,"title":{},"body":{"global/function.html#References":{}}}],["x51fd;&#x6578;&#x56de;&#x50b3;&#x56db;&#x6368;&#x4e94;&#x5165;&#x5f8c;&#x7684;&#x8fd1;&#x4f3c;&#x503c",{"_index":1570,"title":{},"body":{"num.html#取值":{}}}],["x51fd;&#x6578;&#x662f;&#x7570;&#x6b65;&#x7684",{"_index":365,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x51fd;&#x6578;&#x8072;&#x660e",{"_index":3054,"title":{},"body":{"operators/typeof.html#typeof":{},"operators/function.html#函數表達式":{}}}],["x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f",{"_index":3158,"title":{"operators/function.html#函數表達式":{}},"body":{"operators/function.html#函數表達式":{}}}],["x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x63d0;&#x5347",{"_index":3165,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#xff08;function",{"_index":3159,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["x51fd;&#x6578;&#x9673;&#x8ff0;&#x5f0f",{"_index":901,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x51fd;&#x6578;&#x9673;&#x8ff0;&#x5f0f;&#x6c92;&#x6709;&#x540d;&#x7a31;&#x7121;&#x6cd5;&#x57f7;&#x884c",{"_index":1148,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x5206;&#x5272;&#x6307;&#x5b9a;&#x957f;&#x5ea6;&#x7684;&#x5143;&#x7d20;&#x6570;&#x7ec4",{"_index":2498,"title":{"array/splice.html#分割指定长度的元素数组":{}},"body":{}}],["x5224;&#x65b7;&#x60a8;&#x662f;&#x4f7f;&#x7528;&#x7b2c;&#x4e00;&#x65b9;&#x9084;&#x662f;&#x7b2c;&#x4e09;&#x65b9",{"_index":2238,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5224;&#x65b7;&#x6240;&#x6709;&#x5143;&#x7d20;&#x662f;&#x5426;&#x90fd;&#x7b26;&#x5408;&#x689d;&#x4ef6",{"_index":2461,"title":{},"body":{"array/array_methods.html#every":{}}}],["x5224;&#x65b7;&#x662f;&#x5426;&#x81f3;&#x5c11;&#x4e00;&#x500b;&#x5143;&#x7d20;&#x7b26;&#x5408;&#x689d;&#x4ef6",{"_index":2462,"title":{},"body":{"array/array_methods.html#some":{}}}],["x5229;&#x7528",{"_index":395,"title":{},"body":{"asynchronous.html#setTimeout":{},"core.html#const":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{}}}],["x5229;&#x7528;&#x9663;&#x5217;&#x53ca;for&#x8ff4;&#x5708",{"_index":1059,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x5229;&#x7528;&#x9663;&#x5217;&#x9577;&#x5ea6;&#x9032;&#x884c;&#x8ce6;&#x503c",{"_index":2359,"title":{},"body":{"array/array_insert.html#把數據插入陣列尾部":{}}}],["x522a;&#x4e0d;&#x6389;x",{"_index":2942,"title":{},"body":{"operators/delete.html#delete":{}}}],["x5230;&#x76ee;&#x524d;&#x70ba;&#x6b62;&#xff0c;&#x6211;&#x5011;&#x9084;&#x6c92;&#x6709;&#x770b;&#x5230;&#x4efb;&#x4f55;&#x5de5;&#x5ee0;&#x7528;&#x65b9;&#x6cd5;&#x8fd4;&#x56de;&#x5c0d;&#x8c61;&#xff0c;&#x9019;&#x662f;&#x6545;&#x610f;&#x7684;&#x3002",{"_index":2736,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5247;&#x53ef;&#x4ee5;&#x53d6;&#x5f97;&#x7d50;&#x679c",{"_index":2296,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x5247;&#x6574;&#x500b;&#x6f14;&#x7b97;&#x6cd5;&#x7684;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x70ba;o(n+n2)=o(n2)&#x3002",{"_index":3324,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x5247;&#x662f;&#x4e00;&#x500b;&#x8a9e;&#x6cd5;&#xff0c;&#x5c08;&#x9580;&#x7528;&#x4f86;&#x8655;&#x7406;&#x975e;&#x540c;&#x6b65;&#x884c;&#x70ba;&#xff0c",{"_index":2261,"title":{},"body":{"api/promise.html#Promise":{}}}],["x5247;&#x662f;&#x8a72;&#x7269;&#x4ef6",{"_index":1938,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["x5247;&#x6703;&#x56de;&#x50b3;&#x4e00;&#x500b;&#x7d93;&#x904e;&#x5305;&#x88f9;&#x5f8c;&#x7684",{"_index":1969,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x524d;&#x65b9;&#x52a0;&#x5165;&#x5206;&#x865f",{"_index":966,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x524d;&#x7aef;&#x8fdb;&#x9636;&#x7b97;&#x6cd5;&#xff1a;&#x4e00;&#x770b;&#x5c31;&#x61c2;&#x7684;&#x961f;&#x5217;&#x53ca;&#x914d;&#x5957;&#x7b97;&#x6cd5;&#x9898",{"_index":3351,"title":{},"body":{"string/queue.html#References":{}}}],["x524d;&#x7f6e;&#x905e;&#x589e;&#x662f;&#x5148;&#x8a08;&#x7b97;&#x5f8c;&#x8ce6;&#x503c;&#xff0c;&#x5982;&#xff1a",{"_index":1637,"title":{},"body":{"operators.html#Increment":{}}}],["x5275;&#x9020",{"_index":1330,"title":{},"body":{"core.html#const":{}}}],["x5275;&#x9020;&#x74b0;&#x5883",{"_index":896,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5275;&#x9020;&#x968e;&#x6bb5",{"_index":907,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5275;&#x9020;&#x968e;&#x6bb5;&#x51fd;&#x5f0f;&#x512a;&#x5148",{"_index":911,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5275;&#x9020;&#x968e;&#x6bb5;&#x51fd;&#x5f0f;&#x5df2;&#x53ef;&#x4ee5;&#x904b;&#x884c",{"_index":904,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x52a0;&#x5206;&#x56de;&#x7b54",{"_index":1616,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x52a0;&#x62ec;&#x865f;&#x4fee;&#x6b63",{"_index":1355,"title":{},"body":{"core.html#箭頭函數":{}}}],["x52a0;&#x8f7d;&#x89c4;&#x5219",{"_index":276,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["x52a0;&#x9322;&#x5230;&#x8d85;&#x904e;100&#x5143;&#x624d;&#x505c;&#x6b62",{"_index":1147,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x52d5;&#x614b;&#x4f5c;&#x7528;&#x57df",{"_index":891,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x52d5;&#x614b;&#x578b;&#x5225",{"_index":970,"title":{"core.html#動態型別":{},"variable.html#動態型別":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x52d5;&#x614b;&#x7684",{"_index":2989,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x52d5;&#x8a5e",{"_index":208,"title":{"RESTfulAPI.html#動詞":{}},"body":{"RESTfulAPI.html#動詞":{}}}],["x52d5;&#x8a5e;&#x901a;&#x5e38;&#x5c31;&#x662f;&#x4e94;&#x7a2",{"_index":209,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x533f;&#x540d;&#x51fd;&#x5f0f",{"_index":945,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{}}}],["x533f;&#x540d;&#x51fd;&#x6578",{"_index":3164,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["x5340;&#x57df",{"_index":1936,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{},"this.html#立即函式：":{},"this.html#bind-apply-call":{}}}],["x5341;&#x9032;&#x4f4d",{"_index":1844,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5354;&#x5546;&#x7de9;&#x5b58",{"_index":2886,"title":{"http/caching.html#協商緩存":{}},"body":{}}],["x5373",{"_index":3132,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x5373;&#x53ef;&#x505a;&#x5230;&#x65b0;&#x589e;&#x5c6c;&#x6027;&#x8207;&#x503c;&#xff0c;&#x6240;&#x4ee5;funct",{"_index":1136,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x5373;&#x7b2c",{"_index":370,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x539f;&#x51fd;&#x6578",{"_index":1972,"title":{},"body":{"this.html#bind-apply-call":{},"global/function.html#cab-call-apply-vs-bind":{}}}],["x539f;&#x578b;&#x93c8;&#x4e0a;&#x65b0;&#x589e;&#x4e00;&#x500b;&#x5c64;&#x7d1a",{"_index":1254,"title":{},"body":{"core.html#繼承":{}}}],["x539f;&#x59cb;&#x578b;&#x5225",{"_index":977,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x539f;&#x59cb;&#x578b;&#x5225;&#x53ca;&#x7269;&#x4ef6;&#x578b;&#x5225",{"_index":976,"title":{"core.html#原始型別及物件型別":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x539f;&#x751f;ajax",{"_index":1129,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x539f;&#x751f;ajax&#x8b80;json",{"_index":1128,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x53bb;&#x4e0a;&#x5c64;&#x7d81;&#x5b9a",{"_index":301,"title":{},"body":{"event.html#代理":{}}}],["x53c3;&#x6578",{"_index":1174,"title":{"core.html#參數":{}},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"this.html#bind-apply-call":{}}}],["x53c3;&#x8003;&#x4e5f;&#x90fd;&#x4e0d;&#x4e00;&#x6a23",{"_index":1099,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x53c3;&#x8003;&#x540c;&#x4e00;&#x500b;&#x8a18;&#x61b6;&#x9ad4",{"_index":1018,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x53c3;&#x8003;&#x7269;&#x4ef6",{"_index":1066,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["x53c8;&#x6709;&#x5f37;&#x5f31;&#x6821;&#x9a57;&#x4e4b;&#x5206;&#xff0c;&#x5982;&#x679c",{"_index":2900,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x53ca",{"_index":2280,"title":{},"body":{"api/promise.html#Promise":{},"api/promise.html#鏈接":{}}}],["x53d6;&#x503c",{"_index":1568,"title":{"num.html#取值":{}},"body":{}}],["x53d6;&#x503c;undefin",{"_index":1105,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x53d6;&#x5c0f;&#x6578;&#x524d;&#x7684",{"_index":1843,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x53d6;&#x5f97;&#x6210;&#x529f;&#x6216;&#x5931;&#x6557;&#x7684;&#x7d50;&#x679c;&#x3002",{"_index":2281,"title":{},"body":{"api/promise.html#Promise":{}}}],["x53d6;&#x5f97;&#x7279;&#x5b9a;&#x503c;&#x7684;&#x65b9;&#x6cd5",{"_index":1292,"title":{},"body":{"core.html#屬性特徵":{}}}],["x53d6;&#x5f97;&#x9663;&#x5217;&#x6700;&#x5f8c;&#x4e00;&#x500b;&#x503c",{"_index":1296,"title":{},"body":{"core.html#屬性特徵":{}}}],["x53d6;&#x9910;&#x7684;&#x865f;&#x78bc;&#x724c;&#xff0c;&#x8a8d;&#x865f;&#x4e0d;&#x8a8d;&#x4eba",{"_index":2201,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x53e6;&#x4e00;&#x500b;&#x7279;&#x9ede;&#x5728;&#x65bc",{"_index":2287,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x53e6;&#x5916;&#xff0c;&#x9019;&#x88e1;&#x70ba;&#x4f55;&#x8981;&#x7528;data",{"_index":1719,"title":{},"body":{"performance.html#懶加載":{}}}],["x53ea;&#x57f7;&#x884c",{"_index":376,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x53ea;&#x6709;&#x4e00;&#x500b;&#x5c6c;&#x6027;&#x503c;&#xff0c;&#x5c31;&#x662f",{"_index":2881,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x53ea;&#x67e5;&#x8a62;&#x4e00;&#x500b",{"_index":1727,"title":{},"body":{"performance.html#DOM-查詢做緩存":{}}}],["x53ea;&#x80fd;&#x5728;&#x51fd;&#x6578;&#x5167;&#x4f7f;&#x7528",{"_index":3052,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x53ef;&#x4ee5;&#x4f5c;&#x70ba;&#x547c;&#x53eb",{"_index":1966,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":3212,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x53ef;&#x4ee5;&#x505a;&#x5230;&#x9664;&#x4e86;&#x88ab;&#x51cd;&#x7d50",{"_index":1325,"title":{},"body":{"core.html#const":{}}}],["x53ef;&#x4ee5;&#x505a;&#x5f88;&#x591a;&#x4e0d;&#x540c;&#x4e8b;&#x60c5",{"_index":1191,"title":{},"body":{"core.html#函式工廠":{}}}],["x53ef;&#x4ee5;&#x628a;&#x5176;&#x4ed6;&#x7269;&#x4ef6;&#x4f5c;&#x70ba;&#x539f;&#x578b;&#x4f7f;&#x7528",{"_index":1255,"title":{},"body":{"core.html#繼承":{}}}],["x53ef;&#x4ee5;&#x900f;&#x904e;&#x9ede;&#x904b;&#x7b97;&#x5b50;&#x4e0d;&#x65b7;&#x5411;&#x4e0a;&#x67e5;&#x627e;&#x53d6;&#x5f97;&#x65b9;&#x6cd5",{"_index":1112,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x53ef;&#x4ee5;&#x91cd;&#x65b0;&#x8ce6;&#x503c",{"_index":3051,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x53ef;&#x5229;&#x7528",{"_index":921,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x53ef;&#x5426;&#x5beb;&#x5165",{"_index":1277,"title":{},"body":{"core.html#屬性特徵":{}}}],["x53ef;&#x5426;&#x88ab;&#x5217;&#x8209",{"_index":1279,"title":{},"body":{"core.html#屬性特徵":{}}}],["x53ef;&#x5426;&#x88ab;&#x522a;&#x9664",{"_index":1278,"title":{},"body":{"core.html#屬性特徵":{}}}],["x53ef;&#x7528;&#x5305;&#x88f9;&#x7269;&#x4ef6;&#x7684;&#x6240;&#x6709;&#x65b9;&#x6cd5",{"_index":978,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x5408;&#x4f75",{"_index":1730,"title":{"performance.html#合併-DOM-插入-createDocumentFragment":{}},"body":{}}],["x5408;&#x4f75;&#x7269;&#x4ef6",{"_index":3024,"title":{"object/assign.html#合併物件":{}},"body":{}}],["x540c;&#x6642;&#x5b58;&#x5728;&#x7684;&#x6642;&#x5019;&#xff0c;pragma",{"_index":2878,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x540c;&#x6a23;&#x662f;&#x7269;&#x4ef6;&#x578b;&#x5225",{"_index":1020,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x540c;&#x6b65;&#x6982;&#x5ff5;&#x7684;&#x5148;&#x8dd1;&#x5b8c",{"_index":924,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x540c;&#x6b65;/&#x975e;&#x540c;&#x6b65",{"_index":918,"title":{"core.html#同步-非同步":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5426;&#x5247",{"_index":2304,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x547c;&#x53eb",{"_index":1979,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x548c",{"_index":1630,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["x548c;&#x524d;&#x7f6e;&#x905e;&#x589",{"_index":1632,"title":{},"body":{"operators.html#Increment":{}}}],["x548c;&#x7576;&#x524d;&#x6587;&#x4ef6;&#x7684",{"_index":2898,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x548c;gpu",{"_index":1686,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x54cd;&#x5e94;&#x5f0f;&#x6838;&#x5fc3;&#x5c31;&#x662f;&#xff0c;gett",{"_index":1317,"title":{},"body":{"core.html#屬性特徵":{}}}],["x554f;&#x984c",{"_index":1820,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x5584;&#x7528",{"_index":1855,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x55ae;&#x7d14;&#x8fed;&#x4ee3;&#x9663;&#x5217;&#x7684;&#x8a71;&#xff0c;for&#x2026;in",{"_index":3249,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x56b4;&#x683c;&#x6a21;&#x5f0f",{"_index":1226,"title":{},"body":{"core.html#this":{}}}],["x56b4;&#x683c;&#x6a21;&#x5f0f;&#x4e0b",{"_index":1231,"title":{},"body":{"core.html#this":{}}}],["x56b4;&#x683c;&#x76f8;&#x7b49",{"_index":1002,"title":{"core.html#嚴格相等-寬鬆相等":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x56de;&#x4f86;&#xff0c;&#x56de;&#x50b3;&#x7684;&#x662f;&#x7d81;&#x5b9a",{"_index":1970,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x56de;&#x50b3",{"_index":1809,"title":{},"body":{"math.html#Math":{}}}],["x56de;&#x50b3;&#x300c;key&#x300d",{"_index":3252,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x56de;&#x50b3;&#x300c;key&#x300d;&#xff0c;&#x4e14;&#x6703;&#x8b80;&#x53d6;&#x5230;&#x9663;&#x5217;&#x65b0;&#x589e;&#x7684;&#x5c6c;&#x6027;&#x540d;&#x7a31",{"_index":3259,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x56de;&#x50b3;&#x300c;value&#x300d",{"_index":3253,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x56de;&#x50b3;&#x5931;&#x6557",{"_index":2267,"title":{},"body":{"api/promise.html#Promise":{}}}],["x56de;&#x50b3;&#x6b63;&#x78ba",{"_index":2266,"title":{},"body":{"api/promise.html#Promise":{}}}],["x56de;&#x50b3;&#x7b2c;&#x4e00;&#x500b;&#x6eff;&#x8db3;&#x6240;&#x63d0;&#x4f9b;&#x4e4b;&#x6e2c;&#x8a66;&#x51fd;&#x5f0f;&#x7684;&#x5143;&#x7d20;&#x503c;&#x3002;&#x5426;&#x5247;&#x56de;&#x50b3",{"_index":2456,"title":{},"body":{"array/array_methods.html#find":{}}}],["x56de;&#x547c;&#x51fd;&#x5f0f",{"_index":2011,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x56e0;&#x4e3a;sum&#x662f;&#x5e38;&#x89c4;&#x51fd;&#x6570;&#xff0c;&#x6240;&#x4ee5;&#x5728;&#x8abf;&#x7528",{"_index":338,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x56e0;&#x70ba",{"_index":1833,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x56e0;&#x70ba;&#x4ed6;&#x5011;&#x6839;&#x672c;&#x662f;&#x540c;&#x4e00;&#x500b;&#x7269;&#x4ef6;&#xff0c;&#x9019;&#x5c31;&#x662f;&#x6240;&#x8b02;&#x7684",{"_index":1472,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x56e0;&#x70ba;&#x51fd;&#x5f0f;&#x5728;&#x57f7;&#x884c;&#x6642;&#xff0c;&#x8b8a;&#x6578;&#x9084;&#x6c92;&#x6709;&#x88ab;&#x8ce6;&#x4e88;&#x503c",{"_index":917,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x56e0;&#x70ba;&#x5b83;&#x672c;&#x8cea;&#x5c31;&#x662f;undefin",{"_index":1236,"title":{},"body":{"core.html#this":{}}}],["x56e0;&#x70ba;&#x5c0d;&#x6211;&#x5011;&#x4f86;&#x8aaa;&#xff0c;&#x6211;&#x5011;&#x5be6;&#x969b;&#x662f;&#x5728;&#x8a2a;&#x554f",{"_index":2189,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x56e0;&#x70ba;&#x6d6e;&#x9ede;&#x6578;&#x96bb;&#x6709;52&#x4f4d;&#x6709;&#x6548;&#x6578;&#x5b57;&#xff0c;&#x5f9e;&#x7b2c;53&#x4f4d;&#x958b;&#x59cb;&#xff0c;&#x5c31;&#x820d;&#x5165;&#x4e86;&#x3002;&#x9019;&#x6a23;&#x5c31;&#x9020;&#x6210;&#x4e86;&#x201c;&#x6d6e;&#x9ede;&#x6578;&#x7cbe;&#x5ea6;&#x640d;&#x5931;&#x201d;&#x554f;&#x984c;&#x3002",{"_index":1832,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x56e0;&#x70ba;&#x7570;&#x6b65;&#x51fd;&#x6578;&#x5fc5;&#x9808;&#x7b49;&#x4e3b;&#x9032;&#x7a0b;&#x904b;&#x884c;&#x5b8c;&#x7562;&#x624d;&#x6703;&#x904b;&#x884c;&#xff0c;settimeout()&#x5167;&#x90e8;&#x56de;&#x8abf;&#x904b;&#x884c;&#x7684;&#x6642;&#x5019;&#xff0c;&#x4e3b;&#x9032;&#x7a0b;&#x5df2;&#x7d93;&#x904b;&#x884c;&#x5b8c;&#x7562;&#x4e86;&#xff0c;&#x6b64;&#x6642;i=5&#xff0c;&#x6240;&#x4ee5;&#x8f38;&#x51fa;5&#x3002",{"_index":366,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x56e0;&#x70ba;&#x8a9e;&#x5f59;&#x4e0a;&#x80fd;&#x5920;&#x5f15;&#x7528;self&#x8b8a;&#x6578;&#xff08;&#x540c;&#x500b;&#x584a;&#x4f5c;&#x7528;&#x57df;&#xff09",{"_index":3011,"title":{},"body":{"global/function.html#bind":{}}}],["x56e0;&#x70ba;object.assign&#x8ddf;&#x6211;&#x5011;&#x624b;&#x52d5;&#x8907;&#x88fd;&#x7684;&#x6548;&#x679c;&#x76f8;&#x540c",{"_index":1491,"title":{},"body":{"copy.html#Object-assign":{}}}],["x570b;&#x969b;&#x6a19;&#x6e96",{"_index":2800,"title":{},"body":{"global/date.html#Date-prototype-toISOString":{}}}],["x5716;&#x89e3",{"_index":2930,"title":{},"body":{"http/caching.html#References":{}}}],["x5718;&#x968a",{"_index":1625,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x5728",{"_index":915,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x5728;&#x4e00;&#x500b;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#x4e2d;&#x5b9a;&#x7fa9;&#x53e6;&#x4e00;&#x500b;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#xff0c;&#x53ef;&#x4ee5;&#x5e6b;&#x52a9;&#x6211;&#x5011;&#x628a;&#x8907;&#x96dc;&#x7684;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#x62c6;&#x5206;&#x6210;&#x66f4;&#x5c0f;&#x7684;&#xff0c;&#x53ef;&#x91cd;&#x7528;&#x7684;&#x788e;&#x7247;&#x3002",{"_index":2703,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5728;&#x4e8c;&#x9032;&#x88fd;&#x8868;&#x793a;&#x70ba",{"_index":1836,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5728;&#x5275;&#x9020;&#x74b0;&#x5883;&#x628a;&#x8a18;&#x61b6;&#x9ad4;&#x7a7a;&#x9593;&#x6e96;&#x5099;&#x597d;&#xff0c;&#x9019;&#x500b;&#x6d41;&#x7a0b;&#x7a31;&#x70ba",{"_index":894,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5728;&#x5275;&#x9020;&#x968e;&#x6bb5;&#x5c31;&#x6703",{"_index":902,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5728;&#x539f;&#x6709;&#x968a;&#x5217;&#x7684;&#x57fa;&#x790e;&#x4e0a;&#x64f4;&#x5145;&#x4e86;&#xff1a;&#x968a;&#x982d;&#x3001;&#x968a;&#x5c3e;&#x90fd;&#x53ef;&#x4ee5;&#x9032;&#x968a;&#x51fa;&#x968a",{"_index":3334,"title":{},"body":{"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["x5728;&#x539f;&#x672c;&#x7684;&#x9663;&#x5217;&#xff0c;&#x65b0;&#x589e;&#x4e00;&#x500b;&#x5c6c;&#x6027",{"_index":3254,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x5728;&#x5927;&#x90e8;&#x5206;&#x60c5;&#x6cc1;&#x4e0b;&#xff0c;&#x958b;&#x767c;&#x8005;&#x7fd2;&#x6163;&#x50c5;&#x4f7f;&#x7528",{"_index":2282,"title":{},"body":{"api/promise.html#Promise":{}}}],["x5728;&#x67d0;&#x500b;&#x7cbe;&#x5ea6;&#x9ede;&#x76f4;&#x63a5;&#x6368;&#x68c4",{"_index":1848,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5728;&#x6bcf;&#x4e00;&#x6b21;&#x8fed;&#x4ee3;&#x7684;&#x4f7f;&#x7528;&#x4e2d;&#x90fd;&#x6703;&#x7522;&#x751f;&#x526f;&#x4f5c;&#x7528;&#xff0c;&#x56e0;&#x6b64",{"_index":2482,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x5728;&#x6bcf;&#x500b;&#x57f7;&#x884c;&#x74b0;&#x5883;&#x5b58;&#x5728",{"_index":1195,"title":{},"body":{"core.html#this":{}}}],["x5728;&#x7acb;&#x5373;&#x51fd;&#x5f0f;&#x524d;&#x6216;&#x5f8c;&#x52a0;&#x5206;&#x865f",{"_index":1169,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x5728;&#x8fed;&#x4ee3",{"_index":3237,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x5728;&#x9019;&#x4e9b;&#x60c5;&#x6cc1;&#x4e0b;&#xff0c;&#x6211;&#x5011;&#x53ef;&#x4ee5;&#x8fd4;&#x56d",{"_index":2725,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x57f7;&#x884c",{"_index":331,"title":{},"body":{"arrowFunction.html#Arrow-Function":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#const":{}}}],["x57f7;&#x884c;&#x51fd;&#x5f0f;&#x7684;&#x7d50;&#x679c",{"_index":1949,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x57f7;&#x884c;&#x6642;&#x76f4;&#x63a5;&#x628a;&#x51fd;&#x6578;&#x53d6;&#x51fa;&#x4f86",{"_index":1948,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x57f7;&#x884c;&#x7269;&#x4ef6;&#x7684;&#x51fd;&#x5f0f",{"_index":1060,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x57f7;&#x884c;&#x932f;&#x8aa4",{"_index":968,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x57f7;&#x884c;&#x9589;&#x5305;&#x5167;&#x51fd;&#x5f0f;&#x4e5f;&#x662f",{"_index":1209,"title":{},"body":{"core.html#this":{}}}],["x57f7;&#x884c;&#x968e;&#x6bb5",{"_index":900,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x57f7;&#x884c;&#x968e;&#x6bb5;&#x624d;&#x6703;&#x8ce6;&#x4e88;&#x78ba;&#x7acb;&#x578b;&#x5225",{"_index":971,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x57f7;&#x884c;&#x968e;&#x6bb5;&#x624d;&#x78ba;&#x8a8d;&#x578b;&#x5225",{"_index":973,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x57fa;&#x672c;&#x578b;&#x5225;&#x662f;&#x50b3",{"_index":1466,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x5916;&#x5c64;&#x5c0f;&#x62ec;&#x865f;&#x5305;&#x8d77;&#x4f86",{"_index":946,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{}}}],["x5916;&#x90e8;&#x7121;&#x6cd5;&#x5b58;&#x53d6",{"_index":3053,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x591a;&#x4f7f;&#x7528;&#x5167;&#x5b58;&#x3001;&#x7de9;&#x5b58;&#x6216;&#x8005;&#x5176;&#x4ed6;&#x65b9;&#x6cd5",{"_index":1684,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x591a;&#x6578;&#x6642;&#x5019;&#x4e00;&#x822c;&#x51fd;&#x6578;&#x7121;&#x7570;&#xff0c;&#x4f46;&#x662f;&#x6700;&#x5927;&#x7684;&#x5dee;&#x5225;&#x5728;&#x65bc",{"_index":2996,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x591a;&#x9805;&#x5f0f;&#x6642;&#x9593",{"_index":3330,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x5927;&#x578b;&#x6846;&#x67b6;&#x4e0b",{"_index":1172,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x5927;&#x90e8;&#x5206;session&#x6a5f;&#x5236;&#x90fd;&#x4f7f;&#x7528;&#x6703;&#x8a71;cookie&#x4f86;&#x4fdd;&#x5b58;sess",{"_index":2226,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5931;&#x6557;&#x7684;&#x884c;&#x70ba;&#x4e00;&#x5f8b;&#x4ea4;&#x7d66;&#x4e86",{"_index":2285,"title":{},"body":{"api/promise.html#Promise":{}}}],["x597d;&#x6d88;&#x606f;&#x662f;&#x5728",{"_index":1621,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x5982;&#x4f55;&#x5feb;&#x901f;&#x5c07;&#x4e00;&#x500b;&#x5b57;&#x7b26;&#x4e32;&#x6578;&#x7d44;&#x8f49;&#x5316;&#x70ba;&#x6578;&#x5b57;&#x985e;&#x578b;&#x7684;&#x6578;&#x7d44",{"_index":2620,"title":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}},"body":{}}],["x5982;&#x540c;&#x51fd;&#x5f0f;&#x8868;&#x9054;&#x5f0f",{"_index":1150,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x5982;&#x679c",{"_index":1036,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x5982;&#x679c;&#x4e0d;&#x662f",{"_index":2294,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x5982;&#x679c;&#x4f60;&#x53ea;&#x662f;&#x5c0d;&#x6578;&#x5b57;&#x9032;&#x884c;&#x904d;&#x6b77;&#x6642;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":2485,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x5982;&#x679c;&#x4f60;&#x9700;&#x8981;&#x8fed;&#x4ee3;&#x4e00;&#x500b;&#x9663;&#x5217;&#xff0c;&#x4f7f;&#x5176;&#x672c;&#x8eab;&#x767c;&#x751f;&#x8b8a;&#x5316;&#x4e14;&#x4e0d;&#x9700;&#x8981;&#x8fd4;&#x56de;&#x4e00;&#x500b;&#x65b0;&#x9663;&#x5217;&#x6642;&#xff0c;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":2484,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x5982;&#x679c;&#x5169;&#x500b;&#x55ae;&#x8a5e;&#x9593;&#x6709;&#x591a;&#x9918;&#x7684;&#x7a7a;&#x683c;&#xff0c;&#x5c07;&#x53cd;&#x8f49;&#x5f8c;&#x55ae;&#x8a5e;&#x9593;&#x7684;&#x7a7a;&#x683c;&#x6e1b;&#x5c11;&#x5230;&#x53ea;&#x542b;&#x4e00;&#x500b;&#x3002",{"_index":3342,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x5982;&#x679c;&#x55ae;&#x5c31;&#x5be6;&#x73fe;&#x529f;&#x80fd;&#xff0c;cookie&#x8207;session&#x5f7c;&#x6b64;&#x4e4b;&#x9593;&#x662f;&#x53ef;&#x4ee5;&#x4e92;&#x63db;&#x7684;(&#x6307;&#x7684;&#x662f;&#x4f60;&#x53ef;&#x4ee5;&#x628a;&#x8cc7;&#x6599;&#x5b58;&#x653e;&#x5728;session&#x6216;&#x662f;cookie&#xff0c;&#x4e26;&#x4e0d;&#x662f;&#x6307;session&#x53ef;&#x4ee5;&#x88ab;&#x653e;&#x5728;client&#x7aef;&#x7576;cookie&#x4f7f;&#x7528;)&#x3002;&#x4f46;&#x662f;cookie&#x5728;&#x6700;&#x55ae;&#x7d14;&#x7684;&#x60c5;&#x6cc1;&#x88e1;&#xff0c;&#x662f;&#x6709;&#x5b89;&#x5168;&#x6027;&#x7684;&#x554f;&#x984c;(&#x8cc7;&#x6599;&#x5728;client&#x7aef;)&#x3002;&#x6240;&#x4ee5;&#x8003;&#x91cf;&#x5230;&#x9019;&#x9ede;&#xff0c;&#x5927;&#x90e8;&#x5206;&#x90fd;&#x6703;&#x9078;&#x64c7;session&#x3002;&#x4f46;&#x662f;&#x6b63;&#x5982;cookie&#x662f;&#x4e00;&#x500b;&#x5916;&#x52a0;&#x7684;&#x529f;&#x80fd;&#xff0c;session&#x4e5f;&#x4e0d;&#x5c6c;&#x65bc;http&#x5354;&#x5b9a;&#x3002;&#x53ea;&#x8981;&#x662f;&#x5916;&#x52a0;&#x529f;&#x80fd;&#xff0c;&#x5c31;&#x5fc5;&#x9808;&#x984d;&#x5916;&#x5beb;&#x7a0b;&#x5f0f;&#x5be6;&#x73fe;&#x3002",{"_index":2232,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5982;&#x679c;&#x6211;&#x5011;&#x4f7f;&#x7528;&#x7b2c;&#x4e00;&#x65b9;cookie&#xff0c;&#x6703;&#x70ba;&#x57df;&#x540d;a&#x5efa;&#x7acb;&#x4e00;&#x500b;cookie&#xff0c;&#x70ba;&#x57df;&#x540d;b&#x518d;&#x5efa;&#x7acb;&#x4e00;&#x500b;cookie&#xff0c;&#x4ed6;&#x5011;&#x53ef;&#x4ee5;&#x95dc;&#x806f;&#x5404;&#x81ea;&#x57df;&#x540d;&#x4e0b;&#x7db2;&#x9801;&#x4e0a;&#x7684;&#x884c;&#x70ba;&#xff0c;&#x4f46;&#x662f;&#x7121;&#x6cd5;&#x95dc;&#x806f;&#x8d77;&#x4f86;&#x3002",{"_index":2193,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5982;&#x679c;&#x6587;&#x4ef6;&#x7684;&#x4fee;&#x6539;&#x983b;&#x7387;&#x5728;&#x79d2;&#x7d1a;&#x4ee5;&#x4e0b;&#xff0c;last",{"_index":2927,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x5982;&#x679c;&#x6587;&#x4ef6;&#x88ab;&#x4fee;&#x6539;&#x4e86;&#xff0c;&#x4f46;&#x662f;&#x5167;&#x5bb9;&#x6c92;&#x6709;&#x4efb;&#x4f55;&#x8b8a;&#x5316;&#x7684;&#x6642;&#x5019;&#xff0c;last",{"_index":2929,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x5982;&#x679c;&#x662f",{"_index":2290,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x5982;&#x679c;&#x6f14;&#x7b97;&#x6cd5;&#x4e2d;&#x5305;&#x542b;&#x5de2;&#x72c0;&#x7684;&#x8ff4;&#x5708;&#xff0c;&#x5247;&#x57fa;&#x672c;&#x8a9e;&#x53e5;&#x901a;&#x5e38;&#x662f;&#x6700;&#x5167;&#x5c64;&#x7684;&#x8ff4;&#x5708;&#x9ad4;&#xff0c;&#x5982;&#x679c;&#x6f14;&#x7b97;&#x6cd5;&#x4e2d;&#x5305;&#x542b;&#x4e26;&#x5217;&#x7684;&#x8ff4;&#x5708;&#xff0c;&#x5247;&#x5c07;&#x4e26;&#x5217;&#x8ff4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x76f8;&#x52a0;&#x3002;&#x4f8b;&#x5982;&#xff1a",{"_index":3318,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x5982;&#x679c;&#x700f;&#x89bd;&#x5668;&#x4e0d;&#x652f;&#x63f4",{"_index":1272,"title":{},"body":{"core.html#繼承":{}}}],["x5982;&#x679c;&#x8981;&#x4f7f;&#x7528",{"_index":1344,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x5982;&#x679c;&#x9084;&#x662f;&#x8a2a;&#x554f",{"_index":2182,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5b57;&#x4e32;&#x900f;&#x904e;parseint",{"_index":1998,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x5b57;&#x4e32;1",{"_index":1006,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x5b58;&#x503c;&#x7684;&#x65b9;&#x6cd5",{"_index":1293,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5b58;&#x653e;&#x5728;&#x5167;&#x5b58;&#x4e2d;)&#xff0c;&#x5b58;&#x653e;&#x7684;&#x4f4d;&#x7f6e;&#x662f;&#x7531;&#x700f;&#x89bd;&#x5668;&#x63a7;&#x5236;&#x7684;&#x3002",{"_index":2839,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x5b58;&#x653e;&#x5728;&#x786c;&#x76e4;&#x4e2d;)&#x548c",{"_index":2838,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x5b83;&#x5728;javascript",{"_index":951,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x5b83;&#x8868;&#x793a;&#x4e86;&#x300c;&#x9762;&#x5411;&#x3001;&#x9023;&#x63a5;&#x300d;&#x548c;/&#x6216;&#x300c;&#x4fdd;&#x6301;&#x72c0;&#x614b;&#x300d;&#x9019;&#x6a23;&#x5169;&#x500b;&#x7570;&#x8b70",{"_index":2205,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5b89;&#x88dd;&#x6559;&#x5b78;&#xff1a",{"_index":1342,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x5b8c;&#x5168;&#x7d81;&#x5b9a;&#x5728;&#x8a9e;&#x5f59;&#x4e0a;&#x7684;&#x4f4d;&#x7f6e;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#x5728",{"_index":2999,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x5b9a;&#x7fa9;&#x5c0d;&#x8c61;&#x4e0a;&#x7684;&#x65b9;&#x6cd5",{"_index":326,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x5b9e;&#x4f8b;&#x4f5c;&#x4e3a",{"_index":1307,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5ba3;&#x544a",{"_index":981,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x5bb9;&#x6613;&#x51fa;&#x932f;&#x7684;&#x5730;&#x65b9",{"_index":960,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x5be6;&#x73fe;&#x975e;&#x540c;&#x6b65",{"_index":923,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x5be6;&#x969b;&#x57f7;&#x884c;&#x5728;&#x9019",{"_index":1176,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["x5be6;&#x969b;&#x904b;&#x4f5c;&#x62c6;&#x89e3",{"_index":914,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5be6;&#x9ad4",{"_index":1253,"title":{},"body":{"core.html#繼承":{}}}],["x5beb;&#x6cd5;&#xff0c;&#x5982;&#x679c;&#x4ee5;&#x5f8c;&#x6709;&#x4ec0;&#x9ebc;&#x689d;&#x4ef6;&#x6539;&#x4e86;&#xff0c;&#x76f4;&#x63a5;&#x6539",{"_index":3213,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x5bec;&#x9b06;&#x76f8;&#x7b49",{"_index":1003,"title":{"core.html#嚴格相等-寬鬆相等":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x5bf9;&#x8c61;&#x4f20;&#x5165",{"_index":1306,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5c01;&#x88dd",{"_index":1284,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5c06;&#x904d;&#x5386;&#x6b64;&#x5bf9;&#x8c61;&#x6240;&#x6709;&#x7684;&#x5c5e;&#x6027;&#xff0c;&#x5e76;&#x4f7f;&#x7528",{"_index":1309,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5c07;&#x5b83;&#x5011;&#x5206;&#x89e3;&#x6210;&#x591a;&#x500b;&#x4e0d;&#x540c;&#x7684;&#x5de5;&#x5ee0;&#x901a;&#x5e38;&#x662f;&#x6709;&#x5e6b;&#x52a9;&#x7684;&#xff0c;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x5982;&#x4e0b;&#x7de8;&#x5beb;&#x3002",{"_index":2729,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5c07;&#x5de5;&#x5ee0;&#x50b3;&#x905e;&#x7d66;&#x9ad8;&#x968e;&#x51fd;&#x6578;&#xff0c;&#x9019;&#x5c07;&#x7d66;&#x6211;&#x5011;&#x5e36;&#x4f86;&#x5de8;&#x5927;&#x7684;&#x63a7;&#x5236;&#x529b;&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x6211;&#x5011;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x9019;&#x500b;&#x6982;&#x5ff5;&#x4f86;&#x5275;&#x5efa;&#x4e00;&#x500b;&#x589e;&#x5f37;&#x7684;&#x5c0d;&#x8c61;&#x3002",{"_index":2741,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5c07;&#x6703;&#x88ab;&#x7f6e;&#x63db;&#x6210;&#x5168;&#x57df;&#x8b8a;&#x6578",{"_index":1225,"title":{},"body":{"core.html#this":{}}}],["x5c07;&#x6bcf;&#x4e00;&#x500b;&#x6578;&#x5b57;&#x8f49;&#x63db;&#x70ba;&#x5b57;&#x7b26;&#x4e32;&#x7136;&#x5f8c;&#x7d71;&#x8a08",{"_index":3186,"title":{},"body":{"string/split.html#split":{}}}],["x5c07;&#x8fd4;&#x56de",{"_index":2573,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x5c0d;&#x4e00;&#x500b;&#x9663;&#x5217;&#x7684;&#x6240;&#x6709;&#x5143;&#x7d20;&#x9032;&#x884c;&#x6392;&#x5e8f;&#xff0c;&#x4e26;&#x56de;&#x50b3;&#x6b64;&#x9663;&#x5217",{"_index":2457,"title":{},"body":{"array/array_methods.html#sort":{}}}],["x5c0d;&#x5143;&#x7d20;&#x91cd;&#x65b0;&#x7d44;&#x88dd;&#xff0c;&#x751f;&#x6210;&#x65b0;&#x9663;&#x5217",{"_index":2452,"title":{},"body":{"array/array_methods.html#map":{},"array/map.html#map":{}}}],["x5c0d;&#x8c61",{"_index":330,"title":{},"body":{"arrowFunction.html#Arrow-Function":{},"operators/precedence.html#運算符比-運算符高":{}}}],["x5c0d;&#x8c61;&#x53ef;&#x4ee5;&#x7528",{"_index":2709,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5c0f;&#x62ec;&#x865f;&#x53ef;&#x4ee5;&#x79fb;&#x5230;&#x5916;&#x5c64",{"_index":1165,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x5c0f;&#x6578",{"_index":1819,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x5c0f;&#x6578;&#x7684;&#x7b97;&#x6cd5;&#xff0c;&#x662f;&#x4e58;2",{"_index":1839,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5c31;&#x662f;&#x7269;&#x4ef6",{"_index":1075,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x5c31;&#x662f;&#x7c21;&#x6613;&#x547c;&#x53eb",{"_index":1208,"title":{},"body":{"core.html#this":{}}}],["x5c31;&#x6703;&#x505a;&#x539f;&#x578b;&#x4e0a;&#x7684;&#x65b9;&#x6cd5",{"_index":1243,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x5c31;&#x80fd;&#x4f7f;&#x7528",{"_index":2264,"title":{},"body":{"api/promise.html#Promise":{}}}],["x5c3e;&#x6578",{"_index":1830,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5c5e;&#x6027;&#xff0c;&#x811a;&#x672c;&#x5c31;&#x4f1a;&#x5f02;&#x6b65;&#x52a0;&#x8f7d;&#x3002;&#x6e32;&#x67d3;&#x5f15;&#x64ce;&#x9047;&#x5230;&#x8fd9;&#x4e00;&#x884c;&#x547d;&#x4ee4;&#xff0c;&#x5c31;&#x4f1a;&#x5f00;&#x59cb;&#x4e0b;&#x8f7d;&#x5916;&#x90e8;&#x811a;&#x672c;&#xff0c;&#x4f46;&#x4e0d;&#x4f1a;&#x7b49;&#x5b83;&#x4e0b;&#x8f7d;&#x548c;&#x6267;&#x884c",{"_index":275,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["x5c6c;&#x6027",{"_index":1063,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#屬性特徵":{}}}],["x5c6c;&#x6027;&#x3002",{"_index":2890,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x5c6c;&#x6027;&#x4e2d;&#x662f;&#x6700;&#x4f4e;&#x7684;&#x3002",{"_index":2848,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x5c6c;&#x6027;&#x5171;&#x540c;&#x4f86;&#x63a7;&#x5236;&#x3002",{"_index":2841,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x5c6c;&#x6027;&#x7279;&#x5fb5",{"_index":1274,"title":{"core.html#屬性特徵":{}},"body":{}}],["x5c6c;&#x6027;&#xff0c;&#x8abf;&#x6574;&#x5c6c;&#x6027;&#x7684;&#x7279;&#x5fb5",{"_index":1275,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5de5;&#x5ee0;&#x5141;&#x8a31;&#x6211;&#x5011;&#x5f9e;&#x8a08;&#x7b97;&#x4e2d;&#x5206;&#x96e2;&#x6211;&#x5011;&#x7684;&#x6578;&#x64da;&#x3002",{"_index":2738,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5de5;&#x5ee0;&#x9f13;&#x52f5;&#x6211;&#x5011;&#x7528;&#x539f;&#x59cb;&#x6578;&#x64da;&#x4f86;&#x6a21;&#x64ec;&#x8907;&#x96dc;&#x548c;&#x7570;&#x6b65;&#x6578;&#x64da;&#xff0c;&#x539f;&#x59cb;&#x6578;&#x64da;&#x5177;&#x6709;&#x7d44;&#x5408;&#x7684;&#x81ea;&#x7136;&#x80fd;&#x529b;&#xff0c;&#x800c;&#x4e0d;&#x5f37;&#x8feb;&#x6211;&#x5011;&#x53bb;&#x505a;&#x4e00;&#x4e9b;&#x9ad8;&#x7d1a;&#x62bd;&#x8c61;&#x3002;&#x7576;&#x6211;&#x5011;&#x5805;&#x6301;&#x7c21;&#x55ae;&#x6642;&#xff0c;javascript&#x66f4;&#x751c;&#x871c;&#xff01",{"_index":2747,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5de6;&#x53f3;&#x5169;&#x908a;&#x653e;&#x7684;&#x662f;&#x8868;&#x9054;&#x5f0f",{"_index":1038,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x5de6;&#x79fb;3",{"_index":1536,"title":{},"body":{"closures.html#傳多個函數":{}}}],["x5dee;&#x5225;&#x5728;&#x4ee5;&#x9663;&#x5217;&#x65b9;&#x5f0f;&#x5448;&#x73f",{"_index":1214,"title":{},"body":{"core.html#this":{}}}],["x5df2;&#x53ef;&#x4ee5;&#x904b;&#x884c",{"_index":908,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5df2;&#x5efa;&#x69cb;&#x5f0f;&#x65b9;&#x5f0f;&#x5448;&#x73f",{"_index":1222,"title":{},"body":{"core.html#this":{}}}],["x5e03;&#x6797;&#x548c;&#x5b57;&#x4e32;&#x8f49;&#x70ba;&#x6578;&#x503c",{"_index":1009,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x5e38;&#x898b;&#x554f;&#x984c",{"_index":1352,"title":{},"body":{"core.html#箭頭函數":{}}}],["x5e38;&#x898b;&#x7684;&#x6f14;&#x7b97;&#x6cd5;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x7531;&#x5c0f;&#x5230;&#x5927;&#x4f9d;&#x6b21;&#x70ba;&#xff1a",{"_index":3327,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x5e38;&#x898f;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f",{"_index":335,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x5e73;&#x5747;&#x6578",{"_index":1358,"title":{},"body":{"core.html#箭頭函數":{}}}],["x5ef6;&#x4f38;&#x7684;&#x4e09;&#x7a2e;&#x7269;&#x4ef6;&#x65b9;&#x6cd5",{"_index":1282,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5efa;&#x69cb;&#x521d;&#x59cb;&#x5316",{"_index":1300,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5efa;&#x69cb;&#x5f0f",{"_index":980,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x5efa;&#x69cb;&#x5f0f;&#x5ba3;&#x544a;&#x7684;&#x975e;&#x539f;&#x59cb;&#x578b;&#x5225",{"_index":982,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x5efa;&#x8b70;&#x90fd;&#x4f7f;&#x7528;&#x8907;&#x6578",{"_index":225,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x5f37;&#x7de9;&#x5b58",{"_index":2832,"title":{"http/caching.html#強緩存":{}},"body":{}}],["x5f37;&#x7de9;&#x5b58;&#x8d85;&#x6642;&#x6642;&#x9593;&#x70ba;10&#x79d2",{"_index":2868,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x5f53;&#x4f60;&#x628a;&#x4e00;&#x4e2a;&#x666e;&#x901a;&#x7684",{"_index":1305,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5f88;&#x91cd;&#x8981;&#x3002",{"_index":3236,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x5f8c;&#x65b9;&#x662f;&#x63d2;&#x5165;&#x4e00;&#x500b;callback&#x51fd;&#x5f0f",{"_index":1210,"title":{},"body":{"core.html#this":{}}}],["x5f8c;&#x7684",{"_index":1971,"title":{},"body":{"this.html#bind-apply-call":{},"global/function.html#cab-call-apply-vs-bind":{}}}],["x5f8c;&#x7aef;&#x6e32;&#x67d3;&#xff0c;&#x6578;&#x64da;&#x76f4;&#x63a5;&#x8f38;&#x51fa;&#x5230",{"_index":1707,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x5f8c;&#x7e8c;&#x7684;&#x503c;&#x8b8a;&#x66f4;&#xff0c;&#x539f;&#x672c;&#x7684;&#x503c;&#x4e5f;&#x6703;&#x8b8a;&#x66f4",{"_index":1127,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x5f8c;&#x7f6e;&#x905e;&#x589",{"_index":1631,"title":{},"body":{"operators.html#Increment":{}}}],["x5f8c;&#x7f6e;&#x905e;&#x589e;&#x662f;&#x5148;&#x8ce6;&#x503c;&#x5f8c;&#x8a08;&#x7b97;&#xff0c;&#x5982;&#xff1a",{"_index":1636,"title":{},"body":{"operators.html#Increment":{}}}],["x5f9e;&#x4e0a;&#x9762;&#x53ef;&#x4ee5;&#x770b;&#x51fa;&#xff0c;0.1&#x7684;&#x4e8c;&#x9032;&#x5236;&#x683c;&#x5f0f;&#x662f;&#xff1a;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662f;&#x4e00;&#x500b;&#x4e8c;&#x9032;&#x5236;&#x7121;&#x9650;&#x5faa;&#x74b0;&#x5c0f;&#x6578;&#xff0c;&#x4f46;&#x8a08;&#x7b97;&#x6a5f;&#x5167;&#x5b58;&#x6709;&#x9650;&#xff0c;&#x6211;&#x5011;&#x4e0d;&#x80fd;&#x7528;&#x5132;&#x5b58;&#x6240;&#x6709;&#x7684;&#x5c0f;&#x6578;&#x4f4d;&#x6578;&#x3002;&#x90a3;&#x9ebc;&#x5728;&#x7cbe;&#x5ea6;&#x8207;&#x5167;&#x5b58;&#x9593;&#x5982;&#x4f55;&#x53d6;&#x6368;&#x5462;&#xff1f",{"_index":1846,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5f9e;&#x5927;&#x5230;&#x5c0f;&#x6392;&#x5e8f",{"_index":2459,"title":{},"body":{"array/array_methods.html#sort":{}}}],["x5f9e;&#x5c0f;&#x5230;&#x5927;&#x6392;&#x5e8f",{"_index":2458,"title":{},"body":{"array/array_methods.html#sort":{}}}],["x5f9e;&#x5de6;&#x81f3;&#x53f3",{"_index":1000,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x5faa;&#x74b0;&#x57f7;&#x884c;&#x904e;&#x7a0b;&#x4e2d;&#xff0c;&#x5e7e;&#x4e4e;&#x540c;&#x6642;&#x8a2d;&#x7f6e;&#x4e86",{"_index":367,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x6027;&#x540d;&#x7a31;(key",{"_index":3241,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x6027;&#x80fd;&#x512a;&#x5316;&#x7684;&#x539f;&#x5247;&#x662f;&#x4ee5;&#x66f4;&#x597d;&#x7684;&#x7528;&#x6236;&#x9ad4;&#x9a57;&#x70ba;&#x6a19;&#x6e96;&#xff0c;&#x5177;&#x9ad4;&#x5c31;&#x662f;&#x5be6;&#x73fe;&#x4e0b;&#x9762;&#x7684;&#x76ee;&#x6a19;&#xff1a",{"_index":1683,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x61f6;&#x52a0;&#x8f09",{"_index":1711,"title":{"performance.html#懶加載":{}},"body":{}}],["x61f6;&#x52a0;&#x8f09;&#xff08;&#x5716;&#x7247;&#x61f6;&#x52a0;&#x8f09;&#x3001;&#x4e0b;&#x62c9;&#x52a0;&#x8f09;&#x66f4;&#x591a;&#xff09",{"_index":1700,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6211;&#x5011;&#x4f7f;&#x7528",{"_index":2733,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x6211;&#x5011;&#x53ef;&#x4ee5;&#x7528;&#x7d44;&#x5408;&#x6a21;&#x5f0f;&#x8868;&#x9054;&#x76f8;&#x540c;&#x7684;&#x610f;&#x601d;&#x3002",{"_index":2717,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x6216",{"_index":274,"title":{},"body":{"es6.html#Module-的加载实现":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"api/promise.html#Promise":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x6216;&#x7b49;&#x4ef7;&#x4e8",{"_index":2564,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x6216;&#x8005",{"_index":2716,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{},"http/caching.html#協商緩存":{}}}],["x6216;&#x8005;&#x5927;&#x65bc",{"_index":2571,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x6216;&#x8005;&#x8b93",{"_index":378,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x6233;&#xff09",{"_index":1694,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6240;&#x4ee5;&#x4fee;&#x6539;obj2.body.a&#x6642;&#x4e5f;&#x6703;&#x4fee;&#x6539;&#x5230;&#x820a;&#x7684",{"_index":1481,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x6240;&#x4ee5;&#x6211;&#x5011;&#x53ef;&#x4ee5;&#x60f3;&#x50cf",{"_index":2208,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x6240;&#x4ee5;&#x62ff;&#x5230;&#x4e86;self.nam",{"_index":3012,"title":{},"body":{"global/function.html#bind":{}}}],["x6240;&#x4ee5;&#x6700;&#x5f8c;&#x4e00;&#x7b46;&#x4e0d;&#x53ef;&#x591a;&#x4e86;&#x4e00;&#x500b;&#x9017;&#x865f",{"_index":1124,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x6240;&#x4ee5;&#x8aaa;&#x5982;&#x679c;&#x7576;&#x524d;&#x6b63;&#x5728;&#x904b;&#x884c;&#x7684;&#x4ee3;&#x78bc;&#x6c92;&#x6709;&#x904b;&#x884c;&#x5b8c;&#xff0c;&#x5373;&#x4f7f;&#x5ef6;&#x9072;&#x7684;&#x6642;&#x9593;&#x5df2;&#x7d93;&#x904e;&#x5b8c;&#xff0c",{"_index":384,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x6240;&#x4ee5;&#x9663;&#x5217;&#x4e5f;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x7269;&#x4ef6;&#x539f;&#x578b;&#x7684;&#x65b9;&#x6cd5",{"_index":1115,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x6240;&#x4ee5;2&#x4e0d;&#x6703;&#x5b58;&#x5728;nan",{"_index":2007,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x6240;&#x4ee5;obj2&#x6703;&#x9577;&#x5f97;&#x8ddf;obj1&#x4e00;&#x6a23",{"_index":1489,"title":{},"body":{"copy.html#Object-assign":{}}}],["x6240;&#x5efa;&#x69cb;&#x7684;&#x578b;&#x5225;&#xff0c;&#x5728",{"_index":985,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x6240;&#x6709",{"_index":1721,"title":{},"body":{"performance.html#懶加載":{}}}],["x6240;&#x89e3;&#x6c7a;&#x4e0d;&#x4e86;&#x7684;&#x554f;&#x984c;&#xff1a",{"_index":2926,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x6253;&#x7d66",{"_index":2063,"title":{},"body":{"variable.html#Hoisting":{}}}],["x627e;&#x4e0d;&#x5230;&#x5c31;&#x6703;undefin",{"_index":1942,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["x6280;&#x8853;&#x540d;&#x7a31;&#xff0c;&#x7528;&#x65bc;&#x53d6;&#x5f97;&#x9060;&#x7aef;&#x8cc7;&#x6599;&#xff1b",{"_index":2260,"title":{},"body":{"api/promise.html#Promise":{}}}],["x628a",{"_index":1258,"title":{},"body":{"core.html#繼承":{}}}],["x628a;&#x53e6;&#x4e00;&#x500b;&#x7acb;&#x5373;&#x51fd;&#x5f0f;&#x5b9a;&#x7fa9;&#x7684;&#x8b8a;&#x6578;&#x5370;&#x51fa;&#x4f86",{"_index":1171,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x628a;&#x6578;&#x64da;&#x63d2;&#x5165;&#x9663;&#x5217;&#x5c3e;&#x90e8",{"_index":2358,"title":{"array/array_insert.html#把數據插入陣列尾部":{}},"body":{}}],["x628a;&#x6578;&#x64da;&#x63d2;&#x5165;&#x9663;&#x5217;&#x6307;&#x5b9a;&#x4f4d;&#x7f6",{"_index":2362,"title":{"array/array_insert.html#把數據插入陣列指定位置":{}},"body":{}}],["x628a;&#x6578;&#x64da;&#x63d2;&#x5165;&#x9663;&#x5217;&#x982d;&#x90e8",{"_index":2361,"title":{"array/array_insert.html#把數據插入陣列頭部":{}},"body":{"array/array_insert.html#example":{}}}],["x628a;&#x8fd9;&#x4e9b;&#x5c5e;&#x6027;&#x5168;&#x90e8;&#x8f6c;&#x4e3a",{"_index":1310,"title":{},"body":{"core.html#屬性特徵":{}}}],["x62bd;&#x8c61;&#x7d50;&#x69cb;&#x6a39;ast(abstract",{"_index":883,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x62ec;&#x865f;&#x5167;&#x5c64;&#x518d;&#x88dc;&#x4e0a;&#x5c0f;&#x62ec;&#x865f",{"_index":1164,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x62fc;&#x63a5;&#x5169;&#x500b;&#x9663;&#x5217",{"_index":2369,"title":{"array/array_insert.html#拼接兩個陣列":{}},"body":{}}],["x62ff;&#x5230;&#x6b63;&#x78ba;&#x7684",{"_index":2992,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x6307;&#x5230;&#x4e0d;&#x4e00;&#x6a23;&#x7684;&#x4f4d;&#x7f6",{"_index":1351,"title":{},"body":{"core.html#箭頭函數":{}}}],["x6307;&#x5411",{"_index":1199,"title":{},"body":{"core.html#this":{}}}],["x6307;&#x5411;&#x662f;&#x4e0d;&#x540c;&#x7684",{"_index":1357,"title":{},"body":{"core.html#箭頭函數":{}}}],["x6307;&#x6578;&#x6642;&#x9593",{"_index":3332,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x6309;&#x503c;&#x50b3;&#x905e;&#xff08;pass",{"_index":399,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x63a5;&#x4e0b;&#x4f86;&#x9032;&#x5165",{"_index":2277,"title":{},"body":{"api/promise.html#Promise":{}}}],["x63a5;&#x6536",{"_index":997,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x63a5;&#x8457;&#x628a;obj1&#x4e2d;&#x6240;&#x6709;&#x7684;&#x5c6c;&#x6027;&#x8907;&#x88fd;&#x904e;&#x53bb",{"_index":1488,"title":{},"body":{"copy.html#Object-assign":{}}}],["x63d0;&#x4f9b;&#x93c8;&#x63a5",{"_index":247,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x63d0;&#x5347;&#xff08;hoisting&#xff09",{"_index":893,"title":{"core.html#提升（Hoisting）":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x63d0;&#x793a;&#xff1a",{"_index":375,"title":{},"body":{"asynchronous.html#setTimeout":{},"statements/for.html#for…of與for…in的差別":{}}}],["x63d2;&#x5165",{"_index":1731,"title":{"performance.html#合併-DOM-插入-createDocumentFragment":{}},"body":{}}],["x63d2;&#x5165;&#x6216;&#x522a;&#x9664;&#xff1a;&#x9032;&#x68e7;&#x8207;&#x51fa;&#x68e7;&#x7684;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x70ba",{"_index":3316,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x642d;&#x914d;&#x4f7f;&#x7528",{"_index":3248,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x642d;&#x914d;&#x5224;&#x65b7;&#x5f0f;&#x4e0d;&#x80fd;&#x76f4;&#x63a5;&#x63a5;&#x7bad;&#x982d;&#x51fd;&#x5f0f",{"_index":1354,"title":{},"body":{"core.html#箭頭函數":{}}}],["x64cd;&#x4f5c;&#x3002",{"_index":211,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x64cd;&#x4f5c;&#x662f;&#x975e;&#x5e38;&#x8017;&#x8cbb;&#x6027;&#x80fd;&#x7684;&#xff0c;&#x56e0;&#x6b64;&#x63d2;&#x5165;&#x591a;&#x500b;&#x6a19;&#x7c64;&#x6642;&#xff0c;&#x5148;&#x63d2;&#x5165",{"_index":1732,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x64cd;&#x4f5c;&#x6709;&#x4ec0;&#x9ebc;&#x5340;&#x5225;&#xff1f",{"_index":1633,"title":{},"body":{"operators.html#Increment":{}}}],["x64cd;&#x4f5c;&#xff0c;&#x591a;&#x500b;&#x64cd;&#x4f5c;&#x5118;&#x91cf;&#x5408;&#x4f75;&#x5728;&#x4e00;&#x8d77;&#x57f7;&#x884c;&#xff08",{"_index":1703,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x653e;&#x524d;&#x9762",{"_index":909,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x653e;&#x524d;&#x9762;&#x53ef;&#x56e0;&#x70ba",{"_index":906,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x653e;&#x524d;&#x9762;&#xff0c;j",{"_index":1698,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x653e;&#x5f8c;&#x9762",{"_index":1699,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6570;&#x5b57;&#x524d;&#x8865;&#x201c;0&#x201d;&#x7684;&#x4e94;&#x79cd;&#x65b9;&#x6cd5",{"_index":1574,"title":{},"body":{"num.html#補數字":{}}}],["x6574;&#x500b;&#x74b0;&#x5883;&#x4e0b;&#x7684;&#x6240;&#x6709;&#x4ee3;&#x78bc;&#x904b;&#x884c;&#x5b8c;&#x7562;&#x4e4b;&#x5f8c;&#x57f7;&#x884c",{"_index":387,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x6578;&#x5b57;&#x586b;&#x5145;9",{"_index":1579,"title":{},"body":{"num.html#補數字":{}}}],["x6578;&#x5b57;&#x88dc;0",{"_index":1575,"title":{},"body":{"num.html#補數字":{}}}],["x6578;&#x5b57;1",{"_index":1004,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x6578;&#x5b57;11&#x4e2d;&#x5305;&#x542b;&#x4e86;&#x5169;&#x500b;1,&#x6578;&#x5b57;20&#x4e2d;&#x4e0d;&#x5305;&#x542b;1,&#x6578;&#x5b57;1&#x5230;21&#x4e2d;&#x5171;&#x5305;&#x542b;&#x4e86;13&#x500b;1&#x3002",{"_index":3185,"title":{},"body":{"string/split.html#split":{}}}],["x6578;&#x64da;&#x7d50;&#x69cb;&#xff1a;&#x968a;&#x5217;&#xff08;queue&#xff09",{"_index":3308,"title":{"string/queue.html#數據結構：隊列（Queue）":{}},"body":{}}],["x6587;&#x4ef6;&#x4e0d;&#x6703;&#x8868;&#x660e;&#x9019;&#x8207",{"_index":1338,"title":{},"body":{"core.html#const":{}}}],["x6587;&#x4ef6;&#x7684;&#x6700;&#x5f8c;&#x4fee;&#x6539;&#x6642;&#x9593",{"_index":2908,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x6587;&#x6a94",{"_index":396,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x65b0;&#x589e",{"_index":298,"title":{},"body":{"event.html#代理":{}}}],["x65b0;&#x589e;&#x65b9;&#x6cd5;&#x5230;&#x539f;&#x578b;&#x93c8;&#x4e0a",{"_index":1117,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x65b0;&#x589e;foo&#x5c6c;&#x6027;&#x540d;&#x7a31",{"_index":3258,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x65b0;&#x7269;&#x4ef6;&#x8ddf;&#x539f;&#x7269;&#x4ef6;&#x4e0d;&#x5171;&#x7528;&#x8a18;&#x61b6;&#x9ad4",{"_index":1477,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x65b0;&#x7684;&#x4e00;&#x884c;&#x4ee5",{"_index":961,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x65b0;&#x7684;&#x4e00;&#x884c;&#x662f",{"_index":957,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x65b9;&#x6cd5",{"_index":1202,"title":{},"body":{"core.html#this":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{}}}],["x65b9;&#x6cd5;&#x53ef;&#x4ee5;&#x85c9;&#x7531;&#x522a;&#x9664;&#x65e2;&#x6709;&#x5143;&#x7d20;&#x4e26;&#xff0f;&#x6216;&#x52a0;&#x5165;&#x65b0;&#x5143;&#x7d20;&#x4f86;&#x6539;&#x8b8a;&#x4e00;&#x500b;&#x9663;&#x5217;&#x7684;&#x5167;&#x5bb9",{"_index":2363,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["x65b9;&#x6cd5;&#x56de;&#x50b3;&#x7684;&#x662f;&#x7d81;&#x5b9a",{"_index":2995,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x65b9;&#x6cd5;&#x5c07;&#x4e00;&#x500b;&#x7d2f;&#x52a0;&#x5668;&#x53ca;&#x9663;&#x5217;&#x4e2d;&#x6bcf;&#x9805;&#x5143;&#x7d20;&#xff08;&#x7531;&#x5de6;&#x81f3;&#x53f3;&#xff09;&#x50b3;&#x5165;&#x56de;&#x547c;&#x51fd;&#x5f0f;&#xff0c;&#x5c07;&#x9663;&#x5217;&#x5316;&#x70ba;&#x55ae;&#x4e00;&#x503c;&#x3002",{"_index":2463,"title":{},"body":{"array/array_methods.html#reduce":{}}}],["x65b9;&#x6cd5;&#x6703;&#x547c;&#x53eb;&#x4e00;&#x500b;&#x4ee5",{"_index":2980,"title":{},"body":{"global/function.html#call、apply、bind":{}}}],["x65b9;&#x6cd5;&#x6703;&#x5c07;&#x9663;&#x5217;&#x4e2d;&#x7d22;&#x5f15;&#x7684;&#x7b2c;&#x4e00;&#x500b;&#x5230;&#x6700;&#x5f8c;&#x4e00;&#x500b;&#x7684;&#x6bcf;&#x500b;&#x4f4d;&#x7f6e;&#x5168;&#x90e8;&#x586b;&#x5165;&#x4e00;&#x500b;&#x975c;&#x614b;&#x7684;&#x503c;&#x3002",{"_index":2370,"title":{},"body":{"array/array_insert.html#fill":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x5c0d;&#x61c9",{"_index":210,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x6703;&#x5efa;&#x7acb;&#x4e00;&#x500b;&#x65b0;&#x51fd;&#x5f0f;&#x3002;&#x8a72;&#x51fd;&#x5f0f;&#x88ab;&#x547c;&#x53eb;&#x6642;&#xff0c;&#x6703;&#x5c07",{"_index":2983,"title":{},"body":{"global/function.html#call、apply、bind":{}}}],["x65e5;&#x671f",{"_index":2843,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x662f",{"_index":340,"title":{},"body":{"arrowFunction.html#Arrow-Function":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#屬性特徵":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"http/caching.html#強緩存":{},"statements/for.html#for…of與for…in的差別":{}}}],["x662f;&#x4e00;&#x500b;&#x5f88;&#x7279;&#x5225;&#x7684;&#x5b58;&#x5728;&#xff0c;&#x5b83;&#x662f;&#x53ef;&#x4ee5;&#x7576;&#x6210;&#x7269;&#x4ef6;&#x4f86;&#x4f7f;&#x7528;&#xff0c",{"_index":1133,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x662f;&#x4e00;&#x500b;&#x7279;&#x6b8a;&#x7684;&#x7269;&#x4ef6",{"_index":1137,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x662f;&#x4e00;&#x500b;&#x985e;&#x9663;&#x5217",{"_index":1178,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["x662f;&#x4e00;&#x7a2e;&#x6301;&#x4e45;&#x7db2;&#x8def;&#x5354;&#x5b9a;&#xff0c;&#x8b93;client&#x7aef;&#x8207;server&#x7aef;&#x53ef;&#x4ee5;&#x4f5c;&#x4e00;&#x7a2e;&#x5c0d;&#x8a71;&#xff0c;&#x4e26;&#x5c07;&#x5169;&#x7aef;&#x5efa;&#x7acb;&#x95dc;&#x9023;&#xff0c;&#x4fdd;&#x6301;&#x4f3a;&#x670d;&#x5668;&#x8207;client&#x53ef;&#x4ee5;&#x6301;&#x7e8c;&#x7684;&#x8207;server&#x4f5c;&#x4ea4;&#x8ac7;&#x3002",{"_index":2204,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x662f;&#x4e00;&#x7a2e;&#x7a0b;&#x5e8f;&#x89e3;&#x6790;&#x6280;&#x8853;&#xff0c",{"_index":950,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x662f;&#x52d5;&#x8a5e;&#xff0c",{"_index":222,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x662f;&#x53c3;&#x8003;&#x4f4d;&#x5740",{"_index":1017,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x662f;&#x540c;&#x6b65;&#x7684",{"_index":920,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x662f;&#x5426;&#x5f37;&#x7de9;&#x5b58;&#x7531",{"_index":2840,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x662f;&#x5426;&#x662f;&#x7a7a;&#x968a",{"_index":3311,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x662f;&#x56e0;&#x70ba;&#x7bad;&#x982d;&#x51fd;&#x6578;&#x6309;&#x8a5e;&#x6cd5",{"_index":328,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x662f;&#x5728;&#x8abf;&#x7528;&#x6642;&#x78ba;&#x5b9a;&#x7684;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x7531;&#x5c01;&#x9589;&#x7684;&#x4e0a;&#x4e0b;&#x6587;&#x6c7a;&#x5b9a;&#x7684",{"_index":337,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x662f;&#x5c6c;&#x65bc;&#x4e00;&#x500b;&#x900f;&#x904",{"_index":2259,"title":{},"body":{"api/promise.html#Promise":{}}}],["x662f;&#x600e;&#x9ebc;&#x8a2d;&#x8a08;&#x7684;&#x3002",{"_index":249,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x662f;&#x60a8;&#x8a2a;&#x554f;&#x904e;&#x7684;&#x7db2;&#x7ad9;&#x5275;&#x5efa;&#x7684;&#x6587;&#x4ef6;&#xff0c;&#x7528;&#x65bc;&#x5b58;&#x5132;&#x700f;&#x89bd;&#x4fe1;&#x606f;&#xff0c;&#x4f8b;&#x5982;&#x60a8;&#x7684;&#x7db2;&#x7ad9;&#x504f;&#x597d;&#x8a2d;&#x7f6e;&#x6216;&#x500b;&#x4eba;&#x8cc7;&#x6599;&#x4fe1;&#x606f;&#x3002",{"_index":2149,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["x662f;&#x6578;&#x503c;&#x6216;&#x70ba",{"_index":1033,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x662f;&#x6578;&#x7d44;&#x5f15;&#x7528",{"_index":341,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x662f;&#x7269;&#x4ef6;&#x578b;&#x5225",{"_index":983,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x662f;&#x7531;&#x5730;&#x5740;&#x6b04;&#x4e2d;&#x5217;&#x51fa;&#x7684;&#x7db2;&#x7ad9;&#x57df;&#x8a2d;&#x7f6e;&#x7684",{"_index":2153,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["x662f;&#x7acb;&#x523b;&#x57f7;&#x884c",{"_index":1213,"title":{},"body":{"core.html#this":{}}}],["x662f;&#x7b2c;&#x4e00;&#x6b21;&#x57f7;&#x884c;&#x7684;&#x524d;&#x4e00;&#x500b;&#x503c",{"_index":1361,"title":{},"body":{"core.html#箭頭函數":{}}}],["x662f;&#x7de8;&#x7a0b;&#x6280;&#x8853;&#x4e2d;&#x5e38;&#x7528;&#x7684;&#x65b9;&#x6cd5;&#x3002",{"_index":2483,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x662f;&#x8868;&#x9054;&#x5f0f",{"_index":996,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x662f;&#x89e3;&#x6c7a;&#x8fa6;&#x6cd5",{"_index":967,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x662f;&#x8cd3;&#x8a9e;&#x3002",{"_index":223,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x662f;&#x900f;&#x904e;&#x5982;&#x793e;&#x7fa4;&#x7db2;&#x8def;&#x7b49;&#x7b2c;&#x4e09;&#x65b9;&#x7a0b;&#x5f0f;&#x5b89;&#x88dd;&#xff0c;&#x4e3b;&#x8981;&#x76ee;&#x7684;&#x70ba;&#x5728;&#x672c;&#x516c;&#x53f8;&#x7db2;&#x7ad9;&#x6574;&#x5408;&#x793e;&#x7fa4;&#x5a92;&#x9ad4;&#x5167;&#x5bb9;&#xff0c;&#x5982;&#x793e;&#x7fa4;&#x63d2;&#x4ef6",{"_index":2177,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x662f;&#x9663;&#x5217;&#x539f;&#x578b;&#x7684;&#x5c6c;&#x6027",{"_index":1108,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x662f;&#x985e;&#x9663;&#x5217;&#x6c92;&#x6709;&#x9663;&#x5217;&#x65b9;&#x6cd5",{"_index":1359,"title":{},"body":{"core.html#箭頭函數":{}}}],["x662f;es5&#x4e2d;&#x65b0;&#x589e;&#x7684;&#x4e00;&#x500b;&#x65b9;&#x6cd5;&#xff0c;&#x53ef;&#x4ee5;&#x6539;&#x8b8a;&#x51fd;&#x6578;&#x5167;&#x90e8;&#x7684;this&#x6307;&#x5411",{"_index":1981,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x6642",{"_index":339,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x6642;&#x9593;&#x6233;&#x5be6;&#x4f8b",{"_index":2744,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6",{"_index":3317,"title":{"string/queue.html#時間複雜度":{}},"body":{}}],["x6642;&#xff0c;&#x4f7f;&#x7528",{"_index":1034,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"statements/for.html#for…of與for…in的差別":{}}}],["x6642;&#xff0c;&#x5247;&#x76f4;&#x63a5;&#x5957;&#x7528",{"_index":1037,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x6642;&#xff0c;cooki",{"_index":2162,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x66ab;&#x505c;&#x6309;&#x9215",{"_index":1192,"title":{},"body":{"core.html#this":{}}}],["x66ab;&#x6642;&#x6027;&#x6b7b;&#x5340",{"_index":1331,"title":{},"body":{"core.html#const":{}}}],["x66f4;&#x56b4;&#x683c;&#xff0c;&#x4ed6;&#x5011;&#x5ba3;&#x7a31;&#x6211;&#x5011;&#x61c9;&#x8a72;&#x601d;&#x8003;&#x9019;&#x4e9b;&#x65b9;&#x6cd5;&#x5982;&#x4f55;&#x8655;&#x7406",{"_index":1628,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x66f4;&#x597d;&#x7684;&#x505a;&#x6cd5;&#x662f;&#xff0c;&#x9664;&#x4e86;&#x7b2c;&#x4e00;&#x7d1a;&#xff0c;&#x5176;&#x4ed6;&#x7d1a;&#x5225;&#x90fd;&#x7528;&#x67e5;&#x8a62;&#x5b57;&#x7b26;&#x4e32;&#x8868;&#x9054;&#x3002",{"_index":234,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x6700;&#x5927;&#x7684;&#x539f;&#x56e0;&#x9084;&#x662f;&#x56e0;&#x70ba",{"_index":2987,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x6700;&#x597d;&#x7684;&#x65b9;&#x5f0f;&#x662f;&#x5f9e;&#x51fd;&#x5f0f;&#x672c;&#x8eab;&#x7684;&#x539f;&#x578b;&#x5c6c;&#x6027;&#x4e0a;&#x53bb;&#x8abf;&#x6574",{"_index":1249,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x6703;&#x4f7f;&#x5176;&#x4e2d;&#x4e00;&#x908a;&#x7684;&#x985e;&#x578b;&#x9032;&#x884c;&#x5f37;&#x5236;&#x8f49;&#x63db;&#xff0c;&#x4f7f;&#x7b49;&#x865f;&#x5169;&#x908a;&#x7684;&#x985e;&#x578b;&#x90fd;&#x76f8;&#x7b49;&#x5f8c;&#x518d;&#x5c0d;&#x6578;&#x503c;&#x9032;&#x884c;&#x6bd4;&#x8f03;&#x3002",{"_index":1615,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x6703;&#x51fa;&#x73f",{"_index":931,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x6703;&#x5c07;&#x539f;&#x672c;&#x7684;&#x7269;&#x4ef6;&#x8f49;&#x6210;&#x5b57;&#x4e32;&#x518d;&#x8f49;&#x56de;&#x4f86",{"_index":1094,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x6703;&#x5f71;&#x97ff;&#x57f7;&#x884c;&#x7d50;&#x679c",{"_index":963,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x6703;&#x65b0;&#x589e;&#x66f4;&#x591a;a&#x6a19;&#x7c64",{"_index":296,"title":{},"body":{"event.html#代理":{}}}],["x6703;&#x88ab;&#x8986;&#x84cb;&#x6240;&#x4ee5;&#x88dc;&#x56de;&#x539f;&#x672c;&#x5efa;&#x69cb;&#x51fd;&#x5f0f",{"_index":1268,"title":{},"body":{"core.html#繼承":{}}}],["x6703;&#x8a2d;&#x5b9a;&#x5728",{"_index":2163,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x6703;&#x932f;&#x8aa4;&#x5730;&#x8fd4;&#x56d",{"_index":2928,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x6709",{"_index":2719,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x6709;&#x4e00;&#x500b;&#x65b0;&#x7684",{"_index":1622,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x6709;&#x4ec0;&#x9ebc;&#x5340;&#x5225;&#xff1f",{"_index":2476,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x6709;&#x5275;&#x9020;&#x5230;&#x57f7;&#x884c;&#x7684;&#x6982;&#x5ff5;&#xff0c;&#x4f46;&#x4e0d;&#x6703;&#x9810;&#x5148;&#x51fa;&#x73f",{"_index":1337,"title":{},"body":{"core.html#const":{}}}],["x6709;&#x52a0;&#x5165;&#x56b4;&#x683c;&#x6a21;&#x5f0f",{"_index":1229,"title":{},"body":{"core.html#this":{}}}],["x6709;&#x5c07;&#x6b64;&#x5c6c;&#x6027",{"_index":3256,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x6709;&#x76f8;&#x540c;&#x5c6c;&#x6027;&#x6642;&#x5408;&#x4f75;&#x7269;&#x4ef6;&#x5340;&#x6bb5",{"_index":3026,"title":{"object/assign.html#有相同屬性時合併物件區段":{}},"body":{}}],["x6709;&#x76f8;&#x540c;&#x7684;&#x529f;&#x80fd;&#xff0c;&#x5728;&#x67d0;&#x4e9b;&#x7279;&#x6b8a;&#x60c5;&#x6cc1;&#x4e0b;&#x4e5f;&#x904b;&#x4f5c;&#x7684;&#x5f88;&#x597d;&#xff1a",{"_index":1624,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x6709;hoisting&#x4f46;&#x9396;&#x4f4f",{"_index":1332,"title":{},"body":{"core.html#const":{}}}],["x671f;&#x671b;&#x4ee3;&#x78bc;&#x7684;&#x8f38;&#x51fa;&#x8b8a;&#x6210;&#xff1a;5",{"_index":389,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x672c;&#x5730;&#x901a;&#x904",{"_index":2859,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["x679c;&#x51cd;&#x5c64;&#xff0c;&#x5976;&#x916a;&#x5c64;&#x548c;&#x5976;&#x6cb9;&#x5c64;&#xff0c;&#x9802;&#x90e8;&#x9084",{"_index":2720,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x67e5;&#x627e;&#xff1a;&#x5f9e;&#x5c0d;&#x982d;&#x958b;&#x59cb;&#x67e5;&#x627e;&#xff0c;&#x5f9e;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x70ba",{"_index":3315,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x67e5;&#x8a62;&#x505a;&#x7de9;&#x5b58",{"_index":1701,"title":{"performance.html#DOM-查詢做緩存":{}},"body":{"performance.html#優化原則和方向":{}}}],["x6807;&#x7b7e;&#x6253;&#x5f00",{"_index":273,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["x689d;&#x4ef6;&#x7d44;&#x5408;&#x7684;&#x554f;&#x984c",{"_index":3202,"title":{"statements/if...else.html#條件組合的問題":{}},"body":{}}],["x6a19;&#x7c64",{"_index":1737,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x6a21;&#x677f;&#x6e32;&#x67d3;&#x9801;&#x9762",{"_index":1709,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6b21;&#x65b9",{"_index":1810,"title":{},"body":{"math.html#Math":{}}}],["x6b63;&#x5219",{"_index":3350,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x6b63;&#x78ba",{"_index":969,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x6b63;&#x898f;&#x8868;&#x9054;&#x5f0f",{"_index":941,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{}}}],["x6b64;&#x6642",{"_index":3127,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x6bcf;&#x500b;&#x6846;&#x67b6;&#x5be6;&#x73fe;&#x7684;&#x908f;&#x8f2f;&#x90fd;&#x53ef;&#x80fd;&#x4e0d;&#x4e00;&#x6a23;&#xff0c;&#x6240;&#x4ee5;&#x9084;&#x662f;&#x8981;&#x53bb;&#x770b;&#x5b98;&#x65b9;&#x7684;&#x8aaa;&#x660e;&#x6703;&#x6bd4;&#x8f03;&#x6e05;&#x695a;&#x3002",{"_index":2236,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x6bcf;&#x6b21;&#x5faa;&#x74b0;&#xff0c;&#x90fd;&#x6703;&#x67e5;&#x8a62",{"_index":1725,"title":{},"body":{"performance.html#DOM-查詢做緩存":{}}}],["x6bd4",{"_index":1627,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x6bd4;&#x5982;&#xff0c",{"_index":220,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x6bd4;&#x5982;&#xff0c;&#x7576;&#x6211;&#x5011;&#x6709;&#x591a;&#x500b;&#x57df;&#x540d;&#x7684;&#x7db2;&#x7ad9;&#x9700;&#x8981;&#x8ddf;&#x8e64;&#xff0c;&#x6211;&#x5011;&#x5e0c;&#x671b;&#x77ad;&#x89e3;&#x5230;&#x7528;&#x6236;&#x9ede;&#x64ca;&#x67d0;&#x500b;&#x5ee3;&#x544a;&#x5230;&#x9054;&#x57df;&#x540d;a&#x4e0b;&#x7684;&#x7db2;&#x9801;&#xff0c;&#x7136;&#x5f8c;&#x53ef;&#x80fd;&#x700f;&#x89bd;&#x4e86;&#x4e0d;&#x8ad6;&#x90a3;&#x500b;&#x57df;&#x540d;&#x4e0b;&#x7684;&#x9801;&#x9762;&#xff0c;&#x6700;&#x5f8c;&#x5728;&#x57df;&#x540d;b&#x4e0b;&#x7684;&#x7db2;&#x9801;&#x5b8c;&#x6210;&#x8a3b;&#x518a;&#x7684;&#x60c5;&#x6cc1;&#x3002;&#x5ee3;&#x544a;&#x53ef;&#x4ee5;&#x5728;&#x57df;&#x540d;a&#x4e0b;&#x7684;&#x7db2;&#x9801;&#x88ab;&#x8ddf;&#x8e64;&#x5230;&#xff0c;&#x800c;&#x8a3b;&#x518a;&#x53ef;&#x4ee5;&#x5728;&#x57df;&#x540d;b&#x4e0b;&#x7684;&#x7db2;&#x9801;&#x8ddf;&#x8e64;&#x5230;&#x3002",{"_index":2192,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x6bd4;&#x5982;&#xff0c;&#x8a2a;&#x554f",{"_index":2179,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x6bd4;&#x5c0d;&#x7684;&#x4e0d;&#x662f;&#x503c",{"_index":1016,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x6bd4;&#x5c0d;&#x7684;&#x90fd;&#x662f;&#x53c3;&#x8003;&#x4f4d;&#x5740",{"_index":1021,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x6bd4;&#x8f03;&#x4e0d;&#x662f;&#x4e00;&#x500b;&#x6bd4;&#x8f03;&#x597d;&#x7684;&#x89e3;&#x6c7a;&#x65b9;&#x5f0f;&#xff0c;&#x4f60;&#x53ef;&#x4ee5;&#x5f97;&#x5230;&#x9019;&#x6a23;&#x7684;&#x7d50;&#x679c;&#xff1a",{"_index":1620,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x6c38;&#x9060;&#x90fd;&#x662f;&#x8a9e;&#x610f;&#x4e0a;&#x7684",{"_index":3001,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x6c42;&#x503c;&#x7b56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6c42;&#x503c;&#x7b56;&#x7565",{"_index":1040,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x6c59;&#x67d3;&#x6574;&#x500b;&#x4f5c;&#x7528;&#x57df",{"_index":1324,"title":{},"body":{"core.html#Let":{}}}],["x6c92;&#x6709;&#x50b3;&#x7d71;&#x51fd;&#x6578",{"_index":1347,"title":{},"body":{"core.html#箭頭函數":{}}}],["x6c92;&#x6709;&#x95dc;&#x4fc2",{"_index":1965,"title":{},"body":{"this.html#Callback":{}}}],["x6c92;&#x88ab;&#x6539;&#x5230",{"_index":1475,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{}}}],["x6c92;&#x8907;&#x88fd",{"_index":1499,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["x6ce8;&#x610f;&#xff0c;&#x5982;&#x679c;&#x4f7f;&#x7528;&#x7bad;&#x982d;&#x51fd;&#x5f0f;&#xff0c;thi",{"_index":1992,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x6ce8;&#x610f;&#xff0c;&#x9019;&#x88e1;&#x662f",{"_index":1987,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x6ce8;&#x610f;&#xff0c;&#x901a;&#x5e38;&#x9810;&#x8a2d;&#x503c;&#x4e0d;&#x662f",{"_index":2013,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x6d4f;&#x89c8;&#x5668;&#x5141;&#x8bb8;&#x811a;&#x672c;&#x5f02;&#x6b65;&#x52a0;&#x8f7d;&#xff0c;&#x4e0b;&#x9762;&#x5c31;&#x662f;&#x4e24;&#x79cd;&#x5f02;&#x6b65;&#x52a0;&#x8f7d;&#x7684;&#x8bed;&#x6cd5;&#x3002",{"_index":271,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["x6d6e;&#x70b9;&#x6570;&#x9677;&#x9631;&#x53ca;&#x89e3;&#x6cd5",{"_index":1812,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x6d6e;&#x9ede;&#x6578;&#x904b;&#x7b97;&#x7684;&#x5751",{"_index":1811,"title":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}},"body":{"math.html#Math":{}}}],["x6df1;&#x5165;&#x54cd;&#x5e94;&#x5f0f;&#x539f;&#x7406",{"_index":1304,"title":{},"body":{"core.html#屬性特徵":{}}}],["x6df1;&#x5c64;&#x8907;&#x88fd",{"_index":1093,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x6df1;&#x62f7;&#x8c9d;(deep",{"_index":1474,"title":{"copy.html#深拷貝-Deep-Copy":{}},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x6df1;&#x6dfa;&#x62f7;&#x8c9d",{"_index":1085,"title":{"core.html#深淺拷貝":{}},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x6dfa;&#x5c64;&#x8907;&#x88fd",{"_index":1092,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x6dfa;&#x62f7;&#x8c9d",{"_index":1473,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x6dfa;&#x62f7;&#x8c9d;(shallow",{"_index":1465,"title":{"copy.html#淺拷貝-Shallow-Copy":{}},"body":{}}],["x6e05;&#x7a7a;&#x968a",{"_index":3313,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x6e1b;&#x5c11",{"_index":1685,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6e1b;&#x5c11;&#x9801;&#x9762;&#x9ad4;&#x7a4d;&#xff0c;&#x63d0;&#x5347;&#x7db2;&#x8def;&#x52a0;&#x8f09",{"_index":1689,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6e1b;&#x5c11;dom",{"_index":1702,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6e2c;&#x8a66;&#x9663;&#x5217",{"_index":2460,"title":{},"body":{"array/array_methods.html#every":{},"array/array_methods.html#some":{}}}],["x6e32;&#x67d3;&#x5b8c;&#x5373;&#x53ef;&#x57f7;&#x884c;&#xff0c;&#x6b64;&#x6642;&#x5716;&#x7247;&#x3001;&#x8996;&#x983b;&#x9084;&#x53ef;&#x80fd;&#x6c92;&#x6709;&#x52a0;&#x8f09;&#x5b8c",{"_index":1745,"title":{},"body":{"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["x6e4a;&#x6574;&#x4f75",{"_index":1815,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x700f;&#x89bd;&#x5668;&#x4e0d;&#x8d70;&#x5f37;&#x7de9;&#x5b58",{"_index":2919,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x70ba;&#x4ec0;&#x9ebc;&#x6211;&#x5011;&#x9700;&#x8981",{"_index":2985,"title":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}},"body":{}}],["x70ba;&#x53c3;&#x6578;&#x7684;&#x51fd;&#x5f0f;&#x3002",{"_index":2982,"title":{},"body":{"global/function.html#call、apply、bind":{}}}],["x70ba;&#x53c3;&#x8003;&#x3002;&#x8acb;&#x4f7f;&#x7528;&#x7bad;&#x982d;&#x51fd;&#x5f0f;&#x6216;&#x662f",{"_index":3009,"title":{},"body":{"global/function.html#bind":{}}}],["x70ba;&#x6240;&#x6709;a&#x6a19;&#x7c64",{"_index":297,"title":{},"body":{"event.html#代理":{}}}],["x70ba;&#x95dc;&#x9375;&#x5b57",{"_index":1194,"title":{},"body":{"core.html#this":{}}}],["x7121;&#x503c;&#x50b3;&#x5165;this&#x5f80;&#x4e0a;&#x627",{"_index":1980,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x7121;&#x6cd5;&#x518d;&#x51fd;&#x5f0f;&#x5916;&#x88ab;&#x518d;&#x6b21;&#x57f7;&#x884c",{"_index":1163,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x7121;&#x6cd5;&#x53d6;&#x5f97;&#x7269;&#x4ef6;&#x7684;mynam",{"_index":1211,"title":{},"body":{"core.html#this":{}}}],["x7121;&#x6cd5;&#x65b0;&#x589e;&#x522a;&#x9664",{"_index":1287,"title":{},"body":{"core.html#屬性特徵":{}}}],["x7121;&#x7a7a;&#x683c;&#x5b57;&#x7b26;&#x69cb;&#x6210;&#x4e00;&#x500b;&#x55ae;&#x8a5e;&#x3002",{"_index":3344,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x7136;&#x5f8c;&#x518d;&#x7d71;&#x4e00;&#x63d2;&#x5165",{"_index":1733,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x7136;&#x5f8c;&#x624d;&#x8ce6;&#x4e88;&#x503c",{"_index":899,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x7136;&#x5f8c;&#x628a;obj2.b&#x6539;&#x6210;100",{"_index":1470,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x7248;&#x672c;)&#xff1a",{"_index":1341,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x7269;&#x4ef6",{"_index":1025,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"this.html#bind-apply-call":{}}}],["x7269;&#x4ef6;&#x4e0a",{"_index":1246,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x7269;&#x4ef6;&#x4e0b;&#x547c;&#x53eb;&#x6703;&#x5f71;&#x97ff",{"_index":1931,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["x7269;&#x4ef6;&#x52a0;&#x4e0a;s",{"_index":1290,"title":{},"body":{"core.html#屬性特徵":{}}}],["x7269;&#x4ef6;&#x53d6;&#x503c",{"_index":1039,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x7269;&#x4ef6;&#x53d6;&#x503c;&#x5c6c;&#x6027;&#x7528;&#x5b57;&#x4e32",{"_index":1044,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x7269;&#x4ef6;&#x53ef;&#x4ee5;&#x7528;&#x55ae;&#x5f15;&#x865f",{"_index":1121,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x7269;&#x4ef6;&#x53ef;&#x96a8;&#x610f;&#x589e;&#x52a0;&#x5c6c;&#x6027",{"_index":1103,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x7269;&#x4ef6;&#x5be6;&#x5b57",{"_index":943,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x7269;&#x4ef6;&#x5c6c;&#x6027",{"_index":3238,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x7269;&#x4ef6;&#x7684",{"_index":1941,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["x7269;&#x4ef6;&#x7684;&#x53c3;&#x8003;&#x4f4d;&#x5740;&#x4e0d;&#x540c",{"_index":1019,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x7269;&#x4ef6;&#x7684;&#x578b;&#x5225",{"_index":1223,"title":{},"body":{"core.html#this":{}}}],["x7269;&#x4ef6;&#x7684;&#x65b9;&#x6cd5;&#x8abf;&#x7528",{"_index":1930,"title":{"this.html#物件的方法調用-As-an-object-method":{}},"body":{}}],["x7269;&#x4ef6;&#x7684;mynam",{"_index":1212,"title":{},"body":{"core.html#this":{}}}],["x7269;&#x4ef6;&#x8207;&#x7269;&#x4ef6",{"_index":1015,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x7269;&#x4ef6;&#x8207;&#x975e;&#x7269;&#x4ef6",{"_index":1013,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x7269;&#x4ef6;&#x88e1;&#x9762;&#x642d;&#x914d;&#x7bad;&#x982d;&#x51fd;&#x6a39;&#x6703;&#x51fa;&#x932f",{"_index":1356,"title":{},"body":{"core.html#箭頭函數":{}}}],["x7269;&#x4ef6;&#x8a18;&#x61b6;&#x9ad4;&#x7a7a;&#x9593",{"_index":1064,"title":{"core.html#物件記憶體空間":{}},"body":{}}],["x7269;&#x4ef6;&#x8b8a;&#x6578",{"_index":1067,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["x7269;&#x4ef6;&#xff0c;&#x6b64;&#x6642",{"_index":2263,"title":{},"body":{"api/promise.html#Promise":{}}}],["x7269;&#x4ef6;(&#x9663;&#x5217",{"_index":1082,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x7279;&#x5b9a;&#x573a;&#x666f;&#x4e0b;&#x4ee3;&#x66ff;&#x4f18;&#x5316",{"_index":3220,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x7279;&#x6b8a;&#x72c0;&#x6cc1",{"_index":1008,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x72c0;&#x614b",{"_index":2269,"title":{},"body":{"api/promise.html#Promise":{}}}],["x72c0;&#x614b;&#x78bc",{"_index":235,"title":{"RESTfulAPI.html#狀態碼":{}},"body":{}}],["x72c0;&#x614b;&#x78bc;&#x662f",{"_index":2835,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x72c0;&#x614b;&#xff0c;&#x52a0;&#x8f09;&#x700f;&#x89bd;&#x5668;&#x7de9;&#x5b58;&#xff0c;&#x4e26;&#x4e14;&#x97ff;&#x61c9;&#x982d;&#x6703;&#x8a2d;&#x7f6",{"_index":2889,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x72d7;&#x7684;&#x539f;&#x578b;&#x539f;&#x672c;&#x76f4;&#x63a5;&#x7e7c;&#x627f;&#x65bc;&#x52d5;&#x7269;&#x754c;&#x7684;&#x539f;&#x578b",{"_index":1267,"title":{},"body":{"core.html#繼承":{}}}],["x7372;&#x53d6;&#x968a;&#x5217;&#x9577;&#x5ea6",{"_index":3314,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x7372;&#x53d6;&#x968a;&#x982d;&#x5143;&#x7d20",{"_index":3312,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x7406;&#x89e3;&#x4e4b;&#x767d;&#x8bdd",{"_index":1316,"title":{},"body":{"core.html#屬性特徵":{}}}],["x751f;&#x6210;&#x65b0;&#x7684;&#x53c3;&#x8003;&#x7269;&#x4ef6",{"_index":1069,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["x751f;&#x6210;&#x65b0;&#x9663;&#x5217",{"_index":2450,"title":{},"body":{"array/array_methods.html#Array":{}}}],["x7528;&#x4e0d;&#x5230;301&#x72c0;&#x614b;&#x78bc;&#xff08;&#x6c38;&#x4e45;&#x91cd;&#x5b9a;&#x5411;&#xff09;&#x548c;302&#x72c0;&#x614b;&#x78bc;&#xff08;&#x66ab;&#x6642;&#x91cd;&#x5b9a;&#x5411;&#xff0c;307&#x4e5f;&#x662f;&#x9019;&#x500b;&#x542b;&#x7fa9;&#xff09;&#xff0c;&#x56e0;&#x70ba;&#x5b83;&#x5011;&#x53ef;&#x4ee5;&#x7531;&#x61c9;&#x7528;&#x7d1a;&#x5225;&#x8fd4;&#x56de;&#xff0c;&#x700f;&#x89bd;&#x5668;&#x6703;&#x76f4;&#x63a5;&#x8df3;&#x8f49;&#xff0c;api",{"_index":241,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x7528;&#x5168;&#x57df;&#x7269;&#x4ef6;&#x50b3;&#x503c",{"_index":1173,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x7528;&#x5230;&#x7684;3xx&#x72c0;&#x614b;&#x78bc;&#xff0c;&#x4e3b;&#x8981;&#x662f",{"_index":243,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x7528;&#x65bc;&#x5ba3;&#x544a;&#x4e00;&#x500b;&#x300c;&#x53ea;&#x4f5c;&#x7528;&#x5728;&#x7576;&#x524d;&#x5340;&#x584a;&#x7684;&#x8b8a;&#x6578;&#x300d;&#xff0c;&#x521d;&#x59cb;&#x503c;&#x53ef;&#x9078;&#x64c7;&#x6027;&#x7684;&#x8a2d;&#x5b9a;&#x3002",{"_index":3173,"title":{},"body":{"statements/let.html#let":{}}}],["x7528;&#x7acb;&#x5373;&#x57f7;&#x884c;&#x51fd;&#x6578",{"_index":390,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x7528;&#x7acb;&#x5373;&#x57f7;&#x884c;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x5275;&#x9020;&#x4e86;&#x65b0;&#x7684;&#x51fd;&#x6578;&#x4f5c;&#x7528;&#x57df;&#x5c07;timer&#x51fd;&#x6578;&#x5305;&#x88f9;&#x4e86;&#x8d77;&#x4f86;&#xff0c;&#x4e26;&#x7528;j&#x6355;&#x7372;&#x4e86;&#x6bcf;&#x6b21;&#x5faa;&#x74b0;&#x6642;&#x7684;i",{"_index":393,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x7528;10&#x9032;&#x5236;&#x8f49;&#x63db",{"_index":2622,"title":{},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x7528;array.from&#x8f49;&#x6210;&#x7d14;&#x9663;&#x5217",{"_index":1360,"title":{},"body":{"core.html#箭頭函數":{}}}],["x7531;&#x65bc;&#x4e0a;&#x4e00;&#x500b;&#x968e;&#x6bb5;&#x7d50;&#x679c;&#x662f",{"_index":2298,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x7570;&#x6b65",{"_index":363,"title":{"asynchronous.html#異步":{}},"body":{}}],["x7570;&#x6b65;&#x51fd;&#x6578",{"_index":2301,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x7570;&#x6b65;&#x7684;&#x5de5;&#x5ee0;&#x51fd;&#x6578",{"_index":2723,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x7576",{"_index":1032,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"http/caching.html#強緩存":{}}}],["x7576;&#x4e2d;&#xff0c;&#x4e26;&#x4e0d;&#x662f;&#x7acb;&#x5373;&#x57f7;&#x884c;&#xff1b",{"_index":383,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x7576;&#x4f60;&#x62ff;&#x5230",{"_index":1813,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x7576;&#x6211;&#x5011;&#x9700;&#x8981;&#x70ba;&#x67d0;&#x500b;&#x5ba2;&#x6236;&#x7aef;&#x7684;&#x8acb;&#x6c42;&#x5275;&#x5efa;&#x4e00;&#x500b;session&#x7684;&#x6642;&#x5019;&#xff0c;&#x670d;&#x52d9;&#x5668;&#x9996;&#x5148;&#x6aa2;&#x67e5;&#x9019;&#x500b;&#x5ba2;&#x6236;&#x7aef;&#x7684;&#x8acb;&#x6c42;&#x88e1;&#x662f;&#x5426;&#x6709;&#x5305;&#x542b;&#x4e86;session&#x6a19;&#x8b58;&#xff0c;&#x5c31;&#x662f;&#x525b;&#x525b;&#x63d0;&#x5230;&#x7684",{"_index":2212,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7576;&#x700f;&#x89bd;&#x5668;&#x7684;&#x5f37;&#x7de9;&#x5b58;&#x5931;&#x6548;&#x7684;&#x6642;&#x5019;&#x6216;&#x8005;&#x8acb;&#x6c42;&#x982d;&#x4e2d;&#x8a2d;&#x7f6e;&#x4e86;&#x4e0d;&#x8d70;&#x5f37;&#x7de9;&#x5b58;&#xff0c;&#x4e26;&#x4e14;&#x5728;&#x8acb;&#x6c42;&#x982d;&#x4e2d;&#x8a2d;&#x7f6e;&#x4e86;if",{"_index":2887,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7576;&#x7136;&#xff0c;&#x6211;&#x5011;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x56de;&#x8abf;&#x51fd;&#x6578;&#xff0c;&#x4f46;&#x662f;&#x6211;&#x5011;&#x5df2;&#x7d93;&#x6709;&#x4e86",{"_index":2730,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x767c;&#x751f",{"_index":955,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x767e;&#x5206;&#x6bd4",{"_index":1817,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x7684",{"_index":255,"title":{},"body":{"RESTfulAPI.html#狀態碼":{},"math.html#Math":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"http/caching.html#強緩存":{}}}],["x7684;&#x4e0d;&#x8db3",{"_index":3246,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x7684;&#x4ee3;&#x8868;&#x503c;&#x548c;&#x4e00;&#x500b;&#x9663;&#x5217;&#x5f62;&#x5f0f;&#x7684;&#x503c;&#x7d44;(&#x6216;&#x662f;&#x4e00;&#x500b",{"_index":2981,"title":{},"body":{"global/function.html#call、apply、bind":{}}}],["x7684;&#x4f7f;&#x7528;&#x8005;&#x672a;&#x5fc5;&#x77e5;&#x9053;&#xff0c;url",{"_index":248,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x7684;&#x500b;&#x6578",{"_index":3187,"title":{},"body":{"string/split.html#split":{}}}],["x7684;&#x503c;&#x3002",{"_index":1714,"title":{},"body":{"performance.html#懶加載":{}}}],["x7684;&#x503c;&#x4ee3;&#x8868;&#x7684;&#x662f",{"_index":2907,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x503c;&#x662f",{"_index":2891,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x503c;&#x662f;&#x4e00;&#x500b",{"_index":2842,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7684;&#x503c;&#x7684;&#x5143;&#x7d20;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x6570;&#x7ec4;&#x3002",{"_index":2565,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x7684;&#x503c;&#x9032;&#x884c;&#x6bd4;&#x8f03;&#xff0c;&#x5982;&#x679c;&#x76f8;&#x7b49;&#xff0c;&#x8fd4;&#x56de",{"_index":2913,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x503c;&#x9032;&#x884c;&#x6bd4;&#x8f03;&#xff0c;&#x5982;&#x679c;&#x7cfb;&#x7d71;&#x6642;&#x9593;&#x8d85;&#x904e;&#x4e86",{"_index":2845,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7684;&#x503c;&#xff0c;&#x7de9;&#x5b58;&#x5931;&#x6548;&#x3002;&#x7531;&#x65bc;&#x548c;&#x7cfb;&#x7d71;&#x6642;&#x9593;&#x9032;&#x884c;&#x6bd4;&#x8f03;&#xff0c;&#x6240;&#x4ee5;&#x7576;&#x7cfb;&#x7d71;&#x6642;&#x9593;&#x548c;&#x670d;&#x52d9;&#x5668;&#x6642;&#x9593;&#x4e0d;&#x4e00;&#x81f4;&#x7684;&#x6642;&#x5019;&#xff0c;&#x6703;&#x6709;&#x7de9;&#x5b58;&#x6709;&#x6548;&#x671f;&#x4e0d;&#x51c6;&#x7684;&#x554f;&#x984c;&#x3002;expir",{"_index":2846,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7684;&#x512a;&#x5148;&#x7d1a;&#x5728;&#x4e09;&#x500b",{"_index":2847,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7684;&#x512a;&#x5148;&#x7d1a;&#x9ad8;&#x65bc",{"_index":2879,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7684;&#x5176;&#x4e2d;&#x4e4b;&#x4e00;&#xff0c",{"_index":2278,"title":{},"body":{"api/promise.html#Promise":{}}}],["x7684;&#x51fa;&#x73fe;&#x4e3b;&#x8981;&#x89e3;&#x6c7a;&#x4e86",{"_index":2925,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x52a0;&#x8f7d;&#x5b9e;&#x73b0",{"_index":270,"title":{"es6.html#Module-的加载实现":{}},"body":{}}],["x7684;&#x539f;&#x56e0;&#x3002",{"_index":1851,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x7684;&#x539f;&#x578b;&#x65b9;&#x6cd5;&#xff1a",{"_index":2265,"title":{},"body":{"api/promise.html#Promise":{}}}],["x7684;&#x53e6;&#x4e00;&#x500b;&#x624b;&#x6bb5;&#xff0c;&#x7686;&#x662f;&#x56de;&#x50b3;function&#x57f7;&#x884c;&#x7d50;&#x679c",{"_index":1967,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x7684;&#x5de5;&#x5ee0;&#x3002",{"_index":2745,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x7684;&#x610f;&#x601d;&#x662f;&#x50b3;&#x905e;&#x4e00;&#x500b;&#x51fd;&#x6578;&#xff0c;&#x5ef6;&#x9072;&#x4e00;&#x6bb5;&#x6642;&#x5019;&#x628a;&#x8a72;&#x51fd;&#x6578;&#x6dfb;&#x52a0;&#x5230",{"_index":381,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x7684;&#x610f;&#x601d;&#x662f;&#x5148;&#x5efa;&#x7acb;&#x4e00;&#x500b;&#x7a7a;&#x7269;&#x4ef6",{"_index":1487,"title":{},"body":{"copy.html#Object-assign":{}}}],["x7684;&#x6307;&#x5411",{"_index":1932,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["x7684;&#x6578;&#x503c",{"_index":1035,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x7684;&#x65b0;&#x8a9e;&#x6cd5;&#x3002;&#x4fee;&#x5fa9;&#x4e86;es5",{"_index":3245,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x7684;&#x65b9;&#x5f0f;&#x5efa;&#x7acb",{"_index":2262,"title":{},"body":{"api/promise.html#Promise":{}}}],["x7684;&#x65b9;&#x6848",{"_index":3221,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x7684;&#x65f6;&#x5019;&#x4f1a;&#x6536;&#x96c6;&#x4f9d;&#x8d56;&#xff0c;sett",{"_index":1318,"title":{},"body":{"core.html#屬性特徵":{}}}],["x7684;&#x65f6;&#x5019;&#x4f1a;&#x89e6;&#x53d1;&#x4f9d;&#x8d56;&#x66f4;&#x65b0",{"_index":1319,"title":{},"body":{"core.html#屬性特徵":{}}}],["x7684;&#x6642;&#x5019;&#xff0c;&#x6703;&#x5c07;&#x9019;&#x5169;&#x500b;&#x5c6c;&#x6027;&#x503c;&#x5230;&#x670d;&#x52d9;&#x7aef;&#x53bb;&#x9a57;&#x8b49;&#x662f;&#x5426;&#x547d;&#x4e2d;&#x5354;&#x5546;&#x7de9;&#x5b58;&#xff0c;&#x5982;&#x679c;&#x547d;&#x4e2d;&#x4e86;&#x5354;&#x5546;&#x7de9;&#x5b58;&#xff0c;&#x6703;&#x8fd4;&#x56d",{"_index":2888,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x6642;&#x9593",{"_index":1710,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x7684;&#x6642;&#x9593;&#xff0c;&#x4e26;&#x653e;&#x5230",{"_index":2911,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x66ff;&#x8eab",{"_index":3007,"title":{},"body":{"global/function.html#bind":{}}}],["x7684;&#x6838;&#x5fc3;&#x601d;&#x60f3;&#x5c31;&#x662f;&#xff0c;&#x5ba2;&#x6236;&#x7aef;&#x767c;&#x51fa;&#x7684;&#x6578;&#x64da;&#x64cd;&#x4f5c;&#x6307;&#x4ee4;&#x90fd;&#x662f;&#x201d;&#x52d5;&#x8a5",{"_index":218,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x7684;&#x683c;&#x5f0f;&#x662f;&#x975e;&#x5e38;&#x56b4;&#x683c;&#x7684;&#xff0c;&#x591a;&#x4e00;&#x500b;&#x9017;&#x865f;&#x5c11;&#x4e00;&#x500b;&#x9017;&#x865f;&#xff0c;&#x90fd;&#x6703;&#x5c0e;&#x81f4;&#x51fa;&#x73fe;&#x932f;&#x8aa4;&#xff0c",{"_index":1123,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x7684;&#x6d6e;&#x9ede;&#x6578;&#x4e26;&#x4e0d;&#x80fd;&#x7cbe;&#x78ba;&#x5730;&#x8868;&#x9054;&#x5c0f;&#x6578;&#xff08;&#x6bd4;&#x5982;&#x8aaa;0.1&#xff09;&#xff0c",{"_index":1827,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{}}}],["x7684;&#x7279;&#x5fb5",{"_index":401,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x7684;&#x7279;&#x6027;&#xff0c;&#x8fd9;&#x4e5f;&#x5c31;&#x662f",{"_index":1313,"title":{},"body":{"core.html#屬性特徵":{}}}],["x7684;&#x7d50;&#x679c",{"_index":2274,"title":{},"body":{"api/promise.html#Promise":{}}}],["x7684;&#x7d50;&#x679c;&#xff08;&#x8a72;&#x627f;&#x8afe;&#x5df2;&#x7d93;&#x88ab;&#x5be6;&#x73f",{"_index":2272,"title":{},"body":{"api/promise.html#Promise":{}}}],["x7684;&#x898f;&#x5247;&#xff1a",{"_index":956,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x7684;&#x898f;&#x7bc4;&#xff0c;&#x8acb;&#x9078;&#x64c7;&#x6700;&#x5f8c;&#x4e00;&#x500b;&#x9078;&#x9805;&#x3002",{"_index":1345,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x7684;&#x89e3;&#x6c7a;&#x65b9;&#x6cd5",{"_index":1030,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x7684;&#x8abf;&#x7528;&#x65b9;&#x5f0f",{"_index":1196,"title":{},"body":{"core.html#this":{}}}],["x7684;&#x904b;&#x4f5c",{"_index":2293,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x7684;hoisting&#x76f8;&#x540c;&#x6982;&#x5ff5",{"_index":1339,"title":{},"body":{"core.html#const":{}}}],["x7686;&#x662f;&#x56de;&#x50b3;function&#x57f7;&#x884c;&#x7d50;&#x679c",{"_index":2994,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x76e1;&#x53ef;&#x80fd;&#x4e0d;&#x8981;&#x4f7f;&#x7528;simpl",{"_index":1205,"title":{},"body":{"core.html#this":{}}}],["x76e1;&#x53ef;&#x80fd;&#x4e0d;&#x8981;&#x8abf;&#x7528;thi",{"_index":1235,"title":{},"body":{"core.html#this":{}}}],["x76e3;&#x807d;&#x662f;div1",{"_index":304,"title":{},"body":{"event.html#代理":{}}}],["x76ee;&#x524d;&#x53ea;&#x6709;&#x7e7c;&#x627f;&#x539f;&#x578b;prototyp",{"_index":1270,"title":{},"body":{"core.html#繼承":{}}}],["x76ee;&#x6a19;&#x7269;&#x4ef6;&#x672c;&#x8eab;&#x4e5f;&#x88ab;&#x6539;&#x8b8a;&#x3002",{"_index":3025,"title":{},"body":{"object/assign.html#合併物件":{}}}],["x76f4;&#x63a5;&#x64cd;&#x4f5c;&#x7269;&#x4ef6;&#x672c;&#x8eab",{"_index":1286,"title":{},"body":{"core.html#屬性特徵":{}}}],["x76f4;&#x63a5;&#x8f38;&#x51fa;&#xff0c;1",{"_index":372,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x76f4;&#x8b6f;&#x5668",{"_index":887,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x76f4;&#x8b6f;&#x5668;&#x8f49;&#x63db;&#x904e;&#x7a0b",{"_index":881,"title":{"core.html#JavaScript-直譯器轉換過程":{}},"body":{}}],["x76f8;&#x7576;&#x65bc;&#x7d66;&#x5c0d;&#x8c61;&#x6dfb;&#x52a0;&#x4e86;x&#x5c6c;&#x6027;&#x3002",{"_index":3128,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x770b;&#x5230;&#x51fd;&#x5f0f;&#x662f;&#x76f4;&#x63a5;&#x57f7;&#x884c;&#x7684",{"_index":1207,"title":{},"body":{"core.html#this":{}}}],["x770b;&#x898b;&#x7269;&#x4ef6;&#x6240;&#x6709;&#x5c6c;&#x6027;&#x5167;&#x5bb9",{"_index":1080,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x77e5;&#x591a;&#x5c11",{"_index":2101,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["x78ba;&#x4fdd;&#x7a7a;&#x7269;&#x4ef6",{"_index":1299,"title":{},"body":{"core.html#屬性特徵":{}}}],["x78bc",{"_index":2893,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x78bc;&#x662f;&#x4ee5",{"_index":2901,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7981;&#x7528;&#x5354;&#x5546;&#x7de9;&#x5b58",{"_index":2863,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x79c1;&#x6709;&#x65b9;&#x6cd5",{"_index":1190,"title":{},"body":{"core.html#函式工廠":{}}}],["x79d1;&#x5b78;&#x7b26;&#x865f;&#x8655;&#x7406",{"_index":1821,"title":{"math.html#科學符號處理":{},"cases/math.html#科學符號處理":{}},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x79d2;&#x3002",{"_index":2873,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x79d2;&#x4e4b;&#x5f8c;&#x89f8;&#x767c;&#xff0c;&#x800c;&#x5faa;&#x74b0;&#x5b8c;&#x7684;&#x8f38;&#x51fa;&#x662f;&#x7acb;&#x5373;&#x57f7;&#x884c;&#x7684",{"_index":369,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x79d2;&#x4e4b;&#x5f8c;&#xff0c;&#x8f38;&#x51fa",{"_index":373,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x79d2;&#x7684;&#x8d85;&#x6642;&#x6642;&#x9593;&#x4e4b;&#x5f8c;&#xff0c;&#x518d;&#x6b21;&#x8acb;&#x6c42;&#x8cc7;&#x6e90;&#xff1a",{"_index":2877,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7a0b;&#x5e8f;&#x7684;&#x8a9e;&#x6cd5;&#x5206;&#x6790;(pars",{"_index":952,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x7a0b;&#x5f0f",{"_index":912,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x7a4d;&#x5206;&#x3002",{"_index":3206,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x7a4d;&#x5206;&#xff0c;&#x666e;&#x901a;&#x7528;&#x6236;&#x8d08;&#x9001",{"_index":3205,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x7acb;&#x5373;&#x51fd;&#x5f0f",{"_index":944,"title":{"core.html#立即函式":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["x7acb;&#x5373;&#x51fd;&#x5f0f;&#x4e00;&#x500b;&#x529f;&#x80fd",{"_index":1184,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["x7acb;&#x5373;&#x51fd;&#x5f0f;&#xff1a",{"_index":1953,"title":{"this.html#立即函式：":{}},"body":{}}],["x7acb;&#x5373;&#x51fd;&#x5f0f;(iif",{"_index":1154,"title":{"core.html#立即函式-IIFE":{}},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x7acb;&#x5373;&#x547c;&#x53eb;&#x51fd;&#x5f0f;&#x8868;&#x9054;&#x5f0f",{"_index":1155,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x7acb;&#x5373;&#x57f7;&#x884c",{"_index":1162,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x7acb;&#x99ac;&#x8abf;&#x7528;clos",{"_index":2305,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x7b26;&#xff0c;&#x7576;&#x670d;&#x52d9;&#x7aef;&#x7684;&#x6587;&#x4ef6;&#x8b8a;&#x5316;&#x7684;&#x6642;&#x5019;&#xff0c;&#x5b83;&#x7684",{"_index":2896,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7b2c;&#x4e00;&#x500b;for&#x8ff4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x70ba",{"_index":3322,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x7b2c;&#x4e00;&#x65b9",{"_index":2152,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e00;&#x65b9;cookie&#x548c;&#x7b2c;&#x4e09;&#x65b9;cookie&#x5340;&#x5225",{"_index":2158,"title":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e00;&#x65b9;cookie&#x63a5;&#x53d7;&#x7387;&#x9ad8;&#xff0c;&#x66f4;&#x6e96;&#x78ba;&#xff0c;&#x6c92;&#x6709;&#x7279;&#x6b8a;&#x9700;&#x8981;&#x5c31;&#x7528;&#x4ed6;&#x3002",{"_index":2174,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e00;&#x6b21;&#x52a0;&#x8f09;&#xff0c;&#x9801;&#x9762;&#x6703;&#x5411;&#x670d;&#x52d9;&#x5668;&#x8acb;&#x6c42;&#x6578;&#x64da;&#xff0c;&#x4e26;&#x5728",{"_index":2870,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7b2c;&#x4e00;&#x6b21;&#x57f7;&#x884c",{"_index":2066,"title":{},"body":{"variable.html#Hoisting":{}}}],["x7b2c;&#x4e09;&#x65b9",{"_index":2165,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e09;&#x65b9;cooki",{"_index":2176,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e09;&#x65b9;cookie&#x53ef;&#x4ee5;&#x8de8;&#x57df;&#x8ddf;&#x8e64;&#xff0c;&#x7279;&#x5225;&#x9700;&#x6c42;&#x53ef;&#x4ee5;&#x61c9;&#x7528;&#x3002",{"_index":2175,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e09;&#x65b9;cookie&#x7684;&#x512a;&#x52e2;&#x548c;&#x61c9;&#x7528",{"_index":2191,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e8c;&#x5c64;&#x662f;&#x50b3;&#x53c3;&#x8003;&#x7684;&#x5f62;&#x5f0f",{"_index":1091,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x7b2c;&#x4e8c;&#x6b21;&#x52a0;&#x8f09;&#xff0c;d",{"_index":2874,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7b2c;&#x4e8c;&#x6b21;&#x57f7;&#x884c",{"_index":2067,"title":{},"body":{"variable.html#Hoisting":{}}}],["x7b2c;&#x4e8c;&#x6b21;&#x8acb;&#x6c42;&#x8cc7;&#x6e90;&#xff0c;&#x670d;&#x52d9;&#x7aef;&#x6839;&#x64da;&#x8acb;&#x6c42;&#x982d;&#x4e2d;&#x7684",{"_index":2923,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7b2c;53&#x4f4d;&#x958b;&#x59cb;)&#x3002;&#x7576;&#x7136;&#xff0c;&#x4ee3;&#x50f9;&#x5c31;&#x662f;&#xff0c;0.1&#x5728;&#x8a08;&#x7b97;&#x6a5f;&#x5167;&#x90e8;&#x6839;&#x672c;&#x5c31;&#x4e0d;&#x662f;&#x7cbe;&#x78ba;&#x7684;0.1&#xff0c;&#x800c;&#x662f;&#x4e00;&#x500b;&#x6709;&#x820d;&#x5165;&#x8aa4;&#x5dee;&#x7684;0.1&#x3002;&#x7576;&#x4ee3;&#x78bc;&#x88ab;&#x7de8;&#x8b6f;&#x6216;&#x89e3;&#x91cb;&#x5f8c;&#xff0c;0.1&#x5df2;&#x7d93;&#x88ab;&#x56db;&#x6368;&#x4e94;&#x5165;&#x6210;&#x4e00;&#x500b;&#x8207;&#x4e4b;&#x5f88;&#x63a5;&#x8fd1;&#x7684;&#x8a08;&#x7b97;&#x6a5f;&#x5167;&#x90e8;&#x6578;&#x5b57;&#xff0c;&#x4ee5;&#x81f3;&#x65bc;&#x8a08;&#x7b97;&#x9084;&#x6c92;&#x958b;&#x59cb;&#xff0c;&#x4e00;&#x500b;&#x5f88;&#x5c0f;&#x7684;&#x820d;&#x5165;&#x932f;&#x8aa4;&#x5c31;&#x5df2;&#x7d93;&#x7522;&#x751f;&#x4e86;&#x3002;&#x9019;&#x4e5f;&#x5c31;&#x662f",{"_index":1849,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x7b49;&#x4e0d;&#x80fd;&#x7de9;&#x5b58;&#x6b64;&#x97ff;&#x61c9",{"_index":2854,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7b49;&#x51fd;&#x6578;&#x8abf;&#x7528;&#x5b8c",{"_index":2302,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x7b49;&#x540c;&#x65bc",{"_index":332,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x7b49;&#x65b9;&#x6cd5;&#xff0c",{"_index":2490,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x7b49;&#x7de9;&#x5b58",{"_index":2856,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7b54;&#x6848;&#x662f;&#xff1a",{"_index":1847,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x7bad;&#x982d;&#x51fd;&#x5f0f",{"_index":1984,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x7bad;&#x982d;&#x51fd;&#x5f0f;&#x6c92;&#x6709;&#x81ea;&#x5df1;&#x7684;thi",{"_index":1348,"title":{},"body":{"core.html#箭頭函數":{}}}],["x7bad;&#x982d;&#x51fd;&#x5f0f;(es6",{"_index":1204,"title":{},"body":{"core.html#this":{}}}],["x7bad;&#x982d;&#x51fd;&#x6578",{"_index":1346,"title":{"core.html#箭頭函數":{}},"body":{"core.html#箭頭函數":{},"global/function.html#cab-call-apply-vs-bind":{},"global/function.html#bind":{}}}],["x7c21;&#x6613;&#x547c;&#x53eb",{"_index":1200,"title":{"this.html#簡易呼叫":{}},"body":{"core.html#this":{}}}],["x7c21;&#x6613;&#x547c;&#x53eb;&#x4e0b",{"_index":1234,"title":{},"body":{"core.html#this":{}}}],["x7d14;&#x503c",{"_index":1078,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x7d14;&#x503c;&#x7121;&#x6cd5;&#x65b0;&#x589e;&#x5c6c;&#x6027",{"_index":1072,"title":{"core.html#純值無法新增屬性":{}},"body":{"core.html#物件記憶體空間":{}}}],["x7d14;&#x503c;&#x7dad;&#x6301;&#x539f;&#x578b;&#x5225",{"_index":1232,"title":{},"body":{"core.html#this":{}}}],["x7d1a;&#x5225;&#x53ef;&#x4ee5;&#x4e0d;&#x8003;&#x616e;&#x9019;&#x5169;&#x7a2e;&#x60c5;&#x6cc1;&#x3002",{"_index":242,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x7d22;&#x5f15;&#x987a;&#x5e8f",{"_index":3235,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x7d44;&#x5408;&#x7684;&#x5de5;&#x5ee0;&#x51fd;&#x6578",{"_index":2702,"title":{"function/factory​_factory.html#組合的工廠函數":{}},"body":{}}],["x7d50;&#x69cb;&#x4e2d;&#x3002",{"_index":1740,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x7d66;&#x4e0d;&#x540c;&#x7684;&#x503c;&#x3000;&#x505a;&#x76f8;&#x540c;&#x7684;&#x4e8b;&#x60c5",{"_index":1189,"title":{},"body":{"core.html#函式工廠":{}}}],["x7d81;&#x5b9a;&#x5927;&#x6cd5",{"_index":3014,"title":{},"body":{"global/function.html#bind":{}}}],["x7d93;&#x5178;&#x7684;&#x96d9;&#x7aef;&#x968a;&#x5217;&#x554f;&#x984c;&#xff1a;&#x7ffb;&#x8f49;&#x5b57;&#x7b26;&#x4e32;&#x88e1;&#x7684;&#x55ae;&#x8a5",{"_index":3335,"title":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}},"body":{}}],["x7dad;&#x57fa;&#x767e;&#x79d1",{"_index":1118,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x7db2;&#x57df;&#x4e2d;&#x3002",{"_index":2164,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7db2;&#x57df;&#x4e2d;&#xff0c;&#x9019;&#x4fbf;&#x662f;&#x7b2c;&#x4e09;&#x65b9",{"_index":2171,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7db2;&#x9801;&#x7b2c;&#x4e09;&#x65b9",{"_index":2196,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7de9;&#x5b58",{"_index":2931,"title":{},"body":{"http/caching.html#References":{}}}],["x7e7c;&#x627f",{"_index":1252,"title":{"core.html#繼承":{}},"body":{}}],["x7e7c;&#x627f;&#x7269;&#x4ef6;&#x7684;&#x539f;&#x578b",{"_index":1114,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x7e7c;&#x7e8c;&#x9075;&#x5faa",{"_index":2292,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x7f3a;&#x9ed",{"_index":2195,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x800c",{"_index":1968,"title":{},"body":{"this.html#bind-apply-call":{},"api/promise.html#Promise":{}}}],["x800c;&#x4e0d;&#x662f",{"_index":2734,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x800c;&#x4f7f;&#x7528;&#x7b2c;&#x4e09;&#x65b9;cookie&#xff0c;&#x90a3;&#x9ebc;&#x7121;&#x8ad6;&#x591a;&#x5c11;&#x500b;&#x57df;&#xff0c;&#x90fd;&#x53ea;&#x6709;&#x4e00;&#x500b;cookie&#xff0c;&#x4e00;&#x500b;&#x5c6c;&#x65bc;&#x7b2c;&#x4e09;&#x65b9;&#x57df;&#x7684;cookie&#xff0c;&#x7db2;&#x7ad9;&#x4e0b;&#x6240;&#x6709;&#x57df;&#x90fd;&#x80fd;&#x5171;&#x4eab;&#x9019;&#x500b;cookie&#xff0c;&#x90a3;&#x9ebc;&#x6240;&#x6709;&#x7684;&#x884c;&#x70ba;&#x90fd;&#x80fd;&#x88ab;&#x95dc;&#x806f;&#x8d77;&#x4f86;&#x5206;&#x6790;&#x3002",{"_index":2194,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x800c;&#x5982;&#x679c;&#x4e0a;&#x4e00;&#x500b;&#x8cc7;&#x6e90;&#x52a0;&#x8f09;&#x5931;&#x6557;,&#x53ef;&#x80fd;&#x5c0e;&#x81f4;&#x5f9e;&#x7de9;&#x5b58;&#x52a0;&#x8f09;&#x7684;&#x8cc7;&#x6e90;&#x5931;&#x6557",{"_index":2100,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["x800c;&#x7b2c;&#x4e09;&#x65b9",{"_index":2155,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["x800c;&#x95dc;&#x9589;&#x700f;&#x89bd;&#x5668;&#x5f8c;&#x56e0;&#x70ba;cookie&#x6d88;&#x5931;&#x9020;&#x6210",{"_index":2227,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8072;&#x660e;&#x7684;&#x8b8a;&#x91cf;&#x4e0d;&#x6703;&#x63d0;&#x5347;,&#x4e26;&#x4e14;&#x6703;&#x7522;&#x751f;&#x66ab;&#x5b58;&#x6b7b;&#x5340;&#x3002;&#x5728",{"_index":3175,"title":{},"body":{"statements/let.html#let":{}}}],["x8072;&#x660e;&#x8b8a;&#x91cf;&#x4e4b;&#x524d;&#x8a2a;&#x554f;&#x8b8a;&#x91cf;&#x6703;&#x62cb;&#x51fa;&#x932f;&#x8aa4;&#x3002",{"_index":3176,"title":{},"body":{"statements/let.html#let":{}}}],["x80fd;&#x4ee3;&#x8868;&#x8a72;&#x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x7684;&#x6578;&#x5b57",{"_index":2012,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x81ea;&#x52d5;&#x5206;&#x865f;&#x63d2;&#x5165",{"_index":949,"title":{"core.html#ASI-自動分號插入":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x81ea;&#x8eab;&#x518d;&#x6b21;&#x8abf;&#x7528",{"_index":379,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x8207",{"_index":1042,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"this.html#Callback":{}}}],["x82f1;&#x6587;&#x539f;&#x6587;&#xff1a",{"_index":2748,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x842c;&#x7269;&#x5373;&#x5c0d;&#x8c61",{"_index":3057,"title":{},"body":{"operators/typeof.html#null":{}}}],["x85cd;&#x8272",{"_index":1005,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x86cb;&#x7cd5",{"_index":2718,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x86cb;&#x7cd5;*&#x662f;*&#x751c;&#x9ede",{"_index":2715,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x8868;&#x6578;&#x5b57;&#x5230;1",{"_index":2005,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x8868;&#x793a;&#x56b4;&#x683c;&#x76f8;&#x7b49;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#x985e;&#x578b;&#x548c;&#x503c;&#x90fd;&#x5fc5;&#x9808;&#x76f8;&#x540c;&#x3002;&#x5169;&#x500b;&#x7b49;&#x865f",{"_index":1614,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x8868;&#x793a;&#x57fa;&#x672c;&#x8a9e;&#x53e5;&#x7684;&#x57f7;&#x884c;&#x6b21;&#x6578;&#x662f;&#x4e00;&#x500b;&#x5e38;&#x6578;&#xff0c;&#x4e00;&#x822c;&#x4f86;&#x8aaa;&#xff0c;&#x53ea;&#x8981;&#x6f14;&#x7b97;&#x6cd5;&#x4e2d;&#x4e0d;&#x5b58;&#x5728;&#x8ff4;&#x5708;&#x8a9e;&#x53e5;&#xff0c;&#x5176;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x5c31;&#x662f;o(1",{"_index":3326,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x8868;&#x9054;&#x5f0f",{"_index":938,"title":{"core.html#陳述式-表達式":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x8868;&#x9054;&#x5f0f;&#x6703;&#x56de;&#x50b3;&#x7d50;&#x679c",{"_index":1951,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x88ab;&#x6539;&#x5230;&#x4e86",{"_index":1468,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x88dc;&#x6578;&#x5b57",{"_index":1573,"title":{"num.html#補數字":{}},"body":{}}],["x88dd;&#x98fe;&#x914d;&#x6599;&#x3002",{"_index":2721,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x88e1",{"_index":1321,"title":{},"body":{"core.html#Let":{}}}],["x88e1;&#x9762;&#x7684",{"_index":3000,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x8907;&#x88fd;&#x4e00;&#x4efd;obj1&#x53eb;&#x505a;obj2",{"_index":1469,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x8981;&#x597d;&#x65bc",{"_index":227,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x8981;&#x63d2;&#x5165",{"_index":1736,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x898b;&#x5927;&#x62ec;&#x865f",{"_index":1068,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["x898f;&#x5247;&#x662f;&#xff1a",{"_index":3203,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x898f;&#x7bc4;&#x6587;&#x4ef6",{"_index":1340,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x89e3;&#x51b3;provision",{"_index":2096,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["x89e3;&#x6c7a;&#x65b9;&#x6cd5;&#x662f;&#x4f7f;&#x7528",{"_index":334,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x89e3;&#x91cb",{"_index":3341,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x89e3;&#x984c;&#x601d;&#x8def;&#xff1a;&#x4f7f;&#x7528;&#x96d9;&#x7aef;&#x968a;&#x5217;&#x89e3;&#x984c",{"_index":3346,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x89f8;&#x767c",{"_index":1758,"title":{},"body":{"performance.html#事件節流":{}}}],["x8a08;&#x7b97;&#x5b8c;a.x,&#x518d;&#x8a08;&#x7b97",{"_index":3129,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x8a08;&#x7b97;&#x65b9;&#x5f0f;&#x4f86;&#x6c7a;&#x5b9a;&#xff09;&#x9054;&#x5230;&#x80fd;&#x5920;&#x89f8;&#x767c",{"_index":2904,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x8a08;&#x7b97;&#x6a5f;&#x8868;&#x793a;&#x5341;&#x9032;&#x5236;&#x662f;&#x63a1;&#x7528;&#x4e8c;&#x9032;&#x88fd;&#x8868;&#x793a;&#x7684;&#xff0c;&#x6240;&#x4ee5",{"_index":1835,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x8a08;&#x7b97;&#xff0c;&#x66f4;&#x5feb;&#x5c55;&#x73f",{"_index":1687,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x8a18;&#x5f97;&#x990a;&#x6210;&#x597d;&#x7fd2;&#x6163",{"_index":1168,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x8a2d;&#x5b9a;&#x5728",{"_index":2170,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8a2d;&#x5b9a;&#x5728;&#x60a8;&#x76ee;&#x524d;&#x9020;&#x8a2a;&#x4e4b;&#x7db2;&#x57df;&#x4e2d",{"_index":2159,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8a2d;&#x5b9a;&#x5728;&#x76ee;&#x524d;&#x9020;&#x8a2a;&#x7db2;&#x57df;&#x4ee5;&#x5916;&#x7684",{"_index":2166,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8a2d;&#x7f6e;&#x4e86;&#x4e00;&#x500b;cookie&#xff0c;&#x90a3;&#x9019;&#x500b;cookie&#x53ea;&#x80fd;&#x88ab",{"_index":2186,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8a2d;&#x8a08;&#x4e2d;&#xff0c;&#x6211;&#x5011;&#x90fd;&#x6703;&#x628a;&#x8cc7;&#x6599;&#x8a18;&#x9304;&#x5728",{"_index":2219,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8a72;&#x51fd;&#x6578;&#x6703;&#x7b49;&#x5f85;&#x5230;&#x51fd;&#x6578;&#x968a;&#x5217;&#x4e2d;&#x524d;&#x9762;&#x6240;&#x6709;&#x7684;&#x51fd;&#x6578;&#x904b;&#x884c;&#x5b8c;&#x7562;&#x4e4b;&#x5f8c;&#x624d;&#x6703;&#x904b;&#x884c",{"_index":385,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x8a72;&#x53c3;&#x6578;&#x5c0f;&#x65bc",{"_index":2623,"title":{},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x8a9e;&#x6cd5;&#x4f5c;&#x7528;&#x57df",{"_index":885,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x8a9e;&#x6cd5;&#x57fa;&#x672c;&#x55ae;&#x5143;&#x5316;(token",{"_index":882,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x8a9e;&#x6cd5;&#x89e3;&#x6790;&#x6642;&#x5c31;&#x5df2;&#x7d93;&#x78ba;&#x5b9a;&#x4f5c;&#x7528;&#x57df",{"_index":888,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x8aaa;&#x660e;&#xff1a",{"_index":3343,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x8abf;&#x6574;&#x539f;&#x578b;&#x7684;&#x65b9;&#x6cd5;&#x6642",{"_index":1248,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x8abf;&#x7528;clos",{"_index":2303,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x8acb;&#x5225;&#x5132;&#x5b58",{"_index":3008,"title":{},"body":{"global/function.html#bind":{}}}],["x8acb;&#x6c42;&#x982d;&#x5c6c;&#x6027;&#x4e2d;&#xff0c;&#x670d;&#x52d9;&#x7aef;&#x6839;&#x64da;&#x6587;&#x4ef6;&#x6700;&#x5f8c;&#x4e00;&#x6b21;&#x4fee;&#x6539;&#x6642;&#x9593;&#x548c",{"_index":2912,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x8acb;&#x8f38;&#x51fa;1&#x5230;400&#x4e4b;&#x9593;&#x6240;&#x6709;&#x6578;&#x5b57;&#x4e2d;&#x5305;&#x542b;&#x7684;1&#x7684;&#x500b;&#x6578;&#xff0c;&#x6bd4;&#x5982;&#x6578;&#x5b57;1&#x4e2d;&#x5305;&#x542b;&#x4e86;&#x4e00;&#x500b;1",{"_index":3184,"title":{},"body":{"string/split.html#split":{}}}],["x8b8a;&#x5c0d;&#x8c61",{"_index":3061,"title":{},"body":{"operators/typeof.html#null":{}}}],["x8b8a;&#x6578",{"_index":1062,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x8b8a;&#x6578;&#x6703;&#x81ea;&#x52d5;&#x88ab;&#x63d0;&#x5347",{"_index":2065,"title":{},"body":{"variable.html#Hoisting":{}}}],["x8b8a;&#x6578;&#x7121;&#x6cd5;&#x88ab;&#x522a;&#x9664;&#xff0c;&#x5c6c;&#x6027;&#x624d;&#x53ef;&#x4ee5",{"_index":1061,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x8b8a;&#x6578;&#x7684;&#x4f5c;&#x7528;&#x57df;&#x5728;&#x51fd;&#x5f0f;&#x5167",{"_index":2061,"title":{"variable.html#變數的作用域在函式內":{}},"body":{}}],["x8b8a;&#x91cf",{"_index":3050,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x8b93;&#x8cc7;&#x6e90;&#x52a0;&#x8f09;&#x66f4;&#x5feb",{"_index":1696,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x8b93;&#x9023;&#x7e8c;&#x9375;&#x5165;&#x4e0d;&#x8981;&#x983b;&#x7e41;&#x89f8;&#x767c",{"_index":1755,"title":{},"body":{"performance.html#事件節流":{}}}],["x8cc7;&#x6e90;&#x9700;&#x8981;&#x591a;&#x7d1a;&#x5206;&#x985e;&#xff0c;&#x56e0;&#x6b64;&#x5f88;&#x5bb9;&#x6613;&#x5beb;&#x51fa;&#x591a;&#x7d1a;&#x7684",{"_index":230,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x8cd3;&#x8a9e",{"_index":217,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x8cd3;&#x8a9e;&#x201d;&#x7684;&#x7d50;&#x69cb;&#x3002",{"_index":219,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x8ce6;&#x503c;&#x6210;&#x4e00;&#x500b;&#x901a;&#x7528;&#x7684;&#x9810;&#x89bd;&#x5716;&#xff0c;&#x4e0b;&#x62c9;&#x6642;&#x5019;&#x518d;&#x52d5;&#x614b;&#x8ce6;&#x503c;&#x6210;&#x6b63;&#x5f0f;&#x7684;&#x5716;&#x7247;&#x3002;&#x5982;&#x4e0b;&#xff0c;preview.png&#x662f;&#x9810;&#x89bd;&#x5716;&#x7247;&#xff0c;&#x6bd4;&#x8f03;&#x5c0f;&#xff0c;&#x52a0;&#x8f09;&#x5f88;&#x5feb;&#xff0c;&#x800c;&#x4e14;&#x5f88;&#x591a;&#x5716;&#x7247;&#x90fd;&#x5171;&#x7528;&#x9019;&#x500b;preview.png&#xff0c;&#x52a0;&#x8f09;&#x4e00;&#x6b21;&#x5373;&#x53ef;&#x3002;&#x5f85;&#x9801;&#x9762;&#x4e0b;&#x62c9;&#xff0c;&#x5716;&#x7247;&#x986f;&#x793a;&#x51fa;&#x4f86;&#x6642;&#xff0c;&#x518d;&#x53bb;&#x66ff;&#x63db;src&#x70ba",{"_index":1713,"title":{},"body":{"performance.html#懶加載":{}}}],["x8ce6;&#x503c;&#x662f;&#x5f9e;&#x53f3;&#x5411;&#x5de6;,&#x6b64;&#x6642;a&#x6307;&#x5411;&#x4e00;&#x500b;&#x65b0;&#x5c0d;&#x8c61;&#x3002",{"_index":3130,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x8ce6;&#x503c;&#x662f;&#x8868;&#x9054;&#x5f0f",{"_index":1950,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x8ce6;&#x503c;&#x7684;&#x512a;&#x5148;&#x6027;&#x5f88;&#x4f4e;&#x53ea;&#x6709;3",{"_index":992,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x8d77;&#x4e00;&#x500b;&#x670d;&#x52d9;&#x4f86;&#x9a57;&#x8b49;&#x5354;&#x5546;&#x7de9;&#x5b58;&#xff0c;&#x4ee3;&#x78bc;&#x5982;&#x4e0b;&#xff1a",{"_index":2916,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x8d77;&#x4e00;&#x500b;&#x670d;&#x52d9;&#x4f86;&#x9a57;&#x8b49;&#x5f37;&#x7de9;&#x5b58;&#x7684",{"_index":2860,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x8ddf",{"_index":998,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x8f03;&#x5feb",{"_index":2487,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x8f09;&#x5165;&#x7de9;&#x5b58;&#x8cc7;&#x6e90;,&#x8acb;&#x6c42;&#x6c92;&#x6709;&#x88ab;&#x767c;&#x9001",{"_index":2099,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["x8f38;&#x5165",{"_index":3336,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x8f38;&#x5165;&#x5b57;&#x7b26;&#x4e32;&#x53ef;&#x4ee5;&#x5728;&#x524d;&#x9762;&#x6216;&#x8005;&#x5f8c;&#x9762;&#x5305;&#x542b;&#x591a;&#x9918;&#x7684;&#x7a7a;&#x683c;&#xff0c;&#x4f46;&#x662f;&#x53cd;&#x8f49;&#x5f8c;&#x7684;&#x5b57;&#x7b26;&#x4e0d;&#x80fd;&#x5305;&#x62ec;&#x3002",{"_index":3345,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x8f38;&#x5165;&#x5b8c;&#x89f8;&#x767c;&#x6587;&#x5b57;&#x4fee;&#x6539;&#x4e8b;&#x4ef6",{"_index":1752,"title":{},"body":{"performance.html#事件節流":{}}}],["x8f38;&#x51fa",{"_index":3188,"title":{},"body":{"string/split.html#split":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x8f38;&#x51fa;&#x7684;&#x662f",{"_index":3243,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x8f38;&#x51fa;&#x7684;&#x662f;&#x503c;(valu",{"_index":3251,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x8f38;&#x51fa;&#x7684;&#x662f;&#x5c6c",{"_index":3240,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x8f38;&#x51fa;&#x7684;&#x662f;&#x5c6c;&#x6027;&#x540d;&#x7a31;(key)&#xff0c;for&#x2026;of",{"_index":3250,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x8f49",{"_index":1818,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x8f49;&#x6210",{"_index":1492,"title":{"copy.html#轉成-JSON-再轉回來":{}},"body":{}}],["x8f49;&#x6210;&#x6578;&#x5b57;&#x5f8c;&#x518d;&#x986f;&#x793a;&#xff0c;&#x5982;&#x4e0b;&#xff1a",{"_index":1816,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x8f49;&#x6578;&#x5b57",{"_index":1999,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x8f49;&#x70ba;&#x5c0f;&#x6578",{"_index":1576,"title":{},"body":{"num.html#補數字":{}}}],["x8fd4;&#x56de",{"_index":2563,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x9009;&#x9879;&#xff0c;vue",{"_index":1308,"title":{},"body":{"core.html#屬性特徵":{}}}],["x900f;&#x904e",{"_index":1125,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"api/promise.html#Promise":{}}}],["x900f;&#x904e;&#x5efa;&#x69cb;&#x5f0f;&#x4f86;&#x5efa;&#x7acb;&#x7684;&#x7269;&#x4ef6;&#xff0c",{"_index":987,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x900f;&#x904e;&#x958b;&#x767c;&#x5de5;&#x5177;network&#x53ef;&#x4ee5;&#x770b;&#x7d50;&#x679c",{"_index":1131,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x900f;&#x904e;prototype&#x6240;&#x65b0;&#x589e;&#x7684;&#x5c6c;&#x6027",{"_index":1242,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x900f;&#x904e;setter&#x6539;&#x8b8a;total&#x7684;&#x503c",{"_index":1294,"title":{},"body":{"core.html#屬性特徵":{}}}],["x9010;&#x500b;&#x8b80;&#x53d6;&#x5b57;&#x7b26;&#x4e32;&#x4e2d;&#x7684;&#x6bcf;&#x500b;&#x55ae;&#x8a5e;&#xff0c;&#x4f9d;&#x6b21;&#x653e;&#x5165;&#x96d9;&#x7aef;&#x968a;&#x5217;&#x7684;&#x5c0d;&#x982d",{"_index":3348,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x9019;&#x500b",{"_index":1956,"title":{},"body":{"this.html#Callback":{}}}],["x9019;&#x500b;&#x5340;&#x57df;&#x7121;&#x6cd5;&#x547c;&#x53eb;&#x8b8a;&#x6578",{"_index":1336,"title":{},"body":{"core.html#const":{}}}],["x9019;&#x500b;&#x547d;&#x4ee4;&#xff0c",{"_index":221,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x9019;&#x500b;&#x57df;&#x4e0b;&#x7684;&#x7db2;&#x9801;&#x8b80;&#x53d6;&#xff0c;&#x9019;&#x5c31;&#x662f;&#x7b2c;&#x4e00;&#x65b9;cookie&#x3002",{"_index":2181,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x9019;&#x500b;&#x57df;&#x540d;&#x4e0b;&#x53ef;&#x67e5;&#x627",{"_index":257,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x9019;&#x500b;&#x57df;&#x8a2a;&#x554f;&#xff0c",{"_index":2188,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x9019;&#x500b;&#x589e;&#x5f37;&#x7684;&#x5c0d;&#x8c61;&#x63a1;&#x7528;&#x4e00;&#x500b;&#x73fe;&#x6709;&#x5de5;&#x5ee0;&#xff0c;&#x4e26;&#x5c07;&#x5176;&#x5305;&#x88dd;&#x4ee5;&#x5275;&#x5efa;&#x8fd4;&#x56de;&#x5e36;&#x6709",{"_index":2743,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9019;&#x500b;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x7b2c;&#x4e00;&#x500b;&#x5b57;&#x7b26;&#x662f;&#x201c;3&#x201d;&#xff0c;&#x5b83;&#x4e26;&#x4e0d;&#x662f;&#x57fa;&#x790e;&#x57fa;&#x6578;2&#x7684;&#x4e00;&#x500b;&#x6709;&#x6548;&#x6578;&#x5b57;&#x3002;&#x6240;&#x4ee5;&#x9019;&#x500b;&#x5b50;&#x5b57;&#x7b26;&#x4e32;&#x5c07;&#x88ab;&#x89e3;&#x6790;&#x70ba;&#x7a7a;&#x3002;&#x5982;&#x679c;&#x5b50;&#x5b57;&#x7b26;&#x4e32;&#x88ab;&#x89e3;&#x6790;&#x6210;&#x7a7a;&#x4e86;&#xff0c;&#x51fd;&#x6578;&#x5c07;&#x8fd4;&#x56de;&#x70ba;nan&#x3002",{"_index":2624,"title":{},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x9019;&#x500b;&#x6771;&#x897f;&#x662f",{"_index":2988,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x9019;&#x500b;&#x7269;&#x4ef6",{"_index":1991,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x9019;&#x500b;&#x914d;&#x7f6e;&#x5c31;&#x597d",{"_index":3214,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x9019;&#x500b;&#x968e;&#x6bb5;&#x6703;&#x9032;&#x5165",{"_index":2297,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x9019;&#x5169;&#x7a2e;&#x65b9;&#x6cd5;&#x90fd;&#x662f;&#x5c0d;&#x9663;&#x5217;&#x4e2d;&#x7684;&#x5143;&#x7d20;&#x9032;&#x884c;&#x8fed;&#x4ee3;&#x3002",{"_index":2477,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x9019;&#x53ea;&#x662f;javascript&#x9075;&#x5faa;iee",{"_index":1824,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x9019;&#x610f;&#x5473;&#x8457;&#x6211;&#x5011;&#x7e3d;&#x662f;&#x80fd;&#x5920;&#x5c07;&#x5c0d;&#x8c61;&#x5e8f;&#x5217;&#x5316;&#x70ba;json&#xff0c;&#x9019;&#x5c0d;&#x65bc;&#x5728;&#x6703;&#x8a71;&#x4e4b;&#x9593;&#x6301;&#x4e45;&#x5316;&#xff0c;&#x901a;&#x904e;http&#x6216;websockets&#x767c;&#x9001;&#x5b83;&#x5011;&#xff0c;&#x4e26;&#x5c07;&#x5b83;&#x5011;&#x653e;&#x5165;&#x6578;&#x64da;&#x5b58;&#x5132;&#x5f88;&#x91cd;&#x8981;&#x3002",{"_index":2739,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9019;&#x662f;&#x56e0;&#x70ba;&#x4e00;&#x822c;&#x4f86;&#x8aaa;&#xff0c;&#x6211;&#x5011;&#x4e0d;&#x9700;&#x8981;&#x9019;&#x9ebc;&#x505a;&#x3002",{"_index":2737,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9019;&#x6642;&#x5019;&#x518d;&#x4fee;&#x6539;obj2.b&#x4e5f;&#x4e0d;&#x6703;&#x5f71;&#x97ff;obj1",{"_index":1490,"title":{},"body":{"copy.html#Object-assign":{}}}],["x9019;&#x6642;&#x5019;&#x6211;&#x5011;&#x6703;&#x5beb;&#x4e00;&#x4e9b;&#x7a0b;&#x5f0f;&#x4f86;&#x586b;&#x88dc;&#x67d0;&#x4e9b;&#x700f;&#x89bd;&#x5668;&#x4e0d;&#x652f;&#x63f4;&#x7684;&#x60c5;&#x6cc1;&#xff0c;&#x6211;&#x5011;&#x628a;&#x9019;&#x4e9b;&#x7a0b;&#x5f0f;&#x7a31;&#x505a",{"_index":1273,"title":{},"body":{"core.html#繼承":{}}}],["x9019;&#x6a23;&#x505a;&#x662f;&#x771f;&#x6b63;&#x7684",{"_index":1494,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["x9019;&#x6a23;&#x7684;&#x5de5;&#x5177;&#x8fd4;&#x56d",{"_index":2731,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9019;&#x6a23;&#x7684;&#x6578;&#x64da;&#x8981;&#x5c55;&#x793a;&#x6642;&#xff0c;&#x5efa;&#x8b70;&#x4f7f;&#x7528",{"_index":1814,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x9019;&#x7a2e",{"_index":232,"title":{},"body":{"RESTfulAPI.html#動詞":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x9019;&#x7a2e;&#x6df1;&#x5ea6;&#x5d4c;&#x5957;&#x7684;&#x7e2e;&#x9032;&#x6703;&#x4f7f;&#x7570;&#x6b65;&#x5de5;&#x5ee0;&#x96e3;&#x4ee5;&#x95b1;&#x8b80;&#x548c;&#x6e2c;&#x8a66;&#x3002",{"_index":2728,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9019;&#x88e1;&#x50b3;&#x904e;&#x53bb;&#x7684",{"_index":402,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x9019;&#x88e1;&#x7528;slice&#x548c;substr&#x5747;&#x53ef",{"_index":1578,"title":{},"body":{"num.html#補數字":{}}}],["x901a;&#x904e;&#x4e8b;&#x4ef6;&#x5192;&#x6ce1",{"_index":300,"title":{},"body":{"event.html#代理":{}}}],["x901a;&#x904e;&#x6bcf;&#x500b;&#x5143;&#x7d20;&#x7684;&#x56de;&#x8abf;&#x51fd;&#x6578;&#x5c07;&#x5176;&#x6620;&#x5c04;&#x5230;&#x65b0;&#x7684;&#x5143;&#x7d20;&#x4e0a;&#xff0c;&#x6700;&#x7d42;&#x8fd4;&#x56de;&#x4e00;&#x500b;&#x65b0;&#x7684;&#x9663;&#x5217;&#x3002",{"_index":2478,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x9032;&#x4f4d",{"_index":2014,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x7684;1",{"_index":2004,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x7684;2",{"_index":2009,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x9032;&#x5165;&#x57f7;&#x884c;&#x5806;&#x758a",{"_index":1193,"title":{},"body":{"core.html#this":{}}}],["x9032;&#x5230;&#x4e0b;&#x4e00;&#x4f4d",{"_index":2006,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x9032;&#x884c;&#x540c;&#x503c;&#x6bd4;&#x8f03;&#x3002;&#x4ed6;&#x6709;&#x8457;&#x81ea;&#x5df1;&#x7684;&#x7279;&#x6b8a;&#x7528;&#x9014;&#xff0c;&#x4e0d;&#x61c9;&#x8aaa;&#x4ed6;&#x66f4;&#x5bec;&#x9b06;&#x6216;&#x66f4;&#x56b4;&#x683c;&#x65bc;&#x5176;&#x4ed6;&#x7b49;&#x65bc;&#x64cd;&#x4f5c;&#x7b26",{"_index":1619,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x9032;&#x968a",{"_index":3309,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x9032;&#x968e;&#x6982;&#x5ff5",{"_index":1218,"title":{},"body":{"core.html#this":{}}}],["x9047;&#x5230;&#x4ee5;&#x4e0a;&#x7684;&#x6a19;&#x9ede;&#x7b26;&#x865f",{"_index":965,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x904b;&#x7b97;&#x5b50",{"_index":990,"title":{"core.html#運算子":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x904b;&#x7b97;&#x5b50;&#x512a;&#x5148;&#x5e8f",{"_index":991,"title":{"operators/precedence.html#運算子優先序":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x904b;&#x7b97;&#x5f0f;&#x8207;&#x904b;&#x7b97;&#x5b50",{"_index":940,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{}}}],["x904b;&#x7b97;&#x7b26",{"_index":2360,"title":{},"body":{"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#拼接兩個陣列":{}}}],["x904b;&#x7b97;&#x7b26;&#x6bd4",{"_index":3123,"title":{"operators/precedence.html#運算符比-運算符高":{}},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x904b;&#x7b97;&#x7b26;&#x9ad8",{"_index":3124,"title":{"operators/precedence.html#運算符比-運算符高":{}},"body":{}}],["x904b;&#x7b97;&#x7b26;&#x9ad8;,&#x5148;&#x8a08;&#x7b97",{"_index":3126,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x904b;&#x884c;&#x7684",{"_index":2486,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x904d;&#x6b77;&#x6240;&#x6709;&#x5143;&#x7d20",{"_index":2451,"title":{},"body":{"array/array_methods.html#forEach":{}}}],["x904e;&#x4e86",{"_index":2876,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x904e;&#x6ffe;&#x7b26;&#x5408;&#x689d;&#x4ef6;&#x7684;&#x5143;&#x7d20;&#xff0c;&#x751f;&#x6210;&#x65b0;&#x9663;&#x5217",{"_index":2455,"title":{},"body":{"array/array_methods.html#filter":{}}}],["x9078;&#x64c7;&#x6027",{"_index":1962,"title":{},"body":{"this.html#Callback":{}}}],["x907f;&#x514d;&#x591a;&#x7d1a",{"_index":229,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x9084;&#x80fd;&#x4e0d;&#x88ab;&#x8ce6;&#x503c",{"_index":1326,"title":{},"body":{"core.html#const":{}}}],["x908f;&#x8f2f;&#x904b;&#x7b97;&#x5b50;&#x53ca;&#x51fd;&#x5f0f;&#x9810;&#x8a2d;&#x503c",{"_index":1028,"title":{"core.html#邏輯運算子及函式預設值":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["x90fd;&#x4e0d;&#x6703;&#x512a;&#x5148;&#x57f7;&#x884c",{"_index":929,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x90fd;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x93c8;&#x63a5;&#x7684;&#x65b9;&#x5f0f;&#x4e0d;&#x65b7;&#x7684;&#x9032;&#x884c;&#x4e0b;&#x4e00;&#x500b;&#x4efb;&#x52d9",{"_index":2289,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x90fd;&#x5728",{"_index":256,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x90fd;&#x662f;&#x51fd;&#x5f0f;&#x8868;&#x9054;&#x5f0f",{"_index":1143,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x90fd;&#x662f;&#x7121;&#x9650;&#x5faa;&#x74b0;&#x7684;&#x4e8c;&#x9032;&#x5236;&#x4e86;&#xff0c;&#x6240;&#x4ee5;&#x5728;&#x5c0f;&#x6578;&#x4f4d;&#x672b;&#x5c3e;&#x8655;&#x9700;&#x8981;&#x5224;&#x65b7;&#x662f;&#x5426;&#x9032;&#x4f4d;&#xff08;&#x5c31;&#x548c;&#x5341;&#x9032;&#x5236;&#x7684;&#x56db;&#x6368;&#x4e94;&#x5165;&#x4e00;&#x6a23;&#xff09;&#x3002",{"_index":1834,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x90fd;&#x6703;&#x662f",{"_index":986,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x932f;&#x8aa4",{"_index":936,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x932f;&#x8aa4;&#xff0c;&#x53ea;&#x662f",{"_index":934,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x9375;&#x76e4;&#x4e8b;&#x4ef6",{"_index":1749,"title":{},"body":{"performance.html#事件節流":{}}}],["x93c8;&#x63a5",{"_index":2286,"title":{"api/promise.html#鏈接":{}},"body":{}}],["x9589;&#x5305",{"_index":1182,"title":{"core.html#閉包-Closure":{}},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["x958b;&#x555f;&#x5354;&#x5546;&#x7de9;&#x5b58",{"_index":2917,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x958b;&#x59cb",{"_index":959,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x958b;&#x982d;&#x7684;&#x4e00;&#x4e32;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x8aaa;&#x660e;&#x6b64;&#x6642;&#x5354;&#x5546;&#x7de9;&#x5b58;&#x7684;&#x6821;&#x9a57;&#x662f;&#x5f31;&#x6821;&#x9a57;&#x7684;&#xff0c;&#x53ea;&#x6709;&#x670d;&#x52d9;&#x5668;&#x4e0a;&#x7684;&#x6587;&#x4ef6;&#x5dee;&#x7570;&#xff08;&#x6839;&#x64da",{"_index":2903,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x958b;&#x982d;&#x7684;&#x5c6c;&#x6027;&#x503c;&#xff1f",{"_index":1720,"title":{},"body":{"performance.html#懶加載":{}}}],["x958b;&#x982d;&#x7684;&#x5c6c;&#x6027;&#x700f;&#x89bd;&#x5668;&#x6e32;&#x67d3;&#x7684;&#x6642;&#x5019;&#x6703;&#x5ffd;&#x7565;&#x6389;&#xff0c;&#x63d0;&#x9ad8;&#x6e32;&#x67d3;&#x6027;&#x80fd;&#x3002",{"_index":1724,"title":{},"body":{"performance.html#懶加載":{}}}],["x958b;&#x982d;&#xff0c;&#x56e0;&#x70ba",{"_index":1723,"title":{},"body":{"performance.html#懶加載":{}}}],["x95dc;&#x4fc2;&#x662f",{"_index":1964,"title":{},"body":{"this.html#Callback":{}}}],["x95dc;&#x4fc2;&#x800c;&#x4e0d;&#x662f",{"_index":2711,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x95dc;&#x6ce8;&#x5728;&#x54ea;&#x500b;&#x7269;&#x4ef6;&#x4e0b;&#x547c;&#x53eb",{"_index":1198,"title":{},"body":{"core.html#this":{}}}],["x95dc;&#x9375;&#x5b57;&#x8a2d;&#x70ba;&#x7d66;&#x5b9a;&#x7684;&#x53c3;&#x6578;&#xff0c;&#x4e26;&#x5728;&#x547c;&#x53eb;&#x6642;&#xff0c;&#x5e36;&#x6709;&#x63d0;&#x4f9b;&#x4e4b;&#x524d;&#xff0c;&#x7d66;&#x5b9a;&#x9806;&#x5e8f;&#x7684;&#x53c3;&#x6578;&#x3002",{"_index":2984,"title":{},"body":{"global/function.html#call、apply、bind":{}}}],["x9632;&#x6b62;&#x64f4;&#x5145",{"_index":1283,"title":{},"body":{"core.html#屬性特徵":{}}}],["x9650;&#x5236;&#x4f5c;&#x7528;&#x57df",{"_index":1185,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["x9650;&#x5236;&#x8b8a;&#x6578;&#x7684;&#x4f5c;&#x7528;&#x57df",{"_index":1166,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x9663;&#x5217",{"_index":1100,"title":{"core.html#陣列":{}},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"this.html#bind-apply-call":{},"statements/for.html#for…of與for…in的差別":{}}}],["x9663;&#x5217;&#x65b9;&#x6cd5",{"_index":2475,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x9663;&#x5217;&#x662f;&#x7269;&#x4ef6;&#x578b;&#x5225;&#x7684;&#x4e00;&#x7a2",{"_index":1101,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x9663;&#x5217;&#x7684;&#x539f;&#x578b",{"_index":1111,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x9663;&#x5217;6",{"_index":1104,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x9664;&#x4e86;&#x7b49;&#x65bc;&#x64cd;&#x4f5c;&#x7b26;&#xff0c;&#x9084;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":1618,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x9673;&#x8ff0;&#x5f0f",{"_index":937,"title":{"core.html#陳述式-表達式":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{}}}],["x9673;&#x8ff0;&#x5f0f;&#x8207;&#x5ba3;&#x544a;&#x5206;&#x985",{"_index":939,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{}}}],["x968a;&#x5217",{"_index":382,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x968e;&#x6bb5;&#x8d77;&#x4f5c;&#x7528;&#x3002",{"_index":953,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x968e;&#x78bc",{"_index":1829,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x96b1;&#x6027;&#x7684;&#x8f49;&#x63db",{"_index":975,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x96d6;&#x7136;&#x4e5f;&#x70ba;&#x6bcf;&#x4e00;&#x500b;&#x5143;&#x7d20;&#x6e96;&#x5099;&#x4e86;&#x56de;&#x8abf;&#x51fd;&#x6578;&#xff0c;&#x4f46;&#x537b;&#x4e0d;&#x8fd4;&#x56de;&#x65b0;&#x7684;&#x9663;&#x5217;&#x3002",{"_index":2479,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x96d6;&#x7136;obj1&#x8ddf;obj2&#x662f;&#x4e0d;&#x540c;&#x7269;&#x4ef6",{"_index":1479,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x96d9;&#x7aef;&#x968a;&#x5217;&#xff08;deque&#xff09",{"_index":3333,"title":{"string/queue.html#雙端隊列（Deque）":{}},"body":{"string/queue.html#時間複雜度":{}}}],["x96d9;&#x7cbe;&#x5ea6;&#x3002;&#x516d;&#x5341;&#x56db;&#x4f4d;&#x4e2d;&#x7b26;&#x865f;&#x4f4d;&#x4f54;&#x4e00;&#x4f4d;&#xff0c;&#x6574;&#x6578;&#x4f4d;&#x4f54;&#x5341;&#x4e00;&#x4f4d;&#xff0c;&#x5176;&#x9918;&#x4e94;&#x5341;&#x4e8c;&#x4f4d;&#x90fd;&#x70ba;&#x5c0f;&#x6578;&#x4f4d;&#x3002",{"_index":1831,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x9700;&#x6ce8;&#x610f;&#x57f7;&#x884c;&#x7d50;&#x679c",{"_index":964,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x975c;&#x614b;&#x4f5c;&#x7528;&#x57df",{"_index":886,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x975c;&#x614b;&#x8cc7;&#x6e90;&#x7684;&#x58d3;&#x7e2e;&#x5408;&#x4f75;&#xff08;j",{"_index":1690,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x975c;&#x614b;&#x8cc7;&#x6e90;&#x7de9;&#x5b58;&#xff08;&#x8cc7;&#x6e90;&#x540d;&#x7a31;&#x52a0",{"_index":1693,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x975e;&#x540c;&#x6b65;&#x57f7;&#x884c;&#x5b8c;&#x7562;&#xff08;&#x7121;&#x8ad6;&#x662f;&#x5426;&#x6b63;&#x78ba;&#x5b8c;&#x6210;&#xff09",{"_index":2268,"title":{},"body":{"api/promise.html#Promise":{}}}],["x975e;&#x540c;&#x6b65;&#x884c;&#x70ba;&#x5148;&#x79fb;&#x81f3;&#x4e8b;&#x4ef6;&#x4f47;&#x5217",{"_index":925,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x975e;&#x7acb;&#x523b;&#x57f7;&#x884c",{"_index":1215,"title":{},"body":{"core.html#this":{}}}],["x97ff;&#x61c9;&#x982d;&#x4e2d;&#xff0c;&#x7b2c;&#x4e8c;&#x6b21;&#x767c;&#x8d77;&#x8acb;&#x6c42;&#x7684;&#x6642;&#x5019;&#xff0c;&#x8acb;&#x6c42;&#x982d;&#x6703;&#x5e36;&#x4e0a;&#x4e0a;&#x4e00;&#x6b21;&#x97ff;&#x61c9;&#x982d;&#x4e2d;&#x7684",{"_index":2910,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x9801;&#x9762;&#x7684;&#x5168;&#x90e8;&#x8cc7;&#x6e90;&#x52a0;&#x8f09;&#x5b8c;&#x624d;&#x6703;&#x57f7;&#x884c;&#xff0c;&#x5305;&#x62ec;&#x5716;&#x7247;&#x3001;&#x8996;&#x983b;&#x7b49",{"_index":1743,"title":{},"body":{"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["x9806;&#x5e8f;&#x57f7;&#x884c;&#x53c3;&#x6578;&#x6240;&#x4ee5;&#x662f;1",{"_index":1217,"title":{},"body":{"core.html#this":{}}}],["x9806;&#x5e8f;&#x57f7;&#x884c;&#x53c3;&#x6578;&#x6240;&#x4ee5;&#x662f;6",{"_index":1216,"title":{},"body":{"core.html#this":{}}}],["x9810;&#x8a2d;&#x503c;&#x70ba",{"_index":1029,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x9810;&#x8a2d;&#x7684;session&#x5be6;&#x73fe;&#x65b9;&#x5f0f;&#x662f;&#x7531;cookie&#x4f86;&#x5be6;&#x4f5c;&#x7684;(&#x5229;&#x7528;&#x52a0;&#x5bc6;&#x8207;&#x8a2d;&#x5b9a;&#x904e;&#x671f;&#x6642;&#x9593;)&#x3002",{"_index":2235,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x982d;&#x5c6c;&#x6027;&#x672a;&#x66f4;&#x65b0;&#xff0c;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#x700f;&#x89bd;&#x5668;&#x76f4;&#x63a5;&#x4f7f;&#x7528;&#x4e86;&#x5f37;&#x7de9;&#x5b58;&#xff0c;&#x5be6;&#x969b;&#x6c92;&#x6709;&#x767c;&#x9001;&#x8acb;&#x6c42;&#x3002",{"_index":2875,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x985e;&#x9663;&#x5217;&#x4e26;&#x6c92;&#x6709;&#x7d55;&#x5927;&#x591a;&#x6578;&#x9663;&#x5217;&#x53ef;&#x4f7f;&#x7528;&#x7684;&#x65b9;&#x6cd5",{"_index":1181,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["x986f;&#x6027;&#x7684;&#x8f49;&#x63db",{"_index":974,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x9996;&#x5148;&#x53bb;&#x9664;&#x5b57;&#x7b26;&#x4e32;&#x5de6;&#x53f3;&#x7a7a;&#x683c",{"_index":3347,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x9a57;&#x8b49;&#x6587;&#x4ef6;&#x662f;&#x5426;&#x4fee;&#x6539;&#x3002",{"_index":2924,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x9ad8;&#x7d1a;&#x5de5;&#x5ee0",{"_index":2740,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9ed1;&#x8272",{"_index":1007,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x9ede",{"_index":1041,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x9ede;&#x64ca;&#x4e8b;&#x4ef6",{"_index":299,"title":{},"body":{"event.html#代理":{}}}],["x_",{"_index":2588,"title":{},"body":{"cases/replace.html":{}}}],["xa0",{"_index":1109,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["xd7",{"_index":1840,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["xff08;&#x82f1;&#x6587;&#xff1a;immedi",{"_index":1156,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["xff09",{"_index":1704,"title":{},"body":{"performance.html#優化原則和方向":{},"api/promise.html#Promise":{}}}],["xff0c",{"_index":3242,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["xff0c;&#x4e0d;&#x50c5;&#x53ef;&#x4ee5;&#x8a18;&#x9304;&#x4f60;&#x7684;&#x9ede;&#x9910;&#x865f;&#x78bc;&#xff0c;&#x9084;&#x53ef;&#x4ee5;&#x8a18;&#x61b6;&#x4f60;&#x7684;&#x9910;&#x9ede;&#x7d30;&#x7bc0;&#xff0c;&#x6d88;&#x8cbb;&#x8a18;&#x9304;&#x548c;&#x9ede;&#x9910;&#x559c;&#x597d;&#x2026;&#x7b49;&#x3002;&#x800c;&#x9019;&#x5c31;&#x89e3;&#x6c7a;&#x865f;&#x78bc;&#x724c;&#x907a;&#x5931;&#x9818;&#x4e0d;&#x5230;&#x9910;&#x7684;&#x554f;&#x984c;&#xff0c;&#x4f46;&#x662f;&#x4ed6;&#x4e0d;&#x662f;&#x8a18;&#x61b6;&#x4f60;&#x5e25;&#x6c23;&#x5f97;&#x7a7f;&#x642d;&#x6216;&#x9577;&#x50cf;&#xff0c;&#x800c;&#x662f;&#x9760;&#x8457;&#x6240;&#x8b02;&#x7684;sess",{"_index":2210,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["xff0c;&#x4e0d;&#x7ba1;&#x662f;&#x8ab0;&#x547c;&#x53eb;&#x4ed6;&#xff0c;&#x6216;&#x662f;&#x88ab;&#x5982;&#x4f55",{"_index":3002,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["xff0c;&#x4e14;&#x8fd4;&#x56de;&#x7684;&#x65b0;&#x9663;&#x5217;&#x53ef;&#x4ee5;&#x8b93;&#x4f60;&#x7e7c;&#x7e8c;&#x4f7f;&#x7528",{"_index":2488,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["xff0c;&#x4e26;&#x52a0;&#x8f09;&#x700f;&#x89bd;&#x5668;&#x7de9;&#x5b58;&#x3002",{"_index":2914,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["xff0c;&#x4ed6;&#x53ef;&#x4ee5;&#x8b93;&#x539f;&#x59cb;&#x9663;&#x5217;&#x7684;&#x6bcf;&#x4e00;&#x500b;&#x503c;&#x90fd;&#x6620;&#x5c04;&#x5230;&#x65b0;&#x7684;&#x9663;&#x5217;&#x4e0a;&#x3002",{"_index":2481,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["xff0c;&#x4ed6;&#x6c38;&#x9060;&#x90fd;&#x662f;&#x62ff;&#x5230;&#x539f;&#x5148;&#x4f5c;&#x7528;&#x57df;&#x7684",{"_index":3003,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["xff0c;&#x4ee3;&#x8868;&#x7684;&#x662f",{"_index":2894,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["xff0c;&#x4f46;&#x4f3c;&#x4e4e;&#x5f88;&#x591a;&#x4eba;&#x90fd;&#x6709;&#x4e00;&#x7a2e;&#x5f77;&#x5f7f;&#x700f;&#x89bd;&#x5668;&#x95dc;&#x6389;session&#x4e5f;&#x6703;&#x6d88;&#x5931;&#x7684;&#x932f;&#x89ba;&#xff0c;&#x4f46;&#x672c;&#x8cea;&#x4e0a;&#x4e26;&#x975e;&#x5982;&#x6b64;&#xff0c;&#x5c31;&#x50cf;&#x6703;&#x54e1;&#x5361;&#xff0c;&#x9664;&#x975e;&#x4f60;&#x4e3b;&#x52d5;&#x63d0;&#x51fa;&#x92b7;&#x5361;&#xff0c;&#x5426;&#x5247;&#x5e97;&#x5bb6;&#x4e0d;&#x6703;&#x522a;&#x9664;&#x9867;&#x5ba2;&#x8cc7;&#x6599;&#xff0c;&#x9019;&#x4ef6;&#x4e8b;&#x60c5;&#x5c0d;session&#x4f86;&#x8aaa;&#x4e5f;&#x5982;&#x51fa;&#x4e00;&#x8f4d;&#xff0c;&#x9664;&#x975e;&#x901a;&#x77e5;server&#x522a;&#x9664;session&#xff0c;&#x5426;&#x5247;server&#x7aef;&#x6703;&#x4e00;&#x76f4;&#x4fdd;&#x7559;&#x4f86;&#x4fdd;&#x6301;&#x6703;&#x8a71;&#x66a2;&#x901a;&#xff0c;&#x4f46;&#x700f;&#x89bd;&#x5668;&#x5f9e;&#x4f86;&#x4e0d;&#x6703;&#x4e3b;&#x52d5;&#x5728;&#x95dc;&#x9589;&#x524d;&#x901a;&#x77e5;&#x670d;&#x52d9;&#x5668;&#x8981;&#x95dc;&#x9589",{"_index":2225,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["xff0c;&#x547c;&#x53eb;&#x662f;&#x5728;&#x7269;&#x4ef6;&#x4e0b;&#x8abf;&#x7528;&#xff0c;&#x90a3;&#x9ebc",{"_index":1937,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["xff0c;&#x5728",{"_index":2836,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff0c;&#x5728;&#x700f;&#x89bd;&#x5668;&#x767c;&#x8d77;&#x8acb;&#x6c42;&#x6642;&#xff0c;&#x6703;&#x6839;&#x64da;&#x7cfb;&#x7d71;&#x6642;&#x9593;&#x548c",{"_index":2844,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff0c;&#x5982;&#x679c;&#x4eca;&#x5929;&#x907a;&#x5931;&#x6216;&#x662f;&#x88ab;&#x5225;&#x4eba;&#x5e79;&#x8d70;&#xff0c;&#x90a3;&#x4f60;&#x7684;&#x9910;&#x9ede;&#x5c31;&#x6703;&#x88ab;&#x5176;&#x4ed6;&#x4eba;&#x7d66;&#x9818;&#x8d70;&#xff0c;&#x66f4;&#x5225;&#x63d0;&#x95dc;&#x9589;&#x700f;&#x89bd;&#x5668;&#x4e4b;&#x5f8c;cookie&#x5c31;&#x6703;&#x6709;&#x88ab;&#x6e05;&#x9664;&#x7684;&#x98a8;&#x96aa;&#x4e86;&#x3002",{"_index":2202,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["xff0c;&#x5b83;&#x662f",{"_index":333,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["xff0c;&#x5b83;&#x662f;&#x66f4;&#x7cbe;&#x78ba;&#x800c;&#x4e14;&#x548c",{"_index":1623,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["xff0c;&#x5c6c;&#x6027;c&#x70ba;o3.c&#x7684;&#x503c;&#xff0c;&#x6700;&#x5f8c;&#x4e00;&#x500b;&#x51fa;&#x73fe;&#x7684;&#x5c6c;&#x6027;c&#x3002",{"_index":3027,"title":{},"body":{"object/assign.html#有相同屬性時合併物件區段":{}}}],["xff0c;&#x6548;&#x679c;&#x548c",{"_index":2882,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff0c;&#x662f;&#x570b;&#x969b;&#x6a19;&#x6e96;&#x5316;&#x7d44;&#x7e54;&#x7684;&#x65e5;&#x671f;&#x548c;&#x6642;&#x9593;&#x7684;&#x8868;&#x793a;&#x65b9;&#x6cd5",{"_index":2801,"title":{},"body":{"global/date.html#Date-prototype-toISOString":{}}}],["xff0c;&#x7b2c;&#x4e00;&#x6b21;&#x8acb;&#x6c42;&#x670d;&#x52d9;&#x7aef;&#x6703;&#x628a;&#x8cc7;&#x6e90;&#x7684;&#x6700;&#x5f8c;&#x4fee;&#x6539;&#x6642;&#x9593;&#x653e;&#x5230",{"_index":2909,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["xff0c;&#x7b2c;&#x4e8c;&#x500b;for&#x8ff4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x70ba;o(n2)&#xff0c",{"_index":3323,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["xff0c;&#x7de9;&#x5b58;&#x5728",{"_index":1728,"title":{},"body":{"performance.html#DOM-查詢做緩存":{}}}],["xff0c;&#x800c;&#x975e;&#x4e00;&#x8a00;&#x4e0d;&#x5408;&#x5c31",{"_index":2993,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["xff0c;&#x8017;&#x8cbb;&#x6027;&#x80fd",{"_index":1726,"title":{},"body":{"performance.html#DOM-查詢做緩存":{}}}],["xff0c;&#x8868;&#x793a;&#x53c3;&#x8003;&#x53e6;&#x4e00;&#x500b",{"_index":244,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["xff0c;&#x9019;&#x6a23;&#x5728;&#x904b;&#x884c;&#x5230;console.log(j)&#x7684;&#x6642;&#x5019;&#x986f;&#x793a;&#x7684;&#x5c31;&#x662f;&#x6bcf;&#x6b21;&#x5faa;&#x74b0;&#x6642;&#x7684;i&#x503c",{"_index":394,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["xff0c;&#x904e;&#x671f;&#x6642;&#x9593;&#x70ba",{"_index":2872,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff1a;&#x4e0d;&#x4f7f;&#x7528;&#x5f37;&#x7de9;&#x5b58;&#xff0c;&#x9700;&#x8981;&#x8207;&#x670d;&#x52d9;&#x5668;&#x9a57;&#x8b49;&#x7de9;&#x5b58;&#x662f;&#x5426;&#x65b0;&#x9ba",{"_index":2851,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff1a;&#x4e8b;&#x4ef6;&#x5df2;&#x7d93;&#x57f7;&#x884c;&#x5b8c;&#x7562;&#x4e14;&#x6210;&#x529f;&#x64cd;&#x4f5c;&#xff0c;&#x56de;&#x50b3",{"_index":2271,"title":{},"body":{"api/promise.html#Promise":{}}}],["xff1a;&#x4e8b;&#x4ef6;&#x5df2;&#x7d93;&#x57f7;&#x884c;&#x5b8c;&#x7562;&#x4f46;&#x64cd;&#x4f5c;&#x5931;&#x6557;&#xff0c;&#x56de;&#x50b3",{"_index":2273,"title":{},"body":{"api/promise.html#Promise":{}}}],["xff1a;&#x4e8b;&#x4ef6;&#x5df2;&#x7d93;&#x904b;&#x884c;&#x4e2d;&#xff0c;&#x5c1a;&#x672a;&#x53d6;&#x5f97;&#x7d50;&#x679c",{"_index":2270,"title":{},"body":{"api/promise.html#Promise":{}}}],["xff1a;&#x7981;&#x6b62;&#x4f7f;&#x7528;&#x7de9;&#x5b58;&#xff08;&#x5305;&#x62ec;&#x5354;&#x5546;&#x7de9;&#x5b58;&#xff09;&#xff0c;&#x6bcf;&#x6b21;&#x90fd;&#x5411;&#x670d;&#x52d9;&#x5668;&#x8acb;&#x6c42;&#x6700;&#x65b0;&#x7684;&#x8cc7;&#x6e90",{"_index":2852,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff1a;&#x8072;&#x660e;&#x5373;&#x57f7;&#x884c;&#x7684;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#xff09;&#x52a0;&#x9589;&#x5305",{"_index":392,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["xff1b",{"_index":388,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["xff1b;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#x6240;&#x6709;&#x50b3;&#x905e;&#x7d66;settimeout&#x7684;&#x56de;&#x8abf;&#x65b9;&#x6cd5;&#x90fd;&#x6703;&#x5728",{"_index":386,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["xff1b;&#x5728;&#x8fed;&#x4ee3",{"_index":3239,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["xff1f",{"_index":2986,"title":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}},"body":{}}],["xffe3;&#xffe3;&#xffe3;&#xffe3",{"_index":1841,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["xhr",{"_index":13,"title":{},"body":{"ajax.html":{}}}],["xhr.onreadystatechang",{"_index":20,"title":{},"body":{"ajax.html":{}}}],["xhr.open",{"_index":17,"title":{},"body":{"ajax.html":{}}}],["xhr.readyst",{"_index":22,"title":{},"body":{"ajax.html":{}}}],["xhr.send",{"_index":26,"title":{},"body":{"ajax.html":{}}}],["xhr.statu",{"_index":23,"title":{},"body":{"ajax.html":{}}}],["xmlhttprequest",{"_index":16,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["xmlhttprequest.readyst",{"_index":28,"title":{},"body":{"ajax.html":{}}}],["xmlhttprequest請求，從而克服了ajax",{"_index":93,"title":{},"body":{"ajax.html":{}}}],["xw50eztmfnqg0wuxkeiaz",{"_index":1928,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["xyz",{"_index":146,"title":{},"body":{"RegExp.html":{}}}],["y",{"_index":1506,"title":{},"body":{"closures.html":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"math.html":{},"math.html#Math":{},"object/create.html":{}}}],["youreasycard",{"_index":1882,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["youreasycard2",{"_index":1883,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["yyyi",{"_index":765,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["z",{"_index":1604,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["z0",{"_index":142,"title":{},"body":{"RegExp.html":{}}}],["za",{"_index":141,"title":{},"body":{"RegExp.html":{}}}]],"pipeline":["stemmer"]},"store":{"ajax.html":{"title":"AJAX","path":"\\javascript\\ajax.html","body":"1 2 3 4 5 6 7 8 9 10 11 var xhr = new XMLHttpRequest() xhr.open( \"GET\" , \"/api\" , false ) xhr.onreadystatechange = function ( )  // 異步執行 if (xhr.readyState == 4 )  //響應內容解析完成，可以在客戶端調用了 if (xhr.status == 200 )  //表示成功處理請求 alert(xhr.responseText)    xhr.send( null ) XMLHttpRequest XMLHttpRequest.readyState HTTP response status codes 取得用get傳遞之網址列資訊(Query String) https://jsbin.com/katifugevu/edit?js,console,output 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 //取得網址字串 var url = location.href; url = 'http://example.com/?userid=jacob.hsu' ; //再來用去尋找網址列中是否有資料傳遞(QueryString) if (url.indexOf( '?' )!= -1 )  var id = \"\" ; //在此直接將各自的參數資料切割放進ary中 var ary = url.split( '?' )[ 1 ].split( '&amp;' ); // console.log(ary); [\"userid=jacob.hsu\"] //下迴圈去搜尋每個資料參數 for (i= 0 ;i=ary.length -1 ;i++)  //如果資料名稱為id的話那就把他取出來 if (ary[i].split( '=' )[ 0 ] == 'userid' ) id = ary[i].split( '=' )[ 1 ]; console .log(id); //\"jacob.hsu\"   ref : https://ithelp.ithome.com.tw/articles/10190254 ex: http://blog.xuite.net/ahdaa/blog1/test.html?id=AD&amp;val1=02&amp;val2=22#achorAD 1 2 3 4 5 6 7 8 location.href // 完整的網址 location.protocol // 協定　　　　　　 http: location.hostname // 伺服器名稱　　　 blog.xuite.net location.host // 伺服器:埠號　　　blog.xuite.net:80 location.port // 埠號　　　　　　 80 location.pathname // host之後的部份 /ahdaa/blog1/test.html?id=AD&amp;val1=02&amp;val2=22#achorAD location.search // 含?之後所有字串　?id=AD&amp;val1=02&amp;val2=22#achorAD location.hash // 含#之後所有字串　#achorAD(通常用於錨點) 跨域 瀏覽器有同源策略，不允許ajax訪問 跨域條件: 協議、域名、端口，有一個不同就算跨域 所有的跨域請求都必須經由資源提供方允許 可以跨域的三個標籤 img src=xxx link href=xxx script src=xxx link script 可以使用CDN， CDN 也是其他域 CORS是一個W3C標準，全稱是”跨域資源共享”（Cross-origin resource sharing）。 它允許瀏覽器向跨源服務器，發出XMLHttpRequest請求，從而克服了AJAX只能同源使用的限制。 CORS需要瀏覽器和服務器同時支持。實現CORS通信的關鍵是服務器。只要服務器實現了CORS接口，就可以跨源通信。 CORS Workflow 簡單說在A網站底下若有需要去access B網站的resource 那瀏覽器會在送去B網站的http request的header 中加上這行 Origin: http://www.foo.com 表明這個request是從 www.foo.com的resource出來的 那個在B網站的web server收到了這個request後 如果他認為A網站是B網站自己的白名單 那麼B網站就可以在http response 中加入這行 Access-Control-Allow-Origin: http://www.foo.com 這麼一來就可以順利的拿到B網站的resource了 詳細的範例程式在 https://developer.mozilla.org/zh-TW/docs/HTTP/Access_control_CORS 跨域资源共享 CORS 详解 異步 https://jsbin.com/hipiruzoru/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 console .log( 1 ); setTimeout( function ( )  console .log( 'setTimeout' ) , 0 ) let promise = new Promise ( function ( resolve,reject )  console .log( 3 ) resolve( 100 ) ).then( function ( data )  console .log( 100 ) ) console .log( 2 ); // 1 3 2 100 \"setTimeout\" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 console .log( 0 ) let promise = new Promise ( ( resolve, reject )=  console .log( 1 ); setTimeout( () =  console .log( 2 ); resolve(); , 0 ) console .log( 3 ) ) promise.then( res =  console .log( 100 ) ) console .log( 4 )"},"RegExp.html":{"title":"正規表達式 regexp","path":"\\javascript\\RegExp.html","body":"正規表達式 2019年JS正则大全(常用) js正则表达式，限1-2位整数，或者至多含有两位小数 1 2 //1、只能输入数字或者小数点 仅整数,整数加小数 var reg1= /(^[0-9]1,2$)|(^[0-9]1,2[\\.]1[0-9]1,2$)/ ; email 1 2 3 var firstRegExp = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/ ; console .log(firstRegExp.test( 'jacob.hsu.tw@gmail.com' )); //true console .log(firstRegExp.test( 'jacob.hsu.tw' )); //false 規表示式的特定字元 說明 等效的正規表示式 \\d 數字 [0-9] \\D 非數字 [^0-9] \\w 數字、字母、底線 [a-zA-Z0-9_] \\W 非 \\w [^a-zA-Z0-9_] \\s 空白字元 [ \\r\\t\\n\\f] \\S 非空白字元 [^ \\r\\t\\n\\f] [xyz] 比對中括弧內的任一個字元 /[ecm]/ 可比對 “welcome” 中的 “e” 或 “c” 或 “m” [^xyz] 比對不在中括弧內出現的任一個字元 /[^ecm]/ 可比對 “welcome” 中的 “w”、”l”、”o”，可見出其與 [xyz] 功能相反。（同時請注意 /^/ 與 [^] 之間功能的不同。） match String.prototype.match() 1 2 3 4 const pa = '賓夕法尼亞州是美國的州份之一，正式名稱為「賓夕法尼亞邦」(Commonwealth of Pennsylvania)' ; const pa_us = pa.match( /\\((.+?)\\)/g ) // [\"(Commonwealth of Pennsylvania)\"] const res = pa_us[ 0 ].replace( ')' , '' ).substring( 1 ); console .log(res) // \"Commonwealth of Pennsylvania\""},"RegExp.html#match":{"title":"match","path":"\\javascript\\RegExp.html#match","body":"String.prototype.match() 1 2 3 4 const pa = &apos;&#x8CD3;&#x5915;&#x6CD5;&#x5C3C;&#x4E9E;&#x5DDE;&#x662F;&#x7F8E;&#x570B;&#x7684;&#x5DDE;&#x4EFD;&#x4E4B;&#x4E00;&#xFF0C;&#x6B63;&#x5F0F;&#x540D;&#x7A31;&#x70BA;&#x300C;&#x8CD3;&#x5915;&#x6CD5;&#x5C3C;&#x4E9E;&#x90A6;&#x300D;(Commonwealth of Pennsylvania)&apos; ; const pa_us = pa.match( /\\((.+?)\\)/g ) // [(Commonwealth of Pennsylvania)] const res = pa_us[ 0 ].replace( &apos;)&apos; , &apos;&apos; ).substring( 1 ); console .log(res) // Commonwealth of Pennsylvania"},"RESTfulAPI.html":{"title":"RESTful API","path":"\\javascript\\RESTfulAPI.html","body":"RESTful 是目前最流行的 API 設計規範，用於 Web 數據接口的設計。 動詞 動詞通常就是五種 HTTP 方法，對應 CRUD 操作。 POST：新建（Create） GET：讀取（Read） PUT：更新（Update） PATCH：更新（Update），通常是部分更新 DELETE：刪除（Delete） 動詞 + 賓語 RESTful 的核心思想就是，客戶端發出的數據操作指令都是”動詞 + 賓語”的結構。 比如， GET /articles 這個命令， GET 是動詞， /articles 是賓語。 使用複數 URL 建議都使用複數 URL，比如 GET /articles/2 要好於 GET /article/2 。 避免多級 URL 資源需要多級分類，因此很容易寫出多級的 URL，比如獲取某個作者的某一類文章。 GET /authors/12/categories/2 這種 URL 不利於擴展，語義也不明確 更好的做法是，除了第一級，其他級別都用查詢字符串表達。 GET /authors/12?categories=2 狀態碼 1xx：相關信息 2xx：操作成功 3xx：重定向 4xx：客戶端錯誤 5xx：服務器錯誤 API 用不到301狀態碼（永久重定向）和302狀態碼（暫時重定向，307也是這個含義），因為它們可以由應用級別返回，瀏覽器會直接跳轉，API 級別可以不考慮這兩種情況。 API 用到的3xx狀態碼，主要是 303 See Other ，表示參考另一個 URL。它與302和307的含義一樣，也是”暫時重定向”，區別在於302和307用於GET請求，而303用於POST、PUT和DELETE請求。收到303以後，瀏覽器不會自動跳轉，而會讓用戶自己決定下一步怎麼辦。 下面是一個例子。 1 2 HTTP/ 1.1 303 See Other Location: /api/ orders/ 12345 HATEOAS 提供鏈接 API 的使用者未必知道，URL 是怎麼設計的。 一個解決方法就是，在回應中，給出相關鏈接，便於下一步操作。這樣的話，用戶只要記住一個 URL，就可以發現其他的 URL。這種方法叫做 HATEOAS。 例 GitHub 的 API 都在 api.github.com 這個域名下可查找 References https://blog.florimondmanca.com/restful-api-design-13-best-practices-to-make-your-users-happy http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html"},"RESTfulAPI.html#動詞":{"title":"&#x52D5;&#x8A5E;","path":"\\javascript\\RESTfulAPI.html#動詞","body":"&#x52D5;&#x8A5E;&#x901A;&#x5E38;&#x5C31;&#x662F;&#x4E94;&#x7A2E; HTTP &#x65B9;&#x6CD5;&#xFF0C;&#x5C0D;&#x61C9; CRUD &#x64CD;&#x4F5C;&#x3002; POST&#xFF1A;&#x65B0;&#x5EFA;&#xFF08;Create&#xFF09; GET&#xFF1A;&#x8B80;&#x53D6;&#xFF08;Read&#xFF09; PUT&#xFF1A;&#x66F4;&#x65B0;&#xFF08;Update&#xFF09; PATCH&#xFF1A;&#x66F4;&#x65B0;&#xFF08;Update&#xFF09;&#xFF0C;&#x901A;&#x5E38;&#x662F;&#x90E8;&#x5206;&#x66F4;&#x65B0; DELETE&#xFF1A;&#x522A;&#x9664;&#xFF08;Delete&#xFF09; &#x52D5;&#x8A5E; + &#x8CD3;&#x8A9E; RESTful &#x7684;&#x6838;&#x5FC3;&#x601D;&#x60F3;&#x5C31;&#x662F;&#xFF0C;&#x5BA2;&#x6236;&#x7AEF;&#x767C;&#x51FA;&#x7684;&#x6578;&#x64DA;&#x64CD;&#x4F5C;&#x6307;&#x4EE4;&#x90FD;&#x662F;&#x201D;&#x52D5;&#x8A5E; + &#x8CD3;&#x8A9E;&#x201D;&#x7684;&#x7D50;&#x69CB;&#x3002; &#x6BD4;&#x5982;&#xFF0C; GET /articles &#x9019;&#x500B;&#x547D;&#x4EE4;&#xFF0C; GET &#x662F;&#x52D5;&#x8A5E;&#xFF0C; /articles &#x662F;&#x8CD3;&#x8A9E;&#x3002; &#x4F7F;&#x7528;&#x8907;&#x6578; URL &#x5EFA;&#x8B70;&#x90FD;&#x4F7F;&#x7528;&#x8907;&#x6578; URL&#xFF0C;&#x6BD4;&#x5982; GET /articles/2 &#x8981;&#x597D;&#x65BC; GET /article/2 &#x3002; &#x907F;&#x514D;&#x591A;&#x7D1A; URL &#x8CC7;&#x6E90;&#x9700;&#x8981;&#x591A;&#x7D1A;&#x5206;&#x985E;&#xFF0C;&#x56E0;&#x6B64;&#x5F88;&#x5BB9;&#x6613;&#x5BEB;&#x51FA;&#x591A;&#x7D1A;&#x7684; URL&#xFF0C;&#x6BD4;&#x5982;&#x7372;&#x53D6;&#x67D0;&#x500B;&#x4F5C;&#x8005;&#x7684;&#x67D0;&#x4E00;&#x985E;&#x6587;&#x7AE0;&#x3002; GET /authors/12/categories/2 &#x9019;&#x7A2E; URL &#x4E0D;&#x5229;&#x65BC;&#x64F4;&#x5C55;&#xFF0C;&#x8A9E;&#x7FA9;&#x4E5F;&#x4E0D;&#x660E;&#x78BA; &#x66F4;&#x597D;&#x7684;&#x505A;&#x6CD5;&#x662F;&#xFF0C;&#x9664;&#x4E86;&#x7B2C;&#x4E00;&#x7D1A;&#xFF0C;&#x5176;&#x4ED6;&#x7D1A;&#x5225;&#x90FD;&#x7528;&#x67E5;&#x8A62;&#x5B57;&#x7B26;&#x4E32;&#x8868;&#x9054;&#x3002; GET /authors/12?categories=2"},"RESTfulAPI.html#狀態碼":{"title":"&#x72C0;&#x614B;&#x78BC;","path":"\\javascript\\RESTfulAPI.html#狀態碼","body":"1xx&#xFF1A;&#x76F8;&#x95DC;&#x4FE1;&#x606F; 2xx&#xFF1A;&#x64CD;&#x4F5C;&#x6210;&#x529F; 3xx&#xFF1A;&#x91CD;&#x5B9A;&#x5411; 4xx&#xFF1A;&#x5BA2;&#x6236;&#x7AEF;&#x932F;&#x8AA4; 5xx&#xFF1A;&#x670D;&#x52D9;&#x5668;&#x932F;&#x8AA4; API &#x7528;&#x4E0D;&#x5230;301&#x72C0;&#x614B;&#x78BC;&#xFF08;&#x6C38;&#x4E45;&#x91CD;&#x5B9A;&#x5411;&#xFF09;&#x548C;302&#x72C0;&#x614B;&#x78BC;&#xFF08;&#x66AB;&#x6642;&#x91CD;&#x5B9A;&#x5411;&#xFF0C;307&#x4E5F;&#x662F;&#x9019;&#x500B;&#x542B;&#x7FA9;&#xFF09;&#xFF0C;&#x56E0;&#x70BA;&#x5B83;&#x5011;&#x53EF;&#x4EE5;&#x7531;&#x61C9;&#x7528;&#x7D1A;&#x5225;&#x8FD4;&#x56DE;&#xFF0C;&#x700F;&#x89BD;&#x5668;&#x6703;&#x76F4;&#x63A5;&#x8DF3;&#x8F49;&#xFF0C;API &#x7D1A;&#x5225;&#x53EF;&#x4EE5;&#x4E0D;&#x8003;&#x616E;&#x9019;&#x5169;&#x7A2E;&#x60C5;&#x6CC1;&#x3002; API &#x7528;&#x5230;&#x7684;3xx&#x72C0;&#x614B;&#x78BC;&#xFF0C;&#x4E3B;&#x8981;&#x662F; 303 See Other &#xFF0C;&#x8868;&#x793A;&#x53C3;&#x8003;&#x53E6;&#x4E00;&#x500B; URL&#x3002;&#x5B83;&#x8207;302&#x548C;307&#x7684;&#x542B;&#x7FA9;&#x4E00;&#x6A23;&#xFF0C;&#x4E5F;&#x662F;&#x201D;&#x66AB;&#x6642;&#x91CD;&#x5B9A;&#x5411;&#x201D;&#xFF0C;&#x5340;&#x5225;&#x5728;&#x65BC;302&#x548C;307&#x7528;&#x65BC;GET&#x8ACB;&#x6C42;&#xFF0C;&#x800C;303&#x7528;&#x65BC;POST&#x3001;PUT&#x548C;DELETE&#x8ACB;&#x6C42;&#x3002;&#x6536;&#x5230;303&#x4EE5;&#x5F8C;&#xFF0C;&#x700F;&#x89BD;&#x5668;&#x4E0D;&#x6703;&#x81EA;&#x52D5;&#x8DF3;&#x8F49;&#xFF0C;&#x800C;&#x6703;&#x8B93;&#x7528;&#x6236;&#x81EA;&#x5DF1;&#x6C7A;&#x5B9A;&#x4E0B;&#x4E00;&#x6B65;&#x600E;&#x9EBC;&#x8FA6;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x4E00;&#x500B;&#x4F8B;&#x5B50;&#x3002; 1 2 HTTP/ 1.1 303 See Other Location: /api/ orders/ 12345 HATEOAS &#x63D0;&#x4F9B;&#x93C8;&#x63A5; API &#x7684;&#x4F7F;&#x7528;&#x8005;&#x672A;&#x5FC5;&#x77E5;&#x9053;&#xFF0C;URL &#x662F;&#x600E;&#x9EBC;&#x8A2D;&#x8A08;&#x7684;&#x3002; &#x4E00;&#x500B;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#xFF0C;&#x5728;&#x56DE;&#x61C9;&#x4E2D;&#xFF0C;&#x7D66;&#x51FA;&#x76F8;&#x95DC;&#x93C8;&#x63A5;&#xFF0C;&#x4FBF;&#x65BC;&#x4E0B;&#x4E00;&#x6B65;&#x64CD;&#x4F5C;&#x3002;&#x9019;&#x6A23;&#x7684;&#x8A71;&#xFF0C;&#x7528;&#x6236;&#x53EA;&#x8981;&#x8A18;&#x4F4F;&#x4E00;&#x500B; URL&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x767C;&#x73FE;&#x5176;&#x4ED6;&#x7684; URL&#x3002;&#x9019;&#x7A2E;&#x65B9;&#x6CD5;&#x53EB;&#x505A; HATEOAS&#x3002; &#x4F8B; GitHub &#x7684; API &#x90FD;&#x5728; api.github.com &#x9019;&#x500B;&#x57DF;&#x540D;&#x4E0B;&#x53EF;&#x67E5;&#x627E;"},"RESTfulAPI.html#References":{"title":"References","path":"\\javascript\\RESTfulAPI.html#References","body":"https://blog.florimondmanca.com/restful-api-design-13-best-practices-to-make-your-users-happy http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html"},"es6.html":{"title":"ECMAScript 6","path":"\\javascript\\es6.html","body":"ECMAScript 6 入门 Module 的加载实现 浏览器允许脚本异步加载，下面就是两种异步加载的语法。 1 2 script src= \"path/to/myModule.js\" defer/script script src= \"path/to/myModule.js\" async /script 上面代码中， script 标签打开 defer 或 async 属性，脚本就会异步加载。渲染引擎遇到这一行命令，就会开始下载外部脚本，但不会等它下载和执行 加载规则 script type=module src=./foo.js/script 1 2 3 script type= \"module\"  import './index.js' ;  /script"},"es6.html#Module-的加载实现":{"title":"Module &#x7684;&#x52A0;&#x8F7D;&#x5B9E;&#x73B0;","path":"\\javascript\\es6.html#Module-的加载实现","body":"&#x6D4F;&#x89C8;&#x5668;&#x5141;&#x8BB8;&#x811A;&#x672C;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#xFF0C;&#x4E0B;&#x9762;&#x5C31;&#x662F;&#x4E24;&#x79CD;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#x7684;&#x8BED;&#x6CD5;&#x3002; 1 2 script src= path/to/myModule.js defer/script script src= path/to/myModule.js async /script &#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C; script &#x6807;&#x7B7E;&#x6253;&#x5F00; defer &#x6216; async &#x5C5E;&#x6027;&#xFF0C;&#x811A;&#x672C;&#x5C31;&#x4F1A;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#x3002;&#x6E32;&#x67D3;&#x5F15;&#x64CE;&#x9047;&#x5230;&#x8FD9;&#x4E00;&#x884C;&#x547D;&#x4EE4;&#xFF0C;&#x5C31;&#x4F1A;&#x5F00;&#x59CB;&#x4E0B;&#x8F7D;&#x5916;&#x90E8;&#x811A;&#x672C;&#xFF0C;&#x4F46;&#x4E0D;&#x4F1A;&#x7B49;&#x5B83;&#x4E0B;&#x8F7D;&#x548C;&#x6267;&#x884C; &#x52A0;&#x8F7D;&#x89C4;&#x5219; script type=module src=./foo.js/script 1 2 3 script type= module  import &apos;./index.js&apos; ;  /script"},"event.html":{"title":"Event","path":"\\javascript\\event.html","body":"無限下拉加載圖片的頁面 綁定事件? 代理 https://jsbin.com/hajohit/edit?html,js,output 1 2 3 4 5 6 7  div id = \"div1\"   a href = \"#\"  a1 / a   a href = \"#\"  a2 / a   a href = \"#\"  a3 / a   a href = \"#\"  a4 / a  !--會新增更多a標籤-- / div  為所有a標籤 新增 點擊事件 1 2 3 4 5 6 7 8 9 // 通過事件冒泡 去上層綁定 var div1 = document .getElementById( 'div1' ) div1.addEventListener( 'click' , function ( e )  //監聽是div1 但target可以告知點擊從哪出發的 var target = e.target if (target.nodeName === 'A' )  alert(target.innerHTML); //a1  )"},"event.html#代理":{"title":"&#x4EE3;&#x7406;","path":"\\javascript\\event.html#代理","body":"https://jsbin.com/hajohit/edit?html,js,output 1 2 3 4 5 6 7  div id = div1   a href = #  a1 / a   a href = #  a2 / a   a href = #  a3 / a   a href = #  a4 / a  !--&#x6703;&#x65B0;&#x589E;&#x66F4;&#x591A;a&#x6A19;&#x7C64;-- / div  &#x70BA;&#x6240;&#x6709;a&#x6A19;&#x7C64; &#x65B0;&#x589E; &#x9EDE;&#x64CA;&#x4E8B;&#x4EF6; 1 2 3 4 5 6 7 8 9 // &#x901A;&#x904E;&#x4E8B;&#x4EF6;&#x5192;&#x6CE1; &#x53BB;&#x4E0A;&#x5C64;&#x7D81;&#x5B9A; var div1 = document .getElementById( &apos;div1&apos; ) div1.addEventListener( &apos;click&apos; , function ( e ) { //&#x76E3;&#x807D;&#x662F;div1 &#x4F46;target&#x53EF;&#x4EE5;&#x544A;&#x77E5;&#x9EDE;&#x64CA;&#x5F9E;&#x54EA;&#x51FA;&#x767C;&#x7684; var target = e.target if (target.nodeName === &apos;A&apos; ) { alert(target.innerHTML); //a1 } })"},"arrowFunction.html":{"title":"箭頭函式","path":"\\javascript\\arrowFunction.html","body":"Arrow Function 什麼時候不使用箭頭函數 定義對象上的方法 1 2 3 4 5 6 7 8 9 10 const calculate =  array: [ 1 , 2 , 3 ], sum: () =  console .log( this === window ); // = true return this .array.reduce( ( result, item ) = result + item);  ; console .log( this === window ); // = true // Throws \"TypeError: Cannot read property 'reduce' of undefined\" calculate.sum(); 是因為箭頭函數按詞法 作用域將上下文綁定到 window 對象 執行 this.array 等同於 window.array ，它是 undefined 。 解決方法是使用 常規函數表達式 來定義方法。 this 是在調用時確定的，而不是由封閉的上下文決定的 1 2 3 4 5 6 7 8 9 const calculate =  array: [ 1 , 2 , 3 ], sum()  console .log( this === window ); // = false console .log( this === calculate); // = true return this .array.reduce( ( result, item ) = result + item);  ; calculate.sum(); // = 6 因为sum是常规函数，所以在調用 calculate.sum() 時 this 是 calculate 對象 。 this.array 是數組引用"},"arrowFunction.html#Arrow-Function":{"title":"Arrow Function","path":"\\javascript\\arrowFunction.html#Arrow-Function","body":"&#x4EC0;&#x9EBC;&#x6642;&#x5019;&#x4E0D;&#x4F7F;&#x7528;&#x7BAD;&#x982D;&#x51FD;&#x6578; &#x5B9A;&#x7FA9;&#x5C0D;&#x8C61;&#x4E0A;&#x7684;&#x65B9;&#x6CD5; 1 2 3 4 5 6 7 8 9 10 const calculate = { array: [ 1 , 2 , 3 ], sum: () = { console .log( this === window ); // = true return this .array.reduce( ( result, item ) = result + item); } }; console .log( this === window ); // = true // Throws TypeError: Cannot read property &apos;reduce&apos; of undefined calculate.sum(); &#x662F;&#x56E0;&#x70BA;&#x7BAD;&#x982D;&#x51FD;&#x6578;&#x6309;&#x8A5E;&#x6CD5; &#x4F5C;&#x7528;&#x57DF;&#x5C07;&#x4E0A;&#x4E0B;&#x6587;&#x7D81;&#x5B9A;&#x5230; window &#x5C0D;&#x8C61; &#x57F7;&#x884C; this.array &#x7B49;&#x540C;&#x65BC; window.array &#xFF0C;&#x5B83;&#x662F; undefined &#x3002; &#x89E3;&#x6C7A;&#x65B9;&#x6CD5;&#x662F;&#x4F7F;&#x7528; &#x5E38;&#x898F;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F; &#x4F86;&#x5B9A;&#x7FA9;&#x65B9;&#x6CD5;&#x3002; this &#x662F;&#x5728;&#x8ABF;&#x7528;&#x6642;&#x78BA;&#x5B9A;&#x7684;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x7531;&#x5C01;&#x9589;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x6C7A;&#x5B9A;&#x7684; 1 2 3 4 5 6 7 8 9 const calculate = { array: [ 1 , 2 , 3 ], sum() { console .log( this === window ); // = false console .log( this === calculate); // = true return this .array.reduce( ( result, item ) = result + item); } }; calculate.sum(); // = 6 &#x56E0;&#x4E3A;sum&#x662F;&#x5E38;&#x89C4;&#x51FD;&#x6570;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x8ABF;&#x7528; calculate.sum() &#x6642; this &#x662F; calculate &#x5C0D;&#x8C61; &#x3002; this.array &#x662F;&#x6578;&#x7D44;&#x5F15;&#x7528;"},"asynchronous.html":{"title":"Asynchronous","path":"\\javascript\\asynchronous.html","body":"異步 https://jsbin.com/honidujame/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 console .log( 1 ) setTimeout( () =  console .log( 2 ); , 0 ) console .log( 3 ) setTimeout( function ( )  console .log( 4 ); , 0 ) // 1 3 2 4 https://jsbin.com/hipiruzoru/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 console .log( 1 ); setTimeout( function ( )  console .log( 'setTimeout' ) , 0 ) let promise = new Promise ( function ( resolve,reject )  console .log( 3 ) resolve( 100 ) ).then( function ( data )  console .log( 100 ) ) console .log( 2 ); // 1 3 2 100 \"setTimeout\" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 console .log( 0 ) let promise = new Promise ( ( resolve, reject )=  console .log( 1 ); setTimeout( () =  console .log( 2 ); resolve(); , 0 ) console .log( 3 ) ) promise.then( res =  console .log( 100 ) ) console .log( 4 ) // 0 1 3 4 2 100 setTimeout setTimeout() 函數是異步的 1 2 3 4 5 for ( var i = 0 ; i  5 ; i++)  setTimeout( function ( )  console .log(i); // 5,5,5,5,5 , i* 1000 );  1 2 3 4 5 6 for ( var i = 0 ; i  5 ; i++)  setTimeout( function ( )  console .log( new Date , i); , 1000 );  console .log(i); //5,- 5,5,5,5,5 因為異步函數必須等主進程運行完畢才會運行，setTimeout()內部回調運行的時候，主進程已經運行完畢了，此時i=5，所以輸出5。 循環執行過程中，幾乎同時設置了 5 個定時器，一般情況下，這些定時器都會在 1 秒之後觸發，而循環完的輸出是立即執行的 即第 1 個 5 直接輸出，1 秒之後，輸出 5 個 5； 提示： setTimeout() 只執行 code 一次。如果要多次調用，請使用 setInterval() 或者讓 code 自身再次調用 setTimeout()。 setTimeout 的意思是傳遞一個函數，延遲一段時候把該函數添加到 隊列 當中，並不是立即執行； 所以說如果當前正在運行的代碼沒有運行完，即使延遲的時間已經過完， 該函數會等待到函數隊列中前面所有的函數運行完畢之後才會運行 ；也就是說所有傳遞給setTimeout的回調方法都會在 整個環境下的所有代碼運行完畢之後執行 ； 期望代碼的輸出變成：5 - 0,1,2,3,4 1 用立即執行函數 IIFE（Immediately Invoked Function Expression ：聲明即執行的函數表達式）加閉包 1 2 3 4 5 6 7 8 for ( var i = 0 ; i  5 ; i++)  ( function ( j )  //j =i setTimeout( function ( )  console .log( new Date , j); , 1000 ); )(i)  console .log(i); //5, 0,1,2,3,4 用立即執行函數表達式創造了新的函數作用域將timer函數包裹了起來，並用j捕獲了每次循環時的i ，這樣在運行到console.log(j)的時候顯示的就是每次循環時的i值 2 利用 API 文檔 1 2 3 4 5 6 for ( var i = 0 ; i  5 ; i++)  setTimeout( function ( j )  console .log( new Date , j); , 1000 , i);  console .log(i); //5, 0,1,2,3,4 3 利用 JS 中基本類型（Primitive Type）的參數傳遞是 按值傳遞（Pass by Value） 的特徵 1 2 3 4 5 6 7 8 9 var output = function ( i )  setTimeout( function ( )  console .log( new Date , i); , 1000 ); ; for ( var i = 0 ; i  5 ; i++)  output(i); // 這裡傳過去的 i 值被複製了  console .log(i); //5, 0,1,2,3,4"},"asynchronous.html#異步":{"title":"&#x7570;&#x6B65;","path":"\\javascript\\asynchronous.html#異步","body":"https://jsbin.com/honidujame/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 console .log( 1 ) setTimeout( () = { console .log( 2 ); }, 0 ) console .log( 3 ) setTimeout( function ( ) { console .log( 4 ); }, 0 ) // 1 3 2 4 https://jsbin.com/hipiruzoru/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 console .log( 1 ); setTimeout( function ( ) { console .log( &apos;setTimeout&apos; ) }, 0 ) let promise = new Promise ( function ( resolve,reject ) { console .log( 3 ) resolve( 100 ) }).then( function ( data ) { console .log( 100 ) }) console .log( 2 ); // 1 3 2 100 setTimeout 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 console .log( 0 ) let promise = new Promise ( ( resolve, reject )= { console .log( 1 ); setTimeout( () = { console .log( 2 ); resolve(); }, 0 ) console .log( 3 ) }) promise.then( res = { console .log( 100 ) }) console .log( 4 ) // 0 1 3 4 2 100"},"asynchronous.html#setTimeout":{"title":"setTimeout","path":"\\javascript\\asynchronous.html#setTimeout","body":"setTimeout() &#x51FD;&#x6578;&#x662F;&#x7570;&#x6B65;&#x7684; 1 2 3 4 5 for ( var i = 0 ; i  5 ; i++) { setTimeout( function ( ) { console .log(i); // 5,5,5,5,5 }, i* 1000 ); } 1 2 3 4 5 6 for ( var i = 0 ; i  5 ; i++) { setTimeout( function ( ) { console .log( new Date , i); }, 1000 ); } console .log(i); //5,- 5,5,5,5,5 &#x56E0;&#x70BA;&#x7570;&#x6B65;&#x51FD;&#x6578;&#x5FC5;&#x9808;&#x7B49;&#x4E3B;&#x9032;&#x7A0B;&#x904B;&#x884C;&#x5B8C;&#x7562;&#x624D;&#x6703;&#x904B;&#x884C;&#xFF0C;setTimeout()&#x5167;&#x90E8;&#x56DE;&#x8ABF;&#x904B;&#x884C;&#x7684;&#x6642;&#x5019;&#xFF0C;&#x4E3B;&#x9032;&#x7A0B;&#x5DF2;&#x7D93;&#x904B;&#x884C;&#x5B8C;&#x7562;&#x4E86;&#xFF0C;&#x6B64;&#x6642;i=5&#xFF0C;&#x6240;&#x4EE5;&#x8F38;&#x51FA;5&#x3002; &#x5FAA;&#x74B0;&#x57F7;&#x884C;&#x904E;&#x7A0B;&#x4E2D;&#xFF0C;&#x5E7E;&#x4E4E;&#x540C;&#x6642;&#x8A2D;&#x7F6E;&#x4E86; 5 &#x500B;&#x5B9A;&#x6642;&#x5668;&#xFF0C;&#x4E00;&#x822C;&#x60C5;&#x6CC1;&#x4E0B;&#xFF0C;&#x9019;&#x4E9B;&#x5B9A;&#x6642;&#x5668;&#x90FD;&#x6703;&#x5728; 1 &#x79D2;&#x4E4B;&#x5F8C;&#x89F8;&#x767C;&#xFF0C;&#x800C;&#x5FAA;&#x74B0;&#x5B8C;&#x7684;&#x8F38;&#x51FA;&#x662F;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x7684; &#x5373;&#x7B2C; 1 &#x500B; 5 &#x76F4;&#x63A5;&#x8F38;&#x51FA;&#xFF0C;1 &#x79D2;&#x4E4B;&#x5F8C;&#xFF0C;&#x8F38;&#x51FA; 5 &#x500B; 5&#xFF1B; &#x63D0;&#x793A;&#xFF1A; setTimeout() &#x53EA;&#x57F7;&#x884C; code &#x4E00;&#x6B21;&#x3002;&#x5982;&#x679C;&#x8981;&#x591A;&#x6B21;&#x8ABF;&#x7528;&#xFF0C;&#x8ACB;&#x4F7F;&#x7528; setInterval() &#x6216;&#x8005;&#x8B93; code &#x81EA;&#x8EAB;&#x518D;&#x6B21;&#x8ABF;&#x7528; setTimeout()&#x3002; setTimeout &#x7684;&#x610F;&#x601D;&#x662F;&#x50B3;&#x905E;&#x4E00;&#x500B;&#x51FD;&#x6578;&#xFF0C;&#x5EF6;&#x9072;&#x4E00;&#x6BB5;&#x6642;&#x5019;&#x628A;&#x8A72;&#x51FD;&#x6578;&#x6DFB;&#x52A0;&#x5230; &#x968A;&#x5217; &#x7576;&#x4E2D;&#xFF0C;&#x4E26;&#x4E0D;&#x662F;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#xFF1B; &#x6240;&#x4EE5;&#x8AAA;&#x5982;&#x679C;&#x7576;&#x524D;&#x6B63;&#x5728;&#x904B;&#x884C;&#x7684;&#x4EE3;&#x78BC;&#x6C92;&#x6709;&#x904B;&#x884C;&#x5B8C;&#xFF0C;&#x5373;&#x4F7F;&#x5EF6;&#x9072;&#x7684;&#x6642;&#x9593;&#x5DF2;&#x7D93;&#x904E;&#x5B8C;&#xFF0C; &#x8A72;&#x51FD;&#x6578;&#x6703;&#x7B49;&#x5F85;&#x5230;&#x51FD;&#x6578;&#x968A;&#x5217;&#x4E2D;&#x524D;&#x9762;&#x6240;&#x6709;&#x7684;&#x51FD;&#x6578;&#x904B;&#x884C;&#x5B8C;&#x7562;&#x4E4B;&#x5F8C;&#x624D;&#x6703;&#x904B;&#x884C; &#xFF1B;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#x6240;&#x6709;&#x50B3;&#x905E;&#x7D66;setTimeout&#x7684;&#x56DE;&#x8ABF;&#x65B9;&#x6CD5;&#x90FD;&#x6703;&#x5728; &#x6574;&#x500B;&#x74B0;&#x5883;&#x4E0B;&#x7684;&#x6240;&#x6709;&#x4EE3;&#x78BC;&#x904B;&#x884C;&#x5B8C;&#x7562;&#x4E4B;&#x5F8C;&#x57F7;&#x884C; &#xFF1B; &#x671F;&#x671B;&#x4EE3;&#x78BC;&#x7684;&#x8F38;&#x51FA;&#x8B8A;&#x6210;&#xFF1A;5 - 0,1,2,3,4 1 &#x7528;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x6578; IIFE&#xFF08;Immediately Invoked Function Expression &#xFF1A;&#x8072;&#x660E;&#x5373;&#x57F7;&#x884C;&#x7684;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#xFF09;&#x52A0;&#x9589;&#x5305; 1 2 3 4 5 6 7 8 for ( var i = 0 ; i  5 ; i++) { ( function ( j ) { //j =i setTimeout( function ( ) { console .log( new Date , j); }, 1000 ); })(i) } console .log(i); //5, 0,1,2,3,4 &#x7528;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x5275;&#x9020;&#x4E86;&#x65B0;&#x7684;&#x51FD;&#x6578;&#x4F5C;&#x7528;&#x57DF;&#x5C07;timer&#x51FD;&#x6578;&#x5305;&#x88F9;&#x4E86;&#x8D77;&#x4F86;&#xFF0C;&#x4E26;&#x7528;j&#x6355;&#x7372;&#x4E86;&#x6BCF;&#x6B21;&#x5FAA;&#x74B0;&#x6642;&#x7684;i &#xFF0C;&#x9019;&#x6A23;&#x5728;&#x904B;&#x884C;&#x5230;console.log(j)&#x7684;&#x6642;&#x5019;&#x986F;&#x793A;&#x7684;&#x5C31;&#x662F;&#x6BCF;&#x6B21;&#x5FAA;&#x74B0;&#x6642;&#x7684;i&#x503C; 2 &#x5229;&#x7528; API &#x6587;&#x6A94; 1 2 3 4 5 6 for ( var i = 0 ; i  5 ; i++) { setTimeout( function ( j ) { console .log( new Date , j); }, 1000 , i); } console .log(i); //5, 0,1,2,3,4 3 &#x5229;&#x7528; JS &#x4E2D;&#x57FA;&#x672C;&#x985E;&#x578B;&#xFF08;Primitive Type&#xFF09;&#x7684;&#x53C3;&#x6578;&#x50B3;&#x905E;&#x662F; &#x6309;&#x503C;&#x50B3;&#x905E;&#xFF08;Pass by Value&#xFF09; &#x7684;&#x7279;&#x5FB5; 1 2 3 4 5 6 7 8 9 var output = function ( i ) { setTimeout( function ( ) { console .log( new Date , i); }, 1000 ); }; for ( var i = 0 ; i  5 ; i++) { output(i); // &#x9019;&#x88E1;&#x50B3;&#x904E;&#x53BB;&#x7684; i &#x503C;&#x88AB;&#x8907;&#x88FD;&#x4E86; } console .log(i); //5, 0,1,2,3,4"},"core.html":{"title":"JavaScript 核心","path":"\\javascript\\core.html","body":"JavaScript 直譯器轉換過程 語法基本單元化(Tokenizing) 抽象結構樹AST(Abstract Syntax Tree) 代碼生成 esprima.org Parser produces the (beautiful) syntax tree Lexical Scope 語法作用域 (靜態作用域) 直譯器 靜態作用域 語法解析時就已經確定作用域 不會改變 JS屬於靜態作用域 執行 動態作用域 作用域是函數調用時才決定 提升（Hoisting） 在創造環境把記憶體空間準備好，這個流程稱為 提升（Hoisting） var name = &#39;Jacob&#39; // 創造環境 name放入記憶體 name = undefined 1 2 var name; //先宣告變數 name = 'Jacob' //然後才賦予值 執行階段 函數陳述式 在創造階段就會 優先載入 創造階段函式已可以運行 1 2 3 4 var a = '1' function fn ( )  ...  a undefined fn function .. 1 2 3 4 fn() //放前面可因為 創造階段 已可以運行 function fn ( )  console .log()  1 2 3 4 5 fn() //放前面 uncaught typeError: fn is not a function console .log(fn) //undefined var fn = function ( )  //函式表達式 console .log()  創造階段函式優先 1 2 3 4 5 6 7 8 9 10 11 12 //創造階段 function fn ( )  console .log( 1 )  var fn; //執行階段 fn = function ( )  console .log( 2 )  console .log(fn) //2 程式 1 2 3 4 5 function fn ( )  console .log(a)  var a = 'hello' fn() 實際運作拆解 1 2 3 4 5 6 7 8 //創造階段 function fn ( )  console .log(a)  var a; //執行階段 a = 'hello' fn () 1 2 3 4 5 6 7 8 9 function fn ( )  if (a)  // undefined 在 JavaScript 代表著 false console .log( 'hello' )  else  console .log( 'jacob' )   fn() //因為函式在執行時，變數還沒有被賦予值 var a = true 同步/非同步 JS是單執行序 是同步的 可利用 事件佇列 實現非同步 同步概念的先跑完 非同步行為先移至事件佇列 1 2 3 setTimeout( function ( )  console .log( 'someone call' ) , 3000 ) //不管如何調整秒數 都不會優先執行 0也是最後執行 LHS 1= true 1 = true 會出現 left-hand side (LHS)，實際上在此就無法繼續執行 Uncaught ReferenceError: Invalid left-hand side in assignment console.log(a) not defined 但其實是 RHS 錯誤，只是 JavaScript 並不會直接顯示 RHS 錯誤 陳述式 表達式 陳述式與宣告分類 運算式與運算子 正規表達式 陳述式 不會回傳結果 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 )  // 物件實字 var a =  name : \"Jacob\"  立即函式 (匿名函式()) // 匿名函式 外層小括號包起來 並且在後面加入() 來立即執行函式 1 2 3 ( function ( )  console .log( 'Jacob' ) ()) ASI 自動分號插入 自動分號插入( automatic semicolon insertion, ASI ) 是一種程序解析技術， 它在JavaScript 程序的語法分析(parsing) 階段起作用。 “不會” 發生 ASI 的規則： 新的一行是 ( 、 [ 、 / 開始 (容易出錯的地方) 新的一行以 + 、 - 、 * 、 % 作開始 (會影響執行結果) 新的一行以 , 、 . 作開始 (需注意執行結果) 遇到以上的標點符號 前方加入分號 是解決辦法 1 2 3 4 5 6 7 // 執行錯誤 ( function ( )  )() ( function ( )  )() // 正確 ;( function ( )  )() ;( function ( )  )() 1 2 3 4 5 var a = 1 ( function ( )  console .log(a); )() // var a = 1(function() console.log(a);)() 動態型別 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //執行階段才會賦予確立型別 var myName = 'Jacob' var myName; // 先賦予命名空間 myName = 'Jacob' //執行階段才確認型別 console .log( typeof myName) console .log( typeof 'Jacob' ) //顯性的轉換 explicit conversion //隱性的轉換 implicit conversion var num = 1 //number num = num + '' //string num = num * 3 //number console .log(num, typeof num) 原始型別及物件型別 原始型別 可用包裹物件的所有方法 1 2 3 4 a = 'Jacob' var e = new String (a) //但是原始型別盡量不用此方式 建構式 宣告 console .log(a, e) console .log( typeof e) // 建構式宣告的非原始型別 是物件型別 凡是使用 new 所建構的型別，在 typeof 都會是 object 透過建構式來建立的物件， var a = new Object(); if(a) 一樣是會被判定 true，因為物件的記憶體已經存在了 運算子 運算子 運算子優先序 賦值的優先性很低只有3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a是收 3賦予至b的 ‘回傳結果’ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = ; Object .defineProperty(b, 'a' ,  value: 2 , writable: false ) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a 是表達式 接收 1 b.a = 1 跟 b.a沒有關連性 Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 從左至右 console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = '1' ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b )  return a+b console .log( '1'  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( '1' + 2 ) //12 string型別相加 console .log(c)) console .log( 12 ) 嚴格相等 寬鬆相等 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //數字1 藍色 console .log( '1' ) //字串1 黑色 //嚴格相等 特殊狀況 console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //寬鬆相等 console .log( 1 == '1' ) // true 布林和字串轉為數值 console .log( Number ( '1' )) console .log( Number ( '0x11' )) //17 0x是指十六進制數 16+1 console .log( 17 == '0x11' ) //true //Null Undefined 不會轉數字型別 console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // 物件與非物件 使用包裹物件轉換 (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log(  A : 'A' ) //__proto__: Object console .log( String ( A : 'A' )) // [object Object] //物件與物件 比對的不是值 是參考位址 參考同一個記憶體 console .log( == ) //false 物件的參考位址不同 console .log( []==[] ) //false 同樣是物件型別 比對的都是參考位址 var a = [] var b = a ; //b取得的是a的參考位址 console .log( a===b) //a,b使用同個參考位址 JavaScript Equality Table Truthy Truthy（真值） console.log(new Boolean(false)) //Boolean{false} 物件 proto : Object 1 2 3 4 5 if ( new Boolean ( false ))  console .log( 'Truthy' )  else  console .log( 'Falsy' )  邏輯運算子及函式預設值 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // 預設值為 0 的解決方法 使用三元運算子 // 當 cash 是數值或為 0 時，使用 cash 的數值 // 如果 cash 是 NaN 時，則直接套用 500 cash = (cash || cash === 0 )? cash: 500 ; // or 左右兩邊放的是表達式 `` ` # 物件取值 [求值策略](https://zh.wikipedia.org/wiki/求值策略) 點 與 中括弧(可用變數方式) 物件取值屬性用字串 ` `` js const family =  name: 'Hsu' , members:  mon: 'mon' , dad: 'dad' , others: 'others' , 1 : 10 , '$-myFamily' : 'my family' , callFamily: function ( )  console .log( 'call family' ) , 'Hello' : function ( )  console .log( 'I am groot ' )   //物件實字 console .log(family.name); console .log(family[ 'name' ]); const a = 'name' ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ 'callFamily' ](); //add family[ '$' ] = 'money' delete family.others delete family[ '$' ] //利用陣列及for迴圈 執行物件的函式 var familyMethod = [ 'callFamily' , 'Hello' ] for ( var i= 0 ; i familyMethod.length;i++)  console .log(familyMethod[i]) family[familyMethod[i]]();  1 2 3 4 5 6 7 //變數無法被刪除，屬性才可以 var a= 1 ; //變數 b= 2 ; //屬性 console .log( window ) delete a; delete b; //b is not defind console .log( window ) 物件記憶體空間 1 2 3 4 5 var person =  name: 'Jacob'  var person2 = person person2 = 'Hsu' //find 0x01 change name's value 參考物件 Value 0x01 name Jacob 物件變數 Value person 0x01 person2 0x01 1 2 3 4 5 6 7 8 // 見大括號 生成新的參考物件 var company =  team: 'dev' , member:  rd: 'Jacob' qa: 'Claire'   參考物件 Value 0x01 team dev member 0x02 | 0x02 | | | rd | Jacob | | qa | Claire | 物件變數 Value company 0x01 純值無法新增屬性 js兩種型別 不是純值 就是物件 (function是物件) 1 2 3 4 5 6 7 8 9 10 11 12 13 var newStr = 'myname' //純值 newStr.name = 'Jacob' console .log(newStr) var newStr2 = new String ( 'myname' ) //建構式 物件 newStr2.name = 'Jacob' console .log(newStr2) function callFn ( )  console .log( 'fun' )  console .log(callFn) console .dir(callFn) //看見物件所有屬性內容 純值 傳值(call by value) 物件(陣列 函式)) 傳參考(call by reference) 深淺拷貝 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 var family =  name: 'Hsu' , member:  father: 'dad' , monther: 'mom' , other: 'someone'   var newFamily =  for ( var key in family)  console .log(key, family[key]); newFamily[key] =family[key];  newFamily.name = 'Chen' console .log(family, newFamily) newFamily.member.other = 'stranger' console .log(family, newFamily) //for in只能做第一層的複製 第二層是傳參考的形式 //淺層複製 js for in, jQuery extend, ES6 assign //jQuery var newFamily2 = jQuery.extend(, family); //ES6 var newFamily3 = Object .assign(, family) //深層複製 deep copy 會將原本的物件轉成字串再轉回來 傳參考特性會沒有 //console.log(family, JSON.stringify(family)) console .log(family, JSON .parse( JSON .stringify(family) )) var newFamily4 = JSON .parse( JSON .stringify(family) ); console .log(family === newFamily4) newFamily4.name = 'Liao' newFamily4.member.other = 'Deep' console .log(family, newFamily4) //兩者完全無關 參考也都不一樣 陣列 陣列是物件型別的一種 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var newArray = [ 1 , 'Str' , true ,  name: 'Jacob'  ]; console .log(newArray[ 3 ]); //[object Object]  name: \"Jacob\" console .log(newArray .3 ); //\"error\" newArray.push( 5 ); newArray.name = 'Hsu' ; //物件可隨意增加屬性 newArray[ 5 ] = 'Chen' ; newArray[ 7 ] = 'Liao' ; //陣列6 empty 取值undefined console .log(newArray); //name不屬於陣列裡面的長度 for ( var i= 0 ;inewArray.length;i++)  console .log(newArray[i])  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a = [ 1 , 2 , 3 ]; console .log(a, a[ 1 ], a.length) //forEach 不是實體屬性 是陣列原型的屬性 a.forEach( function ( i )  console .log(i) ); ( 3 ) [ 1 , 2 , 3 ] 0 : 1 1 : 2 2 : 3 length: 3 // length 也是一個物件的屬性 __proto__: Array ( 0 ) //陣列的原型 可以透過點運算子不斷向上查找取得方法 例:forEach ... __proto__: Object // 陣列的原型 繼承物件的原型 所以陣列也可以使用物件原型的方法 例:toString 1 2 3 4 5 6 7 8 var a = [ 1 , 2 , 3 ]; var b = [ 4 , 5 , 6 ]; //新增方法到原型鏈上 a.__proto__.getLast = function ( )  return this [ this .length -1 ]; //b[b.length-1]  console .log(a, b, a.getLast(), a.toString()) JSON JSON - 維基百科 儘管JSON是JavaScript的一個子集，但JSON是獨立於語言的文字格式 JSON所有的屬性一定都是字串的形式 物件可以用單引號 &#39; 但JSON一律用雙引號  SON 的格式是非常嚴格的，多一個逗號少一個逗號，都會導致出現錯誤， 所以最後一筆不可多了一個逗號 透過 JSON.parse() 出來的資料是一個物件，所以物件會有傳參考特性 後續的值變更，原本的值也會變更 原生AJAX讀JSON 1 2 3 4 5 6 7 8 9 10 //原生AJAX function getData ( )  console .log( this .response) var data = JSON .parse( this .response); console .log(data);  var oReq = new XMLHttpRequest(); oReq.addEventListener( \"load\" , getData); oReq.open( \"GET\" , \"family.json\" ) //傳入的字串 oReq.send(); 透過開發工具Network可以看結果 function 在 JavaScript 中 function 是一個很特別的存在，它是可以當成物件來使用， function 也是物件的一種，只是它是擁有程式區塊的能力物件而已 透過 「.」 即可做到新增屬性與值，所以function 在 JavaScript 是一個特殊的物件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( )  console .log( '函式陳述式' , '具名函式' ); console .log(statementFn);  statementFn(); var expressionFn = function ( )  console .log( '函式表達式' , '匿名函式' ); //不是所有匿名函式 都是函式表達式 console .log(expressionFn);  expressionFn() var functionC = function functionD ( )  console .log(functionC, functionD) //具名函式能夠在函式內被調用  console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin )  num += 1 console .log( 'Exec giveMeMoney' ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) ; console .log(giveMeMoney( 30 )) //加錢到超過100元才停止 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn )  fn();  // 函數陳述式沒有名稱無法執行 // function (fn)  // fn(); //  // 傳入的參數函式 如同函式表達式 不需要名稱 callSomeFn( function ( )  console .log( '執行函式' ) ) // 2定義一段函式並賦予到參數上 立即函式(IIFE) 立即呼叫函式表達式 （英文：immediately-invoked function expression，縮寫：IIFE） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( )  console .log( 'IIFE' )  fnA(); // IIFE ( function IIFE ( )  console .log( '立即函式' , 'IIFE' , '沒有fnA也可以執行' , '這裡是具名函式' ) // 1. 立即執行 // 2. 無法再函式外被再次執行 ()); //括號內層再補上小括號 ( function IIFE ( )  )(); //小括號可以移到外層 console .log(IIFE); //IIFE is not defined ( function ( )  console .log( '立即函式' , 'IIFE' , '沒有fnA也可以執行' ) // 1. 立即執行 // 2. 無法再函式外被再次執行 ()); ( function ( )  var name = 'Jacob' ; console .log(name) // 限制變數的作用域 )(); var whereParameter = ( function ( parameter )  console .log(parameter) return parameter; )( '參數在這' ); console .log(whereParameter); //記得養成好習慣 在立即函式前或後加分號 // 立即函式 傳遞變數 var a = ; ( function ( b )  b.person = 'jacob' ; )(a) ;( function ( c )  console .log(c.person); //把另一個立即函式定義的變數印出來 )(a) // 大型框架下 用全域物件傳值 ( function ( global )  global.person = 'jacob' ; )( window ) ;( function ( )  console .log(person); //把另一個立即函式定義的變數印出來 )() 參數 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a )  console .log(name+ '你好' +a)  function funcB ( fn )  fn( 'Jacob' , 1 ) //實際執行在這  funcB(cbFn) //\"Jacob你好1\" 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a )  console .log(a, arguments ); //arguments 是一個類陣列 不是純陣列 for ( let index = 0 ; index  arguments .length; index++)  console .log( arguments [index]); // 1 2 3 '4'  // 類陣列並沒有絕大多數陣列可使用的方法 // \"TypeError: arguments.forEach is not a function arguments .forEach( function ( )  )  callArg( 1 , 2 , 3 , '4' ) //1, [object Arguments]  0: 1, 1: 2, 2: 3, 3: \"4\" 閉包 Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( )  var money = 1000 ; return function ( price )  money = money + price return money   //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price)  console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( )  var arr = []; for ( var i= 0 ;i 3 ;i++)  arr.push( function ( )  console .log(i); );  console .log( 'i' , i) // 3 3 3 return arr;  var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); 透過 立即函式 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( )  var arr = []; for ( var i= 0 ;i 3 ;i++)  // 立即函式一個功能 限制作用域 ( function ( j )  arr.push( function ( )  console .log(j); ); )(i);  console .log( 'i' , i) // 0 1 2 return arr;  var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); 透過 let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( )  var arr = []; for ( let i= 0 ;i 3 ;i++)  arr.push( function ( )  console .log(i); // 0 1 2 );  //console.log('i', i) // \"error\" let作用域只在for return arr;  var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); 函式工廠 給不同的值　做相同的事情 1 2 3 4 5 6 7 8 9 function storeMoney ( initVal )  var money = initVal || 1000 return function ( price )  money = money + price; return money;   var MingMoney = storeMoney( 100 ); console .log(MingMoney( 500 )) // 600 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 function storeMoney ( initVal )  var money = initVal || 1000 // 私有方法 可以做很多不同事情 return  increase: function ( price )  money += price , decrease: function ( price )  money -= price , value: function ( )  return money;    var MingMoney = storeMoney( 100 ); MingMoney.increase( 100 ); MingMoney.increase( 25 ); MingMoney.decrease( 25 ); console .log(MingMoney.value()) // 200 this chrome / devTool / Sources / || 暫停按鈕 / 進入執行堆疊 this 為關鍵字 在每個執行環境存在 this 的調用方式 作為物件方法 關注在哪個物件下呼叫 Object.fn() this 指向 Object 簡易呼叫 (不建議調用this) bind, apply, call 方法 new DOM事件處理器 箭頭函式(ES6) simple call 簡易呼叫 1 2 3 4 5 6 var myName = 'Jacob' ; function callName ( )  console .log( this , this .myName)  callName() // this - window // 盡可能不要使用simple call的this 1 2 3 4 5 6 7 ( function ( )  console .log( this .myName); function callFn ( )  console .log( this .myName);  callFn(); //simple call 看到函式是直接執行的 就是簡易呼叫 執行閉包內函式也是 )(); 1 2 3 4 5 6 7 8 // callback function myCb ( callback )  var money = 100 return callback(money)  myCb( function ( money )  console .log( this .myName, money+ 100 ) ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 var a = [ 1 , 2 , 3 ] // forEach 後方是插入一個callback函式 a.forEach( function ( i )  console .log( this .myName, i); ) var family =  myName: 'Hsu' , callName: function ( )  // var self = this; // vm , that setTimeout( function ( )  console .log( this .myName) // simple call this-window 'Jacob' 無法取得物件的myName 'Hsu' console .log(self.myName) // 物件的myName 'Hsu' , 1000 )  family.callName();  Call, appply, bind 1 2 3 4 5 6 7 8 9 10 11 12 13 var team =  myName: 'Jacob'  function fn ( para1, para2 )  console .log( this , para1, para2)  fn( 1 , 2 ); //simple call fn.call(team, 1 , 2 ); // call 是立刻執行 fn.apply(team, [ 3 , 4 ]); // apply 是立刻執行 差別在以陣列方式呈現 var fn2 = fn.bind(team, 5 , 6 ); // bind 非立刻執行 fn2( 6 ); // [object Object] 5 6 順序執行參數所以是6 fn2( 1 , 2 ); // [object Object] 5 1 順序執行參數所以是1 1 2 3 4 5 6 7 8 function fn ( para1, para2 )  console .log( this , para1, para2)  // 進階概念 fn.call( 1 , 'Jacob' , 'Jessica' ) //傳純值 Number1 'Jacob', 'Jessica' 已建構式方式呈現 物件的型別 fn.call( 'Str' , 'Jacob' , 'Jessica' ) fn.call( undefined , 'Jacob' , 'Jessica' ) // null 、undefined 將會被置換成全域變數 [object Window] 'Jacob', 'Jessica' MDN call() 嚴格模式 1 2 3 4 ( function ( )  'use strict' ; name = 'Jacob' ; // \"error\" name is not defined )() 1 2 3 4 5 6 7 function fn ( para1, para2 )  'use strict' ; // 有加入嚴格模式 this所指向的window會變undefined console .log( this , para1, para2) // 1 \"Jacob\" \"Jessica\" 嚴格模式下 純值維持原型別 不以建構式方式呈現  fn.call( 1 , 'Jacob' , 'Jessica' ) fn.call( undefined , 'Jacob' , 'Jessica' ) // undefined \"Jacob\" \"Jessica\" // 簡易呼叫下 盡可能不要調用this 因為它本質就是undefined this: DOM 1 2  button onclick = \"console.log(this)\"  this is btn / button   button onclick = \"console.dir(this)\"  this is btn / button  console.dir(object) new 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function Dog ( name, color, size )  this .name = name; this .color = color; this .size = size;  var Bibi = new Dog( '比比' , '棕色' , '小' ) console .log(Bibi) //函式本身就是一個物件 函式物件有一個特別的屬性 prototype //透過prototype所新增的屬性 就會做原型上的方法 函式物件特有的屬性 Dog.prototype.bark = function ( )  console .log( this .name, 'barking' )  // __proto__ 物件上 // prototype 函式上 // 調整原型的方法時 最好的方式是從函式本身的原型屬性上去調整 console .log(Dog.prototype === Bibi.__proto__) // true 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 var b = new String ( 'bcde' ); console .log(b) console .dir( String ) String .prototype.lastText = function ( )  return this [ this .length - 1 ];  console .log(b.lastText()); Number .prototype.secondPower = function ( )  return this * this ;  var num = 5 ; console .log(num.secondPower()); var date = new Date (); console .log(date); console .dir( Date ); Date .prototype.getFullDate = function ( )  var dd = String ( this .getDate()); var mm = String ( this .getMonth()+ 1 ); var yyyy = this .getFullYear(); var today = yyyy + '/' + mm + '/' +dd; return today;  console .log(date.getFullDate()); 繼承 Object.create() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 var a = [] //Object  Array  a (實體) //原型鏈上新增一個層級 //Object  Animal  Dog  實體 //Object  Animal  Cat  實體 // Object.create() 可以把其他物件作為原型使用 var dog =  name: '狗' , bark: function ( )  console .log( this .name + ' barking' )   var Corgi = Object .create(dog); //Corgi 把 dog 作為原型使用 Corgi.name = 'Welsh Corgi' console .log(Corgi) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 function Animal ( family )  this .kingdom = '動物界' this .family = family || '貓科'  Animal.prototype.move = function ( )  console .log( this .name + ' can move' )  function Dog ( name, size )  Animal.call( this , '犬科' ) this .name = name; this .size = size || 'small'  Dog.prototype = Object .create(Animal.prototype) Dog.prototype.constructor = Dog; // 狗的原型原本直接繼承於動物界的原型 constructor 會被覆蓋所以補回原本建構函式 Dog.prototype.bark = function ( )  console .log( this .name + ' barking' )  var Chihuahua = new Dog( 'Chihuahua' , 'small' ); console .log(Chihuahua) Chihuahua.bark(); Chihuahua.move(); Chihuahua.family // undefined 目前只有繼承原型prototype 但無繼承動物界的建構函式 Animal.call 如果瀏覽器不支援 Object.create() 這時候我們會寫一些程式來填補某些瀏覽器不支援的情況，我們把這些程式稱做 polyfill 屬性特徵 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 const obj =  a: 1 , b: 2 , c: 3  console .log(obj) //Object.defineProperty() // 屬性，調整屬性的特徵 // 1. 值 2. 可否寫入 3. 可否被刪除 4. 可否被列舉 //Object.defineProperty(物件, 屬性, 參數) // being explicit Object .defineProperty(obj, 'a' ,  enumerable: true , configurable: true , writable: false , value: 4 ); console .log(obj) // \"TypeError: Cannot assign to read only property 'a' of object '#Object' ( function ( )  'use strict' ; obj.a = 5 ; ()) Object.defineProperty() // 延伸的三種物件方法 preventExtensions seal Freeze 防止擴充 封裝 凍結 直接操作物件本身 Object.preventExtensions() Object.seal() 無法新增刪除 也無法配置特徵 但是可以調整屬性值 Object.freeze() 物件加上seal 且無法調整值 Setter And Getter 1 2 3 4 5 6 7 8 9 10 11 12 13 14 var wallet =  total: 100 , set save(price)  this .total = this .total + price / 2 , get save()  return this .total / 2   // Getter 取得特定值的方法 // Setter 存值的方法 // wallet.total = 300; wallet.save = 300 ; //透過Setter改變total的值 console .log(wallet.save) //250 / 2 = 125 Object.defineProperty() Object.getOwnPropertyDescriptor() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var wallet =  total: 100  Object .defineProperty(wallet, 'save' ,  configurable: true , set : function(price)  this .total = this .total + price / 2 , get : function()  return this .total / 2  ); wallet.save = 300 ; //透過Setter改變total的值 console .log(wallet); // save 250 / 2 = 125 console .log( Object .getOwnPropertyDescriptor(wallet, 'save' )) // [object Object]  // configurable: false, // enumerable: false, 1 2 3 4 5 6 7 8 // 取得陣列最後一個值 var a = [ 1 , 2 , 3 ]; Object .defineProperty( Array .prototype, 'lastest' ,  get : function()  return this [ this .length - 1 ];  ); console .log(a.lastest); //3 ##　vue https://github.com/vuejs/vue/blob/dev/dist/vue.js var emptyObject = Object.freeze({}); 確保空物件 1 2 3 4 5 6 7 8 var app = new Vue( //建構初始化 el: '#app' , data:  message: 'Hello Vue!'  ) console .log(app) 深入响应式原理 当你把一个普通的 JavaScript 对象传入 Vue 实例作为 data 选项，Vue 将遍历此对象所有的属性，并使用 Object.defineProperty 把这些属性全部转为 getter/setter 。Object.defineProperty 是 ES5 中一个无法 shim 的特性，这也就是 Vue 不支持 IE8 以及更低版本浏览器的原因。 Vue 理解之白话 getter/setter https://github.com/vuejs/vue/blob/dev/dist/vue.js proxySetter reactiveSetter app.obj === app._data.obj Vue 响应式核心就是，getter 的时候会收集依赖，setter 的时候会触发依赖更新 Let var的作用域在函數(function) 裡 let的作用域則是在區塊(block) 裡 1 2 3 4 for ( var i= 0 ;i 10 ;i++)  console .log(i)  console .log(i) //window.i 全域 汙染整個作用域 1 2 3 4 5 6 let name = 'Jacob'  let name = 'Hsu'  console .log(name) //Jacob const 利用 const 可以做到除了被凍結 還能不被賦值 1 2 3 4 5 6 7 8 9 10 11 12 13 const person =  name: '黨工' , money: 500  person.name = '網軍' Object .freeze(person); person.money = 1000 ; person = ; // devTool console person // var  person // const let TDZ 1 2 3 4 5 6 7 8 9 10 let arg = 'first' ;  //創造 let arg; // 暫時性死區 TDZ 有hoisting但鎖住 //執行 console .log(arg); // first let arg = 'second'  1 let 一樣有創造階段 2 但從創造到實際宣告的階段會出現TDZ 這個區域無法呼叫變數 3 有創造到執行的概念，但不會預先出現 (文件不會表明這與 var 的Hoisting相同概念) ES6 Airbnb Airbnb 規範文件 (ES6 版本)： https://github.com/airbnb/javascript ESLint 安裝教學： https://www.youtube.com/watch?v=WiommcFaYvY ? How would you like to use ESLint? (Use arrow keys) To check syntax only To check syntax and find problems ❯ To check syntax, find problems, and enforce code style 如果要使用 Airbnb 的規範，請選擇最後一個選項。 箭頭函數 //沒有傳統函數 arguments 參數 1 2 3 4 const nums = function ( )  console .log( arguments );  nums( 10 , 50 , 100 , 50 , 5 , 1 ); 1 2 3 4 const nums = () =  console .log( arguments ); //Uncaught ReferenceError  nums( 10 , 50 , 100 , 50 , 5 , 1 ); 1 2 3 4 const nums = ( ...arg ) =  console .log(arg); //Uncaught ReferenceError  nums( 10 , 50 , 100 , 50 , 5 , 1 ); 箭頭函式沒有自己的this 他的this指向外層 1 2 3 4 5 6 7 const ele = document .querySelector( 'p' ); ele.addEventListener( 'click' , function ( )  console .log( this ) ); ele.addEventListener( 'click' , () = console .log( this ) //指到不一樣的位置 window 全域 ); 箭頭函數 常見問題 不能直接回傳物件實字 1 2 3 4 const arrFn = () =  data : 1  console .log(arrFn()) //undefined const arrFnr = () = ( data : 1 ) console .log(arrFnr()) //data: 1 搭配判斷式不能直接接箭頭函式 1 2 3 4 5 let num = 0 const numFn = num || () = 1 ; console .log(numFn) const numFunction = num || ( ( ) = 1 ); console .log(numFunction) // 加括號修正 物件裡面搭配箭頭函樹會出錯 指向是不同的 1 2 3 4 5 6 7 8 const app = new Vue( data:  num: 1 , created: () =  console .log( this .num) //FAIL  ) 平均數 1 2 3 4 5 6 7 8 9 10 const average = function ( )  // arguments 是類陣列沒有陣列方法 用Array.from轉成純陣列 const nums = Array .from( arguments ); const total = nums.reduce( function ( acc, val )  return acc + val , 0 ); // 0 是第一次執行的前一個值 console .log(total); return total / nums.length;  console .log(average( 1 , 2 , 3 , 4 , 5 )) // 15 3 Array.from() Array.reduce() 1 2 const average = ( ...nums ) = nums.reduce( ( acc, val ) = acc + val, 0 ) / nums.length console .log(average( 1 , 2 , 3 , 4 , 5 )) // 3"},"core.html#JavaScript-直譯器轉換過程":{"title":"JavaScript &#x76F4;&#x8B6F;&#x5668;&#x8F49;&#x63DB;&#x904E;&#x7A0B;","path":"\\javascript\\core.html#JavaScript-直譯器轉換過程","body":"&#x8A9E;&#x6CD5;&#x57FA;&#x672C;&#x55AE;&#x5143;&#x5316;(Tokenizing) &#x62BD;&#x8C61;&#x7D50;&#x69CB;&#x6A39;AST(Abstract Syntax Tree) &#x4EE3;&#x78BC;&#x751F;&#x6210; esprima.org Parser produces the (beautiful) syntax tree Lexical Scope &#x8A9E;&#x6CD5;&#x4F5C;&#x7528;&#x57DF; (&#x975C;&#x614B;&#x4F5C;&#x7528;&#x57DF;) &#x76F4;&#x8B6F;&#x5668; &#x975C;&#x614B;&#x4F5C;&#x7528;&#x57DF; &#x8A9E;&#x6CD5;&#x89E3;&#x6790;&#x6642;&#x5C31;&#x5DF2;&#x7D93;&#x78BA;&#x5B9A;&#x4F5C;&#x7528;&#x57DF; &#x4E0D;&#x6703;&#x6539;&#x8B8A; JS&#x5C6C;&#x65BC;&#x975C;&#x614B;&#x4F5C;&#x7528;&#x57DF; &#x57F7;&#x884C; &#x52D5;&#x614B;&#x4F5C;&#x7528;&#x57DF; &#x4F5C;&#x7528;&#x57DF;&#x662F;&#x51FD;&#x6578;&#x8ABF;&#x7528;&#x6642;&#x624D;&#x6C7A;&#x5B9A; &#x63D0;&#x5347;&#xFF08;Hoisting&#xFF09; &#x5728;&#x5275;&#x9020;&#x74B0;&#x5883;&#x628A;&#x8A18;&#x61B6;&#x9AD4;&#x7A7A;&#x9593;&#x6E96;&#x5099;&#x597D;&#xFF0C;&#x9019;&#x500B;&#x6D41;&#x7A0B;&#x7A31;&#x70BA; &#x63D0;&#x5347;&#xFF08;Hoisting&#xFF09; var name = &apos;Jacob&apos; // &#x5275;&#x9020;&#x74B0;&#x5883; name&#x653E;&#x5165;&#x8A18;&#x61B6;&#x9AD4; name = undefined 1 2 var name; //&#x5148;&#x5BA3;&#x544A;&#x8B8A;&#x6578; name = &apos;Jacob&apos; //&#x7136;&#x5F8C;&#x624D;&#x8CE6;&#x4E88;&#x503C; &#x57F7;&#x884C;&#x968E;&#x6BB5; &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F; &#x5728;&#x5275;&#x9020;&#x968E;&#x6BB5;&#x5C31;&#x6703; &#x512A;&#x5148;&#x8F09;&#x5165; &#x5275;&#x9020;&#x968E;&#x6BB5;&#x51FD;&#x5F0F;&#x5DF2;&#x53EF;&#x4EE5;&#x904B;&#x884C; 1 2 3 4 var a = &apos;1&apos; function fn ( ) { ... } a undefined fn function .. 1 2 3 4 fn() //&#x653E;&#x524D;&#x9762;&#x53EF;&#x56E0;&#x70BA; &#x5275;&#x9020;&#x968E;&#x6BB5; &#x5DF2;&#x53EF;&#x4EE5;&#x904B;&#x884C; function fn ( ) { console .log() } 1 2 3 4 5 fn() //&#x653E;&#x524D;&#x9762; uncaught typeError: fn is not a function console .log(fn) //undefined var fn = function ( ) { //&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log() } &#x5275;&#x9020;&#x968E;&#x6BB5;&#x51FD;&#x5F0F;&#x512A;&#x5148; 1 2 3 4 5 6 7 8 9 10 11 12 //&#x5275;&#x9020;&#x968E;&#x6BB5; function fn ( ) { console .log( 1 ) } var fn; //&#x57F7;&#x884C;&#x968E;&#x6BB5; fn = function ( ) { console .log( 2 ) } console .log(fn) //2 &#x7A0B;&#x5F0F; 1 2 3 4 5 function fn ( ) { console .log(a) } var a = &apos;hello&apos; fn() &#x5BE6;&#x969B;&#x904B;&#x4F5C;&#x62C6;&#x89E3; 1 2 3 4 5 6 7 8 //&#x5275;&#x9020;&#x968E;&#x6BB5; function fn ( ) { console .log(a) } var a; //&#x57F7;&#x884C;&#x968E;&#x6BB5; a = &apos;hello&apos; fn () 1 2 3 4 5 6 7 8 9 function fn ( ) { if (a) { // undefined &#x5728; JavaScript &#x4EE3;&#x8868;&#x8457; false console .log( &apos;hello&apos; ) } else { console .log( &apos;jacob&apos; ) } } fn() //&#x56E0;&#x70BA;&#x51FD;&#x5F0F;&#x5728;&#x57F7;&#x884C;&#x6642;&#xFF0C;&#x8B8A;&#x6578;&#x9084;&#x6C92;&#x6709;&#x88AB;&#x8CE6;&#x4E88;&#x503C; var a = true &#x540C;&#x6B65;/&#x975E;&#x540C;&#x6B65; JS&#x662F;&#x55AE;&#x57F7;&#x884C;&#x5E8F; &#x662F;&#x540C;&#x6B65;&#x7684; &#x53EF;&#x5229;&#x7528; &#x4E8B;&#x4EF6;&#x4F47;&#x5217; &#x5BE6;&#x73FE;&#x975E;&#x540C;&#x6B65; &#x540C;&#x6B65;&#x6982;&#x5FF5;&#x7684;&#x5148;&#x8DD1;&#x5B8C; &#x975E;&#x540C;&#x6B65;&#x884C;&#x70BA;&#x5148;&#x79FB;&#x81F3;&#x4E8B;&#x4EF6;&#x4F47;&#x5217; 1 2 3 setTimeout( function ( ) { console .log( &apos;someone call&apos; ) }, 3000 ) //&#x4E0D;&#x7BA1;&#x5982;&#x4F55;&#x8ABF;&#x6574;&#x79D2;&#x6578; &#x90FD;&#x4E0D;&#x6703;&#x512A;&#x5148;&#x57F7;&#x884C; 0&#x4E5F;&#x662F;&#x6700;&#x5F8C;&#x57F7;&#x884C; LHS 1= true 1 = true &#x6703;&#x51FA;&#x73FE; left-hand side (LHS)&#xFF0C;&#x5BE6;&#x969B;&#x4E0A;&#x5728;&#x6B64;&#x5C31;&#x7121;&#x6CD5;&#x7E7C;&#x7E8C;&#x57F7;&#x884C; Uncaught ReferenceError: Invalid left-hand side in assignment console.log(a) not defined &#x4F46;&#x5176;&#x5BE6;&#x662F; RHS &#x932F;&#x8AA4;&#xFF0C;&#x53EA;&#x662F; JavaScript &#x4E26;&#x4E0D;&#x6703;&#x76F4;&#x63A5;&#x986F;&#x793A; RHS &#x932F;&#x8AA4; &#x9673;&#x8FF0;&#x5F0F; &#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F;&#x8207;&#x5BA3;&#x544A;&#x5206;&#x985E; &#x904B;&#x7B97;&#x5F0F;&#x8207;&#x904B;&#x7B97;&#x5B50; &#x6B63;&#x898F;&#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F; &#x4E0D;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 ) {} // &#x7269;&#x4EF6;&#x5BE6;&#x5B57; var a = { name : Jacob } &#x7ACB;&#x5373;&#x51FD;&#x5F0F; (&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#提升（Hoisting）":{"title":"&#x63D0;&#x5347;&#xFF08;Hoisting&#xFF09;","path":"\\javascript\\core.html#提升（Hoisting）","body":"&#x5728;&#x5275;&#x9020;&#x74B0;&#x5883;&#x628A;&#x8A18;&#x61B6;&#x9AD4;&#x7A7A;&#x9593;&#x6E96;&#x5099;&#x597D;&#xFF0C;&#x9019;&#x500B;&#x6D41;&#x7A0B;&#x7A31;&#x70BA; &#x63D0;&#x5347;&#xFF08;Hoisting&#xFF09; var name = &apos;Jacob&apos; // &#x5275;&#x9020;&#x74B0;&#x5883; name&#x653E;&#x5165;&#x8A18;&#x61B6;&#x9AD4; name = undefined 1 2 var name; //&#x5148;&#x5BA3;&#x544A;&#x8B8A;&#x6578; name = &apos;Jacob&apos; //&#x7136;&#x5F8C;&#x624D;&#x8CE6;&#x4E88;&#x503C; &#x57F7;&#x884C;&#x968E;&#x6BB5; &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F; &#x5728;&#x5275;&#x9020;&#x968E;&#x6BB5;&#x5C31;&#x6703; &#x512A;&#x5148;&#x8F09;&#x5165; &#x5275;&#x9020;&#x968E;&#x6BB5;&#x51FD;&#x5F0F;&#x5DF2;&#x53EF;&#x4EE5;&#x904B;&#x884C; 1 2 3 4 var a = &apos;1&apos; function fn ( ) { ... } a undefined fn function .. 1 2 3 4 fn() //&#x653E;&#x524D;&#x9762;&#x53EF;&#x56E0;&#x70BA; &#x5275;&#x9020;&#x968E;&#x6BB5; &#x5DF2;&#x53EF;&#x4EE5;&#x904B;&#x884C; function fn ( ) { console .log() } 1 2 3 4 5 fn() //&#x653E;&#x524D;&#x9762; uncaught typeError: fn is not a function console .log(fn) //undefined var fn = function ( ) { //&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log() } &#x5275;&#x9020;&#x968E;&#x6BB5;&#x51FD;&#x5F0F;&#x512A;&#x5148; 1 2 3 4 5 6 7 8 9 10 11 12 //&#x5275;&#x9020;&#x968E;&#x6BB5; function fn ( ) { console .log( 1 ) } var fn; //&#x57F7;&#x884C;&#x968E;&#x6BB5; fn = function ( ) { console .log( 2 ) } console .log(fn) //2 &#x7A0B;&#x5F0F; 1 2 3 4 5 function fn ( ) { console .log(a) } var a = &apos;hello&apos; fn() &#x5BE6;&#x969B;&#x904B;&#x4F5C;&#x62C6;&#x89E3; 1 2 3 4 5 6 7 8 //&#x5275;&#x9020;&#x968E;&#x6BB5; function fn ( ) { console .log(a) } var a; //&#x57F7;&#x884C;&#x968E;&#x6BB5; a = &apos;hello&apos; fn () 1 2 3 4 5 6 7 8 9 function fn ( ) { if (a) { // undefined &#x5728; JavaScript &#x4EE3;&#x8868;&#x8457; false console .log( &apos;hello&apos; ) } else { console .log( &apos;jacob&apos; ) } } fn() //&#x56E0;&#x70BA;&#x51FD;&#x5F0F;&#x5728;&#x57F7;&#x884C;&#x6642;&#xFF0C;&#x8B8A;&#x6578;&#x9084;&#x6C92;&#x6709;&#x88AB;&#x8CE6;&#x4E88;&#x503C; var a = true &#x540C;&#x6B65;/&#x975E;&#x540C;&#x6B65; JS&#x662F;&#x55AE;&#x57F7;&#x884C;&#x5E8F; &#x662F;&#x540C;&#x6B65;&#x7684; &#x53EF;&#x5229;&#x7528; &#x4E8B;&#x4EF6;&#x4F47;&#x5217; &#x5BE6;&#x73FE;&#x975E;&#x540C;&#x6B65; &#x540C;&#x6B65;&#x6982;&#x5FF5;&#x7684;&#x5148;&#x8DD1;&#x5B8C; &#x975E;&#x540C;&#x6B65;&#x884C;&#x70BA;&#x5148;&#x79FB;&#x81F3;&#x4E8B;&#x4EF6;&#x4F47;&#x5217; 1 2 3 setTimeout( function ( ) { console .log( &apos;someone call&apos; ) }, 3000 ) //&#x4E0D;&#x7BA1;&#x5982;&#x4F55;&#x8ABF;&#x6574;&#x79D2;&#x6578; &#x90FD;&#x4E0D;&#x6703;&#x512A;&#x5148;&#x57F7;&#x884C; 0&#x4E5F;&#x662F;&#x6700;&#x5F8C;&#x57F7;&#x884C; LHS 1= true 1 = true &#x6703;&#x51FA;&#x73FE; left-hand side (LHS)&#xFF0C;&#x5BE6;&#x969B;&#x4E0A;&#x5728;&#x6B64;&#x5C31;&#x7121;&#x6CD5;&#x7E7C;&#x7E8C;&#x57F7;&#x884C; Uncaught ReferenceError: Invalid left-hand side in assignment console.log(a) not defined &#x4F46;&#x5176;&#x5BE6;&#x662F; RHS &#x932F;&#x8AA4;&#xFF0C;&#x53EA;&#x662F; JavaScript &#x4E26;&#x4E0D;&#x6703;&#x76F4;&#x63A5;&#x986F;&#x793A; RHS &#x932F;&#x8AA4; &#x9673;&#x8FF0;&#x5F0F; &#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F;&#x8207;&#x5BA3;&#x544A;&#x5206;&#x985E; &#x904B;&#x7B97;&#x5F0F;&#x8207;&#x904B;&#x7B97;&#x5B50; &#x6B63;&#x898F;&#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F; &#x4E0D;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 ) {} // &#x7269;&#x4EF6;&#x5BE6;&#x5B57; var a = { name : Jacob } &#x7ACB;&#x5373;&#x51FD;&#x5F0F; (&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#同步-非同步":{"title":"&#x540C;&#x6B65;/&#x975E;&#x540C;&#x6B65;","path":"\\javascript\\core.html#同步-非同步","body":"JS&#x662F;&#x55AE;&#x57F7;&#x884C;&#x5E8F; &#x662F;&#x540C;&#x6B65;&#x7684; &#x53EF;&#x5229;&#x7528; &#x4E8B;&#x4EF6;&#x4F47;&#x5217; &#x5BE6;&#x73FE;&#x975E;&#x540C;&#x6B65; &#x540C;&#x6B65;&#x6982;&#x5FF5;&#x7684;&#x5148;&#x8DD1;&#x5B8C; &#x975E;&#x540C;&#x6B65;&#x884C;&#x70BA;&#x5148;&#x79FB;&#x81F3;&#x4E8B;&#x4EF6;&#x4F47;&#x5217; 1 2 3 setTimeout( function ( ) { console .log( &apos;someone call&apos; ) }, 3000 ) //&#x4E0D;&#x7BA1;&#x5982;&#x4F55;&#x8ABF;&#x6574;&#x79D2;&#x6578; &#x90FD;&#x4E0D;&#x6703;&#x512A;&#x5148;&#x57F7;&#x884C; 0&#x4E5F;&#x662F;&#x6700;&#x5F8C;&#x57F7;&#x884C; LHS 1= true 1 = true &#x6703;&#x51FA;&#x73FE; left-hand side (LHS)&#xFF0C;&#x5BE6;&#x969B;&#x4E0A;&#x5728;&#x6B64;&#x5C31;&#x7121;&#x6CD5;&#x7E7C;&#x7E8C;&#x57F7;&#x884C; Uncaught ReferenceError: Invalid left-hand side in assignment console.log(a) not defined &#x4F46;&#x5176;&#x5BE6;&#x662F; RHS &#x932F;&#x8AA4;&#xFF0C;&#x53EA;&#x662F; JavaScript &#x4E26;&#x4E0D;&#x6703;&#x76F4;&#x63A5;&#x986F;&#x793A; RHS &#x932F;&#x8AA4; &#x9673;&#x8FF0;&#x5F0F; &#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F;&#x8207;&#x5BA3;&#x544A;&#x5206;&#x985E; &#x904B;&#x7B97;&#x5F0F;&#x8207;&#x904B;&#x7B97;&#x5B50; &#x6B63;&#x898F;&#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F; &#x4E0D;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 ) {} // &#x7269;&#x4EF6;&#x5BE6;&#x5B57; var a = { name : Jacob } &#x7ACB;&#x5373;&#x51FD;&#x5F0F; (&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#LHS":{"title":"LHS","path":"\\javascript\\core.html#LHS","body":"1= true 1 = true &#x6703;&#x51FA;&#x73FE; left-hand side (LHS)&#xFF0C;&#x5BE6;&#x969B;&#x4E0A;&#x5728;&#x6B64;&#x5C31;&#x7121;&#x6CD5;&#x7E7C;&#x7E8C;&#x57F7;&#x884C; Uncaught ReferenceError: Invalid left-hand side in assignment console.log(a) not defined &#x4F46;&#x5176;&#x5BE6;&#x662F; RHS &#x932F;&#x8AA4;&#xFF0C;&#x53EA;&#x662F; JavaScript &#x4E26;&#x4E0D;&#x6703;&#x76F4;&#x63A5;&#x986F;&#x793A; RHS &#x932F;&#x8AA4; &#x9673;&#x8FF0;&#x5F0F; &#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F;&#x8207;&#x5BA3;&#x544A;&#x5206;&#x985E; &#x904B;&#x7B97;&#x5F0F;&#x8207;&#x904B;&#x7B97;&#x5B50; &#x6B63;&#x898F;&#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F; &#x4E0D;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 ) {} // &#x7269;&#x4EF6;&#x5BE6;&#x5B57; var a = { name : Jacob } &#x7ACB;&#x5373;&#x51FD;&#x5F0F; (&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#陳述式-表達式":{"title":"&#x9673;&#x8FF0;&#x5F0F; &#x8868;&#x9054;&#x5F0F;","path":"\\javascript\\core.html#陳述式-表達式","body":"&#x9673;&#x8FF0;&#x5F0F;&#x8207;&#x5BA3;&#x544A;&#x5206;&#x985E; &#x904B;&#x7B97;&#x5F0F;&#x8207;&#x904B;&#x7B97;&#x5B50; &#x6B63;&#x898F;&#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F; &#x4E0D;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 ) {} // &#x7269;&#x4EF6;&#x5BE6;&#x5B57; var a = { name : Jacob } &#x7ACB;&#x5373;&#x51FD;&#x5F0F; (&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#立即函式":{"title":"&#x7ACB;&#x5373;&#x51FD;&#x5F0F;","path":"\\javascript\\core.html#立即函式","body":"(&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#ASI-自動分號插入":{"title":"ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;","path":"\\javascript\\core.html#ASI-自動分號插入","body":"&#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#動態型別":{"title":"&#x52D5;&#x614B;&#x578B;&#x5225;","path":"\\javascript\\core.html#動態型別","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#原始型別及物件型別":{"title":"&#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225;","path":"\\javascript\\core.html#原始型別及物件型別","body":"&#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#運算子":{"title":"&#x904B;&#x7B97;&#x5B50;","path":"\\javascript\\core.html#運算子","body":"&#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#嚴格相等-寬鬆相等":{"title":"&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49;","path":"\\javascript\\core.html#嚴格相等-寬鬆相等","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#Truthy":{"title":"Truthy","path":"\\javascript\\core.html#Truthy","body":"Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#邏輯運算子及函式預設值":{"title":"&#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C;","path":"\\javascript\\core.html#邏輯運算子及函式預設值","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#物件記憶體空間":{"title":"&#x7269;&#x4EF6;&#x8A18;&#x61B6;&#x9AD4;&#x7A7A;&#x9593;","path":"\\javascript\\core.html#物件記憶體空間","body":"1 2 3 4 5 var person = { name: &apos;Jacob&apos; } var person2 = person person2 = &apos;Hsu&apos; //find 0x01 change name&apos;s value &#x53C3;&#x8003;&#x7269;&#x4EF6; Value 0x01 name Jacob &#x7269;&#x4EF6;&#x8B8A;&#x6578; Value person 0x01 person2 0x01 1 2 3 4 5 6 7 8 // &#x898B;&#x5927;&#x62EC;&#x865F; &#x751F;&#x6210;&#x65B0;&#x7684;&#x53C3;&#x8003;&#x7269;&#x4EF6; var company = { team: &apos;dev&apos; , member: { rd: &apos;Jacob&apos; qa: &apos;Claire&apos; } } &#x53C3;&#x8003;&#x7269;&#x4EF6; Value 0x01 team dev member 0x02 | 0x02 | | | rd | Jacob | | qa | Claire | &#x7269;&#x4EF6;&#x8B8A;&#x6578; Value company 0x01 &#x7D14;&#x503C;&#x7121;&#x6CD5;&#x65B0;&#x589E;&#x5C6C;&#x6027; js&#x5169;&#x7A2E;&#x578B;&#x5225; &#x4E0D;&#x662F;&#x7D14;&#x503C; &#x5C31;&#x662F;&#x7269;&#x4EF6; (function&#x662F;&#x7269;&#x4EF6;) 1 2 3 4 5 6 7 8 9 10 11 12 13 var newStr = &apos;myname&apos; //&#x7D14;&#x503C; newStr.name = &apos;Jacob&apos; console .log(newStr) var newStr2 = new String ( &apos;myname&apos; ) //&#x5EFA;&#x69CB;&#x5F0F; &#x7269;&#x4EF6; newStr2.name = &apos;Jacob&apos; console .log(newStr2) function callFn ( ) { console .log( &apos;fun&apos; ) } console .log(callFn) console .dir(callFn) //&#x770B;&#x898B;&#x7269;&#x4EF6;&#x6240;&#x6709;&#x5C6C;&#x6027;&#x5167;&#x5BB9; &#x7D14;&#x503C; &#x50B3;&#x503C;(call by value) &#x7269;&#x4EF6;(&#x9663;&#x5217; &#x51FD;&#x5F0F;)) &#x50B3;&#x53C3;&#x8003;(call by reference) &#x6DF1;&#x6DFA;&#x62F7;&#x8C9D; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 var family = { name: &apos;Hsu&apos; , member: { father: &apos;dad&apos; , monther: &apos;mom&apos; , other: &apos;someone&apos; } } var newFamily = {} for ( var key in family) { console .log(key, family[key]); newFamily[key] =family[key]; } newFamily.name = &apos;Chen&apos; console .log(family, newFamily) newFamily.member.other = &apos;stranger&apos; console .log(family, newFamily) //for in&#x53EA;&#x80FD;&#x505A;&#x7B2C;&#x4E00;&#x5C64;&#x7684;&#x8907;&#x88FD; &#x7B2C;&#x4E8C;&#x5C64;&#x662F;&#x50B3;&#x53C3;&#x8003;&#x7684;&#x5F62;&#x5F0F; //&#x6DFA;&#x5C64;&#x8907;&#x88FD; js for in, jQuery extend, ES6 assign //jQuery var newFamily2 = jQuery.extend({}, family); //ES6 var newFamily3 = Object .assign({}, family) //&#x6DF1;&#x5C64;&#x8907;&#x88FD; deep copy &#x6703;&#x5C07;&#x539F;&#x672C;&#x7684;&#x7269;&#x4EF6;&#x8F49;&#x6210;&#x5B57;&#x4E32;&#x518D;&#x8F49;&#x56DE;&#x4F86; &#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027;&#x6703;&#x6C92;&#x6709; //console.log(family, JSON.stringify(family)) console .log(family, JSON .parse( JSON .stringify(family) )) var newFamily4 = JSON .parse( JSON .stringify(family) ); console .log(family === newFamily4) newFamily4.name = &apos;Liao&apos; newFamily4.member.other = &apos;Deep&apos; console .log(family, newFamily4) //&#x5169;&#x8005;&#x5B8C;&#x5168;&#x7121;&#x95DC; &#x53C3;&#x8003;&#x4E5F;&#x90FD;&#x4E0D;&#x4E00;&#x6A23; &#x9663;&#x5217; &#x9663;&#x5217;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225;&#x7684;&#x4E00;&#x7A2E; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var newArray = [ 1 , &apos;Str&apos; , true , { name: &apos;Jacob&apos; } ]; console .log(newArray[ 3 ]); //[object Object] { name: Jacob} console .log(newArray .3 ); //error newArray.push( 5 ); newArray.name = &apos;Hsu&apos; ; //&#x7269;&#x4EF6;&#x53EF;&#x96A8;&#x610F;&#x589E;&#x52A0;&#x5C6C;&#x6027; newArray[ 5 ] = &apos;Chen&apos; ; newArray[ 7 ] = &apos;Liao&apos; ; //&#x9663;&#x5217;6 empty &#x53D6;&#x503C;undefined console .log(newArray); //name&#x4E0D;&#x5C6C;&#x65BC;&#x9663;&#x5217;&#x88E1;&#x9762;&#x7684;&#x9577;&#x5EA6; for ( var i= 0 ;inewArray.length;i++) { console .log(newArray[i]) } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a = [ 1 , 2 , 3 ]; console .log(a, a[ 1 ], a.length) //forEach &#x4E0D;&#x662F;&#x5BE6;&#x9AD4;&#x5C6C;&#x6027; &#x662F;&#x9663;&#x5217;&#x539F;&#x578B;&#x7684;&#x5C6C;&#x6027; a.forEach( function ( i ) { console .log(i) }); ( 3 )&#xA0;[ 1 , 2 , 3 ] 0 : 1 1 : 2 2 : 3 length: 3 // length &#x4E5F;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#x7684;&#x5C6C;&#x6027; __proto__: Array ( 0 ) //&#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x53EF;&#x4EE5;&#x900F;&#x904E;&#x9EDE;&#x904B;&#x7B97;&#x5B50;&#x4E0D;&#x65B7;&#x5411;&#x4E0A;&#x67E5;&#x627E;&#x53D6;&#x5F97;&#x65B9;&#x6CD5; &#x4F8B;:forEach ... __proto__: Object // &#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x7E7C;&#x627F;&#x7269;&#x4EF6;&#x7684;&#x539F;&#x578B; &#x6240;&#x4EE5;&#x9663;&#x5217;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7269;&#x4EF6;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5; &#x4F8B;:toString 1 2 3 4 5 6 7 8 var a = [ 1 , 2 , 3 ]; var b = [ 4 , 5 , 6 ]; //&#x65B0;&#x589E;&#x65B9;&#x6CD5;&#x5230;&#x539F;&#x578B;&#x93C8;&#x4E0A; a.__proto__.getLast = function ( ) { return this [ this .length -1 ]; //b[b.length-1] } console .log(a, b, a.getLast(), a.toString()) JSON JSON - &#x7DAD;&#x57FA;&#x767E;&#x79D1; &#x5118;&#x7BA1;JSON&#x662F;JavaScript&#x7684;&#x4E00;&#x500B;&#x5B50;&#x96C6;&#xFF0C;&#x4F46;JSON&#x662F;&#x7368;&#x7ACB;&#x65BC;&#x8A9E;&#x8A00;&#x7684;&#x6587;&#x5B57;&#x683C;&#x5F0F; JSON&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x4E00;&#x5B9A;&#x90FD;&#x662F;&#x5B57;&#x4E32;&#x7684;&#x5F62;&#x5F0F; &#x7269;&#x4EF6;&#x53EF;&#x4EE5;&#x7528;&#x55AE;&#x5F15;&#x865F; &apos; &#x4F46;JSON&#x4E00;&#x5F8B;&#x7528;&#x96D9;&#x5F15;&#x865F;  SON &#x7684;&#x683C;&#x5F0F;&#x662F;&#x975E;&#x5E38;&#x56B4;&#x683C;&#x7684;&#xFF0C;&#x591A;&#x4E00;&#x500B;&#x9017;&#x865F;&#x5C11;&#x4E00;&#x500B;&#x9017;&#x865F;&#xFF0C;&#x90FD;&#x6703;&#x5C0E;&#x81F4;&#x51FA;&#x73FE;&#x932F;&#x8AA4;&#xFF0C; &#x6240;&#x4EE5;&#x6700;&#x5F8C;&#x4E00;&#x7B46;&#x4E0D;&#x53EF;&#x591A;&#x4E86;&#x4E00;&#x500B;&#x9017;&#x865F; &#x900F;&#x904E; JSON.parse() &#x51FA;&#x4F86;&#x7684;&#x8CC7;&#x6599;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x7269;&#x4EF6;&#x6703;&#x6709;&#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027; &#x5F8C;&#x7E8C;&#x7684;&#x503C;&#x8B8A;&#x66F4;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x503C;&#x4E5F;&#x6703;&#x8B8A;&#x66F4; &#x539F;&#x751F;AJAX&#x8B80;JSON 1 2 3 4 5 6 7 8 9 10 //&#x539F;&#x751F;AJAX function getData ( ) { console .log( this .response) var data = JSON .parse( this .response); console .log(data); } var oReq = new XMLHttpRequest(); oReq.addEventListener( load , getData); oReq.open( GET , family.json ) //&#x50B3;&#x5165;&#x7684;&#x5B57;&#x4E32; oReq.send(); &#x900F;&#x904E;&#x958B;&#x767C;&#x5DE5;&#x5177;Network&#x53EF;&#x4EE5;&#x770B;&#x7D50;&#x679C; function &#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#純值無法新增屬性":{"title":"&#x7D14;&#x503C;&#x7121;&#x6CD5;&#x65B0;&#x589E;&#x5C6C;&#x6027;","path":"\\javascript\\core.html#純值無法新增屬性","body":"js&#x5169;&#x7A2E;&#x578B;&#x5225; &#x4E0D;&#x662F;&#x7D14;&#x503C; &#x5C31;&#x662F;&#x7269;&#x4EF6; (function&#x662F;&#x7269;&#x4EF6;) 1 2 3 4 5 6 7 8 9 10 11 12 13 var newStr = &apos;myname&apos; //&#x7D14;&#x503C; newStr.name = &apos;Jacob&apos; console .log(newStr) var newStr2 = new String ( &apos;myname&apos; ) //&#x5EFA;&#x69CB;&#x5F0F; &#x7269;&#x4EF6; newStr2.name = &apos;Jacob&apos; console .log(newStr2) function callFn ( ) { console .log( &apos;fun&apos; ) } console .log(callFn) console .dir(callFn) //&#x770B;&#x898B;&#x7269;&#x4EF6;&#x6240;&#x6709;&#x5C6C;&#x6027;&#x5167;&#x5BB9; &#x7D14;&#x503C; &#x50B3;&#x503C;(call by value) &#x7269;&#x4EF6;(&#x9663;&#x5217; &#x51FD;&#x5F0F;)) &#x50B3;&#x53C3;&#x8003;(call by reference) &#x6DF1;&#x6DFA;&#x62F7;&#x8C9D; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 var family = { name: &apos;Hsu&apos; , member: { father: &apos;dad&apos; , monther: &apos;mom&apos; , other: &apos;someone&apos; } } var newFamily = {} for ( var key in family) { console .log(key, family[key]); newFamily[key] =family[key]; } newFamily.name = &apos;Chen&apos; console .log(family, newFamily) newFamily.member.other = &apos;stranger&apos; console .log(family, newFamily) //for in&#x53EA;&#x80FD;&#x505A;&#x7B2C;&#x4E00;&#x5C64;&#x7684;&#x8907;&#x88FD; &#x7B2C;&#x4E8C;&#x5C64;&#x662F;&#x50B3;&#x53C3;&#x8003;&#x7684;&#x5F62;&#x5F0F; //&#x6DFA;&#x5C64;&#x8907;&#x88FD; js for in, jQuery extend, ES6 assign //jQuery var newFamily2 = jQuery.extend({}, family); //ES6 var newFamily3 = Object .assign({}, family) //&#x6DF1;&#x5C64;&#x8907;&#x88FD; deep copy &#x6703;&#x5C07;&#x539F;&#x672C;&#x7684;&#x7269;&#x4EF6;&#x8F49;&#x6210;&#x5B57;&#x4E32;&#x518D;&#x8F49;&#x56DE;&#x4F86; &#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027;&#x6703;&#x6C92;&#x6709; //console.log(family, JSON.stringify(family)) console .log(family, JSON .parse( JSON .stringify(family) )) var newFamily4 = JSON .parse( JSON .stringify(family) ); console .log(family === newFamily4) newFamily4.name = &apos;Liao&apos; newFamily4.member.other = &apos;Deep&apos; console .log(family, newFamily4) //&#x5169;&#x8005;&#x5B8C;&#x5168;&#x7121;&#x95DC; &#x53C3;&#x8003;&#x4E5F;&#x90FD;&#x4E0D;&#x4E00;&#x6A23; &#x9663;&#x5217; &#x9663;&#x5217;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225;&#x7684;&#x4E00;&#x7A2E; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var newArray = [ 1 , &apos;Str&apos; , true , { name: &apos;Jacob&apos; } ]; console .log(newArray[ 3 ]); //[object Object] { name: Jacob} console .log(newArray .3 ); //error newArray.push( 5 ); newArray.name = &apos;Hsu&apos; ; //&#x7269;&#x4EF6;&#x53EF;&#x96A8;&#x610F;&#x589E;&#x52A0;&#x5C6C;&#x6027; newArray[ 5 ] = &apos;Chen&apos; ; newArray[ 7 ] = &apos;Liao&apos; ; //&#x9663;&#x5217;6 empty &#x53D6;&#x503C;undefined console .log(newArray); //name&#x4E0D;&#x5C6C;&#x65BC;&#x9663;&#x5217;&#x88E1;&#x9762;&#x7684;&#x9577;&#x5EA6; for ( var i= 0 ;inewArray.length;i++) { console .log(newArray[i]) } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a = [ 1 , 2 , 3 ]; console .log(a, a[ 1 ], a.length) //forEach &#x4E0D;&#x662F;&#x5BE6;&#x9AD4;&#x5C6C;&#x6027; &#x662F;&#x9663;&#x5217;&#x539F;&#x578B;&#x7684;&#x5C6C;&#x6027; a.forEach( function ( i ) { console .log(i) }); ( 3 )&#xA0;[ 1 , 2 , 3 ] 0 : 1 1 : 2 2 : 3 length: 3 // length &#x4E5F;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#x7684;&#x5C6C;&#x6027; __proto__: Array ( 0 ) //&#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x53EF;&#x4EE5;&#x900F;&#x904E;&#x9EDE;&#x904B;&#x7B97;&#x5B50;&#x4E0D;&#x65B7;&#x5411;&#x4E0A;&#x67E5;&#x627E;&#x53D6;&#x5F97;&#x65B9;&#x6CD5; &#x4F8B;:forEach ... __proto__: Object // &#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x7E7C;&#x627F;&#x7269;&#x4EF6;&#x7684;&#x539F;&#x578B; &#x6240;&#x4EE5;&#x9663;&#x5217;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7269;&#x4EF6;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5; &#x4F8B;:toString 1 2 3 4 5 6 7 8 var a = [ 1 , 2 , 3 ]; var b = [ 4 , 5 , 6 ]; //&#x65B0;&#x589E;&#x65B9;&#x6CD5;&#x5230;&#x539F;&#x578B;&#x93C8;&#x4E0A; a.__proto__.getLast = function ( ) { return this [ this .length -1 ]; //b[b.length-1] } console .log(a, b, a.getLast(), a.toString()) JSON JSON - &#x7DAD;&#x57FA;&#x767E;&#x79D1; &#x5118;&#x7BA1;JSON&#x662F;JavaScript&#x7684;&#x4E00;&#x500B;&#x5B50;&#x96C6;&#xFF0C;&#x4F46;JSON&#x662F;&#x7368;&#x7ACB;&#x65BC;&#x8A9E;&#x8A00;&#x7684;&#x6587;&#x5B57;&#x683C;&#x5F0F; JSON&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x4E00;&#x5B9A;&#x90FD;&#x662F;&#x5B57;&#x4E32;&#x7684;&#x5F62;&#x5F0F; &#x7269;&#x4EF6;&#x53EF;&#x4EE5;&#x7528;&#x55AE;&#x5F15;&#x865F; &apos; &#x4F46;JSON&#x4E00;&#x5F8B;&#x7528;&#x96D9;&#x5F15;&#x865F;  SON &#x7684;&#x683C;&#x5F0F;&#x662F;&#x975E;&#x5E38;&#x56B4;&#x683C;&#x7684;&#xFF0C;&#x591A;&#x4E00;&#x500B;&#x9017;&#x865F;&#x5C11;&#x4E00;&#x500B;&#x9017;&#x865F;&#xFF0C;&#x90FD;&#x6703;&#x5C0E;&#x81F4;&#x51FA;&#x73FE;&#x932F;&#x8AA4;&#xFF0C; &#x6240;&#x4EE5;&#x6700;&#x5F8C;&#x4E00;&#x7B46;&#x4E0D;&#x53EF;&#x591A;&#x4E86;&#x4E00;&#x500B;&#x9017;&#x865F; &#x900F;&#x904E; JSON.parse() &#x51FA;&#x4F86;&#x7684;&#x8CC7;&#x6599;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x7269;&#x4EF6;&#x6703;&#x6709;&#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027; &#x5F8C;&#x7E8C;&#x7684;&#x503C;&#x8B8A;&#x66F4;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x503C;&#x4E5F;&#x6703;&#x8B8A;&#x66F4; &#x539F;&#x751F;AJAX&#x8B80;JSON 1 2 3 4 5 6 7 8 9 10 //&#x539F;&#x751F;AJAX function getData ( ) { console .log( this .response) var data = JSON .parse( this .response); console .log(data); } var oReq = new XMLHttpRequest(); oReq.addEventListener( load , getData); oReq.open( GET , family.json ) //&#x50B3;&#x5165;&#x7684;&#x5B57;&#x4E32; oReq.send(); &#x900F;&#x904E;&#x958B;&#x767C;&#x5DE5;&#x5177;Network&#x53EF;&#x4EE5;&#x770B;&#x7D50;&#x679C; function &#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#深淺拷貝":{"title":"&#x6DF1;&#x6DFA;&#x62F7;&#x8C9D;","path":"\\javascript\\core.html#深淺拷貝","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 var family = { name: &apos;Hsu&apos; , member: { father: &apos;dad&apos; , monther: &apos;mom&apos; , other: &apos;someone&apos; } } var newFamily = {} for ( var key in family) { console .log(key, family[key]); newFamily[key] =family[key]; } newFamily.name = &apos;Chen&apos; console .log(family, newFamily) newFamily.member.other = &apos;stranger&apos; console .log(family, newFamily) //for in&#x53EA;&#x80FD;&#x505A;&#x7B2C;&#x4E00;&#x5C64;&#x7684;&#x8907;&#x88FD; &#x7B2C;&#x4E8C;&#x5C64;&#x662F;&#x50B3;&#x53C3;&#x8003;&#x7684;&#x5F62;&#x5F0F; //&#x6DFA;&#x5C64;&#x8907;&#x88FD; js for in, jQuery extend, ES6 assign //jQuery var newFamily2 = jQuery.extend({}, family); //ES6 var newFamily3 = Object .assign({}, family) //&#x6DF1;&#x5C64;&#x8907;&#x88FD; deep copy &#x6703;&#x5C07;&#x539F;&#x672C;&#x7684;&#x7269;&#x4EF6;&#x8F49;&#x6210;&#x5B57;&#x4E32;&#x518D;&#x8F49;&#x56DE;&#x4F86; &#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027;&#x6703;&#x6C92;&#x6709; //console.log(family, JSON.stringify(family)) console .log(family, JSON .parse( JSON .stringify(family) )) var newFamily4 = JSON .parse( JSON .stringify(family) ); console .log(family === newFamily4) newFamily4.name = &apos;Liao&apos; newFamily4.member.other = &apos;Deep&apos; console .log(family, newFamily4) //&#x5169;&#x8005;&#x5B8C;&#x5168;&#x7121;&#x95DC; &#x53C3;&#x8003;&#x4E5F;&#x90FD;&#x4E0D;&#x4E00;&#x6A23; &#x9663;&#x5217; &#x9663;&#x5217;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225;&#x7684;&#x4E00;&#x7A2E; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var newArray = [ 1 , &apos;Str&apos; , true , { name: &apos;Jacob&apos; } ]; console .log(newArray[ 3 ]); //[object Object] { name: Jacob} console .log(newArray .3 ); //error newArray.push( 5 ); newArray.name = &apos;Hsu&apos; ; //&#x7269;&#x4EF6;&#x53EF;&#x96A8;&#x610F;&#x589E;&#x52A0;&#x5C6C;&#x6027; newArray[ 5 ] = &apos;Chen&apos; ; newArray[ 7 ] = &apos;Liao&apos; ; //&#x9663;&#x5217;6 empty &#x53D6;&#x503C;undefined console .log(newArray); //name&#x4E0D;&#x5C6C;&#x65BC;&#x9663;&#x5217;&#x88E1;&#x9762;&#x7684;&#x9577;&#x5EA6; for ( var i= 0 ;inewArray.length;i++) { console .log(newArray[i]) } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a = [ 1 , 2 , 3 ]; console .log(a, a[ 1 ], a.length) //forEach &#x4E0D;&#x662F;&#x5BE6;&#x9AD4;&#x5C6C;&#x6027; &#x662F;&#x9663;&#x5217;&#x539F;&#x578B;&#x7684;&#x5C6C;&#x6027; a.forEach( function ( i ) { console .log(i) }); ( 3 )&#xA0;[ 1 , 2 , 3 ] 0 : 1 1 : 2 2 : 3 length: 3 // length &#x4E5F;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#x7684;&#x5C6C;&#x6027; __proto__: Array ( 0 ) //&#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x53EF;&#x4EE5;&#x900F;&#x904E;&#x9EDE;&#x904B;&#x7B97;&#x5B50;&#x4E0D;&#x65B7;&#x5411;&#x4E0A;&#x67E5;&#x627E;&#x53D6;&#x5F97;&#x65B9;&#x6CD5; &#x4F8B;:forEach ... __proto__: Object // &#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x7E7C;&#x627F;&#x7269;&#x4EF6;&#x7684;&#x539F;&#x578B; &#x6240;&#x4EE5;&#x9663;&#x5217;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7269;&#x4EF6;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5; &#x4F8B;:toString 1 2 3 4 5 6 7 8 var a = [ 1 , 2 , 3 ]; var b = [ 4 , 5 , 6 ]; //&#x65B0;&#x589E;&#x65B9;&#x6CD5;&#x5230;&#x539F;&#x578B;&#x93C8;&#x4E0A; a.__proto__.getLast = function ( ) { return this [ this .length -1 ]; //b[b.length-1] } console .log(a, b, a.getLast(), a.toString()) JSON JSON - &#x7DAD;&#x57FA;&#x767E;&#x79D1; &#x5118;&#x7BA1;JSON&#x662F;JavaScript&#x7684;&#x4E00;&#x500B;&#x5B50;&#x96C6;&#xFF0C;&#x4F46;JSON&#x662F;&#x7368;&#x7ACB;&#x65BC;&#x8A9E;&#x8A00;&#x7684;&#x6587;&#x5B57;&#x683C;&#x5F0F; JSON&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x4E00;&#x5B9A;&#x90FD;&#x662F;&#x5B57;&#x4E32;&#x7684;&#x5F62;&#x5F0F; &#x7269;&#x4EF6;&#x53EF;&#x4EE5;&#x7528;&#x55AE;&#x5F15;&#x865F; &apos; &#x4F46;JSON&#x4E00;&#x5F8B;&#x7528;&#x96D9;&#x5F15;&#x865F;  SON &#x7684;&#x683C;&#x5F0F;&#x662F;&#x975E;&#x5E38;&#x56B4;&#x683C;&#x7684;&#xFF0C;&#x591A;&#x4E00;&#x500B;&#x9017;&#x865F;&#x5C11;&#x4E00;&#x500B;&#x9017;&#x865F;&#xFF0C;&#x90FD;&#x6703;&#x5C0E;&#x81F4;&#x51FA;&#x73FE;&#x932F;&#x8AA4;&#xFF0C; &#x6240;&#x4EE5;&#x6700;&#x5F8C;&#x4E00;&#x7B46;&#x4E0D;&#x53EF;&#x591A;&#x4E86;&#x4E00;&#x500B;&#x9017;&#x865F; &#x900F;&#x904E; JSON.parse() &#x51FA;&#x4F86;&#x7684;&#x8CC7;&#x6599;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x7269;&#x4EF6;&#x6703;&#x6709;&#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027; &#x5F8C;&#x7E8C;&#x7684;&#x503C;&#x8B8A;&#x66F4;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x503C;&#x4E5F;&#x6703;&#x8B8A;&#x66F4; &#x539F;&#x751F;AJAX&#x8B80;JSON 1 2 3 4 5 6 7 8 9 10 //&#x539F;&#x751F;AJAX function getData ( ) { console .log( this .response) var data = JSON .parse( this .response); console .log(data); } var oReq = new XMLHttpRequest(); oReq.addEventListener( load , getData); oReq.open( GET , family.json ) //&#x50B3;&#x5165;&#x7684;&#x5B57;&#x4E32; oReq.send(); &#x900F;&#x904E;&#x958B;&#x767C;&#x5DE5;&#x5177;Network&#x53EF;&#x4EE5;&#x770B;&#x7D50;&#x679C; function &#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#陣列":{"title":"&#x9663;&#x5217;","path":"\\javascript\\core.html#陣列","body":"&#x9663;&#x5217;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225;&#x7684;&#x4E00;&#x7A2E; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var newArray = [ 1 , &apos;Str&apos; , true , { name: &apos;Jacob&apos; } ]; console .log(newArray[ 3 ]); //[object Object] { name: Jacob} console .log(newArray .3 ); //error newArray.push( 5 ); newArray.name = &apos;Hsu&apos; ; //&#x7269;&#x4EF6;&#x53EF;&#x96A8;&#x610F;&#x589E;&#x52A0;&#x5C6C;&#x6027; newArray[ 5 ] = &apos;Chen&apos; ; newArray[ 7 ] = &apos;Liao&apos; ; //&#x9663;&#x5217;6 empty &#x53D6;&#x503C;undefined console .log(newArray); //name&#x4E0D;&#x5C6C;&#x65BC;&#x9663;&#x5217;&#x88E1;&#x9762;&#x7684;&#x9577;&#x5EA6; for ( var i= 0 ;inewArray.length;i++) { console .log(newArray[i]) } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a = [ 1 , 2 , 3 ]; console .log(a, a[ 1 ], a.length) //forEach &#x4E0D;&#x662F;&#x5BE6;&#x9AD4;&#x5C6C;&#x6027; &#x662F;&#x9663;&#x5217;&#x539F;&#x578B;&#x7684;&#x5C6C;&#x6027; a.forEach( function ( i ) { console .log(i) }); ( 3 )&#xA0;[ 1 , 2 , 3 ] 0 : 1 1 : 2 2 : 3 length: 3 // length &#x4E5F;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#x7684;&#x5C6C;&#x6027; __proto__: Array ( 0 ) //&#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x53EF;&#x4EE5;&#x900F;&#x904E;&#x9EDE;&#x904B;&#x7B97;&#x5B50;&#x4E0D;&#x65B7;&#x5411;&#x4E0A;&#x67E5;&#x627E;&#x53D6;&#x5F97;&#x65B9;&#x6CD5; &#x4F8B;:forEach ... __proto__: Object // &#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x7E7C;&#x627F;&#x7269;&#x4EF6;&#x7684;&#x539F;&#x578B; &#x6240;&#x4EE5;&#x9663;&#x5217;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7269;&#x4EF6;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5; &#x4F8B;:toString 1 2 3 4 5 6 7 8 var a = [ 1 , 2 , 3 ]; var b = [ 4 , 5 , 6 ]; //&#x65B0;&#x589E;&#x65B9;&#x6CD5;&#x5230;&#x539F;&#x578B;&#x93C8;&#x4E0A; a.__proto__.getLast = function ( ) { return this [ this .length -1 ]; //b[b.length-1] } console .log(a, b, a.getLast(), a.toString()) JSON JSON - &#x7DAD;&#x57FA;&#x767E;&#x79D1; &#x5118;&#x7BA1;JSON&#x662F;JavaScript&#x7684;&#x4E00;&#x500B;&#x5B50;&#x96C6;&#xFF0C;&#x4F46;JSON&#x662F;&#x7368;&#x7ACB;&#x65BC;&#x8A9E;&#x8A00;&#x7684;&#x6587;&#x5B57;&#x683C;&#x5F0F; JSON&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x4E00;&#x5B9A;&#x90FD;&#x662F;&#x5B57;&#x4E32;&#x7684;&#x5F62;&#x5F0F; &#x7269;&#x4EF6;&#x53EF;&#x4EE5;&#x7528;&#x55AE;&#x5F15;&#x865F; &apos; &#x4F46;JSON&#x4E00;&#x5F8B;&#x7528;&#x96D9;&#x5F15;&#x865F;  SON &#x7684;&#x683C;&#x5F0F;&#x662F;&#x975E;&#x5E38;&#x56B4;&#x683C;&#x7684;&#xFF0C;&#x591A;&#x4E00;&#x500B;&#x9017;&#x865F;&#x5C11;&#x4E00;&#x500B;&#x9017;&#x865F;&#xFF0C;&#x90FD;&#x6703;&#x5C0E;&#x81F4;&#x51FA;&#x73FE;&#x932F;&#x8AA4;&#xFF0C; &#x6240;&#x4EE5;&#x6700;&#x5F8C;&#x4E00;&#x7B46;&#x4E0D;&#x53EF;&#x591A;&#x4E86;&#x4E00;&#x500B;&#x9017;&#x865F; &#x900F;&#x904E; JSON.parse() &#x51FA;&#x4F86;&#x7684;&#x8CC7;&#x6599;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x7269;&#x4EF6;&#x6703;&#x6709;&#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027; &#x5F8C;&#x7E8C;&#x7684;&#x503C;&#x8B8A;&#x66F4;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x503C;&#x4E5F;&#x6703;&#x8B8A;&#x66F4; &#x539F;&#x751F;AJAX&#x8B80;JSON 1 2 3 4 5 6 7 8 9 10 //&#x539F;&#x751F;AJAX function getData ( ) { console .log( this .response) var data = JSON .parse( this .response); console .log(data); } var oReq = new XMLHttpRequest(); oReq.addEventListener( load , getData); oReq.open( GET , family.json ) //&#x50B3;&#x5165;&#x7684;&#x5B57;&#x4E32; oReq.send(); &#x900F;&#x904E;&#x958B;&#x767C;&#x5DE5;&#x5177;Network&#x53EF;&#x4EE5;&#x770B;&#x7D50;&#x679C; function &#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#JSON":{"title":"JSON","path":"\\javascript\\core.html#JSON","body":"JSON - &#x7DAD;&#x57FA;&#x767E;&#x79D1; &#x5118;&#x7BA1;JSON&#x662F;JavaScript&#x7684;&#x4E00;&#x500B;&#x5B50;&#x96C6;&#xFF0C;&#x4F46;JSON&#x662F;&#x7368;&#x7ACB;&#x65BC;&#x8A9E;&#x8A00;&#x7684;&#x6587;&#x5B57;&#x683C;&#x5F0F; JSON&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x4E00;&#x5B9A;&#x90FD;&#x662F;&#x5B57;&#x4E32;&#x7684;&#x5F62;&#x5F0F; &#x7269;&#x4EF6;&#x53EF;&#x4EE5;&#x7528;&#x55AE;&#x5F15;&#x865F; &apos; &#x4F46;JSON&#x4E00;&#x5F8B;&#x7528;&#x96D9;&#x5F15;&#x865F;  SON &#x7684;&#x683C;&#x5F0F;&#x662F;&#x975E;&#x5E38;&#x56B4;&#x683C;&#x7684;&#xFF0C;&#x591A;&#x4E00;&#x500B;&#x9017;&#x865F;&#x5C11;&#x4E00;&#x500B;&#x9017;&#x865F;&#xFF0C;&#x90FD;&#x6703;&#x5C0E;&#x81F4;&#x51FA;&#x73FE;&#x932F;&#x8AA4;&#xFF0C; &#x6240;&#x4EE5;&#x6700;&#x5F8C;&#x4E00;&#x7B46;&#x4E0D;&#x53EF;&#x591A;&#x4E86;&#x4E00;&#x500B;&#x9017;&#x865F; &#x900F;&#x904E; JSON.parse() &#x51FA;&#x4F86;&#x7684;&#x8CC7;&#x6599;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x7269;&#x4EF6;&#x6703;&#x6709;&#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027; &#x5F8C;&#x7E8C;&#x7684;&#x503C;&#x8B8A;&#x66F4;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x503C;&#x4E5F;&#x6703;&#x8B8A;&#x66F4; &#x539F;&#x751F;AJAX&#x8B80;JSON 1 2 3 4 5 6 7 8 9 10 //&#x539F;&#x751F;AJAX function getData ( ) { console .log( this .response) var data = JSON .parse( this .response); console .log(data); } var oReq = new XMLHttpRequest(); oReq.addEventListener( load , getData); oReq.open( GET , family.json ) //&#x50B3;&#x5165;&#x7684;&#x5B57;&#x4E32; oReq.send(); &#x900F;&#x904E;&#x958B;&#x767C;&#x5DE5;&#x5177;Network&#x53EF;&#x4EE5;&#x770B;&#x7D50;&#x679C; function &#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#function":{"title":"function","path":"\\javascript\\core.html#function","body":"&#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#立即函式-IIFE":{"title":"&#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE)","path":"\\javascript\\core.html#立即函式-IIFE","body":"&#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#參數":{"title":"&#x53C3;&#x6578;","path":"\\javascript\\core.html#參數","body":"1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#閉包-Closure":{"title":"&#x9589;&#x5305; Closure","path":"\\javascript\\core.html#閉包-Closure","body":"1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#函式工廠":{"title":"&#x51FD;&#x5F0F;&#x5DE5;&#x5EE0;","path":"\\javascript\\core.html#函式工廠","body":"&#x7D66;&#x4E0D;&#x540C;&#x7684;&#x503C;&#x3000;&#x505A;&#x76F8;&#x540C;&#x7684;&#x4E8B;&#x60C5; 1 2 3 4 5 6 7 8 9 function storeMoney ( initVal ) { var money = initVal || 1000 return function ( price ) { money = money + price; return money; } } var MingMoney = storeMoney( 100 ); console .log(MingMoney( 500 )) // 600 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 function storeMoney ( initVal ) { var money = initVal || 1000 // &#x79C1;&#x6709;&#x65B9;&#x6CD5; &#x53EF;&#x4EE5;&#x505A;&#x5F88;&#x591A;&#x4E0D;&#x540C;&#x4E8B;&#x60C5; return { increase: function ( price ) { money += price }, decrease: function ( price ) { money -= price }, value: function ( ) { return money; } } } var MingMoney = storeMoney( 100 ); MingMoney.increase( 100 ); MingMoney.increase( 25 ); MingMoney.decrease( 25 ); console .log(MingMoney.value()) // 200"},"core.html#this":{"title":"this","path":"\\javascript\\core.html#this","body":"chrome / devTool / Sources / || &#x66AB;&#x505C;&#x6309;&#x9215; / &#x9032;&#x5165;&#x57F7;&#x884C;&#x5806;&#x758A; this &#x70BA;&#x95DC;&#x9375;&#x5B57; &#x5728;&#x6BCF;&#x500B;&#x57F7;&#x884C;&#x74B0;&#x5883;&#x5B58;&#x5728; this &#x7684;&#x8ABF;&#x7528;&#x65B9;&#x5F0F; &#x4F5C;&#x70BA;&#x7269;&#x4EF6;&#x65B9;&#x6CD5; &#x95DC;&#x6CE8;&#x5728;&#x54EA;&#x500B;&#x7269;&#x4EF6;&#x4E0B;&#x547C;&#x53EB; Object.fn() this &#x6307;&#x5411; Object &#x7C21;&#x6613;&#x547C;&#x53EB; (&#x4E0D;&#x5EFA;&#x8B70;&#x8ABF;&#x7528;this) bind, apply, call &#x65B9;&#x6CD5; new DOM&#x4E8B;&#x4EF6;&#x8655;&#x7406;&#x5668; &#x7BAD;&#x982D;&#x51FD;&#x5F0F;(ES6) simple call &#x7C21;&#x6613;&#x547C;&#x53EB; 1 2 3 4 5 6 var myName = &apos;Jacob&apos; ; function callName ( ) { console .log( this , this .myName) } callName() // this - window // &#x76E1;&#x53EF;&#x80FD;&#x4E0D;&#x8981;&#x4F7F;&#x7528;simple call&#x7684;this 1 2 3 4 5 6 7 ( function ( ) { console .log( this .myName); function callFn ( ) { console .log( this .myName); } callFn(); //simple call &#x770B;&#x5230;&#x51FD;&#x5F0F;&#x662F;&#x76F4;&#x63A5;&#x57F7;&#x884C;&#x7684; &#x5C31;&#x662F;&#x7C21;&#x6613;&#x547C;&#x53EB; &#x57F7;&#x884C;&#x9589;&#x5305;&#x5167;&#x51FD;&#x5F0F;&#x4E5F;&#x662F; })(); 1 2 3 4 5 6 7 8 // callback function myCb ( callback ) { var money = 100 return callback(money) } myCb( function ( money ) { console .log( this .myName, money+ 100 ) }) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 var a = [ 1 , 2 , 3 ] // forEach &#x5F8C;&#x65B9;&#x662F;&#x63D2;&#x5165;&#x4E00;&#x500B;callback&#x51FD;&#x5F0F; a.forEach( function ( i ) { console .log( this .myName, i); }) var family = { myName: &apos;Hsu&apos; , callName: function ( ) { // var self = this; // vm , that setTimeout( function ( ) { console .log( this .myName) // simple call this-window &apos;Jacob&apos; &#x7121;&#x6CD5;&#x53D6;&#x5F97;&#x7269;&#x4EF6;&#x7684;myName &apos;Hsu&apos; console .log(self.myName) // &#x7269;&#x4EF6;&#x7684;myName &apos;Hsu&apos; }, 1000 ) } family.callName(); } Call, appply, bind 1 2 3 4 5 6 7 8 9 10 11 12 13 var team = { myName: &apos;Jacob&apos; } function fn ( para1, para2 ) { console .log( this , para1, para2) } fn( 1 , 2 ); //simple call fn.call(team, 1 , 2 ); // call &#x662F;&#x7ACB;&#x523B;&#x57F7;&#x884C; fn.apply(team, [ 3 , 4 ]); // apply &#x662F;&#x7ACB;&#x523B;&#x57F7;&#x884C; &#x5DEE;&#x5225;&#x5728;&#x4EE5;&#x9663;&#x5217;&#x65B9;&#x5F0F;&#x5448;&#x73FE; var fn2 = fn.bind(team, 5 , 6 ); // bind &#x975E;&#x7ACB;&#x523B;&#x57F7;&#x884C; fn2( 6 ); // [object Object] 5 6 &#x9806;&#x5E8F;&#x57F7;&#x884C;&#x53C3;&#x6578;&#x6240;&#x4EE5;&#x662F;6 fn2( 1 , 2 ); // [object Object] 5 1 &#x9806;&#x5E8F;&#x57F7;&#x884C;&#x53C3;&#x6578;&#x6240;&#x4EE5;&#x662F;1 1 2 3 4 5 6 7 8 function fn ( para1, para2 ) { console .log( this , para1, para2) } // &#x9032;&#x968E;&#x6982;&#x5FF5; fn.call( 1 , &apos;Jacob&apos; , &apos;Jessica&apos; ) //&#x50B3;&#x7D14;&#x503C; Number{1} &apos;Jacob&apos;, &apos;Jessica&apos; &#x5DF2;&#x5EFA;&#x69CB;&#x5F0F;&#x65B9;&#x5F0F;&#x5448;&#x73FE; &#x7269;&#x4EF6;&#x7684;&#x578B;&#x5225; fn.call( &apos;Str&apos; , &apos;Jacob&apos; , &apos;Jessica&apos; ) fn.call( undefined , &apos;Jacob&apos; , &apos;Jessica&apos; ) // null &#x3001;undefined &#x5C07;&#x6703;&#x88AB;&#x7F6E;&#x63DB;&#x6210;&#x5168;&#x57DF;&#x8B8A;&#x6578; [object Window] &apos;Jacob&apos;, &apos;Jessica&apos; MDN call() &#x56B4;&#x683C;&#x6A21;&#x5F0F; 1 2 3 4 ( function ( ) { &apos;use strict&apos; ; name = &apos;Jacob&apos; ; // error name is not defined })() 1 2 3 4 5 6 7 function fn ( para1, para2 ) { &apos;use strict&apos; ; // &#x6709;&#x52A0;&#x5165;&#x56B4;&#x683C;&#x6A21;&#x5F0F; this&#x6240;&#x6307;&#x5411;&#x7684;window&#x6703;&#x8B8A;undefined console .log( this , para1, para2) // 1 Jacob Jessica &#x56B4;&#x683C;&#x6A21;&#x5F0F;&#x4E0B; &#x7D14;&#x503C;&#x7DAD;&#x6301;&#x539F;&#x578B;&#x5225; &#x4E0D;&#x4EE5;&#x5EFA;&#x69CB;&#x5F0F;&#x65B9;&#x5F0F;&#x5448;&#x73FE; } fn.call( 1 , &apos;Jacob&apos; , &apos;Jessica&apos; ) fn.call( undefined , &apos;Jacob&apos; , &apos;Jessica&apos; ) // undefined Jacob Jessica // &#x7C21;&#x6613;&#x547C;&#x53EB;&#x4E0B; &#x76E1;&#x53EF;&#x80FD;&#x4E0D;&#x8981;&#x8ABF;&#x7528;this &#x56E0;&#x70BA;&#x5B83;&#x672C;&#x8CEA;&#x5C31;&#x662F;undefined this: DOM 1 2  button onclick = console.log(this)  this is btn / button   button onclick = console.dir(this)  this is btn / button  console.dir(object) new 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function Dog ( name, color, size ) { this .name = name; this .color = color; this .size = size; } var Bibi = new Dog( &apos;&#x6BD4;&#x6BD4;&apos; , &apos;&#x68D5;&#x8272;&apos; , &apos;&#x5C0F;&apos; ) console .log(Bibi) //&#x51FD;&#x5F0F;&#x672C;&#x8EAB;&#x5C31;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6; &#x51FD;&#x5F0F;&#x7269;&#x4EF6;&#x6709;&#x4E00;&#x500B;&#x7279;&#x5225;&#x7684;&#x5C6C;&#x6027; prototype //&#x900F;&#x904E;prototype&#x6240;&#x65B0;&#x589E;&#x7684;&#x5C6C;&#x6027; &#x5C31;&#x6703;&#x505A;&#x539F;&#x578B;&#x4E0A;&#x7684;&#x65B9;&#x6CD5; &#x51FD;&#x5F0F;&#x7269;&#x4EF6;&#x7279;&#x6709;&#x7684;&#x5C6C;&#x6027; Dog.prototype.bark = function ( ) { console .log( this .name, &apos;barking&apos; ) } // __proto__ &#x7269;&#x4EF6;&#x4E0A; // prototype &#x51FD;&#x5F0F;&#x4E0A; // &#x8ABF;&#x6574;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5;&#x6642; &#x6700;&#x597D;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x5F9E;&#x51FD;&#x5F0F;&#x672C;&#x8EAB;&#x7684;&#x539F;&#x578B;&#x5C6C;&#x6027;&#x4E0A;&#x53BB;&#x8ABF;&#x6574; console .log(Dog.prototype === Bibi.__proto__) // true 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 var b = new String ( &apos;bcde&apos; ); console .log(b) console .dir( String ) String .prototype.lastText = function ( ) { return this [ this .length - 1 ]; } console .log(b.lastText()); Number .prototype.secondPower = function ( ) { return this * this ; } var num = 5 ; console .log(num.secondPower()); var date = new Date (); console .log(date); console .dir( Date ); Date .prototype.getFullDate = function ( ) { var dd = String ( this .getDate()); var mm = String ( this .getMonth()+ 1 ); var yyyy = this .getFullYear(); var today = yyyy + &apos;/&apos; + mm + &apos;/&apos; +dd; return today; } console .log(date.getFullDate());"},"core.html#new":{"title":"new","path":"\\javascript\\core.html#new","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function Dog ( name, color, size ) { this .name = name; this .color = color; this .size = size; } var Bibi = new Dog( &apos;&#x6BD4;&#x6BD4;&apos; , &apos;&#x68D5;&#x8272;&apos; , &apos;&#x5C0F;&apos; ) console .log(Bibi) //&#x51FD;&#x5F0F;&#x672C;&#x8EAB;&#x5C31;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6; &#x51FD;&#x5F0F;&#x7269;&#x4EF6;&#x6709;&#x4E00;&#x500B;&#x7279;&#x5225;&#x7684;&#x5C6C;&#x6027; prototype //&#x900F;&#x904E;prototype&#x6240;&#x65B0;&#x589E;&#x7684;&#x5C6C;&#x6027; &#x5C31;&#x6703;&#x505A;&#x539F;&#x578B;&#x4E0A;&#x7684;&#x65B9;&#x6CD5; &#x51FD;&#x5F0F;&#x7269;&#x4EF6;&#x7279;&#x6709;&#x7684;&#x5C6C;&#x6027; Dog.prototype.bark = function ( ) { console .log( this .name, &apos;barking&apos; ) } // __proto__ &#x7269;&#x4EF6;&#x4E0A; // prototype &#x51FD;&#x5F0F;&#x4E0A; // &#x8ABF;&#x6574;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5;&#x6642; &#x6700;&#x597D;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x5F9E;&#x51FD;&#x5F0F;&#x672C;&#x8EAB;&#x7684;&#x539F;&#x578B;&#x5C6C;&#x6027;&#x4E0A;&#x53BB;&#x8ABF;&#x6574; console .log(Dog.prototype === Bibi.__proto__) // true 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 var b = new String ( &apos;bcde&apos; ); console .log(b) console .dir( String ) String .prototype.lastText = function ( ) { return this [ this .length - 1 ]; } console .log(b.lastText()); Number .prototype.secondPower = function ( ) { return this * this ; } var num = 5 ; console .log(num.secondPower()); var date = new Date (); console .log(date); console .dir( Date ); Date .prototype.getFullDate = function ( ) { var dd = String ( this .getDate()); var mm = String ( this .getMonth()+ 1 ); var yyyy = this .getFullYear(); var today = yyyy + &apos;/&apos; + mm + &apos;/&apos; +dd; return today; } console .log(date.getFullDate());"},"core.html#繼承":{"title":"&#x7E7C;&#x627F;","path":"\\javascript\\core.html#繼承","body":"Object.create() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 var a = [] //Object  Array  a (&#x5BE6;&#x9AD4;) //&#x539F;&#x578B;&#x93C8;&#x4E0A;&#x65B0;&#x589E;&#x4E00;&#x500B;&#x5C64;&#x7D1A; //Object  Animal  Dog  &#x5BE6;&#x9AD4; //Object  Animal  Cat  &#x5BE6;&#x9AD4; // Object.create() &#x53EF;&#x4EE5;&#x628A;&#x5176;&#x4ED6;&#x7269;&#x4EF6;&#x4F5C;&#x70BA;&#x539F;&#x578B;&#x4F7F;&#x7528; var dog = { name: &apos;&#x72D7;&apos; , bark: function ( ) { console .log( this .name + &apos; barking&apos; ) } } var Corgi = Object .create(dog); //Corgi &#x628A; dog &#x4F5C;&#x70BA;&#x539F;&#x578B;&#x4F7F;&#x7528; Corgi.name = &apos;Welsh Corgi&apos; console .log(Corgi) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 function Animal ( family ) { this .kingdom = &apos;&#x52D5;&#x7269;&#x754C;&apos; this .family = family || &apos;&#x8C93;&#x79D1;&apos; } Animal.prototype.move = function ( ) { console .log( this .name + &apos; can move&apos; ) } function Dog ( name, size ) { Animal.call( this , &apos;&#x72AC;&#x79D1;&apos; ) this .name = name; this .size = size || &apos;small&apos; } Dog.prototype = Object .create(Animal.prototype) Dog.prototype.constructor = Dog; // &#x72D7;&#x7684;&#x539F;&#x578B;&#x539F;&#x672C;&#x76F4;&#x63A5;&#x7E7C;&#x627F;&#x65BC;&#x52D5;&#x7269;&#x754C;&#x7684;&#x539F;&#x578B; constructor &#x6703;&#x88AB;&#x8986;&#x84CB;&#x6240;&#x4EE5;&#x88DC;&#x56DE;&#x539F;&#x672C;&#x5EFA;&#x69CB;&#x51FD;&#x5F0F; Dog.prototype.bark = function ( ) { console .log( this .name + &apos; barking&apos; ) } var Chihuahua = new Dog( &apos;Chihuahua&apos; , &apos;small&apos; ); console .log(Chihuahua) Chihuahua.bark(); Chihuahua.move(); Chihuahua.family // undefined &#x76EE;&#x524D;&#x53EA;&#x6709;&#x7E7C;&#x627F;&#x539F;&#x578B;prototype &#x4F46;&#x7121;&#x7E7C;&#x627F;&#x52D5;&#x7269;&#x754C;&#x7684;&#x5EFA;&#x69CB;&#x51FD;&#x5F0F; Animal.call &#x5982;&#x679C;&#x700F;&#x89BD;&#x5668;&#x4E0D;&#x652F;&#x63F4; Object.create() &#x9019;&#x6642;&#x5019;&#x6211;&#x5011;&#x6703;&#x5BEB;&#x4E00;&#x4E9B;&#x7A0B;&#x5F0F;&#x4F86;&#x586B;&#x88DC;&#x67D0;&#x4E9B;&#x700F;&#x89BD;&#x5668;&#x4E0D;&#x652F;&#x63F4;&#x7684;&#x60C5;&#x6CC1;&#xFF0C;&#x6211;&#x5011;&#x628A;&#x9019;&#x4E9B;&#x7A0B;&#x5F0F;&#x7A31;&#x505A; polyfill"},"core.html#屬性特徵":{"title":"&#x5C6C;&#x6027;&#x7279;&#x5FB5;","path":"\\javascript\\core.html#屬性特徵","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 const obj = { a: 1 , b: 2 , c: 3 } console .log(obj) //Object.defineProperty() // &#x5C6C;&#x6027;&#xFF0C;&#x8ABF;&#x6574;&#x5C6C;&#x6027;&#x7684;&#x7279;&#x5FB5; // 1. &#x503C; 2. &#x53EF;&#x5426;&#x5BEB;&#x5165; 3. &#x53EF;&#x5426;&#x88AB;&#x522A;&#x9664; 4. &#x53EF;&#x5426;&#x88AB;&#x5217;&#x8209; //Object.defineProperty(&#x7269;&#x4EF6;, &#x5C6C;&#x6027;, &#x53C3;&#x6578;) // being explicit Object .defineProperty(obj, &apos;a&apos; , { enumerable: true , configurable: true , writable: false , value: 4 }); console .log(obj) // TypeError: Cannot assign to read only property &apos;a&apos; of object &apos;#Object&apos; ( function ( ) { &apos;use strict&apos; ; obj.a = 5 ; }()) Object.defineProperty() // &#x5EF6;&#x4F38;&#x7684;&#x4E09;&#x7A2E;&#x7269;&#x4EF6;&#x65B9;&#x6CD5; preventExtensions seal Freeze &#x9632;&#x6B62;&#x64F4;&#x5145; &#x5C01;&#x88DD; &#x51CD;&#x7D50; &#x76F4;&#x63A5;&#x64CD;&#x4F5C;&#x7269;&#x4EF6;&#x672C;&#x8EAB; Object.preventExtensions() Object.seal() &#x7121;&#x6CD5;&#x65B0;&#x589E;&#x522A;&#x9664; &#x4E5F;&#x7121;&#x6CD5;&#x914D;&#x7F6E;&#x7279;&#x5FB5; &#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x8ABF;&#x6574;&#x5C6C;&#x6027;&#x503C; Object.freeze() &#x7269;&#x4EF6;&#x52A0;&#x4E0A;seal &#x4E14;&#x7121;&#x6CD5;&#x8ABF;&#x6574;&#x503C; Setter And Getter 1 2 3 4 5 6 7 8 9 10 11 12 13 14 var wallet = { total: 100 , set save(price) { this .total = this .total + price / 2 }, get save() { return this .total / 2 } } // Getter &#x53D6;&#x5F97;&#x7279;&#x5B9A;&#x503C;&#x7684;&#x65B9;&#x6CD5; // Setter &#x5B58;&#x503C;&#x7684;&#x65B9;&#x6CD5; // wallet.total = 300; wallet.save = 300 ; //&#x900F;&#x904E;Setter&#x6539;&#x8B8A;total&#x7684;&#x503C; console .log(wallet.save) //250 / 2 = 125 Object.defineProperty() Object.getOwnPropertyDescriptor() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var wallet = { total: 100 } Object .defineProperty(wallet, &apos;save&apos; , { configurable: true , set : function(price) { this .total = this .total + price / 2 }, get : function() { return this .total / 2 } }); wallet.save = 300 ; //&#x900F;&#x904E;Setter&#x6539;&#x8B8A;total&#x7684;&#x503C; console .log(wallet); // save 250 / 2 = 125 console .log( Object .getOwnPropertyDescriptor(wallet, &apos;save&apos; )) // [object Object] { // configurable: false, // enumerable: false, 1 2 3 4 5 6 7 8 // &#x53D6;&#x5F97;&#x9663;&#x5217;&#x6700;&#x5F8C;&#x4E00;&#x500B;&#x503C; var a = [ 1 , 2 , 3 ]; Object .defineProperty( Array .prototype, &apos;lastest&apos; , { get : function() { return this [ this .length - 1 ]; } }); console .log(a.lastest); //3 ##&#x3000;vue https://github.com/vuejs/vue/blob/dev/dist/vue.js var emptyObject = Object.freeze({}); &#x78BA;&#x4FDD;&#x7A7A;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 var app = new Vue({ //&#x5EFA;&#x69CB;&#x521D;&#x59CB;&#x5316; el: &apos;#app&apos; , data: { message: &apos;Hello Vue!&apos; } }) console .log(app) &#x6DF1;&#x5165;&#x54CD;&#x5E94;&#x5F0F;&#x539F;&#x7406; &#x5F53;&#x4F60;&#x628A;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x7684; JavaScript &#x5BF9;&#x8C61;&#x4F20;&#x5165; Vue &#x5B9E;&#x4F8B;&#x4F5C;&#x4E3A; data &#x9009;&#x9879;&#xFF0C;Vue &#x5C06;&#x904D;&#x5386;&#x6B64;&#x5BF9;&#x8C61;&#x6240;&#x6709;&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x5E76;&#x4F7F;&#x7528; Object.defineProperty &#x628A;&#x8FD9;&#x4E9B;&#x5C5E;&#x6027;&#x5168;&#x90E8;&#x8F6C;&#x4E3A; getter/setter &#x3002;Object.defineProperty &#x662F; ES5 &#x4E2D;&#x4E00;&#x4E2A;&#x65E0;&#x6CD5; shim &#x7684;&#x7279;&#x6027;&#xFF0C;&#x8FD9;&#x4E5F;&#x5C31;&#x662F; Vue &#x4E0D;&#x652F;&#x6301; IE8 &#x4EE5;&#x53CA;&#x66F4;&#x4F4E;&#x7248;&#x672C;&#x6D4F;&#x89C8;&#x5668;&#x7684;&#x539F;&#x56E0;&#x3002; Vue &#x7406;&#x89E3;&#x4E4B;&#x767D;&#x8BDD; getter/setter https://github.com/vuejs/vue/blob/dev/dist/vue.js proxySetter reactiveSetter app.obj === app._data.obj Vue &#x54CD;&#x5E94;&#x5F0F;&#x6838;&#x5FC3;&#x5C31;&#x662F;&#xFF0C;getter &#x7684;&#x65F6;&#x5019;&#x4F1A;&#x6536;&#x96C6;&#x4F9D;&#x8D56;&#xFF0C;setter &#x7684;&#x65F6;&#x5019;&#x4F1A;&#x89E6;&#x53D1;&#x4F9D;&#x8D56;&#x66F4;&#x65B0;"},"core.html#Let":{"title":"Let","path":"\\javascript\\core.html#Let","body":"var&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x5728;&#x51FD;&#x6578;(function) &#x88E1; let&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x5247;&#x662F;&#x5728;&#x5340;&#x584A;(block) &#x88E1; 1 2 3 4 for ( var i= 0 ;i 10 ;i++) { console .log(i) } console .log(i) //window.i &#x5168;&#x57DF; &#x6C59;&#x67D3;&#x6574;&#x500B;&#x4F5C;&#x7528;&#x57DF; 1 2 3 4 5 6 let name = &apos;Jacob&apos; { let name = &apos;Hsu&apos; } console .log(name) //Jacob"},"core.html#const":{"title":"const","path":"\\javascript\\core.html#const","body":"&#x5229;&#x7528; const &#x53EF;&#x4EE5;&#x505A;&#x5230;&#x9664;&#x4E86;&#x88AB;&#x51CD;&#x7D50; &#x9084;&#x80FD;&#x4E0D;&#x88AB;&#x8CE6;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 const person = { name: &apos;&#x9EE8;&#x5DE5;&apos; , money: 500 } person.name = &apos;&#x7DB2;&#x8ECD;&apos; Object .freeze(person); person.money = 1000 ; person = {}; // devTool console person // var {} person // const let TDZ 1 2 3 4 5 6 7 8 9 10 let arg = &apos;first&apos; ; { //&#x5275;&#x9020; let arg; // &#x66AB;&#x6642;&#x6027;&#x6B7B;&#x5340; TDZ &#x6709;hoisting&#x4F46;&#x9396;&#x4F4F; //&#x57F7;&#x884C; console .log(arg); // first let arg = &apos;second&apos; } 1 let &#x4E00;&#x6A23;&#x6709;&#x5275;&#x9020;&#x968E;&#x6BB5; 2 &#x4F46;&#x5F9E;&#x5275;&#x9020;&#x5230;&#x5BE6;&#x969B;&#x5BA3;&#x544A;&#x7684;&#x968E;&#x6BB5;&#x6703;&#x51FA;&#x73FE;TDZ &#x9019;&#x500B;&#x5340;&#x57DF;&#x7121;&#x6CD5;&#x547C;&#x53EB;&#x8B8A;&#x6578; 3 &#x6709;&#x5275;&#x9020;&#x5230;&#x57F7;&#x884C;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x4F46;&#x4E0D;&#x6703;&#x9810;&#x5148;&#x51FA;&#x73FE; (&#x6587;&#x4EF6;&#x4E0D;&#x6703;&#x8868;&#x660E;&#x9019;&#x8207; var &#x7684;Hoisting&#x76F8;&#x540C;&#x6982;&#x5FF5;)"},"core.html#ES6-Airbnb":{"title":"ES6 Airbnb","path":"\\javascript\\core.html#ES6-Airbnb","body":"Airbnb &#x898F;&#x7BC4;&#x6587;&#x4EF6; (ES6 &#x7248;&#x672C;)&#xFF1A; https://github.com/airbnb/javascript ESLint &#x5B89;&#x88DD;&#x6559;&#x5B78;&#xFF1A; https://www.youtube.com/watch?v=WiommcFaYvY ? How would you like to use ESLint? (Use arrow keys) To check syntax only To check syntax and find problems &#x276F; To check syntax, find problems, and enforce code style &#x5982;&#x679C;&#x8981;&#x4F7F;&#x7528; Airbnb &#x7684;&#x898F;&#x7BC4;&#xFF0C;&#x8ACB;&#x9078;&#x64C7;&#x6700;&#x5F8C;&#x4E00;&#x500B;&#x9078;&#x9805;&#x3002;"},"core.html#箭頭函數":{"title":"&#x7BAD;&#x982D;&#x51FD;&#x6578;","path":"\\javascript\\core.html#箭頭函數","body":"//&#x6C92;&#x6709;&#x50B3;&#x7D71;&#x51FD;&#x6578; arguments &#x53C3;&#x6578; 1 2 3 4 const nums = function ( ) { console .log( arguments ); } nums( 10 , 50 , 100 , 50 , 5 , 1 ); 1 2 3 4 const nums = () = { console .log( arguments ); //Uncaught ReferenceError } nums( 10 , 50 , 100 , 50 , 5 , 1 ); 1 2 3 4 const nums = ( ...arg ) = { console .log(arg); //Uncaught ReferenceError } nums( 10 , 50 , 100 , 50 , 5 , 1 ); &#x7BAD;&#x982D;&#x51FD;&#x5F0F;&#x6C92;&#x6709;&#x81EA;&#x5DF1;&#x7684;this &#x4ED6;&#x7684;this&#x6307;&#x5411;&#x5916;&#x5C64; 1 2 3 4 5 6 7 const ele = document .querySelector( &apos;p&apos; ); ele.addEventListener( &apos;click&apos; , function ( ) { console .log( this ) }); ele.addEventListener( &apos;click&apos; , () ={ console .log( this ) //&#x6307;&#x5230;&#x4E0D;&#x4E00;&#x6A23;&#x7684;&#x4F4D;&#x7F6E; window &#x5168;&#x57DF; }); &#x7BAD;&#x982D;&#x51FD;&#x6578; &#x5E38;&#x898B;&#x554F;&#x984C; &#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x56DE;&#x50B3;&#x7269;&#x4EF6;&#x5BE6;&#x5B57; 1 2 3 4 const arrFn = () = { data : 1 } console .log(arrFn()) //undefined const arrFnr = () = ({ data : 1 }) console .log(arrFnr()) //{data: 1} &#x642D;&#x914D;&#x5224;&#x65B7;&#x5F0F;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x63A5;&#x7BAD;&#x982D;&#x51FD;&#x5F0F; 1 2 3 4 5 let num = 0 const numFn = num || () = 1 ; console .log(numFn) const numFunction = num || ( ( ) = 1 ); console .log(numFunction) // &#x52A0;&#x62EC;&#x865F;&#x4FEE;&#x6B63; &#x7269;&#x4EF6;&#x88E1;&#x9762;&#x642D;&#x914D;&#x7BAD;&#x982D;&#x51FD;&#x6A39;&#x6703;&#x51FA;&#x932F; &#x6307;&#x5411;&#x662F;&#x4E0D;&#x540C;&#x7684; 1 2 3 4 5 6 7 8 const app = new Vue({ data: { num: 1 }, created: () = { console .log( this .num) //FAIL } }) &#x5E73;&#x5747;&#x6578; 1 2 3 4 5 6 7 8 9 10 const average = function ( ) { // arguments &#x662F;&#x985E;&#x9663;&#x5217;&#x6C92;&#x6709;&#x9663;&#x5217;&#x65B9;&#x6CD5; &#x7528;Array.from&#x8F49;&#x6210;&#x7D14;&#x9663;&#x5217; const nums = Array .from( arguments ); const total = nums.reduce( function ( acc, val ) { return acc + val }, 0 ); // 0 &#x662F;&#x7B2C;&#x4E00;&#x6B21;&#x57F7;&#x884C;&#x7684;&#x524D;&#x4E00;&#x500B;&#x503C; console .log(total); return total / nums.length; } console .log(average( 1 , 2 , 3 , 4 , 5 )) // 15 3 Array.from() Array.reduce() 1 2 const average = ( ...nums ) = nums.reduce( ( acc, val ) = acc + val, 0 ) / nums.length console .log(average( 1 , 2 , 3 , 4 , 5 )) // 3"},"index.html":{"title":"hexo-theme-doc-seed","path":"\\javascript\\index.html","body":"hexo-theme-doc-seed This project is a skeleton for a documentation website using Hexo and hexo-theme-doc . You can use it to quickly bootstrap your documentation website. The seed contains the required structure and files to use Hexo and the theme, plus dummy content to show the usage of the main features of the theme. Getting Started To get started have a look first to the requirements , then install hexo-cli with: 1 $ npm install -g hexo-cli Now just clone hexo-theme-doc-seed repository: 1 $ git clone https://github.com/zalando-incubator/hexo-theme-doc-seed.git directory Go into the resulting directory and install dependencies: 1 $ npm install Start the preview server locally with: 1 hexo s If you open your browser at http://localhost:4000 you should see the documentation website up and running. More Informations For more informations please visit the user documentation website ."},"index.html#hexo-theme-doc-seed":{"title":"hexo-theme-doc-seed","path":"\\javascript\\index.html#hexo-theme-doc-seed","body":"This project is a skeleton for a documentation website using Hexo and hexo-theme-doc . You can use it to quickly bootstrap your documentation website. The seed contains the required structure and files to use Hexo and the theme, plus dummy content to show the usage of the main features of the theme."},"index.html#Getting-Started":{"title":"Getting Started","path":"\\javascript\\index.html#Getting-Started","body":"To get started have a look first to the requirements , then install hexo-cli with: 1 $ npm install -g hexo-cli Now just clone hexo-theme-doc-seed repository: 1 $ git clone https://github.com/zalando-incubator/hexo-theme-doc-seed.git directory Go into the resulting directory and install dependencies: 1 $ npm install Start the preview server locally with: 1 hexo s If you open your browser at http://localhost:4000 you should see the documentation website up and running."},"index.html#More-Informations":{"title":"More Informations","path":"\\javascript\\index.html#More-Informations","body":"For more informations please visit the user documentation website ."},"copy.html":{"title":"Copy","path":"\\javascript\\copy.html","body":"物件跟基本型別最大的不同就在於他們的傳值方式 淺拷貝(Shallow Copy) 基本型別是傳 value https://jsbin.com/lokejiveha/edit?js,console 1 2 3 4 5 6 var a = 10 ; var b = a; b = 20 ; console .log(a); // 10 console .log(b); // 20 但物件就不同，物件傳的是 reference https://jsbin.com/keholuroba/edit?js,console 1 2 3 4 5 6 var obj1 =  a : 10 , b : 20 , c : 30 ; var obj2 = obj1; obj2.b = 100 ; console .log(obj1); //  a: 10, b: 100, c: 30  -- b 被改到了 console .log(obj2); //  a: 10, b: 100, c: 30  複製一份obj1叫做obj2 然後把obj2.b改成100 但卻不小心改到obj1.b 因為他們根本是同一個物件，這就是所謂的 淺拷貝 深拷貝(Deep Copy) https://jsbin.com/xeqevarisa/1/edit?js,console 1 2 3 4 5 6 var obj1 =  a : 10 , b : 20 , c : 30 ; var obj2 =  a : obj1.a, b : obj1.b, c : obj1.c ; obj2.b = 100 ; console .log(obj1); //  a: 10, b: 20, c: 30  -- b 沒被改到 console .log(obj2); //  a: 10, b: 100, c: 30  但深拷貝會另外創造一個一模一樣的物件 新物件跟原物件不共用記憶體 修改新物件不會改到原物件 https://jsbin.com/venezeyonu/edit?js,console 1 2 3 4 5 6 7 8 var obj1 =  body :  a : 10  ; var obj2 =  body : obj1.body ; obj2.body.a = 100 ; console .log(obj1); //  body:  a: 100   -- 被改到了 console .log(obj2); //  body:  a: 100   console .log(obj1 === obj2); // false console .log(obj1.body === obj2.body); // true 雖然obj1跟obj2是不同物件 但他們會共用同一個 obj1.body 所以修改obj2.body.a時也會修改到舊的 vue-element-admin/blob/master/mock/ utils.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 /** * This is just a simple version of deep copy * Has a lot of edge cases bug * If you want to use a perfect deep copy, use lodash's _.cloneDeep * @param Object source * @returns Object */ function deepClone ( source )  if (!source &amp;&amp; typeof source !== 'object' )  throw new Error ( 'error arguments' , 'deepClone' )  const targetObj = source.constructor === Array ? [] :  Object .keys(source).forEach( keys =  if (source[keys] &amp;&amp; typeof source[keys] === 'object' )  targetObj[keys] = deepClone(source[keys])  else  targetObj[keys] = source[keys]  ) return targetObj  const routes = deepClone([...constantRoutes, ...asyncRoutes]) https://lodash.com/docs/4.17.15#cloneDeep Object.assign https://jsbin.com/cejijipevo/edit?js,console 1 2 3 4 5 6 var obj1 =  a : 10 , b : 20 , c : 30 ; var obj2 = Object .assign(, obj1); obj2.b = 100 ; console .log(obj1); //  a: 10, b: 20, c: 30  -- 沒被改到 console .log(obj2); //  a: 10, b: 100, c: 30  Object.assign({}, obj1) 的意思是先建立一個空物件{} 接著把obj1中所有的屬性複製過去 所以obj2會長得跟obj1一樣 這時候再修改obj2.b也不會影響obj1 因為Object.assign跟我們手動複製的效果相同 轉成 JSON 再轉回來 https://jsbin.com/kofawafune/edit?js,console 1 2 3 4 5 6 7 8 var obj1 =  body :  a : 10  ; var obj2 = JSON .parse( JSON .stringify(obj1)); obj2.body.a = 20 ; console .log(obj1); //  body:  a: 10   -- 沒被改到 console .log(obj2); //  body:  a: 20   console .log(obj1 === obj2); // false console .log(obj1.body === obj2.body); // false 這樣做是真正的 Deep Copy 但只有可以轉成JSON格式的物件才可以這樣用 像function沒辦法轉成JSON 1 2 3 4 5 var obj1 =  fun : function ( )  console .log( 123 )  ; var obj2 = JSON .parse( JSON .stringify(obj1)); console .log( typeof obj1.fun); // 'function' console .log( typeof obj2.fun); // 'undefined' -- 沒複製"},"copy.html#淺拷貝-Shallow-Copy":{"title":"&#x6DFA;&#x62F7;&#x8C9D;(Shallow Copy)","path":"\\javascript\\copy.html#淺拷貝-Shallow-Copy","body":"&#x57FA;&#x672C;&#x578B;&#x5225;&#x662F;&#x50B3; value https://jsbin.com/lokejiveha/edit?js,console 1 2 3 4 5 6 var a = 10 ; var b = a; b = 20 ; console .log(a); // 10 console .log(b); // 20 &#x4F46;&#x7269;&#x4EF6;&#x5C31;&#x4E0D;&#x540C;&#xFF0C;&#x7269;&#x4EF6;&#x50B3;&#x7684;&#x662F; reference https://jsbin.com/keholuroba/edit?js,console 1 2 3 4 5 6 var obj1 = { a : 10 , b : 20 , c : 30 }; var obj2 = obj1; obj2.b = 100 ; console .log(obj1); // { a: 10, b: 100, c: 30 } -- b &#x88AB;&#x6539;&#x5230;&#x4E86; console .log(obj2); // { a: 10, b: 100, c: 30 } &#x8907;&#x88FD;&#x4E00;&#x4EFD;obj1&#x53EB;&#x505A;obj2 &#x7136;&#x5F8C;&#x628A;obj2.b&#x6539;&#x6210;100 &#x4F46;&#x537B;&#x4E0D;&#x5C0F;&#x5FC3;&#x6539;&#x5230;obj1.b &#x56E0;&#x70BA;&#x4ED6;&#x5011;&#x6839;&#x672C;&#x662F;&#x540C;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x9019;&#x5C31;&#x662F;&#x6240;&#x8B02;&#x7684; &#x6DFA;&#x62F7;&#x8C9D; &#x6DF1;&#x62F7;&#x8C9D;(Deep Copy) https://jsbin.com/xeqevarisa/1/edit?js,console 1 2 3 4 5 6 var obj1 = { a : 10 , b : 20 , c : 30 }; var obj2 = { a : obj1.a, b : obj1.b, c : obj1.c }; obj2.b = 100 ; console .log(obj1); // { a: 10, b: 20, c: 30 } -- b &#x6C92;&#x88AB;&#x6539;&#x5230; console .log(obj2); // { a: 10, b: 100, c: 30 } &#x4F46;&#x6DF1;&#x62F7;&#x8C9D;&#x6703;&#x53E6;&#x5916;&#x5275;&#x9020;&#x4E00;&#x500B;&#x4E00;&#x6A21;&#x4E00;&#x6A23;&#x7684;&#x7269;&#x4EF6; &#x65B0;&#x7269;&#x4EF6;&#x8DDF;&#x539F;&#x7269;&#x4EF6;&#x4E0D;&#x5171;&#x7528;&#x8A18;&#x61B6;&#x9AD4; &#x4FEE;&#x6539;&#x65B0;&#x7269;&#x4EF6;&#x4E0D;&#x6703;&#x6539;&#x5230;&#x539F;&#x7269;&#x4EF6; https://jsbin.com/venezeyonu/edit?js,console 1 2 3 4 5 6 7 8 var obj1 = { body : { a : 10 } }; var obj2 = { body : obj1.body }; obj2.body.a = 100 ; console .log(obj1); // { body: { a: 100 } } -- &#x88AB;&#x6539;&#x5230;&#x4E86; console .log(obj2); // { body: { a: 100 } } console .log(obj1 === obj2); // false console .log(obj1.body === obj2.body); // true &#x96D6;&#x7136;obj1&#x8DDF;obj2&#x662F;&#x4E0D;&#x540C;&#x7269;&#x4EF6; &#x4F46;&#x4ED6;&#x5011;&#x6703;&#x5171;&#x7528;&#x540C;&#x4E00;&#x500B; obj1.body &#x6240;&#x4EE5;&#x4FEE;&#x6539;obj2.body.a&#x6642;&#x4E5F;&#x6703;&#x4FEE;&#x6539;&#x5230;&#x820A;&#x7684; vue-element-admin/blob/master/mock/ utils.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 /** * This is just a simple version of deep copy * Has a lot of edge cases bug * If you want to use a perfect deep copy, use lodash&apos;s _.cloneDeep * @param {Object} source * @returns {Object} */ function deepClone ( source ) { if (!source &amp;&amp; typeof source !== &apos;object&apos; ) { throw new Error ( &apos;error arguments&apos; , &apos;deepClone&apos; ) } const targetObj = source.constructor === Array ? [] : {} Object .keys(source).forEach( keys = { if (source[keys] &amp;&amp; typeof source[keys] === &apos;object&apos; ) { targetObj[keys] = deepClone(source[keys]) } else { targetObj[keys] = source[keys] } }) return targetObj } const routes = deepClone([...constantRoutes, ...asyncRoutes]) https://lodash.com/docs/4.17.15#cloneDeep"},"copy.html#深拷貝-Deep-Copy":{"title":"&#x6DF1;&#x62F7;&#x8C9D;(Deep Copy)","path":"\\javascript\\copy.html#深拷貝-Deep-Copy","body":"https://jsbin.com/xeqevarisa/1/edit?js,console 1 2 3 4 5 6 var obj1 = { a : 10 , b : 20 , c : 30 }; var obj2 = { a : obj1.a, b : obj1.b, c : obj1.c }; obj2.b = 100 ; console .log(obj1); // { a: 10, b: 20, c: 30 } -- b &#x6C92;&#x88AB;&#x6539;&#x5230; console .log(obj2); // { a: 10, b: 100, c: 30 } &#x4F46;&#x6DF1;&#x62F7;&#x8C9D;&#x6703;&#x53E6;&#x5916;&#x5275;&#x9020;&#x4E00;&#x500B;&#x4E00;&#x6A21;&#x4E00;&#x6A23;&#x7684;&#x7269;&#x4EF6; &#x65B0;&#x7269;&#x4EF6;&#x8DDF;&#x539F;&#x7269;&#x4EF6;&#x4E0D;&#x5171;&#x7528;&#x8A18;&#x61B6;&#x9AD4; &#x4FEE;&#x6539;&#x65B0;&#x7269;&#x4EF6;&#x4E0D;&#x6703;&#x6539;&#x5230;&#x539F;&#x7269;&#x4EF6; https://jsbin.com/venezeyonu/edit?js,console 1 2 3 4 5 6 7 8 var obj1 = { body : { a : 10 } }; var obj2 = { body : obj1.body }; obj2.body.a = 100 ; console .log(obj1); // { body: { a: 100 } } -- &#x88AB;&#x6539;&#x5230;&#x4E86; console .log(obj2); // { body: { a: 100 } } console .log(obj1 === obj2); // false console .log(obj1.body === obj2.body); // true &#x96D6;&#x7136;obj1&#x8DDF;obj2&#x662F;&#x4E0D;&#x540C;&#x7269;&#x4EF6; &#x4F46;&#x4ED6;&#x5011;&#x6703;&#x5171;&#x7528;&#x540C;&#x4E00;&#x500B; obj1.body &#x6240;&#x4EE5;&#x4FEE;&#x6539;obj2.body.a&#x6642;&#x4E5F;&#x6703;&#x4FEE;&#x6539;&#x5230;&#x820A;&#x7684; vue-element-admin/blob/master/mock/ utils.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 /** * This is just a simple version of deep copy * Has a lot of edge cases bug * If you want to use a perfect deep copy, use lodash&apos;s _.cloneDeep * @param {Object} source * @returns {Object} */ function deepClone ( source ) { if (!source &amp;&amp; typeof source !== &apos;object&apos; ) { throw new Error ( &apos;error arguments&apos; , &apos;deepClone&apos; ) } const targetObj = source.constructor === Array ? [] : {} Object .keys(source).forEach( keys = { if (source[keys] &amp;&amp; typeof source[keys] === &apos;object&apos; ) { targetObj[keys] = deepClone(source[keys]) } else { targetObj[keys] = source[keys] } }) return targetObj } const routes = deepClone([...constantRoutes, ...asyncRoutes]) https://lodash.com/docs/4.17.15#cloneDeep"},"copy.html#Object-assign":{"title":"Object.assign","path":"\\javascript\\copy.html#Object-assign","body":"https://jsbin.com/cejijipevo/edit?js,console 1 2 3 4 5 6 var obj1 = { a : 10 , b : 20 , c : 30 }; var obj2 = Object .assign({}, obj1); obj2.b = 100 ; console .log(obj1); // { a: 10, b: 20, c: 30 } -- &#x6C92;&#x88AB;&#x6539;&#x5230; console .log(obj2); // { a: 10, b: 100, c: 30 } Object.assign({}, obj1) &#x7684;&#x610F;&#x601D;&#x662F;&#x5148;&#x5EFA;&#x7ACB;&#x4E00;&#x500B;&#x7A7A;&#x7269;&#x4EF6;{} &#x63A5;&#x8457;&#x628A;obj1&#x4E2D;&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x8907;&#x88FD;&#x904E;&#x53BB; &#x6240;&#x4EE5;obj2&#x6703;&#x9577;&#x5F97;&#x8DDF;obj1&#x4E00;&#x6A23; &#x9019;&#x6642;&#x5019;&#x518D;&#x4FEE;&#x6539;obj2.b&#x4E5F;&#x4E0D;&#x6703;&#x5F71;&#x97FF;obj1 &#x56E0;&#x70BA;Object.assign&#x8DDF;&#x6211;&#x5011;&#x624B;&#x52D5;&#x8907;&#x88FD;&#x7684;&#x6548;&#x679C;&#x76F8;&#x540C;"},"copy.html#轉成-JSON-再轉回來":{"title":"&#x8F49;&#x6210; JSON &#x518D;&#x8F49;&#x56DE;&#x4F86;","path":"\\javascript\\copy.html#轉成-JSON-再轉回來","body":"https://jsbin.com/kofawafune/edit?js,console 1 2 3 4 5 6 7 8 var obj1 = { body : { a : 10 } }; var obj2 = JSON .parse( JSON .stringify(obj1)); obj2.body.a = 20 ; console .log(obj1); // { body: { a: 10 } } -- &#x6C92;&#x88AB;&#x6539;&#x5230; console .log(obj2); // { body: { a: 20 } } console .log(obj1 === obj2); // false console .log(obj1.body === obj2.body); // false &#x9019;&#x6A23;&#x505A;&#x662F;&#x771F;&#x6B63;&#x7684; Deep Copy &#x4F46;&#x53EA;&#x6709;&#x53EF;&#x4EE5;&#x8F49;&#x6210;JSON&#x683C;&#x5F0F;&#x7684;&#x7269;&#x4EF6;&#x624D;&#x53EF;&#x4EE5;&#x9019;&#x6A23;&#x7528; &#x50CF;function&#x6C92;&#x8FA6;&#x6CD5;&#x8F49;&#x6210;JSON 1 2 3 4 5 var obj1 = { fun : function ( ) { console .log( 123 ) } }; var obj2 = JSON .parse( JSON .stringify(obj1)); console .log( typeof obj1.fun); // &apos;function&apos; console .log( typeof obj2.fun); // &apos;undefined&apos; -- &#x6C92;&#x8907;&#x88FD;"},"closures.html":{"title":"Closures","path":"\\javascript\\closures.html","body":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures 1 2 3 4 5 6 7 8 9 var name = \"hello\" ; ( function ( )  if ( typeof name === \"undefined\" )  var name = \"world\" ; console .log( \"goodbye \" + name);  else  console .log( \"hello \" +name);  )(); “goodbye world” 1 2 3 4 5 6 7 8 9 10 11 function makeAdder ( x )  return function ( y )  return x + y; ;  var add5 = makeAdder( 5 ); var add10 = makeAdder( 10 ); console .log(add5( 2 )); // 7 console .log(add10( 2 )); // 12 1 2 3 4 5 6 7 8 9 10 11 12 // fn declaration function add ( x )  return function ( y )  return x + y; ;  var add5 = add( 5 ); var add10 = add( 10 ); console .log(add5( 2 )); // 7 console .log(add10( 2 )); // 12 箭頭函式 https://tylermcginnis.com/arrow-functions/ 1 2 3 4 5 6 7 8 9 10 11 12 13 function add ( x )  return ( y ) = x + y;  const addf1 = ( a,b ) = a + b; var add5 = add( 5 ); var add10 = add( 10 ); console .log(add5( 2 )); // 7 console .log(add10( 2 )); // 12 console .log(addf1( 5 , 2 )); // 7 傳函數 (函數即物件) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const addf1 = ( a,b ) = a + b; function passFn ( addf1 )  return addf1;  function insideFn ( x,y )  return addf1(x,y);  console .log( addf1( 5 , 2 ) ); // 7 console .log( passFn(addf1( 5 , 2 )) ); // 7 console .log( insideFn( 5 , 2 ) ); // 7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // global scope var e = 10 ; function sum ( a )  return function ( b,c )  return function ( d )  // local scope return a + b + c + d + e;    console .log(sum( 1 )( 2 , 3 )( 4 )); // log 20 傳多個函數 1 2 3 4 5 6 7 function fns ( a )  return function ( b,c )  return a + b + c;   console .log(fns( 1 )( 2 , 3 )); // log 6 1 2 3 4 5 6 7 8 function fns ( f1 )  return function ( b,c )  return f1(b,c);   const addf1 = ( a,b ) = a + b; console .log(fns(addf1)( 2 , 3 )); // 5 https://jsbin.com/yijuyebixu/edit?js,console 1 2 3 4 5 6 7 8 9 10 function fns ( f1,f2 )  return function ( b,c )  return f1(b,c)+ ' ' +f2(b)+ ' ' +f3(b,c);   const f1 = ( a,b ) = a + b; const f2 = ( a ) = a * a; const f3 = ( a,b ) = a  b; //2 左移3 00010 - 10000 16 console .log(fns(f1,f2,f3)( 2 , 3 )); // \"5 4 16\" https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#%3E%3E_(Sign-propagating_right_shift)"},"closures.html#傳多個函數":{"title":"&#x50B3;&#x591A;&#x500B;&#x51FD;&#x6578;","path":"\\javascript\\closures.html#傳多個函數","body":"1 2 3 4 5 6 7 function fns ( a ) { return function ( b,c ) { return a + b + c; } } console .log(fns( 1 )( 2 , 3 )); // log 6 1 2 3 4 5 6 7 8 function fns ( f1 ) { return function ( b,c ) { return f1(b,c); } } const addf1 = ( a,b ) = a + b; console .log(fns(addf1)( 2 , 3 )); // 5 https://jsbin.com/yijuyebixu/edit?js,console 1 2 3 4 5 6 7 8 9 10 function fns ( f1,f2 ) { return function ( b,c ) { return f1(b,c)+ &apos; &apos; +f2(b)+ &apos; &apos; +f3(b,c); } } const f1 = ( a,b ) = a + b; const f2 = ( a ) = a * a; const f3 = ( a,b ) = a  b; //2 &#x5DE6;&#x79FB;3 00010 - 10000 16 console .log(fns(f1,f2,f3)( 2 , 3 )); // 5 4 16 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#%3E%3E_(Sign-propagating_right_shift)"},"num.html":{"title":"number","path":"\\javascript\\num.html","body":"取值 Math.pow()傳回指定乘冪數的基底運算式值 Math.round() 函數回傳四捨五入後的近似值 Math.floor() 函式會回傳無條件捨去後的最大整數 Math.ceil() 函式會回傳大於等於所給數字的最小整數 1 2 3 4 5 6 7 8 9 10 11 12 13 14 export function precisionRound ( number, precision )  const factor = Math .pow( 10 , precision) return Math .round(number * factor) / factor  export function precisionFloor ( number, precision )  const factor = Math .pow( 10 , precision) return Math .floor(number * factor) / factor  export function precisionCeil ( number, precision )  const factor = Math .pow( 10 , precision) return Math .ceil(number * factor) / factor  補數字 JavaScript 数字前补“0”的五种方法 數字補0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //轉為小數 function padding3 ( num, length )  var decimal = num / Math .pow( 10 , length); //toFixed指定保留幾位小數 decimal = decimal.toFixed(length) + \"\" ; return decimal.substr(decimal.indexOf( \".\" )+ 1 );  console .log( padding3( 7 , 3 ) ) //\"007\" function padding4 ( num, length )  //這裡用slice和substr均可 return ( Array (length).join( \"0\" ) + num).slice(-length);  console .log( padding4( 7 , 3 ) ) //\"007\" 數字填充9 function paddingPoint ( length ) { var decimal = 1 / Math .pow( 10 , length); decimal = decimal.toFixed(length) + \"\" ; return 1 -decimal;} console .log( paddingPoint( 3 ) ) // 0.999 function paddingInt ( length ) { return ( Array (length).join( \"9\" ) + 9 ).slice(-length);} console .log( paddingInt( 3 ) ) //\"999\" console .log( Number (paddingInt( 3 )) + paddingPoint( 3 ) ) // 999.999"},"num.html#取值":{"title":"&#x53D6;&#x503C;","path":"\\javascript\\num.html#取值","body":"Math.pow()&#x50B3;&#x56DE;&#x6307;&#x5B9A;&#x4E58;&#x51AA;&#x6578;&#x7684;&#x57FA;&#x5E95;&#x904B;&#x7B97;&#x5F0F;&#x503C; Math.round() &#x51FD;&#x6578;&#x56DE;&#x50B3;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x5F8C;&#x7684;&#x8FD1;&#x4F3C;&#x503C; Math.floor() &#x51FD;&#x5F0F;&#x6703;&#x56DE;&#x50B3;&#x7121;&#x689D;&#x4EF6;&#x6368;&#x53BB;&#x5F8C;&#x7684;&#x6700;&#x5927;&#x6574;&#x6578; Math.ceil() &#x51FD;&#x5F0F;&#x6703;&#x56DE;&#x50B3;&#x5927;&#x65BC;&#x7B49;&#x65BC;&#x6240;&#x7D66;&#x6578;&#x5B57;&#x7684;&#x6700;&#x5C0F;&#x6574;&#x6578; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 export function precisionRound ( number, precision ) { const factor = Math .pow( 10 , precision) return Math .round(number * factor) / factor } export function precisionFloor ( number, precision ) { const factor = Math .pow( 10 , precision) return Math .floor(number * factor) / factor } export function precisionCeil ( number, precision ) { const factor = Math .pow( 10 , precision) return Math .ceil(number * factor) / factor }"},"num.html#補數字":{"title":"&#x88DC;&#x6578;&#x5B57;","path":"\\javascript\\num.html#補數字","body":"JavaScript &#x6570;&#x5B57;&#x524D;&#x8865;&#x201C;0&#x201D;&#x7684;&#x4E94;&#x79CD;&#x65B9;&#x6CD5; &#x6578;&#x5B57;&#x88DC;0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x8F49;&#x70BA;&#x5C0F;&#x6578; function padding3 ( num, length ) { var decimal = num / Math .pow( 10 , length); //toFixed&#x6307;&#x5B9A;&#x4FDD;&#x7559;&#x5E7E;&#x4F4D;&#x5C0F;&#x6578; decimal = decimal.toFixed(length) +  ; return decimal.substr(decimal.indexOf( . )+ 1 ); } console .log( padding3( 7 , 3 ) ) //007 function padding4 ( num, length ) { //&#x9019;&#x88E1;&#x7528;slice&#x548C;substr&#x5747;&#x53EF; return ( Array (length).join( 0 ) + num).slice(-length); } console .log( padding4( 7 , 3 ) ) //007 &#x6578;&#x5B57;&#x586B;&#x5145;9 function paddingPoint ( length ) { var decimal = 1 / Math .pow( 10 , length); decimal = decimal.toFixed(length) +  ; return 1 -decimal;} console .log( paddingPoint( 3 ) ) // 0.999 function paddingInt ( length ) { return ( Array (length).join( 9 ) + 9 ).slice(-length);} console .log( paddingInt( 3 ) ) //999 console .log( Number (paddingInt( 3 )) + paddingPoint( 3 ) ) // 999.999"},"operators.html":{"title":"Operators","path":"\\javascript\\operators.html","body":"What is the difference between the equality operators == and === ? 三個等號 === 表示嚴格相等，也就是說類型和值都必須相同。兩個等號 == 會使其中一邊的類型進行強制轉換，使等號兩邊的類型都相等後再對數值進行比較。 加分回答 儘量使用全等操作符。因為其沒有隱式轉換，這樣結果會比較容易預測、計算也會比較快 除了等於操作符，還可以使用 Object.is 進行同值比較。他有著自己的特殊用途，不應說他更寬鬆或更嚴格於其他等於操作符 === 比較不是一個比較好的解決方式，你可以得到這樣的結果： NaN === NaN //false 好消息是在 ES6 有一個新的 Object.is() ，它是更精確而且和 === 有相同的功能，在某些特殊情況下也運作的很好： Mozilla 團隊 不認為 Object.is 比 === 更嚴格，他們宣稱我們應該思考這些方法如何處理 NaN、-0 和 +0 1 2 3 4 Object .is( 0 , ' ' ); //false Object .is( null , undefined ); //false Object .is([ 1 ], true ); //false Object .is( NaN , NaN ); //true https://jsbin.com/guqetaviho/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 var a = true , b = 1 ; console .log(a==b); //true console .log(a===b); //false console .log(a==b== 1 ); //true console .log(a===b== 1 ); //false console .log(a===b=== 1 ); //false console .log(a==b=== 1 ); // false console .log(a==b== 0 ); // false console .log(a===b== 0 ); // true console .log(a===b=== 0 ); // false console .log(a==b=== 0 ); // false http://www.jstips.co/zh_tw/javascript/why-you-should-use-Object.is()-in-equality-comparison/ https://30secondsofinterviews.org/ https://hacpai.com/article/1546570870626?r=Vanessa ++ Increment 後置遞增 i++ 和前置遞增 ++i 操作有什麼區別？ 他們都會使變量增加 1，只是計算和賦值的順序不一樣。 後置遞增是先賦值後計算，如： 1 2 3 4 5 let i = 1 ; console .log(i); // 1 let a = i++; console .log(i); // 2 console .log(a); // 1 前置遞增是先計算後賦值，如： 1 2 3 4 5 let i = 1 ; console .log(i); // 1 let a = ++i; console .log(i); // 2 console .log(a); // 2 https://jsbin.com/samaxubazo/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 function aFunc ( x )  return () = console .log(x++);  function bFunc ( x )  return x++;  function cFunc ( x )  return ++x;  let newFunc = aFunc( 1 ) newFunc() //1 newFunc() //2 newFunc() //3 console .log(bFunc( 1 )) //1 console .log(cFunc( 1 )) //2 references https://www.w3schools.com/js/js_operators.asp https://hacpai.com/article/1546665384680?r=Vanessa Adding Strings and Numbers 1 2 3 var x = 5 + 5 ; // 10 var y = \"5\" + 5 ; // 55 var z = \"Hello\" + 5 ; //Hello5 https://jsbin.com/hupumaxoru/edit?js,console 1 2 3 4 5 6 7 8 9 console .log( 1 + \"2\" + \"2\" ); // \"122\" //console.log(1++\"2\"+\"2\"); // \"error\" \"ReferenceError: Invalid left-hand side expression in postfix operation console .log( 1 + + \"2\" + \"2\" ); // \"32\" console .log( 1 + - \"1\" + \"2\" ); // \"02\" console .log(+ \"1\" + + \"1\" + \"2\" ); // \"22\" console .log( \"A\" - \"B\" ); // NaN console .log( \"A\" - \"B\" + \"2\" ); // \"NaN2\" console .log( \"A\" + \"B\" + \"2\" ); // \"AB2\" console .log( \"A\" + \"B\" + 2 ); // \"AB2\" https://www.w3schools.com/js/js_operators.asp"},"operators.html#What-is-the-difference-between-the-equality-operators-and":{"title":"What is the difference between the equality operators == and === ?","path":"\\javascript\\operators.html#What-is-the-difference-between-the-equality-operators-and","body":"&#x4E09;&#x500B;&#x7B49;&#x865F; === &#x8868;&#x793A;&#x56B4;&#x683C;&#x76F8;&#x7B49;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#x985E;&#x578B;&#x548C;&#x503C;&#x90FD;&#x5FC5;&#x9808;&#x76F8;&#x540C;&#x3002;&#x5169;&#x500B;&#x7B49;&#x865F; == &#x6703;&#x4F7F;&#x5176;&#x4E2D;&#x4E00;&#x908A;&#x7684;&#x985E;&#x578B;&#x9032;&#x884C;&#x5F37;&#x5236;&#x8F49;&#x63DB;&#xFF0C;&#x4F7F;&#x7B49;&#x865F;&#x5169;&#x908A;&#x7684;&#x985E;&#x578B;&#x90FD;&#x76F8;&#x7B49;&#x5F8C;&#x518D;&#x5C0D;&#x6578;&#x503C;&#x9032;&#x884C;&#x6BD4;&#x8F03;&#x3002; &#x52A0;&#x5206;&#x56DE;&#x7B54; &#x5118;&#x91CF;&#x4F7F;&#x7528;&#x5168;&#x7B49;&#x64CD;&#x4F5C;&#x7B26;&#x3002;&#x56E0;&#x70BA;&#x5176;&#x6C92;&#x6709;&#x96B1;&#x5F0F;&#x8F49;&#x63DB;&#xFF0C;&#x9019;&#x6A23;&#x7D50;&#x679C;&#x6703;&#x6BD4;&#x8F03;&#x5BB9;&#x6613;&#x9810;&#x6E2C;&#x3001;&#x8A08;&#x7B97;&#x4E5F;&#x6703;&#x6BD4;&#x8F03;&#x5FEB; &#x9664;&#x4E86;&#x7B49;&#x65BC;&#x64CD;&#x4F5C;&#x7B26;&#xFF0C;&#x9084;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; Object.is &#x9032;&#x884C;&#x540C;&#x503C;&#x6BD4;&#x8F03;&#x3002;&#x4ED6;&#x6709;&#x8457;&#x81EA;&#x5DF1;&#x7684;&#x7279;&#x6B8A;&#x7528;&#x9014;&#xFF0C;&#x4E0D;&#x61C9;&#x8AAA;&#x4ED6;&#x66F4;&#x5BEC;&#x9B06;&#x6216;&#x66F4;&#x56B4;&#x683C;&#x65BC;&#x5176;&#x4ED6;&#x7B49;&#x65BC;&#x64CD;&#x4F5C;&#x7B26; === &#x6BD4;&#x8F03;&#x4E0D;&#x662F;&#x4E00;&#x500B;&#x6BD4;&#x8F03;&#x597D;&#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x5F0F;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x9019;&#x6A23;&#x7684;&#x7D50;&#x679C;&#xFF1A; NaN === NaN //false &#x597D;&#x6D88;&#x606F;&#x662F;&#x5728; ES6 &#x6709;&#x4E00;&#x500B;&#x65B0;&#x7684; Object.is() &#xFF0C;&#x5B83;&#x662F;&#x66F4;&#x7CBE;&#x78BA;&#x800C;&#x4E14;&#x548C; === &#x6709;&#x76F8;&#x540C;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x5728;&#x67D0;&#x4E9B;&#x7279;&#x6B8A;&#x60C5;&#x6CC1;&#x4E0B;&#x4E5F;&#x904B;&#x4F5C;&#x7684;&#x5F88;&#x597D;&#xFF1A; Mozilla &#x5718;&#x968A; &#x4E0D;&#x8A8D;&#x70BA; Object.is &#x6BD4; === &#x66F4;&#x56B4;&#x683C;&#xFF0C;&#x4ED6;&#x5011;&#x5BA3;&#x7A31;&#x6211;&#x5011;&#x61C9;&#x8A72;&#x601D;&#x8003;&#x9019;&#x4E9B;&#x65B9;&#x6CD5;&#x5982;&#x4F55;&#x8655;&#x7406; NaN&#x3001;-0 &#x548C; +0 1 2 3 4 Object .is( 0 , &apos; &apos; ); //false Object .is( null , undefined ); //false Object .is([ 1 ], true ); //false Object .is( NaN , NaN ); //true https://jsbin.com/guqetaviho/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 var a = true , b = 1 ; console .log(a==b); //true console .log(a===b); //false console .log(a==b== 1 ); //true console .log(a===b== 1 ); //false console .log(a===b=== 1 ); //false console .log(a==b=== 1 ); // false console .log(a==b== 0 ); // false console .log(a===b== 0 ); // true console .log(a===b=== 0 ); // false console .log(a==b=== 0 ); // false http://www.jstips.co/zh_tw/javascript/why-you-should-use-Object.is()-in-equality-comparison/ https://30secondsofinterviews.org/ https://hacpai.com/article/1546570870626?r=Vanessa"},"operators.html#Increment":{"title":"++ Increment","path":"\\javascript\\operators.html#Increment","body":"&#x5F8C;&#x7F6E;&#x905E;&#x589E; i++ &#x548C;&#x524D;&#x7F6E;&#x905E;&#x589E; ++i &#x64CD;&#x4F5C;&#x6709;&#x4EC0;&#x9EBC;&#x5340;&#x5225;&#xFF1F; &#x4ED6;&#x5011;&#x90FD;&#x6703;&#x4F7F;&#x8B8A;&#x91CF;&#x589E;&#x52A0; 1&#xFF0C;&#x53EA;&#x662F;&#x8A08;&#x7B97;&#x548C;&#x8CE6;&#x503C;&#x7684;&#x9806;&#x5E8F;&#x4E0D;&#x4E00;&#x6A23;&#x3002; &#x5F8C;&#x7F6E;&#x905E;&#x589E;&#x662F;&#x5148;&#x8CE6;&#x503C;&#x5F8C;&#x8A08;&#x7B97;&#xFF0C;&#x5982;&#xFF1A; 1 2 3 4 5 let i = 1 ; console .log(i); // 1 let a = i++; console .log(i); // 2 console .log(a); // 1 &#x524D;&#x7F6E;&#x905E;&#x589E;&#x662F;&#x5148;&#x8A08;&#x7B97;&#x5F8C;&#x8CE6;&#x503C;&#xFF0C;&#x5982;&#xFF1A; 1 2 3 4 5 let i = 1 ; console .log(i); // 1 let a = ++i; console .log(i); // 2 console .log(a); // 2 https://jsbin.com/samaxubazo/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 function aFunc ( x ) { return () = console .log(x++); } function bFunc ( x ) { return x++; } function cFunc ( x ) { return ++x; } let newFunc = aFunc( 1 ) newFunc() //1 newFunc() //2 newFunc() //3 console .log(bFunc( 1 )) //1 console .log(cFunc( 1 )) //2 references https://www.w3schools.com/js/js_operators.asp https://hacpai.com/article/1546665384680?r=Vanessa"},"operators.html#references":{"title":"references","path":"\\javascript\\operators.html#references","body":"https://www.w3schools.com/js/js_operators.asp https://hacpai.com/article/1546665384680?r=Vanessa"},"operators.html#Adding-Strings-and-Numbers":{"title":"Adding Strings and Numbers","path":"\\javascript\\operators.html#Adding-Strings-and-Numbers","body":"1 2 3 var x = 5 + 5 ; // 10 var y = 5 + 5 ; // 55 var z = Hello + 5 ; //Hello5 https://jsbin.com/hupumaxoru/edit?js,console 1 2 3 4 5 6 7 8 9 console .log( 1 + 2 + 2 ); // 122 //console.log(1++2+2); // error ReferenceError: Invalid left-hand side expression in postfix operation console .log( 1 + + 2 + 2 ); // 32 console .log( 1 + - 1 + 2 ); // 02 console .log(+ 1 + + 1 + 2 ); // 22 console .log( A - B ); // NaN console .log( A - B + 2 ); // NaN2 console .log( A + B + 2 ); // AB2 console .log( A + B + 2 ); // AB2 https://www.w3schools.com/js/js_operators.asp"},"performance.html":{"title":"Performance","path":"\\javascript\\performance.html","body":"##　Clean Code 如何寫出漂亮的 JavaScript 代碼 優化原則和方向 性能優化的原則是以更好的用戶體驗為標準，具體就是實現下面的目標： 多使用內存、緩存或者其他方法 減少 CPU 和GPU 計算，更快展現 優化的方向有兩個： 減少頁面體積，提升網路加載 靜態資源的壓縮合併（JS 代碼壓縮合併、CSS 代碼壓縮合併） 靜態資源緩存（資源名稱加 MD5 戳） 使用 CDN 讓資源加載更快 優化頁面渲染 CSS 放前面，JS 放後面 懶加載（圖片懶加載、下拉加載更多） DOM 查詢做緩存 減少DOM 操作，多個操作儘量合併在一起執行（ DocumentFragment ） 儘早執行操作（ DOMContentLoaded ） 事件節流 使用 SSR 後端渲染，數據直接輸出到 HTML 中，減少瀏覽器使用 JS 模板渲染頁面 HTML 的時間 懶加載 一開始先給為 src 賦值成一個通用的預覽圖，下拉時候再動態賦值成正式的圖片。如下，preview.png是預覽圖片，比較小，加載很快，而且很多圖片都共用這個preview.png，加載一次即可。待頁面下拉，圖片顯示出來時，再去替換src為 data-realsrc 的值。 1 2 3 4 5  img src = \"img1\" src = \"preview.jpg\" data-realsrc = 'abc.png'   script type = \"text/javascript\"  \t var img1 = document .getElementById( 'img1' ) \timg1.src= img1.getAttribute( 'data-realsrc' ) / script  另外，這裡為何要用data-開頭的屬性值？ 所有 HTML 中自定義的屬性，都應該用 data- 開頭，因為 data- 開頭的屬性瀏覽器渲染的時候會忽略掉，提高渲染性能。 DOM 查詢做緩存 1 2 3 4 // 每次循環，都會查詢 DOM ，耗費性能 var i for (i = 0 ; i  document .getElementsByTagName( 'p' ).length; i++)   1 2 3 4 5 6 // 只查詢一個 DOM ，緩存在 pList 中了 var pList = document .getElementsByTagName( 'p' ) var i for (i = 0 ; i  pList.length; i++)  //todo  合併 DOM 插入 (createDocumentFragment) DOM 操作是非常耗費性能的，因此插入多個標籤時，先插入 Fragment 然後再統一插入 DOM。 1 2 3 4 5 6 7 8 9 10 var listNode = document .getElementById( 'list' ) // 要插入 10 個 li 標籤 var frag = document .createDocumentFragment(); var x, li; for (x = 0 ; x  10 ; x++)  li = document .createElement( \"li\" ); li.innerHTML = \"List item \" + x; frag.appendChild(li); // 先放在 frag 中，最後一次性插入到 DOM 結構中。  listNode.appendChild(frag); 儘早執行操作 (DOMContentLoaded) 1 2 3 4 5 6 window .addEventListener( 'load' , function ( )  // 頁面的全部資源加載完才會執行，包括圖片、視頻等 ) document .addEventListener( 'DOMContentLoaded' , function ( )  // DOM 渲染完即可執行，此時圖片、視頻還可能沒有加載完 ) 事件節流 例如要在文字改變時觸發一個 change 事件，通過 keyup 來監聽。使用節流。 鍵盤事件 keydown：按下鍵盤鍵 keyup：釋放鍵盤鍵 1 2 3 4 5 6 7 8 9 10 11 12 // 輸入完觸發文字修改事件 var textarea = document .getElementById( 'text' ) var timeoutId textarea.addEventListener( 'keyup' , function ( )  if (timeoutId)  clearTimeout(timeoutId)  // 讓連續鍵入不要頻繁觸發 change 事件 停下才觸發 timeoutId = setTimeout( function ( )  // 觸發 change 事件 , 100 ) ) Rreferences https://is.gd/0IyWU2 https://www.jianshu.com/p/8f839f558319"},"performance.html#優化原則和方向":{"title":"&#x512A;&#x5316;&#x539F;&#x5247;&#x548C;&#x65B9;&#x5411;","path":"\\javascript\\performance.html#優化原則和方向","body":"&#x6027;&#x80FD;&#x512A;&#x5316;&#x7684;&#x539F;&#x5247;&#x662F;&#x4EE5;&#x66F4;&#x597D;&#x7684;&#x7528;&#x6236;&#x9AD4;&#x9A57;&#x70BA;&#x6A19;&#x6E96;&#xFF0C;&#x5177;&#x9AD4;&#x5C31;&#x662F;&#x5BE6;&#x73FE;&#x4E0B;&#x9762;&#x7684;&#x76EE;&#x6A19;&#xFF1A; &#x591A;&#x4F7F;&#x7528;&#x5167;&#x5B58;&#x3001;&#x7DE9;&#x5B58;&#x6216;&#x8005;&#x5176;&#x4ED6;&#x65B9;&#x6CD5; &#x6E1B;&#x5C11; CPU &#x548C;GPU &#x8A08;&#x7B97;&#xFF0C;&#x66F4;&#x5FEB;&#x5C55;&#x73FE; &#x512A;&#x5316;&#x7684;&#x65B9;&#x5411;&#x6709;&#x5169;&#x500B;&#xFF1A; &#x6E1B;&#x5C11;&#x9801;&#x9762;&#x9AD4;&#x7A4D;&#xFF0C;&#x63D0;&#x5347;&#x7DB2;&#x8DEF;&#x52A0;&#x8F09; &#x975C;&#x614B;&#x8CC7;&#x6E90;&#x7684;&#x58D3;&#x7E2E;&#x5408;&#x4F75;&#xFF08;JS &#x4EE3;&#x78BC;&#x58D3;&#x7E2E;&#x5408;&#x4F75;&#x3001;CSS &#x4EE3;&#x78BC;&#x58D3;&#x7E2E;&#x5408;&#x4F75;&#xFF09; &#x975C;&#x614B;&#x8CC7;&#x6E90;&#x7DE9;&#x5B58;&#xFF08;&#x8CC7;&#x6E90;&#x540D;&#x7A31;&#x52A0; MD5 &#x6233;&#xFF09; &#x4F7F;&#x7528; CDN &#x8B93;&#x8CC7;&#x6E90;&#x52A0;&#x8F09;&#x66F4;&#x5FEB; &#x512A;&#x5316;&#x9801;&#x9762;&#x6E32;&#x67D3; CSS &#x653E;&#x524D;&#x9762;&#xFF0C;JS &#x653E;&#x5F8C;&#x9762; &#x61F6;&#x52A0;&#x8F09;&#xFF08;&#x5716;&#x7247;&#x61F6;&#x52A0;&#x8F09;&#x3001;&#x4E0B;&#x62C9;&#x52A0;&#x8F09;&#x66F4;&#x591A;&#xFF09; DOM &#x67E5;&#x8A62;&#x505A;&#x7DE9;&#x5B58; &#x6E1B;&#x5C11;DOM &#x64CD;&#x4F5C;&#xFF0C;&#x591A;&#x500B;&#x64CD;&#x4F5C;&#x5118;&#x91CF;&#x5408;&#x4F75;&#x5728;&#x4E00;&#x8D77;&#x57F7;&#x884C;&#xFF08; DocumentFragment &#xFF09; &#x5118;&#x65E9;&#x57F7;&#x884C;&#x64CD;&#x4F5C;&#xFF08; DOMContentLoaded &#xFF09; &#x4E8B;&#x4EF6;&#x7BC0;&#x6D41; &#x4F7F;&#x7528; SSR &#x5F8C;&#x7AEF;&#x6E32;&#x67D3;&#xFF0C;&#x6578;&#x64DA;&#x76F4;&#x63A5;&#x8F38;&#x51FA;&#x5230; HTML &#x4E2D;&#xFF0C;&#x6E1B;&#x5C11;&#x700F;&#x89BD;&#x5668;&#x4F7F;&#x7528; JS &#x6A21;&#x677F;&#x6E32;&#x67D3;&#x9801;&#x9762; HTML &#x7684;&#x6642;&#x9593;"},"performance.html#懶加載":{"title":"&#x61F6;&#x52A0;&#x8F09;","path":"\\javascript\\performance.html#懶加載","body":"&#x4E00;&#x958B;&#x59CB;&#x5148;&#x7D66;&#x70BA; src &#x8CE6;&#x503C;&#x6210;&#x4E00;&#x500B;&#x901A;&#x7528;&#x7684;&#x9810;&#x89BD;&#x5716;&#xFF0C;&#x4E0B;&#x62C9;&#x6642;&#x5019;&#x518D;&#x52D5;&#x614B;&#x8CE6;&#x503C;&#x6210;&#x6B63;&#x5F0F;&#x7684;&#x5716;&#x7247;&#x3002;&#x5982;&#x4E0B;&#xFF0C;preview.png&#x662F;&#x9810;&#x89BD;&#x5716;&#x7247;&#xFF0C;&#x6BD4;&#x8F03;&#x5C0F;&#xFF0C;&#x52A0;&#x8F09;&#x5F88;&#x5FEB;&#xFF0C;&#x800C;&#x4E14;&#x5F88;&#x591A;&#x5716;&#x7247;&#x90FD;&#x5171;&#x7528;&#x9019;&#x500B;preview.png&#xFF0C;&#x52A0;&#x8F09;&#x4E00;&#x6B21;&#x5373;&#x53EF;&#x3002;&#x5F85;&#x9801;&#x9762;&#x4E0B;&#x62C9;&#xFF0C;&#x5716;&#x7247;&#x986F;&#x793A;&#x51FA;&#x4F86;&#x6642;&#xFF0C;&#x518D;&#x53BB;&#x66FF;&#x63DB;src&#x70BA; data-realsrc &#x7684;&#x503C;&#x3002; 1 2 3 4 5  img src = img1 src = preview.jpg data-realsrc = &apos;abc.png&apos;   script type = text/javascript  \t var img1 = document .getElementById( &apos;img1&apos; ) \timg1.src= img1.getAttribute( &apos;data-realsrc&apos; ) / script  &#x53E6;&#x5916;&#xFF0C;&#x9019;&#x88E1;&#x70BA;&#x4F55;&#x8981;&#x7528;data-&#x958B;&#x982D;&#x7684;&#x5C6C;&#x6027;&#x503C;&#xFF1F; &#x6240;&#x6709; HTML &#x4E2D;&#x81EA;&#x5B9A;&#x7FA9;&#x7684;&#x5C6C;&#x6027;&#xFF0C;&#x90FD;&#x61C9;&#x8A72;&#x7528; data- &#x958B;&#x982D;&#xFF0C;&#x56E0;&#x70BA; data- &#x958B;&#x982D;&#x7684;&#x5C6C;&#x6027;&#x700F;&#x89BD;&#x5668;&#x6E32;&#x67D3;&#x7684;&#x6642;&#x5019;&#x6703;&#x5FFD;&#x7565;&#x6389;&#xFF0C;&#x63D0;&#x9AD8;&#x6E32;&#x67D3;&#x6027;&#x80FD;&#x3002;"},"performance.html#DOM-查詢做緩存":{"title":"DOM &#x67E5;&#x8A62;&#x505A;&#x7DE9;&#x5B58;","path":"\\javascript\\performance.html#DOM-查詢做緩存","body":"1 2 3 4 // &#x6BCF;&#x6B21;&#x5FAA;&#x74B0;&#xFF0C;&#x90FD;&#x6703;&#x67E5;&#x8A62; DOM &#xFF0C;&#x8017;&#x8CBB;&#x6027;&#x80FD; var i for (i = 0 ; i  document .getElementsByTagName( &apos;p&apos; ).length; i++) { } 1 2 3 4 5 6 // &#x53EA;&#x67E5;&#x8A62;&#x4E00;&#x500B; DOM &#xFF0C;&#x7DE9;&#x5B58;&#x5728; pList &#x4E2D;&#x4E86; var pList = document .getElementsByTagName( &apos;p&apos; ) var i for (i = 0 ; i  pList.length; i++) { //todo }"},"performance.html#合併-DOM-插入-createDocumentFragment":{"title":"&#x5408;&#x4F75; DOM &#x63D2;&#x5165; (createDocumentFragment)","path":"\\javascript\\performance.html#合併-DOM-插入-createDocumentFragment","body":"DOM &#x64CD;&#x4F5C;&#x662F;&#x975E;&#x5E38;&#x8017;&#x8CBB;&#x6027;&#x80FD;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x63D2;&#x5165;&#x591A;&#x500B;&#x6A19;&#x7C64;&#x6642;&#xFF0C;&#x5148;&#x63D2;&#x5165; Fragment &#x7136;&#x5F8C;&#x518D;&#x7D71;&#x4E00;&#x63D2;&#x5165; DOM&#x3002; 1 2 3 4 5 6 7 8 9 10 var listNode = document .getElementById( &apos;list&apos; ) // &#x8981;&#x63D2;&#x5165; 10 &#x500B; li &#x6A19;&#x7C64; var frag = document .createDocumentFragment(); var x, li; for (x = 0 ; x  10 ; x++) { li = document .createElement( li ); li.innerHTML = List item  + x; frag.appendChild(li); // &#x5148;&#x653E;&#x5728; frag &#x4E2D;&#xFF0C;&#x6700;&#x5F8C;&#x4E00;&#x6B21;&#x6027;&#x63D2;&#x5165;&#x5230; DOM &#x7D50;&#x69CB;&#x4E2D;&#x3002; } listNode.appendChild(frag);"},"performance.html#儘早執行操作-DOMContentLoaded":{"title":"&#x5118;&#x65E9;&#x57F7;&#x884C;&#x64CD;&#x4F5C; (DOMContentLoaded)","path":"\\javascript\\performance.html#儘早執行操作-DOMContentLoaded","body":"1 2 3 4 5 6 window .addEventListener( &apos;load&apos; , function ( ) { // &#x9801;&#x9762;&#x7684;&#x5168;&#x90E8;&#x8CC7;&#x6E90;&#x52A0;&#x8F09;&#x5B8C;&#x624D;&#x6703;&#x57F7;&#x884C;&#xFF0C;&#x5305;&#x62EC;&#x5716;&#x7247;&#x3001;&#x8996;&#x983B;&#x7B49; }) document .addEventListener( &apos;DOMContentLoaded&apos; , function ( ) { // DOM &#x6E32;&#x67D3;&#x5B8C;&#x5373;&#x53EF;&#x57F7;&#x884C;&#xFF0C;&#x6B64;&#x6642;&#x5716;&#x7247;&#x3001;&#x8996;&#x983B;&#x9084;&#x53EF;&#x80FD;&#x6C92;&#x6709;&#x52A0;&#x8F09;&#x5B8C; })"},"performance.html#事件節流":{"title":"&#x4E8B;&#x4EF6;&#x7BC0;&#x6D41;","path":"\\javascript\\performance.html#事件節流","body":"&#x4F8B;&#x5982;&#x8981;&#x5728;&#x6587;&#x5B57;&#x6539;&#x8B8A;&#x6642;&#x89F8;&#x767C;&#x4E00;&#x500B; change &#x4E8B;&#x4EF6;&#xFF0C;&#x901A;&#x904E; keyup &#x4F86;&#x76E3;&#x807D;&#x3002;&#x4F7F;&#x7528;&#x7BC0;&#x6D41;&#x3002; &#x9375;&#x76E4;&#x4E8B;&#x4EF6; keydown&#xFF1A;&#x6309;&#x4E0B;&#x9375;&#x76E4;&#x9375; keyup&#xFF1A;&#x91CB;&#x653E;&#x9375;&#x76E4;&#x9375; 1 2 3 4 5 6 7 8 9 10 11 12 // &#x8F38;&#x5165;&#x5B8C;&#x89F8;&#x767C;&#x6587;&#x5B57;&#x4FEE;&#x6539;&#x4E8B;&#x4EF6; var textarea = document .getElementById( &apos;text&apos; ) var timeoutId textarea.addEventListener( &apos;keyup&apos; , function ( ) { if (timeoutId) { clearTimeout(timeoutId) } // &#x8B93;&#x9023;&#x7E8C;&#x9375;&#x5165;&#x4E0D;&#x8981;&#x983B;&#x7E41;&#x89F8;&#x767C; change &#x4E8B;&#x4EF6; &#x505C;&#x4E0B;&#x624D;&#x89F8;&#x767C; timeoutId = setTimeout( function ( ) { // &#x89F8;&#x767C; change &#x4E8B;&#x4EF6; }, 100 ) }) Rreferences https://is.gd/0IyWU2 https://www.jianshu.com/p/8f839f558319"},"math.html":{"title":"問題","path":"\\javascript\\math.html","body":"Math Math.pow(x, y) 回傳 x 的 y 次方 1 2 const decimals = 6 console .log( Math .pow( 10 , decimals)) //1000000` 浮點數運算的坑 JavaScript 浮点数陷阱及解法 當你拿到 1.4000000000000001 這樣的數據要展示時，建議使用 toPrecision 湊整併 parseFloat 轉成數字後再顯示，如下： parseFloat(1.4000000000000001.toPrecision(12)) === 1.4 // True 百分比 轉 小數 問題 1 2 3 4 5 6 var a = 0.9 ; var b = a / 100 ; var c = parseFloat ( (a / 100 ).toPrecision( 12 )) console .log(b) // 0.009000000000000001 console .log(c) // 0.009 科學符號處理 npm from-exponential 1 2 3 4 5 6 7 8 span v-text= \"getPriceValue(order.itemPrice)\" /span import fromExponential from 'from-exponential' methods:  getPriceValue(value)  return fromExponential(value)   why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 這只是JavaScript遵循IEEE 754標準所產生的必然結果。 IEEE 754標準中 的浮點數並不能精確地表達小數（比如說0.1）， JavaScript中的小數採用的是雙精度(64位)表示的，由三部分組成：　符 + 階碼 + 尾數 IEEE 754 雙精度。六十四位中符號位佔一位，整數位佔十一位，其餘五十二位都為小數位。 因為浮點數隻有52位有效數字，從第53位開始，就舍入了。這樣就造成了“浮點數精度損失”問題。 因為 0.1 和 0.2 都是無限循環的二進制了，所以在小數位末尾處需要判斷是否進位（就和十進制的四捨五入一樣）。 計算機表示十進制是採用二進製表示的，所以 0.1 在二進製表示為 `0.1.toString(2) // “0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01” 小數的算法，是乘2 0.1 × 2 ￣￣￣￣ 0.2 → 取小數前的 0 0.2 × 2 ￣￣￣￣ 0.4 → 取小數前的 0 0.4 × 2 ￣￣￣￣ 0.8 → 取小數前的 0 0.8 × 2 ￣￣￣￣ 1.6 → 取小數前的 1 0.6 × 2 ￣￣￣￣ 1.2 → 取小數前的 1 0.2 × 2 ￣￣￣￣ 0.4 → 取小數前的 0 十進位 0.1 = 二進位 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 從上面可以看出，0.1的二進制格式是：0.0001100011….。這是一個二進制無限循環小數，但計算機內存有限，我們不能用儲存所有的小數位數。那麼在精度與內存間如何取捨呢？ 答案是： 在某個精度點直接捨棄 (第53位開始)。當然，代價就是，0.1在計算機內部根本就不是精確的0.1，而是一個有舍入誤差的0.1。當代碼被編譯或解釋後，0.1已經被四捨五入成一個與之很接近的計算機內部數字，以至於計算還沒開始，一個很小的舍入錯誤就已經產生了。這也就是 0.1 + 0.2 不等於0.3 的原因。 使用JavaScript內置的函數 toPrecision 或 toFixed 來保留一定的精度： (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true 不要相信js的計算 善用 math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"math.html#Math":{"title":"Math","path":"\\javascript\\math.html#Math","body":"Math.pow(x, y) &#x56DE;&#x50B3; x &#x7684; y &#x6B21;&#x65B9; 1 2 const decimals = 6 console .log( Math .pow( 10 , decimals)) //1000000` &#x6D6E;&#x9EDE;&#x6578;&#x904B;&#x7B97;&#x7684;&#x5751; JavaScript &#x6D6E;&#x70B9;&#x6570;&#x9677;&#x9631;&#x53CA;&#x89E3;&#x6CD5; &#x7576;&#x4F60;&#x62FF;&#x5230; 1.4000000000000001 &#x9019;&#x6A23;&#x7684;&#x6578;&#x64DA;&#x8981;&#x5C55;&#x793A;&#x6642;&#xFF0C;&#x5EFA;&#x8B70;&#x4F7F;&#x7528; toPrecision &#x6E4A;&#x6574;&#x4F75; parseFloat &#x8F49;&#x6210;&#x6578;&#x5B57;&#x5F8C;&#x518D;&#x986F;&#x793A;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; parseFloat(1.4000000000000001.toPrecision(12)) === 1.4 // True &#x767E;&#x5206;&#x6BD4; &#x8F49; &#x5C0F;&#x6578; &#x554F;&#x984C; 1 2 3 4 5 6 var a = 0.9 ; var b = a / 100 ; var c = parseFloat ( (a / 100 ).toPrecision( 12 )) console .log(b) // 0.009000000000000001 console .log(c) // 0.009 &#x79D1;&#x5B78;&#x7B26;&#x865F;&#x8655;&#x7406; npm from-exponential 1 2 3 4 5 6 7 8 span v-text= getPriceValue(order.itemPrice) /span import fromExponential from &apos;from-exponential&apos; methods: { getPriceValue(value) { return fromExponential(value) } } why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002; IEEE 754&#x6A19;&#x6E96;&#x4E2D; &#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"math.html#浮點數運算的坑":{"title":"&#x6D6E;&#x9EDE;&#x6578;&#x904B;&#x7B97;&#x7684;&#x5751;","path":"\\javascript\\math.html#浮點數運算的坑","body":"JavaScript &#x6D6E;&#x70B9;&#x6570;&#x9677;&#x9631;&#x53CA;&#x89E3;&#x6CD5; &#x7576;&#x4F60;&#x62FF;&#x5230; 1.4000000000000001 &#x9019;&#x6A23;&#x7684;&#x6578;&#x64DA;&#x8981;&#x5C55;&#x793A;&#x6642;&#xFF0C;&#x5EFA;&#x8B70;&#x4F7F;&#x7528; toPrecision &#x6E4A;&#x6574;&#x4F75; parseFloat &#x8F49;&#x6210;&#x6578;&#x5B57;&#x5F8C;&#x518D;&#x986F;&#x793A;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; parseFloat(1.4000000000000001.toPrecision(12)) === 1.4 // True &#x767E;&#x5206;&#x6BD4; &#x8F49; &#x5C0F;&#x6578; &#x554F;&#x984C; 1 2 3 4 5 6 var a = 0.9 ; var b = a / 100 ; var c = parseFloat ( (a / 100 ).toPrecision( 12 )) console .log(b) // 0.009000000000000001 console .log(c) // 0.009 &#x79D1;&#x5B78;&#x7B26;&#x865F;&#x8655;&#x7406; npm from-exponential 1 2 3 4 5 6 7 8 span v-text= getPriceValue(order.itemPrice) /span import fromExponential from &apos;from-exponential&apos; methods: { getPriceValue(value) { return fromExponential(value) } } why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002; IEEE 754&#x6A19;&#x6E96;&#x4E2D; &#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"math.html#科學符號處理":{"title":"&#x79D1;&#x5B78;&#x7B26;&#x865F;&#x8655;&#x7406;","path":"\\javascript\\math.html#科學符號處理","body":"npm from-exponential 1 2 3 4 5 6 7 8 span v-text= getPriceValue(order.itemPrice) /span import fromExponential from &apos;from-exponential&apos; methods: { getPriceValue(value) { return fromExponential(value) } } why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002; IEEE 754&#x6A19;&#x6E96;&#x4E2D; &#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"math.html#why-0-1-0-2-0-3":{"title":"why 0.1 + 0.2 != 0.3","path":"\\javascript\\math.html#why-0-1-0-2-0-3","body":"0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002; IEEE 754&#x6A19;&#x6E96;&#x4E2D; &#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"this.html":{"title":"This","path":"\\javascript\\this.html","body":"物件的方法調用 (As an object method) 物件下呼叫會影響 this 的指向 https://jsbin.com/viziyewore/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 function callName ( )  console .log( this .name);  var name = '全域' ; var obj =  name: '區域' , callName: callName, watch:  name: 'Watch' , callName: callName   callName() // \"全域\" obj.callName(); //\"區域\" ，呼叫是在物件下調用，那麼 this 則是該物件 obj.watch.callName(); //\"Watch\" https://jsbin.com/vihonezita/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 var name = '全域' ; var obj =  name: '區域' , callName: function ( )  console .log( this .name);   //callName; // callName is not defined //callName(); // error\" \"TypeError: callName is not a function obj.callName(); //\"區域\" ，呼叫是在物件下調用，那麼 this 則是該物件 var callName = obj.callName; callName(); // \"全域\" 1 2 3 4 5 6 7 8 9 var name = '全域' var obj =  //name : '物件的', x: function ( )  name = '函式的' ; console .log( this .name); //\"物件的\" 找不到就會undefined   obj.x() 簡易呼叫 1 2 3 4 5 6 7 8 9 var name = '全域' var obj =  name : '物件的' , getName: function ( )  return this .name;   var getName = obj.getName; console .log(getName()) //\"全域\" 1 2 3 4 5 6 7 8 9 10 var name = '全域' var obj =  name : '物件的' , fn: function ( a, b, c )  return this .name+ ',' +a+ ',' +b+ ',' +c;   var fnA = obj.fn; var fnB = fnA.bind( null , 0 ); // a console .log( fnB( 1 , 2 ) ) // b c \"全域,0,1,2\" 1 2 3 4 5 6 7 8 9 10 11 var name = '全域' var obj =  name : '物件的' , fn: function ( a, b, c )  'use strict' return this + ',' +a+ ',' +b+ ',' +c;   var fnA = obj.fn; var fnB = fnA.bind( null , 0 ); // a console .log( fnB( 1 , 2 ) ) // b c \"null,0,1,2\" 1 2 3 4 5 6 7 8 9 10 11 12 13 var value = 'global' ; var foo =  value: 'local' , bar: function ( )  return this .value;   console .log(foo.bar()); // \"local\" // 下面是表達式 執行時直接把函數取出來 執行函式的結果 console .log( foo.bar = foo.bar ); // function() return this.value; // 賦值是表達式 表達式會回傳結果 console .log( (foo.bar = foo.bar)() ); // \"global\" console .log( ( false || foo.bar)() ) // \"global\" 1 2 3 4 5 6 7 8 var value = 'global' ; var obj =  x: function ( )  value: 'fn' , console .log( this .value); //undefined ,  obj.x(); // \"local\" 1 2 3 4 5 6 7 8 9 10 var value = 'global' ; var obj =  x: function ( )  value: 'fn' , console .log( this .value); , value: 'local' ,  obj.x(); // \"local\" 立即函式： 1 2 3 4 5 6 7 var name = '全域' ; ( function ( )  function callSomeone ( )  console .log( this .name);  callSomeone(); //\"全域\" )(); 1 2 3 4 5 var name = '全域' ; ( function ( )  var name = '區域' ; console .log( this .name); //\"全域\" )() 1 2 3 4 5 6 7 8 9 10 var name = '全域' ; var obj =  name: '區域' , callName: function ( )  console .log( this .name);  ; ( function ( )  obj.callName(); // \"區域\" )(); Closure https://jsbin.com/tagalenuje/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 var name = '全域' function easyCard ( base = 100 )  var money = base return function ( update = 10 )  money = money + update console .log( this .name, money)   var MingEasyCard = easyCard( 100 ) MingEasyCard(); // 110 MingEasyCard(); // 120 var YourEasyCard = easyCard( 20 ); YourEasyCard(); //30 var YourEasyCard2 = easyCard( 20 ); YourEasyCard2( 100 ); // 120 var MyEasyCard = easyCard( 1000 )( 100 ); MyEasyCard( 100 ); // \"TypeError: MyEasyCard is not a function 1 2 3 4 5 6 7 8 9 10 11 var name = '全域' function easyCard ( base = 100 )  var money = base var name = '悠遊卡' return function ( update = 10 )  money = money + update console .log( this .name, money) // \"全域\" 110   var MingEasyCard = easyCard( 100 ) MingEasyCard() Callback 1 2 3 4 5 6 7 function myEasyCard ( callback )  var money = 150 return callback(money)  myEasyCard( function ( money )  console .log( money + 100 ) //250 ) 1 2 3 4 var a = [ 1 , 2 , 3 ]; a.forEach( function ( item )  console .log( this , item) ); https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#語法 1 2 3 arr.forEach( function callback ( currentValue[, index[, array]] )  //your iterator [, thisArg]); 這個 callback 函式將會把 Array 中的每一個元素作為參數，帶進本 callback 函式裡，每個元素各執行一次，接收三個參數： currentValue 代表目前被處理中的 Array 之中的那個元素。 index,array, thisArg 選擇性 Note: IIFE、Closure、Callback function 與 this 關係是!? 沒有關係 bind, apply, call call &amp; apply 可以作為呼叫 Function 的另一個手段，皆是回傳function執行結果 而 bind 則會回傳一個經過包裹後的 Function 回來，回傳的是綁定 this 後的 原函數 。 「綁定this的函數」 一但被綁定，其this無法再被修改。 call vs. apply 作用完全一樣，只是接受參數的方式不太一樣 1 2 func.call( this , arg1, arg2); func.apply( this , [arg1, arg2]); //陣列 JavaScript Call 使用給定的this參數以及分別給定的參數來呼叫某個函數 1 2 3 4 5 6 7 8 9 10 11 function callName ( name )  console .log( this .name, name);  var name = '全域' ; var obj =  name: '區域' ,  callName( undefined , '全域2' ); // \"全域\" undefined (this.name, name) callName.call( undefined , '呼叫' ); // \"全域\" \"呼叫\" (this.name, name) 無值傳入this往上找 callName.call(obj, '呼叫' ); // \"區域\" \"呼叫\" (this.name, name) bind 是ES5中新增的一個方法，可以改變函數內部的this指向 bind的應用場景 借用Array的原生方法 https://jsbin.com/pupasabapa/edit?js,console 1 2 3 4 5 6 7 8 9 var a = ; Array .prototype.push.bind(a, \"hello\" , \"world\" )(); console .log(a); // [object Object]  // 0: \"hello\", // 1: \"world\", // length: 2 //  http://www.dengzhr.com/js/1069 箭頭函式 「箭頭函式沒有自己的 this」 https://jsbin.com/wuxiqeciko/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 var name = '全域' var obj =  name: '區域' , callName: function ( )  // 注意，這裡是 function，以此為基準產生一個作用域 console .log( '1' , this .name); // 1 \"區域\" setTimeout( () =  console .log( '2' , this .name); // 2 \"區域\" //console.log('3', this); // 3 obj 這個物件 , 10 ); , callNameArrow: () =  // 注意，如果使用箭頭函式，this 依然指向 window console .log( '4' , this .name); // 4 \"全域\" setTimeout( () =  console .log( '5' , this .name); // 5 \"全域\" //console.log('6', this); // 6 window 物件 , 10 );   obj.callName(); obj.callNameArrow(); const func = (x) = x + 1 const func = function (x) { return x + 1 } JS語言中函式的設計，必有回傳值，沒寫相當於回傳 undefined map 1 2 3 4 5 6 7 8 9 10 // ['1','2','3'] 字串透過parseInt 轉數字 var arr = [ '1' , '2' , '3' ].map( parseInt ); console .log(arr) // [1, NaN, NaN] var arr = [ '1' , '2' , '3' ].map( function ( item, i )  console .log(item, i) // parseInt('1', 0); parseInt('2', 1); parseInt('3', 2); // parseInt('2', 1) 進位系統的1 表數字到1 進到下一位 所以2不會存在NaN // parseInt('11', 2) 進位系統的2 11表示2+1=3 return parseInt (item, 10 ) // \"1\" \"2\" \"3\" parseInt(item, i) ); map() callback 回呼函式 參數 currentValue index array parseInt() radix 能代表該進位系統的數字 注意，通常預設值不是 10 進位 References https://wcc723.github.io/javascript/2019/03/18/JS-THIS/ https://paper.dropbox.com/doc/JSJavaScript-This---AZqD8PDvbl5uk5Mfq_EJlXMkAg-Xw50EZtMFNqG0wUxKeIaz https://wcc723.github.io/javascript/2017/12/21/javascript-es6-arrow-function/"},"this.html#物件的方法調用-As-an-object-method":{"title":"&#x7269;&#x4EF6;&#x7684;&#x65B9;&#x6CD5;&#x8ABF;&#x7528; (As an object method)","path":"\\javascript\\this.html#物件的方法調用-As-an-object-method","body":"&#x7269;&#x4EF6;&#x4E0B;&#x547C;&#x53EB;&#x6703;&#x5F71;&#x97FF; this &#x7684;&#x6307;&#x5411; https://jsbin.com/viziyewore/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 function callName ( ) { console .log( this .name); } var name = &apos;&#x5168;&#x57DF;&apos; ; var obj = { name: &apos;&#x5340;&#x57DF;&apos; , callName: callName, watch: { name: &apos;Watch&apos; , callName: callName } } callName() // &#x5168;&#x57DF; obj.callName(); //&#x5340;&#x57DF; &#xFF0C;&#x547C;&#x53EB;&#x662F;&#x5728;&#x7269;&#x4EF6;&#x4E0B;&#x8ABF;&#x7528;&#xFF0C;&#x90A3;&#x9EBC; this &#x5247;&#x662F;&#x8A72;&#x7269;&#x4EF6; obj.watch.callName(); //Watch https://jsbin.com/vihonezita/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 var name = &apos;&#x5168;&#x57DF;&apos; ; var obj = { name: &apos;&#x5340;&#x57DF;&apos; , callName: function ( ) { console .log( this .name); } } //callName; // callName is not defined //callName(); // error TypeError: callName is not a function obj.callName(); //&#x5340;&#x57DF; &#xFF0C;&#x547C;&#x53EB;&#x662F;&#x5728;&#x7269;&#x4EF6;&#x4E0B;&#x8ABF;&#x7528;&#xFF0C;&#x90A3;&#x9EBC; this &#x5247;&#x662F;&#x8A72;&#x7269;&#x4EF6; var callName = obj.callName; callName(); // &#x5168;&#x57DF; 1 2 3 4 5 6 7 8 9 var name = &apos;&#x5168;&#x57DF;&apos; var obj = { //name : &apos;&#x7269;&#x4EF6;&#x7684;&apos;, x: function ( ) { name = &apos;&#x51FD;&#x5F0F;&#x7684;&apos; ; console .log( this .name); //&#x7269;&#x4EF6;&#x7684; &#x627E;&#x4E0D;&#x5230;&#x5C31;&#x6703;undefined } } obj.x()"},"this.html#簡易呼叫":{"title":"&#x7C21;&#x6613;&#x547C;&#x53EB;","path":"\\javascript\\this.html#簡易呼叫","body":"1 2 3 4 5 6 7 8 9 var name = &apos;&#x5168;&#x57DF;&apos; var obj = { name : &apos;&#x7269;&#x4EF6;&#x7684;&apos; , getName: function ( ) { return this .name; } } var getName = obj.getName; console .log(getName()) //&#x5168;&#x57DF; 1 2 3 4 5 6 7 8 9 10 var name = &apos;&#x5168;&#x57DF;&apos; var obj = { name : &apos;&#x7269;&#x4EF6;&#x7684;&apos; , fn: function ( a, b, c ) { return this .name+ &apos;,&apos; +a+ &apos;,&apos; +b+ &apos;,&apos; +c; } } var fnA = obj.fn; var fnB = fnA.bind( null , 0 ); // a console .log( fnB( 1 , 2 ) ) // b c &#x5168;&#x57DF;,0,1,2 1 2 3 4 5 6 7 8 9 10 11 var name = &apos;&#x5168;&#x57DF;&apos; var obj = { name : &apos;&#x7269;&#x4EF6;&#x7684;&apos; , fn: function ( a, b, c ) { &apos;use strict&apos; return this + &apos;,&apos; +a+ &apos;,&apos; +b+ &apos;,&apos; +c; } } var fnA = obj.fn; var fnB = fnA.bind( null , 0 ); // a console .log( fnB( 1 , 2 ) ) // b c null,0,1,2 1 2 3 4 5 6 7 8 9 10 11 12 13 var value = &apos;global&apos; ; var foo = { value: &apos;local&apos; , bar: function ( ) { return this .value; } } console .log(foo.bar()); // local // &#x4E0B;&#x9762;&#x662F;&#x8868;&#x9054;&#x5F0F; &#x57F7;&#x884C;&#x6642;&#x76F4;&#x63A5;&#x628A;&#x51FD;&#x6578;&#x53D6;&#x51FA;&#x4F86; &#x57F7;&#x884C;&#x51FD;&#x5F0F;&#x7684;&#x7D50;&#x679C; console .log( foo.bar = foo.bar ); // function() {return this.value;} // &#x8CE6;&#x503C;&#x662F;&#x8868;&#x9054;&#x5F0F; &#x8868;&#x9054;&#x5F0F;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; console .log( (foo.bar = foo.bar)() ); // global console .log( ( false || foo.bar)() ) // global 1 2 3 4 5 6 7 8 var value = &apos;global&apos; ; var obj = { x: function ( ) { value: &apos;fn&apos; , console .log( this .value); //undefined }, } obj.x(); // local 1 2 3 4 5 6 7 8 9 10 var value = &apos;global&apos; ; var obj = { x: function ( ) { value: &apos;fn&apos; , console .log( this .value); }, value: &apos;local&apos; , } obj.x(); // local"},"this.html#立即函式：":{"title":"&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#xFF1A;","path":"\\javascript\\this.html#立即函式：","body":"1 2 3 4 5 6 7 var name = &apos;&#x5168;&#x57DF;&apos; ; ( function ( ) { function callSomeone ( ) { console .log( this .name); } callSomeone(); //&#x5168;&#x57DF; })(); 1 2 3 4 5 var name = &apos;&#x5168;&#x57DF;&apos; ; ( function ( ) { var name = &apos;&#x5340;&#x57DF;&apos; ; console .log( this .name); //&#x5168;&#x57DF; })() 1 2 3 4 5 6 7 8 9 10 var name = &apos;&#x5168;&#x57DF;&apos; ; var obj = { name: &apos;&#x5340;&#x57DF;&apos; , callName: function ( ) { console .log( this .name); } }; ( function ( ) { obj.callName(); // &#x5340;&#x57DF; })();"},"this.html#Closure":{"title":"Closure","path":"\\javascript\\this.html#Closure","body":"https://jsbin.com/tagalenuje/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 var name = &apos;&#x5168;&#x57DF;&apos; function easyCard ( base = 100 ) { var money = base return function ( update = 10 ) { money = money + update console .log( this .name, money) } } var MingEasyCard = easyCard( 100 ) MingEasyCard(); // 110 MingEasyCard(); // 120 var YourEasyCard = easyCard( 20 ); YourEasyCard(); //30 var YourEasyCard2 = easyCard( 20 ); YourEasyCard2( 100 ); // 120 var MyEasyCard = easyCard( 1000 )( 100 ); MyEasyCard( 100 ); // TypeError: MyEasyCard is not a function 1 2 3 4 5 6 7 8 9 10 11 var name = &apos;&#x5168;&#x57DF;&apos; function easyCard ( base = 100 ) { var money = base var name = &apos;&#x60A0;&#x904A;&#x5361;&apos; return function ( update = 10 ) { money = money + update console .log( this .name, money) // &#x5168;&#x57DF; 110 } } var MingEasyCard = easyCard( 100 ) MingEasyCard()"},"this.html#Callback":{"title":"Callback","path":"\\javascript\\this.html#Callback","body":"1 2 3 4 5 6 7 function myEasyCard ( callback ) { var money = 150 return callback(money) } myEasyCard( function ( money ) { console .log( money + 100 ) //250 }) 1 2 3 4 var a = [ 1 , 2 , 3 ]; a.forEach( function ( item ) { console .log( this , item) }); https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#&#x8A9E;&#x6CD5; 1 2 3 arr.forEach( function callback ( currentValue[, index[, array]] ) { //your iterator }[, thisArg]); &#x9019;&#x500B; callback &#x51FD;&#x5F0F;&#x5C07;&#x6703;&#x628A; Array &#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x4F5C;&#x70BA;&#x53C3;&#x6578;&#xFF0C;&#x5E36;&#x9032;&#x672C; callback &#x51FD;&#x5F0F;&#x88E1;&#xFF0C;&#x6BCF;&#x500B;&#x5143;&#x7D20;&#x5404;&#x57F7;&#x884C;&#x4E00;&#x6B21;&#xFF0C;&#x63A5;&#x6536;&#x4E09;&#x500B;&#x53C3;&#x6578;&#xFF1A; currentValue &#x4EE3;&#x8868;&#x76EE;&#x524D;&#x88AB;&#x8655;&#x7406;&#x4E2D;&#x7684; Array &#x4E4B;&#x4E2D;&#x7684;&#x90A3;&#x500B;&#x5143;&#x7D20;&#x3002; index,array, thisArg &#x9078;&#x64C7;&#x6027; Note: IIFE&#x3001;Closure&#x3001;Callback function &#x8207; this &#x95DC;&#x4FC2;&#x662F;!? &#x6C92;&#x6709;&#x95DC;&#x4FC2;"},"this.html#bind-apply-call":{"title":"bind, apply, call","path":"\\javascript\\this.html#bind-apply-call","body":"call &amp; apply &#x53EF;&#x4EE5;&#x4F5C;&#x70BA;&#x547C;&#x53EB; Function &#x7684;&#x53E6;&#x4E00;&#x500B;&#x624B;&#x6BB5;&#xFF0C;&#x7686;&#x662F;&#x56DE;&#x50B3;function&#x57F7;&#x884C;&#x7D50;&#x679C; &#x800C; bind &#x5247;&#x6703;&#x56DE;&#x50B3;&#x4E00;&#x500B;&#x7D93;&#x904E;&#x5305;&#x88F9;&#x5F8C;&#x7684; Function &#x56DE;&#x4F86;&#xFF0C;&#x56DE;&#x50B3;&#x7684;&#x662F;&#x7D81;&#x5B9A; this &#x5F8C;&#x7684; &#x539F;&#x51FD;&#x6578; &#x3002; &#x300C;&#x7D81;&#x5B9A;this&#x7684;&#x51FD;&#x6578;&#x300D; &#x4E00;&#x4F46;&#x88AB;&#x7D81;&#x5B9A;&#xFF0C;&#x5176;this&#x7121;&#x6CD5;&#x518D;&#x88AB;&#x4FEE;&#x6539;&#x3002; call vs. apply &#x4F5C;&#x7528;&#x5B8C;&#x5168;&#x4E00;&#x6A23;&#xFF0C;&#x53EA;&#x662F;&#x63A5;&#x53D7;&#x53C3;&#x6578;&#x7684;&#x65B9;&#x5F0F;&#x4E0D;&#x592A;&#x4E00;&#x6A23; 1 2 func.call( this , arg1, arg2); func.apply( this , [arg1, arg2]); //&#x9663;&#x5217; JavaScript Call &#x4F7F;&#x7528;&#x7D66;&#x5B9A;&#x7684;this&#x53C3;&#x6578;&#x4EE5;&#x53CA;&#x5206;&#x5225;&#x7D66;&#x5B9A;&#x7684;&#x53C3;&#x6578;&#x4F86;&#x547C;&#x53EB;&#x67D0;&#x500B;&#x51FD;&#x6578; 1 2 3 4 5 6 7 8 9 10 11 function callName ( name ) { console .log( this .name, name); } var name = &apos;&#x5168;&#x57DF;&apos; ; var obj = { name: &apos;&#x5340;&#x57DF;&apos; , } callName( undefined , &apos;&#x5168;&#x57DF;2&apos; ); // &#x5168;&#x57DF; undefined (this.name, name) callName.call( undefined , &apos;&#x547C;&#x53EB;&apos; ); // &#x5168;&#x57DF; &#x547C;&#x53EB; (this.name, name) &#x7121;&#x503C;&#x50B3;&#x5165;this&#x5F80;&#x4E0A;&#x627E; callName.call(obj, &apos;&#x547C;&#x53EB;&apos; ); // &#x5340;&#x57DF; &#x547C;&#x53EB; (this.name, name) bind &#x662F;ES5&#x4E2D;&#x65B0;&#x589E;&#x7684;&#x4E00;&#x500B;&#x65B9;&#x6CD5;&#xFF0C;&#x53EF;&#x4EE5;&#x6539;&#x8B8A;&#x51FD;&#x6578;&#x5167;&#x90E8;&#x7684;this&#x6307;&#x5411; bind&#x7684;&#x61C9;&#x7528;&#x5834;&#x666F; &#x501F;&#x7528;Array&#x7684;&#x539F;&#x751F;&#x65B9;&#x6CD5; https://jsbin.com/pupasabapa/edit?js,console 1 2 3 4 5 6 7 8 9 var a = {}; Array .prototype.push.bind(a, hello , world )(); console .log(a); // [object Object] { // 0: hello, // 1: world, // length: 2 // } http://www.dengzhr.com/js/1069 &#x7BAD;&#x982D;&#x51FD;&#x5F0F; &#x300C;&#x7BAD;&#x982D;&#x51FD;&#x5F0F;&#x6C92;&#x6709;&#x81EA;&#x5DF1;&#x7684; this&#x300D; https://jsbin.com/wuxiqeciko/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 var name = &apos;&#x5168;&#x57DF;&apos; var obj = { name: &apos;&#x5340;&#x57DF;&apos; , callName: function ( ) { // &#x6CE8;&#x610F;&#xFF0C;&#x9019;&#x88E1;&#x662F; function&#xFF0C;&#x4EE5;&#x6B64;&#x70BA;&#x57FA;&#x6E96;&#x7522;&#x751F;&#x4E00;&#x500B;&#x4F5C;&#x7528;&#x57DF; console .log( &apos;1&apos; , this .name); // 1 &#x5340;&#x57DF; setTimeout( () = { console .log( &apos;2&apos; , this .name); // 2 &#x5340;&#x57DF; //console.log(&apos;3&apos;, this); // 3 obj &#x9019;&#x500B;&#x7269;&#x4EF6; }, 10 ); }, callNameArrow: () = { // &#x6CE8;&#x610F;&#xFF0C;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x7BAD;&#x982D;&#x51FD;&#x5F0F;&#xFF0C;this &#x4F9D;&#x7136;&#x6307;&#x5411; window console .log( &apos;4&apos; , this .name); // 4 &#x5168;&#x57DF; setTimeout( () = { console .log( &apos;5&apos; , this .name); // 5 &#x5168;&#x57DF; //console.log(&apos;6&apos;, this); // 6 window &#x7269;&#x4EF6; }, 10 ); } } obj.callName(); obj.callNameArrow(); const func = (x) = x + 1 const func = function (x) { return x + 1 } JS&#x8A9E;&#x8A00;&#x4E2D;&#x51FD;&#x5F0F;&#x7684;&#x8A2D;&#x8A08;&#xFF0C;&#x5FC5;&#x6709;&#x56DE;&#x50B3;&#x503C;&#xFF0C;&#x6C92;&#x5BEB;&#x76F8;&#x7576;&#x65BC;&#x56DE;&#x50B3; undefined map 1 2 3 4 5 6 7 8 9 10 // [&apos;1&apos;,&apos;2&apos;,&apos;3&apos;] &#x5B57;&#x4E32;&#x900F;&#x904E;parseInt &#x8F49;&#x6578;&#x5B57; var arr = [ &apos;1&apos; , &apos;2&apos; , &apos;3&apos; ].map( parseInt ); console .log(arr) // [1, NaN, NaN] var arr = [ &apos;1&apos; , &apos;2&apos; , &apos;3&apos; ].map( function ( item, i ) { console .log(item, i) // parseInt(&apos;1&apos;, 0); parseInt(&apos;2&apos;, 1); parseInt(&apos;3&apos;, 2); // parseInt(&apos;2&apos;, 1) &#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x7684;1 &#x8868;&#x6578;&#x5B57;&#x5230;1 &#x9032;&#x5230;&#x4E0B;&#x4E00;&#x4F4D; &#x6240;&#x4EE5;2&#x4E0D;&#x6703;&#x5B58;&#x5728;NaN // parseInt(&apos;11&apos;, 2) &#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x7684;2 11&#x8868;&#x793A;2+1=3 return parseInt (item, 10 ) // 1 2 3 parseInt(item, i) }); map() callback &#x56DE;&#x547C;&#x51FD;&#x5F0F; &#x53C3;&#x6578; currentValue index array parseInt() radix &#x80FD;&#x4EE3;&#x8868;&#x8A72;&#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x7684;&#x6578;&#x5B57; &#x6CE8;&#x610F;&#xFF0C;&#x901A;&#x5E38;&#x9810;&#x8A2D;&#x503C;&#x4E0D;&#x662F; 10 &#x9032;&#x4F4D; References https://wcc723.github.io/javascript/2019/03/18/JS-THIS/ https://paper.dropbox.com/doc/JSJavaScript-This---AZqD8PDvbl5uk5Mfq_EJlXMkAg-Xw50EZtMFNqG0wUxKeIaz https://wcc723.github.io/javascript/2017/12/21/javascript-es6-arrow-function/"},"scope.html":{"title":"Scope","path":"\\javascript\\scope.html","body":"範圍鏈 當函式本身沒有變數會向外層尋找 1 2 3 4 5 6 7 8 9 10 var value = 1 function fn1 ( )  console .log(value) //沒有變數 向外尋找 指向全域的變數 value=1 //尋找時與執行環境無關 因為js是語法作用域 撰寫時已確定作用域  function fn2 ( )  var value = 2 fn1()  fn2() 變數的作用域在函式內 全域變數 vs 區域變數：內可用外，外不可用內。 不能污染全域變數。 1 2 3 4 5 var value = \"global\" ; var fn = function ( )  console .log(value); // \"global\"  fn(); 1 2 3 4 5 6 7 var value = \"global\" ; var fn = function ( )  console .log(value); // \"global\" value = \"local\" ; console .log(value); // \"local\"  fn(); 1 2 3 4 5 6 var value = \"global\" ; var fn = function ( )  console .log(value); // undefined var value = \"local\" ;  fn(); 1 2 3 4 5 6 7 8 9 var scope = 'global' ; function checkScope ( )  var scope = 'local' ; function fn ( )  return scope;  return fn(); ; console .log( checkScope() ); // \"local\" 1 2 3 4 5 6 7 8 9 var value = 'global' ; var person =  value: 'local' , callSomeone: function ( )  console .log(value) ,  person.callSomeone() //\"global\" 1 2 3 4 5 6 var foo = \"global\" ; ( function ( )  var bar = \"Local\" console .log(foo+bar); //\"globalLocal\" )(); console .log(foo+bar); // \"error\" ReferenceError: bar is not defined 1 2 3 4 5 ( function ( )  var a = b = 1 ; )(); console .log(b); // 1 b沒有宣告 為全域 ‘use strict’ 1 2 3 4 5 ( function ( )  'use strict' ; var a = b = 1 ; )(); console .log(b); // \"error\" \"ReferenceError: b is not defined 注意: 只有將 &#39;use strict&#39; 放在函式開頭才會有作用。 References https://paper.dropbox.com/doc/JS--AaILvqN7Gcen3zEExnLuHUzmAg-K98zBcemd1Ig9DZYYNruL https://wcc723.github.io/javascript/2017/12/15/javascript-use-strict/"},"url.html":{"title":"URL","path":"\\javascript\\url.html","body":"取得網址的property window.location.href 取得目前造訪網頁的網址 window.location.protocol 取得目前造訪網頁的通訊協定(protocol) window.location.host 取得目前造訪網頁的主機名稱(hostname), 包含port window.location.hostname 取得目前造訪網頁的主機名稱(hostname) window.location.pathname 取得目前造訪網頁的路徑(path) window.location.hash 取得目前造訪網頁茅點(#)(hashtag) window.location.port 取得目前造訪網頁的port window.location.search 取得目前造訪網頁查詢參數(?) sample location.href = https://${window.location.host}"},"variable.html":{"title":"Variable","path":"\\javascript\\variable.html","body":"1 2 3 4 5 6 7 8 9 10 11 var name = 'Jacob' ; console .log( window .name); //\"Jacob\" mom = 'Jacob' ; console .log( window .name); //\"Jacob\" ( function ( )  name = 'Jacob' )(); console .log( window .name); //\"Jacob\" 宣告的變數不能被刪除 屬性可以被刪除 1 2 3 4 5 6 7 8 9 10 11 var name1 = \"Jacob1\" ; name2 = \"Jacob2\" ; ( function ( )  name3 = \"Jacob3\" ; )(); delete name1; delete name2; delete name3; console .log( window .name1); //\"Jacob1\" console .log( window .name2); // undefined console .log( window .name3); // undefined 變數的作用域在函式內 1 2 3 4 5 6 7 8 9 10 11 var value1 = \"global\" ; var class1 =  value2: \"local\" , function1 : function ( )  var value3 = \"function\" ;   console .log(value1); //\"global\" console .log(class1.value2); //\"local\" console .log(class1.value3); //undefined 1 2 3 4 5 6 7 8 9 10 11 12 var value = 1 ; function foo ( )  console .log(value); // 1  function bar ( )  var value = 2 ; foo();  bar(); Hoisting 函式會自動提升 1 2 3 4 callSomeone( 'Jacob' ); // \"打給 Jacob\" function callSomeone ( name )  console .log( '打給 ' + name)  變數會自動被提升 1 console .log(myname); // \"error\" ReferenceError: myname is not defined 1 2 console .log(myname); // undefined var myname = 'jacob' ; 1 2 3 4 5 6 7 8 9 10 fn() function fn ( params )  console .log(a) // undefined if (a)  a = 2 ;  console .log(a) // undefined  var a = 1 ; console .log(a) // 1 1 2 3 4 5 6 7 8 9 10 fn() function fn ( params )  console .log(a) // undefined if (! a)  a = 2 ;  console .log(a) // 2  var a = 1 ; console .log(a) // 1 1 2 3 4 5 fn(); function fn ( )  console .log(a); // undefined  var a = 1 ; 1 2 3 4 5 6 7 8 9 function foo ( )  console .log( '1' );  foo(); // 第一次執行 \"2\" function foo ( )  console .log( '2' );  foo(); // 第二次執行 \"2\" 動態型別 1 2 3 4 5 6 var a = '1' ; console .log( typeof a) // \"string\" a = +a; console .log( typeof a) // \"number\" a = a + '' ; console .log( typeof a) // \"string\" 1 console .log( 100 === '10' * 10 ) // true '10' * 10 = number https://paper.dropbox.com/doc/JavaScript--AaHkVSbD5F40g8SUfOv1i9ehAg-K98zBcemd1Ig9DZYYNruL"},"variable.html#變數的作用域在函式內":{"title":"&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x5728;&#x51FD;&#x5F0F;&#x5167;","path":"\\javascript\\variable.html#變數的作用域在函式內","body":"1 2 3 4 5 6 7 8 9 10 11 var value1 = global ; var class1 = { value2: local , function1 : function ( ) { var value3 = function ; } } console .log(value1); //global console .log(class1.value2); //local console .log(class1.value3); //undefined 1 2 3 4 5 6 7 8 9 10 11 12 var value = 1 ; function foo ( ) { console .log(value); // 1 } function bar ( ) { var value = 2 ; foo(); } bar();"},"variable.html#Hoisting":{"title":"Hoisting","path":"\\javascript\\variable.html#Hoisting","body":"&#x51FD;&#x5F0F;&#x6703;&#x81EA;&#x52D5;&#x63D0;&#x5347; 1 2 3 4 callSomeone( &apos;Jacob&apos; ); // &#x6253;&#x7D66; Jacob function callSomeone ( name ) { console .log( &apos;&#x6253;&#x7D66; &apos; + name) } &#x8B8A;&#x6578;&#x6703;&#x81EA;&#x52D5;&#x88AB;&#x63D0;&#x5347; 1 console .log(myname); // error ReferenceError: myname is not defined 1 2 console .log(myname); // undefined var myname = &apos;jacob&apos; ; 1 2 3 4 5 6 7 8 9 10 fn() function fn ( params ) { console .log(a) // undefined if (a) { a = 2 ; } console .log(a) // undefined } var a = 1 ; console .log(a) // 1 1 2 3 4 5 6 7 8 9 10 fn() function fn ( params ) { console .log(a) // undefined if (! a) { a = 2 ; } console .log(a) // 2 } var a = 1 ; console .log(a) // 1 1 2 3 4 5 fn(); function fn ( ) { console .log(a); // undefined } var a = 1 ; 1 2 3 4 5 6 7 8 9 function foo ( ) { console .log( &apos;1&apos; ); } foo(); // &#x7B2C;&#x4E00;&#x6B21;&#x57F7;&#x884C; 2 function foo ( ) { console .log( &apos;2&apos; ); } foo(); // &#x7B2C;&#x4E8C;&#x6B21;&#x57F7;&#x884C; 2"},"variable.html#動態型別":{"title":"&#x52D5;&#x614B;&#x578B;&#x5225;","path":"\\javascript\\variable.html#動態型別","body":"1 2 3 4 5 6 var a = &apos;1&apos; ; console .log( typeof a) // string a = +a; console .log( typeof a) // number a = a + &apos;&apos; ; console .log( typeof a) // string 1 console .log( 100 === &apos;10&apos; * 10 ) // true &apos;10&apos; * 10 = number https://paper.dropbox.com/doc/JavaScript--AaHkVSbD5F40g8SUfOv1i9ehAg-K98zBcemd1Ig9DZYYNruL"},"F2E/GraphQL.html":{"title":"GraphQL","path":"\\javascript\\F2E\\GraphQL.html","body":"GraphQL 是一個用於 API 的查詢語言，是一個使用基於類型系統來執行查詢的服務端運行時（類型系統由你的數據定義）。GraphQL 並沒有和任何特定數據庫或者存儲引擎綁定，而是依靠你現有的代碼和數據支撐。 使用一個 API 系統就像在百貨公司的地下美食廣場買晚餐， 傳統的 RESTful API 會要求你要一家一家 (很多 route) 去點餐，耗時又費力。 GraphQL 的體驗就如同使用APP一樣，百貨公司的餐飲店家們開發出一款點餐APP整合各家的點餐介面，消費者只要把想點的各家食物放進菜單，一鍵送出後就只要等待所有餐點送來桌上，省時又不費力！此外通過 APP 還可以更容易取得額外資訊如餐廳的聯絡方式 有了 GraphQL ，你可以把你的商業模型 (business model) 像圖形 (graph) 一樣串連起來 不同或相同type 的資料可以串接再一起，使得 GraphQL 只要一筆 query 就能一次拿全資料且資料格式非常有彈性！ 反觀 RESTful API 同樣的資料需要多筆 request 才能拿到且格式難以調整。 優點 缺點 資料只拿剛好且彈性十足 過於自由、規範少 程式即文檔 學習成本 前端控制權提升 相關社群仍在開發中 (Apollo) 強型別 Server Side Caching 實作困難 Server Side Caching 實作困難 RESTful API 的 endpoint 固定且資料需求單純，然而 GraphQL 難以保證每次 request 的模樣，因此較難實作 Caching References https://graphql.cn/learn/ https://ithelp.ithome.com.tw/articles/10200678"},"F2E/GraphQL.html#References":{"title":"References","path":"\\javascript\\F2E\\GraphQL.html#References","body":"https://graphql.cn/learn/ https://ithelp.ithome.com.tw/articles/10200678"},"F2E/header.html":{"title":"Header","path":"\\javascript\\F2E\\header.html","body":"HTTP Referer 教程 Referer 提供訪問來源的信息。 引薦人（referrer） ，誰引薦了你？ HTTP 協議在請求（request）的頭信息裡面，設計了一個Referer字段，給出 “引薦網頁” 的 URL。 字段是可選的。 主要是以下三種場景，會發送Referer字段。 （1）用戶點擊網頁上的鏈接。 （2）用戶發送表單。 （3）網頁加載靜態資源，比如加載圖片、腳本、樣式。 ###　Referer 的作用 涉及隱私，很多時候不適合發送 Referer 字段 不適合暴露 URL。一是功能URL，即有的URL不要登錄，可以訪問，就能直接完成 密碼重置、郵件退訂 等功能。 還有一種特殊情況，需要定製Referer字段。比如 社交網站 上，用戶在對話中提到某個網址。這時，不希望暴露用戶所在的原始網址，但是可以暴露社交網站的域名，讓對方知道，是我貢獻了你的流量。 nginx 真實IP Remote-Addr X-Forwarded-For X-Real-IP X-Forwarded-For（XFF） 是用來辨識通過HTTP代理或負載均衡方式連接到Web伺服器的用戶端最原始的IP位址的HTTP請求頭欄位。"},"F2E/token.html":{"title":"Token","path":"\\javascript\\F2E\\token.html","body":"JSON Web Token 入門教程 JSON Web Token （縮寫 JWT ）是目前最流行的跨域認證解決方案 A 網站和 B 網站是同一家公司的關聯服務。現在要求，用戶只要在其中一個網站登錄，再訪問另一個網站就會自動登錄，請問怎麼實現？ 一種方案是服務器索性不保存 session 數據了，所有數據都保存在客戶端，每次請求都發回服務器。 JWT 就是這種方案的一個代表。 provisional headers are shown 解决provisional headers are shown的过程 出現在 載入緩存資源,請求沒有被發送, 而如果上一個資源加載失敗,可能導致從緩存加載的資源失敗 provisional headers are shown 知多少"},"F2E/token.html#provisional-headers-are-shown":{"title":"provisional headers are shown","path":"\\javascript\\F2E\\token.html#provisional-headers-are-shown","body":"&#x89E3;&#x51B3;provisional headers are shown&#x7684;&#x8FC7;&#x7A0B; &#x51FA;&#x73FE;&#x5728; &#x8F09;&#x5165;&#x7DE9;&#x5B58;&#x8CC7;&#x6E90;,&#x8ACB;&#x6C42;&#x6C92;&#x6709;&#x88AB;&#x767C;&#x9001;, &#x800C;&#x5982;&#x679C;&#x4E0A;&#x4E00;&#x500B;&#x8CC7;&#x6E90;&#x52A0;&#x8F09;&#x5931;&#x6557;,&#x53EF;&#x80FD;&#x5C0E;&#x81F4;&#x5F9E;&#x7DE9;&#x5B58;&#x52A0;&#x8F09;&#x7684;&#x8CC7;&#x6E90;&#x5931;&#x6557; provisional headers are shown &#x77E5;&#x591A;&#x5C11;"},"F2E/cookie.html":{"title":"Cookie","path":"\\javascript\\F2E\\cookie.html","body":"因為HTTP 本身是 無狀態(Stateless) 的協議。 無論是客戶端還是服務器端，每一次的請求都是獨立性質，而且沒有必要紀錄彼此過去的互動行為，自然而然他沒辦法記憶你每次請求的內容。 舉凡像是登入來說，過去我們總是必須藉著不斷又不斷的登打帳號密碼，來完成網站上身分驗證的這件事情，起因當然是因為HTTP的無狀態(stateless)通訊協議造成的，而 Cookie 就是用來繞開HTTP的無狀態性的「額外手段」之一，讓伺服器可以設定或讀取Cookies中所包含資訊，藉此來維護我們在使用服務時，可以在背景完成向伺服器發送請求，接著伺服器就匯回傳包含登入憑據（使用者名稱加密碼的某種加密形式）的Cookie文檔，到使用者的硬碟(或記憶體上)，在之後登入時，只要Cookie尚未到期，瀏覽器會傳送該Cookie給伺服器作驗證憑據，來減少重複登入的輸入行為。 什麼是 Cookie？ Cookie 是您訪問過的網站創建的文件，用於存儲瀏覽信息，例如您的網站偏好設置或個人資料信息。 共有兩種類型的 Cookie： 第一方 Cookie 是由地址欄中列出的網站域設置的 Cookie， 而第三方 Cookie 來自在網頁上嵌入廣告或圖片等項的其他域來源。 Cookie可以用來提升用戶體驗，比如網站可以使用Cookie來記錄用戶的登錄狀態，用戶只要登錄一次就可以不用登錄了，購物網站通過Cookie來保存購物車中的商品等。同時很多的網站分析都是依靠Cookie來完成的。 第一方Cookie和第三方Cookie區別 第一方 Cookie 是 設定在您目前造訪之網域中 的 Cookie。例如，如果您在 www.adobe.com/tw 中，使用第一方 Cookie 時，Cookie 會設定在 adobe.com 網域中。 第三方 Cookie 是 設定在目前造訪網域以外的 其他網域中的 Cookie。例如，如果您造訪 www.adobe.com 且 Cookie 設定在 omtrdc.com 網域中，這便是第三方 Cookie。 Cookie是必須的，離開Cookie我們什麼也分析不了。 第一方Cookie接受率高，更準確，沒有特殊需要就用他。 第三方Cookie可以跨域跟蹤，特別需求可以應用。 第三方Cookie 這種 Cookie 是透過如社群網路等第三方程式安裝，主要目的為在本公司網站整合社群媒體內容，如社群插件 (Social Plugins)。 比如，訪問 www.a.com這個網站，這個網站設置了一個Cookie，這個Cookie也只能被 www.a.com 這個域下的網頁讀取，這就是第一方Cookie。 如果還是訪問 www.a.com這個網站，網頁裡有用到 www.b.com網站的一張圖片，瀏覽器在 www.b.com請求圖片的時候，www.b.com 設置了一個Cookie，那這個Cookie只能被 www.b.com這個域訪問，反而不能被 www.a.com 這個域訪問， 因為對我們來說，我們實際是在訪問 www.a.com這個網站被設置了一個www.b.com這個域下的Cookie，所以叫第三方Cookie。 第三方Cookie的優勢和應用 比如，當我們有多個域名的網站需要跟蹤，我們希望瞭解到用戶點擊某個廣告到達域名A下的網頁，然後可能瀏覽了不論那個域名下的頁面，最後在域名B下的網頁完成註冊的情況。廣告可以在域名A下的網頁被跟蹤到，而註冊可以在域名B下的網頁跟蹤到。 如果我們使用第一方Cookie，會為域名A建立一個Cookie，為域名B再建立一個Cookie，他們可以關聯各自域名下網頁上的行為，但是無法關聯起來。 而使用第三方Cookie，那麼無論多少個域，都只有一個Cookie，一個屬於第三方域的Cookie，網站下所有域都能共享這個Cookie，那麼所有的行為都能被關聯起來分析。 缺點 網頁第三方 Cookies（Third-Party Cookies）會洩漏網頁瀏覽的隱私 Session又是什麼呢? Cookie就像 取餐的號碼牌，認號不認人 ，如果今天遺失或是被別人幹走，那你的餐點就會被其他人給領走，更別提關閉瀏覽器之後Cookie就會有被清除的風險了。 Session有點類似會話的概念，Session機制是一種服務器端的機制。 是一種持久網路協定，讓Client端與Server端可以作一種對話，並將兩端建立關連，保持伺服器與Client可以持續的與Server作交談。 它表示了「面向、連接」和/或「保持狀態」這樣兩個異議 「面向、連接」表是客戶端和Server端通信前要先建立一個通信的渠道 「保持狀態」，則是指通信交談的其中一方，可以所有的消息作關聯，就像是巷口的早餐店阿姨，還記得你最愛吃的火腿蛋不喜歡有美乃滋。 所以我們可以想像 Cookie是一張領餐的號碼牌，而Session可以是一張數位會員卡 ，不僅可以記錄你的點餐號碼，還可以記憶你的餐點細節，消費記錄和點餐喜好…等。而這就解決號碼牌遺失領不到餐的問題，但是他不是記憶你帥氣得穿搭或長像，而是靠著所謂的Session ID。 當我們需要為某個客戶端的請求創建一個Session的時候，服務器首先檢查這個客戶端的請求裡是否有包含了Session標識，就是剛剛提到的 Session id，當然如果已包含一個Session id，就表示這個客戶是老司機啦，當然伺服器端以前就為了這個客戶端創建過Session，服務器就按照Session id，把這個Session找出來使用。但如果客戶端請求不包含Session id，，則表示他是新臉孔，那伺服器端就為此客戶端創建一個Session，並生成一個Session id，並在本次響應中返回給客戶端保存。 但是在最初的 Session 設計中，我們都會把資料記錄在 Server端 上，如 Database、記憶體或是利用檔案交換的方式，來把你的點餐資訊作儲存，而當你去領飲料時，店員會輸入你的號碼，並在叫出你點的內容。但如果是大型網站上，如果有負載平衡的機制，你怎麼能確定你當初輸入和最後取餐的Server是同一台呢，而這樣作當你資料量大時，也會有效能影響的問題，這時候Cookie就出場了。 保存這個Session id的方式也可以採用Cookie ，但似乎很多人都有一種彷彿瀏覽器關掉Session也會消失的錯覺，但本質上並非如此，就像會員卡，除非你主動提出銷卡，否則店家不會刪除顧客資料，這件事情對Session來說也如出一轍，除非通知Server刪除Session，否則Server端會一直保留來保持會話暢通，但瀏覽器從來不會主動在關閉前通知服務器要關閉 大部分Session機制都使用會話Cookie來保存Session ID 而關閉瀏覽器後因為Cookie消失造成 Session id也消失了，但只要把原來的Session ID再發送給Server，那還是能夠找到原來的Session 。 但大家都會擔心，Cookie和Session得結合，到底還會不會有被竄改的問題，這個時候就要靠”簽章”來驗證資料的真實性，在我使用Cookie請求時，可以加一個簽章，也就是在我傳輸的資料後面加上一個對應的秘密字串，當伺服器回傳時，可以回應該字串，若是其他使用者偷偷串改的話，由於串改的資料和我的秘密字串無法相符，當然也無法作偽造，這就是所謂的 SignedCookie 但記住Session就像是你的會員卡號，不見也表示仍然有資料被竊取的風險。 如果單就實現功能，Cookie與Session彼此之間是可以互換的(指的是你可以把資料存放在Session或是Cookie，並不是指Session可以被放在Client端當Cookie使用)。但是Cookie在最單純的情況裡，是有安全性的問題(資料在Client端)。所以考量到這點，大部分都會選擇Session。但是正如Cookie是一個外加的功能，Session也不屬於HTTP協定。只要是外加功能，就必須額外寫程式實現。 不過現在做網站我們都流行使用框架，Session的機制都被框架所實現了，以Ruby on Rails來說， 預設的Session實現方式是由Cookie來實作的(利用加密與設定過期時間)。 每個框架實現的邏輯都可能不一樣，所以還是要去看官方的說明會比較清楚。 但從這裡可得知，Session並不是一個很明確實體的機制，算是一個概念，只要符合概念所實作出來的功能都可以被叫做Session。 references 第一方Cookie和第三方Cookie區別 判斷您是使用第一方還是第三方 Cookie 五分鐘概述網路界的記憶大神-Session"},"F2E/cookie.html#什麼是-Cookie？":{"title":"&#x4EC0;&#x9EBC;&#x662F; Cookie&#xFF1F;","path":"\\javascript\\F2E\\cookie.html#什麼是-Cookie？","body":"Cookie &#x662F;&#x60A8;&#x8A2A;&#x554F;&#x904E;&#x7684;&#x7DB2;&#x7AD9;&#x5275;&#x5EFA;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x7528;&#x65BC;&#x5B58;&#x5132;&#x700F;&#x89BD;&#x4FE1;&#x606F;&#xFF0C;&#x4F8B;&#x5982;&#x60A8;&#x7684;&#x7DB2;&#x7AD9;&#x504F;&#x597D;&#x8A2D;&#x7F6E;&#x6216;&#x500B;&#x4EBA;&#x8CC7;&#x6599;&#x4FE1;&#x606F;&#x3002; &#x5171;&#x6709;&#x5169;&#x7A2E;&#x985E;&#x578B;&#x7684; Cookie&#xFF1A; &#x7B2C;&#x4E00;&#x65B9; Cookie &#x662F;&#x7531;&#x5730;&#x5740;&#x6B04;&#x4E2D;&#x5217;&#x51FA;&#x7684;&#x7DB2;&#x7AD9;&#x57DF;&#x8A2D;&#x7F6E;&#x7684; Cookie&#xFF0C; &#x800C;&#x7B2C;&#x4E09;&#x65B9; Cookie &#x4F86;&#x81EA;&#x5728;&#x7DB2;&#x9801;&#x4E0A;&#x5D4C;&#x5165;&#x5EE3;&#x544A;&#x6216;&#x5716;&#x7247;&#x7B49;&#x9805;&#x7684;&#x5176;&#x4ED6;&#x57DF;&#x4F86;&#x6E90;&#x3002; Cookie&#x53EF;&#x4EE5;&#x7528;&#x4F86;&#x63D0;&#x5347;&#x7528;&#x6236;&#x9AD4;&#x9A57;&#xFF0C;&#x6BD4;&#x5982;&#x7DB2;&#x7AD9;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;Cookie&#x4F86;&#x8A18;&#x9304;&#x7528;&#x6236;&#x7684;&#x767B;&#x9304;&#x72C0;&#x614B;&#xFF0C;&#x7528;&#x6236;&#x53EA;&#x8981;&#x767B;&#x9304;&#x4E00;&#x6B21;&#x5C31;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;&#x767B;&#x9304;&#x4E86;&#xFF0C;&#x8CFC;&#x7269;&#x7DB2;&#x7AD9;&#x901A;&#x904E;Cookie&#x4F86;&#x4FDD;&#x5B58;&#x8CFC;&#x7269;&#x8ECA;&#x4E2D;&#x7684;&#x5546;&#x54C1;&#x7B49;&#x3002;&#x540C;&#x6642;&#x5F88;&#x591A;&#x7684;&#x7DB2;&#x7AD9;&#x5206;&#x6790;&#x90FD;&#x662F;&#x4F9D;&#x9760;Cookie&#x4F86;&#x5B8C;&#x6210;&#x7684;&#x3002;"},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{"title":"&#x7B2C;&#x4E00;&#x65B9;Cookie&#x548C;&#x7B2C;&#x4E09;&#x65B9;Cookie&#x5340;&#x5225;","path":"\\javascript\\F2E\\cookie.html#第一方Cookie和第三方Cookie區別","body":"&#x7B2C;&#x4E00;&#x65B9; Cookie &#x662F; &#x8A2D;&#x5B9A;&#x5728;&#x60A8;&#x76EE;&#x524D;&#x9020;&#x8A2A;&#x4E4B;&#x7DB2;&#x57DF;&#x4E2D; &#x7684; Cookie&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x60A8;&#x5728; www.adobe.com/tw &#x4E2D;&#xFF0C;&#x4F7F;&#x7528;&#x7B2C;&#x4E00;&#x65B9; Cookie &#x6642;&#xFF0C;Cookie &#x6703;&#x8A2D;&#x5B9A;&#x5728; adobe.com &#x7DB2;&#x57DF;&#x4E2D;&#x3002; &#x7B2C;&#x4E09;&#x65B9; Cookie &#x662F; &#x8A2D;&#x5B9A;&#x5728;&#x76EE;&#x524D;&#x9020;&#x8A2A;&#x7DB2;&#x57DF;&#x4EE5;&#x5916;&#x7684; &#x5176;&#x4ED6;&#x7DB2;&#x57DF;&#x4E2D;&#x7684; Cookie&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x60A8;&#x9020;&#x8A2A; www.adobe.com &#x4E14; Cookie &#x8A2D;&#x5B9A;&#x5728; omtrdc.com &#x7DB2;&#x57DF;&#x4E2D;&#xFF0C;&#x9019;&#x4FBF;&#x662F;&#x7B2C;&#x4E09;&#x65B9; Cookie&#x3002; Cookie&#x662F;&#x5FC5;&#x9808;&#x7684;&#xFF0C;&#x96E2;&#x958B;Cookie&#x6211;&#x5011;&#x4EC0;&#x9EBC;&#x4E5F;&#x5206;&#x6790;&#x4E0D;&#x4E86;&#x3002; &#x7B2C;&#x4E00;&#x65B9;Cookie&#x63A5;&#x53D7;&#x7387;&#x9AD8;&#xFF0C;&#x66F4;&#x6E96;&#x78BA;&#xFF0C;&#x6C92;&#x6709;&#x7279;&#x6B8A;&#x9700;&#x8981;&#x5C31;&#x7528;&#x4ED6;&#x3002; &#x7B2C;&#x4E09;&#x65B9;Cookie&#x53EF;&#x4EE5;&#x8DE8;&#x57DF;&#x8DDF;&#x8E64;&#xFF0C;&#x7279;&#x5225;&#x9700;&#x6C42;&#x53EF;&#x4EE5;&#x61C9;&#x7528;&#x3002; &#x7B2C;&#x4E09;&#x65B9;Cookie &#x9019;&#x7A2E; Cookie &#x662F;&#x900F;&#x904E;&#x5982;&#x793E;&#x7FA4;&#x7DB2;&#x8DEF;&#x7B49;&#x7B2C;&#x4E09;&#x65B9;&#x7A0B;&#x5F0F;&#x5B89;&#x88DD;&#xFF0C;&#x4E3B;&#x8981;&#x76EE;&#x7684;&#x70BA;&#x5728;&#x672C;&#x516C;&#x53F8;&#x7DB2;&#x7AD9;&#x6574;&#x5408;&#x793E;&#x7FA4;&#x5A92;&#x9AD4;&#x5167;&#x5BB9;&#xFF0C;&#x5982;&#x793E;&#x7FA4;&#x63D2;&#x4EF6; (Social Plugins)&#x3002; &#x6BD4;&#x5982;&#xFF0C;&#x8A2A;&#x554F; www.a.com&#x9019;&#x500B;&#x7DB2;&#x7AD9;&#xFF0C;&#x9019;&#x500B;&#x7DB2;&#x7AD9;&#x8A2D;&#x7F6E;&#x4E86;&#x4E00;&#x500B;Cookie&#xFF0C;&#x9019;&#x500B;Cookie&#x4E5F;&#x53EA;&#x80FD;&#x88AB; www.a.com &#x9019;&#x500B;&#x57DF;&#x4E0B;&#x7684;&#x7DB2;&#x9801;&#x8B80;&#x53D6;&#xFF0C;&#x9019;&#x5C31;&#x662F;&#x7B2C;&#x4E00;&#x65B9;Cookie&#x3002; &#x5982;&#x679C;&#x9084;&#x662F;&#x8A2A;&#x554F; www.a.com&#x9019;&#x500B;&#x7DB2;&#x7AD9;&#xFF0C;&#x7DB2;&#x9801;&#x88E1;&#x6709;&#x7528;&#x5230; www.b.com&#x7DB2;&#x7AD9;&#x7684;&#x4E00;&#x5F35;&#x5716;&#x7247;&#xFF0C;&#x700F;&#x89BD;&#x5668;&#x5728; www.b.com&#x8ACB;&#x6C42;&#x5716;&#x7247;&#x7684;&#x6642;&#x5019;&#xFF0C;www.b.com &#x8A2D;&#x7F6E;&#x4E86;&#x4E00;&#x500B;Cookie&#xFF0C;&#x90A3;&#x9019;&#x500B;Cookie&#x53EA;&#x80FD;&#x88AB; www.b.com&#x9019;&#x500B;&#x57DF;&#x8A2A;&#x554F;&#xFF0C;&#x53CD;&#x800C;&#x4E0D;&#x80FD;&#x88AB; www.a.com &#x9019;&#x500B;&#x57DF;&#x8A2A;&#x554F;&#xFF0C; &#x56E0;&#x70BA;&#x5C0D;&#x6211;&#x5011;&#x4F86;&#x8AAA;&#xFF0C;&#x6211;&#x5011;&#x5BE6;&#x969B;&#x662F;&#x5728;&#x8A2A;&#x554F; www.a.com&#x9019;&#x500B;&#x7DB2;&#x7AD9;&#x88AB;&#x8A2D;&#x7F6E;&#x4E86;&#x4E00;&#x500B;www.b.com&#x9019;&#x500B;&#x57DF;&#x4E0B;&#x7684;Cookie&#xFF0C;&#x6240;&#x4EE5;&#x53EB;&#x7B2C;&#x4E09;&#x65B9;Cookie&#x3002; &#x7B2C;&#x4E09;&#x65B9;Cookie&#x7684;&#x512A;&#x52E2;&#x548C;&#x61C9;&#x7528; &#x6BD4;&#x5982;&#xFF0C;&#x7576;&#x6211;&#x5011;&#x6709;&#x591A;&#x500B;&#x57DF;&#x540D;&#x7684;&#x7DB2;&#x7AD9;&#x9700;&#x8981;&#x8DDF;&#x8E64;&#xFF0C;&#x6211;&#x5011;&#x5E0C;&#x671B;&#x77AD;&#x89E3;&#x5230;&#x7528;&#x6236;&#x9EDE;&#x64CA;&#x67D0;&#x500B;&#x5EE3;&#x544A;&#x5230;&#x9054;&#x57DF;&#x540D;A&#x4E0B;&#x7684;&#x7DB2;&#x9801;&#xFF0C;&#x7136;&#x5F8C;&#x53EF;&#x80FD;&#x700F;&#x89BD;&#x4E86;&#x4E0D;&#x8AD6;&#x90A3;&#x500B;&#x57DF;&#x540D;&#x4E0B;&#x7684;&#x9801;&#x9762;&#xFF0C;&#x6700;&#x5F8C;&#x5728;&#x57DF;&#x540D;B&#x4E0B;&#x7684;&#x7DB2;&#x9801;&#x5B8C;&#x6210;&#x8A3B;&#x518A;&#x7684;&#x60C5;&#x6CC1;&#x3002;&#x5EE3;&#x544A;&#x53EF;&#x4EE5;&#x5728;&#x57DF;&#x540D;A&#x4E0B;&#x7684;&#x7DB2;&#x9801;&#x88AB;&#x8DDF;&#x8E64;&#x5230;&#xFF0C;&#x800C;&#x8A3B;&#x518A;&#x53EF;&#x4EE5;&#x5728;&#x57DF;&#x540D;B&#x4E0B;&#x7684;&#x7DB2;&#x9801;&#x8DDF;&#x8E64;&#x5230;&#x3002; &#x5982;&#x679C;&#x6211;&#x5011;&#x4F7F;&#x7528;&#x7B2C;&#x4E00;&#x65B9;Cookie&#xFF0C;&#x6703;&#x70BA;&#x57DF;&#x540D;A&#x5EFA;&#x7ACB;&#x4E00;&#x500B;Cookie&#xFF0C;&#x70BA;&#x57DF;&#x540D;B&#x518D;&#x5EFA;&#x7ACB;&#x4E00;&#x500B;Cookie&#xFF0C;&#x4ED6;&#x5011;&#x53EF;&#x4EE5;&#x95DC;&#x806F;&#x5404;&#x81EA;&#x57DF;&#x540D;&#x4E0B;&#x7DB2;&#x9801;&#x4E0A;&#x7684;&#x884C;&#x70BA;&#xFF0C;&#x4F46;&#x662F;&#x7121;&#x6CD5;&#x95DC;&#x806F;&#x8D77;&#x4F86;&#x3002; &#x800C;&#x4F7F;&#x7528;&#x7B2C;&#x4E09;&#x65B9;Cookie&#xFF0C;&#x90A3;&#x9EBC;&#x7121;&#x8AD6;&#x591A;&#x5C11;&#x500B;&#x57DF;&#xFF0C;&#x90FD;&#x53EA;&#x6709;&#x4E00;&#x500B;Cookie&#xFF0C;&#x4E00;&#x500B;&#x5C6C;&#x65BC;&#x7B2C;&#x4E09;&#x65B9;&#x57DF;&#x7684;Cookie&#xFF0C;&#x7DB2;&#x7AD9;&#x4E0B;&#x6240;&#x6709;&#x57DF;&#x90FD;&#x80FD;&#x5171;&#x4EAB;&#x9019;&#x500B;Cookie&#xFF0C;&#x90A3;&#x9EBC;&#x6240;&#x6709;&#x7684;&#x884C;&#x70BA;&#x90FD;&#x80FD;&#x88AB;&#x95DC;&#x806F;&#x8D77;&#x4F86;&#x5206;&#x6790;&#x3002; &#x7F3A;&#x9EDE; &#x7DB2;&#x9801;&#x7B2C;&#x4E09;&#x65B9; Cookies&#xFF08;Third-Party Cookies&#xFF09;&#x6703;&#x6D29;&#x6F0F;&#x7DB2;&#x9801;&#x700F;&#x89BD;&#x7684;&#x96B1;&#x79C1; Session&#x53C8;&#x662F;&#x4EC0;&#x9EBC;&#x5462;? Cookie&#x5C31;&#x50CF; &#x53D6;&#x9910;&#x7684;&#x865F;&#x78BC;&#x724C;&#xFF0C;&#x8A8D;&#x865F;&#x4E0D;&#x8A8D;&#x4EBA; &#xFF0C;&#x5982;&#x679C;&#x4ECA;&#x5929;&#x907A;&#x5931;&#x6216;&#x662F;&#x88AB;&#x5225;&#x4EBA;&#x5E79;&#x8D70;&#xFF0C;&#x90A3;&#x4F60;&#x7684;&#x9910;&#x9EDE;&#x5C31;&#x6703;&#x88AB;&#x5176;&#x4ED6;&#x4EBA;&#x7D66;&#x9818;&#x8D70;&#xFF0C;&#x66F4;&#x5225;&#x63D0;&#x95DC;&#x9589;&#x700F;&#x89BD;&#x5668;&#x4E4B;&#x5F8C;Cookie&#x5C31;&#x6703;&#x6709;&#x88AB;&#x6E05;&#x9664;&#x7684;&#x98A8;&#x96AA;&#x4E86;&#x3002; Session&#x6709;&#x9EDE;&#x985E;&#x4F3C;&#x6703;&#x8A71;&#x7684;&#x6982;&#x5FF5;&#xFF0C;Session&#x6A5F;&#x5236;&#x662F;&#x4E00;&#x7A2E;&#x670D;&#x52D9;&#x5668;&#x7AEF;&#x7684;&#x6A5F;&#x5236;&#x3002; &#x662F;&#x4E00;&#x7A2E;&#x6301;&#x4E45;&#x7DB2;&#x8DEF;&#x5354;&#x5B9A;&#xFF0C;&#x8B93;Client&#x7AEF;&#x8207;Server&#x7AEF;&#x53EF;&#x4EE5;&#x4F5C;&#x4E00;&#x7A2E;&#x5C0D;&#x8A71;&#xFF0C;&#x4E26;&#x5C07;&#x5169;&#x7AEF;&#x5EFA;&#x7ACB;&#x95DC;&#x9023;&#xFF0C;&#x4FDD;&#x6301;&#x4F3A;&#x670D;&#x5668;&#x8207;Client&#x53EF;&#x4EE5;&#x6301;&#x7E8C;&#x7684;&#x8207;Server&#x4F5C;&#x4EA4;&#x8AC7;&#x3002; &#x5B83;&#x8868;&#x793A;&#x4E86;&#x300C;&#x9762;&#x5411;&#x3001;&#x9023;&#x63A5;&#x300D;&#x548C;/&#x6216;&#x300C;&#x4FDD;&#x6301;&#x72C0;&#x614B;&#x300D;&#x9019;&#x6A23;&#x5169;&#x500B;&#x7570;&#x8B70; &#x300C;&#x9762;&#x5411;&#x3001;&#x9023;&#x63A5;&#x300D;&#x8868;&#x662F;&#x5BA2;&#x6236;&#x7AEF;&#x548C;Server&#x7AEF;&#x901A;&#x4FE1;&#x524D;&#x8981;&#x5148;&#x5EFA;&#x7ACB;&#x4E00;&#x500B;&#x901A;&#x4FE1;&#x7684;&#x6E20;&#x9053; &#x300C;&#x4FDD;&#x6301;&#x72C0;&#x614B;&#x300D;&#xFF0C;&#x5247;&#x662F;&#x6307;&#x901A;&#x4FE1;&#x4EA4;&#x8AC7;&#x7684;&#x5176;&#x4E2D;&#x4E00;&#x65B9;&#xFF0C;&#x53EF;&#x4EE5;&#x6240;&#x6709;&#x7684;&#x6D88;&#x606F;&#x4F5C;&#x95DC;&#x806F;&#xFF0C;&#x5C31;&#x50CF;&#x662F;&#x5DF7;&#x53E3;&#x7684;&#x65E9;&#x9910;&#x5E97;&#x963F;&#x59E8;&#xFF0C;&#x9084;&#x8A18;&#x5F97;&#x4F60;&#x6700;&#x611B;&#x5403;&#x7684;&#x706B;&#x817F;&#x86CB;&#x4E0D;&#x559C;&#x6B61;&#x6709;&#x7F8E;&#x4E43;&#x6ECB;&#x3002; &#x6240;&#x4EE5;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x60F3;&#x50CF; Cookie&#x662F;&#x4E00;&#x5F35;&#x9818;&#x9910;&#x7684;&#x865F;&#x78BC;&#x724C;&#xFF0C;&#x800C;Session&#x53EF;&#x4EE5;&#x662F;&#x4E00;&#x5F35;&#x6578;&#x4F4D;&#x6703;&#x54E1;&#x5361; &#xFF0C;&#x4E0D;&#x50C5;&#x53EF;&#x4EE5;&#x8A18;&#x9304;&#x4F60;&#x7684;&#x9EDE;&#x9910;&#x865F;&#x78BC;&#xFF0C;&#x9084;&#x53EF;&#x4EE5;&#x8A18;&#x61B6;&#x4F60;&#x7684;&#x9910;&#x9EDE;&#x7D30;&#x7BC0;&#xFF0C;&#x6D88;&#x8CBB;&#x8A18;&#x9304;&#x548C;&#x9EDE;&#x9910;&#x559C;&#x597D;&#x2026;&#x7B49;&#x3002;&#x800C;&#x9019;&#x5C31;&#x89E3;&#x6C7A;&#x865F;&#x78BC;&#x724C;&#x907A;&#x5931;&#x9818;&#x4E0D;&#x5230;&#x9910;&#x7684;&#x554F;&#x984C;&#xFF0C;&#x4F46;&#x662F;&#x4ED6;&#x4E0D;&#x662F;&#x8A18;&#x61B6;&#x4F60;&#x5E25;&#x6C23;&#x5F97;&#x7A7F;&#x642D;&#x6216;&#x9577;&#x50CF;&#xFF0C;&#x800C;&#x662F;&#x9760;&#x8457;&#x6240;&#x8B02;&#x7684;Session ID&#x3002; &#x7576;&#x6211;&#x5011;&#x9700;&#x8981;&#x70BA;&#x67D0;&#x500B;&#x5BA2;&#x6236;&#x7AEF;&#x7684;&#x8ACB;&#x6C42;&#x5275;&#x5EFA;&#x4E00;&#x500B;Session&#x7684;&#x6642;&#x5019;&#xFF0C;&#x670D;&#x52D9;&#x5668;&#x9996;&#x5148;&#x6AA2;&#x67E5;&#x9019;&#x500B;&#x5BA2;&#x6236;&#x7AEF;&#x7684;&#x8ACB;&#x6C42;&#x88E1;&#x662F;&#x5426;&#x6709;&#x5305;&#x542B;&#x4E86;Session&#x6A19;&#x8B58;&#xFF0C;&#x5C31;&#x662F;&#x525B;&#x525B;&#x63D0;&#x5230;&#x7684; Session id&#xFF0C;&#x7576;&#x7136;&#x5982;&#x679C;&#x5DF2;&#x5305;&#x542B;&#x4E00;&#x500B;Session id&#xFF0C;&#x5C31;&#x8868;&#x793A;&#x9019;&#x500B;&#x5BA2;&#x6236;&#x662F;&#x8001;&#x53F8;&#x6A5F;&#x5566;&#xFF0C;&#x7576;&#x7136;&#x4F3A;&#x670D;&#x5668;&#x7AEF;&#x4EE5;&#x524D;&#x5C31;&#x70BA;&#x4E86;&#x9019;&#x500B;&#x5BA2;&#x6236;&#x7AEF;&#x5275;&#x5EFA;&#x904E;Session&#xFF0C;&#x670D;&#x52D9;&#x5668;&#x5C31;&#x6309;&#x7167;Session id&#xFF0C;&#x628A;&#x9019;&#x500B;Session&#x627E;&#x51FA;&#x4F86;&#x4F7F;&#x7528;&#x3002;&#x4F46;&#x5982;&#x679C;&#x5BA2;&#x6236;&#x7AEF;&#x8ACB;&#x6C42;&#x4E0D;&#x5305;&#x542B;Session id&#xFF0C;&#xFF0C;&#x5247;&#x8868;&#x793A;&#x4ED6;&#x662F;&#x65B0;&#x81C9;&#x5B54;&#xFF0C;&#x90A3;&#x4F3A;&#x670D;&#x5668;&#x7AEF;&#x5C31;&#x70BA;&#x6B64;&#x5BA2;&#x6236;&#x7AEF;&#x5275;&#x5EFA;&#x4E00;&#x500B;Session&#xFF0C;&#x4E26;&#x751F;&#x6210;&#x4E00;&#x500B;Session id&#xFF0C;&#x4E26;&#x5728;&#x672C;&#x6B21;&#x97FF;&#x61C9;&#x4E2D;&#x8FD4;&#x56DE;&#x7D66;&#x5BA2;&#x6236;&#x7AEF;&#x4FDD;&#x5B58;&#x3002; &#x4F46;&#x662F;&#x5728;&#x6700;&#x521D;&#x7684; Session &#x8A2D;&#x8A08;&#x4E2D;&#xFF0C;&#x6211;&#x5011;&#x90FD;&#x6703;&#x628A;&#x8CC7;&#x6599;&#x8A18;&#x9304;&#x5728; Server&#x7AEF; &#x4E0A;&#xFF0C;&#x5982; Database&#x3001;&#x8A18;&#x61B6;&#x9AD4;&#x6216;&#x662F;&#x5229;&#x7528;&#x6A94;&#x6848;&#x4EA4;&#x63DB;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x4F86;&#x628A;&#x4F60;&#x7684;&#x9EDE;&#x9910;&#x8CC7;&#x8A0A;&#x4F5C;&#x5132;&#x5B58;&#xFF0C;&#x800C;&#x7576;&#x4F60;&#x53BB;&#x9818;&#x98F2;&#x6599;&#x6642;&#xFF0C;&#x5E97;&#x54E1;&#x6703;&#x8F38;&#x5165;&#x4F60;&#x7684;&#x865F;&#x78BC;&#xFF0C;&#x4E26;&#x5728;&#x53EB;&#x51FA;&#x4F60;&#x9EDE;&#x7684;&#x5167;&#x5BB9;&#x3002;&#x4F46;&#x5982;&#x679C;&#x662F;&#x5927;&#x578B;&#x7DB2;&#x7AD9;&#x4E0A;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x8CA0;&#x8F09;&#x5E73;&#x8861;&#x7684;&#x6A5F;&#x5236;&#xFF0C;&#x4F60;&#x600E;&#x9EBC;&#x80FD;&#x78BA;&#x5B9A;&#x4F60;&#x7576;&#x521D;&#x8F38;&#x5165;&#x548C;&#x6700;&#x5F8C;&#x53D6;&#x9910;&#x7684;Server&#x662F;&#x540C;&#x4E00;&#x53F0;&#x5462;&#xFF0C;&#x800C;&#x9019;&#x6A23;&#x4F5C;&#x7576;&#x4F60;&#x8CC7;&#x6599;&#x91CF;&#x5927;&#x6642;&#xFF0C;&#x4E5F;&#x6703;&#x6709;&#x6548;&#x80FD;&#x5F71;&#x97FF;&#x7684;&#x554F;&#x984C;&#xFF0C;&#x9019;&#x6642;&#x5019;Cookie&#x5C31;&#x51FA;&#x5834;&#x4E86;&#x3002; &#x4FDD;&#x5B58;&#x9019;&#x500B;Session id&#x7684;&#x65B9;&#x5F0F;&#x4E5F;&#x53EF;&#x4EE5;&#x63A1;&#x7528;Cookie &#xFF0C;&#x4F46;&#x4F3C;&#x4E4E;&#x5F88;&#x591A;&#x4EBA;&#x90FD;&#x6709;&#x4E00;&#x7A2E;&#x5F77;&#x5F7F;&#x700F;&#x89BD;&#x5668;&#x95DC;&#x6389;Session&#x4E5F;&#x6703;&#x6D88;&#x5931;&#x7684;&#x932F;&#x89BA;&#xFF0C;&#x4F46;&#x672C;&#x8CEA;&#x4E0A;&#x4E26;&#x975E;&#x5982;&#x6B64;&#xFF0C;&#x5C31;&#x50CF;&#x6703;&#x54E1;&#x5361;&#xFF0C;&#x9664;&#x975E;&#x4F60;&#x4E3B;&#x52D5;&#x63D0;&#x51FA;&#x92B7;&#x5361;&#xFF0C;&#x5426;&#x5247;&#x5E97;&#x5BB6;&#x4E0D;&#x6703;&#x522A;&#x9664;&#x9867;&#x5BA2;&#x8CC7;&#x6599;&#xFF0C;&#x9019;&#x4EF6;&#x4E8B;&#x60C5;&#x5C0D;Session&#x4F86;&#x8AAA;&#x4E5F;&#x5982;&#x51FA;&#x4E00;&#x8F4D;&#xFF0C;&#x9664;&#x975E;&#x901A;&#x77E5;Server&#x522A;&#x9664;Session&#xFF0C;&#x5426;&#x5247;Server&#x7AEF;&#x6703;&#x4E00;&#x76F4;&#x4FDD;&#x7559;&#x4F86;&#x4FDD;&#x6301;&#x6703;&#x8A71;&#x66A2;&#x901A;&#xFF0C;&#x4F46;&#x700F;&#x89BD;&#x5668;&#x5F9E;&#x4F86;&#x4E0D;&#x6703;&#x4E3B;&#x52D5;&#x5728;&#x95DC;&#x9589;&#x524D;&#x901A;&#x77E5;&#x670D;&#x52D9;&#x5668;&#x8981;&#x95DC;&#x9589; &#x5927;&#x90E8;&#x5206;Session&#x6A5F;&#x5236;&#x90FD;&#x4F7F;&#x7528;&#x6703;&#x8A71;Cookie&#x4F86;&#x4FDD;&#x5B58;Session ID &#x800C;&#x95DC;&#x9589;&#x700F;&#x89BD;&#x5668;&#x5F8C;&#x56E0;&#x70BA;Cookie&#x6D88;&#x5931;&#x9020;&#x6210; Session id&#x4E5F;&#x6D88;&#x5931;&#x4E86;&#xFF0C;&#x4F46;&#x53EA;&#x8981;&#x628A;&#x539F;&#x4F86;&#x7684;Session ID&#x518D;&#x767C;&#x9001;&#x7D66;Server&#xFF0C;&#x90A3;&#x9084;&#x662F;&#x80FD;&#x5920;&#x627E;&#x5230;&#x539F;&#x4F86;&#x7684;Session &#x3002; &#x4F46;&#x5927;&#x5BB6;&#x90FD;&#x6703;&#x64D4;&#x5FC3;&#xFF0C;Cookie&#x548C;Session&#x5F97;&#x7D50;&#x5408;&#xFF0C;&#x5230;&#x5E95;&#x9084;&#x6703;&#x4E0D;&#x6703;&#x6709;&#x88AB;&#x7AC4;&#x6539;&#x7684;&#x554F;&#x984C;&#xFF0C;&#x9019;&#x500B;&#x6642;&#x5019;&#x5C31;&#x8981;&#x9760;&#x201D;&#x7C3D;&#x7AE0;&#x201D;&#x4F86;&#x9A57;&#x8B49;&#x8CC7;&#x6599;&#x7684;&#x771F;&#x5BE6;&#x6027;&#xFF0C;&#x5728;&#x6211;&#x4F7F;&#x7528;Cookie&#x8ACB;&#x6C42;&#x6642;&#xFF0C;&#x53EF;&#x4EE5;&#x52A0;&#x4E00;&#x500B;&#x7C3D;&#x7AE0;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5728;&#x6211;&#x50B3;&#x8F38;&#x7684;&#x8CC7;&#x6599;&#x5F8C;&#x9762;&#x52A0;&#x4E0A;&#x4E00;&#x500B;&#x5C0D;&#x61C9;&#x7684;&#x79D8;&#x5BC6;&#x5B57;&#x4E32;&#xFF0C;&#x7576;&#x4F3A;&#x670D;&#x5668;&#x56DE;&#x50B3;&#x6642;&#xFF0C;&#x53EF;&#x4EE5;&#x56DE;&#x61C9;&#x8A72;&#x5B57;&#x4E32;&#xFF0C;&#x82E5;&#x662F;&#x5176;&#x4ED6;&#x4F7F;&#x7528;&#x8005;&#x5077;&#x5077;&#x4E32;&#x6539;&#x7684;&#x8A71;&#xFF0C;&#x7531;&#x65BC;&#x4E32;&#x6539;&#x7684;&#x8CC7;&#x6599;&#x548C;&#x6211;&#x7684;&#x79D8;&#x5BC6;&#x5B57;&#x4E32;&#x7121;&#x6CD5;&#x76F8;&#x7B26;&#xFF0C;&#x7576;&#x7136;&#x4E5F;&#x7121;&#x6CD5;&#x4F5C;&#x507D;&#x9020;&#xFF0C;&#x9019;&#x5C31;&#x662F;&#x6240;&#x8B02;&#x7684; SignedCookie &#x4F46;&#x8A18;&#x4F4F;Session&#x5C31;&#x50CF;&#x662F;&#x4F60;&#x7684;&#x6703;&#x54E1;&#x5361;&#x865F;&#xFF0C;&#x4E0D;&#x898B;&#x4E5F;&#x8868;&#x793A;&#x4ECD;&#x7136;&#x6709;&#x8CC7;&#x6599;&#x88AB;&#x7ACA;&#x53D6;&#x7684;&#x98A8;&#x96AA;&#x3002; &#x5982;&#x679C;&#x55AE;&#x5C31;&#x5BE6;&#x73FE;&#x529F;&#x80FD;&#xFF0C;Cookie&#x8207;Session&#x5F7C;&#x6B64;&#x4E4B;&#x9593;&#x662F;&#x53EF;&#x4EE5;&#x4E92;&#x63DB;&#x7684;(&#x6307;&#x7684;&#x662F;&#x4F60;&#x53EF;&#x4EE5;&#x628A;&#x8CC7;&#x6599;&#x5B58;&#x653E;&#x5728;Session&#x6216;&#x662F;Cookie&#xFF0C;&#x4E26;&#x4E0D;&#x662F;&#x6307;Session&#x53EF;&#x4EE5;&#x88AB;&#x653E;&#x5728;Client&#x7AEF;&#x7576;Cookie&#x4F7F;&#x7528;)&#x3002;&#x4F46;&#x662F;Cookie&#x5728;&#x6700;&#x55AE;&#x7D14;&#x7684;&#x60C5;&#x6CC1;&#x88E1;&#xFF0C;&#x662F;&#x6709;&#x5B89;&#x5168;&#x6027;&#x7684;&#x554F;&#x984C;(&#x8CC7;&#x6599;&#x5728;Client&#x7AEF;)&#x3002;&#x6240;&#x4EE5;&#x8003;&#x91CF;&#x5230;&#x9019;&#x9EDE;&#xFF0C;&#x5927;&#x90E8;&#x5206;&#x90FD;&#x6703;&#x9078;&#x64C7;Session&#x3002;&#x4F46;&#x662F;&#x6B63;&#x5982;Cookie&#x662F;&#x4E00;&#x500B;&#x5916;&#x52A0;&#x7684;&#x529F;&#x80FD;&#xFF0C;Session&#x4E5F;&#x4E0D;&#x5C6C;&#x65BC;HTTP&#x5354;&#x5B9A;&#x3002;&#x53EA;&#x8981;&#x662F;&#x5916;&#x52A0;&#x529F;&#x80FD;&#xFF0C;&#x5C31;&#x5FC5;&#x9808;&#x984D;&#x5916;&#x5BEB;&#x7A0B;&#x5F0F;&#x5BE6;&#x73FE;&#x3002; &#x4E0D;&#x904E;&#x73FE;&#x5728;&#x505A;&#x7DB2;&#x7AD9;&#x6211;&#x5011;&#x90FD;&#x6D41;&#x884C;&#x4F7F;&#x7528;&#x6846;&#x67B6;&#xFF0C;Session&#x7684;&#x6A5F;&#x5236;&#x90FD;&#x88AB;&#x6846;&#x67B6;&#x6240;&#x5BE6;&#x73FE;&#x4E86;&#xFF0C;&#x4EE5;Ruby on Rails&#x4F86;&#x8AAA;&#xFF0C; &#x9810;&#x8A2D;&#x7684;Session&#x5BE6;&#x73FE;&#x65B9;&#x5F0F;&#x662F;&#x7531;Cookie&#x4F86;&#x5BE6;&#x4F5C;&#x7684;(&#x5229;&#x7528;&#x52A0;&#x5BC6;&#x8207;&#x8A2D;&#x5B9A;&#x904E;&#x671F;&#x6642;&#x9593;)&#x3002; &#x6BCF;&#x500B;&#x6846;&#x67B6;&#x5BE6;&#x73FE;&#x7684;&#x908F;&#x8F2F;&#x90FD;&#x53EF;&#x80FD;&#x4E0D;&#x4E00;&#x6A23;&#xFF0C;&#x6240;&#x4EE5;&#x9084;&#x662F;&#x8981;&#x53BB;&#x770B;&#x5B98;&#x65B9;&#x7684;&#x8AAA;&#x660E;&#x6703;&#x6BD4;&#x8F03;&#x6E05;&#x695A;&#x3002; &#x4F46;&#x5F9E;&#x9019;&#x88E1;&#x53EF;&#x5F97;&#x77E5;&#xFF0C;Session&#x4E26;&#x4E0D;&#x662F;&#x4E00;&#x500B;&#x5F88;&#x660E;&#x78BA;&#x5BE6;&#x9AD4;&#x7684;&#x6A5F;&#x5236;&#xFF0C;&#x7B97;&#x662F;&#x4E00;&#x500B;&#x6982;&#x5FF5;&#xFF0C;&#x53EA;&#x8981;&#x7B26;&#x5408;&#x6982;&#x5FF5;&#x6240;&#x5BE6;&#x4F5C;&#x51FA;&#x4F86;&#x7684;&#x529F;&#x80FD;&#x90FD;&#x53EF;&#x4EE5;&#x88AB;&#x53EB;&#x505A;Session&#x3002; references &#x7B2C;&#x4E00;&#x65B9;Cookie&#x548C;&#x7B2C;&#x4E09;&#x65B9;Cookie&#x5340;&#x5225; &#x5224;&#x65B7;&#x60A8;&#x662F;&#x4F7F;&#x7528;&#x7B2C;&#x4E00;&#x65B9;&#x9084;&#x662F;&#x7B2C;&#x4E09;&#x65B9; Cookie &#x4E94;&#x5206;&#x9418;&#x6982;&#x8FF0;&#x7DB2;&#x8DEF;&#x754C;&#x7684;&#x8A18;&#x61B6;&#x5927;&#x795E;-Session"},"api/promise.html":{"title":"","path":"\\javascript\\api\\promise.html","body":"Promise JavaScript Promise 全介紹 Ajax 是屬於一個透過 JavaScript 技術名稱，用於取得遠端資料； 而 Promise 則是一個語法，專門用來處理非同步行為， 透過 new Promise() 的方式建立 p 物件，此時 p 就能使用 Promise 的原型方法： 1 2 3 4 5 const p = new Promise (); p.then(); // Promise 回傳正確 p.catch(); // Promise 回傳失敗 p.finally(); // 非同步執行完畢（無論是否正確完成） 狀態 pending ：事件已經運行中，尚未取得結果 resolved ：事件已經執行完畢且成功操作，回傳 resolve 的結果（該承諾已經被實現 fulfilled ） rejected ：事件已經執行完畢但操作失敗，回傳 rejected 的結果 上列的三種狀態每次執行必定會經過 Pending， 接下來進入 Fulfilled 或 Rejected 的其中之一， 並且可以使用 then() 及 catch() 取得成功或失敗的結果。 在大部分情況下，開發者習慣僅使用 .then() 來取得成功的結果，失敗的部分交由 catch(onRejected) 來處理 1 2 3 4 5 6 7 8 9 10 // promise.then(onFulfilled); // promise.catch(onRejected) promise() .then( success =  console .log(success); ) // 失敗的行為一律交給了 catch .catch( fail =  console .log(fail); ); 鏈接 Promise 另一個特點在於 then、catch 都可以使用鏈接的方式不斷的進行下一個任務 如果是 promise 函式，則會 繼續遵循 then 及 catch 的運作 如果不是 promise 函式，在下一個 then 則可以取得結果 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 promise( 1 ) .then( success =  console .log(success); return promise( 2 ); ) .then( success =  console .log(success); return promise( 0 ); // 這個階段會進入 catch ) .then( success =  // 由於上一個階段結果是 reject，所以此段不執行 console .log(success); return promise( 3 ); ) .catch( fail =  console .log(fail); ) .finally( () =  console .log( 'done' ); ) 1 2 3 4 const res = onPress() // 異步函數 if ( res &amp; res.then )  res.then( ( close ). catch ( ( )= ) ) //等函數調用完 調用close  else close() //否則 立馬調用close"},"api/promise.html#Promise":{"title":"Promise","path":"\\javascript\\api\\promise.html#Promise","body":"JavaScript Promise &#x5168;&#x4ECB;&#x7D39; Ajax &#x662F;&#x5C6C;&#x65BC;&#x4E00;&#x500B;&#x900F;&#x904E; JavaScript &#x6280;&#x8853;&#x540D;&#x7A31;&#xFF0C;&#x7528;&#x65BC;&#x53D6;&#x5F97;&#x9060;&#x7AEF;&#x8CC7;&#x6599;&#xFF1B; &#x800C; Promise &#x5247;&#x662F;&#x4E00;&#x500B;&#x8A9E;&#x6CD5;&#xFF0C;&#x5C08;&#x9580;&#x7528;&#x4F86;&#x8655;&#x7406;&#x975E;&#x540C;&#x6B65;&#x884C;&#x70BA;&#xFF0C; &#x900F;&#x904E; new Promise() &#x7684;&#x65B9;&#x5F0F;&#x5EFA;&#x7ACB; p &#x7269;&#x4EF6;&#xFF0C;&#x6B64;&#x6642; p &#x5C31;&#x80FD;&#x4F7F;&#x7528; Promise &#x7684;&#x539F;&#x578B;&#x65B9;&#x6CD5;&#xFF1A; 1 2 3 4 5 const p = new Promise (); p.then(); // Promise &#x56DE;&#x50B3;&#x6B63;&#x78BA; p.catch(); // Promise &#x56DE;&#x50B3;&#x5931;&#x6557; p.finally(); // &#x975E;&#x540C;&#x6B65;&#x57F7;&#x884C;&#x5B8C;&#x7562;&#xFF08;&#x7121;&#x8AD6;&#x662F;&#x5426;&#x6B63;&#x78BA;&#x5B8C;&#x6210;&#xFF09; &#x72C0;&#x614B; pending &#xFF1A;&#x4E8B;&#x4EF6;&#x5DF2;&#x7D93;&#x904B;&#x884C;&#x4E2D;&#xFF0C;&#x5C1A;&#x672A;&#x53D6;&#x5F97;&#x7D50;&#x679C; resolved &#xFF1A;&#x4E8B;&#x4EF6;&#x5DF2;&#x7D93;&#x57F7;&#x884C;&#x5B8C;&#x7562;&#x4E14;&#x6210;&#x529F;&#x64CD;&#x4F5C;&#xFF0C;&#x56DE;&#x50B3; resolve &#x7684;&#x7D50;&#x679C;&#xFF08;&#x8A72;&#x627F;&#x8AFE;&#x5DF2;&#x7D93;&#x88AB;&#x5BE6;&#x73FE; fulfilled &#xFF09; rejected &#xFF1A;&#x4E8B;&#x4EF6;&#x5DF2;&#x7D93;&#x57F7;&#x884C;&#x5B8C;&#x7562;&#x4F46;&#x64CD;&#x4F5C;&#x5931;&#x6557;&#xFF0C;&#x56DE;&#x50B3; rejected &#x7684;&#x7D50;&#x679C; &#x4E0A;&#x5217;&#x7684;&#x4E09;&#x7A2E;&#x72C0;&#x614B;&#x6BCF;&#x6B21;&#x57F7;&#x884C;&#x5FC5;&#x5B9A;&#x6703;&#x7D93;&#x904E; Pending&#xFF0C; &#x63A5;&#x4E0B;&#x4F86;&#x9032;&#x5165; Fulfilled &#x6216; Rejected &#x7684;&#x5176;&#x4E2D;&#x4E4B;&#x4E00;&#xFF0C; &#x4E26;&#x4E14;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; then() &#x53CA; catch() &#x53D6;&#x5F97;&#x6210;&#x529F;&#x6216;&#x5931;&#x6557;&#x7684;&#x7D50;&#x679C;&#x3002; &#x5728;&#x5927;&#x90E8;&#x5206;&#x60C5;&#x6CC1;&#x4E0B;&#xFF0C;&#x958B;&#x767C;&#x8005;&#x7FD2;&#x6163;&#x50C5;&#x4F7F;&#x7528; .then() &#x4F86;&#x53D6;&#x5F97;&#x6210;&#x529F;&#x7684;&#x7D50;&#x679C;&#xFF0C;&#x5931;&#x6557;&#x7684;&#x90E8;&#x5206;&#x4EA4;&#x7531; catch(onRejected) &#x4F86;&#x8655;&#x7406; 1 2 3 4 5 6 7 8 9 10 // promise.then(onFulfilled); // promise.catch(onRejected) promise() .then( success = { console .log(success); }) // &#x5931;&#x6557;&#x7684;&#x884C;&#x70BA;&#x4E00;&#x5F8B;&#x4EA4;&#x7D66;&#x4E86; catch .catch( fail = { console .log(fail); });"},"api/promise.html#鏈接":{"title":"&#x93C8;&#x63A5;","path":"\\javascript\\api\\promise.html#鏈接","body":"Promise &#x53E6;&#x4E00;&#x500B;&#x7279;&#x9EDE;&#x5728;&#x65BC; then&#x3001;catch &#x90FD;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x93C8;&#x63A5;&#x7684;&#x65B9;&#x5F0F;&#x4E0D;&#x65B7;&#x7684;&#x9032;&#x884C;&#x4E0B;&#x4E00;&#x500B;&#x4EFB;&#x52D9; &#x5982;&#x679C;&#x662F; promise &#x51FD;&#x5F0F;&#xFF0C;&#x5247;&#x6703; &#x7E7C;&#x7E8C;&#x9075;&#x5FAA; then &#x53CA; catch &#x7684;&#x904B;&#x4F5C; &#x5982;&#x679C;&#x4E0D;&#x662F; promise &#x51FD;&#x5F0F;&#xFF0C;&#x5728;&#x4E0B;&#x4E00;&#x500B; then &#x5247;&#x53EF;&#x4EE5;&#x53D6;&#x5F97;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 promise( 1 ) .then( success = { console .log(success); return promise( 2 ); }) .then( success = { console .log(success); return promise( 0 ); // &#x9019;&#x500B;&#x968E;&#x6BB5;&#x6703;&#x9032;&#x5165; catch }) .then( success = { // &#x7531;&#x65BC;&#x4E0A;&#x4E00;&#x500B;&#x968E;&#x6BB5;&#x7D50;&#x679C;&#x662F; reject&#xFF0C;&#x6240;&#x4EE5;&#x6B64;&#x6BB5;&#x4E0D;&#x57F7;&#x884C; console .log(success); return promise( 3 ); }) .catch( fail = { console .log(fail); }) .finally( () = { console .log( &apos;done&apos; ); }) 1 2 3 4 const res = onPress() // &#x7570;&#x6B65;&#x51FD;&#x6578; if ( res &amp; res.then ) { res.then( ( close ). catch ( ( )= {}) ) //&#x7B49;&#x51FD;&#x6578;&#x8ABF;&#x7528;&#x5B8C; &#x8ABF;&#x7528;close } else close() //&#x5426;&#x5247; &#x7ACB;&#x99AC;&#x8ABF;&#x7528;close"},"array/array_method.html":{"title":"Array Method","path":"\\javascript\\array\\array_method.html","body":"一行代碼去重數組 Set 1 2 3 const list = [ 1 , 1 , 2 , 3 , 6 , 45 , 8 , 5 , 4 , 6 , 5 ] const uniqueList = [...new Set (list)] // [1, 2, 3, 6, 45, 8, 5, 4] console .log(uniqueList)"},"array/good_part.html":{"title":"JS 不良編碼習慣","path":"\\javascript\\array\\good_part.html","body":"不要使用早期的JavaScript技巧 它的創建者沒有料到這種語言會如此流行。 基於JavaScript構建的應用程序的複雜性比語言發展的速度還要快。這種情況迫使開發人員使用JavaScript技巧和變通方法，只是為了讓事情正常運行。 一個典型的例子是查看數組是否包含某個元素。 ES6 中可以使用 array.includes(item) 來代替 array.indexOf(item) !== -1"},"array/array_insert.html":{"title":"Array Insert","path":"\\javascript\\array\\array_insert.html","body":"immutable 的重要性，處理資料要注意有沒有改變到本身。 處理 array 用 push、pop、shift、unshift、reserve、sort、splice 都會改變原有的陣列。這個觀念在處理複雜的全域變數陣列有幫助。 把數據插入陣列尾部 利用陣列長度進行賦值 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr[arr.length] = 6 ; console .log(arr); // [1, 2, 3, 4, 5, 6] 利用 Array.prototype.push 方法 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.push( 6 ); console .log(arr); // [1, 2, 3, 4, 5, 6] 利用 Array.prototype.concat 方法 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = arr.concat( 6 ); console .log(arr); // [1, 2, 3, 4, 5, 6] 利用 spread 運算符 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [...arr, 6 ]; console .log(arr); // [1, 2, 3, 4, 5, 6] 把數據插入陣列頭部 利用 Array.prototype.unshift 方法 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.unshift( 0 ); console .log(arr); // [1, 2, 3, 4, 5, 6] 利用 Array.prototype.concat 方法 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.unshift( 0 ); console .log(arr); // [1, 2, 3, 4, 5, 6] 利用 spread 運算符 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [ 0 , ...arr]; console .log(arr); // [1, 2, 3, 4, 5, 6] 把數據插入陣列指定位置 利用 Array.prototype.splice 方法 1 2 3 let items = [ 1 , 2 , 4 , 5 ]; items.splice(items.length / 2 , 0 , 3 ); console .log(items); Array.prototype.splice() splice() 方法可以藉由刪除既有元素並／或加入新元素來改變一個陣列的內容 1 2 3 4 5 const months = [ 'Jan' , 'March' , 'April' , 'June' ]; months.splice( 1 , 3 ); console .log(months); // [\"Jan\"] months.splice( 1 , 0 , 'Feb' ); // inserts at index 1 console .log(months); // [\"Jan\", \"Feb\"] 拼接兩個陣列 利用 Array.prototype.concat 方法 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [ -2 , -1 , 0 ].concat(arr); console .log(arr); // [-2, -1, 0, 1, 2, 3, 4, 5] 利用 spread 運算符 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [...[ -2 , -1 , 0 ], ...arr]; console .log(arr); // [-2, -1, 0, 1, 2, 3, 4, 5] fill() Array.prototype.fill() 方法會將陣列中索引的第一個到最後一個的每個位置全部填入一個靜態的值。 1 2 3 4 5 6 7 8 const array1 = [ 1 , 2 , 3 , 4 ]; // fill with 5 from position 1 console .log(array1.fill( 5 , 1 )); // expected output: [1, 5, 5, 5] console .log(array1.fill( 6 )); // expected output: [6, 6, 6, 6] 1 2 3 4 5 const tasksArr = props.tasks; // [1,2,3,4] const participants = tasksArr.length; const queuers = 6 - tasksArr.length; //4 ['Wating...','Wating...'] let waitingArr = queuers === 0 ? [] : Array (queuers).fill( 'Wating...' ); const totalArr = tasksArr.concat(waitingArr); example unshift 把數據插入陣列頭部 下拉選單補標題　　　　 1 2 3 4 5 6 7 8 const opts = this .dataOpts.map( data = ( value: data.id, text: data.name )) opts.unshift( value: null , text: 'select_title' )"},"array/array_insert.html#把數據插入陣列尾部":{"title":"&#x628A;&#x6578;&#x64DA;&#x63D2;&#x5165;&#x9663;&#x5217;&#x5C3E;&#x90E8;","path":"\\javascript\\array\\array_insert.html#把數據插入陣列尾部","body":"&#x5229;&#x7528;&#x9663;&#x5217;&#x9577;&#x5EA6;&#x9032;&#x884C;&#x8CE6;&#x503C; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr[arr.length] = 6 ; console .log(arr); // [1, 2, 3, 4, 5, 6] &#x5229;&#x7528; Array.prototype.push &#x65B9;&#x6CD5; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.push( 6 ); console .log(arr); // [1, 2, 3, 4, 5, 6] &#x5229;&#x7528; Array.prototype.concat &#x65B9;&#x6CD5; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = arr.concat( 6 ); console .log(arr); // [1, 2, 3, 4, 5, 6] &#x5229;&#x7528; spread &#x904B;&#x7B97;&#x7B26; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [...arr, 6 ]; console .log(arr); // [1, 2, 3, 4, 5, 6]"},"array/array_insert.html#把數據插入陣列頭部":{"title":"&#x628A;&#x6578;&#x64DA;&#x63D2;&#x5165;&#x9663;&#x5217;&#x982D;&#x90E8;","path":"\\javascript\\array\\array_insert.html#把數據插入陣列頭部","body":"&#x5229;&#x7528; Array.prototype.unshift &#x65B9;&#x6CD5; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.unshift( 0 ); console .log(arr); // [1, 2, 3, 4, 5, 6] &#x5229;&#x7528; Array.prototype.concat &#x65B9;&#x6CD5; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.unshift( 0 ); console .log(arr); // [1, 2, 3, 4, 5, 6] &#x5229;&#x7528; spread &#x904B;&#x7B97;&#x7B26; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [ 0 , ...arr]; console .log(arr); // [1, 2, 3, 4, 5, 6]"},"array/array_insert.html#把數據插入陣列指定位置":{"title":"&#x628A;&#x6578;&#x64DA;&#x63D2;&#x5165;&#x9663;&#x5217;&#x6307;&#x5B9A;&#x4F4D;&#x7F6E;","path":"\\javascript\\array\\array_insert.html#把數據插入陣列指定位置","body":"&#x5229;&#x7528; Array.prototype.splice &#x65B9;&#x6CD5; 1 2 3 let items = [ 1 , 2 , 4 , 5 ]; items.splice(items.length / 2 , 0 , 3 ); console .log(items); Array.prototype.splice() splice() &#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x85C9;&#x7531;&#x522A;&#x9664;&#x65E2;&#x6709;&#x5143;&#x7D20;&#x4E26;&#xFF0F;&#x6216;&#x52A0;&#x5165;&#x65B0;&#x5143;&#x7D20;&#x4F86;&#x6539;&#x8B8A;&#x4E00;&#x500B;&#x9663;&#x5217;&#x7684;&#x5167;&#x5BB9; 1 2 3 4 5 const months = [ &apos;Jan&apos; , &apos;March&apos; , &apos;April&apos; , &apos;June&apos; ]; months.splice( 1 , 3 ); console .log(months); // [Jan] months.splice( 1 , 0 , &apos;Feb&apos; ); // inserts at index 1 console .log(months); // [Jan, Feb]"},"array/array_insert.html#拼接兩個陣列":{"title":"&#x62FC;&#x63A5;&#x5169;&#x500B;&#x9663;&#x5217;","path":"\\javascript\\array\\array_insert.html#拼接兩個陣列","body":"&#x5229;&#x7528; Array.prototype.concat &#x65B9;&#x6CD5; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [ -2 , -1 , 0 ].concat(arr); console .log(arr); // [-2, -1, 0, 1, 2, 3, 4, 5] &#x5229;&#x7528; spread &#x904B;&#x7B97;&#x7B26; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [...[ -2 , -1 , 0 ], ...arr]; console .log(arr); // [-2, -1, 0, 1, 2, 3, 4, 5]"},"array/array_insert.html#fill":{"title":"fill()","path":"\\javascript\\array\\array_insert.html#fill","body":"Array.prototype.fill() &#x65B9;&#x6CD5;&#x6703;&#x5C07;&#x9663;&#x5217;&#x4E2D;&#x7D22;&#x5F15;&#x7684;&#x7B2C;&#x4E00;&#x500B;&#x5230;&#x6700;&#x5F8C;&#x4E00;&#x500B;&#x7684;&#x6BCF;&#x500B;&#x4F4D;&#x7F6E;&#x5168;&#x90E8;&#x586B;&#x5165;&#x4E00;&#x500B;&#x975C;&#x614B;&#x7684;&#x503C;&#x3002; 1 2 3 4 5 6 7 8 const array1 = [ 1 , 2 , 3 , 4 ]; // fill with 5 from position 1 console .log(array1.fill( 5 , 1 )); // expected output: [1, 5, 5, 5] console .log(array1.fill( 6 )); // expected output: [6, 6, 6, 6] 1 2 3 4 5 const tasksArr = props.tasks; // [1,2,3,4] const participants = tasksArr.length; const queuers = 6 - tasksArr.length; //4 [&apos;Wating...&apos;,&apos;Wating...&apos;] let waitingArr = queuers === 0 ? [] : Array (queuers).fill( &apos;Wating...&apos; ); const totalArr = tasksArr.concat(waitingArr);"},"array/array_insert.html#example":{"title":"example","path":"\\javascript\\array\\array_insert.html#example","body":"unshift &#x628A;&#x6578;&#x64DA;&#x63D2;&#x5165;&#x9663;&#x5217;&#x982D;&#x90E8; &#x4E0B;&#x62C9;&#x9078;&#x55AE;&#x88DC;&#x6A19;&#x984C;&#x3000;&#x3000;&#x3000;&#x3000; 1 2 3 4 5 6 7 8 const opts = this .dataOpts.map( data = ({ value: data.id, text: data.name })) opts.unshift({ value: null , text: &apos;select_title&apos; })"},"array/array_merge.html":{"title":"Array Merge","path":"\\javascript\\array\\array_merge.html","body":"concat 合併陣列 Array.prototype.concat() 1 2 3 4 var a = [ 1 , 2 , 3 ], b = [ 4 , 5 , 6 ]; var c = a.concat(b); console .log(c); // 1,2,3,4,5,6 console .log(a); // 1,2,3 不改變本身 JS 中合併多個陣列，且去除陣列重複元素 1 2 3 4 var a = [ \"a\" , \"b\" , \"c\" ], b = [ \"c\" , 1 , 2 ]; var arr = a.concat(b); console .log(arr); // [\"a\", \"b\", \"c\", \"c\", 1, 2] 要求必須返回原陣列 https://jsbin.com/nidizam/edit?js,console 1 2 3 4 5 6 7 8 // 對該陣列進行循環 arr.forEach( ( item, index ) =  // 如果當前下標和當前元素在陣列中的lastIndex不同，則刪除這個元素 if (index != arr.lastIndexOf(item))  arr.splice(index, 1 );  ); console .log(arr); // \"a\", \"b\", \"c\", 1, 2] 要求返回新陣列 https://jsbin.com/lufavuf/1/edit?js,console 1 2 3 4 5 6 // 最簡單的應該是使用陣列的 filter 方法，將當前下標和當前元素在數組中的 lastIndex 相同的元素篩選出來 var arr2 = arr.filter( ( item,index ) = index ===arr.lastIndexOf(item) ); console .log(arr); // [\"a\", \"b\", \"c\", \"c\", 1, 2] console .log(arr2); // [\"a\", \"b\", \"c\", 1, 2]"},"array/array_methods.html":{"title":"Array methods","path":"\\javascript\\array\\array_methods.html","body":"Array 生成新陣列 map filter forEach 遍歷所有元素 Array.prototype.forEach() https://jsbin.com/xoninaz/edit?js,console 1 2 3 4 5 6 7 8 9 var arr = [ 1 , 2 , 3 ]; arr.forEach( function ( item,index )  console .log(item,index); ); // expected output: 1 0 // expected output: 2 1 // expected output: 3 2 map 對元素重新組裝，生成新陣列 Array.prototype.map() https://jsbin.com/xevunu/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.map( function ( item,index )  return 'b' +item+ '/b' ; ) console .log(arr2); // expected output: [\"b1/b\", \"b2/b\", \"b3/b\"] filter 過濾符合條件的元素，生成新陣列 Array.prototype.filter() https://jsbin.com/xoninaz/1/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.filter( function ( item,index )  if (item 2 )  return true ;  ) console .log(arr2); // expected output: [3] find 回傳第一個滿足所提供之測試函式的元素值。否則回傳 undefined Array.prototype.find() https://jsbin.com/qapevom/edit?js,console 1 2 3 4 5 6 var arr = [ 1 , 2 , 3 ]; var found = arr.find( function ( item,index )  return item 1 ; ) console .log(found); // expected output: 2 sort 對一個陣列的所有元素進行排序，並回傳此陣列 Array.prototype.sort() https://jsbin.com/gaceyen/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 4 , 2 , 3 , 5 ]; var arr2 = arr.sort( function ( a,b )  return a - b; //從小到大排序 //return b - a; //從大到小排序 ) console .log(arr2); // expected output: [1, 2, 3, 4, 5] every 測試陣列 判斷所有元素是否都符合條件 Array.prototype.every() https://jsbin.com/nefobuh/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var result = arr.every( function ( item,index )  if (item 4 )  return true ;  ) console .log(result); // expected output: true some 測試陣列 判斷是否至少一個元素符合條件 Array.prototype.some() https://jsbin.com/yeleboz/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var result = arr.some( function ( item,index )  if (item 2 )  return true ;  ) console .log(result); // expected output: true reduce Array.prototype.reduce() reduce() 方法將一個累加器及陣列中每項元素（由左至右）傳入回呼函式，將陣列化為單一值。 1 2 3 4 5 6 const array1 = [ 1 , 2 , 3 , 4 ]; const reducer = ( accumulator, currentValue ) = accumulator + currentValue; // 1 + 2 + 3 + 4 console .log(array1.reduce(reducer)); // expected output: 10 Return longest string in array https://jsbin.com/razufufago/edit?js,console 1 2 3 var arr = [ \"vue\" , \"raact\" , \"JavaScript\" , \"Angular\" , \"jQuery\" ]; var longest = arr.reduce( ( a, b ) = a.length  b.length ? a : b, '' ); console .log(longest); // \"JavaScript\" examples https://jsbin.com/yapugucezi/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 let arr = [  product : 'The Godfather' , catalog : 'movie' , price : '150' ,  product : 'The Dark Knight' , catalog : 'movie' , price : '100' ,  product : '7 Rings' , catalog : 'music' , price : '300'  ] var arrFilter = arr.filter( function ( item,index )  if (item.catalog == \"movie\" )  return true ;  ) console .log(arrFilter); //arr catalog:'music' var arrSortPrice = arr.sort( function ( a,b )  return b.price - a.price; ) console .log(arrSortPrice); // arr 300 150 100 let sum = 0 ; arr.forEach( function ( element )  sum+= parseInt (element.price); ); console .log(sum); //sum price 550 陣列方法 map() 和 forEach() 有什麼區別？ 這兩種方法都是對陣列中的元素進行迭代。 map() 通過每個元素的回調函數將其映射到新的元素上，最終返回一個新的陣列。 forEach() 雖然也為每一個元素準備了回調函數，但卻不返回新的陣列。 map() 是 保持原有陣列不變的正確選擇 ，他可以讓原始陣列的每一個值都映射到新的陣列上。 forEach() 在每一次迭代的使用中都會產生副作用，因此 map() 是編程技術中常用的方法。 如果你需要迭代一個陣列，使其本身發生變化且不需要返回一個新陣列時，可以使用 forEach() 如果你只是對數字進行遍歷時，也可以使用 forEach() map() 運行的 較快 ，且返回的新陣列可以讓你繼續使用 map()、filter()、reduce() 等方法， 1 2 3 4 const arr = [ 1 , 2 , 3 , 4 , 5 ]; const arr1 = arr.map( num = num * 2 ).filter( num = num  5 ); console .log(arr); // [1, 2, 3, 4, 5] console .log(arr1); // [6, 8, 10] ref: https://hacpai.com/article/1547790109416?r=Vanessa"},"array/array_methods.html#Array":{"title":"Array","path":"\\javascript\\array\\array_methods.html#Array","body":"&#x751F;&#x6210;&#x65B0;&#x9663;&#x5217; map filter"},"array/array_methods.html#forEach":{"title":"forEach","path":"\\javascript\\array\\array_methods.html#forEach","body":"&#x904D;&#x6B77;&#x6240;&#x6709;&#x5143;&#x7D20; Array.prototype.forEach() https://jsbin.com/xoninaz/edit?js,console 1 2 3 4 5 6 7 8 9 var arr = [ 1 , 2 , 3 ]; arr.forEach( function ( item,index ) { console .log(item,index); }); // expected output: 1 0 // expected output: 2 1 // expected output: 3 2"},"array/array_methods.html#map":{"title":"map","path":"\\javascript\\array\\array_methods.html#map","body":"&#x5C0D;&#x5143;&#x7D20;&#x91CD;&#x65B0;&#x7D44;&#x88DD;&#xFF0C;&#x751F;&#x6210;&#x65B0;&#x9663;&#x5217; Array.prototype.map() https://jsbin.com/xevunu/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.map( function ( item,index ) { return &apos;b&apos; +item+ &apos;/b&apos; ; }) console .log(arr2); // expected output: [b1/b, b2/b, b3/b]"},"array/array_methods.html#filter":{"title":"filter","path":"\\javascript\\array\\array_methods.html#filter","body":"&#x904E;&#x6FFE;&#x7B26;&#x5408;&#x689D;&#x4EF6;&#x7684;&#x5143;&#x7D20;&#xFF0C;&#x751F;&#x6210;&#x65B0;&#x9663;&#x5217; Array.prototype.filter() https://jsbin.com/xoninaz/1/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.filter( function ( item,index ) { if (item 2 ) { return true ; } }) console .log(arr2); // expected output: [3]"},"array/array_methods.html#find":{"title":"find","path":"\\javascript\\array\\array_methods.html#find","body":"&#x56DE;&#x50B3;&#x7B2C;&#x4E00;&#x500B;&#x6EFF;&#x8DB3;&#x6240;&#x63D0;&#x4F9B;&#x4E4B;&#x6E2C;&#x8A66;&#x51FD;&#x5F0F;&#x7684;&#x5143;&#x7D20;&#x503C;&#x3002;&#x5426;&#x5247;&#x56DE;&#x50B3; undefined Array.prototype.find() https://jsbin.com/qapevom/edit?js,console 1 2 3 4 5 6 var arr = [ 1 , 2 , 3 ]; var found = arr.find( function ( item,index ) { return item 1 ; }) console .log(found); // expected output: 2"},"array/array_methods.html#sort":{"title":"sort","path":"\\javascript\\array\\array_methods.html#sort","body":"&#x5C0D;&#x4E00;&#x500B;&#x9663;&#x5217;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x9032;&#x884C;&#x6392;&#x5E8F;&#xFF0C;&#x4E26;&#x56DE;&#x50B3;&#x6B64;&#x9663;&#x5217; Array.prototype.sort() https://jsbin.com/gaceyen/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 4 , 2 , 3 , 5 ]; var arr2 = arr.sort( function ( a,b ) { return a - b; //&#x5F9E;&#x5C0F;&#x5230;&#x5927;&#x6392;&#x5E8F; //return b - a; //&#x5F9E;&#x5927;&#x5230;&#x5C0F;&#x6392;&#x5E8F; }) console .log(arr2); // expected output: [1, 2, 3, 4, 5]"},"array/array_methods.html#every":{"title":"every","path":"\\javascript\\array\\array_methods.html#every","body":"&#x6E2C;&#x8A66;&#x9663;&#x5217; &#x5224;&#x65B7;&#x6240;&#x6709;&#x5143;&#x7D20;&#x662F;&#x5426;&#x90FD;&#x7B26;&#x5408;&#x689D;&#x4EF6; Array.prototype.every() https://jsbin.com/nefobuh/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var result = arr.every( function ( item,index ) { if (item 4 ) { return true ; } }) console .log(result); // expected output: true"},"array/array_methods.html#some":{"title":"some","path":"\\javascript\\array\\array_methods.html#some","body":"&#x6E2C;&#x8A66;&#x9663;&#x5217; &#x5224;&#x65B7;&#x662F;&#x5426;&#x81F3;&#x5C11;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x7B26;&#x5408;&#x689D;&#x4EF6; Array.prototype.some() https://jsbin.com/yeleboz/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var result = arr.some( function ( item,index ) { if (item 2 ) { return true ; } }) console .log(result); // expected output: true"},"array/array_methods.html#reduce":{"title":"reduce","path":"\\javascript\\array\\array_methods.html#reduce","body":"Array.prototype.reduce() reduce() &#x65B9;&#x6CD5;&#x5C07;&#x4E00;&#x500B;&#x7D2F;&#x52A0;&#x5668;&#x53CA;&#x9663;&#x5217;&#x4E2D;&#x6BCF;&#x9805;&#x5143;&#x7D20;&#xFF08;&#x7531;&#x5DE6;&#x81F3;&#x53F3;&#xFF09;&#x50B3;&#x5165;&#x56DE;&#x547C;&#x51FD;&#x5F0F;&#xFF0C;&#x5C07;&#x9663;&#x5217;&#x5316;&#x70BA;&#x55AE;&#x4E00;&#x503C;&#x3002; 1 2 3 4 5 6 const array1 = [ 1 , 2 , 3 , 4 ]; const reducer = ( accumulator, currentValue ) = accumulator + currentValue; // 1 + 2 + 3 + 4 console .log(array1.reduce(reducer)); // expected output: 10 Return longest string in array https://jsbin.com/razufufago/edit?js,console 1 2 3 var arr = [ vue , raact , JavaScript , Angular , jQuery ]; var longest = arr.reduce( ( a, b ) = a.length  b.length ? a : b, &apos;&apos; ); console .log(longest); // JavaScript examples https://jsbin.com/yapugucezi/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 let arr = [ { product : &apos;The Godfather&apos; , catalog : &apos;movie&apos; , price : &apos;150&apos; }, { product : &apos;The Dark Knight&apos; , catalog : &apos;movie&apos; , price : &apos;100&apos; }, { product : &apos;7 Rings&apos; , catalog : &apos;music&apos; , price : &apos;300&apos; } ] var arrFilter = arr.filter( function ( item,index ) { if (item.catalog == movie ) { return true ; } }) console .log(arrFilter); //arr catalog:&apos;music&apos; var arrSortPrice = arr.sort( function ( a,b ) { return b.price - a.price; }) console .log(arrSortPrice); // arr 300 150 100 let sum = 0 ; arr.forEach( function ( element ) { sum+= parseInt (element.price); }); console .log(sum); //sum price 550 &#x9663;&#x5217;&#x65B9;&#x6CD5; map() &#x548C; forEach() &#x6709;&#x4EC0;&#x9EBC;&#x5340;&#x5225;&#xFF1F; &#x9019;&#x5169;&#x7A2E;&#x65B9;&#x6CD5;&#x90FD;&#x662F;&#x5C0D;&#x9663;&#x5217;&#x4E2D;&#x7684;&#x5143;&#x7D20;&#x9032;&#x884C;&#x8FED;&#x4EE3;&#x3002; map() &#x901A;&#x904E;&#x6BCF;&#x500B;&#x5143;&#x7D20;&#x7684;&#x56DE;&#x8ABF;&#x51FD;&#x6578;&#x5C07;&#x5176;&#x6620;&#x5C04;&#x5230;&#x65B0;&#x7684;&#x5143;&#x7D20;&#x4E0A;&#xFF0C;&#x6700;&#x7D42;&#x8FD4;&#x56DE;&#x4E00;&#x500B;&#x65B0;&#x7684;&#x9663;&#x5217;&#x3002; forEach() &#x96D6;&#x7136;&#x4E5F;&#x70BA;&#x6BCF;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x6E96;&#x5099;&#x4E86;&#x56DE;&#x8ABF;&#x51FD;&#x6578;&#xFF0C;&#x4F46;&#x537B;&#x4E0D;&#x8FD4;&#x56DE;&#x65B0;&#x7684;&#x9663;&#x5217;&#x3002; map() &#x662F; &#x4FDD;&#x6301;&#x539F;&#x6709;&#x9663;&#x5217;&#x4E0D;&#x8B8A;&#x7684;&#x6B63;&#x78BA;&#x9078;&#x64C7; &#xFF0C;&#x4ED6;&#x53EF;&#x4EE5;&#x8B93;&#x539F;&#x59CB;&#x9663;&#x5217;&#x7684;&#x6BCF;&#x4E00;&#x500B;&#x503C;&#x90FD;&#x6620;&#x5C04;&#x5230;&#x65B0;&#x7684;&#x9663;&#x5217;&#x4E0A;&#x3002; forEach() &#x5728;&#x6BCF;&#x4E00;&#x6B21;&#x8FED;&#x4EE3;&#x7684;&#x4F7F;&#x7528;&#x4E2D;&#x90FD;&#x6703;&#x7522;&#x751F;&#x526F;&#x4F5C;&#x7528;&#xFF0C;&#x56E0;&#x6B64; map() &#x662F;&#x7DE8;&#x7A0B;&#x6280;&#x8853;&#x4E2D;&#x5E38;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x5982;&#x679C;&#x4F60;&#x9700;&#x8981;&#x8FED;&#x4EE3;&#x4E00;&#x500B;&#x9663;&#x5217;&#xFF0C;&#x4F7F;&#x5176;&#x672C;&#x8EAB;&#x767C;&#x751F;&#x8B8A;&#x5316;&#x4E14;&#x4E0D;&#x9700;&#x8981;&#x8FD4;&#x56DE;&#x4E00;&#x500B;&#x65B0;&#x9663;&#x5217;&#x6642;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; forEach() &#x5982;&#x679C;&#x4F60;&#x53EA;&#x662F;&#x5C0D;&#x6578;&#x5B57;&#x9032;&#x884C;&#x904D;&#x6B77;&#x6642;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; forEach() map() &#x904B;&#x884C;&#x7684; &#x8F03;&#x5FEB; &#xFF0C;&#x4E14;&#x8FD4;&#x56DE;&#x7684;&#x65B0;&#x9663;&#x5217;&#x53EF;&#x4EE5;&#x8B93;&#x4F60;&#x7E7C;&#x7E8C;&#x4F7F;&#x7528; map()&#x3001;filter()&#x3001;reduce() &#x7B49;&#x65B9;&#x6CD5;&#xFF0C; 1 2 3 4 const arr = [ 1 , 2 , 3 , 4 , 5 ]; const arr1 = arr.map( num = num * 2 ).filter( num = num  5 ); console .log(arr); // [1, 2, 3, 4, 5] console .log(arr1); // [6, 8, 10] ref: https://hacpai.com/article/1547790109416?r=Vanessa"},"array/array_methods.html#examples":{"title":"examples","path":"\\javascript\\array\\array_methods.html#examples","body":"https://jsbin.com/yapugucezi/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 let arr = [ { product : &apos;The Godfather&apos; , catalog : &apos;movie&apos; , price : &apos;150&apos; }, { product : &apos;The Dark Knight&apos; , catalog : &apos;movie&apos; , price : &apos;100&apos; }, { product : &apos;7 Rings&apos; , catalog : &apos;music&apos; , price : &apos;300&apos; } ] var arrFilter = arr.filter( function ( item,index ) { if (item.catalog == movie ) { return true ; } }) console .log(arrFilter); //arr catalog:&apos;music&apos; var arrSortPrice = arr.sort( function ( a,b ) { return b.price - a.price; }) console .log(arrSortPrice); // arr 300 150 100 let sum = 0 ; arr.forEach( function ( element ) { sum+= parseInt (element.price); }); console .log(sum); //sum price 550 &#x9663;&#x5217;&#x65B9;&#x6CD5; map() &#x548C; forEach() &#x6709;&#x4EC0;&#x9EBC;&#x5340;&#x5225;&#xFF1F; &#x9019;&#x5169;&#x7A2E;&#x65B9;&#x6CD5;&#x90FD;&#x662F;&#x5C0D;&#x9663;&#x5217;&#x4E2D;&#x7684;&#x5143;&#x7D20;&#x9032;&#x884C;&#x8FED;&#x4EE3;&#x3002; map() &#x901A;&#x904E;&#x6BCF;&#x500B;&#x5143;&#x7D20;&#x7684;&#x56DE;&#x8ABF;&#x51FD;&#x6578;&#x5C07;&#x5176;&#x6620;&#x5C04;&#x5230;&#x65B0;&#x7684;&#x5143;&#x7D20;&#x4E0A;&#xFF0C;&#x6700;&#x7D42;&#x8FD4;&#x56DE;&#x4E00;&#x500B;&#x65B0;&#x7684;&#x9663;&#x5217;&#x3002; forEach() &#x96D6;&#x7136;&#x4E5F;&#x70BA;&#x6BCF;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x6E96;&#x5099;&#x4E86;&#x56DE;&#x8ABF;&#x51FD;&#x6578;&#xFF0C;&#x4F46;&#x537B;&#x4E0D;&#x8FD4;&#x56DE;&#x65B0;&#x7684;&#x9663;&#x5217;&#x3002; map() &#x662F; &#x4FDD;&#x6301;&#x539F;&#x6709;&#x9663;&#x5217;&#x4E0D;&#x8B8A;&#x7684;&#x6B63;&#x78BA;&#x9078;&#x64C7; &#xFF0C;&#x4ED6;&#x53EF;&#x4EE5;&#x8B93;&#x539F;&#x59CB;&#x9663;&#x5217;&#x7684;&#x6BCF;&#x4E00;&#x500B;&#x503C;&#x90FD;&#x6620;&#x5C04;&#x5230;&#x65B0;&#x7684;&#x9663;&#x5217;&#x4E0A;&#x3002; forEach() &#x5728;&#x6BCF;&#x4E00;&#x6B21;&#x8FED;&#x4EE3;&#x7684;&#x4F7F;&#x7528;&#x4E2D;&#x90FD;&#x6703;&#x7522;&#x751F;&#x526F;&#x4F5C;&#x7528;&#xFF0C;&#x56E0;&#x6B64; map() &#x662F;&#x7DE8;&#x7A0B;&#x6280;&#x8853;&#x4E2D;&#x5E38;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x5982;&#x679C;&#x4F60;&#x9700;&#x8981;&#x8FED;&#x4EE3;&#x4E00;&#x500B;&#x9663;&#x5217;&#xFF0C;&#x4F7F;&#x5176;&#x672C;&#x8EAB;&#x767C;&#x751F;&#x8B8A;&#x5316;&#x4E14;&#x4E0D;&#x9700;&#x8981;&#x8FD4;&#x56DE;&#x4E00;&#x500B;&#x65B0;&#x9663;&#x5217;&#x6642;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; forEach() &#x5982;&#x679C;&#x4F60;&#x53EA;&#x662F;&#x5C0D;&#x6578;&#x5B57;&#x9032;&#x884C;&#x904D;&#x6B77;&#x6642;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; forEach() map() &#x904B;&#x884C;&#x7684; &#x8F03;&#x5FEB; &#xFF0C;&#x4E14;&#x8FD4;&#x56DE;&#x7684;&#x65B0;&#x9663;&#x5217;&#x53EF;&#x4EE5;&#x8B93;&#x4F60;&#x7E7C;&#x7E8C;&#x4F7F;&#x7528; map()&#x3001;filter()&#x3001;reduce() &#x7B49;&#x65B9;&#x6CD5;&#xFF0C; 1 2 3 4 const arr = [ 1 , 2 , 3 , 4 , 5 ]; const arr1 = arr.map( num = num * 2 ).filter( num = num  5 ); console .log(arr); // [1, 2, 3, 4, 5] console .log(arr1); // [6, 8, 10] ref: https://hacpai.com/article/1547790109416?r=Vanessa"},"array/splice.html":{"title":"Array splice","path":"\\javascript\\array\\splice.html","body":"分割指定长度的元素数组 1 2 3 4 5 6 7 8 9 10 11 12 const listChunk = ( list, size= 1 , cacheList=[] ) =  const tmp = [...list] if (size  0 ) return list while (tmp.length)  cacheList.push( tmp.splice( 0 ,size))  return cacheList  console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ])) // [[1], [2], [3], [4], [5], [6], [7], [8], [9]] console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ], 3 )) // [[1, 2, 3], [4, 5, 6], [7, 8, 9]] console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ], 0 )) // [] console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ], -1 )) // []"},"array/splice.html#分割指定长度的元素数组":{"title":"&#x5206;&#x5272;&#x6307;&#x5B9A;&#x957F;&#x5EA6;&#x7684;&#x5143;&#x7D20;&#x6570;&#x7EC4;","path":"\\javascript\\array\\splice.html#分割指定长度的元素数组","body":"1 2 3 4 5 6 7 8 9 10 11 12 const listChunk = ( list, size= 1 , cacheList=[] ) = { const tmp = [...list] if (size  0 ) return list while (tmp.length) { cacheList.push( tmp.splice( 0 ,size)) } return cacheList } console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ])) // [[1], [2], [3], [4], [5], [6], [7], [8], [9]] console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ], 3 )) // [[1, 2, 3], [4, 5, 6], [7, 8, 9]] console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ], 0 )) // [] console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ], -1 )) // []"},"array/map.html":{"title":"","path":"\\javascript\\array\\map.html","body":"map 對元素重新組裝，生成新陣列 Array.prototype.map() https://jsbin.com/xevunu/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.map( function ( item,index )  return 'b' +item+ '/b' ; ) console .log(arr2); // expected output: [\"b1/b\", \"b2/b\", \"b3/b\"] 1 2 3 4 5 6 7 const array1 = [ 1 , 4 , 9 , 16 ]; // pass a function to map const map1 = array1.map( x = x * 2 ); console .log(map1); // expected output: Array [2, 8, 18, 32] res.map( (v,i)={ console.log(i,v) } ) react-ts-epirus\\src\\utils\\api\\queries.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 .then( postEthGetFilterLogsRes =  let hashList = [], fromtoArr=[]; postEthGetFilterLogsRes.map( v =  let transactionHash = v.transactionHash; fromtoArr.push(  transactionHash :transactionHash ) hashList.push(v.transactionHash) ) return Promise .all(hashList.map( ( hash ) = fetchData3( `/transactions/ $hash ` ))) .then( ( values ) =  let transactionsArr = []; values.map( ( v,i )=  let timestampISO = v.timestampISO; let value = v.functionMeta.params.length === 0 ? 0 : v.functionMeta.params[ 1 ].value let add_transactionHash = fromtoArr[i].transactionHash transactionsArr.push(  timestampISO: timestampISO, value : value, add_transactionHash: add_transactionHash  ) ) return transactionsArr; ) .catch( () =  ) .finally( () =  ); ) .then( res =  let ans = res as any[]; let resans = ans.map( v =  const timestampISO = v.timestampISO; const value = v.value; const add_transactionHash = v.add_transactionHash; return  'timestampISO' : timestampISO, 'value' : value, 'hash' : add_transactionHash, ; ) return resans; )"},"array/map.html#map":{"title":"map","path":"\\javascript\\array\\map.html#map","body":"&#x5C0D;&#x5143;&#x7D20;&#x91CD;&#x65B0;&#x7D44;&#x88DD;&#xFF0C;&#x751F;&#x6210;&#x65B0;&#x9663;&#x5217; Array.prototype.map() https://jsbin.com/xevunu/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.map( function ( item,index ) { return &apos;b&apos; +item+ &apos;/b&apos; ; }) console .log(arr2); // expected output: [b1/b, b2/b, b3/b] 1 2 3 4 5 6 7 const array1 = [ 1 , 4 , 9 , 16 ]; // pass a function to map const map1 = array1.map( x = x * 2 ); console .log(map1); // expected output: Array [2, 8, 18, 32] res.map( (v,i)={ console.log(i,v) } ) react-ts-epirus\\src\\utils\\api\\queries.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 .then( postEthGetFilterLogsRes = { let hashList = [], fromtoArr=[]; postEthGetFilterLogsRes.map( v = { let transactionHash = v.transactionHash; fromtoArr.push( { transactionHash :transactionHash }) hashList.push(v.transactionHash) }) return Promise .all(hashList.map( ( hash ) = fetchData3( `/transactions/ ${hash} ` ))) .then( ( values ) = { let transactionsArr = []; values.map( ( v,i )= { let timestampISO = v.timestampISO; let value = v.functionMeta.params.length === 0 ? 0 : v.functionMeta.params[ 1 ].value let add_transactionHash = fromtoArr[i].transactionHash transactionsArr.push( { timestampISO: timestampISO, value : value, add_transactionHash: add_transactionHash } ) }) return transactionsArr; }) .catch( () = { }) .finally( () = { }); }) .then( res = { let ans = res as any[]; let resans = ans.map( v = { const timestampISO = v.timestampISO; const value = v.value; const add_transactionHash = v.add_transactionHash; return { &apos;timestampISO&apos; : timestampISO, &apos;value&apos; : value, &apos;hash&apos; : add_transactionHash, }; }) return resans; })"},"array/object_to_array.html":{"title":"object to array","path":"\\javascript\\array\\object_to_array.html","body":"transform object to array with lodash A modern native solution if anyone is interested: 1 const arr = Object .keys(obj).map( key = ( key, value : obj[key] ));"},"array/filter.html":{"title":"Array filter","path":"\\javascript\\array\\filter.html","body":"filter 1 2 3 4 5 6 var arr = [ 0 , 1 , 2 ] arr[ 10 ] = 10 ; const result = arr.filter( function ( x )  return x === undefined ; ) console .log(result) // [] filter 和 map 基本屬性 會把 或直接略過那些空的東西 不處理 [‘1’, ‘2’, ‘3’].filter(parseInt) ? filter 为数组中的每个元素调用一次 callback 函数，并利用所有使得 callback 返回 true 或等价于 true 的值的元素创建一个新数组。 1 2 3 parseInt ( '1' , 0 ); // 1 parseInt ( '2' , 1 ); // 不返回 parseInt ( '3' , 2 ); // NaN 不返回 parseInt(‘1’, 0)：radix的值為0，判斷字符串發現介於1~9，用10進制轉換，結果為1，所以callback的結果等價於true，返回元素’1’。 parseInt(‘2’, 1)：radix的值為1，如果該參數小於 2 或者大於 36，則 parseInt() 將返回 NaN，結果不等價於true，不返回。 parseInt(‘3’, 2): radix的值為2，這就意味著字符串將被解析成字節數，也就是僅僅包含數值0和1。parseInt的規範指出，它僅嘗試分析第一個字符的左側。這個字符串的第一個字符是“3”，它並不是基礎基數2的一個有效數字。所以這個子字符串將被解析為空。如果子字符串被解析成空了，函數將返回為NaN。 https://juejin.im/post/5dbff8735188252ddb2fd25e [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;].filter(parseInt) // [1]"},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{"title":"[&#x2018;1&#x2019;, &#x2018;2&#x2019;, &#x2018;3&#x2019;].filter(parseInt) ?","path":"\\javascript\\array\\filter.html#‘1’-‘2’-‘3’-filter-parseInt","body":"filter &#x4E3A;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x8C03;&#x7528;&#x4E00;&#x6B21; callback &#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x5229;&#x7528;&#x6240;&#x6709;&#x4F7F;&#x5F97; callback &#x8FD4;&#x56DE; true &#x6216;&#x7B49;&#x4EF7;&#x4E8E; true &#x7684;&#x503C;&#x7684;&#x5143;&#x7D20;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x6570;&#x7EC4;&#x3002; 1 2 3 parseInt ( &apos;1&apos; , 0 ); // 1 parseInt ( &apos;2&apos; , 1 ); // &#x4E0D;&#x8FD4;&#x56DE; parseInt ( &apos;3&apos; , 2 ); // NaN &#x4E0D;&#x8FD4;&#x56DE; parseInt(&#x2018;1&#x2019;, 0)&#xFF1A;radix&#x7684;&#x503C;&#x70BA;0&#xFF0C;&#x5224;&#x65B7;&#x5B57;&#x7B26;&#x4E32;&#x767C;&#x73FE;&#x4ECB;&#x65BC;1~9&#xFF0C;&#x7528;10&#x9032;&#x5236;&#x8F49;&#x63DB;&#xFF0C;&#x7D50;&#x679C;&#x70BA;1&#xFF0C;&#x6240;&#x4EE5;callback&#x7684;&#x7D50;&#x679C;&#x7B49;&#x50F9;&#x65BC;true&#xFF0C;&#x8FD4;&#x56DE;&#x5143;&#x7D20;&#x2019;1&#x2019;&#x3002; parseInt(&#x2018;2&#x2019;, 1)&#xFF1A;radix&#x7684;&#x503C;&#x70BA;1&#xFF0C;&#x5982;&#x679C;&#x8A72;&#x53C3;&#x6578;&#x5C0F;&#x65BC; 2 &#x6216;&#x8005;&#x5927;&#x65BC; 36&#xFF0C;&#x5247; parseInt() &#x5C07;&#x8FD4;&#x56DE; NaN&#xFF0C;&#x7D50;&#x679C;&#x4E0D;&#x7B49;&#x50F9;&#x65BC;true&#xFF0C;&#x4E0D;&#x8FD4;&#x56DE;&#x3002; parseInt(&#x2018;3&#x2019;, 2): radix&#x7684;&#x503C;&#x70BA;2&#xFF0C;&#x9019;&#x5C31;&#x610F;&#x5473;&#x8457;&#x5B57;&#x7B26;&#x4E32;&#x5C07;&#x88AB;&#x89E3;&#x6790;&#x6210;&#x5B57;&#x7BC0;&#x6578;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x50C5;&#x50C5;&#x5305;&#x542B;&#x6578;&#x503C;0&#x548C;1&#x3002;parseInt&#x7684;&#x898F;&#x7BC4;&#x6307;&#x51FA;&#xFF0C;&#x5B83;&#x50C5;&#x5617;&#x8A66;&#x5206;&#x6790;&#x7B2C;&#x4E00;&#x500B;&#x5B57;&#x7B26;&#x7684;&#x5DE6;&#x5074;&#x3002;&#x9019;&#x500B;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x7B2C;&#x4E00;&#x500B;&#x5B57;&#x7B26;&#x662F;&#x201C;3&#x201D;&#xFF0C;&#x5B83;&#x4E26;&#x4E0D;&#x662F;&#x57FA;&#x790E;&#x57FA;&#x6578;2&#x7684;&#x4E00;&#x500B;&#x6709;&#x6548;&#x6578;&#x5B57;&#x3002;&#x6240;&#x4EE5;&#x9019;&#x500B;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x5C07;&#x88AB;&#x89E3;&#x6790;&#x70BA;&#x7A7A;&#x3002;&#x5982;&#x679C;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x88AB;&#x89E3;&#x6790;&#x6210;&#x7A7A;&#x4E86;&#xFF0C;&#x51FD;&#x6578;&#x5C07;&#x8FD4;&#x56DE;&#x70BA;NaN&#x3002; https://juejin.im/post/5dbff8735188252ddb2fd25e [&apos;1&apos;, &apos;2&apos;, &apos;3&apos;].filter(parseInt) // [1]"},"array/fill.html":{"title":"Array fill","path":"\\javascript\\array\\fill.html","body":"fill 1 2 3 4 5 6 7 8 9 10 11 12 const array1 = [ 1 , 2 , 3 , 4 ]; // fill with 0 from position 2 until position 4 console .log(array1.fill( 0 , 2 , 4 )); // expected output: [1, 2, 0, 0] // fill with 5 from position 1 console .log(array1.fill( 5 , 1 )); // expected output: [1, 5, 5, 5] console .log(array1.fill( 6 )); // expected output: [6, 6, 6, 6] {1:200, 2:140, 5:400} 請將上面的數據格式轉換為 [200, 140, null, null, 400, null, null, null, null, null, null, null] ,其中數組的長度為12 1 2 3 4 5 6 const obj =  1 : 200 , 2 : 140 , 5 : 400 ; function translate ( obj )  return Object .assign( Array ( 13 ).fill( null ), obj).slice( 1 );  // 輸出 [200, 140, null, null, 400, null, null, null, null, null, null, null] console .log(translate(obj));"},"cases/replace.html":{"title":"replace","path":"\\javascript\\cases\\replace.html","body":"String.prototype.replace() 1 2 3 4 5 6 7 8 var str = 'x-x_' ; var retArr = []; str.replace( /(x_*)|(-)/g , function ( match, p1, p2 )  if (p1)  retArr.push( on : true , length : p1.length );  if (p2)  retArr.push( on : false , length : 1 );  ); console .log(retArr);"},"cases/if.html":{"title":"if else","path":"\\javascript\\cases\\if.html","body":"good programming patterns 三元運算符 Nested ternaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 let result = null ; if (conditionA)  if (conditionB)  result = \"A &amp; B\" ;  else  result = \"A\" ;   else  result = \"Not A\" ;  const result = !conditionA ? \"Not A\" : conditionB ? \"A &amp; B\" : \"A\" ; 1 2 3 4 5 6 var a = [ 0 ] if (a)  console .log( a == true )  else  console .log( \"done\" )  if 作為判斷數組有東西會過 但js怕比 [0] == true false"},"cases/math.html":{"title":"問題","path":"\\javascript\\cases\\math.html","body":"浮點數運算的坑 JavaScript 浮点数陷阱及解法 當你拿到 1.4000000000000001 這樣的數據要展示時，建議使用 toPrecision 湊整併 parseFloat 轉成數字後再顯示，如下： parseFloat(1.4000000000000001.toPrecision(12)) === 1.4 // True 百分比 轉 小數 問題 1 2 3 4 5 6 var a = 0.9 ; var b = a / 100 ; var c = parseFloat ( (a / 100 ).toPrecision( 12 )) console .log(b) // 0.009000000000000001 console .log(c) // 0.009 科學符號處理 npm from-exponential 1 2 3 4 5 6 7 8 span v-text= \"getPriceValue(order.itemPrice)\"  / span  import fromExponential from 'from-exponential' methods:  getPriceValue(value)  return fromExponential(value)   why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 這只是JavaScript遵循IEEE 754標準所產生的必然結果。IEEE 754標準中的浮點數並不能精確地表達小數（比如說0.1）， JavaScript中的小數採用的是雙精度(64位)表示的，由三部分組成：　符 + 階碼 + 尾數 IEEE 754 雙精度。六十四位中符號位佔一位，整數位佔十一位，其餘五十二位都為小數位。 因為浮點數隻有52位有效數字，從第53位開始，就舍入了。這樣就造成了“浮點數精度損失”問題。 因為 0.1 和 0.2 都是無限循環的二進制了，所以在小數位末尾處需要判斷是否進位（就和十進制的四捨五入一樣）。 計算機表示十進制是採用二進製表示的，所以 0.1 在二進製表示為 `0.1.toString(2) // “0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01” 小數的算法，是乘2 0.1 × 2 ￣￣￣￣ 0.2 → 取小數前的 0 0.2 × 2 ￣￣￣￣ 0.4 → 取小數前的 0 0.4 × 2 ￣￣￣￣ 0.8 → 取小數前的 0 0.8 × 2 ￣￣￣￣ 1.6 → 取小數前的 1 0.6 × 2 ￣￣￣￣ 1.2 → 取小數前的 1 0.2 × 2 ￣￣￣￣ 0.4 → 取小數前的 0 十進位 0.1 = 二進位 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 從上面可以看出，0.1的二進制格式是：0.0001100011….。這是一個二進制無限循環小數，但計算機內存有限，我們不能用儲存所有的小數位數。那麼在精度與內存間如何取捨呢？ 答案是： 在某個精度點直接捨棄 (第53位開始)。當然，代價就是，0.1在計算機內部根本就不是精確的0.1，而是一個有舍入誤差的0.1。當代碼被編譯或解釋後，0.1已經被四捨五入成一個與之很接近的計算機內部數字，以至於計算還沒開始，一個很小的舍入錯誤就已經產生了。這也就是 0.1 + 0.2 不等於0.3 的原因。 使用JavaScript內置的函數 toPrecision 或 toFixed 來保留一定的精度： (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true 不要相信js的計算 善用 math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"cases/math.html#浮點數運算的坑":{"title":"&#x6D6E;&#x9EDE;&#x6578;&#x904B;&#x7B97;&#x7684;&#x5751;","path":"\\javascript\\cases\\math.html#浮點數運算的坑","body":"JavaScript &#x6D6E;&#x70B9;&#x6570;&#x9677;&#x9631;&#x53CA;&#x89E3;&#x6CD5; &#x7576;&#x4F60;&#x62FF;&#x5230; 1.4000000000000001 &#x9019;&#x6A23;&#x7684;&#x6578;&#x64DA;&#x8981;&#x5C55;&#x793A;&#x6642;&#xFF0C;&#x5EFA;&#x8B70;&#x4F7F;&#x7528; toPrecision &#x6E4A;&#x6574;&#x4F75; parseFloat &#x8F49;&#x6210;&#x6578;&#x5B57;&#x5F8C;&#x518D;&#x986F;&#x793A;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; parseFloat(1.4000000000000001.toPrecision(12)) === 1.4 // True &#x767E;&#x5206;&#x6BD4; &#x8F49; &#x5C0F;&#x6578; &#x554F;&#x984C; 1 2 3 4 5 6 var a = 0.9 ; var b = a / 100 ; var c = parseFloat ( (a / 100 ).toPrecision( 12 )) console .log(b) // 0.009000000000000001 console .log(c) // 0.009 &#x79D1;&#x5B78;&#x7B26;&#x865F;&#x8655;&#x7406; npm from-exponential 1 2 3 4 5 6 7 8 span v-text= getPriceValue(order.itemPrice)  / span  import fromExponential from &apos;from-exponential&apos; methods: { getPriceValue(value) { return fromExponential(value) } } why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002;IEEE 754&#x6A19;&#x6E96;&#x4E2D;&#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"cases/math.html#科學符號處理":{"title":"&#x79D1;&#x5B78;&#x7B26;&#x865F;&#x8655;&#x7406;","path":"\\javascript\\cases\\math.html#科學符號處理","body":"npm from-exponential 1 2 3 4 5 6 7 8 span v-text= getPriceValue(order.itemPrice)  / span  import fromExponential from &apos;from-exponential&apos; methods: { getPriceValue(value) { return fromExponential(value) } } why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002;IEEE 754&#x6A19;&#x6E96;&#x4E2D;&#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"cases/math.html#why-0-1-0-2-0-3":{"title":"why 0.1 + 0.2 != 0.3","path":"\\javascript\\cases\\math.html#why-0-1-0-2-0-3","body":"0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002;IEEE 754&#x6A19;&#x6E96;&#x4E2D;&#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"cases/arr.html":{"title":"arrays","path":"\\javascript\\cases\\arr.html","body":"一个合格的中级前端工程师必须要掌握的 28 个 JavaScript 技巧 ###　 One loop two arrays https://jsbin.com/janoyunemu/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const exampleValues = [ 2 , 15 , 8 , 23 , 1 , 32 ]; const [truthyValues, falseyValues] = exampleValues.reduce( ( arrays, exampleValue ) =  if (exampleValue  10 )  arrays[ 0 ].push(exampleValue); return arrays;  arrays[ 1 ].push(exampleValue); return arrays; , [[], []]); console .log(truthyValues); // [15, 23, 32] console .log(falseyValues); // [2, 8, 1] 如何快速將一個字符串數組轉化為數字類型的數組 1 2 [ '1' , '2' , '3' ].map( parseFloat ) [ '1' , '2' , '3' ].map( Number ) [‘1’, ‘2’, ‘3’].map(parseInt)的輸出結果是什麼？ 1 2 3 4 [ '1' , '2' , '3' ].map( parseInt ) parseInt ( '1' , 0 ); // 用10進制轉換 parseInt ( '2' , 1 ); // 該參數小於 2 或者大於 36，則 parseInt() 將返回 NaN parseInt ( '3' , 2 ); // 這個字符串的第一個字符是“3”，它並不是基礎基數2的一個有效數字。所以這個子字符串將被解析為空。如果子字符串被解析成空了，函數將返回為NaN。"},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{"title":"&#x5982;&#x4F55;&#x5FEB;&#x901F;&#x5C07;&#x4E00;&#x500B;&#x5B57;&#x7B26;&#x4E32;&#x6578;&#x7D44;&#x8F49;&#x5316;&#x70BA;&#x6578;&#x5B57;&#x985E;&#x578B;&#x7684;&#x6578;&#x7D44;","path":"\\javascript\\cases\\arr.html#如何快速將一個字符串數組轉化為數字類型的數組","body":"1 2 [ &apos;1&apos; , &apos;2&apos; , &apos;3&apos; ].map( parseFloat ) [ &apos;1&apos; , &apos;2&apos; , &apos;3&apos; ].map( Number ) [&#x2018;1&#x2019;, &#x2018;2&#x2019;, &#x2018;3&#x2019;].map(parseInt)&#x7684;&#x8F38;&#x51FA;&#x7D50;&#x679C;&#x662F;&#x4EC0;&#x9EBC;&#xFF1F; 1 2 3 4 [ &apos;1&apos; , &apos;2&apos; , &apos;3&apos; ].map( parseInt ) parseInt ( &apos;1&apos; , 0 ); // &#x7528;10&#x9032;&#x5236;&#x8F49;&#x63DB; parseInt ( &apos;2&apos; , 1 ); // &#x8A72;&#x53C3;&#x6578;&#x5C0F;&#x65BC; 2 &#x6216;&#x8005;&#x5927;&#x65BC; 36&#xFF0C;&#x5247; parseInt() &#x5C07;&#x8FD4;&#x56DE; NaN parseInt ( &apos;3&apos; , 2 ); // &#x9019;&#x500B;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x7B2C;&#x4E00;&#x500B;&#x5B57;&#x7B26;&#x662F;&#x201C;3&#x201D;&#xFF0C;&#x5B83;&#x4E26;&#x4E0D;&#x662F;&#x57FA;&#x790E;&#x57FA;&#x6578;2&#x7684;&#x4E00;&#x500B;&#x6709;&#x6548;&#x6578;&#x5B57;&#x3002;&#x6240;&#x4EE5;&#x9019;&#x500B;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x5C07;&#x88AB;&#x89E3;&#x6790;&#x70BA;&#x7A7A;&#x3002;&#x5982;&#x679C;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x88AB;&#x89E3;&#x6790;&#x6210;&#x7A7A;&#x4E86;&#xFF0C;&#x51FD;&#x6578;&#x5C07;&#x8FD4;&#x56DE;&#x70BA;NaN&#x3002;"},"cases/delay.html":{"title":"Delay","path":"\\javascript\\cases\\delay.html","body":"延迟函数delay 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 const delay = ms = new Promise ( ( resolve, reject ) = setTimeout(resolve, ms)) const getData = status = new Promise ( ( resolve, reject ) =  status ? resolve( 'done' ) : reject( 'fail' ) ) const getRes = async (data) =  try  const res = await getData(data) const timestamp = new Date ().getTime() await delay( 1000 ) console .log(res, new Date ().getTime() - timestamp)  catch (error)  console .log(error)   getRes( true ) // 隔了1秒"},"cases/str.html":{"title":"String 類別","path":"\\javascript\\cases\\str.html","body":"String​.prototype​.toLower​Case() 1 2 3 4 5 function lowercase ( str )  return str.charAt( 0 ).toLowerCase() + str.slice( 1 );  console .log( lowercase( 'Hello' ) ) // \"hello\" String​.prototype​.replace() 1 2 3 4 var str = 'hello put world' ; var replaceStr = str.replace( /get|post|put|delete/ , \"\" ); console .log(replaceStr) // \"hello world\" url Array.join() 1 2 3 var url = 'http://3000' ; const link = [ \"'\" ,url, \"'\" ].join( '' ) console .log(link); // = \"'http://3000'\""},"cases/str.html#url":{"title":"url","path":"\\javascript\\cases\\str.html#url","body":"Array.join() 1 2 3 var url = &apos;http://3000&apos; ; const link = [ &apos; ,url, &apos; ].join( &apos;&apos; ) console .log(link); // = &apos;http://3000&apos;"},"function/factory​_factory.html":{"title":"factory function","path":"\\javascript\\function\\factory​_factory.html","body":"當一個函數返回一個對象時，我們稱之他為 工廠函數(factory function) 1 2 3 4 5 6 7 function createJelly ( )  return  type: 'jelly' , colour: 'red' scoops: 3 ;  每次我們調用這個工廠函數，它將返回一個新的 jelly（果凍） 對象實例。 要注意的重點是，我們不必在工廠函數名稱前面加上create，但它可以讓其他人更清楚函數的意圖。 對於type屬性也是如此，但通常它可以幫助我們區分我們程序的對象。 帶參數的工廠函數 通過參數來定義我們的工廠函數 （icecream 冰淇淋），這可以用來改變返回對象的模型。 1 2 3 4 5 6 7 function createIceCream ( flavour= 'Vanilla' )  return  type: 'icecream' , scoops: 3 , flavour   組合的工廠函數 在一個工廠函數中定義另一個工廠函數，可以幫助我們把複雜的工廠函數拆分成更小的，可重用的碎片。 例如，我們可以創建一個 dessert（甜點）工廠函數，通過前面的 jelly（果凍）和 icecream（冰淇淋）工廠函數來定義。 1 2 3 4 5 6 7 8 9 function createDessert ( )  return  type: 'dessert' , bowl: [ createJelly(), createIceCream() ] ;  對象可以用 has-a(具有) 關係而不是 is-a(是) 來表示。也就是說，可以用組合而不是繼承來實現。 例如，使用繼承。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // A trifle *is a* dessert 蛋糕*是*甜點 function Trifle ( )  Dessert.apply( this , arguments );  Trifle.prototype = Dessert.prototype; // 或者 class Trifle extends Dessert  constructor ()  super ();   我們可以用組合模式表達相同的意思。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // A trifle *has* layers of jelly, custard and cream. It also *has a* topping. // 蛋糕 *有* 果凍層，奶酪層和奶油層，頂部還 *有* 裝飾配料。 function createTrifle ( )  return  type: 'trifle' , layers: [ createJelly(), createCustard(), createCream() ], topping: createAlmonds() ;  異步的工廠函數 並非所有工廠都會立即返回數據。例如，有些必須先獲取數據。 在這些情況下，我們可以返回 Promises 來定義工廠函數。 1 2 3 4 5 6 7 8 9 10 11 12 function getMeal ( menuUrl )  return new Promise ( ( resolve, reject ) =  fetch(menuUrl) .then( result =  resolve( type: 'meal' , courses: result.json() ); ) .catch(reject); );  這種深度嵌套的縮進會使異步工廠難以閱讀和測試。 將它們分解成多個不同的工廠通常是有幫助的，可以使用如下編寫。 1 2 3 4 5 6 7 8 9 10 11 12 function getMeal ( menuUrl )  return fetch(menuUrl) .then( result = result.json()) .then( json = createMeal(json));  function createMeal ( courses=[] )  return  type: 'meal' , courses ;  當然，我們可以使用回調函數，但是我們已經有了 Promise.all 這樣的工具返回 Promises 來定義工廠函數。 1 2 3 4 5 6 7 8 9 10 11 function getWeeksMeals ( )  const menuUrl = 'jsfood.com/' ; return Promise .all([ getMeal( ` $menuUrl /monday` ), getMeal( ` $menuUrl /tuesday` ), getMeal( ` $menuUrl /wednesday` ), getMeal( ` $menuUrl /thursday` ), getMeal( ` $menuUrl /friday` ) ]);  我們使用 get 而不是 create 作為命名約定來顯示這些工廠做一些異步工作和返回promise。 到目前為止，我們還沒有看到任何工廠用方法返回對象，這是故意的。 這是因為一般來說，我們不需要這麼做。 工廠允許我們從計算中分離我們的數據。 這意味著我們總是能夠將對象序列化為JSON，這對於在會話之間持久化，通過HTTP或WebSockets發送它們，並將它們放入數據存儲很重要。 高級工廠 將工廠傳遞給高階函數，這將給我們帶來巨大的控制力。例如，我們可以使用這個概念來創建一個增強的對象。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function giveTimestamp ( factory )  return ( ...args ) =  const instance = factory(...args); const time = Date .now(); return  time, instance ; ;  const createOrder = giveTimestamp( function ( ingredients )  return  type: 'order' , ingredients ; ); 這個增強的對象採用一個現有工廠，並將其包裝以創建返回帶有 時間戳實例 的工廠。 使用這些簡單的構建塊使得我們的代碼更加友好，這絕對是我們應該關心的事情。 工廠鼓勵我們用原始數據來模擬複雜和異步數據，原始數據具有組合的自然能力，而不強迫我們去做一些高級抽象。當我們堅持簡單時，JavaScript更甜蜜！ 英文原文： https://www.sitepoint.com/factory-functions-javascript/"},"function/factory​_factory.html#組合的工廠函數":{"title":"&#x7D44;&#x5408;&#x7684;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;","path":"\\javascript\\function\\factory​_factory.html#組合的工廠函數","body":"&#x5728;&#x4E00;&#x500B;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#x4E2D;&#x5B9A;&#x7FA9;&#x53E6;&#x4E00;&#x500B;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#xFF0C;&#x53EF;&#x4EE5;&#x5E6B;&#x52A9;&#x6211;&#x5011;&#x628A;&#x8907;&#x96DC;&#x7684;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#x62C6;&#x5206;&#x6210;&#x66F4;&#x5C0F;&#x7684;&#xFF0C;&#x53EF;&#x91CD;&#x7528;&#x7684;&#x788E;&#x7247;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x5275;&#x5EFA;&#x4E00;&#x500B; dessert&#xFF08;&#x751C;&#x9EDE;&#xFF09;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#xFF0C;&#x901A;&#x904E;&#x524D;&#x9762;&#x7684; jelly&#xFF08;&#x679C;&#x51CD;&#xFF09;&#x548C; icecream&#xFF08;&#x51B0;&#x6DC7;&#x6DCB;&#xFF09;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#x4F86;&#x5B9A;&#x7FA9;&#x3002; 1 2 3 4 5 6 7 8 9 function createDessert ( ) { return { type: &apos;dessert&apos; , bowl: [ createJelly(), createIceCream() ] }; } &#x5C0D;&#x8C61;&#x53EF;&#x4EE5;&#x7528; has-a(&#x5177;&#x6709;) &#x95DC;&#x4FC2;&#x800C;&#x4E0D;&#x662F; is-a(&#x662F;) &#x4F86;&#x8868;&#x793A;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x7D44;&#x5408;&#x800C;&#x4E0D;&#x662F;&#x7E7C;&#x627F;&#x4F86;&#x5BE6;&#x73FE;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x4F7F;&#x7528;&#x7E7C;&#x627F;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // A trifle *is a* dessert &#x86CB;&#x7CD5;*&#x662F;*&#x751C;&#x9EDE; function Trifle ( ) { Dessert.apply( this , arguments ); } Trifle.prototype = Dessert.prototype; // &#x6216;&#x8005; class Trifle extends Dessert { constructor () { super (); } } &#x6211;&#x5011;&#x53EF;&#x4EE5;&#x7528;&#x7D44;&#x5408;&#x6A21;&#x5F0F;&#x8868;&#x9054;&#x76F8;&#x540C;&#x7684;&#x610F;&#x601D;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // A trifle *has* layers of jelly, custard and cream. It also *has a* topping. // &#x86CB;&#x7CD5; *&#x6709;* &#x679C;&#x51CD;&#x5C64;&#xFF0C;&#x5976;&#x916A;&#x5C64;&#x548C;&#x5976;&#x6CB9;&#x5C64;&#xFF0C;&#x9802;&#x90E8;&#x9084; *&#x6709;* &#x88DD;&#x98FE;&#x914D;&#x6599;&#x3002; function createTrifle ( ) { return { type: &apos;trifle&apos; , layers: [ createJelly(), createCustard(), createCream() ], topping: createAlmonds() }; } &#x7570;&#x6B65;&#x7684;&#x5DE5;&#x5EE0;&#x51FD;&#x6578; &#x4E26;&#x975E;&#x6240;&#x6709;&#x5DE5;&#x5EE0;&#x90FD;&#x6703;&#x7ACB;&#x5373;&#x8FD4;&#x56DE;&#x6578;&#x64DA;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x6709;&#x4E9B;&#x5FC5;&#x9808;&#x5148;&#x7372;&#x53D6;&#x6578;&#x64DA;&#x3002; &#x5728;&#x9019;&#x4E9B;&#x60C5;&#x6CC1;&#x4E0B;&#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x8FD4;&#x56DE; Promises &#x4F86;&#x5B9A;&#x7FA9;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 function getMeal ( menuUrl ) { return new Promise ( ( resolve, reject ) = { fetch(menuUrl) .then( result = { resolve({ type: &apos;meal&apos; , courses: result.json() }); }) .catch(reject); }); } &#x9019;&#x7A2E;&#x6DF1;&#x5EA6;&#x5D4C;&#x5957;&#x7684;&#x7E2E;&#x9032;&#x6703;&#x4F7F;&#x7570;&#x6B65;&#x5DE5;&#x5EE0;&#x96E3;&#x4EE5;&#x95B1;&#x8B80;&#x548C;&#x6E2C;&#x8A66;&#x3002; &#x5C07;&#x5B83;&#x5011;&#x5206;&#x89E3;&#x6210;&#x591A;&#x500B;&#x4E0D;&#x540C;&#x7684;&#x5DE5;&#x5EE0;&#x901A;&#x5E38;&#x662F;&#x6709;&#x5E6B;&#x52A9;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5982;&#x4E0B;&#x7DE8;&#x5BEB;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 function getMeal ( menuUrl ) { return fetch(menuUrl) .then( result = result.json()) .then( json = createMeal(json)); } function createMeal ( courses=[] ) { return { type: &apos;meal&apos; , courses }; } &#x7576;&#x7136;&#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x56DE;&#x8ABF;&#x51FD;&#x6578;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x5011;&#x5DF2;&#x7D93;&#x6709;&#x4E86; Promise.all &#x9019;&#x6A23;&#x7684;&#x5DE5;&#x5177;&#x8FD4;&#x56DE; Promises &#x4F86;&#x5B9A;&#x7FA9;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 function getWeeksMeals ( ) { const menuUrl = &apos;jsfood.com/&apos; ; return Promise .all([ getMeal( ` ${menuUrl} /monday` ), getMeal( ` ${menuUrl} /tuesday` ), getMeal( ` ${menuUrl} /wednesday` ), getMeal( ` ${menuUrl} /thursday` ), getMeal( ` ${menuUrl} /friday` ) ]); } &#x6211;&#x5011;&#x4F7F;&#x7528; get &#x800C;&#x4E0D;&#x662F; create &#x4F5C;&#x70BA;&#x547D;&#x540D;&#x7D04;&#x5B9A;&#x4F86;&#x986F;&#x793A;&#x9019;&#x4E9B;&#x5DE5;&#x5EE0;&#x505A;&#x4E00;&#x4E9B;&#x7570;&#x6B65;&#x5DE5;&#x4F5C;&#x548C;&#x8FD4;&#x56DE;promise&#x3002; &#x5230;&#x76EE;&#x524D;&#x70BA;&#x6B62;&#xFF0C;&#x6211;&#x5011;&#x9084;&#x6C92;&#x6709;&#x770B;&#x5230;&#x4EFB;&#x4F55;&#x5DE5;&#x5EE0;&#x7528;&#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x5C0D;&#x8C61;&#xFF0C;&#x9019;&#x662F;&#x6545;&#x610F;&#x7684;&#x3002; &#x9019;&#x662F;&#x56E0;&#x70BA;&#x4E00;&#x822C;&#x4F86;&#x8AAA;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x9700;&#x8981;&#x9019;&#x9EBC;&#x505A;&#x3002; &#x5DE5;&#x5EE0;&#x5141;&#x8A31;&#x6211;&#x5011;&#x5F9E;&#x8A08;&#x7B97;&#x4E2D;&#x5206;&#x96E2;&#x6211;&#x5011;&#x7684;&#x6578;&#x64DA;&#x3002; &#x9019;&#x610F;&#x5473;&#x8457;&#x6211;&#x5011;&#x7E3D;&#x662F;&#x80FD;&#x5920;&#x5C07;&#x5C0D;&#x8C61;&#x5E8F;&#x5217;&#x5316;&#x70BA;JSON&#xFF0C;&#x9019;&#x5C0D;&#x65BC;&#x5728;&#x6703;&#x8A71;&#x4E4B;&#x9593;&#x6301;&#x4E45;&#x5316;&#xFF0C;&#x901A;&#x904E;HTTP&#x6216;WebSockets&#x767C;&#x9001;&#x5B83;&#x5011;&#xFF0C;&#x4E26;&#x5C07;&#x5B83;&#x5011;&#x653E;&#x5165;&#x6578;&#x64DA;&#x5B58;&#x5132;&#x5F88;&#x91CD;&#x8981;&#x3002; &#x9AD8;&#x7D1A;&#x5DE5;&#x5EE0; &#x5C07;&#x5DE5;&#x5EE0;&#x50B3;&#x905E;&#x7D66;&#x9AD8;&#x968E;&#x51FD;&#x6578;&#xFF0C;&#x9019;&#x5C07;&#x7D66;&#x6211;&#x5011;&#x5E36;&#x4F86;&#x5DE8;&#x5927;&#x7684;&#x63A7;&#x5236;&#x529B;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x9019;&#x500B;&#x6982;&#x5FF5;&#x4F86;&#x5275;&#x5EFA;&#x4E00;&#x500B;&#x589E;&#x5F37;&#x7684;&#x5C0D;&#x8C61;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function giveTimestamp ( factory ) { return ( ...args ) = { const instance = factory(...args); const time = Date .now(); return { time, instance }; }; } const createOrder = giveTimestamp( function ( ingredients ) { return { type: &apos;order&apos; , ingredients }; }); &#x9019;&#x500B;&#x589E;&#x5F37;&#x7684;&#x5C0D;&#x8C61;&#x63A1;&#x7528;&#x4E00;&#x500B;&#x73FE;&#x6709;&#x5DE5;&#x5EE0;&#xFF0C;&#x4E26;&#x5C07;&#x5176;&#x5305;&#x88DD;&#x4EE5;&#x5275;&#x5EFA;&#x8FD4;&#x56DE;&#x5E36;&#x6709; &#x6642;&#x9593;&#x6233;&#x5BE6;&#x4F8B; &#x7684;&#x5DE5;&#x5EE0;&#x3002; &#x4F7F;&#x7528;&#x9019;&#x4E9B;&#x7C21;&#x55AE;&#x7684;&#x69CB;&#x5EFA;&#x584A;&#x4F7F;&#x5F97;&#x6211;&#x5011;&#x7684;&#x4EE3;&#x78BC;&#x66F4;&#x52A0;&#x53CB;&#x597D;&#xFF0C;&#x9019;&#x7D55;&#x5C0D;&#x662F;&#x6211;&#x5011;&#x61C9;&#x8A72;&#x95DC;&#x5FC3;&#x7684;&#x4E8B;&#x60C5;&#x3002; &#x5DE5;&#x5EE0;&#x9F13;&#x52F5;&#x6211;&#x5011;&#x7528;&#x539F;&#x59CB;&#x6578;&#x64DA;&#x4F86;&#x6A21;&#x64EC;&#x8907;&#x96DC;&#x548C;&#x7570;&#x6B65;&#x6578;&#x64DA;&#xFF0C;&#x539F;&#x59CB;&#x6578;&#x64DA;&#x5177;&#x6709;&#x7D44;&#x5408;&#x7684;&#x81EA;&#x7136;&#x80FD;&#x529B;&#xFF0C;&#x800C;&#x4E0D;&#x5F37;&#x8FEB;&#x6211;&#x5011;&#x53BB;&#x505A;&#x4E00;&#x4E9B;&#x9AD8;&#x7D1A;&#x62BD;&#x8C61;&#x3002;&#x7576;&#x6211;&#x5011;&#x5805;&#x6301;&#x7C21;&#x55AE;&#x6642;&#xFF0C;JavaScript&#x66F4;&#x751C;&#x871C;&#xFF01; &#x82F1;&#x6587;&#x539F;&#x6587;&#xFF1A; https://www.sitepoint.com/factory-functions-javascript/"},"global/promise.html":{"title":"Promise","path":"\\javascript\\global\\promise.html","body":"Promise 是一個表示非同步運算的最終完成或失敗的物件。 Promise 對象在異步操作後可對其完成或失敗進行回調，並展示其結果值。 以下代碼片斷是一個 Promise 的示例：100ms 後使用標準輸出流打印出 result 字符串。 此外請注意 catch ，他可以用於錯誤處理。Promise 是 鏈式的 。 1 2 3 4 5 new Promise ( ( resolve, reject ) =  setTimeout( () =  resolve( \"result\" ) , 100 ) ).then( console .log).catch( console .error) // result Promise 有哪些狀態？ Promise 對象用於表示一個異步操作的最終狀態（完成或失敗）及其返回值。他有以下幾種狀態： pending ：初始狀態，完成或失敗狀態的前一個狀態 fulfilled ：操作成功完成 rejected ：操作失敗 pending 狀態的 Promise 對象會觸發 fulfilled/rejected 狀態，在其狀態處理方法中可以傳入參數 / 失敗信息。 當操作成功完成時，Promise 對象的 then 方法就會被調用；否則就會觸發 catch 。如： 1 2 3 4 5 6 7 8 9 const myFirstPromise = new Promise ( ( resolve, reject ) =  setTimeout( function ( )  resolve( \"成功!\" ); , 250 ); ); myFirstPromise.then( ( data ) =  console .log( \"完成!\" + data); ).catch( ( e ) = ...); Promise​.all() Promise​.all() 1 2 3 4 5 6 7 8 9 var p1 = Promise .resolve( 3 ); var p2 = 1337 ; var p3 = new Promise ( ( resolve, reject ) =  setTimeout(resolve, 100 , 'foo' ); ); Promise .all([p1, p2, p3]).then( values =  console .log(values); // [3, 1337, \"foo\"] ); examples https://jsbin.com/zosebomeko/edit?js,console,output 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 /* * 依照 tasks 順序 console 出 a, b, c */ const a = callback =  setTimeout( () =  callback( 'a' ); , 500 ); ; const b = callback =  setTimeout( () =  callback( 'b' ); , 200 ); ; const c = callback =  setTimeout( () =  callback( 'c' ); , 300 ); ; const tasks = [a, b, c]; const doByOrder = ( tasks, callback ) =  // implement here tasks = tasks.map( function ( task )  return new Promise ( ( resolve, reject ) =  task(resolve); ); ); const ansArr = []; let t = tasks[ 0 ]; for ( let i = 0 ; i  tasks.length; ++i)  t = t.then( p =  ansArr.push(p); //等待所有setTimeout callback function執行完畢才執行 if (i === tasks.length - 1 )  return callback(ansArr);  return tasks[i + 1 ]; //tasks[1] tasks[2] );  ; doByOrder(tasks, console .log.bind( console )); // expect to be [\"a\", \"b\", \"c\"] 事件循環：javascript的執行規則裡面有個 事件循環Event Loot 的規則 在事件循環中，異步事件會放到異步隊列裡面， 但是異步隊列裡面又分為宏任務和微任務， 瀏覽器端的 宏任務一般有： script標籤,setTimeout,setInterval,setImmediate,requestAnimationFrame 微任務有： MutationObserver,Promise.then catch finally 宏任務會阻塞瀏覽器的渲染進程，微任務會在宏任務結束後立即執行，在渲染之前。 在不使用 async/await 的情況下，順序執行一組異步代碼函數，並輸出最後的結果。 Promise.race() References 把setTimeout包裝成Promise、等待所有setTimout的callback function執行完程式流程才往下執行 promise經典面試題"},"global/date.html":{"title":"Date","path":"\\javascript\\global\\date.html","body":"Date 建立 Date 物件的方式： 1 2 3 4 5 var today = new Date (); var birthday = new Date ( 'December 17, 1995 03:24:00' ); var birthday = new Date ( '1995-12-17T03:24:00' ); var birthday = new Date ( 1995 , 11 , 17 ); var birthday = new Date ( 1995 , 11 , 17 , 3 , 24 , 0 ); Date.prototype.toISOString() 國際標準 ISO 8601 ，是國際標準化組織的日期和時間的表示方法 1 2 3 4 5 6 7 const d = new Date (); const today = d.toISOString().substring( 0 , 10 ); console .log(today) // \"yyyy-mm-dd\" format. 2020-05-25 let sevenDaysAgo = d.setDate(d.getDate() - 7 ); sevenDaysAgo = new Date (sevenDaysAgo).toISOString().substring( 0 , 10 );; console .log(sevenDaysAgo) // 2020-05-18"},"global/date.html#Date-prototype-toISOString":{"title":"Date.prototype.toISOString()","path":"\\javascript\\global\\date.html#Date-prototype-toISOString","body":"&#x570B;&#x969B;&#x6A19;&#x6E96; ISO 8601 &#xFF0C;&#x662F;&#x570B;&#x969B;&#x6A19;&#x6E96;&#x5316;&#x7D44;&#x7E54;&#x7684;&#x65E5;&#x671F;&#x548C;&#x6642;&#x9593;&#x7684;&#x8868;&#x793A;&#x65B9;&#x6CD5; 1 2 3 4 5 6 7 const d = new Date (); const today = d.toISOString().substring( 0 , 10 ); console .log(today) // yyyy-mm-dd format. 2020-05-25 let sevenDaysAgo = d.setDate(d.getDate() - 7 ); sevenDaysAgo = new Date (sevenDaysAgo).toISOString().substring( 0 , 10 );; console .log(sevenDaysAgo) // 2020-05-18"},"http/caching.html":{"title":"HTTP 緩存","path":"\\javascript\\http\\caching.html","body":"HTTP 緩存分為 2 種，一種是強緩存，另一種是協商緩存。 主要作用是可以加快資源獲取速度，提升用戶體驗，減少網絡傳輸，緩解服務端的壓力。 這是緩存運作的一個整體流程圖： 強緩存 不需要發送請求到服務端，直接讀取瀏覽器本地緩存，在 Chrome 的 Network 中顯示的 HTTP 狀態碼是 200 ，在 Chrome 中，強緩存又分為 Disk Cache (存放在硬盤中)和 Memory Cache (存放在內存中)，存放的位置是由瀏覽器控制的。 是否強緩存由 Expires 、 Cache-Control 和 Pragma 3 個 Header 屬性共同來控制。 Expires Expires 的值是一個 HTTP 日期 ，在瀏覽器發起請求時，會根據系統時間和 Expires 的值進行比較，如果系統時間超過了 Expires 的值，緩存失效。由於和系統時間進行比較，所以當系統時間和服務器時間不一致的時候，會有緩存有效期不准的問題。Expires 的優先級在三個 Header 屬性中是最低的。 Cache-Control Cache-Control 是 HTTP/1.1 中新增的屬性，在請求頭和響應頭中都可以使用，常用的屬性值如有： max-age：單位是秒，緩存時間計算的方式是距離發起的時間的秒數，超過間隔的秒數緩存失效 no-cache ：不使用強緩存，需要與服務器驗證緩存是否新鮮 no-store ：禁止使用緩存（包括協商緩存），每次都向服務器請求最新的資源 private：專用於個人的緩存，中間代理、CDN 等不能緩存此響應 public：響應可以被中間代理、CDN 等緩存 must-revalidate：在緩存過期前可以使用，過期後必須向服務器驗證 ###　驗證強緩存 本地通過 express 起一個服務來驗證強緩存的 3 個屬性，代碼如下： 1 2 3 4 5 6 7 8 9 10 11 const express = require ( 'express' ); const app = express(); var options =  etag: false , // 禁用協商緩存 lastModified: false , // 禁用協商緩存 setHeaders: ( res, path, stat ) =  res.set( 'Cache-Control' , 'max-age=10' ); // 強緩存超時時間為10秒 , ; app.use(express.static((__dirname + '/public' ), options)); app.listen( 3000 ); 第一次加載，頁面會向服務器請求數據，並在 Response Header 中添加 Cache-Control ，過期時間為 10 秒。 第二次加載，Date 頭屬性未更新，可以看到瀏覽器直接使用了強緩存，實際沒有發送請求。 過了 10 秒的超時時間之後，再次請求資源： 當 Pragma 和 Cache-Control 同時存在的時候，Pragma 的優先級高於 Cache-Control。 Headers  Response Headers  Cache-Control: max-age=10 / Pragma: no-cache Pragma Pragma 只有一個屬性值，就是 no-cache ，效果和 Cache-Control 中的 no-cache 一致，不使用強緩存，需要與服務器驗證緩存是否新鮮，在 3 個頭部屬性中的優先級最高。 協商緩存 當瀏覽器的強緩存失效的時候或者請求頭中設置了不走強緩存，並且在請求頭中設置了If-Modified-Since 或者 If-None-Match 的時候，會將這兩個屬性值到服務端去驗證是否命中協商緩存，如果命中了協商緩存，會返回 304 狀態，加載瀏覽器緩存，並且響應頭會設置 Last-Modified 或者 ETag 屬性。 ETag/If-None-Match ETag/If-None-Match 的值是 一串 hash 碼 ，代表的是 一個資源的標識 符，當服務端的文件變化的時候，它的 hash碼會隨之改變，通過請求頭中的 If-None-Match 和當前文件的 hash 值進行比較，如果相等則表示命中協商緩存。ETag 又有強弱校驗之分，如果 hash 碼是以 “W/“ 開頭的一串字符串，說明此時協商緩存的校驗是弱校驗的，只有服務器上的文件差異（根據 ETag 計算方式來決定）達到能夠觸發 hash 值後綴變化的時候，才會真正地請求資源，否則返回 304 並加載瀏覽器緩存。 Last-Modified/If-Modified-Since Last-Modified/If-Modified-Since 的值代表的是 文件的最後修改時間 ，第一次請求服務端會把資源的最後修改時間放到 Last-Modified 響應頭中，第二次發起請求的時候，請求頭會帶上上一次響應頭中的 Last-Modified 的時間，並放到 If-Modified-Since 請求頭屬性中，服務端根據文件最後一次修改時間和 If-Modified-Since 的值進行比較，如果相等，返回 304 ，並加載瀏覽器緩存。 ###　驗證協商緩存 本地通過 express 起一個服務來驗證協商緩存，代碼如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const express = require ( 'express' ); const app = express(); var options =  etag: true , // 開啟協商緩存 lastModified: true , // 開啟協商緩存 setHeaders: ( res, path, stat ) =  res.set( 'Cache-Control' : 'max-age=00' , // 瀏覽器不走強緩存 'Pragma' : 'no-cache' , // 瀏覽器不走強緩存 ); , ; app.use(express.static((__dirname + '/public' ), options)); app.listen( 3001 ); 第二次請求資源，服務端根據請求頭中的 If-Modified-Since 和 If-None-Match 驗證文件是否修改。 Tag/If-None-Match 的出現主要解決了 Last-Modified/If-Modified-Since 所解決不了的問題： 如果文件的修改頻率在秒級以下，Last-Modified/If-Modified-Since 會錯誤地返回 304 如果文件被修改了，但是內容沒有任何變化的時候，Last-Modified/If-Modified-Since 會錯誤地返回 304 References HTTP caching 圖解 HTTP 緩存"},"http/caching.html#強緩存":{"title":"&#x5F37;&#x7DE9;&#x5B58;","path":"\\javascript\\http\\caching.html#強緩存","body":"&#x4E0D;&#x9700;&#x8981;&#x767C;&#x9001;&#x8ACB;&#x6C42;&#x5230;&#x670D;&#x52D9;&#x7AEF;&#xFF0C;&#x76F4;&#x63A5;&#x8B80;&#x53D6;&#x700F;&#x89BD;&#x5668;&#x672C;&#x5730;&#x7DE9;&#x5B58;&#xFF0C;&#x5728; Chrome &#x7684; Network &#x4E2D;&#x986F;&#x793A;&#x7684; HTTP &#x72C0;&#x614B;&#x78BC;&#x662F; 200 &#xFF0C;&#x5728; Chrome &#x4E2D;&#xFF0C;&#x5F37;&#x7DE9;&#x5B58;&#x53C8;&#x5206;&#x70BA; Disk Cache (&#x5B58;&#x653E;&#x5728;&#x786C;&#x76E4;&#x4E2D;)&#x548C; Memory Cache (&#x5B58;&#x653E;&#x5728;&#x5167;&#x5B58;&#x4E2D;)&#xFF0C;&#x5B58;&#x653E;&#x7684;&#x4F4D;&#x7F6E;&#x662F;&#x7531;&#x700F;&#x89BD;&#x5668;&#x63A7;&#x5236;&#x7684;&#x3002; &#x662F;&#x5426;&#x5F37;&#x7DE9;&#x5B58;&#x7531; Expires &#x3001; Cache-Control &#x548C; Pragma 3 &#x500B; Header &#x5C6C;&#x6027;&#x5171;&#x540C;&#x4F86;&#x63A7;&#x5236;&#x3002; Expires Expires &#x7684;&#x503C;&#x662F;&#x4E00;&#x500B; HTTP &#x65E5;&#x671F; &#xFF0C;&#x5728;&#x700F;&#x89BD;&#x5668;&#x767C;&#x8D77;&#x8ACB;&#x6C42;&#x6642;&#xFF0C;&#x6703;&#x6839;&#x64DA;&#x7CFB;&#x7D71;&#x6642;&#x9593;&#x548C; Expires &#x7684;&#x503C;&#x9032;&#x884C;&#x6BD4;&#x8F03;&#xFF0C;&#x5982;&#x679C;&#x7CFB;&#x7D71;&#x6642;&#x9593;&#x8D85;&#x904E;&#x4E86; Expires &#x7684;&#x503C;&#xFF0C;&#x7DE9;&#x5B58;&#x5931;&#x6548;&#x3002;&#x7531;&#x65BC;&#x548C;&#x7CFB;&#x7D71;&#x6642;&#x9593;&#x9032;&#x884C;&#x6BD4;&#x8F03;&#xFF0C;&#x6240;&#x4EE5;&#x7576;&#x7CFB;&#x7D71;&#x6642;&#x9593;&#x548C;&#x670D;&#x52D9;&#x5668;&#x6642;&#x9593;&#x4E0D;&#x4E00;&#x81F4;&#x7684;&#x6642;&#x5019;&#xFF0C;&#x6703;&#x6709;&#x7DE9;&#x5B58;&#x6709;&#x6548;&#x671F;&#x4E0D;&#x51C6;&#x7684;&#x554F;&#x984C;&#x3002;Expires &#x7684;&#x512A;&#x5148;&#x7D1A;&#x5728;&#x4E09;&#x500B; Header &#x5C6C;&#x6027;&#x4E2D;&#x662F;&#x6700;&#x4F4E;&#x7684;&#x3002; Cache-Control Cache-Control &#x662F; HTTP/1.1 &#x4E2D;&#x65B0;&#x589E;&#x7684;&#x5C6C;&#x6027;&#xFF0C;&#x5728;&#x8ACB;&#x6C42;&#x982D;&#x548C;&#x97FF;&#x61C9;&#x982D;&#x4E2D;&#x90FD;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#xFF0C;&#x5E38;&#x7528;&#x7684;&#x5C6C;&#x6027;&#x503C;&#x5982;&#x6709;&#xFF1A; max-age&#xFF1A;&#x55AE;&#x4F4D;&#x662F;&#x79D2;&#xFF0C;&#x7DE9;&#x5B58;&#x6642;&#x9593;&#x8A08;&#x7B97;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x8DDD;&#x96E2;&#x767C;&#x8D77;&#x7684;&#x6642;&#x9593;&#x7684;&#x79D2;&#x6578;&#xFF0C;&#x8D85;&#x904E;&#x9593;&#x9694;&#x7684;&#x79D2;&#x6578;&#x7DE9;&#x5B58;&#x5931;&#x6548; no-cache &#xFF1A;&#x4E0D;&#x4F7F;&#x7528;&#x5F37;&#x7DE9;&#x5B58;&#xFF0C;&#x9700;&#x8981;&#x8207;&#x670D;&#x52D9;&#x5668;&#x9A57;&#x8B49;&#x7DE9;&#x5B58;&#x662F;&#x5426;&#x65B0;&#x9BAE; no-store &#xFF1A;&#x7981;&#x6B62;&#x4F7F;&#x7528;&#x7DE9;&#x5B58;&#xFF08;&#x5305;&#x62EC;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#xFF09;&#xFF0C;&#x6BCF;&#x6B21;&#x90FD;&#x5411;&#x670D;&#x52D9;&#x5668;&#x8ACB;&#x6C42;&#x6700;&#x65B0;&#x7684;&#x8CC7;&#x6E90; private&#xFF1A;&#x5C08;&#x7528;&#x65BC;&#x500B;&#x4EBA;&#x7684;&#x7DE9;&#x5B58;&#xFF0C;&#x4E2D;&#x9593;&#x4EE3;&#x7406;&#x3001;CDN &#x7B49;&#x4E0D;&#x80FD;&#x7DE9;&#x5B58;&#x6B64;&#x97FF;&#x61C9; public&#xFF1A;&#x97FF;&#x61C9;&#x53EF;&#x4EE5;&#x88AB;&#x4E2D;&#x9593;&#x4EE3;&#x7406;&#x3001;CDN &#x7B49;&#x7DE9;&#x5B58; must-revalidate&#xFF1A;&#x5728;&#x7DE9;&#x5B58;&#x904E;&#x671F;&#x524D;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#xFF0C;&#x904E;&#x671F;&#x5F8C;&#x5FC5;&#x9808;&#x5411;&#x670D;&#x52D9;&#x5668;&#x9A57;&#x8B49; ###&#x3000;&#x9A57;&#x8B49;&#x5F37;&#x7DE9;&#x5B58; &#x672C;&#x5730;&#x901A;&#x904E; express &#x8D77;&#x4E00;&#x500B;&#x670D;&#x52D9;&#x4F86;&#x9A57;&#x8B49;&#x5F37;&#x7DE9;&#x5B58;&#x7684; 3 &#x500B;&#x5C6C;&#x6027;&#xFF0C;&#x4EE3;&#x78BC;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 const express = require ( &apos;express&apos; ); const app = express(); var options = { etag: false , // &#x7981;&#x7528;&#x5354;&#x5546;&#x7DE9;&#x5B58; lastModified: false , // &#x7981;&#x7528;&#x5354;&#x5546;&#x7DE9;&#x5B58; setHeaders: ( res, path, stat ) = { res.set( &apos;Cache-Control&apos; , &apos;max-age=10&apos; ); // &#x5F37;&#x7DE9;&#x5B58;&#x8D85;&#x6642;&#x6642;&#x9593;&#x70BA;10&#x79D2; }, }; app.use(express.static((__dirname + &apos;/public&apos; ), options)); app.listen( 3000 ); &#x7B2C;&#x4E00;&#x6B21;&#x52A0;&#x8F09;&#xFF0C;&#x9801;&#x9762;&#x6703;&#x5411;&#x670D;&#x52D9;&#x5668;&#x8ACB;&#x6C42;&#x6578;&#x64DA;&#xFF0C;&#x4E26;&#x5728; Response Header &#x4E2D;&#x6DFB;&#x52A0; Cache-Control &#xFF0C;&#x904E;&#x671F;&#x6642;&#x9593;&#x70BA; 10 &#x79D2;&#x3002; &#x7B2C;&#x4E8C;&#x6B21;&#x52A0;&#x8F09;&#xFF0C;Date &#x982D;&#x5C6C;&#x6027;&#x672A;&#x66F4;&#x65B0;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x700F;&#x89BD;&#x5668;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x4E86;&#x5F37;&#x7DE9;&#x5B58;&#xFF0C;&#x5BE6;&#x969B;&#x6C92;&#x6709;&#x767C;&#x9001;&#x8ACB;&#x6C42;&#x3002; &#x904E;&#x4E86; 10 &#x79D2;&#x7684;&#x8D85;&#x6642;&#x6642;&#x9593;&#x4E4B;&#x5F8C;&#xFF0C;&#x518D;&#x6B21;&#x8ACB;&#x6C42;&#x8CC7;&#x6E90;&#xFF1A; &#x7576; Pragma &#x548C; Cache-Control &#x540C;&#x6642;&#x5B58;&#x5728;&#x7684;&#x6642;&#x5019;&#xFF0C;Pragma &#x7684;&#x512A;&#x5148;&#x7D1A;&#x9AD8;&#x65BC; Cache-Control&#x3002; Headers  Response Headers  Cache-Control: max-age=10 / Pragma: no-cache Pragma Pragma &#x53EA;&#x6709;&#x4E00;&#x500B;&#x5C6C;&#x6027;&#x503C;&#xFF0C;&#x5C31;&#x662F; no-cache &#xFF0C;&#x6548;&#x679C;&#x548C; Cache-Control &#x4E2D;&#x7684; no-cache &#x4E00;&#x81F4;&#xFF0C;&#x4E0D;&#x4F7F;&#x7528;&#x5F37;&#x7DE9;&#x5B58;&#xFF0C;&#x9700;&#x8981;&#x8207;&#x670D;&#x52D9;&#x5668;&#x9A57;&#x8B49;&#x7DE9;&#x5B58;&#x662F;&#x5426;&#x65B0;&#x9BAE;&#xFF0C;&#x5728; 3 &#x500B;&#x982D;&#x90E8;&#x5C6C;&#x6027;&#x4E2D;&#x7684;&#x512A;&#x5148;&#x7D1A;&#x6700;&#x9AD8;&#x3002;"},"http/caching.html#協商緩存":{"title":"&#x5354;&#x5546;&#x7DE9;&#x5B58;","path":"\\javascript\\http\\caching.html#協商緩存","body":"&#x7576;&#x700F;&#x89BD;&#x5668;&#x7684;&#x5F37;&#x7DE9;&#x5B58;&#x5931;&#x6548;&#x7684;&#x6642;&#x5019;&#x6216;&#x8005;&#x8ACB;&#x6C42;&#x982D;&#x4E2D;&#x8A2D;&#x7F6E;&#x4E86;&#x4E0D;&#x8D70;&#x5F37;&#x7DE9;&#x5B58;&#xFF0C;&#x4E26;&#x4E14;&#x5728;&#x8ACB;&#x6C42;&#x982D;&#x4E2D;&#x8A2D;&#x7F6E;&#x4E86;If-Modified-Since &#x6216;&#x8005; If-None-Match &#x7684;&#x6642;&#x5019;&#xFF0C;&#x6703;&#x5C07;&#x9019;&#x5169;&#x500B;&#x5C6C;&#x6027;&#x503C;&#x5230;&#x670D;&#x52D9;&#x7AEF;&#x53BB;&#x9A57;&#x8B49;&#x662F;&#x5426;&#x547D;&#x4E2D;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#xFF0C;&#x5982;&#x679C;&#x547D;&#x4E2D;&#x4E86;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#xFF0C;&#x6703;&#x8FD4;&#x56DE; 304 &#x72C0;&#x614B;&#xFF0C;&#x52A0;&#x8F09;&#x700F;&#x89BD;&#x5668;&#x7DE9;&#x5B58;&#xFF0C;&#x4E26;&#x4E14;&#x97FF;&#x61C9;&#x982D;&#x6703;&#x8A2D;&#x7F6E; Last-Modified &#x6216;&#x8005; ETag &#x5C6C;&#x6027;&#x3002; ETag/If-None-Match ETag/If-None-Match &#x7684;&#x503C;&#x662F; &#x4E00;&#x4E32; hash &#x78BC; &#xFF0C;&#x4EE3;&#x8868;&#x7684;&#x662F; &#x4E00;&#x500B;&#x8CC7;&#x6E90;&#x7684;&#x6A19;&#x8B58; &#x7B26;&#xFF0C;&#x7576;&#x670D;&#x52D9;&#x7AEF;&#x7684;&#x6587;&#x4EF6;&#x8B8A;&#x5316;&#x7684;&#x6642;&#x5019;&#xFF0C;&#x5B83;&#x7684; hash&#x78BC;&#x6703;&#x96A8;&#x4E4B;&#x6539;&#x8B8A;&#xFF0C;&#x901A;&#x904E;&#x8ACB;&#x6C42;&#x982D;&#x4E2D;&#x7684; If-None-Match &#x548C;&#x7576;&#x524D;&#x6587;&#x4EF6;&#x7684; hash &#x503C;&#x9032;&#x884C;&#x6BD4;&#x8F03;&#xFF0C;&#x5982;&#x679C;&#x76F8;&#x7B49;&#x5247;&#x8868;&#x793A;&#x547D;&#x4E2D;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#x3002;ETag &#x53C8;&#x6709;&#x5F37;&#x5F31;&#x6821;&#x9A57;&#x4E4B;&#x5206;&#xFF0C;&#x5982;&#x679C; hash &#x78BC;&#x662F;&#x4EE5; &#x201C;W/&#x201C; &#x958B;&#x982D;&#x7684;&#x4E00;&#x4E32;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x8AAA;&#x660E;&#x6B64;&#x6642;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#x7684;&#x6821;&#x9A57;&#x662F;&#x5F31;&#x6821;&#x9A57;&#x7684;&#xFF0C;&#x53EA;&#x6709;&#x670D;&#x52D9;&#x5668;&#x4E0A;&#x7684;&#x6587;&#x4EF6;&#x5DEE;&#x7570;&#xFF08;&#x6839;&#x64DA; ETag &#x8A08;&#x7B97;&#x65B9;&#x5F0F;&#x4F86;&#x6C7A;&#x5B9A;&#xFF09;&#x9054;&#x5230;&#x80FD;&#x5920;&#x89F8;&#x767C; hash &#x503C;&#x5F8C;&#x7DB4;&#x8B8A;&#x5316;&#x7684;&#x6642;&#x5019;&#xFF0C;&#x624D;&#x6703;&#x771F;&#x6B63;&#x5730;&#x8ACB;&#x6C42;&#x8CC7;&#x6E90;&#xFF0C;&#x5426;&#x5247;&#x8FD4;&#x56DE; 304 &#x4E26;&#x52A0;&#x8F09;&#x700F;&#x89BD;&#x5668;&#x7DE9;&#x5B58;&#x3002; Last-Modified/If-Modified-Since Last-Modified/If-Modified-Since &#x7684;&#x503C;&#x4EE3;&#x8868;&#x7684;&#x662F; &#x6587;&#x4EF6;&#x7684;&#x6700;&#x5F8C;&#x4FEE;&#x6539;&#x6642;&#x9593; &#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x8ACB;&#x6C42;&#x670D;&#x52D9;&#x7AEF;&#x6703;&#x628A;&#x8CC7;&#x6E90;&#x7684;&#x6700;&#x5F8C;&#x4FEE;&#x6539;&#x6642;&#x9593;&#x653E;&#x5230; Last-Modified &#x97FF;&#x61C9;&#x982D;&#x4E2D;&#xFF0C;&#x7B2C;&#x4E8C;&#x6B21;&#x767C;&#x8D77;&#x8ACB;&#x6C42;&#x7684;&#x6642;&#x5019;&#xFF0C;&#x8ACB;&#x6C42;&#x982D;&#x6703;&#x5E36;&#x4E0A;&#x4E0A;&#x4E00;&#x6B21;&#x97FF;&#x61C9;&#x982D;&#x4E2D;&#x7684; Last-Modified &#x7684;&#x6642;&#x9593;&#xFF0C;&#x4E26;&#x653E;&#x5230; If-Modified-Since &#x8ACB;&#x6C42;&#x982D;&#x5C6C;&#x6027;&#x4E2D;&#xFF0C;&#x670D;&#x52D9;&#x7AEF;&#x6839;&#x64DA;&#x6587;&#x4EF6;&#x6700;&#x5F8C;&#x4E00;&#x6B21;&#x4FEE;&#x6539;&#x6642;&#x9593;&#x548C; If-Modified-Since &#x7684;&#x503C;&#x9032;&#x884C;&#x6BD4;&#x8F03;&#xFF0C;&#x5982;&#x679C;&#x76F8;&#x7B49;&#xFF0C;&#x8FD4;&#x56DE; 304 &#xFF0C;&#x4E26;&#x52A0;&#x8F09;&#x700F;&#x89BD;&#x5668;&#x7DE9;&#x5B58;&#x3002; ###&#x3000;&#x9A57;&#x8B49;&#x5354;&#x5546;&#x7DE9;&#x5B58; &#x672C;&#x5730;&#x901A;&#x904E; express &#x8D77;&#x4E00;&#x500B;&#x670D;&#x52D9;&#x4F86;&#x9A57;&#x8B49;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#xFF0C;&#x4EE3;&#x78BC;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const express = require ( &apos;express&apos; ); const app = express(); var options = { etag: true , // &#x958B;&#x555F;&#x5354;&#x5546;&#x7DE9;&#x5B58; lastModified: true , // &#x958B;&#x555F;&#x5354;&#x5546;&#x7DE9;&#x5B58; setHeaders: ( res, path, stat ) = { res.set({ &apos;Cache-Control&apos; : &apos;max-age=00&apos; , // &#x700F;&#x89BD;&#x5668;&#x4E0D;&#x8D70;&#x5F37;&#x7DE9;&#x5B58; &apos;Pragma&apos; : &apos;no-cache&apos; , // &#x700F;&#x89BD;&#x5668;&#x4E0D;&#x8D70;&#x5F37;&#x7DE9;&#x5B58; }); }, }; app.use(express.static((__dirname + &apos;/public&apos; ), options)); app.listen( 3001 ); &#x7B2C;&#x4E8C;&#x6B21;&#x8ACB;&#x6C42;&#x8CC7;&#x6E90;&#xFF0C;&#x670D;&#x52D9;&#x7AEF;&#x6839;&#x64DA;&#x8ACB;&#x6C42;&#x982D;&#x4E2D;&#x7684; If-Modified-Since &#x548C; If-None-Match &#x9A57;&#x8B49;&#x6587;&#x4EF6;&#x662F;&#x5426;&#x4FEE;&#x6539;&#x3002; Tag/If-None-Match &#x7684;&#x51FA;&#x73FE;&#x4E3B;&#x8981;&#x89E3;&#x6C7A;&#x4E86; Last-Modified/If-Modified-Since &#x6240;&#x89E3;&#x6C7A;&#x4E0D;&#x4E86;&#x7684;&#x554F;&#x984C;&#xFF1A; &#x5982;&#x679C;&#x6587;&#x4EF6;&#x7684;&#x4FEE;&#x6539;&#x983B;&#x7387;&#x5728;&#x79D2;&#x7D1A;&#x4EE5;&#x4E0B;&#xFF0C;Last-Modified/If-Modified-Since &#x6703;&#x932F;&#x8AA4;&#x5730;&#x8FD4;&#x56DE; 304 &#x5982;&#x679C;&#x6587;&#x4EF6;&#x88AB;&#x4FEE;&#x6539;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x5167;&#x5BB9;&#x6C92;&#x6709;&#x4EFB;&#x4F55;&#x8B8A;&#x5316;&#x7684;&#x6642;&#x5019;&#xFF0C;Last-Modified/If-Modified-Since &#x6703;&#x932F;&#x8AA4;&#x5730;&#x8FD4;&#x56DE; 304"},"http/caching.html#References":{"title":"References","path":"\\javascript\\http\\caching.html#References","body":"HTTP caching &#x5716;&#x89E3; HTTP &#x7DE9;&#x5B58;"},"glossary/hoisting.html":{"title":"提升（[Hoisting](https://developer.mozilla.org/zh-TW/docs/Glossary/Hoisting)）","path":"\\javascript\\glossary\\hoisting.html","body":"在執行任何程式碼前，JavaScript 會把函式宣告放進記憶體裡面，這樣做的優點是：可以在程式碼宣告該函式之前使用它。 1 2 3 4 5 6 7 8 function catName ( name )  console .log( \"My cat's name is \" + name);  catName( \"Tigger\" ); /* 上面程式的結果是: \"My cat's name is Tigger\" */ 1 2 3 4 5 6 7 8 9 console .log(c); var c; function c ( a )  console .log(a); var a = 3 ; function a ( )    c( 2 ); // 输出 1 2 3 4 5 6 7 8 9 10 // console.log(c); function c ( a )  console .log(a); var a = 3 ; function a ( )    // console.log(a); function a ( )   變量提升也有優先級, 函數聲明  arguments  變量聲明 1 2 3 var c = 1 ; console .log(c); c( 2 ); 1 “TypeError: c is not a function 由於函數聲明會提升,當函數外的 console.log(c) 執行時,c已經被賦值為1。 因此,執行c(2)時會拋出TypeError,因為 1 不是函數。 1 2 3 4 5 6 7 8 9 var name = 'erdong' ; ( function ( )  if ( typeof name === 'undefined' )  var name = 'chen' ; console .log(name);  else  console .log(name);  )(); chen 自執行函數執行時,會先進行變量提升(這裡涉及到執行上下文不過多說,一定要搞懂執行上下文), 在自執行函數執行時,偽代碼為: 1 2 3 4 5 6 7 8 9 ( function ( )  var name; // 變量name會提升到當前作用域頂部 if ( typeof name === 'undefined' )  name = 'chen' ; console .log(name);  else  console .log(name);  )(); 所以會執行if中的console.log(name)"},"operators/delete.html":{"title":"","path":"\\javascript\\operators\\delete.html","body":"delete 1 2 3 4 ( function ( x )  delete x; return x; )( 1 ) //1 刪不掉x delete只能操作對象的屬性 不能操作變量"},"operators/delete.html#delete":{"title":"delete","path":"\\javascript\\operators\\delete.html#delete","body":"1 2 3 4 ( function ( x ) { delete x; return x; })( 1 ) //1 &#x522A;&#x4E0D;&#x6389;x delete&#x53EA;&#x80FD;&#x64CD;&#x4F5C;&#x5C0D;&#x8C61;&#x7684;&#x5C6C;&#x6027; &#x4E0D;&#x80FD;&#x64CD;&#x4F5C;&#x8B8A;&#x91CF;"},"object/object​_keys.html":{"title":"Object​.keys()","path":"\\javascript\\object\\object​_keys.html","body":"Object​.keys() https://jsbin.com/wurocegika/edit?js,console 1 2 3 4 5 6 7 8 9 10 var arr = [ 'a' , 'b' , 'c' ]; console .log( Object .keys(arr)); // console: ['0', '1', '2'] // 類似陣列的物件 var obj =  0 : 'a' , 1 : 'b' , 2 : 'c' ; console .log( Object .keys(obj)); // console: ['0', '1', '2'] // 擁有隨機 key 排序，類似陣列的物件 var an_obj =  100 : 'a' , 2 : 'b' , 7 : 'c' ; console .log( Object .keys(an_obj)); // console: ['2', '7', '100'] https://jsbin.com/sidixofelo/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 const types =  status: '404' , users: 'https'  const getObj = ; Object .keys(types).forEach( type =  console .log(type) // \"status\" \"users\" const camelCaseTypeRes = type + 'Res' ; getObj[type] = camelCaseTypeRes; ) console .log(getObj) // [object Object]  // status: \"statusRes\", // users: \"usersRes\" // "},"global/function.html":{"title":"","path":"\\javascript\\global\\function.html","body":"call、apply、bind Function.prototype.call() 使用給定的this參數以及分別給定的參數來呼叫某個函數 Function.prototype.apply() apply() 方法會呼叫一個以 this 的代表值和一個陣列形式的值組(或是一個 array-like object )為參數的函式。 Function.prototype.bind() bind() 方法，會建立一個新函式。該函式被呼叫時，會將 this 關鍵字設為給定的參數，並在呼叫時，帶有提供之前，給定順序的參數。 為什麼我們需要 apply / bind / call ？ 最大的原因還是因為 this 這個東西是 動態的 。（ PS. arguments 也是） 拿到正確的 this ，而非一言不合就 undefined cab [ call , apply ] vs [ bind ] call 、 apply 皆是回傳function執行結果 bind 方法回傳的是綁定 this 後的 原函數 箭頭函數 多數時候一般函數無異，但是最大的差別在於 — 其 this 完全綁定在語彙上的位置，也就是說在 arrow 裡面的 this 永遠都是語意上的 this ，不管是誰呼叫他，或是被如何 bind 、 call 、 apply ，他永遠都是拿到原先作用域的 this 。 bind 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class dog  constructor (name) this .name = name;  sayHello() console .log( 'Hello I am ' , this .name);  laterHello() setTimeout( function ( )  console .log( '(1 sec...) Hi!, I am' , this .name) , 1000 );   let boo = new dog( 'Corgi' ); boo.sayHello(); // Hello I am Corgi boo.laterHello(); // (1 sec...) Hi!, I am undefined 1 2 3 4 5 6 7 8 9 10 11 // Self — this 的替身 // bad 請別儲存 this 為參考。請使用箭頭函式或是 Function#bind laterHello()  var self = this ; // 先把這邊的this(指向class內部)存起來 setTimeout( function ( )  console .log( '(1 sec...) Hi!, I am' , self.name); // 因為語彙上能夠引用self變數（同個塊作用域） // 所以拿到了self.name , 1000 );  1 2 3 4 5 6 7 8 9 // .bind(this) — Binding大法 綁定大法 laterHello()  setTimeout( function ( )  console .log( '(1 sec...) Hi!, I am' , this .name); .bind( this ), 1000 );  1 2 3 4 5 6 // Arrow Function — 箭頭函數 laterHello()  setTimeout( () =  console .log( '(1 sec...) Hi!, I am' , this .name); , 1000 );  References 函數原型最實用的 3 個方法 — call、apply、bind"},"global/function.html#call、apply、bind":{"title":"call&#x3001;apply&#x3001;bind","path":"\\javascript\\global\\function.html#call、apply、bind","body":"Function.prototype.call() &#x4F7F;&#x7528;&#x7D66;&#x5B9A;&#x7684;this&#x53C3;&#x6578;&#x4EE5;&#x53CA;&#x5206;&#x5225;&#x7D66;&#x5B9A;&#x7684;&#x53C3;&#x6578;&#x4F86;&#x547C;&#x53EB;&#x67D0;&#x500B;&#x51FD;&#x6578; Function.prototype.apply() apply() &#x65B9;&#x6CD5;&#x6703;&#x547C;&#x53EB;&#x4E00;&#x500B;&#x4EE5; this &#x7684;&#x4EE3;&#x8868;&#x503C;&#x548C;&#x4E00;&#x500B;&#x9663;&#x5217;&#x5F62;&#x5F0F;&#x7684;&#x503C;&#x7D44;(&#x6216;&#x662F;&#x4E00;&#x500B; array-like object )&#x70BA;&#x53C3;&#x6578;&#x7684;&#x51FD;&#x5F0F;&#x3002; Function.prototype.bind() bind() &#x65B9;&#x6CD5;&#xFF0C;&#x6703;&#x5EFA;&#x7ACB;&#x4E00;&#x500B;&#x65B0;&#x51FD;&#x5F0F;&#x3002;&#x8A72;&#x51FD;&#x5F0F;&#x88AB;&#x547C;&#x53EB;&#x6642;&#xFF0C;&#x6703;&#x5C07; this &#x95DC;&#x9375;&#x5B57;&#x8A2D;&#x70BA;&#x7D66;&#x5B9A;&#x7684;&#x53C3;&#x6578;&#xFF0C;&#x4E26;&#x5728;&#x547C;&#x53EB;&#x6642;&#xFF0C;&#x5E36;&#x6709;&#x63D0;&#x4F9B;&#x4E4B;&#x524D;&#xFF0C;&#x7D66;&#x5B9A;&#x9806;&#x5E8F;&#x7684;&#x53C3;&#x6578;&#x3002;"},"global/function.html#為什麼我們需要-apply-bind-call-？":{"title":"&#x70BA;&#x4EC0;&#x9EBC;&#x6211;&#x5011;&#x9700;&#x8981; apply / bind / call &#xFF1F;","path":"\\javascript\\global\\function.html#為什麼我們需要-apply-bind-call-？","body":"&#x6700;&#x5927;&#x7684;&#x539F;&#x56E0;&#x9084;&#x662F;&#x56E0;&#x70BA; this &#x9019;&#x500B;&#x6771;&#x897F;&#x662F; &#x52D5;&#x614B;&#x7684; &#x3002;&#xFF08; PS. arguments &#x4E5F;&#x662F;&#xFF09; &#x62FF;&#x5230;&#x6B63;&#x78BA;&#x7684; this &#xFF0C;&#x800C;&#x975E;&#x4E00;&#x8A00;&#x4E0D;&#x5408;&#x5C31; undefined"},"global/function.html#cab-call-apply-vs-bind":{"title":"cab [ call , apply ] vs [ bind ]","path":"\\javascript\\global\\function.html#cab-call-apply-vs-bind","body":"call &#x3001; apply &#x7686;&#x662F;&#x56DE;&#x50B3;function&#x57F7;&#x884C;&#x7D50;&#x679C; bind &#x65B9;&#x6CD5;&#x56DE;&#x50B3;&#x7684;&#x662F;&#x7D81;&#x5B9A; this &#x5F8C;&#x7684; &#x539F;&#x51FD;&#x6578; &#x7BAD;&#x982D;&#x51FD;&#x6578; &#x591A;&#x6578;&#x6642;&#x5019;&#x4E00;&#x822C;&#x51FD;&#x6578;&#x7121;&#x7570;&#xFF0C;&#x4F46;&#x662F;&#x6700;&#x5927;&#x7684;&#x5DEE;&#x5225;&#x5728;&#x65BC; &#x2014; &#x5176; this &#x5B8C;&#x5168;&#x7D81;&#x5B9A;&#x5728;&#x8A9E;&#x5F59;&#x4E0A;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#x5728; arrow &#x88E1;&#x9762;&#x7684; this &#x6C38;&#x9060;&#x90FD;&#x662F;&#x8A9E;&#x610F;&#x4E0A;&#x7684; this &#xFF0C;&#x4E0D;&#x7BA1;&#x662F;&#x8AB0;&#x547C;&#x53EB;&#x4ED6;&#xFF0C;&#x6216;&#x662F;&#x88AB;&#x5982;&#x4F55; bind &#x3001; call &#x3001; apply &#xFF0C;&#x4ED6;&#x6C38;&#x9060;&#x90FD;&#x662F;&#x62FF;&#x5230;&#x539F;&#x5148;&#x4F5C;&#x7528;&#x57DF;&#x7684; this &#x3002;"},"global/function.html#bind":{"title":"bind","path":"\\javascript\\global\\function.html#bind","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class dog { constructor (name){ this .name = name; } sayHello(){ console .log( &apos;Hello I am &apos; , this .name); } laterHello(){ setTimeout( function ( ) { console .log( &apos;(1 sec...) Hi!, I am&apos; , this .name) }, 1000 ); } } let boo = new dog( &apos;Corgi&apos; ); boo.sayHello(); // Hello I am Corgi boo.laterHello(); // (1 sec...) Hi!, I am undefined 1 2 3 4 5 6 7 8 9 10 11 // Self &#x2014; this &#x7684;&#x66FF;&#x8EAB; // bad &#x8ACB;&#x5225;&#x5132;&#x5B58; this &#x70BA;&#x53C3;&#x8003;&#x3002;&#x8ACB;&#x4F7F;&#x7528;&#x7BAD;&#x982D;&#x51FD;&#x5F0F;&#x6216;&#x662F; Function#bind laterHello() { var self = this ; // &#x5148;&#x628A;&#x9019;&#x908A;&#x7684;this(&#x6307;&#x5411;class&#x5167;&#x90E8;)&#x5B58;&#x8D77;&#x4F86; setTimeout( function ( ) { console .log( &apos;(1 sec...) Hi!, I am&apos; , self.name); // &#x56E0;&#x70BA;&#x8A9E;&#x5F59;&#x4E0A;&#x80FD;&#x5920;&#x5F15;&#x7528;self&#x8B8A;&#x6578;&#xFF08;&#x540C;&#x500B;&#x584A;&#x4F5C;&#x7528;&#x57DF;&#xFF09; // &#x6240;&#x4EE5;&#x62FF;&#x5230;&#x4E86;self.name }, 1000 ); } 1 2 3 4 5 6 7 8 9 // .bind(this) &#x2014; Binding&#x5927;&#x6CD5; &#x7D81;&#x5B9A;&#x5927;&#x6CD5; laterHello() { setTimeout( function ( ) { console .log( &apos;(1 sec...) Hi!, I am&apos; , this .name); }.bind( this ), 1000 ); } 1 2 3 4 5 6 // Arrow Function &#x2014; &#x7BAD;&#x982D;&#x51FD;&#x6578; laterHello() { setTimeout( () = { console .log( &apos;(1 sec...) Hi!, I am&apos; , this .name); }, 1000 ); }"},"global/function.html#References":{"title":"References","path":"\\javascript\\global\\function.html#References","body":"&#x51FD;&#x6578;&#x539F;&#x578B;&#x6700;&#x5BE6;&#x7528;&#x7684; 3 &#x500B;&#x65B9;&#x6CD5; &#x2014; call&#x3001;apply&#x3001;bind"},"object/assign.html":{"title":"Object assign","path":"\\javascript\\object\\assign.html","body":"用來複製 Object.assign() 被用來複製一個或多個物件自身所有可數的屬性到另一個目標物件。回傳的值為該目標物件。 Object.assign() 只會從來源物件將自身可列舉的 屬性複製 到目標物件。 ##　複製物件 1 2 3 var obj =  a : 1 ; var copy = Object .assign(, obj); console .log(copy); //  a: 1  合併物件 1 2 3 4 5 6 7 var o1 =  a : 1 ; var o2 =  b : 2 ; var o3 =  c : 3 ; var obj = Object .assign(o1, o2, o3); console .log(obj); //  a: 1, b: 2, c: 3  console .log(o1); //  a: 1, b: 2, c: 3 , 目標物件本身也被改變。 有相同屬性時合併物件區段 1 2 3 4 5 6 var o1 =  a : 1 , b : 1 , c : 1 ; var o2 =  b : 2 , c : 2 ; var o3 =  c : 3 ; var obj = Object .assign(, o1, o2, o3); console .log(obj); //  a: 1, b: 2, c: 3 ，屬性c為o3.c的值，最後一個出現的屬性c。"},"object/assign.html#合併物件":{"title":"&#x5408;&#x4F75;&#x7269;&#x4EF6;","path":"\\javascript\\object\\assign.html#合併物件","body":"1 2 3 4 5 6 7 var o1 = { a : 1 }; var o2 = { b : 2 }; var o3 = { c : 3 }; var obj = Object .assign(o1, o2, o3); console .log(obj); // { a: 1, b: 2, c: 3 } console .log(o1); // { a: 1, b: 2, c: 3 }, &#x76EE;&#x6A19;&#x7269;&#x4EF6;&#x672C;&#x8EAB;&#x4E5F;&#x88AB;&#x6539;&#x8B8A;&#x3002;"},"object/assign.html#有相同屬性時合併物件區段":{"title":"&#x6709;&#x76F8;&#x540C;&#x5C6C;&#x6027;&#x6642;&#x5408;&#x4F75;&#x7269;&#x4EF6;&#x5340;&#x6BB5;","path":"\\javascript\\object\\assign.html#有相同屬性時合併物件區段","body":"1 2 3 4 5 6 var o1 = { a : 1 , b : 1 , c : 1 }; var o2 = { b : 2 , c : 2 }; var o3 = { c : 3 }; var obj = Object .assign({}, o1, o2, o3); console .log(obj); // { a: 1, b: 2, c: 3 }&#xFF0C;&#x5C6C;&#x6027;c&#x70BA;o3.c&#x7684;&#x503C;&#xFF0C;&#x6700;&#x5F8C;&#x4E00;&#x500B;&#x51FA;&#x73FE;&#x7684;&#x5C6C;&#x6027;c&#x3002;"},"object/create.html":{"title":"Object.create()","path":"\\javascript\\object\\create.html","body":"Object.create() 指定其原型物件與屬性，創建一個新物件。 使用 Object.create() 實現類別繼承 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // Shape - 父類別 function Shape ( )  this .x = 0 ; this .y = 0 ;  // 父類別的方法 Shape.prototype.move = function ( x, y )  this .x += x; this .y += y; console .info( 'Shape moved.' ); ; // Rectangle - 子類別 function Rectangle ( )  Shape.call( this ); // call super constructor.  // 子類別擴展(extends)父類別 Rectangle.prototype = Object .create(Shape.prototype); Rectangle.prototype.constructor = Rectangle; var rect = new Rectangle(); console .log( 'Is rect an instance of Rectangle?' , rect instanceof Rectangle); // true console .log( 'Is rect an instance of Shape?' , rect instanceof Shape); // true rect.move( 1 , 1 ); // Outputs, 'Shape moved.' ex 1 2 let ...arr = Object .create( x : 1 ) // Object.create 將x掛在原形鏈上了 沒有掛在值上  console .log(arr) // undefined"},"operators/typeof.html":{"title":"","path":"\\javascript\\operators\\typeof.html","body":"typeof 1 2 3 4 5 var f = function g ( )  return 123  typeof g(); // Uncaught ReferenceError: g is not defined typeof f; // \"function\" g() 不能變動 變量 f function_expression 可以重新賦值 g() 只能在函數內使用 外部無法存取 1 2 3 4 5 // g() 函數聲明 function g ( )  return 123  typeof g(); // \"number\" ref 函數 null [typeof null, null instanceof Object] // [“object”, false] js 萬物即對象 但null不是Object new出來的 ref: instanceof Object.prototype.name = 1 ; 1.0.name; // 1 1是整型 1.0 變對象 1.name; // Uncaught SyntaxError: Invalid or unexpected token js沒有整型只有對象 Function.name; // “Function”"},"operators/typeof.html#typeof":{"title":"typeof","path":"\\javascript\\operators\\typeof.html#typeof","body":"1 2 3 4 5 var f = function g ( ) { return 123 } typeof g(); // Uncaught ReferenceError: g is not defined typeof f; // function g() &#x4E0D;&#x80FD;&#x8B8A;&#x52D5; &#x8B8A;&#x91CF; f function_expression &#x53EF;&#x4EE5;&#x91CD;&#x65B0;&#x8CE6;&#x503C; g() &#x53EA;&#x80FD;&#x5728;&#x51FD;&#x6578;&#x5167;&#x4F7F;&#x7528; &#x5916;&#x90E8;&#x7121;&#x6CD5;&#x5B58;&#x53D6; 1 2 3 4 5 // g() &#x51FD;&#x6578;&#x8072;&#x660E; function g ( ) { return 123 } typeof g(); // number ref &#x51FD;&#x6578;"},"operators/typeof.html#null":{"title":"null","path":"\\javascript\\operators\\typeof.html#null","body":"[typeof null, null instanceof Object] // [&#x201C;object&#x201D;, false] js &#x842C;&#x7269;&#x5373;&#x5C0D;&#x8C61; &#x4F46;null&#x4E0D;&#x662F;Object new&#x51FA;&#x4F86;&#x7684; ref: instanceof Object.prototype.name = 1 ; 1.0.name; // 1 1&#x662F;&#x6574;&#x578B; 1.0 &#x8B8A;&#x5C0D;&#x8C61; 1.name; // Uncaught SyntaxError: Invalid or unexpected token js&#x6C92;&#x6709;&#x6574;&#x578B;&#x53EA;&#x6709;&#x5C0D;&#x8C61; Function.name; // &#x201C;Function&#x201D;"},"operators/destructuring_assignment.html":{"title":"","path":"\\javascript\\operators\\destructuring_assignment.html","body":"Destructuring assignment 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 let a, b, rest; [a, b] = [ 10 , 20 ]; console .log(a); // 10 console .log(b); // 20 [a, b, ...rest] = [ 10 , 20 , 30 , 40 , 50 ]; console .log(a); // 10 console .log(b); // 20 console .log(rest); // [30, 40, 50] ( a, b  =  a : 10 , b : 20 ); console .log(a); // 10 console .log(b); // 20 ( a, b  =  a : 10 , b : 20 , c : 30 ); console .log(a); // 10 console .log(b); // 20 // Stage 4(finished) proposal (a, b, ...rest =  a : 10 , b : 20 , c : 30 , d : 40 ); console .log(a); // 10 console .log(b); // 20 console .log(rest); // c: 30, d: 40 1 2 3 4 5 6 7 8 const object =  a : 5 , b : 6 , c : 7 ; const picked = ( ( a, c  ) = ( a, c ))(object); console .log(picked); //  a: 5, c: 7  let unwrap = ( a, c ) = (a, c); let picked = unwrap( a : 5 , b : 6 , c : 7 ); console .log(picked) //  a: 5, c: 7  1 2 3 4 5 6 let picked = ( date, close, symbol ) = (date, close, symbol); const map1 = quotes.map( obj =  // console.log(obj) return picked(obj) ); console .log(map1); [ { date: 2020-05-14T04:00:00.000Z, close: 142.970001, symbol: ‘vti’ }, { date: 2020-05-13T04:00:00.000Z, close: 141.449997, symbol: ‘vti’ } ]"},"operators/destructuring_assignment.html#Destructuring-assignment":{"title":"Destructuring assignment","path":"\\javascript\\operators\\destructuring_assignment.html#Destructuring-assignment","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 let a, b, rest; [a, b] = [ 10 , 20 ]; console .log(a); // 10 console .log(b); // 20 [a, b, ...rest] = [ 10 , 20 , 30 , 40 , 50 ]; console .log(a); // 10 console .log(b); // 20 console .log(rest); // [30, 40, 50] ({ a, b } = { a : 10 , b : 20 }); console .log(a); // 10 console .log(b); // 20 ({ a, b } = { a : 10 , b : 20 , c : 30 }); console .log(a); // 10 console .log(b); // 20 // Stage 4(finished) proposal ({a, b, ...rest} = { a : 10 , b : 20 , c : 30 , d : 40 }); console .log(a); // 10 console .log(b); // 20 console .log(rest); // {c: 30, d: 40} 1 2 3 4 5 6 7 8 const object = { a : 5 , b : 6 , c : 7 }; const picked = ( ({ a, c } ) = ({ a, c }))(object); console .log(picked); // { a: 5, c: 7 } let unwrap = ( {a, c} ) = ({a, c}); let picked = unwrap({ a : 5 , b : 6 , c : 7 }); console .log(picked) // { a: 5, c: 7 } 1 2 3 4 5 6 let picked = ( {date, close, symbol} ) = ({date, close, symbol}); const map1 = quotes.map( obj = { // console.log(obj) return picked(obj) }); console .log(map1); [ { date: 2020-05-14T04:00:00.000Z, close: 142.970001, symbol: &#x2018;vti&#x2019; }, { date: 2020-05-13T04:00:00.000Z, close: 141.449997, symbol: &#x2018;vti&#x2019; } ]"},"swagger/to-html.html":{"title":"swagger - to HTML","path":"\\javascript\\swagger\\to-html.html","body":"Swagger to HTML Download Schema Swagger Petstore Version: 1.0.0 List all pets GET /pets Request Sample Request Path limit integer (int32) Used in query How many items to return at one time (max 100) curl -v -X GET http://petstore.swagger.io/v1/pets Copy Request Response Sample Response Status Code: 200 An paged array of pets Reference [] [].id integer (int64) required [].name string required [].tag string This is a default response for the request. unexpected error Reference code integer (int32) required message string required Create a pet POST /pets Request Sample Request curl -v -X POST http://petstore.swagger.io/v1/pets Copy Request Response Sample Response Status Code: 201 Null response Reference This is a default response for the request. unexpected error Reference code integer (int32) required message string required Info for a specific pet GET /pets/{petId} Request Sample Request Path petId string required Used in path The id of the pet to retrieve curl -v -X GET http://petstore.swagger.io/v1/pets/{petId} Copy Request Response Sample Response Status Code: 200 Expected response to a valid request Reference [] [].id integer (int64) required [].name string required [].tag string This is a default response for the request. unexpected error Reference code integer (int32) required message string required"},"swagger/to-html.html#Swagger-to-HTML":{"title":"Swagger to HTML","path":"\\javascript\\swagger\\to-html.html#Swagger-to-HTML","body":"Download Schema Swagger Petstore Version: 1.0.0 List all pets GET /pets Request Sample Request Path limit integer (int32) Used in query How many items to return at one time (max 100) curl -v -X GET http://petstore.swagger.io/v1/pets Copy Request Response Sample Response Status Code: 200 An paged array of pets Reference [] [].id integer (int64) required [].name string required [].tag string This is a default response for the request. unexpected error Reference code integer (int32) required message string required Create a pet POST /pets Request Sample Request curl -v -X POST http://petstore.swagger.io/v1/pets Copy Request Response Sample Response Status Code: 201 Null response Reference This is a default response for the request. unexpected error Reference code integer (int32) required message string required Info for a specific pet GET /pets/{petId} Request Sample Request Path petId string required Used in path The id of the pet to retrieve curl -v -X GET http://petstore.swagger.io/v1/pets/{petId} Copy Request Response Sample Response Status Code: 200 Expected response to a valid request Reference [] [].id integer (int64) required [].name string required [].tag string This is a default response for the request. unexpected error Reference code integer (int32) required message string required"},"swagger/to-html.html#undefined":{"title":"Swagger Petstore","path":"\\javascript\\swagger\\to-html.html#undefined","body":"Version: 1.0.0"},"swagger/to-html.html#List-all-pets":{"title":"List all pets","path":"\\javascript\\swagger\\to-html.html#List-all-pets","body":"GET /pets"},"swagger/to-html.html#Create-a-pet":{"title":"Create a pet","path":"\\javascript\\swagger\\to-html.html#Create-a-pet","body":"POST /pets"},"swagger/to-html.html#Info-for-a-specific-pet":{"title":"Info for a specific pet","path":"\\javascript\\swagger\\to-html.html#Info-for-a-specific-pet","body":"GET /pets/{petId}"},"operators/precedence.html":{"title":"","path":"\\javascript\\operators\\precedence.html","body":"運算子優先序 1 2 3 var s = 'msg' console .log((s === 'msg' ) ? \"something\" : \"nothing\" ) console .log( \"value is \" + (s === 'msg' ) ? \"something\" : \"nothing\" ) // something value is 不見了 + 優先序高於 … ? … : … value is  + (s ===&#39;msg&#39;) // true .運算符比 = 運算符高 1 2 3 4 5 6 var a =  n : 1  var b = a a.x = a =  n : 2  console .log(a.n, b.n); console .log(a.x, b.x); 2 1 undefined {n: 2} 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 var b = a,此時a和b指向同一個對象。 .運算符比 = 運算符高,先計算 `a.x` ,此時 b =  n: 1 , x: undefined  相當於給對象添加了x屬性。 a.x = a =  n : 2 ; 計算完a.x,再計算 = ,賦值是從右向左,此時a指向一個新對象。 a =  n: 2  a.x已經執行過了,此時對象的x屬性賦值為a,此時 對象 =  n: 1 , x: n: 2   即: a =  n: 2  b =  n: 1 , x: n: 2  "},"operators/precedence.html#運算子優先序":{"title":"&#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F;","path":"\\javascript\\operators\\precedence.html#運算子優先序","body":"1 2 3 var s = &apos;msg&apos; console .log((s === &apos;msg&apos; ) ? something : nothing ) console .log( value is  + (s === &apos;msg&apos; ) ? something : nothing ) // something value is &#x4E0D;&#x898B;&#x4E86; + &#x512A;&#x5148;&#x5E8F;&#x9AD8;&#x65BC; &#x2026; ? &#x2026; : &#x2026; value is  + (s ===&apos;msg&apos;) // true"},"operators/precedence.html#運算符比-運算符高":{"title":".&#x904B;&#x7B97;&#x7B26;&#x6BD4; = &#x904B;&#x7B97;&#x7B26;&#x9AD8;","path":"\\javascript\\operators\\precedence.html#運算符比-運算符高","body":"1 2 3 4 5 6 var a = { n : 1 } var b = a a.x = a = { n : 2 } console .log(a.n, b.n); console .log(a.x, b.x); 2 1 undefined {n: 2} 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 var b = a,&#x6B64;&#x6642;a&#x548C;b&#x6307;&#x5411;&#x540C;&#x4E00;&#x500B;&#x5C0D;&#x8C61;&#x3002; .&#x904B;&#x7B97;&#x7B26;&#x6BD4; = &#x904B;&#x7B97;&#x7B26;&#x9AD8;,&#x5148;&#x8A08;&#x7B97; `a.x` ,&#x6B64;&#x6642; b = { n: 1 , x: undefined } &#x76F8;&#x7576;&#x65BC;&#x7D66;&#x5C0D;&#x8C61;&#x6DFB;&#x52A0;&#x4E86;x&#x5C6C;&#x6027;&#x3002; a.x = a = { n : 2 }; &#x8A08;&#x7B97;&#x5B8C;a.x,&#x518D;&#x8A08;&#x7B97; = ,&#x8CE6;&#x503C;&#x662F;&#x5F9E;&#x53F3;&#x5411;&#x5DE6;,&#x6B64;&#x6642;a&#x6307;&#x5411;&#x4E00;&#x500B;&#x65B0;&#x5C0D;&#x8C61;&#x3002; a = { n: 2 } a.x&#x5DF2;&#x7D93;&#x57F7;&#x884C;&#x904E;&#x4E86;,&#x6B64;&#x6642;&#x5C0D;&#x8C61;&#x7684;x&#x5C6C;&#x6027;&#x8CE6;&#x503C;&#x70BA;a,&#x6B64;&#x6642; &#x5C0D;&#x8C61; = { n: 1 , x:{ n: 2 } } &#x5373;: a = { n: 2 } b = { n: 1 , x:{ n: 2 } }"},"swagger/ui.html":{"title":"swagger - UI","path":"\\javascript\\swagger\\ui.html","body":"Swagger UI angular .module('swagger-module-1', ['ngSanitize', 'swaggerUi']) .config([ '$provide', '$locationProvider', function($provide, $locationProvider) { $provide.decorator('$anchorScroll', [ '$delegate', function anchorScrollDecorator($delegate){ return function () { /* Just not doing anything to prevent $anchorScrool default behaviour */} } ]); $locationProvider.hashPrefix(''); } ]); angular.bootstrap(document.getElementById('swagger-wrap-1'), ['swagger-module-1'])"},"swagger/ui.html#Swagger-UI":{"title":"Swagger UI","path":"\\javascript\\swagger\\ui.html#Swagger-UI","body":"angular .module('swagger-module-1', ['ngSanitize', 'swaggerUi']) .config([ '$provide', '$locationProvider', function($provide, $locationProvider) { $provide.decorator('$anchorScroll', [ '$delegate', function anchorScrollDecorator($delegate){ return function () { /* Just not doing anything to prevent $anchorScrool default behaviour */} } ]); $locationProvider.hashPrefix(''); } ]); angular.bootstrap(document.getElementById('swagger-wrap-1'), ['swagger-module-1'])"},"operators/function.html":{"title":"","path":"\\javascript\\operators\\function.html","body":"函數表達式 函數表達式（function expression）非常類似於函數聲明（function statement）（詳情查看函數聲明），並且兩者擁有幾乎相同的語法。函數表達式與函數聲明的最主要區別是函數名稱（function name），在函數表達式中可省略它，從而創建匿名函數（anonymous functions）。 1 2 3 4 5 6 // 函數聲明 function name ( [param[, param[, ... param]]] )  statements  // 函數表達式 var myFunction = function name ( [param[, param[, ... param]]] )  statements  // 函數表達式 匿名函數 var myFunction = function ( [param[, param[, ... param]]] )  statements  1 2 3 ( function ( )  debugger )() 函數表達式提升 (Function expression hoisting) JavaScript中的函數表達式沒有提升,不像函數聲明,你在定義函數表達式之前不能使用函數表達式: 1 2 3 4 5 notHoisted(); // TypeError: notHoisted is not a function var notHoisted = function ( )  console .log( 'bar' ); ;"},"operators/function.html#函數表達式":{"title":"&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;","path":"\\javascript\\operators\\function.html#函數表達式","body":"&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#xFF08;function expression&#xFF09;&#x975E;&#x5E38;&#x985E;&#x4F3C;&#x65BC;&#x51FD;&#x6578;&#x8072;&#x660E;&#xFF08;function statement&#xFF09;&#xFF08;&#x8A73;&#x60C5;&#x67E5;&#x770B;&#x51FD;&#x6578;&#x8072;&#x660E;&#xFF09;&#xFF0C;&#x4E26;&#x4E14;&#x5169;&#x8005;&#x64C1;&#x6709;&#x5E7E;&#x4E4E;&#x76F8;&#x540C;&#x7684;&#x8A9E;&#x6CD5;&#x3002;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x8207;&#x51FD;&#x6578;&#x8072;&#x660E;&#x7684;&#x6700;&#x4E3B;&#x8981;&#x5340;&#x5225;&#x662F;&#x51FD;&#x6578;&#x540D;&#x7A31;&#xFF08;function name&#xFF09;&#xFF0C;&#x5728;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x4E2D;&#x53EF;&#x7701;&#x7565;&#x5B83;&#xFF0C;&#x5F9E;&#x800C;&#x5275;&#x5EFA;&#x533F;&#x540D;&#x51FD;&#x6578;&#xFF08;anonymous functions&#xFF09;&#x3002; 1 2 3 4 5 6 // &#x51FD;&#x6578;&#x8072;&#x660E; function name ( [param[, param[, ... param]]] ) { statements } // &#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F; var myFunction = function name ( [param[, param[, ... param]]] ) { statements } // &#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F; &#x533F;&#x540D;&#x51FD;&#x6578; var myFunction = function ( [param[, param[, ... param]]] ) { statements } 1 2 3 ( function ( ) { debugger })() &#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x63D0;&#x5347; (Function expression hoisting) JavaScript&#x4E2D;&#x7684;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x6C92;&#x6709;&#x63D0;&#x5347;,&#x4E0D;&#x50CF;&#x51FD;&#x6578;&#x8072;&#x660E;,&#x4F60;&#x5728;&#x5B9A;&#x7FA9;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x4E4B;&#x524D;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;: 1 2 3 4 5 notHoisted(); // TypeError: notHoisted is not a function var notHoisted = function ( ) { console .log( &apos;bar&apos; ); };"},"statements/AsyncFunction.html":{"title":"AsyncFunction","path":"\\javascript\\statements\\AsyncFunction.html","body":"async function 宣告被定義為一個回傳 AsyncFunction 物件的非同步函式 。 同一個步道(同步 接力賽跑 等) vs 不同步道(非同步 賽跑) 1 2 3 4 5 6 7 8 let a = 0 let fn = async () =  a = a + await 10 ; console .log( '異步' ) console .log(a)  fn() console .log(++a) babeljs 1 ‘異步’ 10 a = await 10 + a; 1 ‘異步’ 11"},"statements/let.html":{"title":"","path":"\\javascript\\statements\\let.html","body":"let let 用於宣告一個「只作用在當前區塊的變數」，初始值可選擇性的設定。 1 2 3 4 5 var a = 1 ; if ( true ) console .log(a); let a = 2 ;  ReferenceError: Cannot access ‘a’ before initialization let 聲明的變量不會提升,並且會產生暫存死區。在 let 聲明變量之前訪問變量會拋出錯誤。"},"statements/let.html#let":{"title":"let","path":"\\javascript\\statements\\let.html#let","body":"let &#x7528;&#x65BC;&#x5BA3;&#x544A;&#x4E00;&#x500B;&#x300C;&#x53EA;&#x4F5C;&#x7528;&#x5728;&#x7576;&#x524D;&#x5340;&#x584A;&#x7684;&#x8B8A;&#x6578;&#x300D;&#xFF0C;&#x521D;&#x59CB;&#x503C;&#x53EF;&#x9078;&#x64C7;&#x6027;&#x7684;&#x8A2D;&#x5B9A;&#x3002; 1 2 3 4 5 var a = 1 ; if ( true ){ console .log(a); let a = 2 ; } ReferenceError: Cannot access &#x2018;a&#x2019; before initialization let &#x8072;&#x660E;&#x7684;&#x8B8A;&#x91CF;&#x4E0D;&#x6703;&#x63D0;&#x5347;,&#x4E26;&#x4E14;&#x6703;&#x7522;&#x751F;&#x66AB;&#x5B58;&#x6B7B;&#x5340;&#x3002;&#x5728; let &#x8072;&#x660E;&#x8B8A;&#x91CF;&#x4E4B;&#x524D;&#x8A2A;&#x554F;&#x8B8A;&#x91CF;&#x6703;&#x62CB;&#x51FA;&#x932F;&#x8AA4;&#x3002;"},"string/split.html":{"title":"","path":"\\javascript\\string\\split.html","body":"split String.prototype.split() 請輸出1到400之間所有數字中包含的1的個數，比如數字1中包含了一個1, 數字11中包含了兩個1,數字20中不包含1,數字1到21中共包含了13個1。 將每一個數字轉換為字符串然後統計 1 的個數 1 2 3 4 5 6 7 8 9 10 function getCount ( )  let count = 0 for ( let i= 1 ;i 400 ;i++)  count = count + ` $i ` .split( '1' ).length - 1  return count  // 輸出 180 console .log(getCount())"},"string/split.html#split":{"title":"split","path":"\\javascript\\string\\split.html#split","body":"String.prototype.split() &#x8ACB;&#x8F38;&#x51FA;1&#x5230;400&#x4E4B;&#x9593;&#x6240;&#x6709;&#x6578;&#x5B57;&#x4E2D;&#x5305;&#x542B;&#x7684;1&#x7684;&#x500B;&#x6578;&#xFF0C;&#x6BD4;&#x5982;&#x6578;&#x5B57;1&#x4E2D;&#x5305;&#x542B;&#x4E86;&#x4E00;&#x500B;1, &#x6578;&#x5B57;11&#x4E2D;&#x5305;&#x542B;&#x4E86;&#x5169;&#x500B;1,&#x6578;&#x5B57;20&#x4E2D;&#x4E0D;&#x5305;&#x542B;1,&#x6578;&#x5B57;1&#x5230;21&#x4E2D;&#x5171;&#x5305;&#x542B;&#x4E86;13&#x500B;1&#x3002; &#x5C07;&#x6BCF;&#x4E00;&#x500B;&#x6578;&#x5B57;&#x8F49;&#x63DB;&#x70BA;&#x5B57;&#x7B26;&#x4E32;&#x7136;&#x5F8C;&#x7D71;&#x8A08; 1 &#x7684;&#x500B;&#x6578; 1 2 3 4 5 6 7 8 9 10 function getCount ( ) { let count = 0 for ( let i= 1 ;i 400 ;i++) { count = count + ` ${i} ` .split( &apos;1&apos; ).length - 1 } return count } // &#x8F38;&#x51FA; 180 console .log(getCount())"},"statements/if...else.html":{"title":"","path":"\\javascript\\statements\\if...else.html","body":"if…else 條件組合的問題 規則是： 1.在預熱中參與活動，vip用戶贈送 1000 積分，普通用戶贈送 700 積分。 2.在進行中參與活動，vip用戶贈送 800 積分，普通用戶贈送 300 積分。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 let status= 1 let type= 2 if (status=== 1 ) if (type=== 1 ) console .log( '普通用戶在預售中參與活動，贈送700積分' )  else if (type=== 2 ) console .log( 'vip用戶在預售中參與活動，贈送1000積分' )   else if (status=== 2 ) if (type=== 1 ) console .log( '普通用戶在進行中參與活動，贈送300積分' )  else if (type=== 2 ) console .log( 'vip用戶在進行中參與活動，贈送800積分' )   可以使用 obj 寫法，如果以後有什麼條件改了，直接改 obj 這個配置就好 1 2 3 4 5 6 7 8 let obj= 'status=1&amp;type=1' : '普通用戶在預售中參與活動，贈送700積分' , 'status=1&amp;type=2' : 'vip用戶在預售中參與活動，贈送1000積分' , 'status=2&amp;type=1' : '普通用戶在進行中參與活動，贈送300積分' , 'status=2&amp;type=2' : '普通用戶在進行中參與活動，贈送800積分'  console .log(obj[ `status= $status &amp;type= $type ` ]) 特定场景下代替优化 if-else 的方案"},"statements/if...else.html#if…else":{"title":"if&#x2026;else","path":"\\javascript\\statements\\if...else.html#if…else","body":""},"statements/if...else.html#條件組合的問題":{"title":"&#x689D;&#x4EF6;&#x7D44;&#x5408;&#x7684;&#x554F;&#x984C;","path":"\\javascript\\statements\\if...else.html#條件組合的問題","body":"&#x898F;&#x5247;&#x662F;&#xFF1A; 1.&#x5728;&#x9810;&#x71B1;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;vip&#x7528;&#x6236;&#x8D08;&#x9001; 1000 &#x7A4D;&#x5206;&#xFF0C;&#x666E;&#x901A;&#x7528;&#x6236;&#x8D08;&#x9001; 700 &#x7A4D;&#x5206;&#x3002; 2.&#x5728;&#x9032;&#x884C;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;vip&#x7528;&#x6236;&#x8D08;&#x9001; 800 &#x7A4D;&#x5206;&#xFF0C;&#x666E;&#x901A;&#x7528;&#x6236;&#x8D08;&#x9001; 300 &#x7A4D;&#x5206;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 let status= 1 let type= 2 if (status=== 1 ){ if (type=== 1 ){ console .log( &apos;&#x666E;&#x901A;&#x7528;&#x6236;&#x5728;&#x9810;&#x552E;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;700&#x7A4D;&#x5206;&apos; ) } else if (type=== 2 ){ console .log( &apos;vip&#x7528;&#x6236;&#x5728;&#x9810;&#x552E;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;1000&#x7A4D;&#x5206;&apos; ) } } else if (status=== 2 ){ if (type=== 1 ){ console .log( &apos;&#x666E;&#x901A;&#x7528;&#x6236;&#x5728;&#x9032;&#x884C;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;300&#x7A4D;&#x5206;&apos; ) } else if (type=== 2 ){ console .log( &apos;vip&#x7528;&#x6236;&#x5728;&#x9032;&#x884C;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;800&#x7A4D;&#x5206;&apos; ) } } &#x53EF;&#x4EE5;&#x4F7F;&#x7528; obj &#x5BEB;&#x6CD5;&#xFF0C;&#x5982;&#x679C;&#x4EE5;&#x5F8C;&#x6709;&#x4EC0;&#x9EBC;&#x689D;&#x4EF6;&#x6539;&#x4E86;&#xFF0C;&#x76F4;&#x63A5;&#x6539; obj &#x9019;&#x500B;&#x914D;&#x7F6E;&#x5C31;&#x597D; 1 2 3 4 5 6 7 8 let obj={ &apos;status=1&amp;type=1&apos; : &apos;&#x666E;&#x901A;&#x7528;&#x6236;&#x5728;&#x9810;&#x552E;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;700&#x7A4D;&#x5206;&apos; , &apos;status=1&amp;type=2&apos; : &apos;vip&#x7528;&#x6236;&#x5728;&#x9810;&#x552E;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;1000&#x7A4D;&#x5206;&apos; , &apos;status=2&amp;type=1&apos; : &apos;&#x666E;&#x901A;&#x7528;&#x6236;&#x5728;&#x9032;&#x884C;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;300&#x7A4D;&#x5206;&apos; , &apos;status=2&amp;type=2&apos; : &apos;&#x666E;&#x901A;&#x7528;&#x6236;&#x5728;&#x9032;&#x884C;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;800&#x7A4D;&#x5206;&apos; } console .log(obj[ `status= ${status} &amp;type= ${type} ` ]) &#x7279;&#x5B9A;&#x573A;&#x666F;&#x4E0B;&#x4EE3;&#x66FF;&#x4F18;&#x5316; if-else &#x7684;&#x65B9;&#x6848;"},"statements/for.html":{"title":"","path":"\\javascript\\statements\\for.html","body":"for…of與for…in的差別 For…Of for…in 提示： for...in 不应该用于迭代一个 Array，其中 索引顺序 很重要。 在迭代 物件屬性 時，使用 for...in ；在迭代 陣列 時，使用 for...of 。 for...in 輸出的是屬 性名稱(key) ， for...of 輸出的是 值(value) for...of 是 ES6 的新語法。修復了ES5 for…in 的不足 for...of 不能迭代物件，需要透過和 Object.keys() 搭配使用 單純迭代陣列的話，for…in 輸出的是屬性名稱(key)，for…of 輸出的是值(value) 1 2 3 4 5 6 7 8 9 10 11 let iterable = [ 3 , 5 , 7 ]; // 回傳「key」 for ( let i in iterable)  console .log(i); // \"0\", \"1\", \"2\"  // 回傳「value」 for ( let i of iterable)  console .log(i); // 3, 5, 7  在原本的陣列，新增一個屬性 foo，可看到 for…in 有將此屬性 foo 也輸出。 1 2 3 4 5 6 7 8 9 10 11 12 let iterable = [ 3 , 5 , 7 ]; iterable.foo = 'hello' ; //新增foo屬性名稱 // 回傳「key」，且會讀取到陣列新增的屬性名稱 for ( let i in iterable)  console .log(i); // \"0\", \"1\", \"2\", \"foo\"  // 回傳「value」 for ( let i of iterable)  console .log(i); // 3, 5, 7 "},"statements/for.html#for…of與for…in的差別":{"title":"for&#x2026;of&#x8207;for&#x2026;in&#x7684;&#x5DEE;&#x5225;","path":"\\javascript\\statements\\for.html#for…of與for…in的差別","body":"For&#x2026;Of for&#x2026;in &#x63D0;&#x793A;&#xFF1A; for...in &#x4E0D;&#x5E94;&#x8BE5;&#x7528;&#x4E8E;&#x8FED;&#x4EE3;&#x4E00;&#x4E2A; Array&#xFF0C;&#x5176;&#x4E2D; &#x7D22;&#x5F15;&#x987A;&#x5E8F; &#x5F88;&#x91CD;&#x8981;&#x3002; &#x5728;&#x8FED;&#x4EE3; &#x7269;&#x4EF6;&#x5C6C;&#x6027; &#x6642;&#xFF0C;&#x4F7F;&#x7528; for...in &#xFF1B;&#x5728;&#x8FED;&#x4EE3; &#x9663;&#x5217; &#x6642;&#xFF0C;&#x4F7F;&#x7528; for...of &#x3002; for...in &#x8F38;&#x51FA;&#x7684;&#x662F;&#x5C6C; &#x6027;&#x540D;&#x7A31;(key) &#xFF0C; for...of &#x8F38;&#x51FA;&#x7684;&#x662F; &#x503C;(value) for...of &#x662F; ES6 &#x7684;&#x65B0;&#x8A9E;&#x6CD5;&#x3002;&#x4FEE;&#x5FA9;&#x4E86;ES5 for&#x2026;in &#x7684;&#x4E0D;&#x8DB3; for...of &#x4E0D;&#x80FD;&#x8FED;&#x4EE3;&#x7269;&#x4EF6;&#xFF0C;&#x9700;&#x8981;&#x900F;&#x904E;&#x548C; Object.keys() &#x642D;&#x914D;&#x4F7F;&#x7528; &#x55AE;&#x7D14;&#x8FED;&#x4EE3;&#x9663;&#x5217;&#x7684;&#x8A71;&#xFF0C;for&#x2026;in &#x8F38;&#x51FA;&#x7684;&#x662F;&#x5C6C;&#x6027;&#x540D;&#x7A31;(key)&#xFF0C;for&#x2026;of &#x8F38;&#x51FA;&#x7684;&#x662F;&#x503C;(value) 1 2 3 4 5 6 7 8 9 10 11 let iterable = [ 3 , 5 , 7 ]; // &#x56DE;&#x50B3;&#x300C;key&#x300D; for ( let i in iterable) { console .log(i); // 0, 1, 2 } // &#x56DE;&#x50B3;&#x300C;value&#x300D; for ( let i of iterable) { console .log(i); // 3, 5, 7 } &#x5728;&#x539F;&#x672C;&#x7684;&#x9663;&#x5217;&#xFF0C;&#x65B0;&#x589E;&#x4E00;&#x500B;&#x5C6C;&#x6027; foo&#xFF0C;&#x53EF;&#x770B;&#x5230; for&#x2026;in &#x6709;&#x5C07;&#x6B64;&#x5C6C;&#x6027; foo &#x4E5F;&#x8F38;&#x51FA;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 let iterable = [ 3 , 5 , 7 ]; iterable.foo = &apos;hello&apos; ; //&#x65B0;&#x589E;foo&#x5C6C;&#x6027;&#x540D;&#x7A31; // &#x56DE;&#x50B3;&#x300C;key&#x300D;&#xFF0C;&#x4E14;&#x6703;&#x8B80;&#x53D6;&#x5230;&#x9663;&#x5217;&#x65B0;&#x589E;&#x7684;&#x5C6C;&#x6027;&#x540D;&#x7A31; for ( let i in iterable) { console .log(i); // 0, 1, 2, foo } // &#x56DE;&#x50B3;&#x300C;value&#x300D; for ( let i of iterable) { console .log(i); // 3, 5, 7 }"},"statements/block.html":{"title":"區塊","path":"\\javascript\\statements\\block.html","body":"區塊陳述用來組合零個或多個陳述。我們使用一對大括號 { } 以界定區塊。 var 1 2 3 4 5 var x = 1 ;  var x = 2 ;  alert(x); // outputs 2 let 和 const 1 2 3 4 5 let x = 1 ;  let x = 2 ;  console .log(x); // logs 1 function 1 2 3 4 5 6 7 8 9 10 11 function foo ( )   var a = 'var' ;  let a = 'let' ; console .log(a); // let   console .log(a); // var  foo(); 1 2 3 4 5 6 7  debugger function test ( )  test = 123 console .log( 'inner:' ,test) // inner: 123  console .log( 'outer:' ,test) // outer: ƒ test() 塊會限制函數的提升 有条件的创建函数 函数可以被有条件来声明 ，这意味着，函数声明可能出现在一个 if 语句里，但是，这种声明方式在不同的浏览器里可能有不同的效果。因此，不应该在生成环境代码中使用这种声明方式，应该使用函数表达式来代替。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 var hoisted = \"foo\" in this ; console .log( `'foo' name $hoisted ? \"is\" : \"is not\"  hoisted. typeof foo is $ typeof foo ` ); if ( false )  function foo ( )  return 1 ;   // 在Chrome里: // 'foo' 变量名被提升，但是 typeof foo 为 undefined // // 在Firefox里: // 'foo' 变量名被提升. 但是 typeof foo 为 undefined // // 在Edge里: // 'foo' 变量名未被提升. 而且 typeof foo 为 undefined // // 在Safari里: // 'foo' 变量名被提升. 而且 typeof foo 为 function var 不會產生塊級作用域, let 會產生塊級作用域。 1 2 3 4 5 6 if ( false ) var a = 1 ; let b = 2 ;  console .log(a); console .log(b); 代碼相當於: 1 2 3 4 5 6 7 var a; if ( false ) a = 1 ; let b = 2 ;  console .log(a); // undefined console .log(b); // ReferenceError: b is not defined"},"string/queue.html":{"title":"隊列（Queue）","path":"\\javascript\\string\\queue.html","body":"數據結構：隊列（Queue） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 function Queue ( )  let items = [] this .enqueue = function ( e )  items.push(e) // 進隊  this .dequeue = function ( )  return items.shift() // 出隊  this .isEmpty = function ( )  return items.length === 0 // 是否是空隊  this .front = function ( )  return items[ 0 ] // 獲取隊頭元素  this .clear = function ( )  items = [] // 清空隊  this .size = function ( )  return items.length // 獲取隊列長度   查找：從對頭開始查找，從時間複雜度為 O(n) 插入或刪除：進棧與出棧的時間複雜度為 O(1) 時間複雜度 如果演算法中包含巢狀的迴圈，則基本語句通常是最內層的迴圈體，如果演算法中包含並列的迴圈，則將並列迴圈的時間複雜度相加。例如： for (i=1; i=n; i++)　　x++; for (i=1; i=n; i++)　　for (j=1; j=n; j++)　　x++; 第一個for迴圈的時間複雜度為 O(n) ，第二個for迴圈的時間複雜度為O(n2)， 則整個演算法的時間複雜度為O(n+n2)=O(n2)。 Ο(1) 表示基本語句的執行次數是一個常數，一般來說，只要演算法中不存在迴圈語句，其時間複雜度就是O(1) 常見的演算法時間複雜度由小到大依次為： O(1)＜O(log2n)＜O(n)＜O(nlog2n)＜O(n2)＜O(n3)＜…＜O(2n)＜O(n!) O(log2n)、O(n)、O(nlog2n)、O(n2)和O(n3)稱為 多項式時間 O(2n)和O(n!)稱為 指數時間 雙端隊列（Deque） Deque 在原有隊列的基礎上擴充了：隊頭、隊尾都可以進隊出隊 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 function Deque ( )  let items = [] this .addFirst = function ( e )  items.unshift(e)  this .removeFirst = function ( )  return items.shift()  this .addLast = function ( e )  items.push(e)  this .removeLast = function ( )  return items.pop()   經典的雙端隊列問題：翻轉字符串裡的單詞 輸入: “a good example” 輸出: “example good a” 解釋: 如果兩個單詞間有多餘的空格，將反轉後單詞間的空格減少到只含一個。 說明： 無空格字符構成一個單詞。 輸入字符串可以在前面或者後面包含多餘的空格，但是反轉後的字符不能包括。 如果兩個單詞間有多餘的空格，將反轉後單詞間的空格減少到只含一個。 解題思路：使用雙端隊列解題 首先去除字符串左右空格 逐個讀取字符串中的每個單詞，依次放入雙端隊列的對頭 再將隊列轉換成字符串輸出（已空格為分隔符） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 var reverseWords = function ( s )  let left = 0 let right = s.length - 1 let queue = [] let word = '' while (s.charAt(left) === ' ' ) left ++ while (s.charAt(right) === ' ' ) right -- while (left = right)  let char = s.charAt(left) if (char === ' ' &amp;&amp; word)  queue.unshift(word) word = ''  else if (char !== ' ' ) word += char  left++  console .log(word) // example queue.unshift(word) console .log(queue) // [\"example\", \"good\", \"a\"] return queue.join( ' ' ) ; const ans = reverseWords( \"a good example\" ) console .log(ans) // \"example good a\" 正则 + JS API 1 2 3 var reverseWords = function ( s )  return s.trim().replace( /\\s+/g , ' ' ).split( ' ' ).reverse().join( ' ' ) ; References 前端进阶算法：一看就懂的队列及配套算法题"},"string/queue.html#數據結構：隊列（Queue）":{"title":"&#x6578;&#x64DA;&#x7D50;&#x69CB;&#xFF1A;&#x968A;&#x5217;&#xFF08;Queue&#xFF09;","path":"\\javascript\\string\\queue.html#數據結構：隊列（Queue）","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 function Queue ( ) { let items = [] this .enqueue = function ( e ) { items.push(e) // &#x9032;&#x968A; } this .dequeue = function ( ) { return items.shift() // &#x51FA;&#x968A; } this .isEmpty = function ( ) { return items.length === 0 // &#x662F;&#x5426;&#x662F;&#x7A7A;&#x968A; } this .front = function ( ) { return items[ 0 ] // &#x7372;&#x53D6;&#x968A;&#x982D;&#x5143;&#x7D20; } this .clear = function ( ) { items = [] // &#x6E05;&#x7A7A;&#x968A; } this .size = function ( ) { return items.length // &#x7372;&#x53D6;&#x968A;&#x5217;&#x9577;&#x5EA6; } } &#x67E5;&#x627E;&#xFF1A;&#x5F9E;&#x5C0D;&#x982D;&#x958B;&#x59CB;&#x67E5;&#x627E;&#xFF0C;&#x5F9E;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x70BA; O(n) &#x63D2;&#x5165;&#x6216;&#x522A;&#x9664;&#xFF1A;&#x9032;&#x68E7;&#x8207;&#x51FA;&#x68E7;&#x7684;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x70BA; O(1)"},"string/queue.html#時間複雜度":{"title":"&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;","path":"\\javascript\\string\\queue.html#時間複雜度","body":"&#x5982;&#x679C;&#x6F14;&#x7B97;&#x6CD5;&#x4E2D;&#x5305;&#x542B;&#x5DE2;&#x72C0;&#x7684;&#x8FF4;&#x5708;&#xFF0C;&#x5247;&#x57FA;&#x672C;&#x8A9E;&#x53E5;&#x901A;&#x5E38;&#x662F;&#x6700;&#x5167;&#x5C64;&#x7684;&#x8FF4;&#x5708;&#x9AD4;&#xFF0C;&#x5982;&#x679C;&#x6F14;&#x7B97;&#x6CD5;&#x4E2D;&#x5305;&#x542B;&#x4E26;&#x5217;&#x7684;&#x8FF4;&#x5708;&#xFF0C;&#x5247;&#x5C07;&#x4E26;&#x5217;&#x8FF4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x76F8;&#x52A0;&#x3002;&#x4F8B;&#x5982;&#xFF1A; for (i=1; i=n; i++)&#x3000;&#x3000;x++; for (i=1; i=n; i++)&#x3000;&#x3000;for (j=1; j=n; j++)&#x3000;&#x3000;x++; &#x7B2C;&#x4E00;&#x500B;for&#x8FF4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x70BA; O(n) &#xFF0C;&#x7B2C;&#x4E8C;&#x500B;for&#x8FF4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x70BA;O(n2)&#xFF0C; &#x5247;&#x6574;&#x500B;&#x6F14;&#x7B97;&#x6CD5;&#x7684;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x70BA;O(n+n2)=O(n2)&#x3002; &#x39F;(1) &#x8868;&#x793A;&#x57FA;&#x672C;&#x8A9E;&#x53E5;&#x7684;&#x57F7;&#x884C;&#x6B21;&#x6578;&#x662F;&#x4E00;&#x500B;&#x5E38;&#x6578;&#xFF0C;&#x4E00;&#x822C;&#x4F86;&#x8AAA;&#xFF0C;&#x53EA;&#x8981;&#x6F14;&#x7B97;&#x6CD5;&#x4E2D;&#x4E0D;&#x5B58;&#x5728;&#x8FF4;&#x5708;&#x8A9E;&#x53E5;&#xFF0C;&#x5176;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x5C31;&#x662F;O(1) &#x5E38;&#x898B;&#x7684;&#x6F14;&#x7B97;&#x6CD5;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x7531;&#x5C0F;&#x5230;&#x5927;&#x4F9D;&#x6B21;&#x70BA;&#xFF1A; O(1)&#xFF1C;O(log2n)&#xFF1C;O(n)&#xFF1C;O(nlog2n)&#xFF1C;O(n2)&#xFF1C;O(n3)&#xFF1C;&#x2026;&#xFF1C;O(2n)&#xFF1C;O(n!) O(log2n)&#x3001;O(n)&#x3001;O(nlog2n)&#x3001;O(n2)&#x548C;O(n3)&#x7A31;&#x70BA; &#x591A;&#x9805;&#x5F0F;&#x6642;&#x9593; O(2n)&#x548C;O(n!)&#x7A31;&#x70BA; &#x6307;&#x6578;&#x6642;&#x9593; &#x96D9;&#x7AEF;&#x968A;&#x5217;&#xFF08;Deque&#xFF09; Deque &#x5728;&#x539F;&#x6709;&#x968A;&#x5217;&#x7684;&#x57FA;&#x790E;&#x4E0A;&#x64F4;&#x5145;&#x4E86;&#xFF1A;&#x968A;&#x982D;&#x3001;&#x968A;&#x5C3E;&#x90FD;&#x53EF;&#x4EE5;&#x9032;&#x968A;&#x51FA;&#x968A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 function Deque ( ) { let items = [] this .addFirst = function ( e ) { items.unshift(e) } this .removeFirst = function ( ) { return items.shift() } this .addLast = function ( e ) { items.push(e) } this .removeLast = function ( ) { return items.pop() } }"},"string/queue.html#雙端隊列（Deque）":{"title":"&#x96D9;&#x7AEF;&#x968A;&#x5217;&#xFF08;Deque&#xFF09;","path":"\\javascript\\string\\queue.html#雙端隊列（Deque）","body":"Deque &#x5728;&#x539F;&#x6709;&#x968A;&#x5217;&#x7684;&#x57FA;&#x790E;&#x4E0A;&#x64F4;&#x5145;&#x4E86;&#xFF1A;&#x968A;&#x982D;&#x3001;&#x968A;&#x5C3E;&#x90FD;&#x53EF;&#x4EE5;&#x9032;&#x968A;&#x51FA;&#x968A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 function Deque ( ) { let items = [] this .addFirst = function ( e ) { items.unshift(e) } this .removeFirst = function ( ) { return items.shift() } this .addLast = function ( e ) { items.push(e) } this .removeLast = function ( ) { return items.pop() } }"},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{"title":"&#x7D93;&#x5178;&#x7684;&#x96D9;&#x7AEF;&#x968A;&#x5217;&#x554F;&#x984C;&#xFF1A;&#x7FFB;&#x8F49;&#x5B57;&#x7B26;&#x4E32;&#x88E1;&#x7684;&#x55AE;&#x8A5E;","path":"\\javascript\\string\\queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞","body":"&#x8F38;&#x5165;: &#x201C;a good example&#x201D; &#x8F38;&#x51FA;: &#x201C;example good a&#x201D; &#x89E3;&#x91CB;: &#x5982;&#x679C;&#x5169;&#x500B;&#x55AE;&#x8A5E;&#x9593;&#x6709;&#x591A;&#x9918;&#x7684;&#x7A7A;&#x683C;&#xFF0C;&#x5C07;&#x53CD;&#x8F49;&#x5F8C;&#x55AE;&#x8A5E;&#x9593;&#x7684;&#x7A7A;&#x683C;&#x6E1B;&#x5C11;&#x5230;&#x53EA;&#x542B;&#x4E00;&#x500B;&#x3002; &#x8AAA;&#x660E;&#xFF1A; &#x7121;&#x7A7A;&#x683C;&#x5B57;&#x7B26;&#x69CB;&#x6210;&#x4E00;&#x500B;&#x55AE;&#x8A5E;&#x3002; &#x8F38;&#x5165;&#x5B57;&#x7B26;&#x4E32;&#x53EF;&#x4EE5;&#x5728;&#x524D;&#x9762;&#x6216;&#x8005;&#x5F8C;&#x9762;&#x5305;&#x542B;&#x591A;&#x9918;&#x7684;&#x7A7A;&#x683C;&#xFF0C;&#x4F46;&#x662F;&#x53CD;&#x8F49;&#x5F8C;&#x7684;&#x5B57;&#x7B26;&#x4E0D;&#x80FD;&#x5305;&#x62EC;&#x3002; &#x5982;&#x679C;&#x5169;&#x500B;&#x55AE;&#x8A5E;&#x9593;&#x6709;&#x591A;&#x9918;&#x7684;&#x7A7A;&#x683C;&#xFF0C;&#x5C07;&#x53CD;&#x8F49;&#x5F8C;&#x55AE;&#x8A5E;&#x9593;&#x7684;&#x7A7A;&#x683C;&#x6E1B;&#x5C11;&#x5230;&#x53EA;&#x542B;&#x4E00;&#x500B;&#x3002; &#x89E3;&#x984C;&#x601D;&#x8DEF;&#xFF1A;&#x4F7F;&#x7528;&#x96D9;&#x7AEF;&#x968A;&#x5217;&#x89E3;&#x984C; &#x9996;&#x5148;&#x53BB;&#x9664;&#x5B57;&#x7B26;&#x4E32;&#x5DE6;&#x53F3;&#x7A7A;&#x683C; &#x9010;&#x500B;&#x8B80;&#x53D6;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;&#x6BCF;&#x500B;&#x55AE;&#x8A5E;&#xFF0C;&#x4F9D;&#x6B21;&#x653E;&#x5165;&#x96D9;&#x7AEF;&#x968A;&#x5217;&#x7684;&#x5C0D;&#x982D; &#x518D;&#x5C07;&#x968A;&#x5217;&#x8F49;&#x63DB;&#x6210;&#x5B57;&#x7B26;&#x4E32;&#x8F38;&#x51FA;&#xFF08;&#x5DF2;&#x7A7A;&#x683C;&#x70BA;&#x5206;&#x9694;&#x7B26;&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 var reverseWords = function ( s ) { let left = 0 let right = s.length - 1 let queue = [] let word = &apos;&apos; while (s.charAt(left) === &apos; &apos; ) left ++ while (s.charAt(right) === &apos; &apos; ) right -- while (left = right) { let char = s.charAt(left) if (char === &apos; &apos; &amp;&amp; word) { queue.unshift(word) word = &apos;&apos; } else if (char !== &apos; &apos; ){ word += char } left++ } console .log(word) // example queue.unshift(word) console .log(queue) // [example, good, a] return queue.join( &apos; &apos; ) }; const ans = reverseWords( a good example ) console .log(ans) // example good a &#x6B63;&#x5219; + JS API 1 2 3 var reverseWords = function ( s ) { return s.trim().replace( /\\s+/g , &apos; &apos; ).split( &apos; &apos; ).reverse().join( &apos; &apos; ) };"},"string/queue.html#References":{"title":"References","path":"\\javascript\\string\\queue.html#References","body":"&#x524D;&#x7AEF;&#x8FDB;&#x9636;&#x7B97;&#x6CD5;&#xFF1A;&#x4E00;&#x770B;&#x5C31;&#x61C2;&#x7684;&#x961F;&#x5217;&#x53CA;&#x914D;&#x5957;&#x7B97;&#x6CD5;&#x9898;"}}}