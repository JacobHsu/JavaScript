{"index":{"version":"2.1.0","fields":["title","body"],"fieldVectors":[["title/ajax.html",[0,4.536]],["body/ajax.html",[0,3.378,1,0.328,2,0.391,3,0.427,4,0.515,5,0.515,6,0.588,7,0.787,8,0.873,9,1.097,10,1.032,11,1.369,12,0.837,13,4.095,14,0.04,15,2.29,16,3.949,17,4.095,18,2.449,19,1.267,20,4.095,21,1.016,22,4.095,23,4.095,24,2.628,25,4.095,26,4.095,27,1.666,28,4.095,29,3.427,30,3.427,31,2.855,32,2.628,33,4.095,34,1.666,35,4.095,36,1.214,37,1.382,38,1.247,39,0.94,40,0.968,41,1.138,42,1.155,43,1.267,44,1.155,45,1.307,46,3.796,47,5.292,48,4.095,49,4.095,50,4.095,51,4.636,52,5.916,53,4.095,54,3.378,55,3.166,56,4.095,57,4.095,58,1.583,59,4.095,60,5.916,61,4.095,62,0.884,63,4.095,64,4.095,65,2.734,66,4.095,67,3.663,68,4.095,69,4.095,70,4.095,71,4.095,72,4.095,73,4.095,74,4.095,75,4.095,76,4.095,77,4.095,78,4.095,79,4.095,80,4.095,81,4.095,82,4.095,83,3.378,84,5.916,85,4.881,86,4.095,87,4.328,88,4.881,89,4.095,90,6.945,91,4.095,92,4.095,93,4.095,94,4.095,95,5.916,96,4.095,97,4.095,98,5.916,99,4.095,100,4.095,101,5.916,102,3.166,103,4.095,104,4.095,105,4.095,106,4.095,107,4.095,108,3.378,109,3.378,110,4.095,111,3.378,112,4.095,113,3.378,114,1.931,115,3.747,116,5.078,117,3.378,118,4.842,119,2.281,120,2.067,121,2.855,122,3.378,123,2.734]],["title/RESTfulAPI.html",[18,2.475,124,2.885]],["body/RESTfulAPI.html",[1,0.22,2,0.278,14,0.04,18,5.867,29,4.593,37,1.257,46,6.295,124,5.528,125,5.649,126,5.649,127,6.315,128,6.315,129,6.315,130,6.315,131,6.315,132,7.093,133,5.649,134,5.649,135,5.649,136,5.649,137,6.315,138,6.315,139,7.929,140,6.315,141,6.315,142,6.315,143,7.093,144,6.13,145,6.315,146,5.649,147,5.649,148,5.21,149,5.649,150,7.093,151,5.649,152,5.649,153,2.521,154,5.649,155,5.649,156,7.093,157,5.649,158,5.649,159,4.621,160,5.649,161,5.649,162,5.649]],["title/RESTfulAPI.html#動詞",[163,4.919]],["body/RESTfulAPI.html#動詞",[14,0.033,29,4.248,46,5.94,124,5.113,126,6.56,132,7.77,133,6.56,134,6.56,135,6.56,136,6.56,163,6.56,164,7.334,165,7.334,166,7.334,167,7.334,168,7.334,169,7.334,170,7.334,171,7.334,172,7.334,173,7.334,174,7.334,175,7.334,176,7.334,177,7.334,178,7.334,179,7.334,180,7.334,181,7.334,182,7.334,183,5.113,184,7.334,185,7.334,186,7.334,187,6.56,188,7.334,189,7.334]],["title/RESTfulAPI.html#狀態碼",[190,5.499]],["body/RESTfulAPI.html#狀態碼",[1,0.256,2,0.323,18,5.842,29,4.248,143,7.77,144,6.715,146,6.56,147,6.56,148,6.05,149,6.56,150,6.56,151,6.56,152,6.56,191,7.334,192,7.334,193,7.334,194,7.334,195,7.334,196,7.334,197,7.334,198,7.334,199,7.334,200,7.334,201,7.334,202,7.334,203,7.334,204,7.334,205,7.334,206,7.334,207,7.334,208,7.334,209,7.334,210,6.05,211,7.334,212,7.334]],["title/RESTfulAPI.html#References",[153,2.195]],["body/RESTfulAPI.html#References",[18,5.426,37,1.572,154,7.066,155,7.066,156,8.114,157,7.066,158,7.066,159,5.78,160,7.066,161,7.066,162,7.066]],["title/es6.html",[6,0.302,213,3.701]],["body/es6.html",[1,0.304,2,0.384,3,0.356,6,0.539,14,0.039,87,7.331,213,6.611,214,6.384,215,6.746,216,7.806,217,6.611,218,7.199,219,6.611,220,6.611,221,6.611,222,4.281,223,4.743,224,7.39]],["title/es6.html#Module-的加载实现",[214,3.027,225,4.138]],["body/es6.html#Module-的加载实现",[1,0.306,2,0.387,3,0.36,14,0.029,87,7.349,214,5.478,215,6.798,216,7.865,217,6.697,218,7.254,219,6.697,220,6.697,221,6.697,222,4.337,223,4.805,226,7.487,227,7.487,228,7.487,229,4.998,230,7.487,231,7.487,232,7.487]],["title/RegExp.html",[14,0.016,233,4.138]],["body/RegExp.html",[1,0.306,2,0.387,3,0.313,9,1.165,12,0.889,14,0.04,19,2.011,58,1.723,62,0.759,234,6.502,235,6.502,236,6.502,237,6.502,238,6.502,239,6.502,240,6.502,241,6.502,242,8.449,243,6.502,244,6.502,245,8.075,246,6.502,247,1.677,248,6.502,249,5.629,250,8.075,251,8.075,252,8.075,253,5.39,254,8.075,255,8.783,256,8.075,257,8.075,258,3.057,259,2.043,260,6.502,261,6.502]],["title/asynchronous.html",[262,5.499]],["body/asynchronous.html",[1,0.337,2,0.419,3,0.458,4,0.55,5,0.628,6,0.617,7,0.763,8,0.847,9,1.059,10,0.902,11,1.197,12,0.901,14,0.04,15,2.7,18,2.271,21,1.237,32,3.592,36,1.163,37,1.323,38,0.8,39,0.872,40,0.897,58,1.795,62,0.932,113,3.132,114,2.021,115,4.743,116,4.899,117,3.132,118,4.636,119,2.346,120,1.916,121,2.647,122,3.132,123,2.535,222,2.199,263,3.396,264,3.855,265,5.007,266,2.905,267,4.008,268,3.797,269,3.396,270,6.565,271,3.797,272,2.271,273,1.965,274,4.274,275,3.797,276,3.797,277,1.385,278,3.797,279,3.132,280,1.435,281,1.965,282,3.396]],["title/asynchronous.html#異步",[283,5.499]],["body/asynchronous.html#異步",[1,0.334,2,0.422,3,0.462,4,0.554,5,0.51,6,0.582,7,0.779,8,0.865,9,1.153,10,1.084,11,1.438,14,0.04,15,2.342,21,1.139,36,1.397,37,1.59,38,1.123,39,1.224,40,1.26,58,1.791,62,0.939,113,4.396,114,2.074,115,4.373,116,5.69,117,4.396,118,5.571,119,2.662,120,2.69,121,3.715,122,4.396,123,3.557,263,4.767,284,5.329]],["title/asynchronous.html#setTimeout",[115,2.709]],["body/asynchronous.html#setTimeout",[1,0.323,2,0.392,3,0.428,4,0.511,5,0.635,6,0.598,7,0.651,8,0.722,9,0.701,12,0.978,14,0.04,15,2.706,18,2.906,21,1.239,32,4.283,58,1.687,62,0.885,114,1.705,115,4.566,264,4.237,265,5.97,266,3.192,267,4.482,269,4.346,270,7.34,272,2.906,273,2.515,274,4.698,277,1.772,281,2.515,282,4.346,285,4.859,286,4.859,287,4.859,288,4.859,289,4.859,290,4.859,291,5.506,292,4.859,293,4.859,294,4.859,295,4.346,296,4.859,297,4.859,298,4.859,299,4.859,300,4.859,301,4.859,302,4.859,303,4.859,304,4.859,305,4.859,306,4.859,307,4.859,308,4.859,309,4.859,310,4.859,311,4.859,312,4.859,313,4.859,314,4.859,315,4.652,316,4.859,317,4.859,318,4.859,319,4.859,320,4.859,321,4.859,322,4.859,323,4.859]],["title/event.html",[324,4.919]],["body/event.html",[1,0.287,2,0.362,3,0.396,4,0.489,5,0.525,6,0.6,7,0.802,8,0.725,9,0.966,12,0.906,14,0.04,21,0.895,51,4.472,258,3.15,325,5.992,326,7.357,327,8.303,328,8.303,329,7.357,330,5.992,331,5.992,332,5.992,333,3.56,334,4.67,335,5.992,336,5.992,337,7.357,338,5.992,339,5.992,340,5.992]],["title/event.html#代理",[341,5.499]],["body/event.html#代理",[1,0.285,2,0.361,3,0.394,4,0.487,5,0.523,6,0.597,7,0.799,8,0.72,9,0.96,12,0.902,14,0.04,21,0.889,51,4.441,258,3.128,325,5.951,326,7.326,327,7.326,328,8.283,329,7.326,330,5.951,331,5.951,332,5.951,333,3.535,334,4.638,335,5.951,337,5.951,338,5.951,339,5.951,340,5.951,342,6.653,343,6.653,344,6.653,345,6.653,346,6.653,347,6.653,348,6.653,349,5.951,350,6.653,351,6.653,352,3.634]],["title/arrowFunction.html",[14,0.021]],["body/arrowFunction.html",[1,0.309,2,0.39,3,0.426,4,0.45,5,0.483,6,0.611,7,0.738,8,0.82,9,1.092,10,0.797,14,0.04,19,1.817,21,0.785,62,0.833,114,1.839,247,2.162,353,3.635,354,1.925,355,7.918,356,2.624,357,4.128,358,3.345,359,1.363,360,5.855,361,4.976,362,3.745,363,5.255,364,2.702,365,4.542,366,4.299,367,4.542,368,2.457,369,7.496,370,6.774,371,5.255]],["title/arrowFunction.html#Arrow-Function",[21,0.553,353,2.56]],["body/arrowFunction.html#Arrow-Function",[1,0.308,2,0.389,3,0.425,4,0.448,5,0.481,6,0.609,7,0.735,8,0.815,9,1.087,10,0.791,14,0.04,19,1.802,62,0.83,114,1.833,183,5.252,247,2.153,354,1.915,355,7.894,356,2.61,357,3.711,358,3.334,359,1.356,360,5.824,361,4.96,362,3.734,363,5.213,364,2.68,365,4.505,366,4.264,368,2.444,369,7.467,370,6.738,371,5.213,372,5.827,373,5.827,374,5.827,375,5.827,376,5.827,377,6.738,378,4.808,379,5.827,380,5.827,381,5.827,382,5.827,383,5.827,384,5.827,385,5.827,386,5.827,387,2.68,388,5.827]],["title/closures.html",[389,3.003]],["body/closures.html",[1,0.311,2,0.431,3,0.445,4,0.531,5,0.608,6,0.641,7,0.917,8,0.911,9,1.179,10,1.192,11,1.346,12,0.949,14,0.04,21,1.273,36,1.429,37,1.242,38,1.089,40,1.222,44,0.962,62,0.885,114,1.698,249,3.603,258,2.431,259,1.624,354,2,357,1.681,359,1.692,368,1.107,390,4.624,391,3.412,392,2.242,393,3.091,394,1.536,395,3.996,396,5.169,397,6.239,398,3.329,399,6.084,400,6.239,401,6.239,402,6.239,403,6.239,404,3.132,405,3.412,406,4.073,407,3.412,408,7.039,409,4.992,410,2.018,411,3.412,412,3.412,413,5.169,414,3.412,415,3.412,416,3.412,417,1.813,418,3.782,419,6.226,420,2.19,421,2.638,422,2.497,423,4.624,424,4.624,425,3.052,426,3.052,427,3.052,428,3.052,429,3.052,430,3.052,431,3.052,432,3.052,433,1.864,434,3.052,435,3.052,436,3.052]],["title/closures.html#傳多個函數",[437,5.499]],["body/closures.html#傳多個函數",[1,0.305,2,0.418,3,0.448,4,0.52,5,0.579,6,0.638,7,0.806,8,0.805,9,0.824,10,0.775,14,0.04,21,1.244,40,1.758,62,0.778,114,1.186,259,1.795,354,2.226,359,1.675,390,5.109,404,3.721,408,5.109,409,5.519,410,2.162,419,7.395,422,4.179,423,6.651,424,6.651,425,5.109,426,5.109,427,5.109,428,5.109,429,5.109,430,5.109,431,5.109,432,5.109,433,3.119,434,5.109,435,5.109,436,5.109,438,3.633,439,5.711]],["title/copy.html",[440,3.003]],["body/copy.html",[1,0.302,2,0.381,3,0.417,4,0.514,5,0.552,6,0.612,7,0.575,8,0.638,10,1.296,12,1.052,14,0.04,19,2.143,21,0.788,44,2.548,62,0.923,114,1.439,119,2.75,153,1.628,247,1.052,259,2.882,280,1.541,368,1.323,394,2.654,410,2.358,440,3.784,441,4.078,442,3.647,443,1.413,444,2.227,445,3.647,446,6.711,447,3.295,448,6.486,449,5.356,450,6.334,451,5.893,452,4.078,453,4.078,454,4.865,455,4.111,456,3.364,457,3.364,458,3.364,459,3.364,460,6.693,461,4.865,462,5.356,463,4.559,464,4.559,465,4.078,466,5.356,467,3.647,468,1.185,469,1.797,470,4.078,471,4.078,472,4.585,473,3.647,474,3.785,475,5.275,476,4.078,477,3.364,478,2.983,479,3.647,480,3.647]],["title/copy.html#淺拷貝-Shallow-Copy",[440,2.26,481,4.138]],["body/copy.html#淺拷貝-Shallow-Copy",[1,0.29,2,0.367,3,0.401,4,0.495,5,0.531,6,0.607,7,0.49,8,0.544,10,1.286,12,1.029,14,0.04,19,1.556,44,2.455,62,0.901,119,2.802,153,2.008,247,1.297,259,2.886,280,1.9,410,2.387,440,2.747,442,4.499,443,1.743,444,2.747,445,4.499,446,6.091,447,3.275,448,6.091,449,5.282,450,6.091,451,5.678,454,4.149,456,4.149,457,4.149,458,4.149,459,4.149,460,6.436,461,5.637,462,3.888,463,3.888,464,3.888,482,5.03,483,5.03,484,6.112,485,5.03,486,5.03,487,5.03,488,5.03,489,5.03,490,4.499,491,3.888,492,4.499,493,4.499,494,4.499,495,4.499,496,4.499,497,4.499]],["title/copy.html#深拷貝-Deep-Copy",[440,2.26,490,3.701]],["body/copy.html#深拷貝-Deep-Copy",[1,0.266,2,0.337,3,0.368,4,0.454,5,0.488,6,0.557,7,0.581,8,0.645,10,1.208,12,0.98,14,0.04,19,1.844,44,2.156,62,0.886,119,2.759,247,1.537,259,2.797,410,2.272,446,5.593,447,3.077,448,6.174,449,4.608,450,6.174,451,5.593,454,4.918,456,4.918,457,4.918,458,4.918,459,4.918,460,6.881,461,6.306,462,4.608,463,4.608,464,4.608,484,5.332,491,4.608,492,5.332,493,5.332,494,5.332,495,5.332,496,5.332,497,5.332]],["title/copy.html#Object-assign",[466,4.251]],["body/copy.html#Object-assign",[1,0.244,2,0.308,3,0.337,4,0.416,5,0.446,6,0.51,10,1.231,12,0.93,14,0.04,44,2.381,62,0.794,119,2.531,259,2.85,410,2.239,446,6.636,447,3.308,448,5.117,449,5.407,450,5.117,451,5.117,466,5.407,467,6.256,468,2.033,469,3.082,491,5.407,498,6.994,499,6.994,500,6.994,501,6.994,502,6.994]],["title/copy.html#轉成-JSON-再轉回來",[472,1.812,503,3.317,504,3.317]],["body/copy.html#轉成-JSON-再轉回來",[1,0.275,2,0.347,3,0.38,4,0.469,5,0.503,6,0.456,7,0.61,8,0.678,10,1.07,12,0.998,14,0.04,19,2.439,21,0.836,44,2.224,62,0.911,114,1.793,394,3.549,440,3.419,446,5.77,448,6.316,450,5.77,451,4.58,455,4.364,460,6.674,462,4.84,463,4.84,464,4.84,472,4.95,473,5.6,474,5.06,475,7.054,477,5.165,478,4.58,479,5.6,480,5.6,491,4.84,505,6.26,506,6.26,507,6.26,508,6.26,509,6.26,510,6.26]],["title/core.html",[14,0.016,511,1.342]],["body/core.html",[0,0.514,1,0.338,2,0.414,3,0.445,4,0.525,5,0.557,6,0.612,7,0.793,8,0.854,9,1.062,10,1.076,11,1.201,12,1.004,14,0.04,15,1.633,16,0.416,19,1.532,21,1.22,24,0.4,27,1.027,30,0.681,32,0.4,34,1.759,36,1.182,37,1.289,38,1.27,39,1.256,40,1.255,41,1.519,42,1.282,43,1.337,44,1.077,45,1.128,58,1.418,62,0.916,114,1.849,115,0.579,119,1.54,120,1.628,153,0.249,247,1.411,258,0.786,259,0.908,264,1.243,266,1.073,267,1.157,272,0.372,273,0.322,274,0.34,277,0.92,280,1.443,333,0.331,336,1.052,353,0.385,354,1.532,356,0.734,357,0.307,358,1.219,359,1.107,360,0.481,364,0.769,365,0.481,366,0.456,368,1.722,389,0.34,392,2.146,393,1.729,394,1.135,404,3.367,406,0.322,409,0.416,410,1.223,417,0.331,418,0.456,422,0.861,433,0.34,440,0.34,443,1.323,444,0.34,447,0.92,455,0.82,468,2.06,469,1.112,472,2.085,474,1.36,477,0.514,511,1.147,512,0.456,513,0.623,514,2.081,515,1.052,516,0.557,517,0.557,518,0.557,519,0.557,520,0.557,521,1.477,522,0.623,523,3.876,524,1.311,525,1.176,526,2.72,527,0.434,528,0.861,529,0.728,530,0.785,531,0.755,532,0.844,533,0.385,534,0.728,535,0.753,536,0.861,537,0.4,538,0.314,539,1.035,540,0.4,541,0.4,542,0.361,543,0.4,544,3.074,545,0.704,546,0.728,547,0.385,548,2.654,549,1.438,550,0.385,551,0.372,552,0.361,553,0.361,554,0.361,555,0.361,556,0.623,557,0.361,558,0.661,559,1.675,560,0.361,561,0.361,562,0.361,563,0.361,564,0.361,565,0.361,566,0.361,567,0.361,568,1.044,569,0.844,570,0.681,571,0.361,572,0.361,573,0.681,574,0.361,575,0.361,576,1.128,577,1.185,578,1.137,579,1.417,580,1.154,581,0.879,582,0.879,583,0.896,584,0.896,585,0.815,586,0.896,587,0.707,588,0.722,589,1.176,590,0.623,591,0.35,592,0.35,593,0.35,595,0.623,596,0.35,597,0.322,598,0.35,599,0.913,600,0.34,601,0.34,602,0.34,603,0.34,604,0.34,605,0.623,606,0.498,607,0.479,608,0.498,609,0.518,610,0.737,611,0.498,612,0.518,613,0.529,614,0.529,615,0.529,616,0.518,617,0.529,618,0.529,619,0.529,620,0.529,621,1.495,622,0.529,623,0.529,624,0.529,625,0.529,626,0.314,627,0.331,628,1.715,629,1.044,630,0.623,631,2.329,632,3.534,633,1.044,634,0.625,635,0.889,636,0.625,637,0.623,638,0.889,639,0.331,640,0.331,641,1.741,642,0.331,643,0.331,644,0.609,645,0.331,646,2.76,647,1.019,648,0.331,649,0.331,650,0.331,651,0.331,652,0.331,653,0.541,654,2.494,655,1.496,656,1.223,657,2.586,658,0.481,659,0.623,660,1.052,661,1.38,662,1.052,663,1.052,664,1.052,665,1.052,666,1.052,667,0.514,668,0.514,669,0.514,670,0.514,671,0.514,672,0.514,673,1.293,674,0.514,675,0.514,676,0.481,677,0.481,678,0.557,679,1.293,680,0.755,681,0.481,682,0.909,683,0.481,684,0.481,685,1.052,686,0.481,687,0.623,688,0.82,689,0.416,690,1.378,691,0.481,692,0.481,693,0.481,694,0.481,695,0.481,696,0.909,697,1.293,698,0.481,699,1.176,700,0.481,701,1.223,702,0.971,703,1.223,704,0.753,705,0.456,706,0.456,707,0.456,708,0.456,709,0.456,710,0.416,711,1.126,712,0.755,713,1.359,714,0.623,715,0.456,716,0.456,717,0.456,718,0.456,719,0.623,720,0.434,721,0.434,722,0.623,723,0.82,724,0.434,725,0.434,726,0.434,727,0.416,728,0.434,729,0.434,730,0.434,731,0.514,732,0.785,733,0.416,734,0.785,735,0.416,736,0.416,737,1.116,738,1.116,739,0.416,740,0.785,741,0.416,742,1.414,743,0.623,744,0.416,745,0.416,746,0.416,747,0.785,748,2.268,749,0.623,750,0.623,751,1.267,752,0.4,753,0.969,754,0.4,755,0.755,756,0.4,757,0.4,758,0.4,759,0.4,760,0.4,761,0.4,762,1.044,763,0.385,764,0.385,765,0.385,766,0.623,767,0.728,768,2.237,769,1.097,770,0.385,771,1.675,772,2.112,773,0.372,774,0.372,775,0.372,776,0.969,777,0.969,778,0.681,779,1.729,780,1.036,781,0.94,782,0.372,783,0.623,784,0.623,785,1.895,786,0.557,787,0.557,788,0.557,789,1.052,790,0.557,791,0.557,792,0.456,793,0.971,794,0.557,795,0.557,796,0.94,797,0.704,798,0.728,799,2.257,800,1.166,801,0.623,802,1.052,803,0.481,804,0.481,805,0.557,806,0.557,807,0.557,808,0.557,809,2.586,810,2.586,811,0.557,812,0.557,813,1.38,814,0.557,815,2.257,816,3.415,817,0.623,818,0.557,819,1.509,820,1.38,821,0.623,822,1.895,823,1.052,824,0.557,825,1.052,826,0.557,827,0.557,828,2.464,829,1.38,830,2.015,831,0.514,832,0.514,833,1.95,834,0.909,835,1.895,836,0.514,837,0.514,838,0.623,839,0.971,840,0.514,841,0.514,842,0.514,843,0.514,844,0.514,845,0.514,846,0.861,847,0.514,848,0.861,849,0.514,850,0.861,851,0.514,852,0.861,853,0.514,854,1.293,855,1.496,856,0.557,857,1.293,858,0.557,859,0.557,860,0.623,861,0.557,862,0.557,863,0.557,864,0.557,865,1.052,866,1.176,867,0.557,868,0.557,869,0.557,870,null,871,1.052,872,0.557,873,0.557,874,0.557,875,0.557,876,0.557,877,0.322,878,0.785,879,2.586,880,0.557,881,0.557,882,1.052,883,1.496,884,0.557,885,0.557,886,1.052,887,0.557,888,0.557,889,0.557,890,1.052,891,1.496,892,1.496,893,1.052,894,3.366,895,0.971,896,0.557,897,1.895,898,0.557,899,1.073,900,1.052,901,1.176,902,0.557,903,0.861,904,1.052,905,0.557,906,0.557,907,0.557,908,0.557,909,0.557,910,0.623,911,0.557,912,2.793,913,1.052,914,0.557,915,1.116,916,0.971,917,0.481,918,0.557,919,1.052,920,0.514,921,0.557,922,0.557,923,0.557,924,0.557,925,0.557,926,0.557,927,0.623,928,0.623,929,0.557,930,0.557,931,0.557,932,0.557,933,1.496,934,1.55,935,0.909,936,0.971,937,0.623,938,1.38,939,0.557,940,1.052,941,0.557,942,1.496,943,1.052,944,0.557,945,0.557,946,0.557,947,0.514,948,1.052,949,0.557,950,0.557,951,0.557,952,0.557,953,0.557,954,0.557,955,0.557,956,0.557,957,0.4,958,1.052,959,1.052,960,1.052,961,1.895,962,1.895,963,0.557,964,1.052,965,1.052]],["title/core.html#JavaScript-直譯器轉換過程",[511,1.342,966,4.138]],["body/core.html#JavaScript-直譯器轉換過程",[1,0.338,2,0.413,3,0.43,4,0.508,5,0.528,6,0.567,7,0.744,8,0.785,9,0.977,10,1.123,11,0.943,12,1.001,14,0.04,15,1.534,19,2.243,21,1.131,27,1.893,34,1.893,36,1.072,37,0.926,38,0.98,39,0.683,40,0.703,41,1.292,42,0.839,43,0.92,44,0.839,45,0.95,58,1.555,62,0.935,114,2.009,115,0.852,119,0.892,247,1.87,258,1.842,259,1.462,266,0.642,273,0.895,277,0.631,280,0.654,352,2.139,354,0.996,357,0.852,358,1.124,359,0.311,364,0.795,368,2.101,378,1.427,387,0.795,392,1.717,394,2.36,404,3.625,406,0.895,410,1.672,418,1.265,422,2.177,433,0.945,438,1.234,443,1.984,447,1.085,468,1.783,469,1.311,511,1.271,514,2.455,515,2.662,516,1.547,517,1.547,518,1.547,519,1.547,520,1.547,523,0.919,524,1.841,527,1.206,528,1.265,529,1.841,530,1.987,531,1.91,532,0.873,533,1.07,534,1.841,535,0.778,536,2.177,537,1.11,538,0.873,539,2.424,540,1.11,541,1.11,542,1.002,543,1.11,544,2.615,545,1.034,546,1.841,547,1.07,548,2.472,549,2.495,550,1.07,551,1.034,552,1.002,553,1.002,554,1.002,555,1.002,557,1.002,558,0.972,559,3.037,560,1.002,561,1.002,562,1.002,563,1.002,564,1.002,565,1.002,566,1.002,567,1.002,568,2.292,569,1.977,570,1.724,571,1.002,572,1.002,573,1.724,574,1.002,575,1.002,576,0.95,577,0.997,578,1.049,579,1.105,580,1.188,581,1.234,582,1.234,583,1.259,584,1.259,585,1.145,586,1.259,587,1.259,588,1.691,591,0.972,592,0.972,593,0.972,596,0.972,597,0.895,598,0.972,599,0.945,600,0.945,601,0.945,602,0.945,603,0.945,604,0.945,606,0.732,607,0.704,608,0.732,609,0.762,610,0.762,611,0.732,612,0.762,613,0.778,614,0.778,615,0.778,616,0.762,617,0.778,618,0.778,619,0.778,620,0.778,621,0.732,622,0.778,623,0.778,624,0.778,625,0.778,626,0.873,627,0.919,628,3.259,629,1.466,631,2.188,633,0.852,634,0.919,635,0.919,636,0.919,638,0.919,639,0.919,640,0.919,641,1.929,642,0.919,643,0.919,644,0.895,645,0.919,647,2.238,648,0.919,649,0.919,650,0.919,651,0.919,652,0.919,653,0.795,967,1.73,968,1.73,969,1.73,970,1.73,971,2.976,972,1.73,973,1.73,974,1.73,975,1.73,976,1.73,977,1.73,978,2.455,979,1.547,980,2.978,981,1.547,982,1.547,983,1.547,984,1.547,985,3.504,986,1.547,987,1.547,988,1.547,989,1.547,990,3.095,991,1.547,992,3.504,993,1.547,994,1.547,995,1.547,996,1.547,997,1.547,998,2.786,999,1.547,1000,1.11,1001,1.547,1002,1.547,1003,1.427,1004,1.427,1005,1.427,1006,1.427,1007,1.427,1008,1.427,1009,1.427,1010,1.427,1011,1.427,1012,1.427,1013,1.427,1014,1.427,1015,1.427,1016,1.337,1017,1.337,1018,1.337,1019,1.337,1020,1.337,1021,1.337,1022,2.075,1023,1.265,1024,1.265,1025,1.265,1026,1.265,1027,1.265,1028,1.625,1029,0.895,1030,2.075,1031,1.206,1032,1.206,1033,1.206,1034,1.91,1035,1.155,1036,1.155,1037,1.155,1038,1.155,1039,1.155,1040,1.155,1041,1.155,1042,1.155,1043,3.544,1044,1.155,1045,1.155,1046,1.987,1047,1.987,1048,1.155,1049,1.155,1050,1.155,1051,1.155,1052,1.155,1053,1.155,1054,1.155,1055,1.07,1056,1.11,1057,1.11,1058,1.11,1059,1.11,1060,1.11,1061,0.972,1062,1.07,1063,1.07,1064,1.07,1065,1.07,1066,1.002,1067,1.07,1068,1.07,1069,1.07,1070,1.07,1071,1.07,1072,1.07,1073,1.07,1074,1.07,1075,1.07,1076,1.724,1077,1.002,1078,1.034,1079,1.034,1080,1.034,1081,1.034,1082,1.034,1083,1.034,1084,1.034,1085,1.034,1086,1.034,1087,1.034,1088,1.673,1089,1.673,1090,1.002,1091,1.002,1092,1.002,1093,1.002,1094,1.002,1095,1.002,1096,1.724,1097,1.002,1098,1.002,1099,1.002,1100,1.002,1101,1.002,1102,1.002,1103,1.002,1104,1.002,1105,1.002,1106,1.002,1107,1.002,1108,1.002,1109,1.002,1110,0.972,1111,0.895,1112,0.972,1113,0.972,1114,0.945,1115,0.945,1116,0.945,1117,0.945,1118,0.919,1119,0.945,1120,0.919,1121,0.945,1122,0.945,1123,0.945,1124,0.945,1125,0.945,1126,0.945,1127,0.945,1128,0.919,1129,0.945,1130,0.945,1131,0.813,1132,0.945,1133,0.873,1134,0.945,1135,0.945,1136,0.945,1137,1.625,1138,0.945,1139,0.945,1140,1.625,1141,1.625,1142,1.625,1143,0.945,1144,0.945,1145,0.945,1146,0.945,1147,0.945,1148,0.919]],["title/core.html#提升（Hoisting）",[978,4.536]],["body/core.html#提升（Hoisting）",[1,0.338,2,0.414,3,0.432,4,0.51,5,0.53,6,0.57,7,0.747,8,0.789,9,0.983,10,1.128,11,0.952,12,1.003,14,0.04,15,1.549,19,2.255,21,1.135,27,1.911,34,1.911,36,1.08,37,0.935,38,0.99,39,0.692,40,0.712,41,1.305,42,0.85,43,0.932,44,0.85,45,0.962,58,1.562,62,0.936,114,2.013,115,0.864,119,0.903,247,1.881,258,1.862,259,1.476,266,0.651,273,0.908,277,0.64,280,0.663,352,2.163,354,1.007,357,0.864,358,1.139,359,0.316,364,0.807,368,2.115,387,0.807,392,1.731,394,2.38,404,3.64,406,0.908,410,1.682,422,2.205,433,0.959,438,1.25,443,2,447,1.099,468,1.796,469,1.328,511,1.285,523,0.933,524,1.865,527,1.224,528,1.284,529,1.865,530,2.012,531,1.934,532,0.886,533,1.086,534,1.865,535,0.79,536,2.205,537,1.126,538,0.886,539,2.45,540,1.126,541,1.126,542,1.017,543,1.126,544,2.641,545,1.05,546,1.865,547,1.086,548,2.492,549,2.514,550,1.086,551,1.05,552,1.017,553,1.017,554,1.017,555,1.017,557,1.017,558,0.986,559,3.064,560,1.017,561,1.017,562,1.017,563,1.017,564,1.017,565,1.017,566,1.017,567,1.017,568,2.314,569,1.999,570,1.746,571,1.017,572,1.017,573,1.746,574,1.017,575,1.017,576,0.962,577,1.01,578,1.062,579,1.119,580,1.203,581,1.25,582,1.25,583,1.275,584,1.275,585,1.159,586,1.275,587,1.275,588,1.71,591,0.986,592,0.986,593,0.986,596,0.986,597,0.908,598,0.986,599,0.959,600,0.959,601,0.959,602,0.959,603,0.959,604,0.959,606,0.743,607,0.714,608,0.743,609,0.773,610,0.773,611,0.743,612,0.773,613,0.79,614,0.79,615,0.79,616,0.773,617,0.79,618,0.79,619,0.79,620,0.79,621,0.743,622,0.79,623,0.79,624,0.79,625,0.79,626,0.886,627,0.933,628,3.283,629,1.484,631,2.209,633,0.864,634,0.933,635,0.933,636,0.933,638,0.933,639,0.933,640,0.933,641,1.951,642,0.933,643,0.933,644,0.908,645,0.933,647,2.26,648,0.933,649,0.933,650,0.933,651,0.933,652,0.933,653,0.807,978,1.448,979,1.57,980,2.999,981,1.57,982,1.57,983,1.57,984,1.57,985,3.542,986,1.57,987,1.57,988,1.57,989,1.57,990,3.118,991,1.57,992,3.542,993,1.57,994,1.57,995,1.57,996,1.57,997,1.57,998,2.811,999,1.57,1000,1.126,1001,1.57,1002,1.57,1003,1.448,1004,1.448,1005,1.448,1006,1.448,1007,1.448,1008,1.448,1009,1.448,1010,1.448,1011,1.448,1012,1.448,1013,1.448,1014,1.448,1015,1.448,1016,1.357,1017,1.357,1018,1.357,1019,1.357,1020,1.357,1021,1.357,1022,2.101,1023,1.284,1024,1.284,1025,1.284,1026,1.284,1027,1.284,1028,1.646,1029,0.908,1030,2.101,1031,1.224,1032,1.224,1033,1.224,1034,1.934,1035,1.172,1036,1.172,1037,1.172,1038,1.172,1039,1.172,1040,1.172,1041,1.172,1042,1.172,1043,3.572,1044,1.172,1045,1.172,1046,2.012,1047,2.012,1048,1.172,1049,1.172,1050,1.172,1051,1.172,1052,1.172,1053,1.172,1054,1.172,1055,1.086,1056,1.126,1057,1.126,1058,1.126,1059,1.126,1060,1.126,1061,0.986,1062,1.086,1063,1.086,1064,1.086,1065,1.086,1066,1.017,1067,1.086,1068,1.086,1069,1.086,1070,1.086,1071,1.086,1072,1.086,1073,1.086,1074,1.086,1075,1.086,1076,1.746,1077,1.017,1078,1.05,1079,1.05,1080,1.05,1081,1.05,1082,1.05,1083,1.05,1084,1.05,1085,1.05,1086,1.05,1087,1.05,1088,1.694,1089,1.694,1090,1.017,1091,1.017,1092,1.017,1093,1.017,1094,1.017,1095,1.017,1096,1.746,1097,1.017,1098,1.017,1099,1.017,1100,1.017,1101,1.017,1102,1.017,1103,1.017,1104,1.017,1105,1.017,1106,1.017,1107,1.017,1108,1.017,1109,1.017,1110,0.986,1111,0.908,1112,0.986,1113,0.986,1114,0.959,1115,0.959,1116,0.959,1117,0.959,1118,0.933,1119,0.959,1120,0.933,1121,0.959,1122,0.959,1123,0.959,1124,0.959,1125,0.959,1126,0.959,1127,0.959,1128,0.933,1129,0.959,1130,0.959,1131,0.825,1132,0.959,1133,0.886,1134,0.959,1135,0.959,1136,0.959,1137,1.646,1138,0.959,1139,0.959,1140,1.646,1141,1.646,1142,1.646,1143,0.959,1144,0.959,1145,0.959,1146,0.959,1147,0.959,1148,0.933]],["title/core.html#同步-非同步",[1003,4.536]],["body/core.html#同步-非同步",[1,0.337,2,0.407,3,0.422,4,0.484,5,0.511,6,0.558,7,0.726,8,0.75,9,0.952,10,1.154,11,0.924,12,0.981,14,0.04,15,1.693,19,2.304,21,0.995,27,2.089,34,2.089,36,1.085,37,1.022,38,1.082,39,0.777,40,0.799,41,1.426,42,0.954,43,1.046,44,0.954,45,1.08,58,1.624,62,0.937,114,2.02,115,0.99,119,1.014,247,1.921,258,2.058,259,1.613,266,0.746,273,1.04,277,0.733,280,0.759,352,2.391,354,1.113,357,0.99,358,1.278,359,0.362,368,1.665,387,0.924,392,1.014,394,2.577,406,1.04,410,1.779,433,1.098,438,1.403,443,1.779,447,1.233,468,1.918,469,1.49,511,1.097,523,1.068,524,1.244,527,1.401,528,1.471,529,2.092,530,2.258,531,2.17,532,1.014,533,1.244,534,2.092,535,0.905,536,2.474,537,1.29,538,1.014,539,2.709,540,1.29,541,1.29,542,1.164,543,1.29,544,2.885,545,1.202,546,2.092,547,1.244,548,2.679,549,2.685,550,1.244,551,1.202,552,1.164,553,1.164,554,1.164,555,1.164,557,1.164,558,1.13,559,3.318,560,1.164,561,1.164,562,1.164,563,1.164,564,1.164,565,1.164,566,1.164,567,1.164,568,2.529,569,2.209,570,1.959,571,1.164,572,1.164,573,1.959,574,1.164,575,1.164,576,1.08,577,1.133,578,1.192,579,1.255,580,1.35,581,1.403,582,1.403,583,1.431,584,1.431,585,1.301,586,1.431,587,1.431,588,1.89,591,1.13,592,1.13,593,1.13,596,1.13,597,1.04,598,1.13,599,1.098,600,1.098,601,1.098,602,1.098,603,1.098,604,1.098,606,0.85,607,0.818,608,0.85,609,0.886,610,0.886,611,0.85,612,0.886,613,0.905,614,0.905,615,0.905,616,0.886,617,0.905,618,0.905,619,0.905,620,0.905,621,0.85,622,0.905,623,0.905,624,0.905,625,0.905,626,1.014,627,1.068,628,3.507,629,1.666,631,2.414,633,0.99,634,1.068,635,1.068,636,1.068,638,1.068,639,1.068,640,1.068,641,2.156,642,1.068,643,1.068,644,1.04,645,1.068,647,2.47,648,1.068,649,1.068,650,1.068,651,1.068,652,1.068,653,0.924,980,2.634,990,3.132,998,1.797,1004,1.658,1005,1.658,1006,1.658,1007,1.658,1008,1.658,1009,1.658,1010,1.658,1011,1.658,1012,1.658,1013,1.658,1014,1.658,1015,1.658,1016,1.554,1017,1.554,1018,1.554,1019,1.554,1020,1.554,1021,1.554,1022,2.357,1023,1.471,1024,1.471,1025,1.471,1026,1.471,1027,1.471,1028,1.847,1029,1.04,1030,2.357,1031,1.401,1032,1.401,1033,1.401,1034,2.17,1035,1.342,1036,1.342,1037,1.342,1038,1.342,1039,1.342,1040,1.342,1041,1.342,1042,1.342,1043,3.839,1044,1.342,1045,1.342,1046,2.258,1047,2.258,1048,1.342,1049,1.342,1050,1.342,1051,1.342,1052,1.342,1053,1.342,1054,1.342,1055,1.244,1056,1.29,1057,1.29,1058,1.29,1059,1.29,1060,1.29,1061,1.13,1062,1.244,1063,1.244,1064,1.244,1065,1.244,1066,1.164,1067,1.244,1068,1.244,1069,1.244,1070,1.244,1071,1.244,1072,1.244,1073,1.244,1074,1.244,1075,1.244,1076,1.959,1077,1.164,1078,1.202,1079,1.202,1080,1.202,1081,1.202,1082,1.202,1083,1.202,1084,1.202,1085,1.202,1086,1.202,1087,1.202,1088,1.901,1089,1.901,1090,1.164,1091,1.164,1092,1.164,1093,1.164,1094,1.164,1095,1.164,1096,1.959,1097,1.164,1098,1.164,1099,1.164,1100,1.164,1101,1.164,1102,1.164,1103,1.164,1104,1.164,1105,1.164,1106,1.164,1107,1.164,1108,1.164,1109,1.164,1110,1.13,1111,1.04,1112,1.13,1113,1.13,1114,1.098,1115,1.098,1116,1.098,1117,1.098,1118,1.068,1119,1.098,1120,1.068,1121,1.098,1122,1.098,1123,1.098,1124,1.098,1125,1.098,1126,1.098,1127,1.098,1128,1.068,1129,1.098,1130,1.098,1131,0.945,1132,1.098,1133,1.014,1134,1.098,1135,1.098,1136,1.098,1137,1.847,1138,1.098,1139,1.098,1140,1.847,1141,1.847,1142,1.847,1143,1.098,1144,1.098,1145,1.098,1146,1.098,1147,1.098,1148,1.068]],["title/core.html#LHS",[528,4.023]],["body/core.html#LHS",[1,0.337,2,0.406,3,0.42,4,0.487,5,0.514,6,0.562,7,0.731,8,0.756,9,0.96,10,1.159,11,0.935,12,0.985,14,0.04,15,1.713,19,2.32,21,0.97,27,2.114,34,2.114,36,1.095,37,1.034,38,1.095,39,0.789,40,0.812,41,1.444,42,0.969,43,1.063,44,0.969,45,1.097,58,1.632,62,0.937,114,2.02,119,1.03,247,1.935,258,2.087,259,1.633,266,0.76,273,1.06,277,0.747,280,0.774,352,2.424,354,1.128,357,1.009,358,1.298,359,0.369,368,1.686,387,0.942,392,1.03,394,2.606,406,1.06,410,1.793,433,1.119,438,1.425,443,1.8,447,1.253,468,1.936,469,1.514,511,1.115,523,1.089,524,1.268,529,2.126,530,2.294,531,2.205,532,1.034,533,1.268,534,2.126,535,0.922,536,2.514,537,1.315,538,1.034,539,2.746,540,1.315,541,1.315,542,1.187,543,1.315,544,2.921,545,1.225,546,2.126,547,1.268,548,2.705,549,2.709,550,1.268,551,1.225,552,1.187,553,1.187,554,1.187,555,1.187,557,1.187,558,1.151,559,3.354,560,1.187,561,1.187,562,1.187,563,1.187,564,1.187,565,1.187,566,1.187,567,1.187,568,2.56,569,2.24,570,1.991,571,1.187,572,1.187,573,1.991,574,1.187,575,1.187,576,1.097,577,1.152,578,1.211,579,1.275,580,1.372,581,1.425,582,1.425,583,1.454,584,1.454,585,1.322,586,1.454,587,1.454,588,1.916,591,1.151,592,1.151,593,1.151,596,1.151,597,1.06,598,1.151,599,1.119,600,1.119,601,1.119,602,1.119,603,1.119,604,1.119,606,0.867,607,0.834,608,0.867,609,0.903,610,0.903,611,0.867,612,0.903,613,0.922,614,0.922,615,0.922,616,0.903,617,0.922,618,0.922,619,0.922,620,0.922,621,0.867,622,0.922,623,0.922,624,0.922,625,0.922,626,1.034,627,1.089,628,3.538,629,1.693,631,2.443,633,1.009,634,1.089,635,1.089,636,1.089,638,1.089,639,1.089,640,1.089,641,2.186,642,1.089,643,1.089,644,1.06,645,1.089,647,2.5,648,1.089,649,1.089,650,1.089,651,1.089,652,1.089,653,0.942,980,2.662,990,3.163,998,1.826,1016,1.584,1017,1.584,1018,1.584,1019,1.584,1020,1.584,1021,1.584,1022,2.396,1023,1.499,1024,1.499,1025,1.499,1026,1.499,1027,1.499,1028,1.877,1029,1.06,1030,2.396,1031,1.428,1032,1.428,1033,1.428,1034,2.205,1035,1.368,1036,1.368,1037,1.368,1038,1.368,1039,1.368,1040,1.368,1041,1.368,1042,1.368,1043,3.877,1044,1.368,1045,1.368,1046,2.294,1047,2.294,1048,1.368,1049,1.368,1050,1.368,1051,1.368,1052,1.368,1053,1.368,1054,1.368,1055,1.268,1056,1.315,1057,1.315,1058,1.315,1059,1.315,1060,1.315,1061,1.151,1062,1.268,1063,1.268,1064,1.268,1065,1.268,1066,1.187,1067,1.268,1068,1.268,1069,1.268,1070,1.268,1071,1.268,1072,1.268,1073,1.268,1074,1.268,1075,1.268,1076,1.991,1077,1.187,1078,1.225,1079,1.225,1080,1.225,1081,1.225,1082,1.225,1083,1.225,1084,1.225,1085,1.225,1086,1.225,1087,1.225,1088,1.931,1089,1.931,1090,1.187,1091,1.187,1092,1.187,1093,1.187,1094,1.187,1095,1.187,1096,1.991,1097,1.187,1098,1.187,1099,1.187,1100,1.187,1101,1.187,1102,1.187,1103,1.187,1104,1.187,1105,1.187,1106,1.187,1107,1.187,1108,1.187,1109,1.187,1110,1.151,1111,1.06,1112,1.151,1113,1.151,1114,1.119,1115,1.119,1116,1.119,1117,1.119,1118,1.089,1119,1.119,1120,1.089,1121,1.119,1122,1.119,1123,1.119,1124,1.119,1125,1.119,1126,1.119,1127,1.119,1128,1.089,1129,1.119,1130,1.119,1131,0.963,1132,1.119,1133,1.034,1134,1.119,1135,1.119,1136,1.119,1137,1.877,1138,1.119,1139,1.119,1140,1.877,1141,1.877,1142,1.877,1143,1.119,1144,1.119,1145,1.119,1146,1.119,1147,1.119,1148,1.089]],["title/core.html#陳述式-表達式",[1022,2.885,1023,3.027]],["body/core.html#陳述式-表達式",[1,0.337,2,0.408,3,0.422,4,0.49,5,0.517,6,0.566,7,0.737,8,0.763,9,0.969,10,1.165,11,0.947,12,0.989,14,0.04,15,1.735,19,2.337,21,0.978,27,2.141,34,2.141,36,1.107,37,1.047,38,1.109,39,0.803,40,0.826,41,1.462,42,0.986,43,1.081,44,0.986,45,1.116,58,1.641,62,0.939,114,2.024,119,1.048,247,1.817,258,2.118,259,1.654,266,0.776,273,1.082,277,0.762,280,0.79,352,2.46,354,1.145,357,1.03,358,1.321,359,0.376,368,1.707,387,0.961,392,1.048,394,2.635,406,1.082,410,1.807,433,1.142,438,1.45,443,1.824,447,1.275,468,1.954,469,0.921,511,0.678,523,1.111,534,1.294,537,1.342,538,1.055,539,2.787,540,1.342,541,1.342,542,1.211,543,1.342,544,2.958,545,1.25,546,2.163,547,1.294,548,2.733,549,2.734,550,1.294,551,1.25,552,1.211,553,1.211,554,1.211,555,1.211,557,1.211,558,1.175,559,3.392,560,1.211,561,1.211,562,1.211,563,1.211,564,1.211,565,1.211,566,1.211,567,1.211,568,2.592,569,2.273,570,2.025,571,1.211,572,1.211,573,2.025,574,1.211,575,1.211,576,1.116,577,1.171,578,1.232,579,1.297,580,1.395,581,1.45,582,1.45,583,1.479,584,1.479,585,1.345,586,1.479,587,1.479,588,1.944,591,1.175,592,1.175,593,1.175,596,1.175,597,1.082,598,1.175,599,1.142,600,1.142,601,1.142,602,1.142,603,1.142,604,1.142,606,0.884,607,0.851,608,0.884,609,0.921,610,0.921,611,0.884,612,0.921,613,0.941,614,0.941,615,0.941,616,0.921,617,0.941,618,0.941,619,0.941,620,0.941,621,0.884,622,0.941,623,0.941,624,0.941,625,0.941,626,1.055,627,1.111,628,3.571,629,1.722,631,2.475,633,1.03,634,1.111,635,1.111,636,1.111,638,1.111,639,1.111,640,1.111,641,2.218,642,1.111,643,1.111,644,1.082,645,1.111,647,2.532,648,1.111,649,1.111,650,1.111,651,1.111,652,1.111,653,0.961,980,2.693,990,3.195,998,1.857,1022,1.457,1024,1.53,1025,1.53,1026,1.53,1027,1.53,1028,1.909,1029,1.082,1030,2.437,1031,1.457,1032,1.457,1033,1.457,1034,2.243,1035,1.396,1036,1.396,1037,1.396,1038,1.396,1039,1.396,1040,1.396,1041,1.396,1042,1.396,1043,3.917,1044,1.396,1045,1.396,1046,2.333,1047,2.333,1048,1.396,1049,1.396,1050,1.396,1051,1.396,1052,1.396,1053,1.396,1054,1.396,1055,1.294,1056,1.342,1057,1.342,1058,1.342,1059,1.342,1060,1.342,1061,1.175,1062,1.294,1063,1.294,1064,1.294,1065,1.294,1066,1.211,1067,1.294,1068,1.294,1069,1.294,1070,1.294,1071,1.294,1072,1.294,1073,1.294,1074,1.294,1075,1.294,1076,2.025,1077,1.211,1078,1.25,1079,1.25,1080,1.25,1081,1.25,1082,1.25,1083,1.25,1084,1.25,1085,1.25,1086,1.25,1087,1.25,1088,1.964,1089,1.964,1090,1.211,1091,1.211,1092,1.211,1093,1.211,1094,1.211,1095,1.211,1096,2.025,1097,1.211,1098,1.211,1099,1.211,1100,1.211,1101,1.211,1102,1.211,1103,1.211,1104,1.211,1105,1.211,1106,1.211,1107,1.211,1108,1.211,1109,1.211,1110,1.175,1111,1.082,1112,1.175,1113,1.175,1114,1.142,1115,1.142,1116,1.142,1117,1.142,1118,1.111,1119,1.142,1120,1.111,1121,1.142,1122,1.142,1123,1.142,1124,1.142,1125,1.142,1126,1.142,1127,1.142,1128,1.111,1129,1.142,1130,1.142,1131,0.983,1132,1.142,1133,1.055,1134,1.142,1135,1.142,1136,1.142,1137,1.909,1138,1.142,1139,1.142,1140,1.909,1141,1.909,1142,1.909,1143,1.142,1144,1.142,1145,1.142,1146,1.142,1147,1.142,1148,1.111]],["title/core.html#立即函式",[1029,2.846]],["body/core.html#立即函式",[1,0.335,2,0.407,3,0.421,4,0.486,5,0.511,6,0.557,7,0.722,8,0.737,9,0.927,10,1.159,11,0.965,12,0.979,14,0.04,15,1.768,19,2.362,21,0.989,27,2.181,34,2.181,36,1.123,37,1.067,38,1.13,39,0.823,40,0.847,41,1.49,42,1.01,43,1.108,44,1.01,45,1.144,58,1.654,62,0.941,114,2.03,247,1.84,258,2.163,259,1.685,266,0.799,277,0.785,280,0.814,352,2.512,354,1.169,357,1.061,358,1.354,359,0.388,368,1.739,387,0.99,392,0.646,394,2.679,406,1.115,410,1.828,433,1.176,438,1.486,443,1.858,447,1.307,468,1.98,469,0.949,511,0.699,534,1.332,539,2.846,540,1.382,541,1.382,542,1.247,543,1.382,544,3.014,545,1.288,546,2.217,547,1.332,548,2.774,549,2.771,550,1.332,551,1.288,552,1.247,553,1.247,554,1.247,555,1.247,557,1.247,558,1.21,559,3.448,560,1.247,561,1.247,562,1.247,563,1.247,564,1.247,565,1.247,566,1.247,567,1.247,568,2.641,569,2.322,570,2.075,571,1.247,572,1.247,573,2.075,574,1.247,575,1.247,576,1.144,577,1.201,578,1.262,579,1.33,580,1.43,581,1.486,582,1.486,583,1.516,584,1.516,585,1.378,586,1.516,587,1.516,588,1.986,591,1.21,592,1.21,593,1.21,596,1.21,597,1.115,598,1.21,599,1.176,600,1.176,601,1.176,602,1.176,603,1.176,604,1.176,606,0.911,607,0.876,608,0.911,609,0.949,610,0.949,611,0.911,612,0.949,613,0.969,614,0.969,615,0.969,616,0.949,617,0.969,618,0.969,619,0.969,620,0.969,621,0.911,622,0.969,623,0.969,624,0.969,625,0.969,626,1.087,627,1.144,628,3.62,629,1.765,631,2.521,633,1.061,634,1.144,635,1.144,636,1.144,638,1.144,639,1.144,640,1.144,641,2.266,642,1.144,643,1.144,644,1.115,645,1.144,647,2.579,648,1.144,649,1.144,650,1.144,651,1.144,652,1.144,653,0.99,980,2.738,990,3.243,998,1.904,1028,1.176,1030,2.497,1031,1.501,1032,1.501,1033,1.501,1034,2.299,1035,1.438,1036,1.438,1037,1.438,1038,1.438,1039,1.438,1040,1.438,1041,1.438,1042,1.438,1043,3.976,1044,1.438,1045,1.438,1046,2.392,1047,2.392,1048,1.438,1049,1.438,1050,1.438,1051,1.438,1052,1.438,1053,1.438,1054,1.438,1055,1.332,1056,1.382,1057,1.382,1058,1.382,1059,1.382,1060,1.382,1061,1.21,1062,1.332,1063,1.332,1064,1.332,1065,1.332,1066,1.247,1067,1.332,1068,1.332,1069,1.332,1070,1.332,1071,1.332,1072,1.332,1073,1.332,1074,1.332,1075,1.332,1076,2.075,1077,1.247,1078,1.288,1079,1.288,1080,1.288,1081,1.288,1082,1.288,1083,1.288,1084,1.288,1085,1.288,1086,1.288,1087,1.288,1088,2.014,1089,2.014,1090,1.247,1091,1.247,1092,1.247,1093,1.247,1094,1.247,1095,1.247,1096,2.075,1097,1.247,1098,1.247,1099,1.247,1100,1.247,1101,1.247,1102,1.247,1103,1.247,1104,1.247,1105,1.247,1106,1.247,1107,1.247,1108,1.247,1109,1.247,1110,1.21,1111,1.115,1112,1.21,1113,1.21,1114,1.176,1115,1.176,1116,1.176,1117,1.176,1118,1.144,1119,1.176,1120,1.144,1121,1.176,1122,1.176,1123,1.176,1124,1.176,1125,1.176,1126,1.176,1127,1.176,1128,1.144,1129,1.176,1130,1.176,1131,1.013,1132,1.176,1133,1.087,1134,1.176,1135,1.176,1136,1.176,1137,1.957,1138,1.176,1139,1.176,1140,1.957,1141,1.957,1142,1.957,1143,1.176,1144,1.176,1145,1.176,1146,1.176,1147,1.176,1148,1.144]],["title/core.html#ASI-自動分號插入",[539,2.56,1034,2.655]],["body/core.html#ASI-自動分號插入",[1,0.335,2,0.406,3,0.418,4,0.488,5,0.514,6,0.56,7,0.726,8,0.743,9,0.934,10,1.164,11,0.974,12,0.983,14,0.04,15,1.785,19,2.376,21,0.959,27,2.203,34,2.203,36,1.132,37,1.078,38,1.141,39,0.834,40,0.858,41,1.504,42,1.024,43,1.123,44,1.024,45,1.159,58,1.661,62,0.941,114,2.03,247,1.852,258,2.188,259,1.701,266,0.812,277,0.798,280,0.827,352,2.541,354,1.183,357,1.078,358,1.372,359,0.394,368,1.757,387,1.006,392,0.656,394,2.703,406,1.133,410,1.839,433,1.195,438,1.506,443,1.876,447,1.324,468,1.994,469,0.964,511,0.71,534,1.354,539,2.246,540,1.404,541,1.404,542,1.267,543,1.404,544,3.043,545,1.309,546,2.246,547,1.354,548,2.796,549,2.791,550,1.354,551,1.309,552,1.267,553,1.267,554,1.267,555,1.267,557,1.267,558,1.23,559,3.479,560,1.267,561,1.267,562,1.267,563,1.267,564,1.267,565,1.267,566,1.267,567,1.267,568,2.667,569,2.348,570,2.103,571,1.267,572,1.267,573,2.103,574,1.267,575,1.267,576,1.159,577,1.217,578,1.279,579,1.347,580,1.449,581,1.506,582,1.506,583,1.536,584,1.536,585,1.397,586,1.536,587,1.536,588,2.008,591,1.23,592,1.23,593,1.23,596,1.23,597,1.133,598,1.23,599,1.195,600,1.195,601,1.195,602,1.195,603,1.195,604,1.195,606,0.926,607,0.89,608,0.926,609,0.964,610,0.964,611,0.926,612,0.964,613,0.985,614,0.985,615,0.985,616,0.964,617,0.985,618,0.985,619,0.985,620,0.985,621,0.926,622,0.985,623,0.985,624,0.985,625,0.985,626,1.104,627,1.163,628,3.646,629,1.788,631,2.546,633,1.078,634,1.163,635,1.163,636,1.163,638,1.163,639,1.163,640,1.163,641,2.292,642,1.163,643,1.163,644,1.133,645,1.163,647,2.605,648,1.163,649,1.163,650,1.163,651,1.163,652,1.163,653,1.006,980,2.49,990,3.269,998,1.929,1028,1.195,1034,1.404,1035,1.461,1036,1.461,1037,1.461,1038,1.461,1039,1.461,1040,1.461,1041,1.461,1042,1.461,1043,4.007,1044,1.461,1045,1.461,1046,2.423,1047,2.423,1048,1.461,1049,1.461,1050,1.461,1051,1.461,1052,1.461,1053,1.461,1054,1.461,1055,1.354,1056,1.404,1057,1.404,1058,1.404,1059,1.404,1060,1.404,1061,1.23,1062,1.354,1063,1.354,1064,1.354,1065,1.354,1066,1.267,1067,1.354,1068,1.354,1069,1.354,1070,1.354,1071,1.354,1072,1.354,1073,1.354,1074,1.354,1075,1.354,1076,2.103,1077,1.267,1078,1.309,1079,1.309,1080,1.309,1081,1.309,1082,1.309,1083,1.309,1084,1.309,1085,1.309,1086,1.309,1087,1.309,1088,2.04,1089,2.04,1090,1.267,1091,1.267,1092,1.267,1093,1.267,1094,1.267,1095,1.267,1096,2.103,1097,1.267,1098,1.267,1099,1.267,1100,1.267,1101,1.267,1102,1.267,1103,1.267,1104,1.267,1105,1.267,1106,1.267,1107,1.267,1108,1.267,1109,1.267,1110,1.23,1111,1.133,1112,1.23,1113,1.23,1114,1.195,1115,1.195,1116,1.195,1117,1.195,1118,1.163,1119,1.195,1120,1.163,1121,1.195,1122,1.195,1123,1.195,1124,1.195,1125,1.195,1126,1.195,1127,1.195,1128,1.163,1129,1.195,1130,1.195,1131,1.029,1132,1.195,1133,1.104,1134,1.195,1135,1.195,1136,1.195,1137,1.983,1138,1.195,1139,1.195,1140,1.983,1141,1.983,1142,1.983,1143,1.195,1144,1.195,1145,1.195,1146,1.195,1147,1.195,1148,1.163]],["title/core.html#動態型別",[1055,3.402]],["body/core.html#動態型別",[1,0.336,2,0.407,3,0.416,4,0.48,5,0.503,6,0.559,7,0.722,8,0.768,9,0.97,10,1.185,11,1.021,12,0.981,14,0.04,15,1.871,19,2.439,21,0.656,27,2.309,34,2.309,36,1.175,37,1.129,38,1.196,39,0.888,40,0.914,41,1.577,42,1.091,43,1.196,44,1.091,45,1.235,58,1.693,62,0.946,114,2.046,247,1.91,258,2.309,259,1.783,266,0.877,277,0.862,280,0.893,352,2.682,354,1.248,357,1.164,358,1.461,359,0.425,368,1.841,387,1.087,392,0.708,394,2.817,406,1.223,410,1.892,433,1.291,438,1.604,443,1.701,447,1.411,468,2.063,469,1.041,511,0.767,544,3.19,545,1.413,546,2.393,547,1.462,548,2.902,549,2.887,550,1.462,551,1.413,552,1.369,553,1.369,554,1.369,555,1.369,557,1.369,558,1.328,559,3.626,560,1.369,561,1.369,562,1.369,563,1.369,564,1.369,565,1.369,566,1.369,567,1.369,568,2.795,569,2.478,570,2.241,571,1.369,572,1.369,573,2.241,574,1.369,575,1.369,576,1.235,577,1.296,578,1.363,579,1.436,580,1.544,581,1.604,582,1.604,583,1.636,584,1.636,585,1.488,586,1.636,587,1.636,588,2.12,591,1.328,592,1.328,593,1.328,596,1.328,597,1.223,598,1.328,599,1.291,600,1.291,601,1.291,602,1.291,603,1.291,604,1.291,606,1,607,0.961,608,1,609,1.041,610,1.041,611,1,612,1.041,613,1.063,614,1.063,615,1.063,616,1.041,617,1.063,618,1.063,619,1.063,620,1.063,621,1,622,1.063,623,1.063,624,1.063,625,1.063,626,1.193,627,1.256,628,3.771,629,1.905,631,2.668,633,1.164,634,1.256,635,1.256,636,1.256,638,1.256,639,1.256,640,1.256,641,2.419,642,1.256,643,1.256,644,1.223,645,1.256,647,2.73,648,1.256,649,1.256,650,1.256,651,1.256,652,1.256,653,1.087,980,2.61,990,3.393,998,2.055,1028,1.291,1056,1.516,1057,1.516,1058,1.516,1059,1.516,1060,1.516,1061,1.328,1062,1.462,1063,1.462,1064,1.462,1065,1.462,1066,1.369,1067,1.462,1068,1.462,1069,1.462,1070,1.462,1071,1.462,1072,1.462,1073,1.462,1074,1.462,1075,1.462,1076,2.241,1077,1.369,1078,1.413,1079,1.413,1080,1.413,1081,1.413,1082,1.413,1083,1.413,1084,1.413,1085,1.413,1086,1.413,1087,1.413,1088,2.174,1089,2.174,1090,1.369,1091,1.369,1092,1.369,1093,1.369,1094,1.369,1095,1.369,1096,2.241,1097,1.369,1098,1.369,1099,1.369,1100,1.369,1101,1.369,1102,1.369,1103,1.369,1104,1.369,1105,1.369,1106,1.369,1107,1.369,1108,1.369,1109,1.369,1110,1.328,1111,1.223,1112,1.328,1113,1.328,1114,1.291,1115,1.291,1116,1.291,1117,1.291,1118,1.256,1119,1.291,1120,1.256,1121,1.291,1122,1.291,1123,1.291,1124,1.291,1125,1.291,1126,1.291,1127,1.291,1128,1.256,1129,1.291,1130,1.291,1131,1.111,1132,1.291,1133,1.193,1134,1.291,1135,1.291,1136,1.291,1137,2.112,1138,1.291,1139,1.291,1140,2.112,1141,2.112,1142,2.112,1143,1.291,1144,1.291,1145,1.291,1146,1.291,1147,1.291,1148,1.256]],["title/core.html#原始型別及物件型別",[1062,3.402]],["body/core.html#原始型別及物件型別",[1,0.336,2,0.409,3,0.41,4,0.477,5,0.499,6,0.551,7,0.708,8,0.746,9,0.929,10,1.187,11,0.917,12,0.963,14,0.04,15,1.932,19,2.483,21,0.681,27,2.384,34,2.074,36,1.126,37,1.014,38,1.074,39,0.928,40,0.955,41,1.628,42,1.14,43,1.25,44,1.14,45,1.291,58,1.715,62,0.947,114,2.049,247,1.95,258,2.396,259,1.842,266,0.926,277,0.91,280,0.943,352,2.784,354,1.295,357,1.229,358,1.527,359,0.449,368,1.901,387,1.147,392,0.748,394,1.819,406,1.291,410,1.929,433,1.362,438,1.677,443,1.766,447,1.474,468,2.111,469,1.099,511,0.809,549,2.62,551,1.492,552,1.445,553,1.445,554,1.445,555,1.445,557,1.445,558,1.402,559,3.731,560,1.445,561,1.445,562,1.445,563,1.445,564,1.445,565,1.445,566,1.445,567,1.445,568,2.887,569,2.572,570,2.342,571,1.445,572,1.445,573,2.342,574,1.445,575,1.445,576,1.291,577,1.355,578,1.424,579,1.5,580,1.614,581,1.677,582,1.677,583,1.71,584,1.71,585,1.555,586,1.71,587,1.71,588,2.2,591,1.402,592,1.402,593,1.402,596,1.402,597,1.291,598,1.402,599,1.362,600,1.362,601,1.362,602,1.362,603,1.362,604,1.362,606,1.055,607,1.015,608,1.055,609,1.099,610,1.099,611,1.055,612,1.099,613,1.123,614,1.123,615,1.123,616,1.099,617,1.123,618,1.123,619,1.123,620,1.123,621,1.055,622,1.123,623,1.123,624,1.123,625,1.123,626,1.259,627,1.326,628,3.858,629,1.991,631,2.756,633,1.229,634,1.326,635,1.326,636,1.326,638,1.326,639,1.326,640,1.326,641,2.51,642,1.326,643,1.326,644,1.291,645,1.326,647,2.819,648,1.326,649,1.326,650,1.326,651,1.326,652,1.326,653,1.147,980,1.147,990,3.48,998,2.148,1028,1.362,1063,1.543,1064,1.543,1065,1.543,1066,1.445,1067,1.543,1068,1.543,1069,1.543,1070,1.543,1071,1.543,1072,1.543,1073,1.543,1074,1.543,1075,1.543,1076,2.342,1077,1.445,1078,1.492,1079,1.492,1080,1.492,1081,1.492,1082,1.492,1083,1.492,1084,1.492,1085,1.492,1086,1.492,1087,1.492,1088,2.272,1089,2.272,1090,1.445,1091,1.445,1092,1.445,1093,1.445,1094,1.445,1095,1.445,1096,2.342,1097,1.445,1098,1.445,1099,1.445,1100,1.445,1101,1.445,1102,1.445,1103,1.445,1104,1.445,1105,1.445,1106,1.445,1107,1.445,1108,1.445,1109,1.445,1110,1.402,1111,1.291,1112,1.402,1113,1.402,1114,1.362,1115,1.362,1116,1.362,1117,1.362,1118,1.326,1119,1.362,1120,1.326,1121,1.362,1122,1.362,1123,1.362,1124,1.362,1125,1.362,1126,1.362,1127,1.362,1128,1.326,1129,1.362,1130,1.362,1131,1.173,1132,1.362,1133,1.259,1134,1.362,1135,1.362,1136,1.362,1137,2.208,1138,1.362,1139,1.362,1140,2.208,1141,2.208,1142,2.208,1143,1.362,1144,1.362,1145,1.362,1146,1.362,1147,1.362,1148,1.326]],["title/core.html#運算子",[1076,3.185]],["body/core.html#運算子",[1,0.336,2,0.409,3,0.407,4,0.47,5,0.505,6,0.559,7,0.719,8,0.759,9,0.946,10,1.197,11,0.94,12,0.946,14,0.04,15,0.853,19,2.512,21,0.698,27,2.436,34,1.694,36,1.147,37,1.039,38,1.101,39,0.956,40,0.984,41,1.663,42,1.174,43,1.288,44,1.174,45,1.329,58,1.73,62,0.947,114,2.053,247,1.977,259,1.881,266,0.96,277,0.943,280,0.977,352,2.853,354,1.328,357,1.274,358,1.573,359,0.466,368,1.942,387,1.19,392,0.776,406,1.339,410,1.953,433,1.413,438,1.727,443,1.442,447,1.518,468,1.907,469,1.14,511,0.839,549,2.669,552,1.499,553,1.499,554,1.499,555,1.499,557,1.499,558,1.454,559,3.801,560,1.499,561,1.499,562,1.499,563,1.499,564,1.499,565,1.499,566,1.499,567,1.499,568,2.949,569,2.636,570,2.411,571,1.499,572,1.499,573,2.411,574,1.499,575,1.499,576,1.329,577,1.395,578,1.467,579,1.545,580,1.662,581,1.727,582,1.727,583,1.761,584,1.761,585,1.601,586,1.761,587,1.761,588,2.255,591,1.454,592,1.454,593,1.454,596,1.454,597,1.339,598,1.454,599,1.413,600,1.413,601,1.413,602,1.413,603,1.413,604,1.413,606,1.094,607,1.053,608,1.094,609,1.14,610,1.14,611,1.094,612,1.14,613,1.164,614,1.164,615,1.164,616,1.14,617,1.164,618,1.164,619,1.164,620,1.164,621,1.094,622,1.164,623,1.164,624,1.164,625,1.164,626,1.306,627,1.375,628,3.916,629,2.05,631,2.815,633,1.274,634,1.375,635,1.375,636,1.375,638,1.375,639,1.375,640,1.375,641,2.573,642,1.375,643,1.375,644,1.339,645,1.375,647,2.88,648,1.375,649,1.375,650,1.375,651,1.375,652,1.375,653,1.19,990,3.538,998,2.212,1028,1.413,1076,1.499,1077,1.499,1078,1.547,1079,1.547,1080,1.547,1081,1.547,1082,1.547,1083,1.547,1084,1.547,1085,1.547,1086,1.547,1087,1.547,1088,2.34,1089,2.34,1090,1.499,1091,1.499,1092,1.499,1093,1.499,1094,1.499,1095,1.499,1096,2.411,1097,1.499,1098,1.499,1099,1.499,1100,1.499,1101,1.499,1102,1.499,1103,1.499,1104,1.499,1105,1.499,1106,1.499,1107,1.499,1108,1.499,1109,1.499,1110,1.454,1111,1.339,1112,1.454,1113,1.454,1114,1.413,1115,1.413,1116,1.413,1117,1.413,1118,1.375,1119,1.413,1120,1.375,1121,1.413,1122,1.413,1123,1.413,1124,1.413,1125,1.413,1126,1.413,1127,1.413,1128,1.375,1129,1.413,1130,1.413,1131,1.216,1132,1.413,1133,1.306,1134,1.413,1135,1.413,1136,1.413,1137,2.274,1138,1.413,1139,1.413,1140,2.274,1141,2.274,1142,2.274,1143,1.413,1144,1.413,1145,1.413,1146,1.413,1147,1.413,1148,1.375]],["title/core.html#嚴格相等-寬鬆相等",[1088,2.326,1089,2.326]],["body/core.html#嚴格相等-寬鬆相等",[1,0.312,2,0.362,3,0.337,4,0.416,5,0.447,6,0.458,7,0.613,8,0.565,9,0.752,10,1.147,11,0.939,12,0.828,14,0.04,15,1.139,19,2.445,21,0.697,27,2.849,34,2.122,36,0.912,37,1.038,38,1.099,39,1.198,40,1.233,41,1.945,42,1.471,43,1.613,44,1.471,45,1.665,58,1.61,62,0.942,114,2.054,247,1.806,277,1.26,352,2.849,354,1.326,358,1.971,368,2.272,387,1.588,392,1.035,406,1.788,410,1.729,438,2.164,447,1.902,468,2.036,511,1.12,549,3.059,569,1.743,576,1.665,577,1.748,578,1.838,579,1.936,580,2.082,581,2.164,582,2.164,583,2.207,584,2.207,585,2.007,586,2.207,587,2.207,588,2.713,591,1.941,592,1.941,593,1.941,596,1.941,597,1.788,598,1.941,599,1.886,600,1.886,601,1.886,602,1.886,603,1.886,604,1.886,606,1.461,607,1.405,608,1.461,609,1.522,610,1.522,611,1.461,612,1.522,613,1.554,614,1.554,615,1.554,616,1.522,617,1.554,618,1.554,619,1.554,620,1.554,621,1.461,622,1.554,623,1.554,624,1.554,625,1.554,626,1.743,627,1.835,628,4.362,629,2.569,631,3.293,633,1.701,634,1.835,635,1.835,636,1.835,638,1.835,639,1.835,640,1.835,641,3.096,642,1.835,643,1.835,644,1.788,645,1.835,647,3.369,648,1.835,649,1.835,650,1.835,651,1.835,652,1.835,653,1.588,990,3.172,998,2.772,1028,1.886,1088,1.941,1089,1.941,1090,2.001,1091,2.001,1092,2.001,1093,2.001,1094,2.001,1095,2.001,1096,3.022,1097,2.001,1098,2.001,1099,2.001,1100,2.001,1101,2.001,1102,2.001,1103,2.001,1104,2.001,1105,2.001,1106,2.001,1107,2.001,1108,2.001,1109,2.001,1110,1.941,1111,1.788,1112,1.941,1113,1.941,1114,1.886,1115,1.886,1116,1.886,1117,1.886,1118,1.835,1119,1.886,1120,1.835,1121,1.886,1122,1.886,1123,1.886,1124,1.886,1125,1.886,1126,1.886,1127,1.886,1128,1.835,1129,1.886,1130,1.886,1131,1.624,1132,1.886,1133,1.743,1134,1.886,1135,1.886,1136,1.886,1137,2.849,1138,1.886,1139,1.886,1140,2.849,1141,2.849,1142,2.849,1143,1.886,1144,1.886,1145,1.886,1146,1.886,1147,1.886,1148,1.835]],["title/core.html#Truthy",[599,3.003]],["body/core.html#Truthy",[1,0.317,2,0.383,3,0.353,4,0.436,5,0.468,6,0.463,7,0.619,8,0.489,9,0.652,10,0.861,11,0.814,12,0.808,14,0.04,15,1.491,19,1.964,21,0.848,36,0.79,37,0.9,38,0.953,39,1.038,40,1.069,41,1.256,42,1.275,43,1.399,44,1.275,45,1.444,58,1.561,62,0.913,114,1.892,277,1.649,354,1.614,358,2.399,387,2.079,392,1.356,406,2.341,410,1.811,438,2.633,447,1.649,468,1.315,569,2.282,576,1.444,577,1.515,578,1.593,579,1.678,580,1.805,581,1.876,582,1.876,583,1.913,584,1.913,585,1.74,586,1.913,587,1.913,588,1.952,600,2.47,601,2.47,602,2.47,603,2.47,604,2.47,606,1.913,607,1.84,608,1.913,609,1.993,610,1.993,611,1.913,612,1.993,613,2.035,614,2.035,615,2.035,616,1.993,617,2.035,618,2.035,619,2.035,620,2.035,621,1.913,622,2.035,623,2.035,624,2.035,625,2.035,626,2.282,627,2.403,628,4.742,629,3.127,631,3.741,633,2.227,634,2.403,635,2.403,636,2.403,638,2.403,639,2.403,640,2.403,641,3.614,642,2.403,643,2.403,644,2.341,645,2.403,647,3.827,648,2.403,649,2.403,650,2.403,651,2.403,652,2.403,653,2.079,998,3.374,1028,2.47,1110,2.541,1111,2.341,1112,2.541,1113,2.541,1114,2.47,1115,2.47,1116,2.47,1117,2.47,1118,2.403,1119,2.47,1120,2.403,1121,2.47,1122,2.47,1123,2.47,1124,2.47,1125,2.47,1126,2.47,1127,2.47,1128,2.403,1129,2.47,1130,2.47,1131,2.126,1132,2.47,1133,2.282,1134,2.47,1135,2.47,1136,2.47,1137,3.467,1138,2.47,1139,2.47,1140,3.467,1141,3.467,1142,3.467,1143,2.47,1144,2.47,1145,2.47,1146,2.47,1147,2.47,1148,2.403]],["title/core.html#邏輯運算子及函式預設值",[1114,3.003]],["body/core.html#邏輯運算子及函式預設值",[1,0.315,2,0.376,3,0.317,4,0.391,5,0.42,6,0.48,7,0.642,8,0.515,9,0.687,10,0.893,11,0.857,12,0.83,14,0.04,19,1.473,21,0.879,36,0.833,37,0.948,38,1.003,39,1.094,40,1.126,41,1.323,42,1.343,43,1.473,44,1.343,45,1.52,58,1.596,62,0.908,114,1.834,277,1.737,354,1.673,358,2.487,387,2.19,392,1.428,406,2.465,410,1.862,438,2.73,447,1.737,569,2.404,576,1.52,577,1.596,578,1.678,579,1.768,580,1.901,581,1.975,582,1.975,583,2.015,584,2.015,585,1.832,586,2.015,587,2.015,588,2.056,606,2.015,607,1.938,608,2.015,609,2.099,610,2.099,611,2.015,612,2.099,613,2.143,614,2.143,615,2.143,616,2.099,617,2.143,618,2.143,619,2.143,620,2.143,621,2.015,622,2.143,623,2.143,624,2.143,625,2.143,626,2.404,627,2.531,628,4.81,629,3.242,631,3.826,633,2.346,634,2.531,635,2.531,636,2.531,638,2.531,639,2.531,640,2.531,641,3.715,642,2.531,643,2.531,644,2.465,645,2.531,647,3.914,648,2.531,649,2.531,650,2.531,651,2.531,652,2.531,653,2.19,998,3.498,1028,2.601,1115,2.601,1116,2.601,1117,2.601,1118,2.531,1119,2.601,1120,2.531,1121,2.601,1122,2.601,1123,2.601,1124,2.601,1125,2.601,1126,2.601,1127,2.601,1128,2.531,1129,2.601,1130,2.601,1131,2.239,1132,2.601,1133,2.404,1134,2.601,1135,2.601,1136,2.601,1137,3.595,1138,2.601,1139,2.601,1140,3.595,1141,3.595,1142,3.595,1143,2.601,1144,2.601,1145,2.601,1146,2.601,1147,2.601,1148,2.531]],["title/core.html#物件記憶體空間",[1149,5.499]],["body/core.html#物件記憶體空間",[1,0.33,2,0.406,3,0.447,4,0.497,5,0.54,6,0.595,7,0.796,8,0.871,9,1.098,10,1.009,11,1.302,12,1.021,14,0.04,15,0.977,16,1.149,21,1.26,30,1.717,34,0.7,36,1.226,37,1.396,38,1.361,39,1.312,40,1.35,41,1.452,42,1.308,43,1.434,44,1.101,45,1.246,58,1.493,62,0.906,114,1.545,119,0.889,120,0.869,153,0.687,247,0.444,259,0.541,264,1.922,266,0.639,272,1.029,274,0.94,277,0.628,280,2.158,356,0.596,358,0.65,359,1.163,364,0.792,389,0.94,392,1.834,404,3.721,410,0.963,417,0.915,438,0.714,440,0.94,443,1.352,447,1.423,455,1.2,468,1.52,469,1.306,472,3.341,474,2.504,511,0.961,523,2.074,535,0.775,548,1.279,576,1.246,577,1.308,578,1.375,579,1.449,580,1.558,581,1.229,582,1.229,583,1.254,584,1.254,585,1.14,586,1.254,587,0.728,606,0.728,607,0.7,608,0.728,609,0.759,610,0.759,611,0.728,612,0.759,613,0.775,614,0.775,615,0.775,616,0.759,617,0.775,618,0.775,619,0.775,620,0.775,621,0.728,622,0.775,623,0.775,624,0.775,625,0.775,631,2.18,633,1.922,641,2.575,646,2.34,653,0.792,654,3.017,655,3.491,656,1.259,657,5.11,658,1.331,660,2.651,661,2.445,662,1.54,663,2.651,664,2.651,665,1.54,666,2.651,667,1.42,668,1.42,669,1.42,670,1.42,671,1.42,672,1.42,673,1.331,674,1.42,675,1.42,676,1.331,677,1.331,679,3.017,680,1.105,681,1.331,682,2.291,683,1.331,684,1.331,686,1.331,688,2.066,689,1.149,690,1.619,691,1.331,692,1.331,693,1.331,694,1.331,695,1.331,696,2.291,697,3.017,698,1.331,700,1.331,701,2.855,703,2.855,704,1.334,705,1.259,706,1.259,707,1.259,708,1.259,709,1.259,710,1.149,711,1.575,712,1.105,713,2.18,715,1.259,716,1.259,717,1.259,718,1.259,720,1.2,721,1.2,723,2.066,724,1.2,725,1.2,726,1.2,727,1.149,728,1.2,729,1.2,730,1.2,732,1.979,733,1.149,734,1.979,735,1.149,736,1.149,737,2.605,738,2.605,739,1.149,740,1.149,741,1.149,742,3.096,744,1.149,745,1.149,746,1.149,747,1.979,748,2.976,751,1.773,752,1.105,753,1.717,754,1.105,755,1.902,756,1.105,757,1.105,758,1.105,759,1.105,760,1.105,761,1.105,762,0.848,763,1.065,764,1.065,765,1.065,767,1.834,768,2.957,769,2.4,770,1.065,771,1.717,772,1.534,773,1.029,774,1.029,775,1.029,776,0.997,777,1.717,778,0.997,779,3.416,780,2.048,781,2.194,782,1.029,980,3.107,1000,1.902,1029,1.534,1066,0.997,1111,0.891,1131,1.835,1133,0.869,1150,1.721,1151,2.964,1152,2.964,1153,1.721,1154,1.721,1155,1.721,1156,1.721,1157,1.54,1158,1.54,1159,1.54,1160,1.54,1161,1.54,1162,2.651,1163,2.651,1164,1.54,1165,1.54,1166,1.54,1167,1.54,1168,1.54,1169,1.54,1170,1.42,1171,1.42,1172,1.42,1173,2.291,1174,1.42,1175,1.42,1176,1.42,1177,1.42,1178,1.42,1179,1.42,1180,1.42,1181,2.291,1182,1.42,1183,1.42,1184,1.42,1185,1.2,1186,1.331,1187,1.259,1188,1.331,1189,1.331,1190,1.331,1191,1.331,1192,1.331,1193,1.331,1194,1.331,1195,1.331,1196,2.291,1197,1.331,1198,1.331,1199,1.331,1200,1.331,1201,1.331,1202,1.331,1203,1.259,1204,1.259,1205,1.259,1206,1.259,1207,1.259,1208,1.259,1209,1.259,1210,2.869,1211,1.259,1212,1.259,1213,1.259,1214,1.259,1215,1.259,1216,1.259,1217,1.2,1218,1.2,1219,1.2,1220,1.2,1221,1.2,1222,1.2,1223,1.2,1224,1.2,1225,1.2,1226,1.2,1227,1.2,1228,1.2,1229,1.2,1230,1.2,1231,1.2,1232,1.2,1233,1.2,1234,1.2,1235,1.2,1236,1.2,1237,1.2,1238,1.2,1239,1.149,1240,1.149,1241,1.149,1242,1.149,1243,2.605,1244,1.979,1245,1.979,1246,1.149,1247,1.979,1248,1.979,1249,1.149,1250,1.149,1251,1.149,1252,1.149,1253,1.149,1254,1.149,1255,1.149,1256,1.979,1257,1.149,1258,1.149,1259,0.997,1260,1.105,1261,1.105,1262,1.105,1263,1.105,1264,1.105,1265,1.834,1266,1.105,1267,1.065,1268,1.834,1269,1.065,1270,1.065,1271,1.065,1272,1.065]],["title/core.html#純值無法新增屬性",[1157,4.919]],["body/core.html#純值無法新增屬性",[1,0.33,2,0.406,3,0.447,4,0.492,5,0.535,6,0.595,7,0.796,8,0.871,9,1.118,10,1.028,11,1.329,12,1.018,14,0.04,15,1.023,16,1.212,21,1.269,30,1.798,34,0.739,36,1.253,37,1.426,38,1.396,39,1.351,40,1.39,41,1.5,42,1.356,43,1.487,44,1.146,45,1.297,58,1.52,62,0.911,114,1.574,119,0.93,120,0.917,153,0.725,247,0.468,259,0.571,264,2.001,266,0.674,272,1.086,274,0.992,277,0.662,280,0.686,356,0.629,358,0.686,359,1.192,364,0.835,389,0.992,392,1.619,404,3.774,410,1.003,417,0.965,438,0.753,440,0.992,443,1.408,447,1.482,455,1.266,468,1.57,469,1.368,472,3.432,474,2.607,511,1.007,523,0.965,535,0.817,548,1.34,576,1.297,577,1.362,578,1.432,579,1.508,580,1.622,581,1.287,582,1.287,583,1.313,584,1.313,585,1.194,586,1.313,587,0.768,606,0.768,607,0.739,608,0.768,609,0.8,610,0.8,611,0.768,612,0.8,613,0.817,614,0.817,615,0.817,616,0.8,617,0.817,618,0.817,619,0.817,620,0.817,621,0.768,622,0.817,623,0.817,624,0.817,625,0.817,631,2.26,633,0.895,641,2.659,646,2.426,653,0.835,667,1.498,668,1.498,669,1.498,670,1.498,671,1.498,672,1.498,673,1.404,674,1.498,675,1.498,676,1.404,677,1.404,679,3.141,680,1.166,681,1.404,682,2.399,683,1.404,684,1.404,686,1.404,688,2.163,689,1.212,690,1.695,691,1.404,692,1.404,693,1.404,694,1.404,695,1.404,696,2.399,697,3.141,698,1.404,700,1.404,701,2.973,703,2.973,704,1.397,705,1.329,706,1.329,707,1.329,708,1.329,709,1.329,710,1.212,711,1.649,712,1.166,713,2.26,715,1.329,716,1.329,717,1.329,718,1.329,720,1.266,721,1.266,723,2.163,724,1.266,725,1.266,726,1.266,727,1.212,728,1.266,729,1.266,730,1.266,732,2.072,733,1.212,734,2.072,735,1.212,736,1.212,737,2.712,738,2.712,739,1.212,740,1.212,741,1.212,742,3.209,744,1.212,745,1.212,746,1.212,747,2.072,748,3.084,751,1.856,752,1.166,753,1.798,754,1.166,755,1.991,756,1.166,757,1.166,758,1.166,759,1.166,760,1.166,761,1.166,762,0.895,763,1.124,764,1.124,765,1.124,767,1.92,768,3.045,769,2.488,770,1.124,771,1.798,772,1.606,773,1.086,774,1.086,775,1.086,776,1.052,777,1.798,778,1.052,779,3.518,780,2.109,781,2.284,782,1.086,980,2.89,1000,1.991,1029,1.606,1066,1.052,1111,0.94,1131,1.459,1133,0.917,1158,1.625,1159,1.625,1160,1.625,1161,1.625,1162,2.776,1163,2.776,1164,1.625,1165,1.625,1166,1.625,1167,1.625,1168,1.625,1169,1.625,1170,1.498,1171,1.498,1172,1.498,1173,2.399,1174,1.498,1175,1.498,1176,1.498,1177,1.498,1178,1.498,1179,1.498,1180,1.498,1181,2.399,1182,1.498,1183,1.498,1184,1.498,1185,1.266,1186,1.404,1187,1.329,1188,1.404,1189,1.404,1190,1.404,1191,1.404,1192,1.404,1193,1.404,1194,1.404,1195,1.404,1196,2.399,1197,1.404,1198,1.404,1199,1.404,1200,1.404,1201,1.404,1202,1.404,1203,1.329,1204,1.329,1205,1.329,1206,1.329,1207,1.329,1208,1.329,1209,1.329,1210,2.974,1211,1.329,1212,1.329,1213,1.329,1214,1.329,1215,1.329,1216,1.329,1217,1.266,1218,1.266,1219,1.266,1220,1.266,1221,1.266,1222,1.266,1223,1.266,1224,1.266,1225,1.266,1226,1.266,1227,1.266,1228,1.266,1229,1.266,1230,1.266,1231,1.266,1232,1.266,1233,1.266,1234,1.266,1235,1.266,1236,1.266,1237,1.266,1238,1.266,1239,1.212,1240,1.212,1241,1.212,1242,1.212,1243,2.712,1244,2.072,1245,2.072,1246,1.212,1247,2.072,1248,2.072,1249,1.212,1250,1.212,1251,1.212,1252,1.212,1253,1.212,1254,1.212,1255,1.212,1256,2.072,1257,1.212,1258,1.212,1259,1.052,1260,1.166,1261,1.166,1262,1.166,1263,1.166,1264,1.166,1265,1.92,1266,1.166,1267,1.124,1268,1.92,1269,1.124,1270,1.124,1271,1.124,1272,1.124]],["title/core.html#深淺拷貝",[1170,4.536]],["body/core.html#深淺拷貝",[1,0.331,2,0.407,3,0.448,4,0.491,5,0.534,6,0.594,7,0.794,8,0.867,9,1.109,10,1.018,11,1.311,12,1.016,14,0.04,15,0.625,16,1.265,21,1.272,30,1.863,36,1.23,37,1.4,38,1.422,39,1.382,40,1.422,41,1.538,42,1.393,43,1.528,44,1.182,45,1.338,58,1.541,62,0.907,114,1.558,119,0.964,120,0.956,247,0.489,259,0.595,264,2.065,266,0.703,272,1.133,274,1.035,277,0.691,356,0.656,358,0.716,359,1.215,364,0.871,389,1.035,392,1.659,404,3.814,410,1.035,417,1.007,438,0.786,440,1.035,443,1.452,447,1.529,455,1.321,468,1.609,469,1.417,472,3.504,474,2.69,511,1.044,523,1.007,535,0.853,548,1.389,576,1.338,577,1.405,578,1.477,579,1.556,580,1.673,581,1.334,582,1.334,583,1.361,584,1.361,585,1.237,586,1.361,587,0.801,606,0.801,607,0.771,608,0.801,609,0.835,610,0.835,611,0.801,612,0.835,613,0.853,614,0.853,615,0.853,616,0.835,617,0.853,618,0.853,619,0.853,620,0.853,621,0.801,622,0.853,623,0.853,624,0.853,625,0.853,631,2.323,633,0.933,641,2.726,646,2.494,653,0.871,676,1.464,677,1.464,679,3.241,680,1.216,681,1.464,682,2.487,683,1.464,684,1.464,686,1.464,688,2.242,689,1.265,690,1.757,691,1.464,692,1.464,693,1.464,694,1.464,695,1.464,696,2.487,697,3.241,698,1.464,700,1.464,701,3.067,703,3.067,704,1.448,705,1.386,706,1.386,707,1.386,708,1.386,709,1.386,710,1.265,711,1.709,712,1.216,713,2.323,715,1.386,716,1.386,717,1.386,718,1.386,720,1.321,721,1.321,723,2.242,724,1.321,725,1.321,726,1.321,727,1.265,728,1.321,729,1.321,730,1.321,732,2.147,733,1.265,734,2.147,735,1.265,736,1.265,737,2.798,738,2.798,739,1.265,740,1.265,741,1.265,742,3.298,744,1.265,745,1.265,746,1.265,747,2.147,748,3.171,751,1.924,752,1.216,753,1.863,754,1.216,755,2.064,756,1.216,757,1.216,758,1.216,759,1.216,760,1.216,761,1.216,762,0.933,763,1.172,764,1.172,765,1.172,767,1.99,768,3.114,769,2.558,770,1.172,771,1.863,772,1.665,773,1.133,774,1.133,775,1.133,776,1.097,777,1.863,778,1.097,779,3.598,780,2.156,781,2.356,782,1.133,980,2.545,1000,2.064,1029,1.665,1131,1.512,1133,0.956,1171,1.563,1172,1.563,1173,2.487,1174,1.563,1175,1.563,1176,1.563,1177,1.563,1178,1.563,1179,1.563,1180,1.563,1181,2.487,1182,1.563,1183,1.563,1184,1.563,1185,1.321,1186,1.464,1187,1.386,1188,1.464,1189,1.464,1190,1.464,1191,1.464,1192,1.464,1193,1.464,1194,1.464,1195,1.464,1196,2.487,1197,1.464,1198,1.464,1199,1.464,1200,1.464,1201,1.464,1202,1.464,1203,1.386,1204,1.386,1205,1.386,1206,1.386,1207,1.386,1208,1.386,1209,1.386,1210,3.057,1211,1.386,1212,1.386,1213,1.386,1214,1.386,1215,1.386,1216,1.386,1217,1.321,1218,1.321,1219,1.321,1220,1.321,1221,1.321,1222,1.321,1223,1.321,1224,1.321,1225,1.321,1226,1.321,1227,1.321,1228,1.321,1229,1.321,1230,1.321,1231,1.321,1232,1.321,1233,1.321,1234,1.321,1235,1.321,1236,1.321,1237,1.321,1238,1.321,1239,1.265,1240,1.265,1241,1.265,1242,1.265,1243,2.798,1244,2.147,1245,2.147,1246,1.265,1247,2.147,1248,2.147,1249,1.265,1250,1.265,1251,1.265,1252,1.265,1253,1.265,1254,1.265,1255,1.265,1256,2.147,1257,1.265,1258,1.265,1259,1.097,1260,1.216,1261,1.216,1262,1.216,1263,1.216,1264,1.216,1265,1.99,1266,1.216,1267,1.172,1268,1.99,1269,1.172,1270,1.172,1271,1.172,1272,1.172]],["title/core.html#陣列",[1185,3.833]],["body/core.html#陣列",[1,0.334,2,0.411,3,0.453,4,0.497,5,0.541,6,0.6,7,0.803,8,0.876,9,1.118,10,1.024,11,1.316,12,1.001,14,0.04,15,0.687,16,1.391,21,1.287,30,2.019,36,1.23,37,1.4,38,1.414,39,1.342,40,1.381,41,1.459,42,1.267,43,1.389,44,0.983,45,1.112,58,1.587,62,0.904,114,1.61,119,1.045,120,1.051,247,0.537,259,0.655,264,2.213,266,0.773,272,1.246,274,1.138,356,0.722,358,0.787,359,1.266,364,0.958,389,1.138,392,1.574,404,3.902,410,1.109,417,1.107,438,0.864,443,1.556,447,1.271,468,1.527,472,2.453,474,1.337,511,1.13,523,1.107,535,0.937,548,1.504,576,1.112,577,1.168,578,1.228,579,1.293,580,1.391,581,0.864,582,0.864,583,0.881,584,0.881,585,0.801,586,0.881,587,0.881,606,0.881,607,0.847,608,0.881,609,0.918,610,0.918,611,0.881,612,0.918,613,0.937,614,0.937,615,0.937,616,0.918,617,0.937,618,0.937,619,0.937,620,0.937,621,0.881,622,0.937,623,0.937,624,0.937,625,0.937,646,2.65,653,0.958,701,3.286,703,3.286,704,1.568,705,1.524,706,1.524,707,1.524,708,1.524,709,1.524,710,1.391,711,1.852,712,1.337,713,2.469,715,1.524,716,1.524,717,1.524,718,1.524,720,1.452,721,1.452,723,2.429,724,1.452,725,1.452,726,1.452,727,1.391,728,1.452,729,1.452,730,1.452,732,2.326,733,1.391,734,2.326,735,1.391,736,1.391,737,2.999,738,2.999,739,1.391,740,1.391,741,1.391,742,3.506,744,1.391,745,1.391,746,1.391,747,2.326,748,3.37,751,2.084,752,1.337,753,2.019,754,1.337,755,2.236,756,1.337,757,1.337,758,1.337,759,1.337,760,1.337,761,1.337,762,1.026,763,1.289,764,1.289,765,1.289,767,2.156,768,3.271,769,2.718,770,1.289,771,2.019,772,1.804,773,1.246,774,1.246,775,1.246,776,1.207,777,2.019,778,1.207,779,3.779,780,2.265,781,2.525,782,1.246,980,2.687,1000,2.236,1029,1.804,1131,0.979,1173,1.61,1181,1.61,1186,1.61,1187,1.524,1188,1.61,1189,1.61,1190,1.61,1191,1.61,1192,1.61,1193,1.61,1194,1.61,1195,1.61,1196,2.694,1197,1.61,1198,1.61,1199,1.61,1200,1.61,1201,1.61,1202,1.61,1203,1.524,1204,1.524,1205,1.524,1206,1.524,1207,1.524,1208,1.524,1209,1.524,1210,3.249,1211,1.524,1212,1.524,1213,1.524,1214,1.524,1215,1.524,1216,1.524,1217,1.452,1218,1.452,1219,1.452,1220,1.452,1221,1.452,1222,1.452,1223,1.452,1224,1.452,1225,1.452,1226,1.452,1227,1.452,1228,1.452,1229,1.452,1230,1.452,1231,1.452,1232,1.452,1233,1.452,1234,1.452,1235,1.452,1236,1.452,1237,1.452,1238,1.452,1239,1.391,1240,1.391,1241,1.391,1242,1.391,1243,2.999,1244,2.326,1245,2.326,1246,1.391,1247,2.326,1248,2.326,1249,1.391,1250,1.391,1251,1.391,1252,1.391,1253,1.391,1254,1.391,1255,1.391,1256,2.326,1257,1.391,1258,1.391,1259,1.207,1260,1.337,1261,1.337,1262,1.337,1263,1.337,1264,1.337,1265,2.156,1266,1.337,1267,1.289,1268,2.156,1269,1.289,1270,1.289,1271,1.289,1272,1.289]],["title/core.html#JSON",[472,3.003]],["body/core.html#JSON",[1,0.328,2,0.405,3,0.44,4,0.486,5,0.51,6,0.582,7,0.779,8,0.865,9,1.122,10,1.021,11,1.299,12,0.998,14,0.04,15,0.811,16,1.642,21,1.306,30,2.316,36,1.198,37,1.363,38,1.347,39,1.159,40,1.193,41,1.403,42,1.127,43,1.236,44,1.127,45,1.276,58,1.568,62,0.905,114,1.698,119,1.198,120,1.242,259,0.773,264,1.969,266,0.913,272,1.471,274,1.344,358,0.93,359,1.299,364,1.131,389,1.344,392,1.198,404,4.045,410,0.607,417,1.307,438,1.021,443,0.852,447,1.458,468,0.715,472,2.183,474,1.579,511,1.297,535,1.107,548,1.726,576,1.276,577,1.34,578,1.409,579,1.484,580,1.596,581,1.021,582,1.021,583,1.041,584,1.041,585,0.947,586,1.041,587,1.041,606,1.041,607,1.001,608,1.041,609,1.084,610,1.084,611,1.041,612,1.084,613,1.107,614,1.107,615,1.107,616,1.084,617,1.107,618,1.107,619,1.107,620,1.107,621,1.041,622,1.107,623,1.107,624,1.107,625,1.107,646,2.934,653,1.131,704,1.107,711,1.307,713,1.157,720,1.715,721,1.715,723,2.787,724,1.715,725,1.715,726,1.715,727,1.642,728,1.715,729,1.715,730,1.715,732,2.668,733,1.642,734,2.668,735,1.642,736,1.642,737,3.37,738,3.37,739,1.642,740,1.642,741,1.642,742,3.881,744,1.642,745,1.642,746,1.642,747,2.668,748,3.73,751,2.391,752,1.579,753,2.316,754,1.579,755,2.565,756,1.579,757,1.579,758,1.579,759,1.579,760,1.579,761,1.579,762,1.212,763,1.522,764,1.522,765,1.522,767,2.473,768,3.546,769,3.009,770,1.522,771,2.316,772,2.069,773,1.471,774,1.471,775,1.471,776,1.425,777,2.316,778,1.425,779,4.097,780,2.455,781,2.838,782,1.471,980,2.673,1000,2.565,1029,2.069,1203,1.8,1204,1.8,1205,1.8,1206,1.8,1207,1.8,1208,1.8,1209,1.8,1210,3.597,1211,1.8,1212,1.8,1213,1.8,1214,1.8,1215,1.8,1216,1.8,1217,1.715,1218,1.715,1219,1.715,1220,1.715,1221,1.715,1222,1.715,1223,1.715,1224,1.715,1225,1.715,1226,1.715,1227,1.715,1228,1.715,1229,1.715,1230,1.715,1231,1.715,1232,1.715,1233,1.715,1234,1.715,1235,1.715,1236,1.715,1237,1.715,1238,1.715,1239,1.642,1240,1.642,1241,1.642,1242,1.642,1243,3.37,1244,2.668,1245,2.668,1246,1.642,1247,2.668,1248,2.668,1249,1.642,1250,1.642,1251,1.642,1252,1.642,1253,1.642,1254,1.642,1255,1.642,1256,2.668,1257,1.642,1258,1.642,1259,1.425,1260,1.579,1261,1.579,1262,1.579,1263,1.579,1264,1.579,1265,2.473,1266,1.579,1267,1.522,1268,2.473,1269,1.522,1270,1.522,1271,1.522,1272,1.522]],["title/core.html#function",[21,0.735]],["body/core.html#function",[1,0.329,2,0.406,3,0.441,4,0.483,5,0.505,6,0.577,7,0.772,8,0.857,9,1.107,10,1.001,11,1.328,12,0.991,14,0.04,21,1.307,36,1.227,37,1.397,38,1.384,39,1.202,40,1.237,41,1.454,42,1.177,43,1.29,44,1.177,45,1.332,58,1.594,62,0.905,114,1.688,119,1.251,259,0.815,264,2.055,266,0.963,272,1.551,274,1.417,358,0.98,359,1.328,364,1.193,389,1.417,392,1.251,404,4.088,410,0.64,417,1.378,443,0.899,447,1.522,468,0.754,511,1.353,535,1.167,548,1.801,576,1.332,577,1.398,578,1.47,579,1.548,580,1.665,581,1.076,582,1.076,583,1.097,584,1.097,585,0.998,586,1.097,587,1.097,606,1.097,607,1.055,608,1.097,609,1.143,610,1.143,611,1.097,612,1.143,613,1.167,614,1.167,615,1.167,616,1.143,617,1.167,618,1.167,619,1.167,620,1.167,621,1.097,622,1.167,623,1.167,624,1.167,625,1.167,646,3.026,653,1.193,704,1.167,711,1.378,713,1.22,732,2.785,733,1.732,734,2.785,735,1.732,736,1.732,737,3.493,738,3.493,739,1.732,740,1.732,741,1.732,742,4.002,744,1.732,745,1.732,746,1.732,747,2.785,748,3.847,751,2.495,752,1.665,753,2.417,754,1.665,755,2.677,756,1.665,757,1.665,758,1.665,759,1.665,760,1.665,761,1.665,762,1.278,763,1.605,764,1.605,765,1.605,767,2.581,768,3.633,769,3.103,770,1.605,771,2.417,772,2.159,773,1.551,774,1.551,775,1.551,776,1.503,777,2.417,778,1.503,779,4.197,780,2.516,781,2.941,782,1.551,980,2.757,1000,2.677,1029,2.159,1210,3.238,1217,1.808,1218,1.808,1219,1.808,1220,1.808,1221,1.808,1222,1.808,1223,1.808,1224,1.808,1225,1.808,1226,1.808,1227,1.808,1228,1.808,1229,1.808,1230,1.808,1231,1.808,1232,1.808,1233,1.808,1234,1.808,1235,1.808,1236,1.808,1237,1.808,1238,1.808,1239,1.732,1240,1.732,1241,1.732,1242,1.732,1243,3.493,1244,2.785,1245,2.785,1246,1.732,1247,2.785,1248,2.785,1249,1.732,1250,1.732,1251,1.732,1252,1.732,1253,1.732,1254,1.732,1255,1.732,1256,2.785,1257,1.732,1258,1.732,1259,1.503,1260,1.665,1261,1.665,1262,1.665,1263,1.665,1264,1.665,1265,2.581,1266,1.665,1267,1.605,1268,2.581,1269,1.605,1270,1.605,1271,1.605,1272,1.605]],["title/core.html#立即函式-IIFE",[1239,3.671]],["body/core.html#立即函式-IIFE",[1,0.33,2,0.413,3,0.448,4,0.484,5,0.503,6,0.574,7,0.768,8,0.853,9,1.089,10,1.025,11,1.359,12,0.986,14,0.04,21,1.3,36,1.248,37,1.42,38,1.389,39,1.096,40,1.128,41,1.326,42,0.867,43,0.951,44,0.867,45,0.982,58,1.676,62,0.887,114,1.569,119,0.922,259,0.966,264,2.351,266,1.142,272,1.839,274,1.68,358,1.162,359,1.359,364,1.414,389,1.68,392,1.431,404,4.076,410,0.759,417,1.634,443,1.066,447,1.122,468,0.894,535,1.384,576,0.982,577,1.031,578,1.084,579,1.142,580,1.228,581,1.276,582,1.276,583,1.301,584,1.301,585,1.183,586,1.301,587,1.301,606,1.301,607,1.251,608,1.301,609,1.355,610,1.355,611,1.301,612,1.355,613,1.384,614,1.384,615,1.384,616,1.355,617,1.384,618,1.384,619,1.384,620,1.384,621,1.301,622,1.384,623,1.384,624,1.384,625,1.384,646,3.327,704,1.384,711,1.634,713,1.446,748,4.23,751,2.855,752,1.974,753,2.765,754,1.974,755,3.063,756,1.974,757,1.974,758,1.974,759,1.974,760,1.974,761,1.974,762,1.515,763,1.903,764,1.903,765,1.903,767,2.953,768,3.909,769,3.412,770,1.903,771,2.765,772,2.471,773,1.839,774,1.839,775,1.839,776,1.782,777,2.765,778,1.782,779,4.516,780,2.707,781,3.287,782,1.839,980,3.032,1029,2.471,1210,2.953,1240,2.053,1241,2.053,1242,2.053,1243,3.905,1244,3.186,1245,3.186,1246,2.053,1247,3.186,1248,3.186,1249,2.053,1250,2.053,1251,2.053,1252,2.053,1253,2.053,1254,2.053,1255,2.053,1256,3.186,1257,2.053,1258,2.053,1259,1.782,1260,1.974,1261,1.974,1262,1.974,1263,1.974,1264,1.974,1265,2.953,1266,1.974,1267,1.903,1268,2.953,1269,1.903,1270,1.903,1271,1.903,1272,1.903]],["title/core.html#參數",[1259,3.185]],["body/core.html#參數",[1,0.338,2,0.422,3,0.464,4,0.511,5,0.532,6,0.608,7,0.813,8,0.902,9,1.152,10,1.084,11,1.437,12,1.005,14,0.04,21,1.281,36,1.314,37,1.496,38,1.442,39,0.917,40,0.944,41,1.109,58,1.791,62,0.859,114,1.422,119,1.197,264,2.861,266,1.482,274,2.181,359,1.437,364,1.836,389,2.181,392,1.197,404,4.283,443,1.383,468,1.161,646,3.794,704,1.797,711,2.122,713,1.877,753,2.313,762,1.967,763,2.47,764,2.47,765,2.47,767,3.594,768,4.314,769,3.891,770,2.47,771,3.365,772,3.006,773,2.388,774,2.388,775,2.388,776,2.313,777,3.365,778,2.313,779,4.985,780,2.988,781,3.848,782,2.388,980,1.836,1029,2.067,1210,3.594,1260,2.562,1261,2.562,1262,2.562,1263,2.562,1264,2.562,1265,3.594,1266,2.562,1267,2.47,1268,3.594,1269,2.47,1270,2.47,1271,2.47,1272,2.47]],["title/core.html#閉包-Closure",[389,2.26,1267,2.56]],["body/core.html#閉包-Closure",[1,0.327,2,0.413,3,0.457,4,0.484,5,0.52,6,0.594,7,0.794,8,0.882,9,1.175,10,1.106,11,1.466,12,1.044,14,0.04,21,1.252,36,1.321,37,1.503,38,1.592,39,1.097,40,1.129,41,1.327,58,1.811,62,0.852,114,1.37,119,1.432,264,3.249,266,1.773,274,2.61,359,1.539,404,4.348,646,4.112,704,2.15,771,3.821,772,3.415,773,2.858,774,2.858,775,2.858,776,2.768,777,3.821,778,2.768,779,5.287,780,3.169,781,4.247,782,2.858,1029,2.473,1210,4.082,1268,4.082,1269,2.956,1270,2.956,1271,2.956,1272,2.956]],["title/core.html#函式工廠",[1273,5.499]],["body/core.html#函式工廠",[1,0.265,2,0.335,3,0.366,4,0.452,5,0.485,6,0.554,7,0.741,8,0.823,9,1.097,10,0.802,11,1.064,12,0.977,14,0.04,21,1.255,24,3.794,36,1.033,37,1.176,38,1.246,39,1.358,40,1.397,41,1.642,42,1.667,43,1.828,44,1.667,62,0.715,119,2.52,266,2.822,280,2.234,359,1.597,579,2.822,629,2.912,646,4.886,771,5.14,772,4.864,776,4.405,777,3.425,785,7.937,786,5.288,787,5.288,788,5.288,789,6.801,790,5.288,791,5.288,1274,5.912,1275,5.912,1276,5.912]],["title/core.html#this",[]],["body/core.html#this",[1,0.328,2,0.396,3,0.417,4,0.506,5,0.561,6,0.631,7,0.772,8,0.79,9,0.909,10,0.855,11,1.134,12,0.99,14,0.04,15,2.263,21,1.224,27,1.152,34,2.792,36,1.102,37,1.254,38,1.169,39,1.274,40,1.311,41,1.541,42,0.799,43,0.876,44,0.799,45,0.904,62,0.88,114,1.734,115,1.395,119,1.342,247,0.731,266,1.051,267,3.442,358,2.096,359,1.134,368,1.8,392,2.187,404,2.836,410,0.699,444,1.547,468,2.121,523,2.378,526,4.736,535,1.275,544,4.582,548,1.223,549,1.152,576,0.904,577,0.949,578,0.998,579,1.051,580,1.131,631,1.332,646,2.8,661,2.337,673,3.459,704,1.275,711,1.505,712,1.818,713,1.332,762,2.204,792,2.072,793,2.337,794,2.533,795,2.533,796,3.118,797,2.676,798,1.752,799,5.637,800,3.867,802,4.003,803,2.19,804,2.19,805,2.533,806,2.533,807,2.533,808,2.533,809,6.525,810,6.525,811,2.533,812,2.533,813,4.576,814,2.533,815,6.138,816,4.003,818,2.533,822,5.637,823,4.003,824,2.533,825,4.003,826,2.533,827,2.533,828,3.119,829,4.576,830,3.867,831,2.337,832,2.337,833,3.459,834,2.19,836,2.337,837,2.337,839,3.692,840,2.337,841,2.337,842,2.337,843,2.337,844,2.337,845,2.337,846,3.274,847,2.337,848,3.274,849,2.337,850,3.274,851,2.337,852,3.274,853,2.337,980,3.916,1131,2.608,1187,2.072,1277,2.832,1278,2.832,1279,2.832,1280,2.832,1281,2.832,1282,2.832,1283,2.832,1284,2.832,1285,4.003,1286,2.832,1287,2.072,1288,2.832,1289,2.832,1290,2.832,1291,2.832,1292,2.832,1293,2.832,1294,2.832,1295,2.832,1296,2.832,1297,2.832,1298,4.475,1299,2.832,1300,2.832,1301,2.832,1302,2.832,1303,2.832,1304,7.639,1305,2.832,1306,2.832,1307,2.832,1308,2.832,1309,2.832,1310,2.832,1311,2.832,1312,3.692,1313,3.692,1314,2.832,1315,2.832,1316,2.832,1317,2.832,1318,2.832,1319,2.832,1320,2.832,1321,2.832,1322,2.533,1323,2.533,1324,2.533,1325,2.533,1326,2.533,1327,2.533,1328,2.533,1329,2.533,1330,2.533,1331,2.533,1332,2.533,1333,2.533,1334,2.533,1335,2.533,1336,4.003]],["title/core.html#new",[15,1.813]],["body/core.html#new",[1,0.293,2,0.306,3,0.334,4,0.412,5,0.501,6,0.506,7,0.677,8,0.751,9,1.001,10,0.942,11,1.249,12,1.034,14,0.04,15,2.589,21,1.172,34,3.57,36,1.213,37,1.381,38,1.462,39,1.594,40,1.64,41,1.928,42,1.452,43,1.592,44,1.452,45,1.643,62,0.905,114,1.069,247,1.328,267,4.59,359,1.413,392,2.52,410,1.271,444,2.811,548,2.222,549,2.094,576,1.643,577,1.725,578,1.814,579,1.91,580,2.055,713,2.42,828,4.838,829,6.478,830,5.474,831,4.246,832,4.246,833,5.365,834,3.979,836,4.246,837,4.246,839,5.726,840,4.246,841,4.246,842,4.246,843,4.246,844,4.246,845,4.246,846,5.078,847,4.246,848,5.078,849,4.246,850,5.078,851,4.246,852,5.078,853,4.246,1322,4.604,1323,4.604,1324,4.604,1325,4.604,1326,4.604,1327,4.604,1328,4.604,1329,4.604,1330,4.604,1331,4.604,1332,4.604,1333,4.604,1334,4.604,1335,4.604,1336,6.208]],["title/core.html#繼承",[1337,5.499]],["body/core.html#繼承",[1,0.246,2,0.311,3,0.34,4,0.42,5,0.451,6,0.515,7,0.688,8,0.764,9,1.018,10,0.958,11,1.27,12,0.935,14,0.04,15,1.741,21,1.182,36,1.234,37,1.405,38,1.488,39,1.621,40,1.669,41,1.961,42,1.991,43,1.633,44,1.489,45,1.686,62,0.832,114,1.652,356,1.829,368,1.713,392,2.788,438,3.299,468,2.573,576,1.686,577,1.77,631,3.74,828,6.349,830,5.545,834,4.082,835,4.723,854,6.149,855,7.115,856,4.723,857,5.458,858,4.723,859,4.723,861,4.723,862,4.723,863,4.723,865,6.315,867,4.723,868,4.723,869,4.723,870,null,871,4.723,872,4.723,873,4.723,874,4.723,875,4.723,876,4.723,1338,7.954,1339,5.28,1340,5.28,1341,5.28,1342,7.06,1343,5.28,1344,5.28,1345,5.28,1346,5.28,1347,5.28,1348,5.28,1349,5.28,1350,5.28,1351,7.06,1352,5.28,1353,5.28,1354,5.28,1355,5.28,1356,5.28,1357,5.28,1358,5.28]],["title/core.html#屬性特徵",[1359,5.499]],["body/core.html#屬性特徵",[1,0.313,2,0.419,3,0.432,4,0.51,5,0.531,6,0.581,7,0.777,8,0.862,9,0.984,10,0.925,11,1.227,12,0.877,14,0.04,15,1.307,19,2.109,21,0.911,36,1.192,37,1.357,38,1.437,39,1.327,40,1.366,41,1.605,42,1.63,43,1.787,44,1.118,45,1.266,62,0.807,114,0.824,119,1.732,120,2.917,247,1.759,259,1.246,280,1.498,352,3.156,354,1.008,356,1.374,359,1.227,364,1.823,365,3.065,366,2.901,387,1.823,410,0.979,468,2.495,469,1.747,511,1.286,545,2.371,558,2.229,576,1.266,577,1.329,578,1.397,579,1.472,713,1.864,772,2.991,778,2.297,833,3.065,877,2.052,878,3.858,879,6.702,880,3.547,881,3.547,882,5.169,883,6.099,884,3.547,885,3.547,886,3.547,887,3.547,888,3.547,889,3.547,890,5.169,891,5.169,892,5.169,893,5.169,894,7.257,895,4.767,896,3.547,897,5.169,898,3.547,899,4.376,900,5.169,902,3.547,903,4.228,904,5.169,905,3.547,906,3.547,907,3.547,908,3.547,909,3.547,911,3.547,912,5.827,913,5.169,914,3.547,915,2.647,916,3.271,917,3.065,918,3.547,919,5.169,920,3.271,921,3.547,922,3.547,923,3.547,924,3.547,925,3.547,926,3.547,1148,2.107,1259,2.297,1312,3.271,1313,3.271,1360,3.965,1361,3.965,1362,3.965,1363,3.965,1364,3.965,1365,3.965,1366,3.965,1367,3.965,1368,3.965,1369,3.965,1370,3.965,1371,3.965,1372,3.965,1373,3.965,1374,3.965,1375,3.965,1376,3.965,1377,3.965,1378,3.965,1379,5.779,1380,5.779,1381,3.965,1382,3.965,1383,3.965,1384,3.965,1385,3.965,1386,3.965,1387,3.547,1388,3.965,1389,3.965,1390,3.965,1391,3.965,1392,3.965,1393,3.965,1394,3.965,1395,3.965,1396,3.965,1397,3.965,1398,3.965,1399,3.965,1400,3.965,1401,3.965,1402,3.965,1403,3.965,1404,3.965]],["title/core.html#Let",[]],["body/core.html#Let",[1,0.304,2,0.384,3,0.42,4,0.519,5,0.472,6,0.539,10,1.003,12,0.814,14,0.038,58,1.45,62,0.873,264,4.298,392,2.616,523,3.927,753,4.281,929,6.611,980,3.399,1131,3.475,1405,7.39,1406,8.726,1407,7.39,1408,4.934,1409,7.39]],["title/core.html#const",[354,1.398]],["body/core.html#const",[1,0.306,2,0.387,3,0.423,4,0.48,5,0.516,6,0.589,7,0.788,8,0.875,9,1.166,10,1.097,11,1.173,12,0.89,14,0.04,36,1.139,37,1.297,62,0.761,266,2.419,315,4.543,354,2.235,378,5.376,392,1.954,468,1.895,629,3.21,646,3.289,654,7.107,793,5.376,930,5.829,931,5.829,932,5.829,933,7.233,934,6.432,935,5.038,936,5.376,1410,6.516,1411,6.516,1412,6.516,1413,6.516,1414,6.516,1415,6.516,1416,6.516,1417,6.516,1418,6.516,1419,6.516,1420,6.516,1421,6.516,1422,6.516,1423,6.516,1424,6.516]],["title/core.html#ES6-Airbnb",[690,2.26,938,3.414]],["body/core.html#ES6-Airbnb",[14,0.029,32,4.83,353,4.657,514,7.719,656,6.453,680,4.83,690,4.111,819,5.275,938,7.277,939,6.732,940,7.89,941,6.732,942,8.369,943,7.89,944,6.732,945,6.732,1425,7.526,1426,7.526,1427,7.526,1428,7.526,1429,7.526,1430,7.526]],["title/core.html#箭頭函數",[1431,4.251]],["body/core.html#箭頭函數",[1,0.344,2,0.411,3,0.454,4,0.548,5,0.579,6,0.511,7,0.684,8,0.648,9,0.601,10,1.04,14,0.04,15,1.374,21,1.024,39,0.957,58,1.504,62,0.895,114,1.687,119,2.103,120,3.87,333,2.214,349,5.358,354,2.418,356,1.444,358,1.574,359,1.078,360,3.221,368,1.352,524,3.706,532,3.023,548,4.106,621,3.578,644,2.157,768,4.205,894,4.942,912,3.048,915,2.782,916,3.437,934,3.048,936,3.437,946,3.727,948,5.358,949,3.727,950,3.727,951,3.727,952,3.727,953,3.727,954,3.727,955,3.727,956,3.727,957,2.674,958,5.358,959,3.727,960,5.358,961,6.859,962,6.859,963,3.727,964,5.358,965,5.358,1259,2.414,1408,2.782,1431,3.221,1432,4.167,1433,4.167,1434,4.167,1435,3.727,1436,4.167,1437,4.167,1438,4.167,1439,4.167,1440,4.167,1441,4.167,1442,4.167,1443,4.167,1444,4.167,1445,4.167,1446,4.167]],["title/num.html",[549,2.237]],["body/num.html",[1,0.3,2,0.294,3,0.446,4,0.397,5,0.426,6,0.486,7,0.8,8,0.722,9,1.241,10,1.235,11,1.201,12,0.735,14,0.04,21,1.216,36,1.167,37,1.328,38,1.406,58,1.495,62,0.809,114,1.787,354,1.938,356,2.312,359,1.638,511,1.576,548,3.291,549,3.339,713,4.359,1447,4.859,1448,4.346,1449,4.346,1450,4.346,1451,6.818,1452,4.346,1453,7.948,1454,8.413,1455,7.648,1456,7.096,1457,4.346,1458,4.346,1459,4.346,1460,4.346,1461,4.346,1462,5.97,1463,7.693,1464,3.007,1465,5.97,1466,4.346,1467,5.97,1468,5.97,1469,4.859,1470,5.97,1471,4.346,1472,6.818,1473,4.346,1474,6.818,1475,4.346,1476,4.346,1477,4.346]],["title/num.html#取值",[1478,5.499]],["body/num.html#取值",[1,0.226,2,0.285,3,0.312,4,0.385,5,0.413,6,0.472,7,0.631,8,0.701,9,0.934,10,1.244,11,1.165,14,0.04,21,1.171,36,1.132,37,1.288,38,1.364,354,2.228,359,1.577,549,3.566,1448,5.789,1449,5.789,1450,5.789,1451,7.84,1452,5.789,1453,8.602,1454,8.89,1455,7.934,1456,7.231,1457,5.789,1458,5.789,1459,5.789,1460,5.789,1461,5.789,1479,6.472,1480,6.472,1481,6.472,1482,6.472]],["title/num.html#補數字",[1483,5.499]],["body/num.html#補數字",[1,0.305,2,0.251,3,0.456,4,0.339,5,0.364,6,0.415,7,0.805,8,0.617,9,1.192,10,1.121,11,1.026,12,0.818,14,0.04,21,1.169,36,0.996,37,1.134,38,1.201,58,1.118,62,0.854,114,1.885,356,2.573,359,1.575,511,1.849,548,3.566,549,2.319,713,4.518,1455,6.126,1456,6.126,1462,6.642,1463,8.117,1465,6.642,1466,5.098,1467,6.642,1468,6.642,1470,6.642,1471,5.098,1472,7.388,1473,5.098,1474,7.388,1475,5.098,1476,5.098,1477,5.098,1484,5.7,1485,5.7,1486,5.7,1487,5.7,1488,5.7,1489,5.7]],["title/index.html",[1490,2.025,1491,2.025,1492,2.025,1493,2.025]],["body/index.html",[1,0.317,14,0.037,144,4.893,159,4.631,253,4.225,333,4.835,361,3.558,420,4.062,819,5.189,935,4.893,1490,7.18,1491,6.997,1492,6.657,1493,6.348,1494,5.662,1495,5.662,1496,7.034,1497,5.662,1498,5.662,1499,5.662,1500,5.096,1501,5.662,1502,5.662,1503,5.662,1504,5.662,1505,5.662,1506,5.662,1507,5.662,1508,5.662,1509,5.662,1510,5.662,1511,7.158,1512,5.662,1513,8.138,1514,7.103,1515,5.096,1516,4.631,1517,4.893,1518,7.103,1519,5.662,1520,5.662,1521,5.662,1522,5.662,1523,5.662,1524,7.103,1525,5.662,1526,5.662,1527,5.662,1528,4.893,1529,5.662,1530,5.662,1531,5.662,1532,5.662,1533,5.662,1534,6.551,1535,6.551,1536,5.662,1537,5.662]],["title/index.html#hexo-theme-doc-seed",[1490,2.025,1491,2.025,1492,2.025,1493,2.025]],["body/index.html#hexo-theme-doc-seed",[14,0.029,333,4.687,819,5.596,1490,6.846,1491,6.846,1492,5.507,1493,5.507,1494,6.732,1495,6.732,1496,6.819,1497,6.732,1498,6.732,1499,6.732,1500,4.83,1501,6.732,1502,6.732,1503,6.732,1504,6.732,1505,6.732,1506,6.732,1507,6.732,1508,6.732,1509,6.732]],["title/index.html#Getting-Started",[1510,3.701,1511,3.414]],["body/index.html#Getting-Started",[1,0.329,14,0.036,144,5.46,253,4.715,333,3.753,361,3.97,420,4.532,935,5.46,1490,6.915,1491,6.214,1492,6.214,1493,5.167,1496,5.46,1500,4.532,1511,7.007,1512,6.317,1513,8.454,1514,7.597,1515,5.45,1516,5.167,1517,5.46,1518,7.597,1519,6.317,1520,6.317,1521,6.317,1522,6.317,1523,6.317,1524,7.597,1525,6.317,1526,6.317,1527,6.317,1528,5.46,1529,6.317,1530,6.317,1531,6.317,1532,6.317,1533,6.317]],["title/index.html#More-Informations",[1534,3.414,1535,3.414]],["body/index.html#More-Informations",[14,0.031,159,5.861,333,4.257,1496,6.193,1534,6.608,1535,6.608,1536,7.165,1537,7.165]],["title/this.html",[]],["body/this.html",[1,0.332,2,0.416,3,0.437,4,0.526,5,0.56,6,0.628,7,0.832,8,0.901,9,1.183,10,1.157,11,1.229,12,1.072,14,0.04,19,0.601,21,1.262,27,1.337,36,0.982,37,1.118,38,0.9,39,0.981,40,1.01,41,0.913,42,0.927,43,1.017,44,1.417,45,0.62,55,1.502,58,0.985,62,0.859,111,1.603,114,1.838,115,1.619,119,2.047,153,0.776,259,1.916,266,0.721,277,0.709,280,2.779,353,1.202,354,0.835,356,2.113,358,1.242,359,1.324,362,2.125,364,1.511,368,1.978,389,1.061,392,2.91,393,1.966,395,2.541,398,2.747,404,2.261,410,1.505,417,2.985,420,3.604,443,0.673,447,0.709,468,1.242,511,0.63,526,3.004,535,0.874,538,0.981,576,0.62,588,1.419,646,3.82,690,1.061,704,0.874,712,1.247,713,0.914,751,1.966,762,3.003,769,1.701,780,1.178,796,2.823,797,2.554,800,5.876,803,1.502,819,1.162,820,1.603,877,4.014,903,1.422,1538,1.162,1539,1.738,1540,3.82,1541,4.342,1542,1.738,1543,1.738,1544,3.524,1545,2.94,1546,1.738,1547,1.738,1548,2.94,1549,4.493,1550,2.94,1551,1.943,1552,1.738,1553,1.355,1554,1.738,1555,5.024,1556,1.738,1557,2.405,1558,1.738,1559,5.809,1560,4.493,1561,4.493,1562,5.024,1563,2.94,1564,2.94,1565,2.94,1566,2.94,1567,4.634,1568,1.422,1569,1.943,1570,1.297,1571,3.125,1572,1.502,1573,2.94,1574,1.738,1575,1.738,1576,1.943,1577,1.355,1578,1.738,1579,2.94,1580,2.94,1581,1.738,1582,3.82,1583,1.738,1584,1.738,1585,1.943,1586,1.738,1587,1.738,1588,1.738,1589,1.738,1590,1.943,1591,1.738,1592,1.943,1593,1.738,1594,2.94,1595,2.744,1596,1.943,1597,3.108,1598,1.126,1599,1.502,1600,1.943,1601,3.287,1602,1.943,1603,1.943,1604,1.943,1605,1.943,1606,1.738,1607,1.738,1608,1.738,1609,1.738,1610,1.738,1611,1.738,1612,1.738]],["title/this.html#物件的方法調用-As-an-object-method",[468,0.964,1538,1.984,1613,3.317]],["body/this.html#物件的方法調用-As-an-object-method",[1,0.288,2,0.364,3,0.397,4,0.49,5,0.527,6,0.602,7,0.805,8,0.893,9,1.19,10,1.006,11,1.335,12,1.043,14,0.04,21,1.168,36,1.297,37,1.476,38,1.199,39,1.306,40,1.345,62,0.776,114,1.714,364,2.616,392,2.959,398,2.407,535,2.56,704,2.56,800,6.959,877,4.271,1408,4.951,1539,5.088,1540,6.634,1541,6.379,1542,5.088,1543,5.088,1544,4.693,1614,5.689,1615,5.689,1616,6.037,1617,6.118,1618,5.689,1619,6.118,1620,7.416,1621,7.416,1622,5.088,1623,5.689,1624,5.689,1625,5.689]],["title/this.html#簡易呼叫",[1285,4.919]],["body/this.html#簡易呼叫",[1,0.314,2,0.397,3,0.413,4,0.51,5,0.547,6,0.625,7,0.836,8,0.928,9,1.191,10,1.06,11,1.11,12,1.08,14,0.04,19,1.343,21,1.179,27,2.511,36,0.759,37,0.864,58,1.21,62,0.863,114,1.832,259,2.695,280,3.514,359,1.485,368,1.409,392,2.703,398,2.611,404,2.777,410,2.117,417,3.279,420,4.606,538,2.192,751,3.691,877,4.273,1312,3.583,1313,3.583,1408,2.9,1544,5.091,1545,5.52,1546,3.885,1547,3.885,1548,5.52,1549,6.99,1550,5.52,1552,3.885,1553,3.028,1554,3.885,1555,7.383,1556,3.885,1616,5.251,1622,6.42,1626,8.576,1627,4.343,1628,7.177,1629,6.171,1630,4.343,1631,4.343,1632,4.343,1633,4.343,1634,4.343,1635,6.171]],["title/this.html#立即函式：",[1636,5.499]],["body/this.html#立即函式：",[1,0.305,2,0.385,3,0.421,4,0.52,5,0.558,6,0.585,7,0.783,8,0.697,9,0.929,10,0.874,12,1.037,14,0.04,21,1.259,62,0.823,114,1.817,392,2.952,800,4.492,877,3.335,1408,5.36,1541,4.981,1557,5.875,1616,6.4,1617,6.624,1619,5.316]],["title/this.html#Closure",[389,3.003]],["body/this.html#Closure",[1,0.256,2,0.323,3,0.353,4,0.436,5,0.468,6,0.535,7,0.716,8,0.795,9,1.059,10,1.179,11,1.321,12,1.076,14,0.04,21,1.206,36,0.979,37,1.114,38,1.18,39,1.286,40,1.324,41,1.556,42,1.579,43,1.732,44,2.309,62,0.69,114,1.525,119,2.829,266,2.078,359,1.321,364,2.575,392,2.705,447,2.042,646,4.831,1408,3.738,1558,5.009,1559,8.44,1560,7.774,1561,7.774,1562,8.071,1563,6.566,1564,6.566,1565,6.566,1566,6.566,1567,6.756,1616,5.37,1637,5.6]],["title/this.html#Callback",[762,2.709]],["body/this.html#Callback",[1,0.319,2,0.403,3,0.441,4,0.477,5,0.411,6,0.47,7,0.628,12,0.884,14,0.04,21,1.259,62,0.755,111,5.316,114,1.668,119,1.932,356,3.031,359,1.159,362,3.397,646,4.415,712,4.135,762,4.51,769,3.335,803,4.981,903,4.714,1128,3.424,1567,6.624,1568,4.714,1570,4.301,1571,5.875,1572,4.981,1573,7.182,1574,5.763,1575,5.763,1638,6.443,1639,6.443,1640,6.443,1641,6.443,1642,6.443,1643,6.443,1644,6.443,1645,6.443,1646,6.443,1647,6.443,1648,6.443]],["title/this.html#bind-apply-call",[526,1.984,796,1.864,797,1.984]],["body/this.html#bind-apply-call",[1,0.328,2,0.401,3,0.4,4,0.472,5,0.507,6,0.58,7,0.729,8,0.809,9,1.079,10,1.163,11,1.037,12,0.944,14,0.04,21,1.145,36,0.69,37,0.786,38,0.832,39,0.907,40,0.933,41,1.097,42,1.114,43,1.221,44,1.114,45,1.261,55,3.053,58,1.13,62,0.826,114,1.652,115,2.838,153,1.576,183,2.753,353,2.443,354,1.464,356,1.996,358,2.177,359,1.037,362,2.437,368,2.426,392,2.848,393,3.446,395,4.454,398,3.164,443,1.368,468,1.675,511,1.281,526,4.068,576,1.261,588,2.487,690,2.157,713,1.857,762,1.945,769,2.044,780,2.065,796,3.238,797,3.446,800,4.742,877,3.521,990,3.433,1111,2.044,1185,2.753,1259,2.287,1265,2.443,1408,4.992,1541,3.053,1571,2.889,1577,2.753,1578,3.532,1579,5.153,1580,5.153,1581,3.532,1582,6.085,1583,3.532,1584,3.532,1586,3.532,1587,3.532,1588,3.532,1589,3.532,1591,3.532,1593,3.532,1594,5.153,1595,4.084,1597,4.209,1598,2.287,1599,3.053,1606,3.532,1607,3.532,1608,3.532,1609,3.532,1610,3.532,1611,3.532,1612,3.532,1616,4.215,1617,4.753,1619,5.612,1649,3.948,1650,3.948,1651,3.948,1652,3.948,1653,3.948,1654,3.532,1655,3.532,1656,3.948,1657,3.948,1658,3.948,1659,3.532,1660,3.948,1661,5.761,1662,5.761,1663,3.948,1664,3.948,1665,3.948,1666,3.948,1667,3.948,1668,3.948,1669,3.948,1670,3.948,1671,3.948,1672,5.259,1673,3.948,1674,3.948,1675,3.948,1676,3.948,1677,3.948,1678,3.948,1679,3.948,1680,3.948,1681,3.948,1682,3.948,1683,4.753,1684,3.948,1685,5.761,1686,3.948,1687,3.948,1688,3.948,1689,3.948,1690,3.948,1691,3.948,1692,3.948,1693,3.948,1694,3.948,1695,3.948,1696,3.948,1697,3.948]],["title/scope.html",[418,4.023]],["body/scope.html",[1,0.336,2,0.414,3,0.446,4,0.55,5,0.591,6,0.634,7,0.777,8,0.795,9,1.06,10,0.616,12,1.086,14,0.04,21,1.268,62,0.892,114,0.942,153,1.811,277,1.654,280,3.5,359,1.145,368,1.472,404,4.102,410,1.967,417,4.923,418,5.377,420,5.731,444,3.475,532,3.211,535,2.863,538,2.289,654,3.507,704,2.863,813,5.249,819,4.395,820,6.063,1553,4.435,1557,3.319,1577,3.162,1698,6.362,1699,6.724,1700,4.536,1701,6.362,1702,4.536,1703,6.362,1704,4.536,1705,4.536,1706,4.536,1707,4.536,1708,4.536,1709,3.742,1710,4.536]],["title/performance.html",[1711,5.499]],["body/performance.html",[1,0.3,2,0.38,3,0.415,4,0.512,5,0.529,6,0.573,7,0.608,8,0.674,9,0.899,10,1.067,11,0.792,12,1.013,14,0.04,21,1.05,32,2.826,36,0.77,58,1.419,83,3.633,87,4.559,88,3.633,115,2.169,119,1.32,120,4.348,215,5.59,222,2.551,277,2.637,333,4.808,334,5.041,358,1.664,362,1.863,398,3.51,511,1.429,658,5.59,713,2.071,727,2.94,798,5.772,947,5.141,1712,4.404,1713,3.939,1714,4.404,1715,5.574,1716,3.939,1717,3.939,1718,5.966,1719,3.939,1720,5.041,1721,4.404,1722,6.468,1723,6.468,1724,3.939,1725,4.404,1726,3.939,1727,3.939,1728,3.939,1729,5.574,1730,5.574,1731,3.939,1732,3.939,1733,5.141,1734,3.939,1735,3.939,1736,4.344,1737,7.033,1738,5.574,1739,3.939,1740,3.939,1741,3.939,1742,3.939,1743,5.574,1744,6.468,1745,4.404,1746,3.939,1747,2.725,1748,6.468,1749,3.939,1750,3.939,1751,2.634,1752,3.939,1753,3.939]],["title/performance.html#優化原則和方向",[1754,5.499]],["body/performance.html#優化原則和方向",[88,6.05,277,2.675,798,4.538,1713,6.56,1715,6.56,1716,6.56,1717,6.56,1718,6.05,1719,6.56,1720,6.056,1755,7.334,1756,7.334,1757,7.334,1758,7.334,1759,7.334,1760,7.334,1761,7.334,1762,7.334,1763,7.334,1764,7.334,1765,7.334,1766,7.334,1767,8.687,1768,7.334,1769,7.334,1770,7.334,1771,7.334,1772,7.334,1773,6.56,1774,7.334,1775,7.334,1776,8.687,1777,7.334,1778,6.56,1779,7.334,1780,7.334,1781,7.334,1782,7.334]],["title/performance.html#懶加載",[1783,5.499]],["body/performance.html#懶加載",[1,0.25,2,0.317,3,0.346,4,0.427,5,0.459,12,0.791,14,0.039,83,5.929,87,6.279,120,4.798,215,7.094,222,4.163,333,3.819,334,5.01,1720,5.01,1722,7.677,1723,7.677,1724,6.428,1726,6.428,1727,6.428,1728,6.428,1784,7.187,1785,7.187,1786,7.187,1787,7.187,1788,7.187,1789,7.187,1790,7.187,1791,7.187,1792,7.187,1793,7.187,1794,7.187,1795,7.187,1796,7.187]],["title/performance.html#DOM-查詢做緩存",[798,2.56,1773,3.701]],["body/performance.html#DOM-查詢做緩存",[1,0.301,2,0.38,3,0.416,4,0.513,5,0.463,6,0.529,12,1.015,14,0.039,58,1.694,333,4.588,713,3.414,798,5.342,1435,7.723,1729,7.723,1730,7.723,1731,6.493,1732,6.493,1797,7.259,1798,7.259,1799,7.259,1800,7.259,1801,7.259]],["title/performance.html#合併-DOM-插入-createDocumentFragment",[798,1.713,1733,2.283,1802,2.768,1803,2.768]],["body/performance.html#合併-DOM-插入-createDocumentFragment",[1,0.24,2,0.304,3,0.332,4,0.41,5,0.44,6,0.502,7,0.672,8,0.746,9,0.994,10,1.223,12,0.992,14,0.039,58,1.352,291,5.686,333,4.79,334,4.805,362,2.916,398,4.063,798,5.179,1733,5.686,1734,6.165,1735,6.165,1736,4.805,1737,8.385,1738,7.486,1739,6.165,1740,6.165,1741,6.165,1742,6.165,1804,6.893,1805,6.893,1806,6.893,1807,6.893,1808,6.893,1809,6.893,1810,6.893,1811,6.893,1812,6.893]],["title/performance.html#儘早執行操作-DOMContentLoaded",[1718,3.414,1813,4.138]],["body/performance.html#儘早執行操作-DOMContentLoaded",[1,0.264,2,0.333,3,0.364,4,0.45,5,0.483,6,0.552,14,0.04,21,1.182,333,4.021,358,2.859,798,4.682,1743,7.914,1814,7.566,1815,7.566,1816,7.566,1817,7.566]],["title/performance.html#事件節流",[1778,4.919]],["body/performance.html#事件節流",[1,0.241,2,0.304,3,0.333,4,0.411,5,0.441,6,0.504,7,0.674,8,0.748,9,0.997,10,0.938,11,1.243,12,0.923,14,0.04,21,1.12,36,1.208,115,3.403,119,2.071,333,3.672,334,4.817,658,6.975,1744,6.18,1746,6.18,1748,8.071,1749,6.18,1750,6.18,1751,4.132,1752,6.18,1753,6.18,1818,6.909,1819,6.909,1820,6.909,1821,6.909,1822,6.909,1823,6.909,1824,6.909,1825,6.909,1826,6.909,1827,6.909,1828,8.382,1829,6.909,1830,6.909]],["title/math.html",[14,0.021]],["body/math.html",[1,0.306,2,0.433,3,0.314,4,0.387,5,0.416,6,0.475,7,0.458,8,0.508,12,0.824,14,0.04,19,1.451,36,0.82,58,1.803,62,0.613,119,1.953,223,3.011,247,1.93,259,1.474,277,1.711,359,0.844,410,1.158,444,2.563,511,2.113,568,2.311,1464,2.903,1515,3.011,1538,2.806,1747,2.903,1751,2.806,1831,3.627,1832,4.802,1833,4.541,1834,3.627,1835,3.627,1836,3.627,1837,3.627,1838,3.627,1839,4.541,1840,4.541,1841,3.011,1842,3.271,1843,3.271,1844,3.271,1845,3.271,1846,5.761,1847,5.711,1848,5.08,1849,3.011,1850,4.197,1851,4.802,1852,4.18,1853,4.197,1854,4.197,1855,3.011,1856,4.197,1857,6.181,1858,4.18,1859,5.641,1860,5.188,1861,4.18,1862,4.18,1863,4.18,1864,3.011,1865,4.197,1866,4.197,1867,3.011,1868,3.011,1869,3.011,1870,3.011,1871,3.011,1872,3.011,1873,3.011,1874,3.011,1875,3.011,1876,3.011,1877,2.806,1878,3.011]],["title/math.html#浮點數運算的坑",[1879,4.919]],["body/math.html#浮點數運算的坑",[1,0.306,2,0.43,3,0.313,4,0.386,5,0.414,6,0.473,7,0.455,8,0.505,12,0.822,14,0.04,19,1.444,36,0.816,58,1.801,62,0.611,119,1.946,223,2.996,229,3.117,247,1.925,259,1.467,359,0.84,410,1.153,444,2.55,511,1.515,568,2.3,1464,2.889,1515,2.996,1538,2.792,1747,2.889,1751,2.792,1831,3.61,1832,4.79,1833,4.526,1834,3.61,1835,3.61,1836,3.61,1837,3.61,1838,3.61,1839,3.255,1840,4.526,1841,2.996,1842,3.255,1843,3.255,1844,3.255,1845,3.255,1846,5.706,1847,5.706,1848,4.825,1849,2.996,1851,2.996,1852,4.166,1855,2.996,1857,6.176,1858,2.996,1859,5.632,1860,5.177,1861,4.166,1862,4.166,1863,4.166,1864,2.996,1867,2.996,1868,2.996,1869,2.996,1870,2.996,1871,2.996,1872,2.996,1873,2.996,1874,2.996,1875,2.996,1876,2.996,1877,2.792,1878,2.996,1880,4.176,1881,4.176,1882,4.176,1883,4.176,1884,4.176,1885,4.176,1886,4.176,1887,4.176,1888,4.176,1889,3.61,1890,3.61,1891,3.61,1892,3.255,1893,3.852,1894,3.852,1895,3.852,1896,3.255,1897,3.255,1898,3.255,1899,3.255,1900,3.255,1901,3.255,1902,2.705,1903,3.255,1904,3.255,1905,3.255,1906,3.255,1907,3.255,1908,3.255,1909,6.119,1910,6.119,1911,6.119,1912,6.119,1913,3.255,1914,3.255,1915,3.255,1916,3.255,1917,3.255,1918,3.255,1919,3.255,1920,3.255,1921,3.255,1922,3.255,1923,3.255,1924,3.255]],["title/math.html#科學符號處理",[1889,4.251]],["body/math.html#科學符號處理",[1,0.305,2,0.433,3,0.246,4,0.304,5,0.326,6,0.373,7,0.498,8,0.553,14,0.04,19,1.581,58,1.84,223,3.279,229,3.412,247,1.782,359,0.92,1464,3.162,1515,3.279,1538,3.056,1747,3.162,1751,3.056,1832,3.279,1839,3.563,1840,4.815,1841,3.279,1842,3.563,1843,3.563,1844,3.563,1845,3.563,1846,5.799,1847,5.799,1848,5.012,1849,3.279,1851,3.279,1852,4.432,1855,3.279,1857,6.269,1858,3.279,1859,5.789,1860,5.378,1861,4.432,1862,4.432,1863,4.432,1864,3.279,1867,3.279,1868,3.279,1869,3.279,1870,3.279,1871,3.279,1872,3.279,1873,3.279,1874,3.279,1875,3.279,1876,3.279,1877,3.056,1878,3.279,1890,3.951,1891,3.951,1892,3.563,1893,4.216,1894,4.216,1895,4.216,1896,3.563,1897,3.563,1898,3.563,1899,3.563,1900,3.563,1901,3.563,1902,2.96,1903,3.563,1904,3.563,1905,3.563,1906,3.563,1907,3.563,1908,3.563,1909,6.289,1910,6.289,1911,6.289,1912,6.289,1913,3.563,1914,3.563,1915,3.563,1916,3.563,1917,3.563,1918,3.563,1919,3.563,1920,3.563,1921,3.563,1922,3.563,1923,3.563,1924,3.563]],["title/math.html#why-0-1-0-2-0-3",[14,0.015,1846,1.42,1847,1.42,1848,1.42]],["body/math.html#why-0-1-0-2-0-3",[1,0.299,2,0.434,14,0.039,19,1.679,58,1.865,229,3.625,247,1.855,1464,3.36,1751,3.248,1832,3.484,1846,5.812,1847,5.812,1848,4.824,1849,3.484,1851,3.484,1852,4.616,1855,3.484,1857,6.328,1858,3.484,1859,5.891,1860,5.511,1861,4.616,1862,4.616,1863,4.616,1864,3.484,1867,3.484,1868,3.484,1869,3.484,1870,3.484,1871,3.484,1872,3.484,1873,3.484,1874,3.484,1875,3.484,1876,3.484,1877,3.248,1878,3.484,1892,3.785,1893,4.48,1894,4.48,1895,4.48,1896,3.785,1897,3.785,1898,3.785,1899,3.785,1900,3.785,1901,3.785,1902,3.145,1903,3.785,1904,3.785,1905,3.785,1906,3.785,1907,3.785,1908,3.785,1909,6.4,1910,6.4,1911,6.4,1912,6.4,1913,3.785,1914,3.785,1915,3.785,1916,3.785,1917,3.785,1918,3.785,1919,3.785,1920,3.785,1921,3.785,1922,3.785,1923,3.785,1924,3.785]],["title/operators.html",[1925,4.251]],["body/operators.html",[1,0.351,2,0.433,3,0.42,4,0.489,5,0.578,6,0.489,7,0.653,8,0.725,9,0.967,10,0.909,11,1.017,12,0.813,14,0.04,19,2.838,21,0.895,27,1.566,34,1.566,36,0.988,37,1.125,38,1.191,39,0.884,40,0.909,58,1.668,62,0.94,114,1.812,153,1.536,247,2.122,264,3.638,273,1.992,359,1.206,368,1.248,393,2.301,398,3.481,399,2.975,410,1.943,443,1.959,468,2.147,529,2.381,530,2.569,531,2.469,532,1.942,533,2.381,549,1.566,576,1.228,585,1.48,588,3.551,597,2.926,626,1.942,690,2.102,704,1.732,819,2.301,1877,2.301,1925,4.37,1926,3.442,1927,3.442,1928,6.607,1929,3.442,1930,3.442,1931,7.038,1932,7.038,1933,3.442,1934,3.442,1935,3.442,1936,3.442,1937,3.442,1938,3.442,1939,5.057,1940,3.174,1941,3.442,1942,3.442,1943,6.607,1944,3.442,1945,3.442,1946,4.37,1947,3.174,1948,3.442,1949,3.442,1950,3.442,1951,3.442,1952,3.442,1953,3.848,1954,3.442,1955,3.442,1956,5.057]],["title/operators.html#What-is-the-difference-between-the-equality-operators-and",[14,0.016,597,0.957,1925,1.43,1926,1.654,1927,1.654]],["body/operators.html#What-is-the-difference-between-the-equality-operators-and",[1,0.336,2,0.331,3,0.362,4,0.446,5,0.37,6,0.423,7,0.566,8,0.628,9,0.837,10,0.788,11,1.044,12,0.639,14,0.04,19,3.062,27,2.361,36,1.015,37,1.155,38,1.223,58,1.867,62,0.925,247,2.412,368,1.883,410,1.433,438,3.117,468,2.562,588,3.804,597,3.004,690,3.17,819,3.471,1902,3.362,1928,7.882,1929,5.191,1930,5.191,1931,8.164,1932,8.164,1933,5.191,1934,5.191,1935,5.191,1936,5.191,1957,5.804,1958,5.804,1959,5.804,1960,5.804,1961,5.804,1962,5.804,1963,5.804,1964,5.804,1965,5.804,1966,5.804,1967,5.804,1968,5.804,1969,5.804,1970,5.804,1971,5.804,1972,5.804,1973,5.804]],["title/operators.html#Increment",[14,0.016,1937,3.701]],["body/operators.html#Increment",[1,0.351,2,0.429,3,0.432,4,0.507,5,0.544,6,0.445,7,0.595,8,0.66,9,0.88,10,0.828,11,1.098,14,0.04,21,1.14,36,1.066,37,1.214,38,1.285,39,1.401,40,1.442,62,0.925,153,2.435,264,4.422,359,1.535,398,3.921,443,2.688,1938,5.457,1939,6.939,1940,5.033,1941,5.457,1942,5.457,1943,8.03,1944,5.457,1945,5.457,1946,4.716,1947,5.033,1974,6.1,1975,6.1,1976,6.1,1977,6.1,1978,6.1,1979,6.1,1980,6.1]],["title/operators.html#references",[153,2.195]],["body/operators.html#references",[1946,6.298,1947,6.721]],["title/operators.html#Adding-Strings-and-Numbers",[34,1.35,549,1.35,1948,2.967]],["body/operators.html#Adding-Strings-and-Numbers",[1,0.339,2,0.439,3,0.371,4,0.359,5,0.603,6,0.44,7,0.589,8,0.653,9,0.871,10,0.819,12,0.934,14,0.04,62,0.914,114,2.02,273,3.125,393,3.61,398,2.554,399,4.666,410,2.208,529,3.735,530,4.03,531,3.874,532,3.047,533,3.735,576,1.927,585,2.322,588,2.606,626,3.047,704,2.717,1877,3.61,1925,4.666,1946,4.666,1949,5.399,1950,5.399,1951,5.399,1952,5.399,1954,5.399,1955,5.399,1956,6.892,1981,6.036]],["title/url.html",[46,3.529]],["body/url.html",[14,0.036,47,6.895,366,5.64,1982,7.709,1983,7.709,1984,7.709,1985,7.709,1986,8.944,1987,8.944,1988,7.709,1989,7.709,1990,5.374,1991,7.709,1992,7.709,1993,7.709,1994,7.709,1995,6.359,1996,7.709]],["title/variable.html",[1997,5.499]],["body/variable.html",[1,0.344,2,0.428,3,0.436,4,0.539,5,0.569,6,0.637,7,0.831,8,0.922,9,1.229,10,1.23,11,1.333,12,1.023,14,0.04,21,1.242,34,2.312,36,0.677,62,0.939,114,1.95,119,1.161,247,0.999,280,2.147,358,3.116,368,2.835,392,2.555,394,3.028,404,3.711,417,3.019,420,3.646,443,2.953,521,2.701,523,4.739,532,1.955,535,1.743,538,4.162,544,3.193,549,2.312,647,3.237,678,3.465,704,1.743,1553,3.961,1557,4.157,1699,2.995,1709,3.196,1998,6.728,1999,5.681,2000,6.728,2001,3.874,2002,6.728,2003,3.874,2004,3.465,2005,3.465,2006,3.465,2007,3.465,2008,3.465,2009,3.465,2010,3.465,2011,3.465,2012,5.082,2013,4.392,2014,3.465,2015,3.465]],["title/variable.html#變數的作用域在函式內",[2016,5.499]],["body/variable.html#變數的作用域在函式內",[1,0.322,2,0.389,3,0.392,4,0.484,5,0.52,6,0.594,7,0.794,8,0.881,9,1.175,10,1.105,11,1.465,12,1.044,14,0.04,21,1.233,36,1.152,62,0.868,280,3.077,368,2.138,417,4.328,420,5.226,538,4.11,1553,5.677,1699,5.096,2004,5.896,2005,5.896,2006,5.896,2007,5.896,2008,5.896,2009,5.896,2010,5.896,2011,5.896]],["title/variable.html#Hoisting",[521,3.833]],["body/variable.html#Hoisting",[1,0.343,2,0.431,3,0.429,4,0.53,5,0.547,6,0.587,7,0.785,8,0.871,9,1.161,10,0.974,12,0.944,14,0.04,21,1.225,62,0.927,114,1.672,368,2.895,392,2.151,404,4.127,438,2.244,443,3.242,523,2.875,532,2.73,535,2.435,538,4.328,544,4.033,704,2.435,980,3.3,990,2.73,1557,5.249,1672,4.182,2012,6.418,2013,5.547,2017,5.409,2018,5.409,2019,5.409,2020,5.409,2021,5.409,2022,5.409]],["title/variable.html#動態型別",[1055,3.402]],["body/variable.html#動態型別",[1,0.299,2,0.317,3,0.346,4,0.427,5,0.459,6,0.524,10,1.165,12,0.791,14,0.04,34,3.492,62,0.894,114,1.975,119,2.155,247,1.854,394,4.13,549,3.492,990,3.627,1061,4.039,1709,5.929,2014,6.428,2015,6.428,2023,8.582]],["title/F2E/header.html",[2024,3.833]],["body/F2E/header.html",[1,0.254,2,0.321,3,0.351,14,0.04,29,5.017,46,4.682,153,3.95,398,3.907,2025,7.296,2026,7.296,2027,7.296,2028,7.296,2029,8.66,2030,7.296,2031,7.296,2032,8.66,2033,7.296,2034,7.296,2035,7.296]],["title/F2E/cookie.html",[2036,4.251]],["body/F2E/cookie.html",[14,0.04,29,3.446,51,5.628,153,2.375,1528,5.901,2036,7.991,2037,5.948,2038,5.948,2039,5.948,2040,5.948,2041,7.634,2042,5.321,2043,5.321,2044,5.321,2045,5.321,2046,5.948,2047,5.321,2048,5.948,2049,5.948,2050,7.54,2051,7.634,2052,5.948,2053,5.948,2054,5.948,2055,5.948,2056,5.948,2057,5.948,2058,5.948,2059,5.321,2060,7.997,2061,5.948,2062,5.948,2063,5.948,2064,5.948,2065,5.948,2066,5.948,2067,5.948,2068,5.948,2069,5.948,2070,5.948,2071,5.948,2072,5.948,2073,5.948,2074,5.948,2075,5.948,2076,5.321,2077,5.948,2078,5.948,2079,5.948,2080,5.948,2081,5.948]],["title/F2E/cookie.html#什麼是-Cookie？",[2082,4.138,2083,4.138]],["body/F2E/cookie.html#什麼是-Cookie？",[2036,7.386,2084,7.922,2085,7.922,2086,7.922,2087,7.086,2088,7.922,2089,7.922,2090,7.922,2091,7.922,2092,7.922]],["title/F2E/cookie.html#第一方Cookie和第三方Cookie區別",[2093,4.919]],["body/F2E/cookie.html#第一方Cookie和第三方Cookie區別",[51,4.17,153,2.494,183,4.355,187,5.588,210,5.153,387,3.622,2036,7.368,2042,5.588,2043,5.588,2044,5.588,2045,5.588,2047,5.588,2050,7.044,2059,5.588,2060,7.47,2076,5.588,2087,5.588,2093,5.588,2094,6.247,2095,6.247,2096,6.247,2097,6.247,2098,6.247,2099,6.247,2100,6.247,2101,6.247,2102,6.247,2103,6.247,2104,6.247,2105,6.247,2106,6.247,2107,6.247,2108,6.247,2109,6.247,2110,6.247,2111,6.247,2112,6.247,2113,6.247,2114,6.247,2115,6.247,2116,6.247,2117,6.247,2118,6.247,2119,6.247,2120,6.247,2121,6.247,2122,6.247,2123,6.247,2124,6.247,2125,6.247,2126,6.247,2127,6.247,2128,6.247,2129,6.247,2130,6.247,2131,6.247,2132,6.247,2133,6.247,2134,6.247,2135,6.247,2136,6.247,2137,6.247,2138,6.247,2139,6.247,2140,6.247,2141,6.247,2142,6.247,2143,6.247,2144,6.247,2145,6.247,2146,6.247,2147,6.247,2148,6.247,2149,6.247,2150,6.247,2151,6.247,2152,6.247,2153,6.247,2154,6.247,2155,6.247,2156,6.247,2157,6.247,2158,6.247,2159,6.247,2160,6.247,2161,6.247,2162,6.247,2163,6.247,2164,6.247,2165,6.247,2166,6.247,2167,6.247,2168,6.247,2169,6.247,2170,6.247,2171,6.247,2172,6.247,2173,6.247,2174,6.247]],["title/F2E/GraphQL.html",[2175,4.919]],["body/F2E/GraphQL.html",[14,0.04,18,5.729,102,6.433,124,6.257,153,2.725,222,3.955,531,5.34,915,4.558,1528,6.433,2175,8.714,2176,6.827,2177,6.827,2178,6.827,2179,6.827,2180,6.827,2181,5.632,2182,6.827,2183,6.939,2184,6.827,2185,6.107,2186,6.107]],["title/F2E/GraphQL.html#References",[153,2.195]],["body/F2E/GraphQL.html#References",[2185,7.287,2186,7.287]],["title/array/array_method.html",[356,1.434,1538,2.475]],["body/array/array_method.html",[1,0.332,2,0.405,3,0.442,4,0.511,5,0.586,6,0.67,8,0.93,14,0.04,15,2.376,62,0.678,354,2.185,616,3.788,895,7.091,1736,5.992,2187,7.205,2188,7.205]],["title/array/array_methods.html",[356,1.434,1538,2.475]],["body/array/array_methods.html",[1,0.338,2,0.432,3,0.466,4,0.551,5,0.576,6,0.619,7,0.789,8,0.811,9,0.678,10,0.784,11,0.542,12,1.02,14,0.04,21,1.135,34,1.226,36,0.527,37,0.6,38,0.635,39,0.692,40,0.712,41,0.837,42,0.85,43,0.932,44,0.85,45,0.962,58,0.922,62,0.848,65,2.012,119,1.409,247,1.932,281,4.399,354,1.657,356,1.628,357,2.844,359,1.529,361,2.641,362,2.991,367,4.464,368,0.978,409,3.137,410,1.849,421,2.33,511,1.524,548,2.815,576,0.962,577,1.01,578,1.062,656,2.205,688,2.101,710,2.012,711,3.98,772,3.375,780,3.152,899,3.015,912,2.205,1568,3.438,1570,3.137,1571,3.438,1595,4.271,1597,1.865,1598,1.746,2189,3.573,2190,2.696,2191,2.696,2192,4.396,2193,2.696,2194,4.516,2195,2.33,2196,2.33,2197,3.855,2198,3.276,2199,3.855,2200,2.33,2201,2.33,2202,2.33,2203,2.696,2204,2.696,2205,3.276,2206,2.696,2207,2.696,2208,2.696,2209,2.696,2210,2.696,2211,2.696,2212,2.696,2213,2.696,2214,3.632,2215,2.696,2216,2.696,2217,2.696,2218,3.632,2219,2.696,2220,2.696,2221,2.696,2222,2.696,2223,2.33,2224,4.203,2225,2.696,2226,4.203,2227,2.696,2228,2.696,2229,2.33,2230,2.696,2231,2.696,2232,2.696,2233,1.934,2234,2.487,2235,4.764,2236,3.014,2237,4.764,2238,4.764,2239,2.487,2240,3.014,2241,3.014,2242,3.014,2243,2.487,2244,2.487,2245,2.487,2246,3.014,2247,2.487,2248,2.487,2249,2.487,2250,2.487,2251,2.487,2252,2.487,2253,2.487,2254,3.014,2255,2.487,2256,2.487,2257,2.487]],["title/array/array_methods.html#Array",[356,1.905]],["body/array/array_methods.html#Array",[1595,4.437,2189,5.027,2258,8.124]],["title/array/array_methods.html#forEach",[711,2.922]],["body/array/array_methods.html#forEach",[1,0.332,2,0.42,3,0.443,4,0.43,5,0.462,6,0.528,7,0.706,8,0.784,9,1.045,12,0.797,14,0.039,21,0.967,58,1.42,62,0.681,281,4.765,780,2.596,1570,4.834,2190,6.477,2191,6.477,2192,4.07,2193,6.477,2194,4.892,2259,7.241]],["title/array/array_methods.html#map",[1595,3.003]],["body/array/array_methods.html#map",[1,0.302,2,0.382,3,0.417,4,0.434,5,0.466,6,0.532,7,0.711,12,0.953,14,0.039,21,0.975,62,0.686,281,3.777,359,1.313,362,3.087,780,2.615,2192,4.101,2194,3.877,2195,5.641,2196,5.641,2197,4.871,2198,5.087,2199,4.871,2200,5.641,2201,5.641,2202,5.641,2260,6.527,2261,6.527,2262,6.527]],["title/array/array_methods.html#filter",[2189,3.402]],["body/array/array_methods.html#filter",[1,0.301,2,0.406,3,0.444,4,0.431,5,0.463,6,0.529,7,0.708,8,0.786,12,0.951,14,0.04,21,0.97,62,0.683,247,1.872,281,3.758,359,1.306,362,3.071,780,2.602,2192,4.08,2194,3.858,2197,4.846,2199,4.846,2203,6.493,2204,6.493,2205,5.061,2263,7.259]],["title/array/array_methods.html#find",[656,4.023]],["body/array/array_methods.html#find",[1,0.323,2,0.408,3,0.419,4,0.437,5,0.469,6,0.536,12,0.958,14,0.039,21,0.982,62,0.692,281,3.806,359,1.323,362,3.111,368,2.385,780,2.636,2192,4.133,2194,3.907,2206,6.577,2207,6.577,2208,6.577,2209,6.577,2210,6.577,2264,7.352]],["title/array/array_methods.html#sort",[2211,4.919]],["body/array/array_methods.html#sort",[1,0.319,2,0.404,3,0.441,4,0.545,5,0.585,6,0.523,7,0.699,12,0.943,14,0.039,21,0.958,62,0.674,281,3.711,359,1.542,409,4.786,410,2.116,780,2.57,2194,3.809,2197,4.786,2199,4.786,2212,6.412,2213,6.412,2214,5.542,2265,7.169,2266,7.169,2267,7.169]],["title/array/array_methods.html#every",[]],["body/array/array_methods.html#every",[1,0.3,2,0.38,3,0.415,4,0.512,5,0.462,6,0.528,7,0.706,8,0.784,12,0.949,14,0.04,21,0.967,62,0.681,247,2.224,281,3.748,359,1.303,361,4.07,362,3.064,780,2.596,2192,4.07,2194,3.848,2215,6.477,2216,6.477,2217,6.477,2218,5.598,2268,6.477,2269,7.241]],["title/array/array_methods.html#some",[]],["body/array/array_methods.html#some",[1,0.3,2,0.406,3,0.415,4,0.43,5,0.462,6,0.528,7,0.706,8,0.784,12,0.949,14,0.04,21,0.967,62,0.681,247,2.224,281,3.748,359,1.303,361,4.07,362,3.064,780,2.596,2192,4.07,2194,3.848,2218,5.598,2219,6.477,2220,6.477,2221,6.477,2268,6.477,2270,7.241]],["title/array/array_methods.html#reduce",[367,4.251]],["body/array/array_methods.html#reduce",[1,0.316,2,0.406,3,0.436,4,0.527,5,0.53,6,0.528,7,0.431,8,0.676,9,0.637,10,0.983,11,0.795,12,0.867,14,0.04,21,0.968,34,1.797,36,0.772,37,0.879,38,0.931,39,1.014,40,1.044,41,1.227,42,1.246,43,1.366,44,1.246,45,1.41,58,0.866,62,0.834,65,2.949,119,1.324,247,1.139,281,2.286,354,2.001,356,1.53,357,3.568,359,1.304,367,4.828,387,2.031,409,2.949,410,1.542,421,3.415,511,2.026,548,3.399,576,1.41,577,1.48,578,1.556,688,3.079,710,2.949,711,4.414,772,4.076,780,2.978,899,2.835,912,3.232,1061,2.483,1568,3.232,1570,2.949,1571,4.569,1595,4.537,1597,2.733,1598,2.559,1902,2.559,2189,2.733,2192,2.483,2194,2.347,2198,3.079,2205,3.079,2214,3.415,2222,3.951,2223,3.415,2224,5.586,2225,3.951,2226,5.586,2227,3.951,2228,3.951,2229,3.415,2230,3.951,2231,3.951,2232,3.951,2233,2.835,2234,3.644,2235,5.976,2237,5.976,2238,3.644,2239,3.644,2243,3.644,2244,3.644,2245,3.644,2247,3.644,2248,3.644,2249,3.644,2250,3.644,2251,3.644,2252,3.644,2253,3.644,2255,3.644,2256,3.644,2257,3.644,2271,4.417,2272,5.586,2273,3.951,2274,5.586,2275,3.951,2276,3.951,2277,3.951,2278,3.951,2279,3.951,2280,3.951,2281,3.951,2282,3.951,2283,3.951,2284,3.951,2285,3.951,2286,3.951,2287,3.951,2288,3.951,2289,3.951,2290,3.951,2291,3.951,2292,3.951,2293,3.951,2294,3.951,2295,3.951,2296,3.951,2297,3.951,2298,3.951]],["title/array/array_methods.html#examples",[2233,3.529]],["body/array/array_methods.html#examples",[1,0.292,2,0.386,3,0.403,4,0.498,5,0.535,6,0.503,7,0.498,8,0.748,9,0.737,10,0.937,11,0.92,12,0.76,14,0.04,21,1.045,36,0.893,37,1.017,38,1.077,39,1.174,40,1.208,41,1.42,42,1.441,43,1.581,44,1.441,45,1.632,58,1.002,62,0.823,65,3.412,119,1.532,247,1.318,354,1.756,357,3.854,359,1.243,387,2.35,409,3.412,421,3.951,548,3.617,576,1.632,577,1.713,578,1.801,711,4.652,772,4.338,780,3.004,899,3.279,1568,3.739,1570,3.412,1595,4.781,1597,3.162,1598,2.96,1902,2.96,2189,3.162,2192,2.872,2198,3.563,2205,3.563,2214,3.951,2234,4.216,2235,6.455,2237,6.455,2238,4.216,2239,4.216,2243,4.216,2244,4.216,2245,4.216,2247,4.216,2248,4.216,2249,4.216,2250,4.216,2251,4.216,2252,4.216,2253,4.216,2255,4.216,2256,4.216,2257,4.216,2272,6.178,2273,4.571,2274,6.178,2275,4.571,2276,4.571,2277,4.571,2278,4.571,2279,4.571,2280,4.571,2281,4.571,2282,4.571,2283,4.571,2284,4.571,2285,4.571,2286,4.571,2287,4.571,2288,4.571,2289,4.571,2290,4.571,2291,4.571,2292,4.571,2293,4.571,2294,4.571,2295,4.571,2296,4.571,2297,4.571,2298,4.571]],["title/array/good_part.html",[14,0.016,277,1.509]],["body/array/good_part.html",[1,0.277,14,0.038,511,2.577,690,4.339,2299,7.944,2300,7.944,2301,7.944]],["title/F2E/token.html",[512,4.023]],["body/F2E/token.html",[14,0.04,125,7.89,410,1.858,472,4.817,512,6.453,2024,6.523,2060,6.209,2302,8.82,2303,7.719,2304,7.719]],["title/F2E/token.html#provisional-headers-are-shown",[2024,2.312,2303,2.736,2304,2.736]],["body/F2E/token.html#provisional-headers-are-shown",[2024,6.354,2303,6.572,2304,6.572,2305,7.966,2306,7.966,2307,7.966,2308,7.966,2309,7.966,2310,7.966]],["title/array/array_merge.html",[356,1.434,2311,4.138]],["body/array/array_merge.html",[1,0.345,2,0.433,3,0.439,4,0.541,5,0.53,6,0.606,7,0.563,8,0.624,12,1.003,14,0.04,62,0.878,259,3.059,277,2.104,362,2.441,410,2.346,443,1.999,568,2.842,769,4.3,780,2.068,1570,3.851,1598,4.813,2189,3.569,2192,3.242,2197,3.851,2199,3.851,2205,4.022,2312,5.769,2313,4.221,2314,7.484,2315,5.769,2316,5.769,2317,5.769,2318,7.484,2319,7.484,2320,5.769,2321,5.769]],["title/array/map.html",[]],["body/array/map.html",[1,0.321,2,0.418,3,0.425,4,0.525,5,0.519,6,0.593,7,0.793,8,0.712,9,0.949,12,0.895,14,0.04,21,1.086,40,1.554,42,1.855,62,0.765,279,5.425,281,4.209,354,2.067,356,2.279,359,1.183,362,2.782,398,3.44,410,2.008,585,2.53,780,2.357,1595,4.441,2192,3.696,2194,4.321,2195,5.084,2196,5.084,2197,4.39,2198,4.585,2199,4.39,2200,5.084,2201,5.084,2202,5.084,2223,5.084,2322,5.084,2323,5.882,2324,5.084]],["title/array/map.html#map",[1595,3.003]],["body/array/map.html#map",[1,0.321,2,0.418,3,0.425,4,0.525,5,0.519,6,0.593,7,0.793,8,0.712,9,0.949,12,0.895,14,0.04,21,1.086,40,1.554,42,1.855,62,0.765,279,5.425,281,4.209,354,2.067,356,2.279,359,1.183,362,2.782,398,3.44,585,2.53,780,2.357,1595,3.592,2192,3.696,2194,4.321,2195,5.084,2196,5.084,2197,4.39,2198,4.585,2199,4.39,2200,5.084,2201,5.084,2202,5.084,2223,5.084,2260,5.882,2261,5.882,2262,5.882,2322,5.084,2323,5.882,2324,5.084]],["title/array/array_insert.html",[356,1.434,542,2.397]],["body/array/array_insert.html",[1,0.354,2,0.446,3,0.485,4,0.582,5,0.625,6,0.673,7,0.364,8,0.404,14,0.04,27,1.519,58,1.733,62,0.868,120,1.884,280,2.089,354,1.405,356,1.293,362,1.579,542,2.162,769,1.932,780,3.443,781,2.098,1598,5.116,1599,2.886,1747,3.42,2233,2.395,2313,4.817,2325,3.732,2326,3.732,2327,3.339,2328,3.339,2329,3.339,2330,5.09,2331,3.339,2332,4.945,2333,4.945,2334,3.339,2335,3.339,2336,3.339,2337,5.889,2338,3.732,2339,3.732,2340,3.732,2341,4.945,2342,4.945,2343,4.945,2344,3.339,2345,3.339,2346,3.339,2347,3.339,2348,3.339,2349,3.339,2350,3.339,2351,3.732]],["title/array/array_insert.html#把數據插入陣列尾部",[2352,5.499]],["body/array/array_insert.html#把數據插入陣列尾部",[1,0.349,2,0.441,3,0.482,4,0.577,5,0.62,6,0.708,14,0.04,62,0.84,315,5.906,780,3.439,781,3.378,1287,5.623,1598,5.172,2313,4.398,2327,5.377,2328,5.377,2329,5.377,2330,4.647,2353,6.011,2354,4.959]],["title/array/array_insert.html#把數據插入陣列頭部",[2355,4.919]],["body/array/array_insert.html#把數據插入陣列頭部",[1,0.346,2,0.437,3,0.478,4,0.57,5,0.613,6,0.637,14,0.04,58,1.714,62,0.822,315,6.092,780,3.375,1287,5.866,1598,5.062,2313,4.704,2330,4.97,2331,5.75,2332,7.172,2354,5.304]],["title/array/array_insert.html#把數據插入陣列指定位置",[2356,5.499]],["body/array/array_insert.html#把數據插入陣列指定位置",[1,0.339,2,0.411,3,0.449,4,0.493,5,0.529,14,0.04,58,1.628,62,0.842,315,4.737,354,1.727,362,2.875,542,3.936,769,3.517,1287,4.971,1599,5.253,2333,7.421,2334,6.078,2335,6.078,2336,6.078,2337,7.421,2341,7.421,2342,7.421,2343,6.078,2357,6.795,2358,6.795,2359,6.795,2360,6.795,2361,6.795,2362,6.795]],["title/array/array_insert.html#拼接兩個陣列",[2363,5.499]],["body/array/array_insert.html#拼接兩個陣列",[1,0.35,2,0.443,3,0.466,4,0.55,5,0.591,14,0.04,58,1.816,62,0.77,315,5.71,780,3.408,1287,4.867,1598,4.744,2313,4.867,2330,5.143,2344,5.951,2354,5.488]],["title/array/array_insert.html#example",[2233,3.529]],["body/array/array_insert.html#example",[1,0.263,2,0.332,3,0.363,4,0.448,5,0.482,6,0.55,7,0.736,8,0.817,14,0.038,27,3.07,120,3.809,280,3.338,354,1.918,1747,5.466,2345,6.75,2346,6.75,2347,6.75,2348,6.75,2349,6.75,2350,6.75,2355,6.75,2364,7.546,2365,7.546]],["title/cases/replace.html",[2366,5.499]],["body/cases/replace.html",[1,0.299,2,0.316,3,0.345,4,0.426,5,0.457,6,0.523,7,0.699,8,0.776,12,0.943,14,0.04,19,2.217,21,0.958,62,0.674,247,1.849,398,3.033,702,5.914,713,4.03,1516,5.245,2367,7.169,2368,8.57,2369,7.169,2370,6.412,2371,5.914,2372,7.665,2373,7.665,2374,8.57,2375,7.169,2376,7.169]],["title/array/filter.html",[356,1.434,2189,2.56]],["body/array/filter.html",[1,0.341,2,0.431,3,0.415,4,0.371,5,0.399,6,0.455,10,1.069,12,0.688,14,0.04,21,0.835,58,1.545,62,0.588,247,2.031,354,1.588,359,1.124,361,3.511,368,2.027,398,3.332,588,2.697,607,2.542,762,3.879,780,2.823,1595,3.412,1597,5.603,2189,5.336,2205,4.355,2218,4.829,2377,6.247,2378,6.247,2379,6.247,2380,6.247,2381,6.247,2382,6.247,2383,6.247,2384,6.247,2385,5.588,2386,6.247,2387,6.247,2388,6.247]],["title/array/filter.html#‘1’-‘2’-‘3’-filter-parseInt",[14,0.011,2389,2.476,2390,2.476,2391,2.768]],["body/array/filter.html#‘1’-‘2’-‘3’-filter-parseInt",[1,0.329,2,0.416,3,0.339,14,0.039,58,1.382,247,2.188,588,3.041,762,4.177,990,4.281,1597,5.843,1672,6.556,1683,5.812,2189,4.359,2385,6.302,2392,7.045,2393,7.045,2394,7.045,2395,7.045,2396,7.045,2397,8.481,2398,7.045,2399,7.045,2400,7.045,2401,7.045,2402,6.302,2403,6.302,2404,6.302,2405,7.045,2406,7.045,2407,7.045,2408,7.045]],["title/array/object_to_array.html",[356,1.434,468,1.203]],["body/array/object_to_array.html",[1,0.268,14,0.038,280,2.905,354,1.954,356,2.664,468,2.596,680,5.731,780,2.756,2409,7.688,2410,7.688,2411,7.688,2412,7.688,2413,7.688,2414,7.688,2415,7.688,2416,7.688,2417,7.688]],["title/cases/math.html",[14,0.021]],["body/cases/math.html",[1,0.307,2,0.433,3,0.314,4,0.388,5,0.417,6,0.476,7,0.459,8,0.51,12,0.825,14,0.04,19,1.456,36,0.823,58,1.805,62,0.614,119,1.957,223,3.021,247,1.934,259,1.479,277,1.717,359,0.847,410,1.162,444,2.571,511,2.118,568,2.319,1464,2.913,1515,3.021,1538,2.815,1747,2.913,1751,2.815,1831,3.639,1832,4.811,1833,4.552,1834,3.639,1835,3.639,1836,3.639,1837,3.639,1838,3.639,1839,4.552,1840,4.552,1841,3.021,1842,3.282,1843,3.282,1844,3.282,1845,3.282,1846,5.714,1847,5.714,1848,5.086,1849,3.021,1850,4.211,1851,3.021,1852,3.021,1853,4.211,1854,4.211,1855,3.021,1856,4.211,1857,6.185,1858,4.19,1859,5.647,1860,5.195,1861,4.19,1862,4.19,1863,4.19,1864,3.021,1865,4.211,1866,4.211,1867,3.021,1868,3.021,1869,3.021,1870,3.021,1871,3.021,1872,3.021,1873,3.021,1874,3.021,1875,3.021,1876,3.021,1877,2.815,1878,3.021,2418,4.707,2419,4.707]],["title/cases/math.html#浮點數運算的坑",[1879,4.919]],["body/cases/math.html#浮點數運算的坑",[1,0.306,2,0.43,3,0.313,4,0.387,5,0.415,6,0.474,7,0.457,8,0.507,12,0.823,14,0.04,19,1.449,36,0.819,58,1.802,62,0.612,119,1.951,223,3.006,229,3.127,247,1.929,259,1.472,359,0.843,410,1.156,444,2.558,511,1.52,568,2.307,1464,2.898,1515,3.006,1538,2.802,1747,2.898,1751,2.802,1831,3.621,1832,4.798,1833,4.536,1834,3.621,1835,3.621,1836,3.621,1837,3.621,1838,3.621,1839,3.266,1840,4.536,1841,3.006,1842,3.266,1843,3.266,1844,3.266,1845,3.266,1846,5.709,1847,5.709,1848,4.832,1849,3.006,1851,3.006,1852,3.006,1855,3.006,1857,6.179,1858,3.006,1859,5.638,1860,5.184,1861,4.176,1862,4.176,1863,4.176,1864,3.006,1867,3.006,1868,3.006,1869,3.006,1870,3.006,1871,3.006,1872,3.006,1873,3.006,1874,3.006,1875,3.006,1876,3.006,1877,2.802,1878,3.006,1880,4.19,1881,4.19,1882,4.19,1883,4.19,1884,4.19,1885,4.19,1886,4.19,1887,4.19,1888,4.19,1889,3.621,1890,3.621,1891,3.621,1892,3.266,1896,3.266,1897,3.266,1898,3.266,1899,3.266,1900,3.266,1901,3.266,1902,2.714,1903,3.266,1904,3.266,1905,3.266,1906,3.266,1907,3.266,1908,3.266,1909,6.125,1910,6.125,1911,6.125,1912,6.125,1913,3.266,1914,3.266,1915,3.266,1916,3.266,1917,3.266,1918,3.266,1919,3.266,1920,3.266,1921,3.266,1922,3.266,1923,3.266,1924,3.266,2420,3.865,2421,3.865]],["title/cases/math.html#科學符號處理",[1889,4.251]],["body/cases/math.html#科學符號處理",[1,0.305,2,0.433,3,0.247,4,0.305,5,0.327,6,0.374,7,0.5,8,0.555,14,0.04,19,1.586,58,1.842,223,3.291,229,3.424,247,1.786,359,0.923,1464,3.173,1515,3.291,1538,3.067,1747,3.173,1751,3.067,1832,3.291,1839,3.575,1840,4.827,1841,3.291,1842,3.575,1843,3.575,1844,3.575,1845,3.575,1846,5.802,1847,5.802,1848,5.019,1849,3.291,1851,3.291,1852,3.291,1855,3.291,1857,6.272,1858,3.291,1859,5.795,1860,5.385,1861,4.443,1862,4.443,1863,4.443,1864,3.291,1867,3.291,1868,3.291,1869,3.291,1870,3.291,1871,3.291,1872,3.291,1873,3.291,1874,3.291,1875,3.291,1876,3.291,1877,3.067,1878,3.291,1890,3.965,1891,3.965,1892,3.575,1896,3.575,1897,3.575,1898,3.575,1899,3.575,1900,3.575,1901,3.575,1902,2.971,1903,3.575,1904,3.575,1905,3.575,1906,3.575,1907,3.575,1908,3.575,1909,6.296,1910,6.296,1911,6.296,1912,6.296,1913,3.575,1914,3.575,1915,3.575,1916,3.575,1917,3.575,1918,3.575,1919,3.575,1920,3.575,1921,3.575,1922,3.575,1923,3.575,1924,3.575,2420,4.231,2421,4.231]],["title/cases/math.html#why-0-1-0-2-0-3",[14,0.015,1846,1.42,1847,1.42,1848,1.42]],["body/cases/math.html#why-0-1-0-2-0-3",[1,0.3,2,0.435,14,0.039,19,1.686,58,1.867,229,3.639,247,1.86,1464,3.373,1751,3.26,1832,3.498,1846,5.816,1847,5.816,1848,4.833,1849,3.498,1851,3.498,1852,3.498,1855,3.498,1857,6.332,1858,3.498,1859,5.897,1860,5.519,1861,4.628,1862,4.628,1863,4.628,1864,3.498,1867,3.498,1868,3.498,1869,3.498,1870,3.498,1871,3.498,1872,3.498,1873,3.498,1874,3.498,1875,3.498,1876,3.498,1877,3.26,1878,3.498,1892,3.8,1896,3.8,1897,3.8,1898,3.8,1899,3.8,1900,3.8,1901,3.8,1902,3.157,1903,3.8,1904,3.8,1905,3.8,1906,3.8,1907,3.8,1908,3.8,1909,6.407,1910,6.407,1911,6.407,1912,6.407,1913,3.8,1914,3.8,1915,3.8,1916,3.8,1917,3.8,1918,3.8,1919,3.8,1920,3.8,1921,3.8,1922,3.8,1923,3.8,1924,3.8,2420,4.497,2421,4.497]],["title/cases/if.html",[]],["body/cases/if.html",[1,0.287,2,0.363,3,0.397,4,0.489,5,0.526,6,0.6,7,0.655,8,0.727,9,0.969,10,0.911,11,1.208,12,0.739,14,0.04,19,2.077,27,2.732,36,1.174,37,1.336,38,1.415,39,1.542,40,1.587,55,6.368,58,1.616,62,0.775,114,1.711,247,2.125,277,2.449,354,1.707,361,5.359,410,2.033,2422,5.54,2423,6.715,2424,6.715,2425,6.715,2426,6.715,2427,8.237,2428,8.237,2429,6.715]],["title/cases/arr.html",[356,1.905]],["body/cases/arr.html",[1,0.347,2,0.439,3,0.45,4,0.445,5,0.369,6,0.421,7,0.564,8,0.9,9,0.834,10,1.128,11,1.04,14,0.04,36,1.011,37,1.15,38,1.218,39,1.721,58,1.47,62,0.705,354,1.905,356,3.236,359,1.349,511,1.875,549,2.352,577,2.512,582,2.398,585,2.883,588,2.495,607,2.352,1595,4.542,1597,5.64,1833,4.03,2430,4.769,2431,5.78,2432,5.78,2433,5.78,2434,8.316,2435,5.78,2436,5.78,2437,5.78,2438,7.494,2439,5.78,2440,5.78,2441,5.78,2442,5.78]],["title/cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組",[2443,5.499]],["body/cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組",[1,0.314,2,0.413,3,0.332,4,0.41,14,0.04,58,1.352,549,2.804,588,2.975,990,4.731,1595,4.923,1597,5.942,1672,7.247,1683,7.733,1833,4.805,2389,6.165,2390,6.165,2402,6.165,2403,6.165,2404,6.165,2444,6.893,2445,6.893,2446,6.893,2447,6.893]],["title/cases/str.html",[14,0.016,34,1.684]],["body/cases/str.html",[1,0.324,2,0.393,3,0.429,4,0.489,5,0.429,12,0.981,14,0.04,21,0.897,46,5.718,58,1.317,62,0.838,85,5.54,114,1.395,354,1.707,359,1.208,393,5.556,395,6.368,702,6.796,2370,6.007,2448,6.715,2449,8.237,2450,6.715,2451,6.715,2452,6.715,2453,6.715,2454,6.715,2455,6.715,2456,6.715,2457,6.715,2458,6.007,2459,8.237,2460,6.007,2461,6.007]],["title/cases/str.html#url",[46,3.529]],["body/cases/str.html#url",[1,0.267,2,0.338,3,0.369,12,0.844,14,0.039,46,5.722,62,0.721,85,6.325,354,1.949,438,3.699,1061,4.31,2458,6.858,2460,6.858,2461,6.858,2462,8.916]],["title/glossary/hoisting.html",[2463,4.138,2464,4.138]],["body/glossary/hoisting.html",[1,0.334,2,0.417,3,0.456,4,0.527,5,0.566,6,0.647,7,0.865,8,0.96,9,1.229,10,0.722,12,1.026,14,0.04,21,1.28,62,0.901,114,1.105,259,2.928,364,2.446,368,2.302,392,2.927,394,3.193,443,2.458,511,1.726,534,3.291,568,3.495,685,7.141,753,4.934,768,2.753,2465,7.095,2466,7.095,2467,7.095,2468,7.095,2469,5.319,2470,5.319,2471,5.319,2472,5.319]],["title/function/factory​_factory.html",[21,0.553,2473,3.414]],["body/function/factory​_factory.html",[1,0.312,2,0.395,3,0.444,4,0.532,5,0.571,6,0.653,7,0.873,8,0.927,9,1.236,10,1.125,11,1.493,14,0.04,15,1.298,21,1.258,36,1.389,37,1.351,38,1.431,39,0.904,116,5.302,118,4.008,121,2.745,148,3.249,222,5.086,267,2.151,354,1.898,359,1.66,361,3.232,472,2.151,511,1.865,689,2.629,768,2.038,870,null,934,2.881,957,3.69,1517,3.044,2473,4.743,2474,6.075,2475,6.68,2476,3.938,2477,3.938,2478,5.75,2479,6.791,2480,5.143,2481,5.75,2482,3.938,2483,6.68,2484,3.522,2485,3.522,2486,7.105,2487,3.522,2488,3.522,2489,3.522,2490,3.044,2491,3.249,2492,5.143,2493,3.522,2494,3.522,2495,5.143,2496,3.522,2497,3.522,2498,3.522,2499,3.522,2500,7.661,2501,7.854,2502,5.143,2503,5.75,2504,6.075,2505,5.143,2506,3.522,2507,3.522,2508,3.522,2509,3.522,2510,3.522,2511,3.938,2512,3.522,2513,3.522,2514,3.522,2515,3.522,2516,3.522,2517,3.938,2518,5.143,2519,4.743,2520,3.522,2521,4.445,2522,3.522,2523,5.143,2524,3.522]],["title/function/factory​_factory.html#組合的工廠函數",[2525,5.499]],["body/function/factory​_factory.html#組合的工廠函數",[1,0.301,2,0.381,3,0.416,4,0.514,5,0.552,6,0.631,7,0.843,8,0.936,9,1.248,10,1.138,11,1.509,14,0.04,15,1.341,21,1.225,36,1.407,37,1.376,38,1.458,39,0.934,116,5.061,118,4.103,121,2.835,222,4.661,267,2.221,354,1.927,359,1.624,361,3.308,472,2.221,511,1.319,689,2.714,768,2.105,870,null,934,2.975,957,2.609,1517,3.143,2473,3.355,2474,5.265,2475,3.637,2480,3.637,2483,5.265,2484,3.637,2485,3.637,2486,6.782,2487,3.637,2488,3.637,2489,3.637,2490,3.143,2491,3.355,2492,5.265,2493,3.637,2494,3.637,2495,5.265,2496,3.637,2497,3.637,2498,3.637,2499,3.637,2500,7.737,2501,7.924,2502,5.265,2504,6.187,2505,5.265,2506,3.637,2507,3.637,2508,3.637,2509,3.637,2510,3.637,2512,3.637,2513,3.637,2514,3.637,2515,3.637,2516,3.637,2518,5.265,2519,4.855,2520,3.637,2521,4.55,2522,3.637,2523,5.265,2524,3.637,2526,4.066,2527,4.066,2528,4.066,2529,4.066,2530,4.066,2531,4.066,2532,4.066,2533,4.066,2534,4.066,2535,4.066,2536,4.066,2537,4.066,2538,4.066,2539,3.637,2540,4.066,2541,4.066,2542,5.885,2543,4.066,2544,4.066,2545,4.066,2546,4.066,2547,4.066,2548,4.066,2549,5.885,2550,5.885,2551,4.066,2552,4.066,2553,4.066,2554,4.066,2555,4.066,2556,4.066,2557,4.066,2558,4.066,2559,4.066,2560,4.066,2561,4.066,2562,4.066,2563,4.066,2564,4.066,2565,4.066,2566,4.066,2567,4.066,2568,4.066,2569,4.066,2570,4.066,2571,4.066]],["title/global/promise.html",[116,3.671]],["body/global/promise.html",[1,0.291,2,0.331,3,0.401,4,0.447,5,0.48,6,0.499,7,0.668,8,0.742,9,0.988,10,0.543,11,0.719,12,0.754,14,0.04,15,2.48,21,1.005,24,2.566,36,0.699,37,0.796,38,0.842,39,0.918,40,0.945,41,1.111,42,1.128,43,1.237,44,1.128,45,1.276,58,1.14,62,0.809,114,0.83,115,4.107,116,6.401,118,5.999,119,1.743,120,2.934,121,5.571,153,1.596,258,1.88,259,2.511,280,1.511,324,3.576,354,2.187,359,1.233,361,3.851,410,1.973,447,1.458,511,1.297,538,2.934,576,1.276,577,1.34,578,1.409,579,1.484,580,1.596,581,1.658,582,1.658,583,1.691,584,1.691,585,1.538,586,1.691,587,1.691,606,1.691,607,1.627,608,1.691,609,1.762,610,1.762,611,1.691,612,1.762,629,1.969,704,1.799,762,4.343,899,2.566,903,2.925,947,3.298,1699,3.091,2194,2.125,2233,2.566,2372,3.576,2373,5.2,2572,3.998,2573,7.522,2574,3.998,2575,5.814,2576,3.998,2577,3.998,2578,3.998,2579,3.998,2580,5.814,2581,5.814,2582,3.998,2583,3.998,2584,3.998,2585,3.998,2586,3.998,2587,8.339,2588,3.998,2589,3.998,2590,3.998,2591,3.998,2592,3.998,2593,3.998,2594,5.814,2595,5.814,2596,3.998,2597,3.998,2598,3.998,2599,3.998,2600,3.998,2601,3.998,2602,3.998,2603,3.998,2604,3.998,2605,3.998,2606,3.998,2607,3.998,2608,3.998,2609,3.998,2610,3.998]],["title/global/date.html",[267,3.003]],["body/global/date.html",[1,0.27,2,0.341,3,0.41,4,0.46,5,0.494,6,0.443,7,0.754,10,1.05,11,1.392,12,1.019,14,0.04,15,3.171,36,1.062,41,2.365,42,1.713,58,1.67,62,0.728,249,4.235,267,5.368,354,1.967,578,2.141,579,2.255,846,4.444,848,4.444,850,4.444,852,5.66,2611,8.963,2612,6.074,2613,8.963,2614,6.074,2615,6.074,2616,5.434,2617,5.434,2618,5.434,2619,5.434,2620,5.434,2621,5.434,2622,5.981,2623,5.981,2624,6.92,2625,5.434,2626,5.434,2627,5.434]],["title/global/date.html#Date-prototype-toISOString",[2616,4.919]],["body/global/date.html#Date-prototype-toISOString",[1,0.247,2,0.312,3,0.341,4,0.421,5,0.452,6,0.516,7,0.829,10,1.154,14,0.039,15,2.805,42,1.997,58,1.669,62,0.8,249,4.936,267,4.646,354,2.162,579,2.628,846,5.18,848,5.18,850,5.18,852,5.18,2617,6.333,2618,6.333,2619,6.333,2620,6.333,2621,6.333,2622,6.576,2623,6.576,2624,7.609,2625,6.333,2626,6.333,2627,6.333,2628,7.08,2629,7.08]],["title/object/assign.html",[468,1.203,469,1.823]],["body/object/assign.html",[1,0.348,2,0.431,3,0.466,4,0.451,5,0.484,6,0.553,7,0.574,12,1.085,14,0.04,62,0.833,259,3,410,2.317,440,3.215,466,5.862,468,2.439,469,3.342,877,4.586,878,5.062,2630,5.887,2631,6.921,2632,7.309,2633,7.309,2634,5.266,2635,5.266,2636,5.887]],["title/object/assign.html#合併物件",[2637,5.499]],["body/object/assign.html#合併物件",[1,0.329,2,0.416,3,0.454,4,0.418,5,0.448,6,0.512,7,0.685,12,1.039,14,0.04,62,0.796,259,2.856,410,2.244,468,2.043,877,3.638,878,4.692,2631,5.798,2632,6.986,2633,6.986,2634,6.286,2635,6.286,2638,7.028]],["title/object/assign.html#有相同屬性時合併物件區段",[2639,5.499]],["body/object/assign.html#有相同屬性時合併物件區段",[1,0.336,2,0.415,3,0.437,4,0.417,5,0.447,6,0.511,12,1.038,14,0.04,62,0.659,259,2.962,410,2.242,468,2.038,469,3.089,877,3.629,878,4.68,2631,6.976,2632,6.976,2633,6.976,2640,7.011]],["title/object/object​_keys.html",[2641,4.919]],["body/object/object​_keys.html",[1,0.318,2,0.419,3,0.362,4,0.446,5,0.479,6,0.548,7,0.859,8,0.813,9,1.084,10,1.02,11,1.044,12,0.917,14,0.04,29,3.362,31,5.808,36,1.015,37,1.155,38,1.223,39,1.333,40,1.372,41,1.612,58,1.634,62,0.907,114,1.731,119,2.253,123,3.874,159,6.096,222,4.827,259,2.618,354,2.118,410,2.057,468,2.718,680,3.724,780,2.08,877,3.004,2641,5.191,2642,5.804,2643,5.804,2644,5.804,2645,5.804,2646,5.804,2647,5.804,2648,5.804,2649,5.804,2650,5.804,2651,5.804,2652,7.514,2653,5.804,2654,5.804,2655,5.804,2656,5.804]],["title/http/caching.html",[14,0.016,29,2.397]],["body/http/caching.html",[1,0.206,2,0.306,3,0.389,4,0.352,5,0.378,6,0.432,7,0.577,8,0.641,9,0.854,10,1.095,11,1.066,12,0.652,14,0.04,19,1.832,24,2.632,29,4.676,30,3.431,36,0.717,37,0.816,38,0.864,109,7.577,123,3.953,153,1.637,242,3.668,247,1.528,267,2.24,273,4.596,354,1.935,527,2.859,731,3.383,792,4.333,915,3.953,1500,3.8,1990,4.128,2024,5.628,2183,7.563,2371,6.94,2657,3.668,2658,3.668,2659,7.525,2660,7.758,2661,3.668,2662,5.885,2663,4.101,2664,3.668,2665,4.101,2666,4.101,2667,4.101,2668,6.28,2669,6.66,2670,4.886,2671,4.886,2672,4.886,2673,4.886,2674,5.297,2675,4.886,2676,5.922,2677,4.886,2678,8.408,2679,7.525,2680,7.221,2681,7.942,2682,5.297,2683,7.221,2684,7.221,2685,4.101,2686,3.668,2687,3.668]],["title/http/caching.html#強緩存",[2688,5.499]],["body/http/caching.html#強緩存",[1,0.191,2,0.242,3,0.415,4,0.326,5,0.35,6,0.4,7,0.535,8,0.593,9,0.791,10,1.1,11,0.986,12,0.603,14,0.039,19,2.239,24,3.518,29,4.193,30,4.193,109,7.744,123,3.66,210,4.522,273,4.195,291,4.522,354,1.84,387,2.521,527,3.822,731,4.522,792,5.296,915,3.66,1043,3.392,1118,2.913,1500,3.518,1902,4.193,1990,3.822,2024,6.247,2183,7.715,2657,4.903,2658,4.903,2659,8.016,2660,8.016,2661,4.903,2662,5.596,2664,4.903,2668,5.972,2669,4.522,2670,4.522,2671,4.522,2672,4.522,2673,4.522,2674,4.903,2675,4.522,2677,4.522,2689,5.482,2690,5.482,2691,5.482,2692,5.482,2693,5.482,2694,5.482,2695,5.482,2696,5.482,2697,5.482,2698,5.482,2699,5.482,2700,5.482,2701,5.482,2702,5.482,2703,5.482,2704,5.482,2705,5.482,2706,5.482,2707,5.482,2708,5.482,2709,5.482,2710,5.482,2711,5.482,2712,5.482,2713,5.482,2714,5.482,2715,4.903,2716,5.482,2717,5.482,2718,4.903,2719,7.238,2720,4.903,2721,4.903,2722,4.903,2723,5.482,2724,5.482,2725,4.903,2726,5.482,2727,5.482,2728,5.482,2729,5.482,2730,5.482,2731,5.482,2732,5.482,2733,5.482,2734,5.482,2735,5.482,2736,5.482,2737,5.482,2738,5.482,2739,5.482,2740,5.482,2741,5.482]],["title/http/caching.html#協商緩存",[2742,5.499]],["body/http/caching.html#協商緩存",[1,0.194,2,0.245,3,0.267,4,0.33,5,0.355,6,0.405,7,0.542,8,0.601,9,0.802,10,0.754,11,1,12,0.612,14,0.04,36,0.971,37,1.106,38,1.171,123,3.709,247,1.884,273,4.223,354,1.856,915,3.709,1500,3.566,1902,3.219,1990,3.873,2371,7.622,2539,6.532,2668,6.025,2669,6.73,2670,4.584,2671,4.584,2672,4.584,2673,4.584,2675,4.584,2677,4.584,2678,8.851,2679,8.264,2680,8.051,2681,8.264,2682,6.532,2683,7.751,2684,8.051,2686,4.97,2687,4.97,2715,4.97,2718,4.97,2720,4.97,2721,4.97,2722,4.97,2725,4.97,2743,5.556,2744,5.556,2745,5.556,2746,5.556,2747,5.556,2748,5.556,2749,5.556,2750,5.556,2751,5.556,2752,5.556,2753,5.556,2754,5.556,2755,5.556,2756,5.556,2757,5.556,2758,5.556,2759,5.556,2760,5.556,2761,5.556,2762,5.556,2763,5.556,2764,5.556,2765,5.556,2766,5.556,2767,5.556,2768,5.556,2769,5.556,2770,5.556,2771,5.556,2772,5.556,2773,7.303,2774,5.556,2775,7.303,2776,5.556,2777,5.556,2778,5.556,2779,5.556,2780,5.556,2781,5.556,2782,5.556,2783,5.556,2784,7.303,2785,5.556]],["title/http/caching.html#References",[153,2.195]],["body/http/caching.html#References",[29,5.322,2183,6.245,2786,8.078,2787,8.078]],["title/global/function.html",[]],["body/global/function.html",[1,0.329,2,0.364,3,0.416,4,0.49,5,0.527,6,0.602,7,0.749,8,0.831,9,1.107,10,0.914,11,1.212,12,0.542,14,0.04,15,1.624,21,1.155,36,0.861,37,0.98,38,1.038,39,1.131,40,1.164,62,0.813,114,1.795,115,4.065,153,1.966,266,3.063,353,4.168,356,1.707,368,2.185,392,2.739,393,4.029,468,1.432,526,4.936,768,2.55,796,5.227,797,5.169,804,5.935,828,4.696,857,5.208,870,null,1577,3.434,2490,3.808,2788,6.736,2789,4.406,2790,4.406,2791,4.406,2792,4.406,2793,4.406,2794,4.406,2795,7.382,2796,7.73,2797,7.73,2798,4.406,2799,4.406,2800,4.406,2801,4.406,2802,4.406,2803,4.926,2804,6.026,2805,4.406]],["title/global/function.html#call、apply、bind",[2806,4.919]],["body/global/function.html#call、apply、bind",[356,2.737,468,2.297,796,4.44,797,4.725,1659,7.066,2789,7.066,2790,7.066,2791,7.066,2807,7.9,2808,7.9,2809,7.9,2810,7.9,2811,7.9]],["title/global/function.html#為什麼我們需要-apply-bind-call-？",[14,0.012,526,1.106,796,1.039,797,1.106,2812,1.849,2813,1.849]],["body/global/function.html#為什麼我們需要-apply-bind-call-？",[368,2.584,768,4.123,2792,7.125,2814,7.966,2815,7.966,2816,7.966,2817,7.966,2818,7.966,2819,7.966,2820,7.966]],["title/global/function.html#cab-call-apply-vs-bind",[14,0.018,526,0.83,796,0.78,797,0.83,1577,0.968,2793,1.242]],["body/global/function.html#cab-call-apply-vs-bind",[183,5.345,353,4.744,526,5.333,796,5.012,797,5.333,1043,5.834,1431,5.927,1654,6.858,1655,6.858,2821,7.667,2822,7.667,2823,7.667,2824,6.325,2825,7.667,2826,7.667,2827,7.667,2828,7.667,2829,7.667,2830,7.667]],["title/global/function.html#bind",[796,3.091]],["body/global/function.html#bind",[1,0.311,2,0.378,3,0.413,4,0.509,5,0.547,6,0.625,7,0.785,8,0.871,9,1.161,10,0.974,11,1.291,12,0.596,14,0.04,15,1.784,21,1.146,36,0.946,37,1.076,38,1.14,39,1.242,40,1.279,62,0.839,114,1.853,115,4.223,266,3.182,353,3.347,368,1.755,392,2.805,393,3.235,438,2.244,796,3.04,804,5.547,828,5.002,857,4.182,870,null,1387,4.839,1431,4.182,2490,4.182,2794,4.839,2795,7.67,2796,7.981,2797,7.981,2798,4.839,2799,4.839,2800,4.839,2801,4.839,2802,4.839,2804,4.839,2805,4.839,2824,6.642,2831,8.574,2832,8.574,2833,5.409,2834,5.409,2835,5.409,2836,5.409,2837,5.409,2838,5.409,2839,5.409,2840,5.409,2841,5.409]],["title/global/function.html#References",[153,2.195]],["body/global/function.html#References",[3,0.389,2806,7.226,2824,6.664,2842,8.078,2843,8.078]],["title/operators/delete.html",[]],["body/operators/delete.html",[1,0.33,2,0.341,3,0.372,4,0.459,14,0.038,21,1.033,359,1.391,398,4.117,647,4.551]],["title/operators/delete.html#delete",[647,2.645]],["body/operators/delete.html#delete",[1,0.33,2,0.341,3,0.372,4,0.459,14,0.038,21,1.033,359,1.391,398,4.002,647,3.719,2844,7.729,2845,7.729,2846,7.729]],["title/object/create.html",[854,4.251]],["body/object/create.html",[1,0.318,2,0.331,3,0.279,4,0.344,5,0.37,6,0.422,7,0.565,8,0.627,9,0.836,10,0.786,11,1.042,12,0.638,14,0.04,15,1.91,21,1.112,36,1.013,37,1.153,38,1.22,39,1.33,40,1.369,41,1.609,42,1.634,43,1.792,44,1.634,45,1.849,58,1.472,62,0.828,67,5.181,114,1.559,247,1.935,281,2.998,368,1.879,398,3.954,399,6.807,468,2.182,526,3.464,576,1.849,577,1.941,578,2.041,579,2.15,580,2.312,581,2.403,689,3.867,780,2.076,854,6.435,864,6.712,870,null,957,3.717,1598,3.355,2491,4.778,2519,6.191,2847,9.345,2848,5.792,2849,4.478,2850,9.345,2851,5.792,2852,5.792,2853,5.792,2854,5.792,2855,9.121,2856,6.191,2857,5.792]],["title/operators/destructuring_assignment.html",[]],["body/operators/destructuring_assignment.html",[1,0.26,2,0.329,3,0.359,4,0.443,5,0.574,6,0.618,7,0.855,8,0.702,9,0.672,10,1.294,11,0.839,14,0.04,36,0.815,37,0.928,38,0.982,39,1.07,40,1.102,41,1.295,42,1.315,43,1.442,44,2.69,45,1.488,62,0.923,124,5.199,249,4.521,259,2.997,267,4.403,354,1.895,359,0.839,410,2.354,443,2.936,444,4.628,447,3.09,468,1.885,469,2.054,576,1.488,577,1.562,611,3.411,621,2.744,877,2.413,2322,3.604,2324,3.604,2622,5.013,2623,5.013,2858,4.17,2859,5.801,2860,4.17,2861,4.17,2862,4.17,2863,6.67,2864,5.801,2865,5.801,2866,7.211,2867,7.211,2868,4.17,2869,4.17,2870,4.17,2871,4.17,2872,4.17,2873,6.485,2874,4.17,2875,4.17]],["title/operators/destructuring_assignment.html#Destructuring-assignment",[469,1.823,2858,3.701]],["body/operators/destructuring_assignment.html#Destructuring-assignment",[1,0.258,2,0.326,3,0.356,4,0.439,5,0.572,6,0.614,7,0.851,8,0.694,9,0.662,10,1.29,11,0.825,14,0.04,36,0.802,37,0.913,38,0.967,39,1.053,40,1.084,41,1.274,42,1.294,43,1.419,44,2.682,45,1.464,62,0.921,124,5.154,249,4.47,259,2.988,267,4.372,354,1.879,359,0.825,410,2.347,443,2.919,444,4.601,447,3.072,468,1.864,576,1.464,577,1.537,611,3.387,621,2.713,877,2.374,2322,3.546,2324,3.546,2622,4.957,2623,4.957,2859,5.736,2860,4.103,2861,4.103,2862,4.103,2863,6.613,2864,5.736,2865,5.736,2866,7.161,2867,7.161,2868,4.103,2869,4.103,2870,4.103,2871,4.103,2872,4.103,2874,4.103,2875,4.103,2876,6.412]],["title/statements/if...else.html",[]],["body/statements/if...else.html",[1,0.332,2,0.42,3,0.38,4,0.469,5,0.503,6,0.575,7,0.769,8,0.854,9,0.903,10,0.849,11,1.127,14,0.04,31,6.512,36,1.094,37,1.246,38,1.319,39,1.438,40,1.48,41,1.739,42,1.766,62,0.879,114,1.882,222,5.524,266,2.324,877,4.469,878,4.179,899,5.54,2877,6.26,2878,6.26,2879,7.722,2880,6.26,2881,7.054,2882,7.886,2883,6.26,2884,6.26,2885,6.26,2886,6.26,2887,6.26,2888,5.6]],["title/statements/if...else.html#if…else",[2889,5.499]],["body/statements/if...else.html#if…else",[]],["title/statements/if...else.html#條件組合的問題",[2890,5.499]],["body/statements/if...else.html#條件組合的問題",[1,0.331,2,0.419,3,0.377,4,0.465,5,0.5,6,0.571,7,0.764,8,0.848,9,0.893,10,0.84,11,1.114,14,0.04,31,6.491,36,1.083,37,1.232,38,1.305,39,1.422,40,1.464,41,1.72,42,1.746,62,0.876,114,1.875,222,5.509,266,2.298,877,4.446,878,4.134,899,3.974,2879,5.539,2881,5.539,2888,5.539,2891,6.193,2892,6.193,2893,7.832,2894,7.832,2895,6.193,2896,7.832,2897,7.832,2898,7.832,2899,6.193,2900,6.193,2901,6.193,2902,6.193,2903,6.193,2904,6.193,2905,6.193,2906,6.193,2907,6.193,2908,6.193,2909,6.193]],["title/operators/precedence.html",[]],["body/operators/precedence.html",[1,0.332,2,0.433,3,0.391,4,0.432,5,0.464,6,0.53,7,0.538,8,0.597,9,0.795,10,0.748,11,0.992,12,0.951,14,0.04,36,0.964,37,1.097,38,1.162,39,1.266,40,1.303,41,1.532,42,1.555,43,1.705,44,1.555,45,1.76,62,0.813,114,1.145,247,1.422,253,5.425,280,3.071,368,2.357,398,3.655,410,2.133,447,2.011,576,1.76,577,1.848,578,1.943,579,2.046,580,2.201,581,2.287,582,2.287,583,2.333,584,2.333,585,2.121,586,2.333,587,2.333,606,2.333,607,2.243,608,2.333,2910,8.127,2911,4.932,2912,7.269,2913,6.499,2914,5.513,2915,8.783,2916,7.727,2917,4.932,2918,4.932,2919,4.932,2920,4.932,2921,5.513,2922,5.513]],["title/operators/precedence.html#運算子優先序",[1077,3.185]],["body/operators/precedence.html#運算子優先序",[1,0.252,2,0.318,3,0.348,12,0.795,14,0.04,62,0.81,114,1.5,247,1.863,253,6.139,280,3.475,2911,6.461,2912,8.226,2913,7.7,2923,9.521,2924,7.223,2925,7.223,2926,9.196]],["title/operators/precedence.html#運算符比-運算符高",[14,0.013,2927,2.967,2928,3.317]],["body/operators/precedence.html#運算符比-運算符高",[1,0.333,2,0.434,3,0.366,4,0.451,5,0.485,6,0.554,7,0.575,8,0.639,9,0.851,10,0.801,11,1.062,12,0.924,14,0.04,36,1.031,37,1.174,38,1.243,39,1.355,40,1.394,41,1.639,42,1.664,43,1.825,44,1.664,45,1.883,62,0.714,368,2.463,377,5.277,398,3.553,410,2.189,447,2.152,576,1.883,577,1.977,578,2.079,579,2.19,580,2.355,581,2.447,582,2.447,583,2.496,584,2.496,585,2.27,586,2.496,587,2.496,606,2.496,607,2.4,608,2.496,2915,8.878,2916,7.511,2917,5.277,2918,5.277,2919,5.277,2920,5.277,2927,5.277,2929,5.899,2930,5.899,2931,5.899,2932,5.899,2933,5.899,2934,5.899,2935,5.899,2936,5.899]],["title/operators/function.html",[]],["body/operators/function.html",[1,0.308,2,0.389,3,0.425,4,0.483,5,0.519,6,0.479,12,0.972,14,0.04,21,1.331,62,0.619,114,1.366,273,3.404,364,3.024,392,2.438,511,2.134,521,4.585,537,5.665,1553,4.585,2013,7.704,2937,6.576,2938,6.576,2939,6.576,2940,7.274,2941,5.425,2942,7.897]],["title/operators/function.html#函數表達式",[2943,4.919]],["body/operators/function.html#函數表達式",[1,0.305,2,0.386,3,0.422,4,0.478,5,0.514,6,0.472,12,0.965,14,0.04,21,1.303,62,0.609,114,1.344,273,3.35,364,2.977,392,2.414,521,4.512,537,5.625,2013,7.683,2940,7.202,2941,5.34,2942,7.84,2943,7.202,2944,6.472,2945,6.472,2946,6.472,2947,6.472,2948,6.472,2949,5.789,2950,6.472,2951,6.472,2952,6.472,2953,6.472]],["title/operators/typeof.html",[]],["body/operators/typeof.html",[1,0.329,2,0.356,3,0.389,4,0.48,5,0.515,12,0.716,14,0.04,15,2.144,19,2.011,21,1.227,27,3.573,65,5.39,277,2.945,359,1.453,394,4.251,468,2.348,478,5.908,512,4.757,524,4.996,532,3.282,533,4.023,535,2.926,549,2.645,1516,7.217,2856,6.662,2954,7.856,2955,5.816,2956,6.502,2957,5.816,2958,5.816,2959,5.816,2960,5.816,2961,5.816,2962,5.026,2963,5.816]],["title/operators/typeof.html#typeof",[394,2.475]],["body/operators/typeof.html#typeof",[1,0.295,2,0.373,3,0.408,4,0.503,5,0.54,12,0.774,14,0.039,21,1.214,65,4.692,359,1.524,394,4.091,478,6.196,524,4.349,532,3.547,535,3.163,549,2.859,1516,7.321,2949,6.286,2954,8.13,2955,6.286,2964,7.028,2965,7.028,2966,7.028,2967,7.028,2968,7.028,2969,7.028]],["title/operators/typeof.html#null",[27,2.237]],["body/operators/typeof.html#null",[1,0.306,14,0.038,19,2.304,27,3.567,65,4.972,277,2.716,394,3.352,468,2.165,512,5.449,524,4.609,533,4.609,2856,7.232,2957,6.662,2958,6.662,2959,6.662,2960,6.662,2961,6.662,2962,5.758,2963,6.662,2970,7.448,2971,7.448,2972,7.448,2973,7.448,2974,7.448,2975,7.448,2976,7.448,2977,7.448]],["title/statements/AsyncFunction.html",[2978,4.919]],["body/statements/AsyncFunction.html",[1,0.319,2,0.314,3,0.343,4,0.424,5,0.455,6,0.52,7,0.696,8,0.772,10,1.241,11,1.284,14,0.04,21,0.953,58,1.399,62,0.86,114,1.482,218,7.049,404,3.845,443,2.471,1577,4.973,2978,6.38,2979,8.544,2980,7.133,2981,7.133]],["title/swagger/to-html.html",[1720,2.885,2982,2.56]],["body/swagger/to-html.html",[14,0.028,24,4.735,27,2.296,30,5.71,31,5.731,32,5.955,34,3.901,51,5.488,102,7.708,119,1.692,153,3.704,356,1.955,359,1.016,362,2.388,392,2.212,398,3.478,440,4.49,704,3.7,819,4.413,917,6.355,957,3.622,1500,6.325,1720,3.934,1736,3.934,1841,5.275,1990,5.731,1995,7.655,2181,4.656,2194,2.999,2430,4.656,2521,4.363,2662,4.363,2849,4.363,2962,6.355,2982,4.565,2983,5.048,2984,5.048,2985,4.656,2986,4.656,2987,4.656,2988,6.311,2989,5.048,2990,8.3,2991,7.798,2992,5.048,2993,7.353,2994,6.6,2995,5.048,2996,6.6,2997,6.6,2998,6.355,2999,6.087,3000,5.048,3001,4.656,3002,4.656,3003,5.048,3004,5.048,3005,5.048,3006,5.048]],["title/swagger/to-html.html#Swagger-to-HTML",[1720,2.885,2982,2.56]],["body/swagger/to-html.html#Swagger-to-HTML",[14,0.028,24,4.747,27,2.305,30,5.713,31,5.742,32,5.961,34,3.904,51,5.498,102,7.712,119,1.699,153,3.708,356,1.963,359,1.02,362,2.397,392,2.218,398,3.484,440,4.498,704,3.707,819,4.424,917,6.367,957,3.636,1500,6.329,1736,3.95,1841,5.285,1990,5.742,1995,7.664,2181,4.674,2194,3.011,2430,4.674,2521,4.38,2662,4.38,2849,4.38,2962,6.367,2982,3.506,2983,5.068,2984,5.068,2985,4.674,2986,4.674,2987,4.674,2988,6.317,2989,5.068,2990,8.309,2991,7.81,2992,5.068,2993,7.367,2994,6.617,2995,5.068,2996,6.617,2997,6.617,2998,6.367,2999,6.103,3000,5.068,3001,4.674,3002,4.674,3003,5.068,3004,5.068,3005,5.068,3006,5.068]],["title/swagger/to-html.html#undefined",[2982,2.56,2985,3.414]],["body/swagger/to-html.html#undefined",[2986,6.721,2987,6.721]],["title/swagger/to-html.html#List-all-pets",[1736,2.885,2988,2.762]],["body/swagger/to-html.html#List-all-pets",[2988,5.454]],["title/swagger/to-html.html#Create-a-pet",[957,2.655,2988,2.762]],["body/swagger/to-html.html#Create-a-pet",[2988,5.439,2999,6.721]],["title/swagger/to-html.html#Info-for-a-specific-pet",[2849,2.564,2988,2.214,3001,2.736]],["body/swagger/to-html.html#Info-for-a-specific-pet",[3002,6.74]],["title/statements/block.html",[14,0.021]],["body/statements/block.html",[1,0.339,2,0.426,3,0.436,4,0.538,5,0.578,6,0.623,7,0.794,8,0.713,9,0.951,10,0.894,11,1.186,12,1.044,14,0.04,19,2.335,21,1.142,36,0.834,37,0.949,38,1.005,39,1.095,40,1.127,41,1.325,62,0.892,114,1.691,281,2.469,354,1.212,359,0.858,368,2.641,392,1.43,394,3.977,398,3.445,410,1.864,443,2.821,444,3.599,478,4.821,521,5.263,532,2.408,535,2.147,538,4.968,792,3.49,1940,3.935,2941,3.935,3007,4.77,3008,8.544,3009,6.589,3010,6.589,3011,4.77,3012,4.77,3013,4.77]],["title/statements/let.html",[]],["body/statements/let.html",[1,0.311,2,0.393,3,0.369,4,0.456,5,0.489,12,0.844,14,0.039,62,0.721,108,6.325,247,1.978,443,2.657,532,3.87,3014,6.858,3015,6.858]],["title/statements/let.html#let",[]],["body/statements/let.html#let",[1,0.31,2,0.392,3,0.367,4,0.453,5,0.487,12,0.84,14,0.039,62,0.717,108,6.292,247,1.967,443,2.642,532,3.849,3014,6.822,3015,6.822,3016,7.626,3017,7.626,3018,7.626,3019,7.626]],["title/statements/for.html",[]],["body/statements/for.html",[1,0.31,2,0.392,3,0.453,4,0.454,5,0.601,6,0.557,7,0.918,8,0.827,9,1.103,10,1.037,11,1.376,14,0.04,36,1.042,58,1.499,62,0.837,264,4.384,280,3.363,356,2.065,393,3.565,538,4.492,680,5.415,690,3.256,920,4.918,1572,7.28,3020,5.961,3021,5.961,3022,8.9,3023,7.548,3024,7.961,3025,5.332,3026,5.961,3027,5.332]],["title/statements/for.html#for…of與for…in的差別",[3028,5.499]],["body/statements/for.html#for…of與for…in的差別",[1,0.309,2,0.39,3,0.452,4,0.45,5,0.599,6,0.552,7,0.915,8,0.82,9,1.092,10,1.028,11,1.363,14,0.04,36,1.027,58,1.486,62,0.833,183,4.096,264,4.36,295,5.255,387,2.702,538,3.822,690,3.209,998,3.122,1120,4.024,1185,4.096,1572,7.252,3023,7.496,3024,7.918,3025,5.255,3027,5.255,3029,5.875,3030,8.38,3031,5.875,3032,5.875,3033,5.875,3034,5.875,3035,5.875,3036,5.875,3037,5.875,3038,5.875,3039,5.875,3040,5.875,3041,5.875,3042,5.875,3043,5.875,3044,5.875,3045,5.875,3046,5.875,3047,5.875,3048,5.875,3049,5.875,3050,5.875,3051,7.573,3052,5.875,3053,5.875,3054,5.875,3055,5.875,3056,5.875,3057,5.875]],["title/swagger/ui.html",[2982,2.56,3058,3.414]],["body/swagger/ui.html",[1,0.322,14,0.039,21,1.159,214,6.346,359,1.316,2229,5.655,2982,5.367,2998,5.655,3058,6.035,3059,6.543,3060,6.543,3061,6.543,3062,6.543,3063,6.543,3064,7.758,3065,6.543,3066,6.543,3067,6.543,3068,6.543,3069,6.543,3070,6.543,3071,6.543,3072,6.543,3073,6.543,3074,6.543,3075,6.543,3076,6.543]],["title/swagger/ui.html#Swagger-UI",[2982,2.56,3058,3.414]],["body/swagger/ui.html#Swagger-UI",[1,0.323,14,0.039,21,1.162,214,6.365,359,1.323,2229,5.684,2982,4.549,2998,5.684,3059,6.577,3060,6.577,3061,6.577,3062,6.577,3063,6.577,3064,7.782,3065,6.577,3066,6.577,3067,6.577,3068,6.577,3069,6.577,3070,6.577,3071,6.577,3072,6.577,3073,6.577,3074,6.577,3075,6.577,3076,6.577]],["title/string/queue.html",[3077,4.251]],["body/string/queue.html",[1,0.297,2,0.341,3,0.373,4,0.422,5,0.453,6,0.517,7,0.692,8,0.768,9,1.023,10,0.963,11,1.277,12,0.669,14,0.04,18,2.544,21,1.285,36,1.24,37,1.412,38,1.495,39,1.629,40,1.437,41,1.689,42,1.714,43,1.88,44,1.714,45,1.941,54,3.509,58,1.392,62,0.667,153,1.698,253,4.058,258,3.336,274,2.323,277,1.551,354,1.081,359,1.613,362,3.275,398,2.572,529,4.789,569,2.147,576,1.358,577,1.425,578,1.499,830,2.965,2233,5.465,2422,6.755,3077,5.484,3078,3.804,3079,4.7,3080,3.804,3081,4.7,3082,3.804,3083,5.438,3084,3.804,3085,3.804,3086,5.015,3087,5.438,3088,5.438,3089,5.438,3090,3.804,3091,3.804,3092,4.253,3093,4.253,3094,4.253,3095,4.253,3096,4.253,3097,5.853,3098,3.509,3099,3.509,3100,3.509,3101,3.509,3102,3.509,3103,3.509,3104,6.346,3105,6.346,3106,3.804,3107,6.924,3108,5.438,3109,3.804,3110,6.924,3111,5.438,3112,3.804,3113,3.804,3114,3.804,3115,3.804,3116,3.804,3117,3.804,3118,3.804,3119,3.804]],["title/string/queue.html#數據結構：隊列（Queue）",[3120,5.499]],["body/string/queue.html#數據結構：隊列（Queue）",[1,0.22,2,0.278,3,0.303,4,0.374,5,0.402,6,0.459,7,0.614,8,0.682,9,0.909,10,0.855,11,1.134,14,0.04,21,1.295,36,1.102,37,1.254,38,1.328,39,1.447,40,1.489,41,1.751,42,1.777,43,1.949,44,1.777,45,2.012,58,1.553,258,2.963,359,1.635,362,3.663,830,4.393,3077,4.872,3078,5.637,3079,4.872,3080,5.637,3081,4.872,3082,5.637,3083,7.083,3084,5.637,3085,5.637,3086,5.199,3087,5.637,3121,6.302,3122,6.302,3123,6.302,3124,6.302,3125,6.302,3126,6.302,3127,6.302,3128,6.302]],["title/string/queue.html#時間複雜度",[3129,5.499]],["body/string/queue.html#時間複雜度",[1,0.23,2,0.29,3,0.317,4,0.392,5,0.421,6,0.48,7,0.643,8,0.713,9,0.951,10,0.894,11,1.186,14,0.04,21,1.267,36,1.152,37,1.312,38,1.389,39,1.514,258,3.829,359,1.465,362,2.789,3079,5.096,3081,5.096,3086,5.438,3088,7.284,3089,7.284,3090,5.896,3091,5.896,3097,6.718,3098,5.438,3099,5.438,3100,5.438,3101,5.438,3102,5.438,3103,5.438,3130,6.591,3131,6.591,3132,6.591,3133,6.591,3134,6.591,3135,6.591,3136,6.591,3137,6.591,3138,6.591,3139,6.591,3140,6.591,3141,6.591,3142,6.591,3143,6.591,3144,6.591,3145,5.896,3146,5.896]],["title/string/queue.html#雙端隊列（Deque）",[3145,4.919]],["body/string/queue.html#雙端隊列（Deque）",[1,0.243,2,0.307,3,0.335,4,0.414,5,0.444,6,0.507,7,0.679,8,0.753,9,1.004,10,0.944,11,1.252,14,0.04,21,1.287,36,1.217,37,1.385,38,1.467,39,1.598,258,3.959,359,1.515,362,2.944,3079,5.38,3081,5.38,3097,6.945,3098,5.742,3099,5.742,3100,5.742,3101,5.742,3102,5.742,3103,5.742,3146,6.225]],["title/string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞",[3147,5.499]],["body/string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞",[1,0.285,2,0.323,3,0.353,4,0.332,5,0.357,6,0.407,7,0.545,8,0.605,9,0.806,10,0.758,11,1.006,12,0.807,14,0.04,18,3.343,21,0.979,36,0.977,37,1.112,38,1.178,39,1.283,40,1.321,41,1.553,42,1.576,43,1.729,44,1.576,45,1.784,54,4.611,58,1.096,62,0.769,253,4.894,277,2.038,354,1.421,359,1.319,438,4.182,529,5.374,569,2.821,576,1.784,577,1.873,578,1.969,1061,4.121,2233,5.573,2422,7.44,3077,4.321,3104,7.318,3105,7.318,3106,4.999,3107,7.768,3108,6.557,3109,4.999,3110,7.768,3111,6.557,3112,4.999,3113,4.999,3114,4.999,3115,4.999,3116,4.999,3117,4.999,3118,4.999,3119,4.999,3148,5.589,3149,5.589,3150,5.589,3151,5.589,3152,5.589,3153,5.589,3154,5.589,3155,7.331,3156,5.589,3157,5.589,3158,5.589,3159,5.589,3160,5.589,3161,5.589,3162,5.589,3163,5.589]],["title/string/queue.html#References",[153,2.195]],["body/string/queue.html#References",[3164,8.17]]],"invertedIndex":[["",{"_index":14,"title":{"RegExp.html":{},"arrowFunction.html":{},"core.html":{},"math.html":{},"math.html#why-0-1-0-2-0-3":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"array/good_part.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/math.html":{},"cases/math.html#why-0-1-0-2-0-3":{},"cases/str.html":{},"http/caching.html":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"global/function.html#cab-call-apply-vs-bind":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{}},"body":{"ajax.html":{},"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{},"es6.html":{},"es6.html#Module-的加载实现":{},"RegExp.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#ES6-Airbnb":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{},"index.html#More-Informations":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"url.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"F2E/header.html":{},"F2E/cookie.html":{},"F2E/GraphQL.html":{},"array/array_method.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/good_part.html":{},"F2E/token.html":{},"array/array_merge.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#example":{},"cases/replace.html":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"array/object_to_array.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"cases/if.html":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"cases/str.html":{},"cases/str.html#url":{},"glossary/hoisting.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"global/function.html":{},"global/function.html#bind":{},"operators/delete.html":{},"operators/delete.html#delete":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/typeof.html#null":{},"statements/AsyncFunction.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"statements/block.html":{},"statements/let.html":{},"statements/let.html#let":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["0",{"_index":58,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#Let":{},"core.html#箭頭函數":{},"num.html":{},"num.html#補數字":{},"this.html":{},"this.html#簡易呼叫":{},"this.html#bind-apply-call":{},"performance.html":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"cases/if.html":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"cases/str.html":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/object​_keys.html":{},"object/create.html":{},"statements/AsyncFunction.html":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["0&#x4e5f;&#x662f;&#x6700;&#x5f8c;&#x57f7;&#x884c",{"_index":1015,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["0)&#xff1a;radix&#x7684;&#x503c;&#x70ba;0&#xff0c;&#x5224;&#x65b7;&#x5b57;&#x7b26;&#x4e32;&#x767c;&#x73fe;&#x4ecb;&#x65bc;1~9&#xff0c;&#x7528;10&#x9032;&#x5236;&#x8f49;&#x63db;&#xff0c;&#x7d50;&#x679c;&#x70ba;1&#xff0c;&#x6240;&#x4ee5;callback&#x7684;&#x7d50;&#x679c;&#x7b49;&#x50f9;&#x65bc;true&#xff0c;&#x8fd4;&#x56de;&#x5143;&#x7d20;&#x2019;1&#x2019;&#x3002",{"_index":2399,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["0)：radix的值為0，判斷字符串發現介於1~9，用10進制轉換，結果為1，所以callback的結果等價於true，返回元素’1",{"_index":2379,"title":{},"body":{"array/filter.html":{}}}],["0,1,2",{"_index":1551,"title":{},"body":{"this.html":{}}}],["0,1,2,3,4",{"_index":270,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{}}}],["0.00011",{"_index":1856,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["0.000110",{"_index":1864,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.009",{"_index":1838,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["0.009000000000000001",{"_index":1837,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["0.1",{"_index":1846,"title":{"math.html#why-0-1-0-2-0-3":{},"cases/math.html#why-0-1-0-2-0-3":{}},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.1.tostring(2",{"_index":1855,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.1的二進制格式是：0.0001100011",{"_index":1865,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["0.2",{"_index":1847,"title":{"math.html#why-0-1-0-2-0-3":{},"cases/math.html#why-0-1-0-2-0-3":{}},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.2).tofixed(10",{"_index":1868,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.2).toprecision(10",{"_index":1867,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.3",{"_index":1848,"title":{"math.html#why-0-1-0-2-0-3":{},"cases/math.html#why-0-1-0-2-0-3":{}},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.30000000000000004",{"_index":1849,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.4",{"_index":1859,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.6",{"_index":1862,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.8",{"_index":1860,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.9",{"_index":1836,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["0.999",{"_index":1473,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["00010",{"_index":432,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["0011",{"_index":1857,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["007",{"_index":1467,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["01",{"_index":1858,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["01&#x201d",{"_index":1907,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["02",{"_index":1877,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["03",{"_index":1878,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["03:24:00",{"_index":2614,"title":{},"body":{"global/date.html":{}}}],["05",{"_index":2623,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["0x",{"_index":590,"title":{},"body":{"core.html":{}}}],["0x&#x662f;&#x6307;&#x5341;&#x516d;&#x9032;&#x5236;&#x6578",{"_index":1097,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["0x01",{"_index":657,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["0x02",{"_index":666,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["0x11",{"_index":589,"title":{},"body":{"core.html":{}}}],["1",{"_index":1,"title":{},"body":{"ajax.html":{},"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{},"es6.html":{},"es6.html#Module-的加载实现":{},"RegExp.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"index.html":{},"index.html#Getting-Started":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"F2E/header.html":{},"array/array_method.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/good_part.html":{},"array/array_merge.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#example":{},"cases/replace.html":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"array/object_to_array.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"cases/if.html":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"cases/str.html":{},"cases/str.html#url":{},"glossary/hoisting.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"global/function.html":{},"global/function.html#bind":{},"operators/delete.html":{},"operators/delete.html#delete":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/typeof.html#null":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"statements/let.html":{},"statements/let.html#let":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["1&#x662f;&#x6574;&#x578b",{"_index":2974,"title":{},"body":{"operators/typeof.html#null":{}}}],["1&#xff0c;&#x53ea;&#x662f;&#x8a08;&#x7b97;&#x548c;&#x8ce6;&#x503c;&#x7684;&#x9806;&#x5e8f;&#x4e0d;&#x4e00;&#x6a23;&#x3002",{"_index":1978,"title":{},"body":{"operators.html#Increment":{}}}],["1','2','3",{"_index":1596,"title":{},"body":{"this.html":{}}}],["1(function",{"_index":543,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["1)&#xff1a;radix&#x7684;&#x503c;&#x70ba;1&#xff0c;&#x5982;&#x679c;&#x8a72;&#x53c3;&#x6578;&#x5c0f;&#x65bc",{"_index":2401,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["1)：radix的值為1",{"_index":2381,"title":{},"body":{"array/filter.html":{}}}],["1,2,3",{"_index":2316,"title":{},"body":{"array/array_merge.html":{}}}],["1,2,3,4,5,6",{"_index":2315,"title":{},"body":{"array/array_merge.html":{}}}],["1.&#x5728;&#x9810;&#x71b1;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;vip&#x7528;&#x6236;&#x8d08;&#x9001",{"_index":2892,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["1.0",{"_index":2959,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["1.0.0",{"_index":2987,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#undefined":{}}}],["1.0.name",{"_index":2958,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["1.1",{"_index":146,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["1.2",{"_index":1863,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["1.4",{"_index":1835,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["1.4000000000000001",{"_index":1831,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["1.6",{"_index":1861,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["1.name",{"_index":2960,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["1.在預熱中參與活動，vip",{"_index":2878,"title":{},"body":{"statements/if...else.html":{}}}],["10",{"_index":10,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"scope.html":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/filter.html":{},"cases/if.html":{},"cases/arr.html":{},"glossary/hoisting.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["100",{"_index":119,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"this.html":{},"this.html#Closure":{},"this.html#Callback":{},"performance.html":{},"performance.html#事件節流":{},"math.html":{},"math.html#浮點數運算的坑":{},"variable.html":{},"variable.html#動態型別":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"global/promise.html":{},"object/object​_keys.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["1000",{"_index":266,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#const":{},"this.html":{},"this.html#Closure":{},"global/function.html":{},"global/function.html#bind":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["10000",{"_index":433,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["100m",{"_index":2572,"title":{},"body":{"global/promise.html":{}}}],["11",{"_index":11,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"closures.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"performance.html":{},"performance.html#事件節流":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/if.html":{},"cases/arr.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["11&#x8868;&#x793a;2+1=3",{"_index":1693,"title":{},"body":{"this.html#bind-apply-call":{}}}],["11*11",{"_index":563,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["110",{"_index":1563,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["1100",{"_index":775,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["11表示2+1=3",{"_index":1605,"title":{},"body":{"this.html":{}}}],["12",{"_index":36,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"closures.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"performance.html":{},"performance.html#事件節流":{},"math.html":{},"math.html#浮點數運算的坑":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/if.html":{},"cases/arr.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#協商緩存":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["120",{"_index":1564,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["121",{"_index":564,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["122",{"_index":1952,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["123",{"_index":478,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/block.html":{}}}],["12345",{"_index":149,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["125",{"_index":904,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["13",{"_index":37,"title":{},"body":{"ajax.html":{},"RESTfulAPI.html":{},"RESTfulAPI.html#References":{},"asynchronous.html":{},"asynchronous.html#異步":{},"closures.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/if.html":{},"cases/arr.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#協商緩存":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["1337",{"_index":2581,"title":{},"body":{"global/promise.html":{}}}],["13t04:00:00.000z",{"_index":2874,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["14",{"_index":38,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"closures.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/if.html":{},"cases/arr.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#協商緩存":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["141.449997",{"_index":2875,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["142.970001",{"_index":2872,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["14t04:00:00.000z",{"_index":2871,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["15",{"_index":39,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"operators.html":{},"operators.html#Increment":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/if.html":{},"cases/arr.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["150",{"_index":1568,"title":{},"body":{"this.html":{},"this.html#Callback":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["16",{"_index":40,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"closures.html":{},"closures.html#傳多個函數":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"operators.html":{},"operators.html#Increment":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"cases/if.html":{},"global/promise.html":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["16+1",{"_index":591,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["17",{"_index":41,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"this.html":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"global/promise.html":{},"global/date.html":{},"object/object​_keys.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["17t03:24:00",{"_index":2615,"title":{},"body":{"global/date.html":{}}}],["18",{"_index":42,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"this.html":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["19",{"_index":43,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"this.html":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"global/promise.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["1995",{"_index":2613,"title":{},"body":{"global/date.html":{}}}],["1xx",{"_index":137,"title":{},"body":{"RESTfulAPI.html":{}}}],["1xx&#xff1a;&#x76f8;&#x95dc;&#x4fe1;&#x606f",{"_index":191,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["2",{"_index":2,"title":{},"body":{"ajax.html":{},"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{},"es6.html":{},"es6.html#Module-的加载实现":{},"RegExp.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"F2E/header.html":{},"array/array_method.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/array_merge.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#example":{},"cases/replace.html":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"cases/if.html":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"cases/str.html":{},"cases/str.html#url":{},"glossary/hoisting.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"global/function.html":{},"global/function.html#bind":{},"operators/delete.html":{},"operators/delete.html#delete":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"statements/let.html":{},"statements/let.html#let":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["2&#x5b9a;&#x7fa9;&#x4e00;&#x6bb5;&#x51fd;&#x5f0f;&#x4e26;&#x8ce6;&#x4e88;&#x5230;&#x53c3;&#x6578;&#x4e0a",{"_index":1238,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["2.&#x5728;&#x9032;&#x884c;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;vip&#x7528;&#x6236;&#x8d08;&#x9001",{"_index":2895,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["2.在進行中參與活動，vip",{"_index":2880,"title":{},"body":{"statements/if...else.html":{}}}],["20",{"_index":44,"title":{},"body":{"ajax.html":{},"closures.html":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"this.html":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"global/promise.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["200",{"_index":24,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#函式工廠":{},"global/promise.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["201",{"_index":3000,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["2019年j",{"_index":234,"title":{},"body":{"RegExp.html":{}}}],["2020",{"_index":2622,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["21",{"_index":45,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"this.html":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"global/promise.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["22",{"_index":576,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"this.html":{},"this.html#bind-apply-call":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"global/promise.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["23",{"_index":577,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"global/promise.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["24",{"_index":578,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"global/promise.html":{},"global/date.html":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["25",{"_index":579,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["250",{"_index":903,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"this.html":{},"this.html#Callback":{},"global/promise.html":{}}}],["26",{"_index":580,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"global/promise.html":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["27",{"_index":581,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"global/promise.html":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["28",{"_index":582,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"cases/arr.html":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["29",{"_index":583,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["2xx",{"_index":138,"title":{},"body":{"RESTfulAPI.html":{}}}],["2xx&#xff1a;&#x64cd;&#x4f5c;&#x6210;&#x529f",{"_index":192,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["2不會存在nan",{"_index":1603,"title":{},"body":{"this.html":{}}}],["3",{"_index":3,"title":{},"body":{"ajax.html":{},"es6.html":{},"es6.html#Module-的加载实现":{},"RegExp.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"F2E/header.html":{},"array/array_method.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/array_merge.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#example":{},"cases/replace.html":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/if.html":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"cases/str.html":{},"cases/str.html#url":{},"glossary/hoisting.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"global/function.html":{},"global/function.html#bind":{},"global/function.html#References":{},"operators/delete.html":{},"operators/delete.html#delete":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"statements/let.html":{},"statements/let.html#let":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["3&#x8ce6;&#x4e88;&#x81f3;b&#x7684",{"_index":1080,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["30",{"_index":447,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"this.html":{},"this.html#Closure":{},"global/promise.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["300",{"_index":899,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"global/promise.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["3000",{"_index":527,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"http/caching.html":{},"http/caching.html#強緩存":{}}}],["3001",{"_index":2686,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["301狀態碼（永久重定向）和302狀態碼（暫時重定向，307也是這個含義），因為它們可以由應用級別返回，瀏覽器會直接跳轉，api",{"_index":142,"title":{},"body":{"RESTfulAPI.html":{}}}],["303",{"_index":143,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["304",{"_index":2680,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["31",{"_index":584,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["32",{"_index":585,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"array/map.html":{},"array/map.html#map":{},"cases/arr.html":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["33",{"_index":586,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["34",{"_index":587,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["35",{"_index":606,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["36",{"_index":607,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/filter.html":{},"cases/arr.html":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["36&#xff0c;&#x5247",{"_index":2403,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["37",{"_index":608,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["38",{"_index":609,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"global/promise.html":{}}}],["39",{"_index":610,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"global/promise.html":{}}}],["39;1&#39",{"_index":2386,"title":{},"body":{"array/filter.html":{}}}],["39;2&#39",{"_index":2387,"title":{},"body":{"array/filter.html":{}}}],["39;3&#39;].filter(parseint",{"_index":2388,"title":{},"body":{"array/filter.html":{}}}],["39;jacob&#39",{"_index":522,"title":{},"body":{"core.html":{}}}],["39;msg&#39",{"_index":2914,"title":{},"body":{"operators/precedence.html":{}}}],["39;use",{"_index":1705,"title":{},"body":{"scope.html":{}}}],["3xx",{"_index":139,"title":{},"body":{"RESTfulAPI.html":{}}}],["3xx&#xff1a;&#x91cd;&#x5b9a;&#x5411",{"_index":193,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["3’].filter(parseint",{"_index":2377,"title":{},"body":{"array/filter.html":{}}}],["3’].map(parseint",{"_index":2441,"title":{},"body":{"cases/arr.html":{}}}],["3”，它並不是基礎基數2的一個有效數字。所以這個子字符串將被解析為空。如果子字符串被解析成空了，函數將返回為nan",{"_index":2442,"title":{},"body":{"cases/arr.html":{}}}],["3賦予至b",{"_index":556,"title":{},"body":{"core.html":{}}}],["4",{"_index":4,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"array/array_method.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/array_merge.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#example":{},"cases/replace.html":{},"array/filter.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/if.html":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"cases/str.html":{},"glossary/hoisting.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"global/function.html":{},"global/function.html#bind":{},"operators/delete.html":{},"operators/delete.html#delete":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"statements/let.html":{},"statements/let.html#let":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["4(finish",{"_index":2861,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["40",{"_index":611,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"global/promise.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["404",{"_index":2648,"title":{},"body":{"object/object​_keys.html":{}}}],["41",{"_index":612,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"global/promise.html":{}}}],["42",{"_index":613,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["43",{"_index":614,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["44",{"_index":615,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["45",{"_index":616,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/array_method.html":{}}}],["46",{"_index":617,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["47",{"_index":618,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["48",{"_index":619,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["49",{"_index":620,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["4xx",{"_index":140,"title":{},"body":{"RESTfulAPI.html":{}}}],["4xx&#xff1a;&#x5ba2;&#x6236;&#x7aef;&#x932f;&#x8aa4",{"_index":194,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["5",{"_index":5,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"array/array_method.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/array_merge.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#example":{},"cases/replace.html":{},"array/filter.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/if.html":{},"cases/arr.html":{},"cases/str.html":{},"glossary/hoisting.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"statements/let.html":{},"statements/let.html#let":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["5&#xff1b",{"_index":294,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["5,5,5,5,5",{"_index":265,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{}}}],["50",{"_index":621,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#箭頭函數":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["500",{"_index":629,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#函式工廠":{},"core.html#const":{},"global/promise.html":{}}}],["51",{"_index":622,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["52",{"_index":623,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["52位有效數字，從第53",{"_index":1854,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["53",{"_index":624,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["53位開始)。當然，代價就是，0.1在計算機內部根本就不是精確的0.1，而是一個有舍入誤差的0.1。當代碼被編譯或解釋後，0.1",{"_index":1866,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["54",{"_index":625,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["55",{"_index":626,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["550",{"_index":2253,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["56",{"_index":627,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["5xx",{"_index":141,"title":{},"body":{"RESTfulAPI.html":{}}}],["5xx&#xff1a;&#x670d;&#x52d9;&#x5668;&#x932f;&#x8aa4",{"_index":195,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["6",{"_index":6,"title":{"es6.html":{}},"body":{"ajax.html":{},"es6.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"performance.html":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"array/array_method.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/array_merge.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#example":{},"cases/replace.html":{},"array/filter.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/if.html":{},"cases/arr.html":{},"glossary/hoisting.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["600",{"_index":786,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["7",{"_index":7,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/array_merge.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_insert.html":{},"array/array_insert.html#example":{},"cases/replace.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/if.html":{},"cases/arr.html":{},"glossary/hoisting.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["700",{"_index":2879,"title":{},"body":{"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["754",{"_index":1851,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["754&#x6a19;&#x6e96;&#x4e2d",{"_index":1894,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{}}}],["754&#x6a19;&#x6e96;&#x4e2d;&#x7684;&#x6d6e;&#x9ede;&#x6578;&#x4e26;&#x4e0d;&#x80fd;&#x7cbe;&#x78ba;&#x5730;&#x8868;&#x9054;&#x5c0f;&#x6578;&#xff08;&#x6bd4;&#x5982;&#x8aaa;0.1&#xff09;&#xff0c",{"_index":2421,"title":{},"body":{"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["754&#x6a19;&#x6e96;&#x6240;&#x7522;&#x751f;&#x7684;&#x5fc5;&#x7136;&#x7d50;&#x679c;&#x3002",{"_index":1893,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{}}}],["754&#x6a19;&#x6e96;&#x6240;&#x7522;&#x751f;&#x7684;&#x5fc5;&#x7136;&#x7d50;&#x679c;&#x3002;iee",{"_index":2420,"title":{},"body":{"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["754標準中的浮點數並不能精確地表達小數（比如說0.1",{"_index":2419,"title":{},"body":{"cases/math.html":{}}}],["754標準所產生的必然結果。ieee",{"_index":2418,"title":{},"body":{"cases/math.html":{}}}],["8",{"_index":8,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"scope.html":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"array/array_method.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#filter":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/array_merge.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_insert.html":{},"array/array_insert.html#example":{},"cases/replace.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/if.html":{},"cases/arr.html":{},"glossary/hoisting.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["80",{"_index":75,"title":{},"body":{"ajax.html":{}}}],["800",{"_index":2881,"title":{},"body":{"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["81",{"_index":567,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["8601",{"_index":2618,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["9",{"_index":9,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"scope.html":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"cases/if.html":{},"cases/arr.html":{},"glossary/hoisting.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["9*9",{"_index":566,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["999",{"_index":1476,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["999.999",{"_index":1477,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["9]1,2",{"_index":239,"title":{},"body":{"RegExp.html":{}}}],["9]1,2$)|(^[0",{"_index":237,"title":{},"body":{"RegExp.html":{}}}],["9]1,2[\\.]1[0",{"_index":238,"title":{},"body":{"RegExp.html":{}}}],["9_",{"_index":252,"title":{},"body":{"RegExp.html":{}}}],["__proto__",{"_index":594,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{},"core.html#new":{}}}],["a&#x201d",{"_index":3153,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["a&#x662f;&#x6536",{"_index":1079,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["a(&#x5177;&#x6709",{"_index":2533,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["a(&#x662f",{"_index":2535,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["a*a",{"_index":565,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["a*b",{"_index":572,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["a+b",{"_index":574,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["a,&#x6b64;&#x6642;a&#x548c;b&#x6307;&#x5411;&#x540c;&#x4e00;&#x500b;&#x5c0d;&#x8c61;&#x3002",{"_index":2929,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["a,b",{"_index":409,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{},"core.html":{},"array/array_methods.html":{},"array/array_methods.html#sort":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["a,b&#x4f7f;&#x7528;&#x540c;&#x500b;&#x53c3;&#x8003;&#x4f4d;&#x5740",{"_index":1109,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["a,此時a和b",{"_index":2921,"title":{},"body":{"operators/precedence.html":{}}}],["a.__proto__.getlast",{"_index":715,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["a.concat(b",{"_index":2314,"title":{},"body":{"array/array_merge.html":{}}}],["a.foreach",{"_index":712,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{},"this.html":{},"this.html#Callback":{}}}],["a.getlast",{"_index":717,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["a.length",{"_index":710,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["a.pric",{"_index":2249,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["a.tostr",{"_index":718,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["a.x",{"_index":2916,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["a.x&#x5df2;&#x7d93;&#x57f7;&#x884c;&#x904e;&#x4e86;,&#x6b64;&#x6642;&#x5c0d;&#x8c61;&#x7684;x&#x5c6c;&#x6027;&#x8ce6;&#x503c;&#x70ba;a,&#x6b64;&#x6642",{"_index":2935,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["a.x已經執行過了,此時對象的x屬性賦值為a",{"_index":2922,"title":{},"body":{"operators/precedence.html":{}}}],["a1",{"_index":329,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["a2",{"_index":330,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["a3",{"_index":331,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["a4",{"_index":332,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["a===b",{"_index":596,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["aahkvsbd5f40g8sufov1i9ehag",{"_index":2015,"title":{},"body":{"variable.html":{},"variable.html#動態型別":{}}}],["aailvqn7gcen3zeexnluhuzmag",{"_index":1708,"title":{},"body":{"scope.html":{}}}],["ab",{"_index":571,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["ab2",{"_index":1956,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["abc.png",{"_index":1725,"title":{},"body":{"performance.html":{}}}],["acc",{"_index":961,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["access",{"_index":108,"title":{},"body":{"ajax.html":{},"statements/let.html":{},"statements/let.html#let":{}}}],["accumul",{"_index":2224,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["achorad",{"_index":82,"title":{},"body":{"ajax.html":{}}}],["ad",{"_index":1948,"title":{"operators.html#Adding-Strings-and-Numbers":{}},"body":{"operators.html":{}}}],["add",{"_index":406,"title":{},"body":{"closures.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["add10",{"_index":401,"title":{},"body":{"closures.html":{}}}],["add5",{"_index":400,"title":{},"body":{"closures.html":{}}}],["addeventlisten",{"_index":1743,"title":{},"body":{"performance.html":{},"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["addf1",{"_index":408,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["addf1(x,i",{"_index":415,"title":{},"body":{"closures.html":{}}}],["addfirst",{"_index":3098,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["addlast",{"_index":3101,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["addr",{"_index":2031,"title":{},"body":{"F2E/header.html":{}}}],["adobe.com",{"_index":2043,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["afunc",{"_index":1939,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["ag",{"_index":2663,"title":{},"body":{"http/caching.html":{}}}],["age&#xff1a;&#x55ae;&#x4f4d;&#x662f;&#x79d2;&#xff0c;&#x7de9;&#x5b58;&#x6642;&#x9593;&#x8a08;&#x7b97;&#x7684;&#x65b9;&#x5f0f;&#x662f;&#x8ddd;&#x96e2;&#x767c;&#x8d77;&#x7684;&#x6642;&#x9593;&#x7684;&#x79d2;&#x6578;&#xff0c;&#x8d85;&#x904e;&#x9593;&#x9694;&#x7684;&#x79d2;&#x6578;&#x7de9;&#x5b58;&#x5931;&#x6548",{"_index":2706,"title":{},"body":{"http/caching.html#強緩存":{}}}],["age=00",{"_index":2685,"title":{},"body":{"http/caching.html":{}}}],["age=00&apo",{"_index":2774,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["age=10",{"_index":2674,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["age=10&apo",{"_index":2723,"title":{},"body":{"http/caching.html#強緩存":{}}}],["ahdaa/blog1/test.html?id=ad&amp;val1=02&amp;val2=22#achorad",{"_index":78,"title":{},"body":{"ajax.html":{}}}],["airbnb",{"_index":938,"title":{"core.html#ES6-Airbnb":{}},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["ajax",{"_index":0,"title":{"ajax.html":{}},"body":{"ajax.html":{},"core.html":{}}}],["ajax讀json",{"_index":722,"title":{},"body":{"core.html":{}}}],["alert(target.innerhtml",{"_index":340,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["alert(x",{"_index":3007,"title":{},"body":{"statements/block.html":{}}}],["alert(xhr.responsetext",{"_index":25,"title":{},"body":{"ajax.html":{}}}],["all([p1",{"_index":2584,"title":{},"body":{"global/promise.html":{}}}],["allow",{"_index":110,"title":{},"body":{"ajax.html":{}}}],["am&apo",{"_index":2832,"title":{},"body":{"global/function.html#bind":{}}}],["amp",{"_index":55,"title":{},"body":{"ajax.html":{},"this.html":{},"this.html#bind-apply-call":{},"cases/if.html":{}}}],["amp;&amp",{"_index":569,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["amp;typ",{"_index":2888,"title":{},"body":{"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["an",{"_index":3115,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["an_obj",{"_index":2645,"title":{},"body":{"object/object​_keys.html":{}}}],["anchorscrolldecorator($deleg",{"_index":3068,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["anchorscrool",{"_index":3072,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["angular",{"_index":2229,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["angular.bootstrap(document.getelementbyid('swagg",{"_index":3075,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["anim",{"_index":855,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["animal.cal",{"_index":865,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["animal.prototype.mov",{"_index":863,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["ansarr",{"_index":2593,"title":{},"body":{"global/promise.html":{}}}],["ansarr.push(p",{"_index":2597,"title":{},"body":{"global/promise.html":{}}}],["anyon",{"_index":2414,"title":{},"body":{"array/object_to_array.html":{}}}],["anyth",{"_index":3070,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["api",{"_index":18,"title":{"RESTfulAPI.html":{}},"body":{"ajax.html":{},"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{},"RESTfulAPI.html#References":{},"asynchronous.html":{},"asynchronous.html#setTimeout":{},"F2E/GraphQL.html":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["api.github.com",{"_index":152,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["apo",{"_index":438,"title":{},"body":{"closures.html#傳多個函數":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#繼承":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"variable.html#Hoisting":{},"cases/str.html#url":{},"global/function.html#bind":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["apollo",{"_index":2182,"title":{},"body":{"F2E/GraphQL.html":{}}}],["apos;#app&apo",{"_index":1386,"title":{},"body":{"core.html#屬性特徵":{}}}],["apos;#object&apo",{"_index":1366,"title":{},"body":{"core.html#屬性特徵":{}}}],["apos;$&apo",{"_index":1142,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;&#x4f60;&#x597d;&apo",{"_index":1260,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["apos;&#x5168;&#x57df;&apo",{"_index":1616,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{}}}],["apos;&#x5168;&#x57df;2&apo",{"_index":1660,"title":{},"body":{"this.html#bind-apply-call":{}}}],["apos;&#x5177;&#x540d;&#x51fd;&#x5f0f;&apo",{"_index":1224,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;&#x51fd;&#x5f0f;&#x7684;&apo",{"_index":1623,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["apos;&#x51fd;&#x5f0f;&#x8868;&#x9054;&#x5f0f;&apo",{"_index":1225,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;&#x51fd;&#x5f0f;&#x9673;&#x8ff0;&#x5f0f;&apo",{"_index":1223,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;&#x52d5;&#x7269;&#x754c;&apo",{"_index":1347,"title":{},"body":{"core.html#繼承":{}}}],["apos;&#x533f;&#x540d;&#x51fd;&#x5f0f;&apo",{"_index":1226,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;&#x5340;&#x57df;&apo",{"_index":1617,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{},"this.html#立即函式：":{},"this.html#bind-apply-call":{}}}],["apos;&#x53c3;&#x6578;&#x5728;&#x9019;&apo",{"_index":1252,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["apos;&#x547c;&#x53eb;&apo",{"_index":1661,"title":{},"body":{"this.html#bind-apply-call":{}}}],["apos;&#x57f7;&#x884c;&#x51fd;&#x5f0f;&apo",{"_index":1237,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;&#x5c0f;&apo",{"_index":1324,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;&#x60a0;&#x904a;&#x5361;&apo",{"_index":1637,"title":{},"body":{"this.html#Closure":{}}}],["apos;&#x6253;&#x7d66",{"_index":2019,"title":{},"body":{"variable.html#Hoisting":{}}}],["apos;&#x666e;&#x901a;&#x7528;&#x6236;&#x5728;&#x9032;&#x884c;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;&#x8d08;&#x9001;300&#x7a4d;&#x5206;&apo",{"_index":2898,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;&#x666e;&#x901a;&#x7528;&#x6236;&#x5728;&#x9032;&#x884c;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;&#x8d08;&#x9001;800&#x7a4d;&#x5206;&apo",{"_index":2907,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;&#x666e;&#x901a;&#x7528;&#x6236;&#x5728;&#x9810;&#x552e;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;&#x8d08;&#x9001;700&#x7a4d;&#x5206;&apo",{"_index":2896,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;&#x68d5;&#x8272;&apo",{"_index":1323,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;&#x6bd4;&#x6bd4;&apo",{"_index":1322,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;&#x6c92;&#x6709;fna&#x4e5f;&#x53ef;&#x4ee5;&#x57f7;&#x884c;&apo",{"_index":1245,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["apos;&#x7269;&#x4ef6;&#x7684;&apo",{"_index":1622,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{}}}],["apos;&#x72ac;&#x79d1;&apo",{"_index":1350,"title":{},"body":{"core.html#繼承":{}}}],["apos;&#x72d7;&apo",{"_index":1341,"title":{},"body":{"core.html#繼承":{}}}],["apos;&#x7acb;&#x5373;&#x51fd;&#x5f0f;&apo",{"_index":1244,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["apos;&#x7db2;&#x8ecd;&apo",{"_index":1413,"title":{},"body":{"core.html#const":{}}}],["apos;&#x8c93;&#x79d1;&apo",{"_index":1348,"title":{},"body":{"core.html#繼承":{}}}],["apos;&#x9019;&#x88e1;&#x662f;&#x5177;&#x540d;&#x51fd;&#x5f0f;&apo",{"_index":1246,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["apos;&#x9ee8;&#x5de5;&apo",{"_index":1412,"title":{},"body":{"core.html#const":{}}}],["apos;&apo",{"_index":1061,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"variable.html#動態型別":{},"array/array_methods.html#reduce":{},"cases/str.html#url":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["apos;(1",{"_index":2831,"title":{},"body":{"global/function.html#bind":{}}}],["apos;,&apo",{"_index":1626,"title":{},"body":{"this.html#簡易呼叫":{}}}],["apos;./index.js&apo",{"_index":232,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["apos;/&apo",{"_index":1336,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;/b&apo",{"_index":2262,"title":{},"body":{"array/array_methods.html#map":{},"array/map.html#map":{}}}],["apos;/public&apo",{"_index":2725,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["apos;0x11&apo",{"_index":1096,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["apos;1&apo",{"_index":990,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"this.html#bind-apply-call":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["apos;1&apos;,&apos;2&apos;,&apos;3&apo",{"_index":1680,"title":{},"body":{"this.html#bind-apply-call":{}}}],["apos;10&apo",{"_index":2023,"title":{},"body":{"variable.html#動態型別":{}}}],["apos;100&apo",{"_index":2277,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;150&apo",{"_index":2275,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;2&apo",{"_index":1672,"title":{},"body":{"this.html#bind-apply-call":{},"variable.html#Hoisting":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["apos;3&apo",{"_index":1683,"title":{},"body":{"this.html#bind-apply-call":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["apos;3&apos;].filter(parseint",{"_index":2408,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["apos;300&apo",{"_index":2281,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;4&apo",{"_index":1265,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"this.html#bind-apply-call":{}}}],["apos;5&apo",{"_index":1677,"title":{},"body":{"this.html#bind-apply-call":{}}}],["apos;7",{"_index":2278,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;a&apo",{"_index":352,"title":{},"body":{"event.html#代理":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#屬性特徵":{}}}],["apos;abc.png&apo",{"_index":1787,"title":{},"body":{"performance.html#懶加載":{}}}],["apos;april&apo",{"_index":2360,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["apos;b&apo",{"_index":2261,"title":{},"body":{"array/array_methods.html#map":{},"array/map.html#map":{}}}],["apos;bar&apo",{"_index":2953,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["apos;barking&apo",{"_index":1330,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;bcde&apo",{"_index":1335,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;cach",{"_index":2720,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["apos;cal",{"_index":1138,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;callfamily&apo",{"_index":1141,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;chen&apo",{"_index":1173,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["apos;chihuahua&apo",{"_index":1354,"title":{},"body":{"core.html#繼承":{}}}],["apos;claire&apo",{"_index":1156,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["apos;click&apo",{"_index":349,"title":{},"body":{"event.html#代理":{},"core.html#箭頭函數":{}}}],["apos;corgi&apo",{"_index":2833,"title":{},"body":{"global/function.html#bind":{}}}],["apos;dad&apo",{"_index":1133,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["apos;data",{"_index":1789,"title":{},"body":{"performance.html#懶加載":{}}}],["apos;deep&apo",{"_index":1182,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["apos;dessert&apo",{"_index":2531,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["apos;dev&apo",{"_index":1155,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["apos;div1&apo",{"_index":348,"title":{},"body":{"event.html#代理":{}}}],["apos;domcontentloaded&apo",{"_index":1816,"title":{},"body":{"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["apos;exec",{"_index":1230,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;express&apo",{"_index":2718,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["apos;falsy&apo",{"_index":1113,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["apos;feb&apo",{"_index":2362,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["apos;first&apo",{"_index":1414,"title":{},"body":{"core.html#const":{}}}],["apos;fn&apo",{"_index":1635,"title":{},"body":{"this.html#簡易呼叫":{}}}],["apos;from",{"_index":1890,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["apos;fun&apo",{"_index":1164,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["apos;function&apo",{"_index":508,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["apos;global&apo",{"_index":1628,"title":{},"body":{"this.html#簡易呼叫":{}}}],["apos;hello",{"_index":1387,"title":{},"body":{"core.html#屬性特徵":{},"global/function.html#bind":{}}}],["apos;hello&apo",{"_index":998,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"statements/for.html#for…of與for…in的差別":{}}}],["apos;hsu&apo",{"_index":1131,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{},"core.html#Let":{}}}],["apos;http://3000&apo",{"_index":2462,"title":{},"body":{"cases/str.html#url":{}}}],["apos;i",{"_index":1139,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;i&apo",{"_index":1268,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["apos;iife&apo",{"_index":1243,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["apos;img1&apo",{"_index":1788,"title":{},"body":{"performance.html#懶加載":{}}}],["apos;jacob&apo",{"_index":980,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"core.html#Let":{},"variable.html#Hoisting":{}}}],["apos;jan&apo",{"_index":2358,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["apos;jessica&apo",{"_index":1304,"title":{},"body":{"core.html#this":{}}}],["apos;jsfood.com/&apo",{"_index":2555,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["apos;june&apo",{"_index":2361,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["apos;keyup&apo",{"_index":1826,"title":{},"body":{"performance.html#事件節流":{}}}],["apos;lastest&apo",{"_index":1382,"title":{},"body":{"core.html#屬性特徵":{}}}],["apos;liao&apo",{"_index":1181,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["apos;list&apo",{"_index":1807,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["apos;load&apo",{"_index":1814,"title":{},"body":{"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["apos;local&apo",{"_index":1629,"title":{},"body":{"this.html#簡易呼叫":{}}}],["apos;march&apo",{"_index":2359,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["apos;max",{"_index":2722,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["apos;meal&apo",{"_index":2550,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["apos;mi",{"_index":1136,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;mom&apo",{"_index":1171,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["apos;mon&apo",{"_index":1132,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;money&apo",{"_index":1143,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;movie&apo",{"_index":2274,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;msg&apo",{"_index":2923,"title":{},"body":{"operators/precedence.html#運算子優先序":{}}}],["apos;music&apo",{"_index":2280,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;myname&apo",{"_index":1162,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["apos;name&apo",{"_index":1140,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;no",{"_index":2777,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["apos;order&apo",{"_index":2565,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["apos;others&apo",{"_index":1134,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;p&apo",{"_index":1435,"title":{},"body":{"core.html#箭頭函數":{},"performance.html#DOM-查詢做緩存":{}}}],["apos;pragma&apo",{"_index":2776,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["apos;reduce&apo",{"_index":374,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["apos;save&apo",{"_index":1380,"title":{},"body":{"core.html#屬性特徵":{}}}],["apos;second&apo",{"_index":1418,"title":{},"body":{"core.html#const":{}}}],["apos;select_title&apo",{"_index":2365,"title":{},"body":{"array/array_insert.html#example":{}}}],["apos;settimeout&apo",{"_index":284,"title":{},"body":{"asynchronous.html#異步":{}}}],["apos;small&apo",{"_index":1351,"title":{},"body":{"core.html#繼承":{}}}],["apos;someon",{"_index":1011,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["apos;someone&apo",{"_index":1172,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["apos;status=1&amp;type=1&apo",{"_index":2903,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;status=1&amp;type=2&apo",{"_index":2904,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;status=2&amp;type=1&apo",{"_index":2905,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;status=2&amp;type=2&apo",{"_index":2906,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;str&apo",{"_index":1187,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{}}}],["apos;stranger&apo",{"_index":1174,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["apos;text&apo",{"_index":1825,"title":{},"body":{"performance.html#事件節流":{}}}],["apos;th",{"_index":2272,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;trifle&apo",{"_index":2545,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["apos;truthy&apo",{"_index":1112,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["apos;undefined&apo",{"_index":509,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["apos;us",{"_index":1312,"title":{},"body":{"core.html#this":{},"core.html#屬性特徵":{},"this.html#簡易呼叫":{}}}],["apos;vip&#x7528;&#x6236;&#x5728;&#x9032;&#x884c;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;&#x8d08;&#x9001;800&#x7a4d;&#x5206;&apo",{"_index":2899,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;vip&#x7528;&#x6236;&#x5728;&#x9810;&#x552e;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;&#x8d08;&#x9001;1000&#x7a4d;&#x5206;&apo",{"_index":2897,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;watch&apo",{"_index":1618,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["apos;welsh",{"_index":1345,"title":{},"body":{"core.html#繼承":{}}}],["app",{"_index":915,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"F2E/GraphQL.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["app._data.obj",{"_index":926,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["app.listen",{"_index":2677,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["app.obj",{"_index":925,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["app.use(express.static((__dirnam",{"_index":2675,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["appli",{"_index":797,"title":{"this.html#bind-apply-call":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"global/function.html#cab-call-apply-vs-bind":{}},"body":{"core.html":{},"core.html#this":{},"this.html":{},"this.html#bind-apply-call":{},"global/function.html":{},"global/function.html#call、apply、bind":{},"global/function.html#cab-call-apply-vs-bind":{}}}],["apppli",{"_index":808,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["app一樣，百貨公司的餐飲店家們開發出一款點餐app",{"_index":2177,"title":{},"body":{"F2E/GraphQL.html":{}}}],["april",{"_index":2339,"title":{},"body":{"array/array_insert.html":{}}}],["arg",{"_index":934,"title":{},"body":{"core.html":{},"core.html#const":{},"core.html#箭頭函數":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["arg1",{"_index":1579,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["arg2",{"_index":1580,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["argument",{"_index":768,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#箭頭函數":{},"glossary/hoisting.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["arguments.foreach",{"_index":770,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["ari",{"_index":52,"title":{},"body":{"ajax.html":{}}}],["arr",{"_index":780,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"this.html":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/array_merge.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#拼接兩個陣列":{},"array/filter.html":{},"array/object_to_array.html":{},"object/object​_keys.html":{},"object/create.html":{}}}],["arr.concat",{"_index":2329,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{}}}],["arr.everi",{"_index":2217,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#every":{}}}],["arr.filt",{"_index":2205,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#filter":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/array_merge.html":{},"array/filter.html":{}}}],["arr.find",{"_index":2209,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#find":{}}}],["arr.foreach",{"_index":1570,"title":{},"body":{"this.html":{},"this.html#Callback":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/array_merge.html":{}}}],["arr.lastindexof(item",{"_index":2319,"title":{},"body":{"array/array_merge.html":{}}}],["arr.map",{"_index":2198,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#map":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{}}}],["arr.push",{"_index":781,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{}}}],["arr.reduc",{"_index":2230,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["arr.som",{"_index":2221,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#some":{}}}],["arr.sort",{"_index":2214,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#sort":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["arr.splice(index",{"_index":2320,"title":{},"body":{"array/array_merge.html":{}}}],["arr.unshift",{"_index":2332,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列頭部":{}}}],["arr1",{"_index":2255,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["arr2",{"_index":2197,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#sort":{},"array/array_merge.html":{},"array/map.html":{},"array/map.html#map":{}}}],["arr[arr.length",{"_index":2327,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{}}}],["array",{"_index":356,"title":{"array/array_method.html":{},"array/array_methods.html":{},"array/array_methods.html#Array":{},"array/array_merge.html":{},"array/array_insert.html":{},"array/filter.html":{},"array/object_to_array.html":{},"cases/arr.html":{}},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"num.html":{},"num.html#補數字":{},"this.html":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/map.html":{},"array/map.html#map":{},"array/array_insert.html":{},"array/object_to_array.html":{},"cases/arr.html":{},"global/function.html":{},"global/function.html#call、apply、bind":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"statements/for.html":{}}}],["array&#xff0c;&#x5176;&#x4e2d",{"_index":3032,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["array.from",{"_index":959,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["array.includes(item",{"_index":2300,"title":{},"body":{"array/good_part.html":{}}}],["array.indexof(item",{"_index":2301,"title":{},"body":{"array/good_part.html":{}}}],["array.join",{"_index":2458,"title":{},"body":{"cases/str.html":{},"cases/str.html#url":{}}}],["array.prototype.concat",{"_index":2313,"title":{},"body":{"array/array_merge.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#拼接兩個陣列":{}}}],["array.prototype.everi",{"_index":2215,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#every":{}}}],["array.prototype.filt",{"_index":2203,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#filter":{}}}],["array.prototype.find",{"_index":2206,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#find":{}}}],["array.prototype.foreach",{"_index":2190,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#forEach":{}}}],["array.prototype.map",{"_index":2195,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#map":{},"array/map.html":{},"array/map.html#map":{}}}],["array.prototype.push",{"_index":2328,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{}}}],["array.prototype.reduc",{"_index":2222,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["array.prototype.som",{"_index":2219,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#some":{}}}],["array.prototype.sort",{"_index":2212,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#sort":{}}}],["array.prototype.splic",{"_index":2333,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["array.prototype.unshift",{"_index":2331,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列頭部":{}}}],["array.reduc",{"_index":360,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#箭頭函數":{}}}],["array1",{"_index":2223,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/map.html":{},"array/map.html#map":{}}}],["array1.map",{"_index":2323,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["arrfilt",{"_index":2243,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["arrfn",{"_index":949,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["arrfnr",{"_index":951,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["arrfunc",{"_index":779,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["arrow",{"_index":353,"title":{"arrowFunction.html#Arrow-Function":{}},"body":{"arrowFunction.html":{},"core.html":{},"core.html#ES6-Airbnb":{},"this.html":{},"this.html#bind-apply-call":{},"global/function.html":{},"global/function.html#cab-call-apply-vs-bind":{},"global/function.html#bind":{}}}],["arrsortpric",{"_index":2247,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["articl",{"_index":132,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["article/2",{"_index":134,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["articles/2",{"_index":133,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["ary[i].split",{"_index":60,"title":{},"body":{"ajax.html":{}}}],["asi",{"_index":539,"title":{"core.html#ASI-自動分號插入":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["assign",{"_index":469,"title":{"object/assign.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}},"body":{"copy.html":{},"copy.html#Object-assign":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#屬性特徵":{},"object/assign.html":{},"object/assign.html#有相同屬性時合併物件區段":{},"operators/destructuring_assignment.html":{}}}],["assign(o1",{"_index":2634,"title":{},"body":{"object/assign.html":{},"object/assign.html#合併物件":{}}}],["ast(abstract",{"_index":513,"title":{},"body":{"core.html":{}}}],["async",{"_index":218,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{},"statements/AsyncFunction.html":{}}}],["async/await",{"_index":2608,"title":{},"body":{"global/promise.html":{}}}],["asyncfunct",{"_index":2978,"title":{"statements/AsyncFunction.html":{}},"body":{"statements/AsyncFunction.html":{}}}],["asynchron",{"_index":262,"title":{"asynchronous.html":{}},"body":{}}],["authors/12/categories/2",{"_index":135,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["authors/12?categories=2",{"_index":136,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["automat",{"_index":540,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["averag",{"_index":958,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["await",{"_index":2979,"title":{},"body":{"statements/AsyncFunction.html":{}}}],["azqd8pdvbl5uk5mfq_ejlxmkag",{"_index":1610,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["a下的網頁，然後可能瀏覽了不論那個域名下的頁面，最後在域名b下的網頁完成註冊的情況。廣告可以在域名a下的網頁被跟蹤到，而註冊可以在域名b",{"_index":2055,"title":{},"body":{"F2E/cookie.html":{}}}],["a網站底下若有需要去access",{"_index":97,"title":{},"body":{"ajax.html":{}}}],["a網站是b",{"_index":106,"title":{},"body":{"ajax.html":{}}}],["b",{"_index":410,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"this.html":{},"this.html#簡易呼叫":{},"scope.html":{},"math.html":{},"math.html#浮點數運算的坑":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Adding-Strings-and-Numbers":{},"array/array_methods.html":{},"array/array_methods.html#sort":{},"array/array_methods.html#reduce":{},"F2E/token.html":{},"array/array_merge.html":{},"array/map.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/if.html":{},"global/promise.html":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{}}}],["b&#x53d6;&#x5f97;&#x7684;&#x662f;a&#x7684;&#x53c3;&#x8003;&#x4f4d;&#x5740",{"_index":1108,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["b,c",{"_index":419,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["b.a",{"_index":559,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["b.a&#x6c92;&#x6709;&#x95dc;&#x9023;&#x6027",{"_index":1085,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["b.length",{"_index":2231,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["b.n",{"_index":2918,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["b.person",{"_index":758,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["b.price",{"_index":2248,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["b.x",{"_index":2920,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["b1/b",{"_index":2200,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#map":{},"array/map.html":{},"array/map.html#map":{}}}],["b2/b",{"_index":2201,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#map":{},"array/map.html":{},"array/map.html#map":{}}}],["b3/b",{"_index":2202,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#map":{},"array/map.html":{},"array/map.html#map":{}}}],["b[b.length",{"_index":716,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["babelj",{"_index":2981,"title":{},"body":{"statements/AsyncFunction.html":{}}}],["bad",{"_index":2801,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["bar",{"_index":1553,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"operators/function.html":{}}}],["bark",{"_index":835,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["barking&apo",{"_index":1342,"title":{},"body":{"core.html#繼承":{}}}],["base",{"_index":1560,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["bcde",{"_index":838,"title":{},"body":{"core.html":{}}}],["be",{"_index":880,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["beauti",{"_index":519,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["befor",{"_index":3014,"title":{},"body":{"statements/let.html":{},"statements/let.html#let":{}}}],["behaviour",{"_index":3073,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["best",{"_index":156,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["between",{"_index":1927,"title":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}},"body":{"operators.html":{}}}],["bfunc",{"_index":1941,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["bibi",{"_index":831,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["bibi.__proto__",{"_index":837,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["bind",{"_index":796,"title":{"this.html#bind-apply-call":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"global/function.html#cab-call-apply-vs-bind":{},"global/function.html#bind":{}},"body":{"core.html":{},"core.html#this":{},"this.html":{},"this.html#bind-apply-call":{},"global/function.html":{},"global/function.html#call、apply、bind":{},"global/function.html#cab-call-apply-vs-bind":{},"global/function.html#bind":{}}}],["bind&#x7684;&#x61c9;&#x7528;&#x5834;&#x666f",{"_index":1665,"title":{},"body":{"this.html#bind-apply-call":{}}}],["bind(thi",{"_index":2805,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["binding&#x5927;&#x6cd5",{"_index":2840,"title":{},"body":{"global/function.html#bind":{}}}],["birthday",{"_index":2611,"title":{},"body":{"global/date.html":{}}}],["blog.xuite.net",{"_index":71,"title":{},"body":{"ajax.html":{}}}],["blog.xuite.net:80",{"_index":73,"title":{},"body":{"ajax.html":{}}}],["bodi",{"_index":460,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{}}}],["boo",{"_index":2798,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["boo.laterhello",{"_index":2800,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["boo.sayhello",{"_index":2799,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["boolean",{"_index":604,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["boolean(fals",{"_index":601,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["boolean{fals",{"_index":602,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["bootstrap",{"_index":1498,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["bowl",{"_index":2485,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["browser",{"_index":1530,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["btn",{"_index":825,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["busi",{"_index":2178,"title":{},"body":{"F2E/GraphQL.html":{}}}],["button",{"_index":822,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["b取得的是a",{"_index":595,"title":{},"body":{"core.html":{}}}],["b網站就可以在http",{"_index":107,"title":{},"body":{"ajax.html":{}}}],["b網站的http",{"_index":99,"title":{},"body":{"ajax.html":{}}}],["b網站的resourc",{"_index":98,"title":{},"body":{"ajax.html":{}}}],["b網站的web",{"_index":104,"title":{},"body":{"ajax.html":{}}}],["c",{"_index":259,"title":{},"body":{"RegExp.html":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#屬性特徵":{},"this.html":{},"this.html#簡易呼叫":{},"math.html":{},"math.html#浮點數運算的坑":{},"array/array_merge.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"glossary/hoisting.html":{},"global/promise.html":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["c(2)時會拋出typeerror",{"_index":2470,"title":{},"body":{"glossary/hoisting.html":{}}}],["cab",{"_index":2793,"title":{"global/function.html#cab-call-apply-vs-bind":{}},"body":{"global/function.html":{}}}],["cach",{"_index":2183,"title":{},"body":{"F2E/GraphQL.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#References":{}}}],["cache&apo",{"_index":2778,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["calcul",{"_index":355,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{}}}],["calculate.sum",{"_index":369,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{}}}],["call",{"_index":526,"title":{"this.html#bind-apply-call":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"global/function.html#cab-call-apply-vs-bind":{}},"body":{"core.html":{},"core.html#this":{},"this.html":{},"this.html#bind-apply-call":{},"global/function.html":{},"global/function.html#cab-call-apply-vs-bind":{},"object/create.html":{}}}],["call&#x3001;apply&#x3001;bind",{"_index":2806,"title":{"global/function.html#call、apply、bind":{}},"body":{"global/function.html#References":{}}}],["call&#x7684;thi",{"_index":1291,"title":{},"body":{"core.html#this":{}}}],["call&apo",{"_index":1012,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["callarg",{"_index":767,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["callback",{"_index":762,"title":{"this.html#Callback":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"this.html":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"global/promise.html":{}}}],["callback(ansarr",{"_index":2598,"title":{},"body":{"global/promise.html":{}}}],["callback(money",{"_index":803,"title":{},"body":{"core.html":{},"core.html#this":{},"this.html":{},"this.html#Callback":{}}}],["callfamili",{"_index":638,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["callfn",{"_index":673,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#this":{}}}],["callnam",{"_index":800,"title":{},"body":{"core.html":{},"core.html#this":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#立即函式：":{},"this.html#bind-apply-call":{}}}],["callname.cal",{"_index":1583,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["callname.call(obj",{"_index":1584,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["callnamearrow",{"_index":1591,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["callsomefn",{"_index":747,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["callsomeon",{"_index":1557,"title":{},"body":{"this.html":{},"this.html#立即函式：":{},"scope.html":{},"variable.html":{},"variable.html#Hoisting":{}}}],["call、apply、bind",{"_index":2788,"title":{},"body":{"global/function.html":{}}}],["call的thi",{"_index":801,"title":{},"body":{"core.html":{}}}],["camelcasetyper",{"_index":2652,"title":{},"body":{"object/object​_keys.html":{}}}],["cash",{"_index":628,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["cat",{"_index":856,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["cat'",{"_index":2466,"title":{},"body":{"glossary/hoisting.html":{}}}],["catalog",{"_index":2237,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["catalog:&apos;music&apo",{"_index":2282,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["catalog:'mus",{"_index":2246,"title":{},"body":{"array/array_methods.html":{}}}],["catch",{"_index":2573,"title":{},"body":{"global/promise.html":{}}}],["catch(reject",{"_index":2506,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["catnam",{"_index":2465,"title":{},"body":{"glossary/hoisting.html":{}}}],["cbfn",{"_index":763,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["cdn",{"_index":88,"title":{},"body":{"ajax.html":{},"performance.html":{},"performance.html#優化原則和方向":{}}}],["ceil(numb",{"_index":1461,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["cfunc",{"_index":1942,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["ch.md#%e4%b8%ba%e4%bb%80%e4%b9%88",{"_index":1876,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["chang",{"_index":658,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"performance.html":{},"performance.html#事件節流":{}}}],["char",{"_index":3110,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["check",{"_index":942,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["checkscop",{"_index":1701,"title":{},"body":{"scope.html":{}}}],["chen",{"_index":685,"title":{},"body":{"core.html":{},"glossary/hoisting.html":{}}}],["chihuahua",{"_index":871,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["chihuahua.bark",{"_index":873,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["chihuahua.famili",{"_index":875,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["chihuahua.mov",{"_index":874,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["chrome",{"_index":792,"title":{},"body":{"core.html":{},"core.html#this":{},"http/caching.html":{},"http/caching.html#強緩存":{},"statements/block.html":{}}}],["clair",{"_index":665,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["class",{"_index":2490,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#bind":{}}}],["class1",{"_index":2005,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["clean",{"_index":1712,"title":{},"body":{"performance.html":{}}}],["clear",{"_index":3085,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["cleartimeout(timeoutid",{"_index":1750,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["cli",{"_index":1514,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["click",{"_index":336,"title":{},"body":{"event.html":{},"core.html":{}}}],["client端與server端可以作一種對話，並將兩端建立關連，保持伺服器與client可以持續的與serv",{"_index":2062,"title":{},"body":{"F2E/cookie.html":{}}}],["clone",{"_index":1518,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["close",{"_index":2866,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["closur",{"_index":389,"title":{"closures.html":{},"core.html#閉包-Closure":{},"this.html#Closure":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"this.html":{}}}],["code",{"_index":32,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#ES6-Airbnb":{},"performance.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["coin",{"_index":742,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["color",{"_index":829,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["colour",{"_index":2476,"title":{},"body":{"function/factory​_factory.html":{}}}],["compani",{"_index":660,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["comparison",{"_index":1934,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["concat",{"_index":2312,"title":{},"body":{"array/array_merge.html":{}}}],["concat(arr",{"_index":2344,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#拼接兩個陣列":{}}}],["conditiona",{"_index":2427,"title":{},"body":{"cases/if.html":{}}}],["conditionb",{"_index":2428,"title":{},"body":{"cases/if.html":{}}}],["config",{"_index":3062,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["configur",{"_index":883,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["consol",{"_index":62,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#補數字":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"math.html":{},"math.html#浮點數運算的坑":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"array/array_method.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/array_merge.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"cases/replace.html":{},"array/filter.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/if.html":{},"cases/arr.html":{},"cases/str.html":{},"cases/str.html#url":{},"glossary/hoisting.html":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"statements/let.html":{},"statements/let.html#let":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["console.dir(object",{"_index":827,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["console.dir(thi",{"_index":826,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["console.log",{"_index":773,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["console.log(&apos;3&apo",{"_index":1673,"title":{},"body":{"this.html#bind-apply-call":{}}}],["console.log(&apos;6&apo",{"_index":1678,"title":{},"body":{"this.html#bind-apply-call":{}}}],["console.log(&apos;i&apo",{"_index":1271,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["console.log('3",{"_index":1590,"title":{},"body":{"this.html":{}}}],["console.log('6",{"_index":1592,"title":{},"body":{"this.html":{}}}],["console.log('i",{"_index":783,"title":{},"body":{"core.html":{}}}],["console.log(1++\"2\"+\"2",{"_index":1953,"title":{},"body":{"operators.html":{}}}],["console.log(1++2+2",{"_index":1981,"title":{},"body":{"operators.html#Adding-Strings-and-Numbers":{}}}],["console.log(11",{"_index":555,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["console.log(123",{"_index":552,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["console.log(32",{"_index":554,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["console.log(321",{"_index":553,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["console.log(a",{"_index":534,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"glossary/hoisting.html":{}}}],["console.log(ari",{"_index":56,"title":{},"body":{"ajax.html":{}}}],["console.log(c",{"_index":2468,"title":{},"body":{"glossary/hoisting.html":{}}}],["console.log(famili",{"_index":694,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["console.log(j)的時候顯示的就是每次循環時的i",{"_index":276,"title":{},"body":{"asynchronous.html":{}}}],["console.log(new",{"_index":600,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["console.log(obj",{"_index":2869,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["console.log(thi",{"_index":824,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["const",{"_index":354,"title":{"core.html#const":{}},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#屬性特徵":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"this.html":{},"this.html#bind-apply-call":{},"array/array_method.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#example":{},"array/filter.html":{},"array/object_to_array.html":{},"cases/if.html":{},"cases/arr.html":{},"cases/str.html":{},"cases/str.html#url":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["constructor",{"_index":870,"title":{},"body":{"core.html":{},"core.html#繼承":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{}}}],["contain",{"_index":1499,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["content",{"_index":1505,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["control",{"_index":109,"title":{},"body":{"ajax.html":{},"http/caching.html":{},"http/caching.html#強緩存":{}}}],["control&#x3002",{"_index":2736,"title":{},"body":{"http/caching.html#強緩存":{}}}],["control&apo",{"_index":2721,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["convers",{"_index":546,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["cooki",{"_index":2036,"title":{"F2E/cookie.html":{}},"body":{"F2E/cookie.html":{},"F2E/cookie.html#什麼是-Cookie？":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x3002",{"_index":2107,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x5982;&#x679c;&#x60a8;&#x5728",{"_index":2095,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x5982;&#x679c;&#x60a8;&#x9020;&#x8a2a",{"_index":2103,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x53ef;&#x4ee5;&#x7528;&#x4f86;&#x63d0;&#x5347;&#x7528;&#x6236;&#x9ad4;&#x9a57;&#xff0c;&#x6bd4;&#x5982;&#x7db2;&#x7ad9;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;cookie&#x4f86;&#x8a18;&#x9304;&#x7528;&#x6236;&#x7684;&#x767b;&#x9304;&#x72c0;&#x614b;&#xff0c;&#x7528;&#x6236;&#x53ea;&#x8981;&#x767b;&#x9304;&#x4e00;&#x6b21;&#x5c31;&#x53ef;&#x4ee5;&#x4e0d;&#x7528;&#x767b;&#x9304;&#x4e86;&#xff0c;&#x8cfc;&#x7269;&#x7db2;&#x7ad9;&#x901a;&#x904e;cookie&#x4f86;&#x4fdd;&#x5b58;&#x8cfc;&#x7269;&#x8eca;&#x4e2d;&#x7684;&#x5546;&#x54c1;&#x7b49;&#x3002;&#x540c;&#x6642;&#x5f88;&#x591a;&#x7684;&#x7db2;&#x7ad9;&#x5206;&#x6790;&#x90fd;&#x662f;&#x4f9d;&#x9760;cookie&#x4f86;&#x5b8c;&#x6210;&#x7684;&#x3002",{"_index":2092,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["cookie&#x5c31;&#x50cf",{"_index":2135,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x662f;&#x4e00;&#x5f35;&#x9818;&#x9910;&#x7684;&#x865f;&#x78bc;&#x724c;&#xff0c;&#x800c;session&#x53ef;&#x4ee5;&#x662f;&#x4e00;&#x5f35;&#x6578;&#x4f4d;&#x6703;&#x54e1;&#x5361",{"_index":2144,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x662f;&#x5fc5;&#x9808;&#x7684;&#xff0c;&#x96e2;&#x958b;cookie&#x6211;&#x5011;&#x4ec0;&#x9ebc;&#x4e5f;&#x5206;&#x6790;&#x4e0d;&#x4e86;&#x3002",{"_index":2108,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#xff0c",{"_index":2089,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["cookie&#xff1a",{"_index":2086,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["cookie&#xff1f",{"_index":2083,"title":{"F2E/cookie.html#什麼是-Cookie？":{}},"body":{}}],["cookies&#xff08;third",{"_index":2132,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookies&#xff09;&#x6703;&#x6d29;&#x6f0f;&#x7db2;&#x9801;&#x700f;&#x89bd;&#x7684;&#x96b1;&#x79c1",{"_index":2133,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookies（third",{"_index":2058,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie可以用來提升用戶體驗，比如網站可以使用cookie來記錄用戶的登錄狀態，用戶只要登錄一次就可以不用登錄了，購物網站通過cookie來保存購物車中的商品等。同時很多的網站分析都是依靠cooki",{"_index":2040,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie和session得結合，到底還會不會有被竄改的問題，這個時候就要靠”簽章”來驗證資料的真實性，在我使用cooki",{"_index":2075,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie和第三方cooki",{"_index":2041,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie是一張領餐的號碼牌，而sess",{"_index":2063,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie是必須的，離開cooki",{"_index":2046,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie與session彼此之間是可以互換的(指的是你可以把資料存放在session或是cookie，並不是指session可以被放在client端當cookie使用)。但是cookie在最單純的情況裡，是有安全性的問題(資料在client端)。所以考量到這點，大部分都會選擇session。但是正如cookie是一個外加的功能，session也不屬於http",{"_index":2077,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie，會為域名a建立一個cookie，為域名b再建立一個cooki",{"_index":2056,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie，那這個cooki",{"_index":2053,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie，那麼無論多少個域，都只有一個cookie，一個屬於第三方域的cookie，網站下所有域都能共享這個cooki",{"_index":2057,"title":{},"body":{"F2E/cookie.html":{}}}],["copi",{"_index":440,"title":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"object/assign.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["cor",{"_index":95,"title":{},"body":{"ajax.html":{}}}],["corgi",{"_index":857,"title":{},"body":{"core.html":{},"core.html#繼承":{},"global/function.html":{},"global/function.html#bind":{}}}],["corgi&apo",{"_index":1346,"title":{},"body":{"core.html#繼承":{}}}],["corgi.nam",{"_index":859,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["cors是一個w3c標準，全稱是”跨域資源共享”（cross",{"_index":89,"title":{},"body":{"ajax.html":{}}}],["cors需要瀏覽器和服務器同時支持。實現cors通信的關鍵是服務器。只要服務器實現了cor",{"_index":94,"title":{},"body":{"ajax.html":{}}}],["cours",{"_index":2504,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["cpu",{"_index":1713,"title":{},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["cream",{"_index":2494,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["creat",{"_index":957,"title":{"swagger/to-html.html#Create-a-pet":{}},"body":{"core.html":{},"core.html#箭頭函數":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"object/create.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["create(animal.prototyp",{"_index":868,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["create(dog",{"_index":858,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["create(shape.prototyp",{"_index":2853,"title":{},"body":{"object/create.html":{}}}],["createalmond",{"_index":2499,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createcream",{"_index":2498,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createcustard",{"_index":2497,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createdessert",{"_index":2484,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createdocumentfrag",{"_index":1733,"title":{"performance.html#合併-DOM-插入-createDocumentFragment":{}},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["createel",{"_index":1739,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["createicecream",{"_index":2480,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createjelli",{"_index":2474,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createm",{"_index":2508,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createmeal(json",{"_index":2507,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createord",{"_index":2522,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createtrifl",{"_index":2496,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["crud",{"_index":126,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["css",{"_index":1715,"title":{},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["curl",{"_index":2993,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["currentvalu",{"_index":1571,"title":{},"body":{"this.html":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["custard",{"_index":2493,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["c已經被賦值為1",{"_index":2469,"title":{},"body":{"glossary/hoisting.html":{}}}],["c為o3.c的值，最後一個出現的屬性c",{"_index":2636,"title":{},"body":{"object/assign.html":{}}}],["d",{"_index":249,"title":{},"body":{"RegExp.html":{},"closures.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["d.setdate(d.getd",{"_index":2625,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["d.toisostring().substr",{"_index":2619,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["dad",{"_index":635,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["dark",{"_index":2239,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["data",{"_index":120,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"performance.html":{},"performance.html#懶加載":{},"array/array_insert.html":{},"array/array_insert.html#example":{},"global/promise.html":{}}}],["data.id",{"_index":2348,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["data.nam",{"_index":2349,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["database&#x3001;&#x8a18;&#x61b6;&#x9ad4;&#x6216;&#x662f;&#x5229;&#x7528;&#x6a94;&#x6848;&#x4ea4;&#x63db;&#x7684;&#x65b9;&#x5f0f;&#xff0c;&#x4f86;&#x628a;&#x4f60;&#x7684;&#x9ede;&#x9910;&#x8cc7;&#x8a0a;&#x4f5c;&#x5132;&#x5b58;&#xff0c;&#x800c;&#x7576;&#x4f60;&#x53bb;&#x9818;&#x98f2;&#x6599;&#x6642;&#xff0c;&#x5e97;&#x54e1;&#x6703;&#x8f38;&#x5165;&#x4f60;&#x7684;&#x865f;&#x78bc;&#xff0c;&#x4e26;&#x5728;&#x53eb;&#x51fa;&#x4f60;&#x9ede;&#x7684;&#x5167;&#x5bb9;&#x3002;&#x4f46;&#x5982;&#x679c;&#x662f;&#x5927;&#x578b;&#x7db2;&#x7ad9;&#x4e0a;&#xff0c;&#x5982;&#x679c;&#x6709;&#x8ca0;&#x8f09;&#x5e73;&#x8861;&#x7684;&#x6a5f;&#x5236;&#xff0c;&#x4f60;&#x600e;&#x9ebc;&#x80fd;&#x78ba;&#x5b9a;&#x4f60;&#x7576;&#x521d;&#x8f38;&#x5165;&#x548c;&#x6700;&#x5f8c;&#x53d6;&#x9910;&#x7684;server&#x662f;&#x540c;&#x4e00;&#x53f0;&#x5462;&#xff0c;&#x800c;&#x9019;&#x6a23;&#x4f5c;&#x7576;&#x4f60;&#x8cc7;&#x6599;&#x91cf;&#x5927;&#x6642;&#xff0c;&#x4e5f;&#x6703;&#x6709;&#x6548;&#x80fd;&#x5f71;&#x97ff;&#x7684;&#x554f;&#x984c;&#xff0c;&#x9019;&#x6642;&#x5019;cookie&#x5c31;&#x51fa;&#x5834;&#x4e86;&#x3002",{"_index":2157,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["database、記憶體或是利用檔案交換的方式，來把你的點餐資訊作儲存，而當你去領飲料時，店員會輸入你的號碼，並在叫出你點的內容。但如果是大型網站上，如果有負載平衡的機制，你怎麼能確定你當初輸入和最後取餐的server是同一台呢，而這樣作當你資料量大時，也會有效能影響的問題，這時候cooki",{"_index":2069,"title":{},"body":{"F2E/cookie.html":{}}}],["dataopts.map",{"_index":2347,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["date",{"_index":267,"title":{"global/date.html":{}},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#this":{},"core.html#new":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"http/caching.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["date.prototype.toisostr",{"_index":2616,"title":{"global/date.html#Date-prototype-toISOString":{}},"body":{"global/date.html":{}}}],["dd",{"_index":846,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["debugg",{"_index":2941,"title":{},"body":{"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/block.html":{}}}],["decemb",{"_index":2612,"title":{},"body":{"global/date.html":{}}}],["decim",{"_index":1463,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["decimal.substr(decimal.indexof",{"_index":1466,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["decimal.tofixed(length",{"_index":1465,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["declar",{"_index":405,"title":{},"body":{"closures.html":{}}}],["decreas",{"_index":788,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["deep",{"_index":455,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["default",{"_index":2998,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["defer",{"_index":219,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{}}}],["defer/script",{"_index":217,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{}}}],["defin",{"_index":535,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"scope.html":{},"variable.html":{},"variable.html#Hoisting":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/block.html":{}}}],["defind",{"_index":653,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["defineproperti",{"_index":909,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["defineproperty(b",{"_index":557,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["defineproperty(obj",{"_index":881,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["defineproperty(wallet",{"_index":906,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["deleg",{"_index":3067,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["delet",{"_index":647,"title":{"operators/delete.html#delete":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"variable.html":{},"operators/delete.html":{},"operators/delete.html#delete":{}}}],["delete&#x53ea;&#x80fd;&#x64cd;&#x4f5c;&#x5c0d;&#x8c61;&#x7684;&#x5c6c;&#x6027",{"_index":2845,"title":{},"body":{"operators/delete.html#delete":{}}}],["delete&#xff1a;&#x522a;&#x9664;&#xff08;delete&#xff09",{"_index":171,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["delete：刪除（delet",{"_index":131,"title":{},"body":{"RESTfulAPI.html":{}}}],["depend",{"_index":1526,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["dequ",{"_index":3097,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["dequeu",{"_index":3080,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["design",{"_index":155,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["dessert",{"_index":2483,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["dessert&#xff08;&#x751c;&#x9ede;&#xff09;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#xff0c;&#x901a;&#x904e;&#x524d;&#x9762;&#x7684",{"_index":2528,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["dessert.appli",{"_index":2487,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["dessert.prototyp",{"_index":2489,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["destructur",{"_index":2858,"title":{"operators/destructuring_assignment.html#Destructuring-assignment":{}},"body":{"operators/destructuring_assignment.html":{}}}],["dev",{"_index":662,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["devtool",{"_index":793,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#const":{}}}],["differ",{"_index":1926,"title":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}},"body":{"operators.html":{}}}],["dir",{"_index":839,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["dir(callfn",{"_index":675,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["directori",{"_index":1524,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["disk",{"_index":2657,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["div",{"_index":326,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["div1",{"_index":327,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["div1.addeventlisten",{"_index":335,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["do",{"_index":3069,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["dobyord",{"_index":2588,"title":{},"body":{"global/promise.html":{}}}],["dobyorder(task",{"_index":2602,"title":{},"body":{"global/promise.html":{}}}],["doc",{"_index":1492,"title":{"index.html":{},"index.html#hexo-theme-doc-seed":{}},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{}}}],["document",{"_index":333,"title":{},"body":{"event.html":{},"event.html#代理":{},"core.html":{},"core.html#箭頭函數":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{},"index.html#More-Informations":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{}}}],["documentfrag",{"_index":1717,"title":{},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["dog",{"_index":828,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"global/function.html":{},"global/function.html#bind":{}}}],["dog.prototyp",{"_index":867,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["dog.prototype.bark",{"_index":834,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{}}}],["dog.prototype.constructor",{"_index":869,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["dom",{"_index":798,"title":{"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}},"body":{"core.html":{},"core.html#this":{},"performance.html":{},"performance.html#優化原則和方向":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["dom&#x3002",{"_index":1806,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["dom&#x4e8b;&#x4ef6;&#x8655;&#x7406;&#x5668",{"_index":1288,"title":{},"body":{"core.html#this":{}}}],["domcontentload",{"_index":1718,"title":{"performance.html#儘早執行操作-DOMContentLoaded":{}},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["done",{"_index":2429,"title":{},"body":{"cases/if.html":{}}}],["download",{"_index":2983,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["dummi",{"_index":1504,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["e",{"_index":258,"title":{},"body":{"RegExp.html":{},"event.html":{},"event.html#代理":{},"closures.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"global/promise.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["e.target",{"_index":338,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["easycard",{"_index":1559,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["ecm",{"_index":256,"title":{},"body":{"RegExp.html":{}}}],["ecmascript",{"_index":213,"title":{"es6.html":{}},"body":{"es6.html":{}}}],["edg",{"_index":3012,"title":{},"body":{"statements/block.html":{}}}],["el",{"_index":916,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{}}}],["ele.addeventlisten",{"_index":948,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["element",{"_index":2251,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["element.pric",{"_index":2252,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["email",{"_index":240,"title":{},"body":{"RegExp.html":{}}}],["empti",{"_index":707,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["emptyobject",{"_index":914,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["endpoint",{"_index":2184,"title":{},"body":{"F2E/GraphQL.html":{}}}],["enforc",{"_index":944,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["enqueu",{"_index":3078,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["enumer",{"_index":882,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["equal",{"_index":597,"title":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["erdong",{"_index":2471,"title":{},"body":{"glossary/hoisting.html":{}}}],["error",{"_index":704,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#this":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"scope.html":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"variable.html":{},"variable.html#Hoisting":{},"global/promise.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["es5",{"_index":920,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"statements/for.html":{}}}],["es5中新增的一個方法，可以改變函數內部的thi",{"_index":1585,"title":{},"body":{"this.html":{}}}],["es6",{"_index":690,"title":{"core.html#ES6-Airbnb":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#ES6-Airbnb":{},"this.html":{},"this.html#bind-apply-call":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"array/good_part.html":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["eslint",{"_index":940,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["esprima.org",{"_index":516,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["etag",{"_index":2669,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["etag/if",{"_index":2682,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["event",{"_index":324,"title":{"event.html":{}},"body":{"global/promise.html":{}}}],["ex",{"_index":67,"title":{},"body":{"ajax.html":{},"object/create.html":{}}}],["exampl",{"_index":2233,"title":{"array/array_methods.html#examples":{},"array/array_insert.html#example":{}},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_insert.html":{},"global/promise.html":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["example&#x201d",{"_index":3150,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["examplevalu",{"_index":2434,"title":{},"body":{"cases/arr.html":{}}}],["examplevalues.reduc",{"_index":2437,"title":{},"body":{"cases/arr.html":{}}}],["exec",{"_index":743,"title":{},"body":{"core.html":{}}}],["expect",{"_index":2194,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["expir",{"_index":2659,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["explicit",{"_index":545,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#屬性特徵":{}}}],["exponenti",{"_index":1839,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["exponential&apo",{"_index":1891,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["export",{"_index":1451,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["express",{"_index":273,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["expression&#xff09;&#x975e;&#x5e38;&#x985e;&#x4f3c;&#x65bc;&#x51fd;&#x6578;&#x8072;&#x660e;&#xff08;funct",{"_index":2945,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["expression&#xff0c;&#x7e2e;&#x5beb;&#xff1a;iife&#xff09",{"_index":1242,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["expressionfn",{"_index":734,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["expression）非常類似於函數聲明（funct",{"_index":2937,"title":{},"body":{"operators/function.html":{}}}],["expression，縮寫：iif",{"_index":750,"title":{},"body":{"core.html":{}}}],["extend",{"_index":689,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"object/create.html":{}}}],["f",{"_index":2954,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#typeof":{}}}],["f1",{"_index":423,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f1(b,c",{"_index":424,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f1,f2",{"_index":427,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f2",{"_index":430,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f2(b",{"_index":428,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f3",{"_index":431,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f3(b,c",{"_index":429,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["factor",{"_index":1454,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["factori",{"_index":2473,"title":{"function/factory​_factory.html":{}},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["factory(...arg",{"_index":2520,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["fail",{"_index":644,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#箭頭函數":{}}}],["fals",{"_index":19,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#屬性特徵":{},"this.html":{},"this.html#簡易呼叫":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"cases/replace.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"cases/if.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"operators/typeof.html":{},"operators/typeof.html#null":{},"statements/block.html":{}}}],["falseyvalu",{"_index":2436,"title":{},"body":{"cases/arr.html":{}}}],["falsi",{"_index":605,"title":{},"body":{"core.html":{}}}],["famili",{"_index":631,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#this":{},"core.html#繼承":{}}}],["family&apo",{"_index":1137,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["family.callfamili",{"_index":645,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["family.callnam",{"_index":807,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["family.json",{"_index":729,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["family.oth",{"_index":648,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["family[familymethod[i",{"_index":652,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["family[key",{"_index":682,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["familymethod",{"_index":649,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["familymethod.length;i",{"_index":650,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["father",{"_index":676,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["featur",{"_index":1509,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["feb",{"_index":2343,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["fetch(menuurl",{"_index":2502,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["file",{"_index":1502,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["filter",{"_index":2189,"title":{"array/array_methods.html#filter":{},"array/filter.html":{}},"body":{"array/array_methods.html":{},"array/array_methods.html#Array":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/array_merge.html":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["final",{"_index":2607,"title":{},"body":{"global/promise.html":{}}}],["find",{"_index":656,"title":{"array/array_methods.html#find":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#ES6-Airbnb":{},"array/array_methods.html":{}}}],["firefox",{"_index":3011,"title":{},"body":{"statements/block.html":{}}}],["first",{"_index":935,"title":{},"body":{"core.html":{},"core.html#const":{},"index.html":{},"index.html#Getting-Started":{}}}],["firstregexp",{"_index":241,"title":{},"body":{"RegExp.html":{}}}],["flavour",{"_index":2481,"title":{},"body":{"function/factory​_factory.html":{}}}],["floor(numb",{"_index":1459,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["fn",{"_index":404,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#this":{},"this.html":{},"this.html#簡易呼叫":{},"scope.html":{},"variable.html":{},"variable.html#Hoisting":{},"statements/AsyncFunction.html":{}}}],["fn.apply(team",{"_index":812,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["fn.bind(team",{"_index":814,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["fn.call",{"_index":815,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["fn.call(team",{"_index":811,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["fn1",{"_index":1698,"title":{},"body":{"scope.html":{}}}],["fn2",{"_index":813,"title":{},"body":{"core.html":{},"core.html#this":{},"scope.html":{}}}],["fna",{"_index":751,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"this.html":{},"this.html#簡易呼叫":{}}}],["fna.bind",{"_index":1550,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["fnb",{"_index":1549,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["foo",{"_index":538,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"this.html":{},"this.html#簡易呼叫":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"global/promise.html":{},"statements/block.html":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["foo&#xff0c;&#x53ef;&#x770b;&#x5230",{"_index":3053,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["foo.bar",{"_index":1555,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["for&#x2026;in",{"_index":3030,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["for&#x2026;of",{"_index":3029,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["for&#x2026;of&#x8207;for&#x2026;in&#x7684;&#x5dee;&#x5225",{"_index":3028,"title":{"statements/for.html#for…of與for…in的差別":{}},"body":{}}],["for...in",{"_index":3023,"title":{},"body":{"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["for...of",{"_index":3024,"title":{},"body":{"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["foreach",{"_index":711,"title":{"array/array_methods.html#forEach":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["format",{"_index":2621,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["forward",{"_index":2032,"title":{},"body":{"F2E/header.html":{}}}],["for…in",{"_index":3022,"title":{},"body":{"statements/for.html":{}}}],["for…of",{"_index":3021,"title":{},"body":{"statements/for.html":{}}}],["for…of與for…in",{"_index":3020,"title":{},"body":{"statements/for.html":{}}}],["for迴圈的時間複雜度為o(n2",{"_index":3092,"title":{},"body":{"string/queue.html":{}}}],["for（xff",{"_index":2034,"title":{},"body":{"F2E/header.html":{}}}],["found",{"_index":2208,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#find":{}}}],["frag",{"_index":1738,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["frag.appendchild(li",{"_index":1741,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["fragment",{"_index":1734,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["freez",{"_index":887,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["freeze(person",{"_index":931,"title":{},"body":{"core.html":{},"core.html#const":{}}}],["friday",{"_index":2516,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["fromexponenti",{"_index":1843,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["fromexponential(valu",{"_index":1845,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["front",{"_index":3084,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["fulfil",{"_index":2576,"title":{},"body":{"global/promise.html":{}}}],["fulfilled/reject",{"_index":2577,"title":{},"body":{"global/promise.html":{}}}],["fun",{"_index":477,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{}}}],["func",{"_index":1594,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["func.appli",{"_index":1581,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["func.cal",{"_index":1578,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["funcb",{"_index":764,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["funcb(cbfn",{"_index":765,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["function",{"_index":21,"title":{"arrowFunction.html#Arrow-Function":{},"core.html#function":{},"function/factory​_factory.html":{}},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"performance.html":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"operators.html":{},"operators.html#Increment":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"cases/replace.html":{},"array/filter.html":{},"cases/str.html":{},"glossary/hoisting.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"operators/delete.html":{},"operators/delete.html#delete":{},"object/create.html":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["function#bind",{"_index":2802,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["function&#x662f;&#x7269;&#x4ef6",{"_index":1161,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["function&#xff0c;&#x4ee5;&#x6b64;&#x70ba;&#x57fa;&#x6e96;&#x7522;&#x751f;&#x4e00;&#x500b;&#x4f5c;&#x7528;&#x57df",{"_index":1671,"title":{},"body":{"this.html#bind-apply-call":{}}}],["function($provid",{"_index":3065,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["function(pric",{"_index":778,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#屬性特徵":{}}}],["function.nam",{"_index":2963,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["function.prototype.appli",{"_index":2790,"title":{},"body":{"global/function.html":{},"global/function.html#call、apply、bind":{}}}],["function.prototype.bind",{"_index":2791,"title":{},"body":{"global/function.html":{},"global/function.html#call、apply、bind":{}}}],["function.prototype.cal",{"_index":2789,"title":{},"body":{"global/function.html":{},"global/function.html#call、apply、bind":{}}}],["function1",{"_index":2007,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["function_express",{"_index":2955,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#typeof":{}}}],["functionc",{"_index":736,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["functiond",{"_index":737,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["functions&#xff09;&#x3002",{"_index":2948,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["function沒辦法轉成json",{"_index":476,"title":{},"body":{"copy.html":{}}}],["functoind",{"_index":739,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["g",{"_index":1516,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{},"cases/replace.html":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{}}}],["get",{"_index":1510,"title":{"index.html#Getting-Started":{}},"body":{"index.html":{}}}],["get&#xff1a;&#x8b80;&#x53d6;&#xff08;read&#xff09",{"_index":168,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["getdat",{"_index":847,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["getdata",{"_index":723,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["getelementbyid",{"_index":334,"title":{},"body":{"event.html":{},"event.html#代理":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{}}}],["getelementsbytagnam",{"_index":1729,"title":{},"body":{"performance.html":{},"performance.html#DOM-查詢做緩存":{}}}],["getfullyear",{"_index":851,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["getmeal",{"_index":2500,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["getmonth",{"_index":849,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["getnam",{"_index":1545,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["getobj",{"_index":2649,"title":{},"body":{"object/object​_keys.html":{}}}],["getobj[typ",{"_index":2653,"title":{},"body":{"object/object​_keys.html":{}}}],["getownpropertydescriptor(wallet",{"_index":908,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["getpricevalue(order.itempric",{"_index":1842,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["getpricevalue(valu",{"_index":1844,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["getter",{"_index":892,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["getter/sett",{"_index":919,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["getweeksm",{"_index":2510,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["get|post|put|delet",{"_index":2456,"title":{},"body":{"cases/str.html":{}}}],["get傳遞之網址列資訊(queri",{"_index":33,"title":{},"body":{"ajax.html":{}}}],["get：讀取（read",{"_index":128,"title":{},"body":{"RESTfulAPI.html":{}}}],["git",{"_index":1520,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["github",{"_index":151,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["givememoney",{"_index":740,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["givememoney&apo",{"_index":1231,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["givemoremoney",{"_index":741,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["givemoremoney(num",{"_index":745,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["givetimestamp",{"_index":2518,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["global",{"_index":417,"title":{},"body":{"closures.html":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"this.html":{},"this.html#簡易呼叫":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["global.person",{"_index":760,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["globalloc",{"_index":1704,"title":{},"body":{"scope.html":{}}}],["go",{"_index":1525,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["godfath",{"_index":2236,"title":{},"body":{"array/array_methods.html":{}}}],["godfather&apo",{"_index":2273,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["good",{"_index":2422,"title":{},"body":{"cases/if.html":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["goodby",{"_index":396,"title":{},"body":{"closures.html":{}}}],["gpu",{"_index":1714,"title":{},"body":{"performance.html":{}}}],["graph",{"_index":2180,"title":{},"body":{"F2E/GraphQL.html":{}}}],["graphql",{"_index":2175,"title":{"F2E/GraphQL.html":{}},"body":{"F2E/GraphQL.html":{}}}],["groot",{"_index":639,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["hand",{"_index":530,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["happi",{"_index":160,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["hash",{"_index":2683,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["hash&#x78bc;&#x6703;&#x96a8;&#x4e4b;&#x6539;&#x8b8a;&#xff0c;&#x901a;&#x904e;&#x8acb;&#x6c42;&#x982d;&#x4e2d;&#x7684",{"_index":2753,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["hashtag",{"_index":1992,"title":{},"body":{"url.html":{}}}],["hateoa",{"_index":150,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["hateoas&#x3002",{"_index":208,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["header",{"_index":2024,"title":{"F2E/header.html":{},"F2E/token.html#provisional-headers-are-shown":{}},"body":{"F2E/token.html":{},"F2E/token.html#provisional-headers-are-shown":{},"http/caching.html":{},"http/caching.html#強緩存":{}}}],["hello",{"_index":393,"title":{},"body":{"closures.html":{},"core.html":{},"this.html":{},"this.html#bind-apply-call":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"cases/str.html":{},"global/function.html":{},"global/function.html#bind":{},"statements/for.html":{}}}],["hello5",{"_index":1950,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["here",{"_index":2590,"title":{},"body":{"global/promise.html":{}}}],["hexo",{"_index":1490,"title":{"index.html":{},"index.html#hexo-theme-doc-seed":{}},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{}}}],["hi",{"_index":2797,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["hoist",{"_index":521,"title":{"variable.html#Hoisting":{}},"body":{"core.html":{},"variable.html":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/block.html":{}}}],["hoisting](https://developer.mozilla.org/zh",{"_index":2463,"title":{"glossary/hoisting.html":{}},"body":{}}],["host",{"_index":77,"title":{},"body":{"ajax.html":{}}}],["hostnam",{"_index":1986,"title":{},"body":{"url.html":{}}}],["href",{"_index":328,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["href=xxx",{"_index":86,"title":{},"body":{"ajax.html":{}}}],["hsu",{"_index":632,"title":{},"body":{"core.html":{}}}],["html",{"_index":1720,"title":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}},"body":{"performance.html":{},"performance.html#優化原則和方向":{},"performance.html#懶加載":{},"swagger/to-html.html":{}}}],["http",{"_index":29,"title":{"http/caching.html":{}},"body":{"ajax.html":{},"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{},"RESTfulAPI.html#狀態碼":{},"F2E/header.html":{},"F2E/cookie.html":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#References":{}}}],["http/1.1",{"_index":2661,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["http://3000",{"_index":2459,"title":{},"body":{"cases/str.html":{}}}],["http://blog.xuite.net/ahdaa/blog1/test.html?id=ad&amp;val1=02&amp;val2=22#achorad",{"_index":68,"title":{},"body":{"ajax.html":{}}}],["http://example.com/?userid=jacob.hsu",{"_index":48,"title":{},"body":{"ajax.html":{}}}],["http://localhost:4000",{"_index":1531,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["http://ourjs.com/detail/54695381bc3f9b154e000046",{"_index":1870,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["http://petstore.swagger.io/v1/pet",{"_index":2994,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["http://petstore.swagger.io/v1/pets/{petid",{"_index":3005,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["http://www.dengzhr.com/js/1069",{"_index":1588,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["http://www.foo.com",{"_index":101,"title":{},"body":{"ajax.html":{}}}],["http://www.jstips.co/zh_tw/javascript/whi",{"_index":1933,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["http://www.ruanyifeng.com/blog/2018/10/rest",{"_index":161,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["https://${window.location.host",{"_index":1996,"title":{},"body":{"url.html":{}}}],["https://30secondsofinterviews.org",{"_index":1935,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["https://blog.florimondmanca.com/rest",{"_index":154,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["https://developer.mozilla.org/en",{"_index":390,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["https://developer.mozilla.org/zh",{"_index":111,"title":{},"body":{"ajax.html":{},"this.html":{},"this.html#Callback":{}}}],["https://github.com/airbnb/javascript",{"_index":939,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["https://github.com/interviewmap/c",{"_index":1872,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["https://github.com/vuejs/vue/blob/dev/dist/vue.j",{"_index":913,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["https://github.com/zalando",{"_index":1521,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["https://graphql.cn/learn",{"_index":2185,"title":{},"body":{"F2E/GraphQL.html":{},"F2E/GraphQL.html#References":{}}}],["https://hacpai.com/article/1546570870626?r=vanessa",{"_index":1936,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["https://hacpai.com/article/1546665384680?r=vanessa",{"_index":1947,"title":{},"body":{"operators.html":{},"operators.html#Increment":{},"operators.html#references":{}}}],["https://hacpai.com/article/1547790109416?r=vanessa",{"_index":2257,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["https://is.gd/0iywu2",{"_index":1752,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["https://ithelp.ithome.com.tw/articles/10190254",{"_index":66,"title":{},"body":{"ajax.html":{}}}],["https://ithelp.ithome.com.tw/articles/10200678",{"_index":2186,"title":{},"body":{"F2E/GraphQL.html":{},"F2E/GraphQL.html#References":{}}}],["https://jsbin.com/cejijipevo/edit?js,consol",{"_index":467,"title":{},"body":{"copy.html":{},"copy.html#Object-assign":{}}}],["https://jsbin.com/gaceyen/edit?js,consol",{"_index":2213,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#sort":{}}}],["https://jsbin.com/guqetaviho/edit?js,consol",{"_index":1930,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["https://jsbin.com/hajohit/edit?html,js,output",{"_index":325,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["https://jsbin.com/hipiruzoru/edit?js,consol",{"_index":113,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{}}}],["https://jsbin.com/honidujame/edit?js,consol",{"_index":263,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#異步":{}}}],["https://jsbin.com/hupumaxoru/edit?js,consol",{"_index":1951,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["https://jsbin.com/janoyunemu/edit?js,consol",{"_index":2433,"title":{},"body":{"cases/arr.html":{}}}],["https://jsbin.com/katifugevu/edit?js,console,output",{"_index":35,"title":{},"body":{"ajax.html":{}}}],["https://jsbin.com/keholuroba/edit?js,consol",{"_index":445,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{}}}],["https://jsbin.com/kofawafune/edit?js,consol",{"_index":473,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{}}}],["https://jsbin.com/lokejiveha/edit?js,consol",{"_index":442,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{}}}],["https://jsbin.com/lufavuf/1/edit?js,consol",{"_index":2321,"title":{},"body":{"array/array_merge.html":{}}}],["https://jsbin.com/nefobuh/edit?js,consol",{"_index":2216,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#every":{}}}],["https://jsbin.com/nidizam/edit?js,consol",{"_index":2317,"title":{},"body":{"array/array_merge.html":{}}}],["https://jsbin.com/pupasabapa/edit?js,consol",{"_index":1586,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["https://jsbin.com/qapevom/edit?js,consol",{"_index":2207,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#find":{}}}],["https://jsbin.com/razufufago/edit?js,consol",{"_index":2227,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["https://jsbin.com/samaxubazo/edit?js,consol",{"_index":1938,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["https://jsbin.com/sidixofelo/edit?js,consol",{"_index":2647,"title":{},"body":{"object/object​_keys.html":{}}}],["https://jsbin.com/tagalenuje/edit?js,consol",{"_index":1558,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["https://jsbin.com/venezeyonu/edit?js,consol",{"_index":459,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["https://jsbin.com/vihonezita/edit?js,consol",{"_index":1543,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{}}}],["https://jsbin.com/viziyewore/edit?js,consol",{"_index":1539,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{}}}],["https://jsbin.com/wurocegika/edit?js,consol",{"_index":2642,"title":{},"body":{"object/object​_keys.html":{}}}],["https://jsbin.com/wuxiqeciko/edit?js,consol",{"_index":1589,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["https://jsbin.com/xeqevarisa/1/edit?js,consol",{"_index":456,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["https://jsbin.com/xevunu/edit?js,consol",{"_index":2196,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#map":{},"array/map.html":{},"array/map.html#map":{}}}],["https://jsbin.com/xoninaz/1/edit?js,consol",{"_index":2204,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#filter":{}}}],["https://jsbin.com/xoninaz/edit?js,consol",{"_index":2191,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#forEach":{}}}],["https://jsbin.com/yapugucezi/edit?js,consol",{"_index":2234,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["https://jsbin.com/yeleboz/edit?js,consol",{"_index":2220,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#some":{}}}],["https://jsbin.com/yijuyebixu/edit?js,consol",{"_index":426,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["https://jsbin.com/zosebomeko/edit?js,console,output",{"_index":2586,"title":{},"body":{"global/promise.html":{}}}],["https://juejin.im/post/5dbff8735188252ddb2fd25",{"_index":2385,"title":{},"body":{"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["https://paper.dropbox.com/doc/j",{"_index":1707,"title":{},"body":{"scope.html":{}}}],["https://paper.dropbox.com/doc/javascript",{"_index":2014,"title":{},"body":{"variable.html":{},"variable.html#動態型別":{}}}],["https://paper.dropbox.com/doc/jsjavascript",{"_index":1609,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["https://segmentfault.com/a/1190000012175422",{"_index":1871,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["https://tylermcginnis.com/arrow",{"_index":407,"title":{},"body":{"closures.html":{}}}],["https://wcc723.github.io/javascript/2017/12/15/javascript",{"_index":1710,"title":{},"body":{"scope.html":{}}}],["https://wcc723.github.io/javascript/2017/12/21/javascript",{"_index":1612,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["https://wcc723.github.io/javascript/2019/03/18/j",{"_index":1608,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["https://www.jianshu.com/p/8f839f558319",{"_index":1753,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["https://www.sitepoint.com/factori",{"_index":2524,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["https://www.w3schools.com/js/js_operators.asp",{"_index":1946,"title":{},"body":{"operators.html":{},"operators.html#Increment":{},"operators.html#references":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["https://www.youtube.com/watch?v=wiommcfayvi",{"_index":941,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["https://zh.wikipedia.org/wiki",{"_index":630,"title":{},"body":{"core.html":{}}}],["http代理或負載均衡方式連接到web伺服器的用戶端最原始的ip位址的http",{"_index":2035,"title":{},"body":{"F2E/header.html":{}}}],["http的無狀態(stateless",{"_index":2038,"title":{},"body":{"F2E/cookie.html":{}}}],["http的無狀態性的「額外手段」之一，讓伺服器可以設定或讀取cookies中所包含資訊，藉此來維護我們在使用服務時，可以在背景完成向伺服器發送請求，接著伺服器就匯回傳包含登入憑據（使用者名稱加密碼的某種加密形式）的cookie文檔，到使用者的硬碟(或記憶體上)，在之後登入時，只要cookie尚未到期，瀏覽器會傳送該cooki",{"_index":2039,"title":{},"body":{"F2E/cookie.html":{}}}],["i++)&#x3000;&#x3000;for",{"_index":3132,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["i++)&#x3000;&#x3000;x",{"_index":3131,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["i=1",{"_index":3088,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{}}}],["i=ary.length",{"_index":59,"title":{},"body":{"ajax.html":{}}}],["i=n",{"_index":3089,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{}}}],["icecream",{"_index":2479,"title":{},"body":{"function/factory​_factory.html":{}}}],["icecream&#xff08;&#x51b0;&#x6dc7;&#x6dcb;&#xff09;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#x4f86;&#x5b9a;&#x7fa9;&#x3002",{"_index":2530,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["id",{"_index":51,"title":{},"body":{"ajax.html":{},"event.html":{},"event.html#代理":{},"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["id&#x3002",{"_index":2146,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#x4e5f;&#x6d88;&#x5931;&#x4e86;&#xff0c;&#x4f46;&#x53ea;&#x8981;&#x628a;&#x539f;&#x4f86;&#x7684;sess",{"_index":2163,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#x518d;&#x767c;&#x9001;&#x7d66;server&#xff0c;&#x90a3;&#x9084;&#x662f;&#x80fd;&#x5920;&#x627e;&#x5230;&#x539f;&#x4f86;&#x7684;sess",{"_index":2164,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#x7684;&#x65b9;&#x5f0f;&#x4e5f;&#x53ef;&#x4ee5;&#x63a1;&#x7528;cooki",{"_index":2159,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#xff0c;&#x4e26;&#x5728;&#x672c;&#x6b21;&#x97ff;&#x61c9;&#x4e2d;&#x8fd4;&#x56de;&#x7d66;&#x5ba2;&#x6236;&#x7aef;&#x4fdd;&#x5b58;&#x3002",{"_index":2152,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#xff0c;&#x5c31;&#x8868;&#x793a;&#x9019;&#x500b;&#x5ba2;&#x6236;&#x662f;&#x8001;&#x53f8;&#x6a5f;&#x5566;&#xff0c;&#x7576;&#x7136;&#x4f3a;&#x670d;&#x5668;&#x7aef;&#x4ee5;&#x524d;&#x5c31;&#x70ba;&#x4e86;&#x9019;&#x500b;&#x5ba2;&#x6236;&#x7aef;&#x5275;&#x5efa;&#x904e;session&#xff0c;&#x670d;&#x52d9;&#x5668;&#x5c31;&#x6309;&#x7167;sess",{"_index":2149,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#xff0c;&#x628a;&#x9019;&#x500b;session&#x627e;&#x51fa;&#x4f86;&#x4f7f;&#x7528;&#x3002;&#x4f46;&#x5982;&#x679c;&#x5ba2;&#x6236;&#x7aef;&#x8acb;&#x6c42;&#x4e0d;&#x5305;&#x542b;sess",{"_index":2150,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#xff0c;&#x7576;&#x7136;&#x5982;&#x679c;&#x5df2;&#x5305;&#x542b;&#x4e00;&#x500b;sess",{"_index":2148,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#xff0c;&#xff0c;&#x5247;&#x8868;&#x793a;&#x4ed6;&#x662f;&#x65b0;&#x81c9;&#x5b54;&#xff0c;&#x90a3;&#x4f3a;&#x670d;&#x5668;&#x7aef;&#x5c31;&#x70ba;&#x6b64;&#x5ba2;&#x6236;&#x7aef;&#x5275;&#x5efa;&#x4e00;&#x500b;session&#xff0c;&#x4e26;&#x751f;&#x6210;&#x4e00;&#x500b;sess",{"_index":2151,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id=ad&amp;val1=02&amp;val2=22#achorad",{"_index":80,"title":{},"body":{"ajax.html":{}}}],["id也消失了，但只要把原來的sess",{"_index":2073,"title":{},"body":{"F2E/cookie.html":{}}}],["id再發送給server，那還是能夠找到原來的sess",{"_index":2074,"title":{},"body":{"F2E/cookie.html":{}}}],["id的方式也可以採用cooki",{"_index":2070,"title":{},"body":{"F2E/cookie.html":{}}}],["id，就表示這個客戶是老司機啦，當然伺服器端以前就為了這個客戶端創建過session，服務器就按照sess",{"_index":2066,"title":{},"body":{"F2E/cookie.html":{}}}],["id，把這個session找出來使用。但如果客戶端請求不包含sess",{"_index":2067,"title":{},"body":{"F2E/cookie.html":{}}}],["id，當然如果已包含一個sess",{"_index":2065,"title":{},"body":{"F2E/cookie.html":{}}}],["id，，則表示他是新臉孔，那伺服器端就為此客戶端創建一個session，並生成一個sess",{"_index":2068,"title":{},"body":{"F2E/cookie.html":{}}}],["ie8",{"_index":922,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["ieee",{"_index":1852,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["if&#x2026;els",{"_index":2889,"title":{"statements/if...else.html#if…else":{}},"body":{}}],["if(a",{"_index":551,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["if…els",{"_index":2877,"title":{},"body":{"statements/if...else.html":{}}}],["if中的console.log(nam",{"_index":2472,"title":{},"body":{"glossary/hoisting.html":{}}}],["iif",{"_index":748,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["iife&#x3001;closure&#x3001;callback",{"_index":1646,"title":{},"body":{"this.html#Callback":{}}}],["iife&#xff08;immedi",{"_index":311,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["iife、closure、callback",{"_index":1576,"title":{},"body":{"this.html":{}}}],["iife（immedi",{"_index":271,"title":{},"body":{"asynchronous.html":{}}}],["img",{"_index":83,"title":{},"body":{"ajax.html":{},"performance.html":{},"performance.html#懶加載":{}}}],["img1",{"_index":1723,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["img1.getattribut",{"_index":1728,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["img1.src",{"_index":1727,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["immedi",{"_index":749,"title":{},"body":{"core.html":{}}}],["immut",{"_index":2325,"title":{},"body":{"array/array_insert.html":{}}}],["implement",{"_index":2589,"title":{},"body":{"global/promise.html":{}}}],["implicit",{"_index":547,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["import",{"_index":223,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["in&#x53ea;&#x80fd;&#x505a;&#x7b2c;&#x4e00;&#x5c64;&#x7684;&#x8907;&#x88fd",{"_index":1175,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["increas",{"_index":787,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["increment",{"_index":1937,"title":{"operators.html#Increment":{}},"body":{"operators.html":{}}}],["incubator/hexo",{"_index":1522,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["index",{"_index":769,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"this.html":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"array/array_merge.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["index,array",{"_index":1574,"title":{},"body":{"this.html":{},"this.html#Callback":{}}}],["index.j",{"_index":224,"title":{},"body":{"es6.html":{}}}],["inewarray.length;i",{"_index":708,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["info",{"_index":2849,"title":{"swagger/to-html.html#Info-for-a-specific-pet":{}},"body":{"object/create.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["inform",{"_index":1535,"title":{"index.html#More-Informations":{}},"body":{"index.html":{},"index.html#More-Informations":{}}}],["ingredi",{"_index":2523,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["initi",{"_index":3015,"title":{},"body":{"statements/let.html":{},"statements/let.html#let":{}}}],["initv",{"_index":785,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["inner",{"_index":3009,"title":{},"body":{"statements/block.html":{}}}],["insert",{"_index":542,"title":{"array/array_insert.html":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["insidefn",{"_index":413,"title":{},"body":{"closures.html":{}}}],["instal",{"_index":1513,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["instanc",{"_index":2519,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"object/create.html":{}}}],["instanceof",{"_index":2856,"title":{},"body":{"object/create.html":{},"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["int32",{"_index":2991,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["int64",{"_index":2996,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["integ",{"_index":2990,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["interest",{"_index":2415,"title":{},"body":{"array/object_to_array.html":{}}}],["interview",{"_index":1873,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["invalid",{"_index":533,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["invok",{"_index":272,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["ip",{"_index":2029,"title":{},"body":{"F2E/header.html":{}}}],["isempti",{"_index":3082,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["iso",{"_index":2617,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["item",{"_index":362,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"this.html":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"array/array_methods.html":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_merge.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["item,index",{"_index":2192,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/array_merge.html":{},"array/map.html":{},"array/map.html#map":{}}}],["item.catalog",{"_index":2244,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["items.length",{"_index":3083,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["items.pop",{"_index":3103,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["items.push(",{"_index":3079,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["items.shift",{"_index":3081,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["items.splice(items.length",{"_index":2334,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["items.unshift(",{"_index":3099,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["iter",{"_index":1572,"title":{},"body":{"this.html":{},"this.html#Callback":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["iterable.foo",{"_index":3027,"title":{},"body":{"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["j",{"_index":274,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"string/queue.html":{}}}],["j++)&#x3000;&#x3000;x",{"_index":3133,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["j=1",{"_index":3090,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{}}}],["j=n",{"_index":3091,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{}}}],["jacob",{"_index":523,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{},"core.html#Let":{},"variable.html":{},"variable.html#Hoisting":{}}}],["jacob&#x4f60;&#x597d;1",{"_index":1262,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["jacob.hsu",{"_index":64,"title":{},"body":{"ajax.html":{}}}],["jacob.hsu.tw",{"_index":248,"title":{},"body":{"RegExp.html":{}}}],["jacob.hsu.tw@gmail.com",{"_index":246,"title":{},"body":{"RegExp.html":{}}}],["jacob1",{"_index":1999,"title":{},"body":{"variable.html":{}}}],["jacob2",{"_index":2001,"title":{},"body":{"variable.html":{}}}],["jacob3",{"_index":2003,"title":{},"body":{"variable.html":{}}}],["jacob你好1",{"_index":766,"title":{},"body":{"core.html":{}}}],["jan",{"_index":2337,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["javascript",{"_index":511,"title":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#屬性特徵":{},"num.html":{},"num.html#補數字":{},"this.html":{},"this.html#bind-apply-call":{},"performance.html":{},"math.html":{},"math.html#浮點數運算的坑":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/good_part.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/arr.html":{},"glossary/hoisting.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"operators/function.html":{}}}],["javascript&#x4e2d;&#x7684;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x6c92;&#x6709;&#x63d0;&#x5347;,&#x4e0d;&#x50cf;&#x51fd;&#x6578;&#x8072;&#x660e;,&#x4f60;&#x5728;&#x5b9a;&#x7fa9;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x4e4b;&#x524d;&#x4e0d;&#x80fd;&#x4f7f;&#x7528;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f",{"_index":2952,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["javascript&#x4e2d;&#x7684;&#x5c0f;&#x6578;&#x63a1;&#x7528;&#x7684;&#x662f;&#x96d9;&#x7cbe;&#x5ea6;(64&#x4f4d;)&#x8868;&#x793a;&#x7684;&#xff0c;&#x7531;&#x4e09;&#x90e8;&#x5206;&#x7d44;&#x6210;&#xff1a;&#x3000;&#x7b26",{"_index":1896,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["javascript中的小數採用的是雙精度(64",{"_index":1853,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["javascript構建的應用程序的複雜性比語言發展的速度還要快。這種情況迫使開發人員使用javascript",{"_index":2299,"title":{},"body":{"array/good_part.html":{}}}],["javascript遵循iee",{"_index":1850,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["jelli",{"_index":2475,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["jelly&#xff08;&#x679c;&#x51cd;&#xff09;&#x548c",{"_index":2529,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["jessica",{"_index":816,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["join",{"_index":2460,"title":{},"body":{"cases/str.html":{},"cases/str.html#url":{}}}],["jqueri",{"_index":688,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["jquery.extend",{"_index":692,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["js",{"_index":277,"title":{"array/good_part.html":{}},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"this.html":{},"scope.html":{},"performance.html":{},"performance.html#優化原則和方向":{},"math.html":{},"array/array_merge.html":{},"cases/math.html":{},"cases/if.html":{},"operators/typeof.html":{},"operators/typeof.html#null":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["js&#x5169;&#x7a2e;&#x578b;&#x5225",{"_index":1158,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["js&#x5c6c;&#x65bc;&#x975c;&#x614b;&#x4f5c;&#x7528;&#x57df",{"_index":975,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["js&#x662f;&#x55ae;&#x57f7;&#x884c;&#x5e8f",{"_index":1004,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["js&#x6c92;&#x6709;&#x6574;&#x578b;&#x53ea;&#x6709;&#x5c0d;&#x8c61",{"_index":2976,"title":{},"body":{"operators/typeof.html#null":{}}}],["js&#x8a9e;&#x8a00;&#x4e2d;&#x51fd;&#x5f0f;&#x7684;&#x8a2d;&#x8a08;&#xff0c;&#x5fc5;&#x6709;&#x56de;&#x50b3;&#x503c;&#xff0c;&#x6c92;&#x5beb;&#x76f8;&#x7576;&#x65bc;&#x56de;&#x50b3",{"_index":1679,"title":{},"body":{"this.html#bind-apply-call":{}}}],["jsfood.com",{"_index":2511,"title":{},"body":{"function/factory​_factory.html":{}}}],["json",{"_index":472,"title":{"copy.html#轉成-JSON-再轉回來":{},"core.html#JSON":{}},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"F2E/token.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["json&#x6240;&#x6709;&#x7684;&#x5c6c;&#x6027;&#x4e00;&#x5b9a;&#x90fd;&#x662f;&#x5b57;&#x4e32;&#x7684;&#x5f62;&#x5f0f",{"_index":1205,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["json.pars",{"_index":721,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["json.stringify(famili",{"_index":695,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["json是javascript的一個子集，但json",{"_index":719,"title":{},"body":{"core.html":{}}}],["json，這對於在會話之間持久化，通過http或websocket",{"_index":2517,"title":{},"body":{"function/factory​_factory.html":{}}}],["js正则表达式，限1",{"_index":235,"title":{},"body":{"RegExp.html":{}}}],["june",{"_index":2340,"title":{},"body":{"array/array_insert.html":{}}}],["jwt",{"_index":2302,"title":{},"body":{"F2E/token.html":{}}}],["k98zbcemd1ig9dzyynrul",{"_index":1709,"title":{},"body":{"scope.html":{},"variable.html":{},"variable.html#動態型別":{}}}],["key",{"_index":680,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#ES6-Airbnb":{},"array/object_to_array.html":{},"object/object​_keys.html":{},"statements/for.html":{}}}],["key)，for…of",{"_index":3026,"title":{},"body":{"statements/for.html":{}}}],["keydown",{"_index":1745,"title":{},"body":{"performance.html":{}}}],["keydown&#xff1a;&#x6309;&#x4e0b;&#x9375;&#x76e4;&#x9375",{"_index":1822,"title":{},"body":{"performance.html#事件節流":{}}}],["keys(an_obj",{"_index":2646,"title":{},"body":{"object/object​_keys.html":{}}}],["keys(arr",{"_index":2643,"title":{},"body":{"object/object​_keys.html":{}}}],["keys(obj",{"_index":2644,"title":{},"body":{"object/object​_keys.html":{}}}],["keys(obj).map",{"_index":2416,"title":{},"body":{"array/object_to_array.html":{}}}],["keys(types).foreach",{"_index":2650,"title":{},"body":{"object/object​_keys.html":{}}}],["keyup",{"_index":1744,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["keyup&#xff1a;&#x91cb;&#x653e;&#x9375;&#x76e4;&#x9375",{"_index":1823,"title":{},"body":{"performance.html#事件節流":{}}}],["kingdom",{"_index":862,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["knight",{"_index":2240,"title":{},"body":{"array/array_methods.html":{}}}],["knight&apo",{"_index":2276,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["knowledg",{"_index":1874,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["last",{"_index":2681,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["lastest",{"_index":910,"title":{},"body":{"core.html":{}}}],["lastindex",{"_index":2318,"title":{},"body":{"array/array_merge.html":{}}}],["lastmodifi",{"_index":2670,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["laterhello",{"_index":2795,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["layer",{"_index":2492,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["left",{"_index":529,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["length",{"_index":713,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"num.html":{},"num.html#補數字":{},"this.html":{},"this.html#bind-apply-call":{},"performance.html":{},"performance.html#DOM-查詢做緩存":{},"cases/replace.html":{}}}],["length).join",{"_index":1470,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["let&#x4f5c;&#x7528;&#x57df;&#x53ea;&#x5728;for",{"_index":1272,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["let&#x7684;&#x4f5c;&#x7528;&#x57df;&#x5247;&#x662f;&#x5728;&#x5340;&#x584a;(block",{"_index":1407,"title":{},"body":{"core.html#Let":{}}}],["let作用域只在for",{"_index":784,"title":{},"body":{"core.html":{}}}],["let的作用域則是在區塊(block",{"_index":928,"title":{},"body":{"core.html":{}}}],["lexic",{"_index":520,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["lh",{"_index":528,"title":{"core.html#LHS":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["lhs)&#xff0c;&#x5be6;&#x969b;&#x4e0a;&#x5728;&#x6b64;&#x5c31;&#x7121;&#x6cd5;&#x7e7c;&#x7e8c;&#x57f7;&#x884c",{"_index":1017,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["li",{"_index":1737,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["li.innerhtml",{"_index":1740,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["liao",{"_index":699,"title":{},"body":{"core.html":{}}}],["limit",{"_index":2989,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["link",{"_index":85,"title":{},"body":{"ajax.html":{},"cases/str.html":{},"cases/str.html#url":{}}}],["list",{"_index":1736,"title":{"swagger/to-html.html#List-all-pets":{}},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"array/array_method.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["listnod",{"_index":1735,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["listnode.appendchild(frag",{"_index":1742,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["load",{"_index":727,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"performance.html":{}}}],["local",{"_index":420,"title":{},"body":{"closures.html":{},"index.html":{},"index.html#Getting-Started":{},"this.html":{},"this.html#簡易呼叫":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["locat",{"_index":147,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["location.hash",{"_index":81,"title":{},"body":{"ajax.html":{}}}],["location.host",{"_index":72,"title":{},"body":{"ajax.html":{}}}],["location.hostnam",{"_index":70,"title":{},"body":{"ajax.html":{}}}],["location.href",{"_index":47,"title":{},"body":{"ajax.html":{},"url.html":{}}}],["location.pathnam",{"_index":76,"title":{},"body":{"ajax.html":{}}}],["location.port",{"_index":74,"title":{},"body":{"ajax.html":{}}}],["location.protocol",{"_index":69,"title":{},"body":{"ajax.html":{}}}],["location.search",{"_index":79,"title":{},"body":{"ajax.html":{}}}],["locationprovid",{"_index":3064,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["locationprovider.hashprefix",{"_index":3074,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["lodash",{"_index":2410,"title":{},"body":{"array/object_to_array.html":{}}}],["log",{"_index":114,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"num.html":{},"num.html#補數字":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"variable.html":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"cases/if.html":{},"cases/str.html":{},"glossary/hoisting.html":{},"global/promise.html":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/AsyncFunction.html":{},"statements/block.html":{}}}],["log((",{"_index":2911,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{}}}],["log(++a",{"_index":2980,"title":{},"body":{"statements/AsyncFunction.html":{}}}],["log(++a*a",{"_index":562,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["log(a",{"_index":443,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"this.html":{},"this.html#bind-apply-call":{},"operators.html":{},"operators.html#Increment":{},"variable.html":{},"variable.html#Hoisting":{},"array/array_merge.html":{},"glossary/hoisting.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"statements/let.html":{},"statements/let.html#let":{}}}],["log(a.lastest",{"_index":911,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["log(a.n",{"_index":2917,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["log(a.x",{"_index":2919,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["log(a===b",{"_index":1932,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["log(a==b",{"_index":1931,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["log(add10",{"_index":403,"title":{},"body":{"closures.html":{}}}],["log(add5",{"_index":402,"title":{},"body":{"closures.html":{}}}],["log(addf1",{"_index":411,"title":{},"body":{"closures.html":{}}}],["log(an",{"_index":3116,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["log(app",{"_index":918,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["log(arg",{"_index":936,"title":{},"body":{"core.html":{},"core.html#const":{},"core.html#箭頭函數":{}}}],["log(arr",{"_index":1598,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/array_merge.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#拼接兩個陣列":{},"object/create.html":{}}}],["log(arr1",{"_index":2256,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["log(arr2",{"_index":2199,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#sort":{},"array/array_merge.html":{},"array/map.html":{},"array/map.html#map":{}}}],["log(array1.reduce(reduc",{"_index":2225,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["log(arrfilt",{"_index":2245,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["log(arrfn",{"_index":950,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(arrfnr",{"_index":952,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(arrsortpric",{"_index":2250,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["log(averag",{"_index":965,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(b",{"_index":444,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"core.html":{},"core.html#this":{},"core.html#new":{},"scope.html":{},"math.html":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/block.html":{}}}],["log(b.a",{"_index":560,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["log(b.lasttext",{"_index":841,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(bfunc",{"_index":1944,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["log(bibi",{"_index":832,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(c",{"_index":568,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"math.html":{},"math.html#浮點數運算的坑":{},"array/array_merge.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"glossary/hoisting.html":{}}}],["log(c.person",{"_index":759,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["log(callfn",{"_index":674,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["log(cfunc",{"_index":1945,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["log(chihuahua",{"_index":872,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["log(class1.value2",{"_index":2010,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["log(class1.value3",{"_index":2011,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["log(copi",{"_index":2630,"title":{},"body":{"object/assign.html":{}}}],["log(corgi",{"_index":861,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["log(dat",{"_index":844,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(data",{"_index":724,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["log(date.getfulld",{"_index":853,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(dog.prototyp",{"_index":836,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(expressionfn",{"_index":735,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["log(falseyvalu",{"_index":2440,"title":{},"body":{"cases/arr.html":{}}}],["log(famili",{"_index":641,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["log(family.nam",{"_index":640,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["log(family[a",{"_index":642,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["log(familymethod[i",{"_index":651,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["log(firstregexp.test",{"_index":245,"title":{},"body":{"RegExp.html":{}}}],["log(fn",{"_index":422,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["log(fns(addf1",{"_index":425,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["log(fns(f1,f2,f3",{"_index":434,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["log(foo+bar",{"_index":1703,"title":{},"body":{"scope.html":{}}}],["log(foo.bar",{"_index":1554,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["log(found",{"_index":2210,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#find":{}}}],["log(functionc",{"_index":738,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["log(getnam",{"_index":1547,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["log(getobj",{"_index":2654,"title":{},"body":{"object/object​_keys.html":{}}}],["log(givememoney",{"_index":746,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["log(i",{"_index":264,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#Let":{},"operators.html":{},"operators.html#Increment":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["log(id",{"_index":63,"title":{},"body":{"ajax.html":{}}}],["log(iif",{"_index":752,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["log(item",{"_index":1599,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["log(item,index",{"_index":2193,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#forEach":{}}}],["log(j",{"_index":782,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["log(key",{"_index":681,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["log(link",{"_index":2461,"title":{},"body":{"cases/str.html":{},"cases/str.html#url":{}}}],["log(longest",{"_index":2232,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["log(map1",{"_index":2324,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["log(mingmoney",{"_index":777,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{}}}],["log(mingmoney.valu",{"_index":791,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["log(month",{"_index":2342,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["log(mynam",{"_index":2012,"title":{},"body":{"variable.html":{},"variable.html#Hoisting":{}}}],["log(nam",{"_index":753,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#Let":{},"glossary/hoisting.html":{}}}],["log(newarray",{"_index":703,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["log(newarray[i",{"_index":709,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["log(newstr",{"_index":669,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["log(newstr2",{"_index":672,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["log(num",{"_index":550,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["log(num.secondpow",{"_index":843,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(numfn",{"_index":954,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(numfunct",{"_index":956,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(o1",{"_index":2635,"title":{},"body":{"object/assign.html":{},"object/assign.html#合併物件":{}}}],["log(obj",{"_index":878,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["log(obj1",{"_index":450,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{}}}],["log(obj1.bodi",{"_index":463,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{}}}],["log(obj2",{"_index":451,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{}}}],["log(paramet",{"_index":756,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["log(person",{"_index":761,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["log(pick",{"_index":2864,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["log(queu",{"_index":3113,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["log(replacestr",{"_index":2457,"title":{},"body":{"cases/str.html":{}}}],["log(rest",{"_index":2859,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["log(result",{"_index":2218,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/filter.html":{}}}],["log(retarr",{"_index":2376,"title":{},"body":{"cases/replace.html":{}}}],["log(self.mynam",{"_index":806,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["log(sevendaysago",{"_index":2627,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["log(statementfn",{"_index":733,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["log(sum",{"_index":421,"title":{},"body":{"closures.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["log(today",{"_index":2620,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["log(tot",{"_index":963,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(truthyvalu",{"_index":2439,"title":{},"body":{"cases/arr.html":{}}}],["log(typ",{"_index":2651,"title":{},"body":{"object/object​_keys.html":{}}}],["log(uniquelist",{"_index":2188,"title":{},"body":{"array/array_method.html":{}}}],["log(valu",{"_index":1699,"title":{},"body":{"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"global/promise.html":{}}}],["log(value1",{"_index":2009,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["log(wallet",{"_index":907,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["log(wallet.sav",{"_index":902,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["log(whereparamet",{"_index":757,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["log(word",{"_index":3112,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["log(x",{"_index":1940,"title":{},"body":{"operators.html":{},"operators.html#Increment":{},"statements/block.html":{}}}],["log).catch",{"_index":2574,"title":{},"body":{"global/promise.html":{}}}],["log.bind",{"_index":2603,"title":{},"body":{"global/promise.html":{}}}],["logic",{"_index":570,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["longest",{"_index":2226,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["look",{"_index":1512,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["loop",{"_index":2431,"title":{},"body":{"cases/arr.html":{}}}],["loot",{"_index":2604,"title":{},"body":{"global/promise.html":{}}}],["lowercas",{"_index":2449,"title":{},"body":{"cases/str.html":{}}}],["m",{"_index":260,"title":{},"body":{"RegExp.html":{}}}],["main",{"_index":1508,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["make",{"_index":158,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["makeadd",{"_index":397,"title":{},"body":{"closures.html":{}}}],["mani",{"_index":2992,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["map",{"_index":1595,"title":{"array/array_methods.html#map":{},"array/map.html#map":{}},"body":{"this.html":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#Array":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"array/filter.html":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["map()&#x3001;filter()&#x3001;reduc",{"_index":2297,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["map()、filter()、reduc",{"_index":2254,"title":{},"body":{"array/array_methods.html":{}}}],["map/blob/master/js/j",{"_index":1875,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["map1",{"_index":2322,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["march",{"_index":2338,"title":{},"body":{"array/array_insert.html":{}}}],["match",{"_index":2371,"title":{},"body":{"cases/replace.html":{},"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["math",{"_index":1455,"title":{},"body":{"num.html":{},"num.html#取值":{},"num.html#補數字":{}}}],["math.ceil",{"_index":1450,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["math.floor",{"_index":1449,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["math.j",{"_index":1869,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["math.pow",{"_index":1447,"title":{},"body":{"num.html":{}}}],["math.pow()&#x50b3;&#x56de;&#x6307;&#x5b9a;&#x4e58;&#x51aa;&#x6578;&#x7684;&#x57fa;&#x5e95;&#x904b;&#x7b97;&#x5f0f;&#x503c",{"_index":1479,"title":{},"body":{"num.html#取值":{}}}],["math.round",{"_index":1448,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["max",{"_index":2662,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["md5",{"_index":1716,"title":{},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["mdn",{"_index":818,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["meal",{"_index":2503,"title":{},"body":{"function/factory​_factory.html":{}}}],["member",{"_index":633,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["memori",{"_index":2658,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["menuurl",{"_index":2501,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["merg",{"_index":2311,"title":{"array/array_merge.html":{}},"body":{}}],["messag",{"_index":917,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["method",{"_index":1538,"title":{"this.html#物件的方法調用-As-an-object-method":{},"array/array_method.html":{},"array/array_methods.html":{}},"body":{"this.html":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["mingeasycard",{"_index":1562,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["mingmoney",{"_index":776,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{}}}],["mingmoney.decreas",{"_index":790,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["mingmoney.increas",{"_index":789,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["mm",{"_index":848,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["model",{"_index":2179,"title":{},"body":{"F2E/GraphQL.html":{}}}],["modern",{"_index":2411,"title":{},"body":{"array/object_to_array.html":{}}}],["modifi",{"_index":2678,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["modified/if",{"_index":2684,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["modul",{"_index":214,"title":{"es6.html#Module-的加载实现":{}},"body":{"es6.html":{},"es6.html#Module-的加载实现":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["module('swagg",{"_index":3059,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["mom",{"_index":678,"title":{},"body":{"core.html":{},"variable.html":{}}}],["mon",{"_index":634,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["monday",{"_index":2512,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["money",{"_index":646,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#const":{},"this.html":{},"this.html#Closure":{},"this.html#Callback":{}}}],["month",{"_index":2336,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["monther",{"_index":677,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["months.splic",{"_index":2341,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["more",{"_index":1534,"title":{"index.html#More-Informations":{}},"body":{"index.html":{},"index.html#More-Informations":{}}}],["move",{"_index":864,"title":{},"body":{"core.html":{},"object/create.html":{}}}],["move&apo",{"_index":1349,"title":{},"body":{"core.html#繼承":{}}}],["movi",{"_index":2238,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["mozilla",{"_index":1929,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["msg",{"_index":2910,"title":{},"body":{"operators/precedence.html":{}}}],["music",{"_index":2242,"title":{},"body":{"array/array_methods.html":{}}}],["mutationobserver,promise.then",{"_index":2606,"title":{},"body":{"global/promise.html":{}}}],["mycb",{"_index":802,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["myeasycard",{"_index":1567,"title":{},"body":{"this.html":{},"this.html#Closure":{},"this.html#Callback":{}}}],["myfamili",{"_index":637,"title":{},"body":{"core.html":{}}}],["myfamily&apo",{"_index":1135,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["myfirstpromis",{"_index":2578,"title":{},"body":{"global/promise.html":{}}}],["myfirstpromise.then",{"_index":2579,"title":{},"body":{"global/promise.html":{}}}],["myfunct",{"_index":2940,"title":{},"body":{"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["mynam",{"_index":544,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#this":{},"variable.html":{},"variable.html#Hoisting":{}}}],["n",{"_index":2915,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["nam",{"_index":592,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["name",{"_index":392,"title":{},"body":{"closures.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#Let":{},"core.html#const":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#Hoisting":{},"glossary/hoisting.html":{},"global/function.html":{},"global/function.html#bind":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"statements/block.html":{}}}],["name&#x4e0d;&#x5c6c;&#x65bc;&#x9663;&#x5217;&#x88e1;&#x9762;&#x7684;&#x9577;&#x5ea6",{"_index":1191,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["name&#x653e;&#x5165;&#x8a18;&#x61b6;&#x9ad4",{"_index":982,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["name&#xff09;&#xff0c;&#x5728;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x4e2d;&#x53ef;&#x7701;&#x7565;&#x5b83;&#xff0c;&#x5f9e;&#x800c;&#x5275;&#x5efa;&#x533f;&#x540d;&#x51fd;&#x6578;&#xff08;anonym",{"_index":2947,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["name&apos;",{"_index":1150,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["name'",{"_index":659,"title":{},"body":{"core.html":{}}}],["name1",{"_index":1998,"title":{},"body":{"variable.html":{}}}],["name2",{"_index":2000,"title":{},"body":{"variable.html":{}}}],["name3",{"_index":2002,"title":{},"body":{"variable.html":{}}}],["name），在函數表達式中可省略它，從而創建匿名函數（anonym",{"_index":2939,"title":{},"body":{"operators/function.html":{}}}],["nan",{"_index":588,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"this.html":{},"this.html#bind-apply-call":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Adding-Strings-and-Numbers":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["nan&#x3001",{"_index":1973,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["nan&#xff0c;&#x7d50;&#x679c;&#x4e0d;&#x7b49;&#x50f9;&#x65bc;true&#xff0c;&#x4e0d;&#x8fd4;&#x56de;&#x3002",{"_index":2405,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["nan2",{"_index":1955,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["nan，結果不等價於tru",{"_index":2382,"title":{},"body":{"array/filter.html":{}}}],["nativ",{"_index":2412,"title":{},"body":{"array/object_to_array.html":{}}}],["nest",{"_index":2425,"title":{},"body":{"cases/if.html":{}}}],["network",{"_index":731,"title":{},"body":{"core.html":{},"http/caching.html":{},"http/caching.html#強緩存":{}}}],["new",{"_index":15,"title":{"core.html#new":{}},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"array/array_method.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/typeof.html":{}}}],["new&#x51fa;&#x4f86;&#x7684",{"_index":2973,"title":{},"body":{"operators/typeof.html#null":{}}}],["newarray",{"_index":701,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["newarray.nam",{"_index":706,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["newarray.push",{"_index":705,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["newfamili",{"_index":679,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily.member.oth",{"_index":686,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily.nam",{"_index":684,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily2",{"_index":691,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily3",{"_index":693,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily4",{"_index":697,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily4.member.oth",{"_index":700,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily4.nam",{"_index":698,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily[key",{"_index":683,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfunc",{"_index":1943,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["newstr",{"_index":667,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["newstr.nam",{"_index":668,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["newstr2",{"_index":670,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["newstr2.nam",{"_index":671,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["nginx",{"_index":2028,"title":{},"body":{"F2E/header.html":{}}}],["ngsanit",{"_index":3060,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["none",{"_index":2679,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["note",{"_index":1575,"title":{},"body":{"this.html":{},"this.html#Callback":{}}}],["noth",{"_index":2913,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{}}}],["nothoist",{"_index":2942,"title":{},"body":{"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["now",{"_index":1517,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["npm",{"_index":1515,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["null",{"_index":27,"title":{"operators/typeof.html#null":{}},"body":{"ajax.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#this":{},"this.html":{},"this.html#簡易呼叫":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"array/array_insert.html":{},"array/array_insert.html#example":{},"cases/if.html":{},"operators/typeof.html":{},"operators/typeof.html#null":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["null,0,1,2",{"_index":1552,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["null不是object",{"_index":2956,"title":{},"body":{"operators/typeof.html":{}}}],["num",{"_index":548,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#this":{},"core.html#new":{},"core.html#箭頭函數":{},"num.html":{},"num.html#補數字":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["num).slic",{"_index":1471,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["num,coin",{"_index":744,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["number",{"_index":549,"title":{"num.html":{},"operators.html#Adding-Strings-and-Numbers":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#this":{},"core.html#new":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"variable.html":{},"variable.html#動態型別":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{}}}],["number([10",{"_index":593,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["number1",{"_index":817,"title":{},"body":{"core.html":{}}}],["number{1",{"_index":1306,"title":{},"body":{"core.html#this":{}}}],["numfn",{"_index":953,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["numfunct",{"_index":955,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["nums.length",{"_index":964,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["nums.reduc",{"_index":960,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["o(1",{"_index":3087,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["o(1)&#xff1c;o(log2n)&#xff1c;o(n)&#xff1c;o(nlog2n)&#xff1c;o(n2)&#xff1c;o(n3)&#xff1c;&#x2026;&#xff1c;o(2n)&#xff1c;o(n",{"_index":3140,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["o(1)＜o(log2n)＜o(n)＜o(nlog2n)＜o(n2)＜o(n3)＜…＜o(2n)＜o(n",{"_index":3094,"title":{},"body":{"string/queue.html":{}}}],["o(2n)&#x548c;o(n!)&#x7a31;&#x70ba",{"_index":3143,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["o(2n)和o(n",{"_index":3096,"title":{},"body":{"string/queue.html":{}}}],["o(log2n)&#x3001;o(n)&#x3001;o(nlog2n)&#x3001;o(n2)&#x548c;o(n3)&#x7a31;&#x70ba",{"_index":3141,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["o(log2n)、o(n)、o(nlog2n)、o(n2)和o(n3",{"_index":3095,"title":{},"body":{"string/queue.html":{}}}],["o(n",{"_index":3086,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{}}}],["o(n+n2)=o(n2",{"_index":3093,"title":{},"body":{"string/queue.html":{}}}],["o1",{"_index":2631,"title":{},"body":{"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{}}}],["o2",{"_index":2632,"title":{},"body":{"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{}}}],["o3",{"_index":2633,"title":{},"body":{"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{}}}],["obj",{"_index":877,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#bind-apply-call":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["obj.a",{"_index":884,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["obj.callnam",{"_index":1541,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#立即函式：":{},"this.html#bind-apply-call":{}}}],["obj.callnamearrow",{"_index":1593,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["obj.fn",{"_index":1548,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["obj.getnam",{"_index":1546,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["obj.watch.callnam",{"_index":1542,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{}}}],["obj.x",{"_index":1544,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{}}}],["obj1",{"_index":446,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj1.a",{"_index":457,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["obj1.b",{"_index":454,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["obj1.bodi",{"_index":461,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["obj1.c",{"_index":458,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["obj1.fun",{"_index":479,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj1叫做obj2",{"_index":452,"title":{},"body":{"copy.html":{}}}],["obj1跟obj2",{"_index":465,"title":{},"body":{"copy.html":{}}}],["obj2",{"_index":448,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj2.b",{"_index":449,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{}}}],["obj2.bodi",{"_index":464,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj2.body.a",{"_index":462,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj2.b也不會影響obj1",{"_index":471,"title":{},"body":{"copy.html":{}}}],["obj2.b改成100",{"_index":453,"title":{},"body":{"copy.html":{}}}],["obj2.fun",{"_index":480,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj2會長得跟obj1",{"_index":470,"title":{},"body":{"copy.html":{}}}],["obj[key",{"_index":2417,"title":{},"body":{"array/object_to_array.html":{}}}],["object",{"_index":468,"title":{"this.html#物件的方法調用-As-an-object-method":{},"array/object_to_array.html":{},"object/assign.html":{}},"body":{"copy.html":{},"copy.html#Object-assign":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"this.html":{},"this.html#bind-apply-call":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"array/object_to_array.html":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/object​_keys.html":{},"global/function.html":{},"global/function.html#call、apply、bind":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["object.assign",{"_index":466,"title":{"copy.html#Object-assign":{}},"body":{"copy.html":{},"copy.html#Object-assign":{},"object/assign.html":{}}}],["object.cr",{"_index":854,"title":{"object/create.html":{}},"body":{"core.html":{},"core.html#繼承":{},"object/create.html":{}}}],["object.defineproperti",{"_index":879,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["object.defineproperty(&#x7269;&#x4ef6",{"_index":1365,"title":{},"body":{"core.html#屬性特徵":{}}}],["object.fn",{"_index":795,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["object.freez",{"_index":890,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["object.getownpropertydescriptor",{"_index":905,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["object.i",{"_index":1928,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["object.key",{"_index":3025,"title":{},"body":{"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["object.preventextens",{"_index":888,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["object.prototype.nam",{"_index":2957,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["object.s",{"_index":889,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["object​.key",{"_index":2641,"title":{"object/object​_keys.html":{}},"body":{"object/object​_keys.html":{}}}],["ok",{"_index":643,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["omtrdc.com",{"_index":2045,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["on",{"_index":2430,"title":{},"body":{"cases/arr.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["onclick",{"_index":823,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["open",{"_index":1529,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["oper",{"_index":1925,"title":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["operators/operator_preced",{"_index":561,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["opt",{"_index":2346,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["option",{"_index":2668,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["opts.unshift",{"_index":2350,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["order",{"_index":148,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{},"function/factory​_factory.html":{}}}],["oreq",{"_index":725,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["oreq.addeventlisten",{"_index":726,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["oreq.open",{"_index":728,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["oreq.send",{"_index":730,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["origin",{"_index":90,"title":{},"body":{"ajax.html":{}}}],["other",{"_index":636,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["outer",{"_index":3010,"title":{},"body":{"statements/block.html":{}}}],["output",{"_index":281,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/map.html":{},"array/map.html#map":{},"object/create.html":{},"statements/block.html":{}}}],["output(i",{"_index":282,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{}}}],["p",{"_index":947,"title":{},"body":{"core.html":{},"performance.html":{},"global/promise.html":{}}}],["p1",{"_index":2372,"title":{},"body":{"cases/replace.html":{},"global/promise.html":{}}}],["p1.length",{"_index":2375,"title":{},"body":{"cases/replace.html":{}}}],["p2",{"_index":2373,"title":{},"body":{"cases/replace.html":{},"global/promise.html":{}}}],["p3",{"_index":2582,"title":{},"body":{"global/promise.html":{}}}],["p3]).then",{"_index":2585,"title":{},"body":{"global/promise.html":{}}}],["padding3",{"_index":1462,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["padding4",{"_index":1468,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["paddingint",{"_index":1474,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["paddingpoint",{"_index":1472,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["page",{"_index":2995,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["para1",{"_index":809,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["para2",{"_index":810,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["param",{"_index":2013,"title":{},"body":{"variable.html":{},"variable.html#Hoisting":{},"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["paramet",{"_index":755,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["pars",{"_index":474,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["parsefloat",{"_index":1833,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["parsefloat(1.4000000000000001.toprecision(12",{"_index":1834,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["parseint",{"_index":1597,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["parseint(&#x2018;1&#x2019",{"_index":2398,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["parseint(&#x2018;2&#x2019",{"_index":2400,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["parseint(&#x2018;3&#x2019",{"_index":2406,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["parseint(&apos;1&apo",{"_index":1684,"title":{},"body":{"this.html#bind-apply-call":{}}}],["parseint(&apos;11&apo",{"_index":1691,"title":{},"body":{"this.html#bind-apply-call":{}}}],["parseint(&apos;2&apo",{"_index":1685,"title":{},"body":{"this.html#bind-apply-call":{}}}],["parseint(&apos;3&apo",{"_index":1686,"title":{},"body":{"this.html#bind-apply-call":{}}}],["parseint('1",{"_index":1600,"title":{},"body":{"this.html":{}}}],["parseint('11",{"_index":1604,"title":{},"body":{"this.html":{}}}],["parseint('2",{"_index":1601,"title":{},"body":{"this.html":{}}}],["parseint('3",{"_index":1602,"title":{},"body":{"this.html":{}}}],["parseint(item",{"_index":1606,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["parseint(‘1",{"_index":2378,"title":{},"body":{"array/filter.html":{}}}],["parseint(‘2",{"_index":2380,"title":{},"body":{"array/filter.html":{}}}],["parseint(‘3",{"_index":2383,"title":{},"body":{"array/filter.html":{}}}],["parser",{"_index":517,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["parti",{"_index":2059,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["pass",{"_index":279,"title":{},"body":{"asynchronous.html":{},"array/map.html":{},"array/map.html#map":{}}}],["passfn",{"_index":412,"title":{},"body":{"closures.html":{}}}],["passfn(addf1",{"_index":416,"title":{},"body":{"closures.html":{}}}],["patch&#xff1a;&#x66f4;&#x65b0;&#xff08;update&#xff09;&#xff0c;&#x901a;&#x5e38;&#x662f;&#x90e8;&#x5206;&#x66f4;&#x65b0",{"_index":170,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["patch：更新（upd",{"_index":130,"title":{},"body":{"RESTfulAPI.html":{}}}],["path",{"_index":1990,"title":{},"body":{"url.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["path/to/mymodule.j",{"_index":216,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{}}}],["pattern",{"_index":2424,"title":{},"body":{"cases/if.html":{}}}],["pend",{"_index":2575,"title":{},"body":{"global/promise.html":{}}}],["perform",{"_index":1711,"title":{"performance.html":{}},"body":{}}],["person",{"_index":654,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#const":{},"scope.html":{}}}],["person.callsomeon",{"_index":1702,"title":{},"body":{"scope.html":{}}}],["person.money",{"_index":932,"title":{},"body":{"core.html":{},"core.html#const":{}}}],["person.nam",{"_index":930,"title":{},"body":{"core.html":{},"core.html#const":{}}}],["person2",{"_index":655,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["pet",{"_index":2988,"title":{"swagger/to-html.html#List-all-pets":{},"swagger/to-html.html#Create-a-pet":{},"swagger/to-html.html#Info-for-a-specific-pet":{}},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#List-all-pets":{},"swagger/to-html.html#Create-a-pet":{}}}],["petid",{"_index":3003,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["pets/{petid",{"_index":3002,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#Info-for-a-specific-pet":{}}}],["petstor",{"_index":2985,"title":{"swagger/to-html.html#undefined":{}},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["pick",{"_index":2863,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["picked(obj",{"_index":2870,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["pleas",{"_index":1536,"title":{},"body":{"index.html":{},"index.html#More-Informations":{}}}],["plist",{"_index":1730,"title":{},"body":{"performance.html":{},"performance.html#DOM-查詢做緩存":{}}}],["plist.length",{"_index":1731,"title":{},"body":{"performance.html":{},"performance.html#DOM-查詢做緩存":{}}}],["plu",{"_index":1503,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["plugin",{"_index":2048,"title":{},"body":{"F2E/cookie.html":{}}}],["plugins)&#x3002",{"_index":2113,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["polyfil",{"_index":876,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["port",{"_index":1987,"title":{},"body":{"url.html":{}}}],["post",{"_index":2999,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#Create-a-pet":{}}}],["post&#xff1a;&#x65b0;&#x5efa;&#xff08;create&#xff09",{"_index":167,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["postfix",{"_index":1954,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["post：新建（creat",{"_index":127,"title":{},"body":{"RESTfulAPI.html":{}}}],["pow",{"_index":1456,"title":{},"body":{"num.html":{},"num.html#取值":{},"num.html#補數字":{}}}],["practic",{"_index":157,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["practices.html",{"_index":162,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["pragma",{"_index":2660,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["precis",{"_index":1453,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["precisionceil",{"_index":1460,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["precisionfloor",{"_index":1458,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["precisionround",{"_index":1452,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["prevent",{"_index":3071,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["preventextens",{"_index":885,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["preview",{"_index":1527,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["preview.jpg",{"_index":1724,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["preview.png是預覽圖片，比較小，加載很快，而且很多圖片都共用這個preview.png，加載一次即可。待頁面下拉，圖片顯示出來時，再去替換src",{"_index":1721,"title":{},"body":{"performance.html":{}}}],["price",{"_index":772,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#屬性特徵":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["primit",{"_index":278,"title":{},"body":{"asynchronous.html":{}}}],["private&#xff1a;&#x5c08;&#x7528;&#x65bc;&#x500b;&#x4eba;&#x7684;&#x7de9;&#x5b58;&#xff0c;&#x4e2d;&#x9593;&#x4ee3;&#x7406;&#x3001;cdn",{"_index":2709,"title":{},"body":{"http/caching.html#強緩存":{}}}],["private：專用於個人的緩存，中間代理、cdn",{"_index":2665,"title":{},"body":{"http/caching.html":{}}}],["problem",{"_index":943,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["produc",{"_index":518,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["product",{"_index":2235,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["program",{"_index":2423,"title":{},"body":{"cases/if.html":{}}}],["project",{"_index":1494,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["promis",{"_index":116,"title":{"global/promise.html":{}},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{}}}],["promise.al",{"_index":2509,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["promise.rac",{"_index":2609,"title":{},"body":{"global/promise.html":{}}}],["promise.then",{"_index":122,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{}}}],["promise​.al",{"_index":2580,"title":{},"body":{"global/promise.html":{}}}],["propagating_right_shift",{"_index":436,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["properti",{"_index":366,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#屬性特徵":{},"url.html":{}}}],["propos",{"_index":2862,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["proto",{"_index":603,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["protocol",{"_index":1984,"title":{},"body":{"url.html":{}}}],["prototyp",{"_index":833,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{}}}],["prototype.getfulld",{"_index":845,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["prototype.lasttext",{"_index":840,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["prototype.push.bind(a",{"_index":1587,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["prototype.secondpow",{"_index":842,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["provid",{"_index":3063,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["provide.decorator('$anchorscrol",{"_index":3066,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["provision",{"_index":2303,"title":{"F2E/token.html#provisional-headers-are-shown":{}},"body":{"F2E/token.html":{},"F2E/token.html#provisional-headers-are-shown":{}}}],["proxysett",{"_index":923,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["ps",{"_index":2792,"title":{},"body":{"global/function.html":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["public",{"_index":2676,"title":{},"body":{"http/caching.html":{}}}],["public&#xff1a;&#x97ff;&#x61c9;&#x53ef;&#x4ee5;&#x88ab;&#x4e2d;&#x9593;&#x4ee3;&#x7406;&#x3001;cdn",{"_index":2711,"title":{},"body":{"http/caching.html#強緩存":{}}}],["public：響應可以被中間代理、cdn",{"_index":2666,"title":{},"body":{"http/caching.html":{}}}],["push(examplevalu",{"_index":2438,"title":{},"body":{"cases/arr.html":{}}}],["push、pop、shift、unshift、reserve、sort、splic",{"_index":2326,"title":{},"body":{"array/array_insert.html":{}}}],["put",{"_index":2454,"title":{},"body":{"cases/str.html":{}}}],["put&#xff1a;&#x66f4;&#x65b0;&#xff08;update&#xff09",{"_index":169,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["put：更新（upd",{"_index":129,"title":{},"body":{"RESTfulAPI.html":{}}}],["qa",{"_index":664,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["queri",{"_index":2181,"title":{},"body":{"F2E/GraphQL.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["queryselector",{"_index":946,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["querystr",{"_index":49,"title":{},"body":{"ajax.html":{}}}],["queue",{"_index":3077,"title":{"string/queue.html":{}},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["queue.join",{"_index":3114,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["queue.unshift(word",{"_index":3111,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["quickli",{"_index":1497,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["quotes.map",{"_index":2868,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["r\\t\\n\\f",{"_index":254,"title":{},"body":{"RegExp.html":{}}}],["raact",{"_index":2228,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["radix",{"_index":1607,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["radix&#x7684;&#x503c;&#x70ba;2&#xff0c;&#x9019;&#x5c31;&#x610f;&#x5473;&#x8457;&#x5b57;&#x7b26;&#x4e32;&#x5c07;&#x88ab;&#x89e3;&#x6790;&#x6210;&#x5b57;&#x7bc0;&#x6578;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x50c5;&#x50c5;&#x5305;&#x542b;&#x6578;&#x503c;0&#x548c;1&#x3002;parseint&#x7684;&#x898f;&#x7bc4;&#x6307;&#x51fa;&#xff0c;&#x5b83;&#x50c5;&#x5617;&#x8a66;&#x5206;&#x6790;&#x7b2c;&#x4e00;&#x500b;&#x5b57;&#x7b26;&#x7684;&#x5de6;&#x5074;&#x3002;&#x9019;&#x500b;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x7b2c;&#x4e00;&#x500b;&#x5b57;&#x7b26;&#x662f;&#x201c;3&#x201d;&#xff0c;&#x5b83;&#x4e26;&#x4e0d;&#x662f;&#x57fa;&#x790e;&#x57fa;&#x6578;2&#x7684;&#x4e00;&#x500b;&#x6709;&#x6548;&#x6578;&#x5b57;&#x3002;&#x6240;&#x4ee5;&#x9019;&#x500b;&#x5b50;&#x5b57;&#x7b26;&#x4e32;&#x5c07;&#x88ab;&#x89e3;&#x6790;&#x70ba;&#x7a7a;&#x3002;&#x5982;&#x679c;&#x5b50;&#x5b57;&#x7b26;&#x4e32;&#x88ab;&#x89e3;&#x6790;&#x6210;&#x7a7a;&#x4e86;&#xff0c;&#x51fd;&#x6578;&#x5c07;&#x8fd4;&#x56de;&#x70ba;nan&#x3002",{"_index":2407,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["radix的值為2，這就意味著字符串將被解析成字節數，也就是僅僅包含數值0和1。parseint的規範指出，它僅嘗試分析第一個字符的左側。這個字符串的第一個字符是“3”，它並不是基礎基數2的一個有效數字。所以這個子字符串將被解析為空。如果子字符串被解析成空了，函數將返回為nan",{"_index":2384,"title":{},"body":{"array/filter.html":{}}}],["rail",{"_index":2079,"title":{},"body":{"F2E/cookie.html":{}}}],["rails&#x4f86;&#x8aaa;&#xff0c",{"_index":2169,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["rd",{"_index":663,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["re",{"_index":123,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["reactivesett",{"_index":924,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["read",{"_index":365,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#屬性特徵":{}}}],["real",{"_index":2033,"title":{},"body":{"F2E/header.html":{}}}],["realsrc",{"_index":1722,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["realsrc&apo",{"_index":1790,"title":{},"body":{"performance.html#懶加載":{}}}],["rect",{"_index":2855,"title":{},"body":{"object/create.html":{}}}],["rect.mov",{"_index":2857,"title":{},"body":{"object/create.html":{}}}],["rectangl",{"_index":2850,"title":{},"body":{"object/create.html":{}}}],["rectangle.prototyp",{"_index":2852,"title":{},"body":{"object/create.html":{}}}],["rectangle.prototype.constructor",{"_index":2854,"title":{},"body":{"object/create.html":{}}}],["red",{"_index":2477,"title":{},"body":{"function/factory​_factory.html":{}}}],["reduc",{"_index":367,"title":{"array/array_methods.html#reduce":{}},"body":{"arrowFunction.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["ref",{"_index":65,"title":{},"body":{"ajax.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/typeof.html#null":{}}}],["refer",{"_index":153,"title":{"RESTfulAPI.html#References":{},"operators.html#references":{},"F2E/GraphQL.html#References":{},"http/caching.html#References":{},"global/function.html#References":{},"string/queue.html#References":{}},"body":{"RESTfulAPI.html":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"this.html":{},"this.html#bind-apply-call":{},"scope.html":{},"operators.html":{},"operators.html#Increment":{},"F2E/header.html":{},"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"F2E/GraphQL.html":{},"global/promise.html":{},"http/caching.html":{},"global/function.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"string/queue.html":{}}}],["referenceerror",{"_index":532,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#箭頭函數":{},"scope.html":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"variable.html":{},"variable.html#Hoisting":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/block.html":{},"statements/let.html":{},"statements/let.html#let":{}}}],["referr",{"_index":2025,"title":{},"body":{"F2E/header.html":{}}}],["reg1",{"_index":236,"title":{},"body":{"RegExp.html":{}}}],["regexp",{"_index":233,"title":{"RegExp.html":{}},"body":{}}],["reject",{"_index":121,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{}}}],["remot",{"_index":2030,"title":{},"body":{"F2E/header.html":{}}}],["removefirst",{"_index":3100,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["removelast",{"_index":3102,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["replac",{"_index":2366,"title":{"cases/replace.html":{}},"body":{}}],["replacestr",{"_index":2455,"title":{},"body":{"cases/str.html":{}}}],["repositori",{"_index":1519,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["request",{"_index":102,"title":{},"body":{"ajax.html":{},"F2E/GraphQL.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["request的head",{"_index":100,"title":{},"body":{"ajax.html":{}}}],["request）的頭信息裡面，設計了一個refer",{"_index":2026,"title":{},"body":{"F2E/header.html":{}}}],["requir",{"_index":1500,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["res.set",{"_index":2673,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["resolv",{"_index":118,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{}}}],["resolve,reject",{"_index":117,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{}}}],["resourc",{"_index":91,"title":{},"body":{"ajax.html":{}}}],["respons",{"_index":30,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"http/caching.html":{},"http/caching.html#強緩存":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["rest",{"_index":124,"title":{"RESTfulAPI.html":{}},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{},"F2E/GraphQL.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["result",{"_index":361,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"index.html":{},"index.html#Getting-Started":{},"array/array_methods.html":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/filter.html":{},"cases/if.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{}}}],["result.json",{"_index":2505,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["retarr",{"_index":2369,"title":{},"body":{"cases/replace.html":{}}}],["retarr.push",{"_index":2374,"title":{},"body":{"cases/replace.html":{}}}],["retriev",{"_index":3004,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["return",{"_index":359,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"this.html":{},"this.html#簡易呼叫":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"operators.html":{},"operators.html#Increment":{},"array/array_methods.html":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"array/filter.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/arr.html":{},"cases/str.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"statements/block.html":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["revalid",{"_index":2667,"title":{},"body":{"http/caching.html":{}}}],["revalidate&#xff1a;&#x5728;&#x7de9;&#x5b58;&#x904e;&#x671f;&#x524d;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#xff0c;&#x904e;&#x671f;&#x5f8c;&#x5fc5;&#x9808;&#x5411;&#x670d;&#x52d9;&#x5668;&#x9a57;&#x8b49",{"_index":2713,"title":{},"body":{"http/caching.html#強緩存":{}}}],["reverse().join",{"_index":3119,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["reverseword",{"_index":3104,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["rh",{"_index":536,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["right",{"_index":3105,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["ring",{"_index":2241,"title":{},"body":{"array/array_methods.html":{}}}],["rings&apo",{"_index":2279,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["round(numb",{"_index":1457,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["rout",{"_index":2176,"title":{},"body":{"F2E/GraphQL.html":{}}}],["rrefer",{"_index":1751,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["run",{"_index":1533,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["s",{"_index":253,"title":{},"body":{"RegExp.html":{},"index.html":{},"index.html#Getting-Started":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["s+/g",{"_index":3118,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["s.charat(left",{"_index":3108,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["s.charat(right",{"_index":3109,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["s.length",{"_index":3106,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["s.trim().replac",{"_index":3117,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["safari",{"_index":3013,"title":{},"body":{"statements/block.html":{}}}],["sampl",{"_index":1995,"title":{},"body":{"url.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["save",{"_index":897,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["save(pric",{"_index":896,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["sayhello",{"_index":2794,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["schema",{"_index":2984,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["scoop",{"_index":2478,"title":{},"body":{"function/factory​_factory.html":{}}}],["scope",{"_index":418,"title":{"scope.html":{}},"body":{"closures.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"scope.html":{}}}],["script",{"_index":87,"title":{},"body":{"ajax.html":{},"es6.html":{},"es6.html#Module-的加载实现":{},"performance.html":{},"performance.html#懶加載":{}}}],["script標籤,settimeout,setinterval,setimmediate,requestanimationfram",{"_index":2605,"title":{},"body":{"global/promise.html":{}}}],["seal",{"_index":886,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["sec",{"_index":2796,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["second",{"_index":937,"title":{},"body":{"core.html":{}}}],["see",{"_index":144,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{},"index.html":{},"index.html#Getting-Started":{}}}],["seed",{"_index":1493,"title":{"index.html":{},"index.html#hexo-theme-doc-seed":{}},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{}}}],["seed.git",{"_index":1523,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["select_titl",{"_index":2351,"title":{},"body":{"array/array_insert.html":{}}}],["self",{"_index":804,"title":{},"body":{"core.html":{},"core.html#this":{},"global/function.html":{},"global/function.html#bind":{}}}],["self.nam",{"_index":2804,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["semicolon",{"_index":541,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["server",{"_index":1528,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{},"F2E/cookie.html":{},"F2E/GraphQL.html":{}}}],["server&#x7aef",{"_index":2155,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["server收到了這個request",{"_index":105,"title":{},"body":{"ajax.html":{}}}],["session",{"_index":2060,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"F2E/token.html":{}}}],["session&#x53c8;&#x662f;&#x4ec0;&#x9ebc;&#x5462",{"_index":2134,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["session&#x6709;&#x9ede;&#x985e;&#x4f3c;&#x6703;&#x8a71;&#x7684;&#x6982;&#x5ff5;&#xff0c;session&#x6a5f;&#x5236;&#x662f;&#x4e00;&#x7a2e;&#x670d;&#x52d9;&#x5668;&#x7aef;&#x7684;&#x6a5f;&#x5236;&#x3002",{"_index":2138,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["session並不是一個很明確實體的機制，算是一個概念，只要符合概念所實作出來的功能都可以被叫做sess",{"_index":2081,"title":{},"body":{"F2E/cookie.html":{}}}],["session也會消失的錯覺，但本質上並非如此，就像會員卡，除非你主動提出銷卡，否則店家不會刪除顧客資料，這件事情對session來說也如出一轍，除非通知server刪除session，否則serv",{"_index":2071,"title":{},"body":{"F2E/cookie.html":{}}}],["session實現方式是由cooki",{"_index":2080,"title":{},"body":{"F2E/cookie.html":{}}}],["session有點類似會話的概念，sess",{"_index":2061,"title":{},"body":{"F2E/cookie.html":{}}}],["session機制都使用會話cookie來保存sess",{"_index":2072,"title":{},"body":{"F2E/cookie.html":{}}}],["session的時候，服務器首先檢查這個客戶端的請求裡是否有包含了sess",{"_index":2064,"title":{},"body":{"F2E/cookie.html":{}}}],["session的機制都被框架所實現了，以rubi",{"_index":2078,"title":{},"body":{"F2E/cookie.html":{}}}],["set",{"_index":895,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"array/array_method.html":{}}}],["sethead",{"_index":2671,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["setinterv",{"_index":269,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{}}}],["setter",{"_index":891,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["setter改變tot",{"_index":901,"title":{},"body":{"core.html":{}}}],["settimeout",{"_index":115,"title":{"asynchronous.html#setTimeout":{}},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#this":{},"this.html":{},"this.html#bind-apply-call":{},"performance.html":{},"performance.html#事件節流":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{}}}],["settimeout()&#x3002",{"_index":300,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["settimeout()內部回調運行的時候，主進程已經運行完畢了，此時i=5，所以輸出5",{"_index":268,"title":{},"body":{"asynchronous.html":{}}}],["settimeout(resolv",{"_index":2583,"title":{},"body":{"global/promise.html":{}}}],["settimeout包裝成promise、等待所有settimout的callback",{"_index":2610,"title":{},"body":{"global/promise.html":{}}}],["sevendaysago",{"_index":2624,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["sevendaysago).toisostring().substr",{"_index":2626,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["shallow",{"_index":441,"title":{},"body":{"copy.html":{}}}],["shape",{"_index":2847,"title":{},"body":{"object/create.html":{}}}],["shape.cal",{"_index":2851,"title":{},"body":{"object/create.html":{}}}],["shape.prototype.mov",{"_index":2848,"title":{},"body":{"object/create.html":{}}}],["share",{"_index":92,"title":{},"body":{"ajax.html":{}}}],["shim",{"_index":921,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["show",{"_index":1506,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["shown",{"_index":2304,"title":{"F2E/token.html#provisional-headers-are-shown":{}},"body":{"F2E/token.html":{},"F2E/token.html#provisional-headers-are-shown":{}}}],["shown&#x7684;&#x8fc7;&#x7a0b",{"_index":2306,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["side",{"_index":531,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"F2E/GraphQL.html":{}}}],["signedcooki",{"_index":2076,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["simpl",{"_index":799,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["size",{"_index":830,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["skeleton",{"_index":1495,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["slice",{"_index":1475,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["slice和substr",{"_index":1469,"title":{},"body":{"num.html":{}}}],["small",{"_index":866,"title":{},"body":{"core.html":{}}}],["social",{"_index":2047,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["solut",{"_index":2413,"title":{},"body":{"array/object_to_array.html":{}}}],["someon",{"_index":525,"title":{},"body":{"core.html":{}}}],["someth",{"_index":2912,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{}}}],["son",{"_index":720,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["sort",{"_index":2211,"title":{"array/array_methods.html#sort":{}},"body":{"array/array_methods.html":{}}}],["sourc",{"_index":794,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["span",{"_index":1840,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["specif",{"_index":3001,"title":{"swagger/to-html.html#Info-for-a-specific-pet":{}},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["splice",{"_index":2335,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["split",{"_index":54,"title":{},"body":{"ajax.html":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["spread",{"_index":2330,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#拼接兩個陣列":{}}}],["src",{"_index":215,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{},"performance.html":{},"performance.html#懶加載":{}}}],["src=./foo.js/script",{"_index":221,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{}}}],["src=xxx",{"_index":84,"title":{},"body":{"ajax.html":{}}}],["ssr",{"_index":1719,"title":{},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["stage",{"_index":2860,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["start",{"_index":1511,"title":{"index.html#Getting-Started":{}},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["stat",{"_index":2672,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["stateless",{"_index":2037,"title":{},"body":{"F2E/cookie.html":{}}}],["statement",{"_index":537,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["statement&#xff09;&#xff08;&#x8a73;&#x60c5;&#x67e5;&#x770b;&#x51fd;&#x6578;&#x8072;&#x660e;&#xff09;&#xff0c;&#x4e26;&#x4e14;&#x5169;&#x8005;&#x64c1;&#x6709;&#x5e7e;&#x4e4e;&#x76f8;&#x540c;&#x7684;&#x8a9e;&#x6cd5;&#x3002;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x8207;&#x51fd;&#x6578;&#x8072;&#x660e;&#x7684;&#x6700;&#x4e3b;&#x8981;&#x5340;&#x5225;&#x662f;&#x51fd;&#x6578;&#x540d;&#x7a31;&#xff08;funct",{"_index":2946,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["statementfn",{"_index":732,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["statement）（詳情查看函數聲明），並且兩者擁有幾乎相同的語法。函數表達式與函數聲明的最主要區別是函數名稱（funct",{"_index":2938,"title":{},"body":{"operators/function.html":{}}}],["statu",{"_index":31,"title":{},"body":{"ajax.html":{},"object/object​_keys.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["status=1&amp;type=1",{"_index":2884,"title":{},"body":{"statements/if...else.html":{}}}],["status=1&amp;type=2",{"_index":2885,"title":{},"body":{"statements/if...else.html":{}}}],["status=2&amp;type=1",{"_index":2886,"title":{},"body":{"statements/if...else.html":{}}}],["status=2&amp;type=2",{"_index":2887,"title":{},"body":{"statements/if...else.html":{}}}],["statusr",{"_index":2655,"title":{},"body":{"object/object​_keys.html":{}}}],["store",{"_index":2664,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["storemoney",{"_index":771,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{}}}],["storemoney()(100",{"_index":774,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["str",{"_index":702,"title":{},"body":{"core.html":{},"cases/replace.html":{},"cases/str.html":{}}}],["str.charat",{"_index":2450,"title":{},"body":{"cases/str.html":{}}}],["str.replac",{"_index":2370,"title":{},"body":{"cases/replace.html":{},"cases/str.html":{}}}],["str.slice",{"_index":2452,"title":{},"body":{"cases/str.html":{}}}],["stranger",{"_index":687,"title":{},"body":{"core.html":{}}}],["strict",{"_index":820,"title":{},"body":{"core.html":{},"this.html":{},"scope.html":{}}}],["strict&#39",{"_index":1706,"title":{},"body":{"scope.html":{}}}],["strict&apo",{"_index":1313,"title":{},"body":{"core.html#this":{},"core.html#屬性特徵":{},"this.html#簡易呼叫":{}}}],["string",{"_index":34,"title":{"operators.html#Adding-Strings-and-Numbers":{},"cases/str.html":{}},"body":{"ajax.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#this":{},"core.html#new":{},"operators.html":{},"variable.html":{},"variable.html#動態型別":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["string&#x578b;&#x5225;&#x76f8;&#x52a0",{"_index":1087,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["string.prototype.replac",{"_index":2367,"title":{},"body":{"cases/replace.html":{}}}],["stringify(famili",{"_index":696,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["stringify(obj1",{"_index":475,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{}}}],["string​.prototype​.replac",{"_index":2453,"title":{},"body":{"cases/str.html":{}}}],["string​.prototype​.tolower​cas",{"_index":2448,"title":{},"body":{"cases/str.html":{}}}],["structur",{"_index":1501,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["style",{"_index":945,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["sum",{"_index":357,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["sum(a,b",{"_index":573,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["super",{"_index":2491,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"object/create.html":{}}}],["swagger",{"_index":2982,"title":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#undefined":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["swaggerui",{"_index":3061,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["symbol",{"_index":2867,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["syntax",{"_index":514,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#ES6-Airbnb":{}}}],["syntaxerror",{"_index":2961,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["t",{"_index":2594,"title":{},"body":{"global/promise.html":{}}}],["t.then",{"_index":2596,"title":{},"body":{"global/promise.html":{}}}],["tabl",{"_index":598,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["tag",{"_index":2997,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["tag/if",{"_index":2687,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["target",{"_index":337,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["target.nodenam",{"_index":339,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["task",{"_index":2587,"title":{},"body":{"global/promise.html":{}}}],["task(resolv",{"_index":2592,"title":{},"body":{"global/promise.html":{}}}],["tasks.length",{"_index":2595,"title":{},"body":{"global/promise.html":{}}}],["tasks.map",{"_index":2591,"title":{},"body":{"global/promise.html":{}}}],["tasks[1",{"_index":2600,"title":{},"body":{"global/promise.html":{}}}],["tasks[2",{"_index":2601,"title":{},"body":{"global/promise.html":{}}}],["tasks[i",{"_index":2599,"title":{},"body":{"global/promise.html":{}}}],["tdz",{"_index":933,"title":{},"body":{"core.html":{},"core.html#const":{}}}],["team",{"_index":661,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#this":{}}}],["ternari",{"_index":2426,"title":{},"body":{"cases/if.html":{}}}],["test",{"_index":3008,"title":{},"body":{"statements/block.html":{}}}],["text",{"_index":1747,"title":{},"body":{"performance.html":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"array/array_insert.html":{},"array/array_insert.html#example":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["text/javascript",{"_index":1726,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["textarea",{"_index":1746,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["textarea.addeventlisten",{"_index":1749,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["theme",{"_index":1491,"title":{"index.html":{},"index.html#hexo-theme-doc-seed":{}},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{}}}],["this&#x300d",{"_index":1669,"title":{},"body":{"this.html#bind-apply-call":{}}}],["this&#x6240;&#x6307;&#x5411;&#x7684;window&#x6703;&#x8b8a;undefin",{"_index":1315,"title":{},"body":{"core.html#this":{}}}],["this(指向class",{"_index":2803,"title":{},"body":{"global/function.html":{}}}],["this.array",{"_index":370,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{}}}],["this.nam",{"_index":1582,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["this.valu",{"_index":1556,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["thisarg",{"_index":1573,"title":{},"body":{"this.html":{},"this.html#Callback":{}}}],["this所指向的window會變undefin",{"_index":821,"title":{},"body":{"core.html":{}}}],["throw",{"_index":363,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{}}}],["thursday",{"_index":2515,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["tigger",{"_index":2467,"title":{},"body":{"glossary/hoisting.html":{}}}],["time",{"_index":2521,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["timeoutid",{"_index":1748,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["timer函數包裹了起來，並用j捕獲了每次循環時的i",{"_index":275,"title":{},"body":{"asynchronous.html":{}}}],["today",{"_index":852,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["todo",{"_index":1732,"title":{},"body":{"performance.html":{},"performance.html#DOM-查詢做緩存":{}}}],["tofix",{"_index":1464,"title":{},"body":{"num.html":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["tofixed&#x6307;&#x5b9a;&#x4fdd;&#x7559;&#x5e7e;&#x4f4d;&#x5c0f;&#x6578",{"_index":1487,"title":{},"body":{"num.html#補數字":{}}}],["token",{"_index":512,"title":{"F2E/token.html":{}},"body":{"core.html":{},"F2E/token.html":{},"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["tolowercas",{"_index":2451,"title":{},"body":{"cases/str.html":{}}}],["top",{"_index":2495,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["toprecis",{"_index":1832,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["tostr",{"_index":714,"title":{},"body":{"core.html":{}}}],["total",{"_index":894,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{}}}],["transform",{"_index":2409,"title":{},"body":{"array/object_to_array.html":{}}}],["tree",{"_index":515,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["trifl",{"_index":2486,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["trifle.prototyp",{"_index":2488,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["true",{"_index":247,"title":{},"body":{"RegExp.html":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"variable.html":{},"variable.html#動態型別":{},"array/array_methods.html":{},"array/array_methods.html#filter":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/replace.html":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"cases/if.html":{},"http/caching.html":{},"http/caching.html#協商緩存":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"statements/let.html":{},"statements/let.html#let":{}}}],["true&#xff0c;&#x56e0;&#x70ba;&#x7269;&#x4ef6;&#x7684;&#x8a18;&#x61b6;&#x9ad4;&#x5df2;&#x7d93;&#x5b58;&#x5728;&#x4e86",{"_index":1075,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["truthi",{"_index":599,"title":{"core.html#Truthy":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["truthy&#xff08;&#x771f;&#x503c;&#xff09",{"_index":1110,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["truthyvalu",{"_index":2435,"title":{},"body":{"cases/arr.html":{}}}],["tuesday",{"_index":2513,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["ture",{"_index":575,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["tw/docs/glossary/hoist",{"_index":2464,"title":{"glossary/hoisting.html":{}},"body":{}}],["tw/docs/http/access_control_cor",{"_index":112,"title":{},"body":{"ajax.html":{}}}],["tw/docs/web/javascript/reference/global_objects/array/foreach",{"_index":1569,"title":{},"body":{"this.html":{}}}],["tw/docs/web/javascript/reference/global_objects/array/foreach#&#x8a9e;&#x6cd5",{"_index":1638,"title":{},"body":{"this.html#Callback":{}}}],["two",{"_index":2432,"title":{},"body":{"cases/arr.html":{}}}],["type",{"_index":222,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{},"asynchronous.html":{},"performance.html":{},"performance.html#懶加載":{},"F2E/GraphQL.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"object/object​_keys.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["type&#xff09;&#x7684;&#x53c3;&#x6578;&#x50b3;&#x905e;&#x662f",{"_index":318,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["type=modul",{"_index":220,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{}}}],["typeerror",{"_index":364,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#屬性特徵":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#Closure":{},"glossary/hoisting.html":{},"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["typeof",{"_index":394,"title":{"operators/typeof.html#typeof":{}},"body":{"closures.html":{},"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"variable.html":{},"variable.html#動態型別":{},"glossary/hoisting.html":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/typeof.html#null":{},"statements/block.html":{}}}],["ui",{"_index":3058,"title":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}},"body":{"swagger/ui.html":{}}}],["uncaught",{"_index":524,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#箭頭函數":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/typeof.html#null":{}}}],["undefin",{"_index":368,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"copy.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#this":{},"core.html#繼承":{},"core.html#箭頭函數":{},"this.html":{},"this.html#簡易呼叫":{},"this.html#bind-apply-call":{},"scope.html":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"array/array_methods.html":{},"array/array_methods.html#find":{},"array/filter.html":{},"glossary/hoisting.html":{},"global/function.html":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"global/function.html#bind":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{}}}],["unexpect",{"_index":2962,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["uniquelist",{"_index":2187,"title":{},"body":{"array/array_method.html":{}}}],["unshift",{"_index":2345,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["unwrap",{"_index":2865,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["up",{"_index":1532,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["updat",{"_index":1561,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["url",{"_index":46,"title":{"url.html":{},"cases/str.html#url":{}},"body":{"ajax.html":{},"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{},"F2E/header.html":{},"cases/str.html":{},"cases/str.html#url":{}}}],["url&#x3002;&#x5b83;&#x8207;302&#x548c;307&#x7684;&#x542b;&#x7fa9;&#x4e00;&#x6a23;&#xff0c;&#x4e5f;&#x662f;&#x201d;&#x66ab;&#x6642;&#x91cd;&#x5b9a;&#x5411;&#x201d;&#xff0c;&#x5340;&#x5225;&#x5728;&#x65bc;302&#x548c;307&#x7528;&#x65bc;get&#x8acb;&#x6c42;&#xff0c;&#x800c;303&#x7528;&#x65bc;post&#x3001;put&#x548c;delete&#x8acb;&#x6c42;&#x3002;&#x6536;&#x5230;303&#x4ee5;&#x5f8c;&#xff0c;&#x700f;&#x89bd;&#x5668;&#x4e0d;&#x6703;&#x81ea;&#x52d5;&#x8df3;&#x8f49;&#xff0c;&#x800c;&#x6703;&#x8b93;&#x7528;&#x6236;&#x81ea;&#x5df1;&#x6c7a;&#x5b9a;&#x4e0b;&#x4e00;&#x6b65;&#x600e;&#x9ebc;&#x8fa6;&#x3002",{"_index":200,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["url&#x3002;&#x9019;&#x7a2e;&#x65b9;&#x6cd5;&#x53eb;&#x505a",{"_index":207,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["url&#xff0c;&#x5c31;&#x53ef;&#x4ee5;&#x767c;&#x73fe;&#x5176;&#x4ed6;&#x7684",{"_index":206,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["url&#xff0c;&#x6bd4;&#x5982",{"_index":181,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["url&#xff0c;&#x6bd4;&#x5982;&#x7372;&#x53d6;&#x67d0;&#x500b;&#x4f5c;&#x8005;&#x7684;&#x67d0;&#x4e00;&#x985e;&#x6587;&#x7ae0;&#x3002",{"_index":186,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["url.indexof",{"_index":50,"title":{},"body":{"ajax.html":{}}}],["url.split",{"_index":53,"title":{},"body":{"ajax.html":{}}}],["url。一是功能url，即有的url",{"_index":2027,"title":{},"body":{"F2E/header.html":{}}}],["url。它與302和307的含義一樣，也是”暫時重定向”，區別在於302和307用於get請求，而303用於post、put和delete請求。收到303",{"_index":145,"title":{},"body":{"RESTfulAPI.html":{}}}],["us",{"_index":819,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"this.html":{},"scope.html":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["us/docs/web/javascript/closur",{"_index":391,"title":{},"body":{"closures.html":{}}}],["us/docs/web/javascript/reference/operators/bitwise_operators#%3e%3e_(sign",{"_index":435,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["usag",{"_index":1507,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["user",{"_index":159,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{},"index.html":{},"index.html#More-Informations":{},"object/object​_keys.html":{}}}],["userid",{"_index":61,"title":{},"body":{"ajax.html":{}}}],["userid=jacob.hsu",{"_index":57,"title":{},"body":{"ajax.html":{}}}],["usersr",{"_index":2656,"title":{},"body":{"object/object​_keys.html":{}}}],["v",{"_index":1841,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["val",{"_index":962,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["valid",{"_index":3006,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["valu",{"_index":280,"title":{},"body":{"asynchronous.html":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#函式工廠":{},"core.html#屬性特徵":{},"this.html":{},"this.html#簡易呼叫":{},"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"array/array_insert.html":{},"array/array_insert.html#example":{},"array/object_to_array.html":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"statements/for.html":{}}}],["value&#xff09",{"_index":320,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["value1",{"_index":2004,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["value2",{"_index":2006,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["value3",{"_index":2008,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["value=1",{"_index":1700,"title":{},"body":{"scope.html":{}}}],["vanilla",{"_index":2482,"title":{},"body":{"function/factory​_factory.html":{}}}],["var",{"_index":12,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"asynchronous.html":{},"asynchronous.html#setTimeout":{},"event.html":{},"event.html#代理":{},"closures.html":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"num.html":{},"num.html#補數字":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"scope.html":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{},"math.html":{},"math.html#浮點數運算的坑":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Adding-Strings-and-Numbers":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/array_merge.html":{},"array/map.html":{},"array/map.html#map":{},"cases/replace.html":{},"array/filter.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/if.html":{},"cases/str.html":{},"cases/str.html#url":{},"glossary/hoisting.html":{},"global/promise.html":{},"global/date.html":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/block.html":{},"statements/let.html":{},"statements/let.html#let":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["var&#x7684;&#x4f5c;&#x7528;&#x57df;&#x5728;&#x51fd;&#x6578;(funct",{"_index":1405,"title":{},"body":{"core.html#Let":{}}}],["variabl",{"_index":1997,"title":{"variable.html":{}},"body":{}}],["var的作用域在函數(funct",{"_index":927,"title":{},"body":{"core.html":{}}}],["version",{"_index":2986,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#undefined":{}}}],["vip用戶在進行中參與活動，贈送800",{"_index":2883,"title":{},"body":{"statements/if...else.html":{}}}],["vip用戶在預售中參與活動，贈送1000",{"_index":2882,"title":{},"body":{"statements/if...else.html":{}}}],["visit",{"_index":1537,"title":{},"body":{"index.html":{},"index.html#More-Informations":{}}}],["vm",{"_index":805,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["vs",{"_index":1577,"title":{"global/function.html#cab-call-apply-vs-bind":{}},"body":{"this.html":{},"this.html#bind-apply-call":{},"scope.html":{},"global/function.html":{},"statements/AsyncFunction.html":{}}}],["vti",{"_index":2873,"title":{},"body":{"operators/destructuring_assignment.html":{}}}],["vue",{"_index":912,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["vue!&apo",{"_index":1388,"title":{},"body":{"core.html#屬性特徵":{}}}],["w",{"_index":242,"title":{},"body":{"RegExp.html":{},"http/caching.html":{}}}],["w+)*@\\w",{"_index":243,"title":{},"body":{"RegExp.html":{}}}],["w+)*\\.\\w",{"_index":244,"title":{},"body":{"RegExp.html":{}}}],["wallet",{"_index":893,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["wallet.sav",{"_index":900,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["wallet.tot",{"_index":898,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["watch",{"_index":1540,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{}}}],["web",{"_index":125,"title":{},"body":{"RESTfulAPI.html":{},"F2E/token.html":{}}}],["websit",{"_index":1496,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{},"index.html#More-Informations":{}}}],["wednesday",{"_index":2514,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["welcom",{"_index":257,"title":{},"body":{"RegExp.html":{}}}],["welsh",{"_index":860,"title":{},"body":{"core.html":{}}}],["whereparamet",{"_index":754,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["window",{"_index":358,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#箭頭函數":{},"this.html":{},"this.html#bind-apply-call":{},"performance.html":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"variable.html":{}}}],["window.array",{"_index":371,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{}}}],["window.i",{"_index":929,"title":{},"body":{"core.html":{},"core.html#Let":{}}}],["window.location.hash",{"_index":1991,"title":{},"body":{"url.html":{}}}],["window.location.host",{"_index":1985,"title":{},"body":{"url.html":{}}}],["window.location.hostnam",{"_index":1988,"title":{},"body":{"url.html":{}}}],["window.location.href",{"_index":1982,"title":{},"body":{"url.html":{}}}],["window.location.pathnam",{"_index":1989,"title":{},"body":{"url.html":{}}}],["window.location.port",{"_index":1993,"title":{},"body":{"url.html":{}}}],["window.location.protocol",{"_index":1983,"title":{},"body":{"url.html":{}}}],["window.location.search",{"_index":1994,"title":{},"body":{"url.html":{}}}],["word",{"_index":3107,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["workflow",{"_index":96,"title":{},"body":{"ajax.html":{}}}],["world",{"_index":395,"title":{},"body":{"closures.html":{},"this.html":{},"this.html#bind-apply-call":{},"cases/str.html":{}}}],["wrap",{"_index":3076,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["writabl",{"_index":558,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#屬性特徵":{}}}],["www.a.com",{"_index":2050,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.a.com&#x9019;&#x500b;&#x7db2;&#x7ad9;&#x88ab;&#x8a2d;&#x7f6e;&#x4e86;&#x4e00;&#x500b;www.b.com&#x9019;&#x500b;&#x57df;&#x4e0b;&#x7684;cookie&#xff0c;&#x6240;&#x4ee5;&#x53eb;&#x7b2c;&#x4e09;&#x65b9;cookie&#x3002",{"_index":2125,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.a.com&#x9019;&#x500b;&#x7db2;&#x7ad9;&#xff0c;&#x7db2;&#x9801;&#x88e1;&#x6709;&#x7528;&#x5230",{"_index":2118,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.a.com&#x9019;&#x500b;&#x7db2;&#x7ad9;&#xff0c;&#x9019;&#x500b;&#x7db2;&#x7ad9;&#x8a2d;&#x7f6e;&#x4e86;&#x4e00;&#x500b;cookie&#xff0c;&#x9019;&#x500b;cookie&#x4e5f;&#x53ea;&#x80fd;&#x88ab",{"_index":2115,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.a.com這個網站被設置了一個www.b.com這個域下的cookie，所以叫第三方cooki",{"_index":2054,"title":{},"body":{"F2E/cookie.html":{}}}],["www.a.com這個網站，這個網站設置了一個cookie，這個cooki",{"_index":2049,"title":{},"body":{"F2E/cookie.html":{}}}],["www.adobe.com",{"_index":2044,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.adobe.com/tw",{"_index":2042,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.b.com",{"_index":2051,"title":{},"body":{"F2E/cookie.html":{}}}],["www.b.com&#x7db2;&#x7ad9;&#x7684;&#x4e00;&#x5f35;&#x5716;&#x7247;&#xff0c;&#x700f;&#x89bd;&#x5668;&#x5728",{"_index":2119,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.b.com&#x8acb;&#x6c42;&#x5716;&#x7247;&#x7684;&#x6642;&#x5019;&#xff0c;www.b.com",{"_index":2120,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.b.com&#x9019;&#x500b;&#x57df;&#x8a2a;&#x554f;&#xff0c;&#x53cd;&#x800c;&#x4e0d;&#x80fd;&#x88ab",{"_index":2122,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.b.com請求圖片的時候，www.b.com",{"_index":2052,"title":{},"body":{"F2E/cookie.html":{}}}],["www.foo.com的resourc",{"_index":103,"title":{},"body":{"ajax.html":{}}}],["w”、”l”、”o",{"_index":261,"title":{},"body":{"RegExp.html":{}}}],["x",{"_index":398,"title":{},"body":{"closures.html":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#bind-apply-call":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"operators.html":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"F2E/header.html":{},"array/map.html":{},"array/map.html#map":{},"cases/replace.html":{},"array/filter.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"statements/block.html":{},"string/queue.html":{}}}],["x,i",{"_index":414,"title":{},"body":{"closures.html":{}}}],["x2014",{"_index":2824,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{},"global/function.html#bind":{},"global/function.html#References":{}}}],["x2018;&#x56de;&#x50b3;&#x7d50;&#x679c;&#x2019",{"_index":1081,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x2018;1&#x2019",{"_index":2389,"title":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x2018;2&#x2019",{"_index":2390,"title":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x2018;3&#x2019;].filter(parseint",{"_index":2391,"title":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}},"body":{}}],["x2018;3&#x2019;].map(parseint)&#x7684;&#x8f38;&#x51fa;&#x7d50;&#x679c;&#x662f;&#x4ec0;&#x9ebc;&#xff1f",{"_index":2444,"title":{},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x2018;a&#x2019",{"_index":3017,"title":{},"body":{"statements/let.html#let":{}}}],["x2018;vti&#x2019",{"_index":2876,"title":{},"body":{"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["x201c;&#x4e0d;&#x6703;&#x201d",{"_index":1039,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x201c;0.00011",{"_index":1906,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x201c;a",{"_index":3149,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x201c;exampl",{"_index":3152,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x201c;function&#x201d",{"_index":2977,"title":{},"body":{"operators/typeof.html#null":{}}}],["x201c;object&#x201d",{"_index":2970,"title":{},"body":{"operators/typeof.html#null":{}}}],["x201c;w/&#x201c",{"_index":2758,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x2026",{"_index":2926,"title":{},"body":{"operators/precedence.html#運算子優先序":{}}}],["x2192",{"_index":1911,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x276f",{"_index":1428,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x3000;&#x9a57;&#x8b49;&#x5354;&#x5546;&#x7de9;&#x5b58",{"_index":2771,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x3000;&#x9a57;&#x8b49;&#x5f37;&#x7de9;&#x5b58",{"_index":2714,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x3000;vue",{"_index":1383,"title":{},"body":{"core.html#屬性特徵":{}}}],["x3001",{"_index":1043,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"http/caching.html#強緩存":{},"global/function.html#cab-call-apply-vs-bind":{}}}],["x3001;undefin",{"_index":1309,"title":{},"body":{"core.html#this":{}}}],["x3002",{"_index":183,"title":{},"body":{"RESTfulAPI.html#動詞":{},"arrowFunction.html#Arrow-Function":{},"this.html#bind-apply-call":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"global/function.html#cab-call-apply-vs-bind":{},"statements/for.html#for…of與for…in的差別":{}}}],["x3002;&#xff08",{"_index":2817,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x3002;object.defineproperti",{"_index":1396,"title":{},"body":{"core.html#屬性特徵":{}}}],["x300c;&#x4fdd;&#x6301;&#x72c0;&#x614b;&#x300d;&#xff0c;&#x5247;&#x662f;&#x6307;&#x901a;&#x4fe1;&#x4ea4;&#x8ac7;&#x7684;&#x5176;&#x4e2d;&#x4e00;&#x65b9;&#xff0c;&#x53ef;&#x4ee5;&#x6240;&#x6709;&#x7684;&#x6d88;&#x606f;&#x4f5c;&#x95dc;&#x806f;&#xff0c;&#x5c31;&#x50cf;&#x662f;&#x5df7;&#x53e3;&#x7684;&#x65e9;&#x9910;&#x5e97;&#x963f;&#x59e8;&#xff0c;&#x9084;&#x8a18;&#x5f97;&#x4f60;&#x6700;&#x611b;&#x5403;&#x7684;&#x706b;&#x817f;&#x86cb;&#x4e0d;&#x559c;&#x6b61;&#x6709;&#x7f8e;&#x4e43;&#x6ecb;&#x3002",{"_index":2142,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x300c;&#x7bad;&#x982d;&#x51fd;&#x5f0f;&#x6c92;&#x6709;&#x81ea;&#x5df1;&#x7684",{"_index":1668,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x300c;&#x7d81;&#x5b9a;this&#x7684;&#x51fd;&#x6578;&#x300d",{"_index":1656,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x300c;&#x9762;&#x5411;&#x3001;&#x9023;&#x63a5;&#x300d;&#x8868;&#x662f;&#x5ba2;&#x6236;&#x7aef;&#x548c;server&#x7aef;&#x901a;&#x4fe1;&#x524d;&#x8981;&#x5148;&#x5efa;&#x7acb;&#x4e00;&#x500b;&#x901a;&#x4fe1;&#x7684;&#x6e20;&#x9053",{"_index":2141,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x300c;.&#x300d",{"_index":1220,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x39f;(1",{"_index":3137,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x4e00;&#x4e32",{"_index":2748,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x4e00;&#x4f46;&#x88ab;&#x7d81;&#x5b9a;&#xff0c;&#x5176;this&#x7121;&#x6cd5;&#x518d;&#x88ab;&#x4fee;&#x6539;&#x3002",{"_index":1657,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x4e00;&#x500b;&#x89e3;&#x6c7a;&#x65b9;&#x6cd5;&#x5c31;&#x662f;&#xff0c;&#x5728;&#x56de;&#x61c9;&#x4e2d;&#xff0c;&#x7d66;&#x51fa;&#x76f8;&#x95dc;&#x93c8;&#x63a5;&#xff0c;&#x4fbf;&#x65bc;&#x4e0b;&#x4e00;&#x6b65;&#x64cd;&#x4f5c;&#x3002;&#x9019;&#x6a23;&#x7684;&#x8a71;&#xff0c;&#x7528;&#x6236;&#x53ea;&#x8981;&#x8a18;&#x4f4f;&#x4e00;&#x500b",{"_index":205,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x4e00;&#x500b;&#x8cc7;&#x6e90;&#x7684;&#x6a19;&#x8b58",{"_index":2751,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x4e00;&#x6a23;&#x662f;&#x6703;&#x88ab;&#x5224;&#x5b9a",{"_index":1074,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x4e00;&#x6a23;&#x6709;&#x5275;&#x9020;&#x968e;&#x6bb5",{"_index":1419,"title":{},"body":{"core.html#const":{}}}],["x4e00;&#x6b21;&#x3002;&#x5982;&#x679c;&#x8981;&#x591a;&#x6b21;&#x8abf;&#x7528;&#xff0c;&#x8acb;&#x4f7f;&#x7528",{"_index":297,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x4e00;&#x81f4;&#xff0c;&#x4e0d;&#x4f7f;&#x7528;&#x5f37;&#x7de9;&#x5b58;&#xff0c;&#x9700;&#x8981;&#x8207;&#x670d;&#x52d9;&#x5668;&#x9a57;&#x8b49;&#x7de9;&#x5b58;&#x662f;&#x5426;&#x65b0;&#x9bae;&#xff0c;&#x5728",{"_index":2740,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e00;&#x958b;&#x59cb;&#x5148;&#x7d66;&#x70ba",{"_index":1784,"title":{},"body":{"performance.html#懶加載":{}}}],["x4e09;&#x500b;&#x7b49;&#x865f",{"_index":1957,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x4e0a;&#x9762;&#x4ee3;&#x7801;&#x4e2d;&#xff0c",{"_index":227,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["x4e0a;&#xff0c;&#x5982",{"_index":2156,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4e0b;&#x62c9;&#x9078;&#x55ae;&#x88dc;&#x6a19;&#x984c;&#x3000;&#x3000;&#x3000;&#x3000",{"_index":2364,"title":{},"body":{"array/array_insert.html#example":{}}}],["x4e0b;&#x9762;&#x662f;&#x4e00;&#x500b;&#x4f8b;&#x5b50;&#x3002",{"_index":201,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x4e0b;&#x9762;&#x662f;&#x8868;&#x9054;&#x5f0f",{"_index":1630,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x4e0d;&#x4ee5;&#x5efa;&#x69cb;&#x5f0f;&#x65b9;&#x5f0f;&#x5448;&#x73f",{"_index":1318,"title":{},"body":{"core.html#this":{}}}],["x4e0d;&#x5229;&#x65bc;&#x64f4;&#x5c55;&#xff0c;&#x8a9e;&#x7fa9;&#x4e5f;&#x4e0d;&#x660e;&#x78ba",{"_index":188,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x4e0d;&#x5e94;&#x8be5;&#x7528;&#x4e8e;&#x8fed;&#x4ee3;&#x4e00;&#x4e2a",{"_index":3031,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x4e0d;&#x5efa;&#x8b70;&#x8abf;&#x7528;thi",{"_index":1286,"title":{},"body":{"core.html#this":{}}}],["x4e0d;&#x652f;&#x6301",{"_index":1399,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4e0d;&#x662f;&#x5be6;&#x9ad4;&#x5c6c;&#x6027",{"_index":1192,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x4e0d;&#x662f;&#x6240;&#x6709;&#x533f;&#x540d;&#x51fd;&#x5f0f",{"_index":1227,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x4e0d;&#x662f;&#x7d14;&#x503c",{"_index":1159,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x4e0d;&#x662f;&#x7d14;&#x9663;&#x5217",{"_index":1264,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["x4e0d;&#x6703;&#x56de;&#x50b3;&#x7d50;&#x679c",{"_index":1027,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{}}}],["x4e0d;&#x6703;&#x6539;&#x8b8a",{"_index":974,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x4e0d;&#x6703;&#x8f49;&#x6578;&#x5b57;&#x578b;&#x5225",{"_index":1098,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x4e0d;&#x7b49;&#x65bc;0.3",{"_index":1919,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x4e0d;&#x7ba1;&#x5982;&#x4f55;&#x8abf;&#x6574;&#x79d2;&#x6578",{"_index":1013,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x4e0d;&#x80fd;&#x64cd;&#x4f5c;&#x8b8a;&#x91cf",{"_index":2846,"title":{},"body":{"operators/delete.html#delete":{}}}],["x4e0d;&#x80fd;&#x76f4;&#x63a5;&#x56de;&#x50b3;&#x7269;&#x4ef6;&#x5be6;&#x5b57",{"_index":1438,"title":{},"body":{"core.html#箭頭函數":{}}}],["x4e0d;&#x80fd;&#x8b8a;&#x52d5",{"_index":2964,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x4e0d;&#x80fd;&#x8fed;&#x4ee3;&#x7269;&#x4ef6;&#xff0c;&#x9700;&#x8981;&#x900f;&#x904e;&#x548c",{"_index":3045,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x4e0d;&#x8981;&#x76f8;&#x4fe1;js&#x7684;&#x8a08;&#x7b97",{"_index":1923,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x4e0d;&#x898b;&#x4e86",{"_index":2924,"title":{},"body":{"operators/precedence.html#運算子優先序":{}}}],["x4e0d;&#x8a8d;&#x70ba",{"_index":1970,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x4e0d;&#x8fd4;&#x56d",{"_index":2397,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x4e0d;&#x904e;&#x73fe;&#x5728;&#x505a;&#x7db2;&#x7ad9;&#x6211;&#x5011;&#x90fd;&#x6d41;&#x884c;&#x4f7f;&#x7528;&#x6846;&#x67b6;&#xff0c;session&#x7684;&#x6a5f;&#x5236;&#x90fd;&#x88ab;&#x6846;&#x67b6;&#x6240;&#x5be6;&#x73fe;&#x4e86;&#xff0c;&#x4ee5;rubi",{"_index":2168,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4e0d;&#x9700;&#x8981;&#x540d;&#x7a31",{"_index":1236,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x4e0d;&#x9700;&#x8981;&#x767c;&#x9001;&#x8acb;&#x6c42;&#x5230;&#x670d;&#x52d9;&#x7aef;&#xff0c;&#x76f4;&#x63a5;&#x8b80;&#x53d6;&#x700f;&#x89bd;&#x5668;&#x672c;&#x5730;&#x7de9;&#x5b58;&#xff0c;&#x5728",{"_index":2689,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e14",{"_index":2104,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4e14;&#x7121;&#x6cd5;&#x8abf;&#x6574;&#x503c",{"_index":1376,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4e26;&#x4e0d;&#x6703;&#x76f4;&#x63a5;&#x986f;&#x793a",{"_index":1020,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x4e26;&#x4e14;&#x5728;&#x5f8c;&#x9762;&#x52a0;&#x5165",{"_index":1032,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{}}}],["x4e26;&#x52a0;&#x8f09;&#x700f;&#x89bd;&#x5668;&#x7de9;&#x5b58;&#x3002",{"_index":2762,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x4e26;&#x975e;&#x6240;&#x6709;&#x5de5;&#x5ee0;&#x90fd;&#x6703;&#x7acb;&#x5373;&#x8fd4;&#x56de;&#x6578;&#x64da;&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x6709;&#x4e9b;&#x5fc5;&#x9808;&#x5148;&#x7372;&#x53d6;&#x6578;&#x64da;&#x3002",{"_index":2547,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4e2d",{"_index":1217,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x4e2d;&#x4e00;&#x4e2a;&#x65e0;&#x6cd5",{"_index":1397,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4e2d;&#x4e86",{"_index":1801,"title":{},"body":{"performance.html#DOM-查詢做緩存":{}}}],["x4e2d;&#x57fa;&#x672c;&#x985e;&#x578b;&#xff08;primit",{"_index":317,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x4e2d;&#x62ec;&#x5f27;(&#x53ef;&#x7528;&#x8b8a;&#x6578;&#x65b9;&#x5f0f",{"_index":1129,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x4e2d;&#x65b0;&#x589e;&#x7684;&#x5c6c;&#x6027;&#xff0c;&#x5728;&#x8acb;&#x6c42;&#x982d;&#x548c;&#x97ff;&#x61c9;&#x982d;&#x4e2d;&#x90fd;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#xff0c;&#x5e38;&#x7528;&#x7684;&#x5c6c;&#x6027;&#x503c;&#x5982;&#x6709;&#xff1a",{"_index":2705,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e2d;&#x6dfb;&#x52a0",{"_index":2727,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e2d;&#x7684",{"_index":2739,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x500b;&#x5143;&#x7d20;&#x4f5c;&#x70ba;&#x53c3;&#x6578;&#xff0c;&#x5e36;&#x9032;&#x672c",{"_index":1641,"title":{},"body":{"this.html#Callback":{}}}],["x4e2d;&#x81ea;&#x5b9a;&#x7fa9;&#x7684;&#x5c6c;&#x6027;&#xff0c;&#x90fd;&#x61c9;&#x8a72;&#x7528",{"_index":1794,"title":{},"body":{"performance.html#懶加載":{}}}],["x4e2d;&#x986f;&#x793a;&#x7684",{"_index":2690,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e2d;&#xff0c;&#x4f7f;&#x7528;&#x7b2c;&#x4e00;&#x65b9",{"_index":2096,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4e2d;&#xff0c;&#x5f37;&#x7de9;&#x5b58;&#x53c8;&#x5206;&#x70ba",{"_index":2693,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e2d;&#xff0c;&#x6700;&#x5f8c;&#x4e00;&#x6b21;&#x6027;&#x63d2;&#x5165;&#x5230",{"_index":1811,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x4e2d;&#xff0c;&#x6e1b;&#x5c11;&#x700f;&#x89bd;&#x5668;&#x4f7f;&#x7528",{"_index":1780,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x4e3a;&#x6570;&#x7ec4;&#x4e2d;&#x7684;&#x6bcf;&#x4e2a;&#x5143;&#x7d20;&#x8c03;&#x7528;&#x4e00;&#x6b21",{"_index":2392,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x4e4b;&#x4e2d;&#x7684;&#x90a3;&#x500b;&#x5143;&#x7d20;&#x3002",{"_index":1644,"title":{},"body":{"this.html#Callback":{}}}],["x4e5f;&#x662f;&#x4e00;&#x500b;&#x7269;&#x4ef6;&#x7684;&#x5c6c;&#x6027",{"_index":1195,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x4e5f;&#x662f;&#x7269;&#x4ef6;&#x7684;&#x4e00;&#x7a2e;&#xff0c;&#x53ea;&#x662f;&#x5b83;&#x662f;&#x64c1;&#x6709;&#x7a0b;&#x5f0f;&#x5340;&#x584a;&#x7684;&#x80fd;&#x529b;&#x7269;&#x4ef6;&#x800c;&#x5df2",{"_index":1219,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x4e5f;&#x662f;&#xff09",{"_index":2818,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x4e5f;&#x7121;&#x6cd5;&#x914d;&#x7f6e;&#x7279;&#x5fb5",{"_index":1373,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4e5f;&#x8f38;&#x51fa;&#x3002",{"_index":3055,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x4e8b;&#x4ef6",{"_index":1828,"title":{},"body":{"performance.html#事件節流":{}}}],["x4e8b;&#x4ef6;&#x4f47;&#x5217",{"_index":1007,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x4e8b;&#x4ef6;&#x7bc0;&#x6d41",{"_index":1778,"title":{"performance.html#事件節流":{}},"body":{"performance.html#優化原則和方向":{}}}],["x4e8b;&#x4ef6;&#xff0c;&#x901a;&#x904",{"_index":1819,"title":{},"body":{"performance.html#事件節流":{}}}],["x4e8c;&#x9032;&#x4f4d",{"_index":1914,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x4e94;&#x5206;&#x9418;&#x6982;&#x8ff0;&#x7db2;&#x8def;&#x754c;&#x7684;&#x8a18;&#x61b6;&#x5927;&#x795",{"_index":2174,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4ec0;&#x9ebc;&#x662f",{"_index":2082,"title":{"F2E/cookie.html#什麼是-Cookie？":{}},"body":{}}],["x4ec0;&#x9ebc;&#x6642;&#x5019;&#x4e0d;&#x4f7f;&#x7528;&#x7bad;&#x982d;&#x51fd;&#x6578",{"_index":372,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x4ed6;&#x5011;&#x90fd;&#x6703;&#x4f7f;&#x8b8a;&#x91cf;&#x589e;&#x52a0",{"_index":1977,"title":{},"body":{"operators.html#Increment":{}}}],["x4ed6;&#x7684;this&#x6307;&#x5411;&#x5916;&#x5c64",{"_index":1434,"title":{},"body":{"core.html#箭頭函數":{}}}],["x4ee3;&#x7406",{"_index":341,"title":{"event.html#代理":{}},"body":{}}],["x4ee3;&#x78bc;&#x58d3;&#x7e2e;&#x5408;&#x4f75;&#x3001;css",{"_index":1763,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x4ee3;&#x78bc;&#x58d3;&#x7e2e;&#x5408;&#x4f75;&#xff09",{"_index":1764,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x4ee3;&#x78bc;&#x751f;&#x6210",{"_index":969,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x4ee3;&#x8868;&#x76ee;&#x524d;&#x88ab;&#x8655;&#x7406;&#x4e2d;&#x7684",{"_index":1643,"title":{},"body":{"this.html#Callback":{}}}],["x4ee3;&#x8868;&#x8457",{"_index":1001,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x4ee5;&#x53ca;&#x66f4;&#x4f4e;&#x7248;&#x672c;&#x6d4f;&#x89c8;&#x5668;&#x7684;&#x539f;&#x56e0;&#x3002",{"_index":1400,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4f46;&#x4ed6;&#x5011;&#x6703;&#x5171;&#x7528;&#x540c;&#x4e00;&#x500b",{"_index":496,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x4f46;&#x5176;&#x5be6;&#x662f",{"_index":1018,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x4f46;&#x537b;&#x4e0d;&#x5c0f;&#x5fc3;&#x6539;&#x5230;obj1.b",{"_index":487,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x4f46;&#x53ea;&#x6709;&#x53ef;&#x4ee5;&#x8f49;&#x6210;json&#x683c;&#x5f0f;&#x7684;&#x7269;&#x4ef6;&#x624d;&#x53ef;&#x4ee5;&#x9019;&#x6a23;&#x7528",{"_index":506,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["x4f46;&#x5927;&#x5bb6;&#x90fd;&#x6703;&#x64d4;&#x5fc3;&#xff0c;cookie&#x548c;session&#x5f97;&#x7d50;&#x5408;&#xff0c;&#x5230;&#x5e95;&#x9084;&#x6703;&#x4e0d;&#x6703;&#x6709;&#x88ab;&#x7ac4;&#x6539;&#x7684;&#x554f;&#x984c;&#xff0c;&#x9019;&#x500b;&#x6642;&#x5019;&#x5c31;&#x8981;&#x9760;&#x201d;&#x7c3d;&#x7ae0;&#x201d;&#x4f86;&#x9a57;&#x8b49;&#x8cc7;&#x6599;&#x7684;&#x771f;&#x5be6;&#x6027;&#xff0c;&#x5728;&#x6211;&#x4f7f;&#x7528;cookie&#x8acb;&#x6c42;&#x6642;&#xff0c;&#x53ef;&#x4ee5;&#x52a0;&#x4e00;&#x500b;&#x7c3d;&#x7ae0;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x5728;&#x6211;&#x50b3;&#x8f38;&#x7684;&#x8cc7;&#x6599;&#x5f8c;&#x9762;&#x52a0;&#x4e0a;&#x4e00;&#x500b;&#x5c0d;&#x61c9;&#x7684;&#x79d8;&#x5bc6;&#x5b57;&#x4e32;&#xff0c;&#x7576;&#x4f3a;&#x670d;&#x5668;&#x56de;&#x50b3;&#x6642;&#xff0c;&#x53ef;&#x4ee5;&#x56de;&#x61c9;&#x8a72;&#x5b57;&#x4e32;&#xff0c;&#x82e5;&#x662f;&#x5176;&#x4ed6;&#x4f7f;&#x7528;&#x8005;&#x5077;&#x5077;&#x4e32;&#x6539;&#x7684;&#x8a71;&#xff0c;&#x7531;&#x65bc;&#x4e32;&#x6539;&#x7684;&#x8cc7;&#x6599;&#x548c;&#x6211;&#x7684;&#x79d8;&#x5bc6;&#x5b57;&#x4e32;&#x7121;&#x6cd5;&#x76f8;&#x7b26;&#xff0c;&#x7576;&#x7136;&#x4e5f;&#x7121;&#x6cd5;&#x4f5c;&#x507d;&#x9020;&#xff0c;&#x9019;&#x5c31;&#x662f;&#x6240;&#x8b02;&#x7684",{"_index":2165,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4f46;&#x5f9e;&#x5275;&#x9020;&#x5230;&#x5be6;&#x969b;&#x5ba3;&#x544a;&#x7684;&#x968e;&#x6bb5;&#x6703;&#x51fa;&#x73fe;tdz",{"_index":1420,"title":{},"body":{"core.html#const":{}}}],["x4f46;&#x5f9e;&#x9019;&#x88e1;&#x53ef;&#x5f97;&#x77e5;&#xff0c;session&#x4e26;&#x4e0d;&#x662f;&#x4e00;&#x500b;&#x5f88;&#x660e;&#x78ba;&#x5be6;&#x9ad4;&#x7684;&#x6a5f;&#x5236;&#xff0c;&#x7b97;&#x662f;&#x4e00;&#x500b;&#x6982;&#x5ff5;&#xff0c;&#x53ea;&#x8981;&#x7b26;&#x5408;&#x6982;&#x5ff5;&#x6240;&#x5be6;&#x4f5c;&#x51fa;&#x4f86;&#x7684;&#x529f;&#x80fd;&#x90fd;&#x53ef;&#x4ee5;&#x88ab;&#x53eb;&#x505a;session&#x3002",{"_index":2172,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4f46;&#x662f;&#x539f;&#x59cb;&#x578b;&#x5225;&#x76e1;&#x91cf;&#x4e0d;&#x7528;&#x6b64;&#x65b9;&#x5f0f",{"_index":1065,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x4f46;&#x662f;&#x53ef;&#x4ee5;&#x8abf;&#x6574;&#x5c6c;&#x6027;&#x503c",{"_index":1374,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4f46;&#x662f;&#x5728;&#x6700;&#x521d;&#x7684",{"_index":2153,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4f46;&#x6df1;&#x62f7;&#x8c9d;&#x6703;&#x53e6;&#x5916;&#x5275;&#x9020;&#x4e00;&#x500b;&#x4e00;&#x6a21;&#x4e00;&#x6a23;&#x7684;&#x7269;&#x4ef6",{"_index":492,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x4f46;&#x7121;&#x7e7c;&#x627f;&#x52d5;&#x7269;&#x754c;&#x7684;&#x5efa;&#x69cb;&#x51fd;&#x5f0f",{"_index":1356,"title":{},"body":{"core.html#繼承":{}}}],["x4f46;&#x7269;&#x4ef6;&#x5c31;&#x4e0d;&#x540c;&#xff0c;&#x7269;&#x4ef6;&#x50b3;&#x7684;&#x662f",{"_index":483,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x4f46;&#x8a18;&#x4f4f;session&#x5c31;&#x50cf;&#x662f;&#x4f60;&#x7684;&#x6703;&#x54e1;&#x5361;&#x865f;&#xff0c;&#x4e0d;&#x898b;&#x4e5f;&#x8868;&#x793a;&#x4ecd;&#x7136;&#x6709;&#x8cc7;&#x6599;&#x88ab;&#x7aca;&#x53d6;&#x7684;&#x98a8;&#x96aa;&#x3002",{"_index":2166,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4f46;json&#x4e00;&#x5f8b;&#x7528;&#x96d9;&#x5f15;&#x865f",{"_index":1207,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x4f46;null&#x4e0d;&#x662f;object",{"_index":2972,"title":{},"body":{"operators/typeof.html#null":{}}}],["x4f46;target&#x53ef;&#x4ee5;&#x544a;&#x77e5;&#x9ede;&#x64ca;&#x5f9e;&#x54ea;&#x51fa;&#x767c;&#x7684",{"_index":351,"title":{},"body":{"event.html#代理":{}}}],["x4f5c;&#x70ba;&#x539f;&#x578b;&#x4f7f;&#x7528",{"_index":1344,"title":{},"body":{"core.html#繼承":{}}}],["x4f5c;&#x70ba;&#x547d;&#x540d;&#x7d04;&#x5b9a;&#x4f86;&#x986f;&#x793a;&#x9019;&#x4e9b;&#x5de5;&#x5ee0;&#x505a;&#x4e00;&#x4e9b;&#x7570;&#x6b65;&#x5de5;&#x4f5c;&#x548c;&#x8fd4;&#x56de;promise&#x3002",{"_index":2558,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f5c;&#x70ba;&#x7269;&#x4ef6;&#x65b9;&#x6cd5",{"_index":1282,"title":{},"body":{"core.html#this":{}}}],["x4f5c;&#x7528;&#x57df;&#x5c07;&#x4e0a;&#x4e0b;&#x6587;&#x7d81;&#x5b9a;&#x5230",{"_index":376,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x4f5c;&#x7528;&#x57df;&#x662f;&#x51fd;&#x6578;&#x8abf;&#x7528;&#x6642;&#x624d;&#x6c7a;&#x5b9a",{"_index":977,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x4f5c;&#x7528;&#x5b8c;&#x5168;&#x4e00;&#x6a23;&#xff0c;&#x53ea;&#x662f;&#x63a5;&#x53d7;&#x53c3;&#x6578;&#x7684;&#x65b9;&#x5f0f;&#x4e0d;&#x592a;&#x4e00;&#x6a23",{"_index":1658,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x4f5c;&#x958b;&#x59cb",{"_index":1047,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x4f7f;&#x7528",{"_index":1767,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x4f7f;&#x7528;&#x4e09;&#x5143;&#x904b;&#x7b97;&#x5b50",{"_index":1117,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x4f7f;&#x7528;&#x5305;&#x88f9;&#x7269;&#x4ef6;&#x8f49;&#x63db",{"_index":1100,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x4f7f;&#x7528;&#x7d66;&#x5b9a;&#x7684;this&#x53c3;&#x6578;&#x4ee5;&#x53ca;&#x5206;&#x5225;&#x7d66;&#x5b9a;&#x7684;&#x53c3;&#x6578;&#x4f86;&#x547c;&#x53eb;&#x67d0;&#x500b;&#x51fd;&#x6578",{"_index":1659,"title":{},"body":{"this.html#bind-apply-call":{},"global/function.html#call、apply、bind":{}}}],["x4f7f;&#x7528;&#x8907;&#x6578",{"_index":179,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x4f7f;&#x7528;&#x9019;&#x4e9b;&#x7c21;&#x55ae;&#x7684;&#x69cb;&#x5efa;&#x584a;&#x4f7f;&#x5f97;&#x6211;&#x5011;&#x7684;&#x4ee3;&#x78bc;&#x66f4;&#x52a0;&#x53cb;&#x597d;&#xff0c;&#x9019;&#x7d55;&#x5c0d;&#x662f;&#x6211;&#x5011;&#x61c9;&#x8a72;&#x95dc;&#x5fc3;&#x7684;&#x4e8b;&#x60c5;&#x3002",{"_index":2569,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f7f;&#x7528;javascript&#x5167;&#x7f6e;&#x7684;&#x51fd;&#x6578",{"_index":1921,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x4f86;&#x4fdd;&#x7559;&#x4e00;&#x5b9a;&#x7684;&#x7cbe;&#x5ea6;&#xff1a",{"_index":1922,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x4f86;&#x5b9a;&#x7fa9;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#x3002",{"_index":2549,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f86;&#x5b9a;&#x7fa9;&#x65b9;&#x6cd5;&#x3002",{"_index":383,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x4f86;&#x76e3;&#x807d;&#x3002;&#x4f7f;&#x7528;&#x7bc0;&#x6d41;&#x3002",{"_index":1820,"title":{},"body":{"performance.html#事件節流":{}}}],["x4f86;&#x7acb;&#x5373;&#x57f7;&#x884c;&#x51fd;&#x5f0f",{"_index":1033,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{}}}],["x4f86;&#x81ea;&#x5728;&#x7db2;&#x9801;&#x4e0a;&#x5d4c;&#x5165;&#x5ee3;&#x544a;&#x6216;&#x5716;&#x7247;&#x7b49;&#x9805;&#x7684;&#x5176;&#x4ed6;&#x57df;&#x4f86;&#x6e90;&#x3002",{"_index":2091,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["x4f86;&#x8868;&#x793a;&#x3002;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#xff0c;&#x53ef;&#x4ee5;&#x7528;&#x7d44;&#x5408;&#x800c;&#x4e0d;&#x662f;&#x7e7c;&#x627f;&#x4f86;&#x5be6;&#x73fe;&#x3002",{"_index":2536,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f8b",{"_index":209,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x4f8b;&#x5982;&#x8981;&#x5728;&#x6587;&#x5b57;&#x6539;&#x8b8a;&#x6642;&#x89f8;&#x767c;&#x4e00;&#x500b",{"_index":1818,"title":{},"body":{"performance.html#事件節流":{}}}],["x4f8b;&#x5982;&#xff0c;&#x4f7f;&#x7528;&#x7e7c;&#x627f;&#x3002",{"_index":2537,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f8b;&#x5982;&#xff0c;&#x6211;&#x5011;&#x53ef;&#x4ee5;&#x5275;&#x5efa;&#x4e00;&#x500b",{"_index":2527,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f8b;:foreach",{"_index":1198,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x4f8b;:tostr",{"_index":1201,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x4f9d;&#x7136;&#x6307;&#x5411",{"_index":1676,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x4fdd;&#x5b58;&#x9019;&#x500b;session",{"_index":2158,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4fdd;&#x6301;&#x539f;&#x6709;&#x9663;&#x5217;&#x4e0d;&#x8b8a;&#x7684;&#x6b63;&#x78ba;&#x9078;&#x64c7",{"_index":2288,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x4fee;&#x6539;&#x65b0;&#x7269;&#x4ef6;&#x4e0d;&#x6703;&#x6539;&#x5230;&#x539f;&#x7269;&#x4ef6",{"_index":494,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x500b",{"_index":291,"title":{},"body":{"asynchronous.html#setTimeout":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"http/caching.html#強緩存":{}}}],["x500b;&#x5b9a;&#x6642;&#x5668;&#xff0c;&#x4e00;&#x822c;&#x60c5;&#x6cc1;&#x4e0b;&#xff0c;&#x9019;&#x4e9b;&#x5b9a;&#x6642;&#x5668;&#x90fd;&#x6703;&#x5728",{"_index":288,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x500b;&#x5c6c;&#x6027;&#xff0c;&#x4ee3;&#x78bc;&#x5982;&#x4e0b;&#xff1a",{"_index":2717,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x500b;&#x65b9;&#x6cd5",{"_index":2843,"title":{},"body":{"global/function.html#References":{}}}],["x500b;&#x982d;&#x90e8;&#x5c6c;&#x6027;&#x4e2d;&#x7684;&#x512a;&#x5148;&#x7d1a;&#x6700;&#x9ad8;&#x3002",{"_index":2741,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x501f;&#x7528;array&#x7684;&#x539f;&#x751f;&#x65b9;&#x6cd5",{"_index":1666,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x503c",{"_index":1361,"title":{},"body":{"core.html#屬性特徵":{}}}],["x503c;&#x5f8c;&#x7db4;&#x8b8a;&#x5316;&#x7684;&#x6642;&#x5019;&#xff0c;&#x624d;&#x6703;&#x771f;&#x6b63;&#x5730;&#x8acb;&#x6c42;&#x8cc7;&#x6e90;&#xff0c;&#x5426;&#x5247;&#x8fd4;&#x56d",{"_index":2761,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x503c;&#x88ab;&#x8907;&#x88fd;&#x4e86",{"_index":323,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x503c;&#x9032;&#x884c;&#x6bd4;&#x8f03;&#xff0c;&#x5982;&#x679c;&#x76f8;&#x7b49;&#x5247;&#x8868;&#x793a;&#x547d;&#x4e2d;&#x5354;&#x5546;&#x7de9;&#x5b58;&#x3002;etag",{"_index":2755,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x503c;(valu",{"_index":3042,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x505c;&#x4e0b;&#x624d;&#x89f8;&#x767c",{"_index":1829,"title":{},"body":{"performance.html#事件節流":{}}}],["x50b3;&#x503c;(call",{"_index":1166,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x50b3;&#x5165;&#x7684;&#x53c3;&#x6578;&#x51fd;&#x5f0f",{"_index":1234,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x50b3;&#x5165;&#x7684;&#x5b57;&#x4e32",{"_index":1215,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x50b3;&#x53c3;&#x8003;&#x7279;&#x6027;&#x6703;&#x6c92;&#x6709",{"_index":1180,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x50b3;&#x53c3;&#x8003;(call",{"_index":1169,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x50b3;&#x591a;&#x500b;&#x51fd;&#x6578",{"_index":437,"title":{"closures.html#傳多個函數":{}},"body":{}}],["x50b3;&#x7d14;&#x503c",{"_index":1305,"title":{},"body":{"core.html#this":{}}}],["x50b3;&#x905e;&#x8b8a;&#x6578",{"_index":1255,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x50cf;function&#x6c92;&#x8fa6;&#x6cd5;&#x8f49;&#x6210;json",{"_index":507,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["x5118;&#x65e9;&#x57f7;&#x884c;&#x64cd;&#x4f5c",{"_index":1813,"title":{"performance.html#儘早執行操作-DOMContentLoaded":{}},"body":{}}],["x5118;&#x65e9;&#x57f7;&#x884c;&#x64cd;&#x4f5c;&#xff08",{"_index":1777,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x5118;&#x7ba1;json&#x662f;javascript&#x7684;&#x4e00;&#x500b;&#x5b50;&#x96c6;&#xff0c;&#x4f46;json&#x662f;&#x7368;&#x7acb;&#x65bc;&#x8a9e;&#x8a00;&#x7684;&#x6587;&#x5b57;&#x683c;&#x5f0f",{"_index":1204,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x5118;&#x91cf;&#x4f7f;&#x7528;&#x5168;&#x7b49;&#x64cd;&#x4f5c;&#x7b26;&#x3002;&#x56e0;&#x70ba;&#x5176;&#x6c92;&#x6709;&#x96b1;&#x5f0f;&#x8f49;&#x63db;&#xff0c;&#x9019;&#x6a23;&#x7d50;&#x679c;&#x6703;&#x6bd4;&#x8f03;&#x5bb9;&#x6613;&#x9810;&#x6e2c;&#x3001;&#x8a08;&#x7b97;&#x4e5f;&#x6703;&#x6bd4;&#x8f03;&#x5feb",{"_index":1961,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x512a;&#x5148;&#x5e8f;&#x9ad8;&#x65bc",{"_index":2925,"title":{},"body":{"operators/precedence.html#運算子優先序":{}}}],["x512a;&#x5148;&#x8f09;&#x5165",{"_index":988,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x512a;&#x5316;&#x539f;&#x5247;&#x548c;&#x65b9;&#x5411",{"_index":1754,"title":{"performance.html#優化原則和方向":{}},"body":{}}],["x512a;&#x5316;&#x7684;&#x65b9;&#x5411;&#x6709;&#x5169;&#x500b;&#xff1a",{"_index":1760,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x512a;&#x5316;&#x9801;&#x9762;&#x6e32;&#x67d3",{"_index":1769,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x5148;&#x5ba3;&#x544a;&#x8b8a;&#x6578",{"_index":983,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5148;&#x628a;&#x9019;&#x908a;&#x7684;this(&#x6307;&#x5411;class&#x5167;&#x90e8;)&#x5b58;&#x8d77;&#x4f86",{"_index":2837,"title":{},"body":{"global/function.html#bind":{}}}],["x5148;&#x653e;&#x5728",{"_index":1810,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x5148;&#x8ce6;&#x4e88;&#x547d;&#x540d;&#x7a7a;&#x9593",{"_index":1057,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x5168;&#x57df",{"_index":1408,"title":{},"body":{"core.html#Let":{},"core.html#箭頭函數":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{}}}],["x5168;&#x57df;,0,1,2",{"_index":1627,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x5169;&#x8005;&#x5b8c;&#x5168;&#x7121;&#x95dc",{"_index":1183,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x5171;&#x6709;&#x5169;&#x7a2e;&#x985e;&#x578b;&#x7684",{"_index":2085,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["x5176",{"_index":2825,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x5176;&#x4ed6;&#x7db2;&#x57df;&#x4e2d;&#x7684",{"_index":2102,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5177;&#x540d;&#x51fd;&#x5f0f;&#x80fd;&#x5920;&#x5728;&#x51fd;&#x5f0f;&#x5167;&#x88ab;&#x8abf;&#x7528",{"_index":1229,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x518d;&#x5c07;&#x968a;&#x5217;&#x8f49;&#x63db;&#x6210;&#x5b57;&#x7b26;&#x4e32;&#x8f38;&#x51fa;&#xff08;&#x5df2;&#x7a7a;&#x683c;&#x70ba;&#x5206;&#x9694;&#x7b26;&#xff09",{"_index":3162,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x518d;&#x8f49;&#x56de;&#x4f86",{"_index":504,"title":{"copy.html#轉成-JSON-再轉回來":{}},"body":{}}],["x51cd;&#x7d50",{"_index":1370,"title":{},"body":{"core.html#屬性特徵":{}}}],["x51e1;&#x662f;&#x4f7f;&#x7528",{"_index":1070,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x51fa;&#x4f86;&#x7684;&#x8cc7;&#x6599;&#x662f;&#x4e00;&#x500b;&#x7269;&#x4ef6;&#xff0c;&#x6240;&#x4ee5;&#x7269;&#x4ef6;&#x6703;&#x6709;&#x50b3;&#x53c3;&#x8003;&#x7279;&#x6027",{"_index":1211,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x51fa;&#x73fe;&#x5728",{"_index":2307,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["x51fa;&#x968a",{"_index":3122,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x51fd;&#x5f0f",{"_index":1168,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x51fd;&#x5f0f;&#x4e0a",{"_index":1332,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x51fd;&#x5f0f;&#x5c07;&#x6703;&#x628a",{"_index":1640,"title":{},"body":{"this.html#Callback":{}}}],["x51fd;&#x5f0f;&#x5de5;&#x5ee0",{"_index":1273,"title":{"core.html#函式工廠":{}},"body":{}}],["x51fd;&#x5f0f;&#x6703;&#x56de;&#x50b3;&#x5927;&#x65bc;&#x7b49;&#x65bc;&#x6240;&#x7d66;&#x6578;&#x5b57;&#x7684;&#x6700;&#x5c0f;&#x6574;&#x6578",{"_index":1482,"title":{},"body":{"num.html#取值":{}}}],["x51fd;&#x5f0f;&#x6703;&#x56de;&#x50b3;&#x7121;&#x689d;&#x4ef6;&#x6368;&#x53bb;&#x5f8c;&#x7684;&#x6700;&#x5927;&#x6574;&#x6578",{"_index":1481,"title":{},"body":{"num.html#取值":{}}}],["x51fd;&#x5f0f;&#x6703;&#x81ea;&#x52d5;&#x63d0;&#x5347",{"_index":2017,"title":{},"body":{"variable.html#Hoisting":{}}}],["x51fd;&#x5f0f;&#x672c;&#x8eab;&#x5c31;&#x662f;&#x4e00;&#x500b;&#x7269;&#x4ef6",{"_index":1325,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x51fd;&#x5f0f;&#x7269;&#x4ef6;&#x6709;&#x4e00;&#x500b;&#x7279;&#x5225;&#x7684;&#x5c6c;&#x6027",{"_index":1326,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x51fd;&#x5f0f;&#x7269;&#x4ef6;&#x7279;&#x6709;&#x7684;&#x5c6c;&#x6027",{"_index":1329,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x51fd;&#x5f0f;&#x8868;&#x9054;&#x5f0f",{"_index":995,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x51fd;&#x5f0f;&#x88e1;&#xff0c;&#x6bcf;&#x500b;&#x5143;&#x7d20;&#x5404;&#x57f7;&#x884c;&#x4e00;&#x6b21;&#xff0c;&#x63a5;&#x6536;&#x4e09;&#x500b;&#x53c3;&#x6578;&#xff1a",{"_index":1642,"title":{},"body":{"this.html#Callback":{}}}],["x51fd;&#x6570;&#xff0c;&#x5e76;&#x5229;&#x7528;&#x6240;&#x6709;&#x4f7f;&#x5f97",{"_index":2393,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x51fd;&#x6578",{"_index":2969,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x51fd;&#x6578;&#x539f;&#x578b;&#x6700;&#x5be6;&#x7528;&#x7684",{"_index":2842,"title":{},"body":{"global/function.html#References":{}}}],["x51fd;&#x6578;&#x56de;&#x50b3;&#x56db;&#x6368;&#x4e94;&#x5165;&#x5f8c;&#x7684;&#x8fd1;&#x4f3c;&#x503c",{"_index":1480,"title":{},"body":{"num.html#取值":{}}}],["x51fd;&#x6578;&#x662f;&#x7570;&#x6b65;&#x7684",{"_index":285,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x51fd;&#x6578;&#x8072;&#x660e",{"_index":2949,"title":{},"body":{"operators/function.html#函數表達式":{},"operators/typeof.html#typeof":{}}}],["x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f",{"_index":2943,"title":{"operators/function.html#函數表達式":{}},"body":{"operators/function.html#函數表達式":{}}}],["x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x63d0;&#x5347",{"_index":2951,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#xff08;function",{"_index":2944,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["x51fd;&#x6578;&#x9673;&#x8ff0;&#x5f0f",{"_index":986,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x51fd;&#x6578;&#x9673;&#x8ff0;&#x5f0f;&#x6c92;&#x6709;&#x540d;&#x7a31;&#x7121;&#x6cd5;&#x57f7;&#x884c",{"_index":1233,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x5224;&#x65b7;&#x60a8;&#x662f;&#x4f7f;&#x7528;&#x7b2c;&#x4e00;&#x65b9;&#x9084;&#x662f;&#x7b2c;&#x4e09;&#x65b9",{"_index":2173,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5224;&#x65b7;&#x6240;&#x6709;&#x5143;&#x7d20;&#x662f;&#x5426;&#x90fd;&#x7b26;&#x5408;&#x689d;&#x4ef6",{"_index":2269,"title":{},"body":{"array/array_methods.html#every":{}}}],["x5224;&#x65b7;&#x662f;&#x5426;&#x81f3;&#x5c11;&#x4e00;&#x500b;&#x5143;&#x7d20;&#x7b26;&#x5408;&#x689d;&#x4ef6",{"_index":2270,"title":{},"body":{"array/array_methods.html#some":{}}}],["x5229;&#x7528",{"_index":315,"title":{},"body":{"asynchronous.html#setTimeout":{},"core.html#const":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{}}}],["x5229;&#x7528;&#x9663;&#x5217;&#x53ca;for&#x8ff4;&#x5708",{"_index":1144,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x5229;&#x7528;&#x9663;&#x5217;&#x9577;&#x5ea6;&#x9032;&#x884c;&#x8ce6;&#x503c",{"_index":2353,"title":{},"body":{"array/array_insert.html#把數據插入陣列尾部":{}}}],["x522a;&#x4e0d;&#x6389;x",{"_index":2844,"title":{},"body":{"operators/delete.html#delete":{}}}],["x5230;&#x76ee;&#x524d;&#x70ba;&#x6b62;&#xff0c;&#x6211;&#x5011;&#x9084;&#x6c92;&#x6709;&#x770b;&#x5230;&#x4efb;&#x4f55;&#x5de5;&#x5ee0;&#x7528;&#x65b9;&#x6cd5;&#x8fd4;&#x56de;&#x5c0d;&#x8c61;&#xff0c;&#x9019;&#x662f;&#x6545;&#x610f;&#x7684;&#x3002",{"_index":2559,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5247;&#x6574;&#x500b;&#x6f14;&#x7b97;&#x6cd5;&#x7684;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x70ba;o(n+n2)=o(n2)&#x3002",{"_index":3136,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x5247;&#x662f;&#x8a72;&#x7269;&#x4ef6",{"_index":1621,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["x5247;&#x6703;&#x56de;&#x50b3;&#x4e00;&#x500b;&#x7d93;&#x904e;&#x5305;&#x88f9;&#x5f8c;&#x7684",{"_index":1652,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x524d;&#x65b9;&#x52a0;&#x5165;&#x5206;&#x865f",{"_index":1051,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x524d;&#x7aef;&#x8fdb;&#x9636;&#x7b97;&#x6cd5;&#xff1a;&#x4e00;&#x770b;&#x5c31;&#x61c2;&#x7684;&#x961f;&#x5217;&#x53ca;&#x914d;&#x5957;&#x7b97;&#x6cd5;&#x9898",{"_index":3164,"title":{},"body":{"string/queue.html#References":{}}}],["x524d;&#x7f6e;&#x905e;&#x589e;&#x662f;&#x5148;&#x8a08;&#x7b97;&#x5f8c;&#x8ce6;&#x503c;&#xff0c;&#x5982;&#xff1a",{"_index":1980,"title":{},"body":{"operators.html#Increment":{}}}],["x5275;&#x9020",{"_index":1415,"title":{},"body":{"core.html#const":{}}}],["x5275;&#x9020;&#x74b0;&#x5883",{"_index":981,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5275;&#x9020;&#x968e;&#x6bb5",{"_index":992,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5275;&#x9020;&#x968e;&#x6bb5;&#x51fd;&#x5f0f;&#x512a;&#x5148",{"_index":996,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5275;&#x9020;&#x968e;&#x6bb5;&#x51fd;&#x5f0f;&#x5df2;&#x53ef;&#x4ee5;&#x904b;&#x884c",{"_index":989,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x52a0;&#x5206;&#x56de;&#x7b54",{"_index":1960,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x52a0;&#x62ec;&#x865f;&#x4fee;&#x6b63",{"_index":1440,"title":{},"body":{"core.html#箭頭函數":{}}}],["x52a0;&#x8f7d;&#x89c4;&#x5219",{"_index":231,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["x52a0;&#x9322;&#x5230;&#x8d85;&#x904e;100&#x5143;&#x624d;&#x505c;&#x6b62",{"_index":1232,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x52d5;&#x614b;&#x4f5c;&#x7528;&#x57df",{"_index":976,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x52d5;&#x614b;&#x578b;&#x5225",{"_index":1055,"title":{"core.html#動態型別":{},"variable.html#動態型別":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x52d5;&#x614b;&#x7684",{"_index":2816,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x52d5;&#x8a5e",{"_index":163,"title":{"RESTfulAPI.html#動詞":{}},"body":{"RESTfulAPI.html#動詞":{}}}],["x52d5;&#x8a5e;&#x901a;&#x5e38;&#x5c31;&#x662f;&#x4e94;&#x7a2",{"_index":164,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x533f;&#x540d;&#x51fd;&#x5f0f",{"_index":1030,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{}}}],["x533f;&#x540d;&#x51fd;&#x6578",{"_index":2950,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["x5340;&#x57df",{"_index":1619,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{},"this.html#立即函式：":{},"this.html#bind-apply-call":{}}}],["x5341;&#x9032;&#x4f4d",{"_index":1913,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5354;&#x5546;&#x7de9;&#x5b58",{"_index":2742,"title":{"http/caching.html#協商緩存":{}},"body":{}}],["x5373",{"_index":2936,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x5373;&#x53ef;&#x505a;&#x5230;&#x65b0;&#x589e;&#x5c6c;&#x6027;&#x8207;&#x503c;&#xff0c;&#x6240;&#x4ee5;funct",{"_index":1221,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x5373;&#x7b2c",{"_index":290,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x539f;&#x51fd;&#x6578",{"_index":1655,"title":{},"body":{"this.html#bind-apply-call":{},"global/function.html#cab-call-apply-vs-bind":{}}}],["x539f;&#x578b;&#x93c8;&#x4e0a;&#x65b0;&#x589e;&#x4e00;&#x500b;&#x5c64;&#x7d1a",{"_index":1339,"title":{},"body":{"core.html#繼承":{}}}],["x539f;&#x59cb;&#x578b;&#x5225",{"_index":1063,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x539f;&#x59cb;&#x578b;&#x5225;&#x53ca;&#x7269;&#x4ef6;&#x578b;&#x5225",{"_index":1062,"title":{"core.html#原始型別及物件型別":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x539f;&#x751f;ajax",{"_index":1214,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x539f;&#x751f;ajax&#x8b80;json",{"_index":1213,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x53bb;&#x4e0a;&#x5c64;&#x7d81;&#x5b9a",{"_index":347,"title":{},"body":{"event.html#代理":{}}}],["x53c3;&#x6578",{"_index":1259,"title":{"core.html#參數":{}},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"this.html#bind-apply-call":{}}}],["x53c3;&#x8003;&#x4e5f;&#x90fd;&#x4e0d;&#x4e00;&#x6a23",{"_index":1184,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x53c3;&#x8003;&#x540c;&#x4e00;&#x500b;&#x8a18;&#x61b6;&#x9ad4",{"_index":1104,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x53c3;&#x8003;&#x7269;&#x4ef6",{"_index":1151,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["x53c8;&#x6709;&#x5f37;&#x5f31;&#x6821;&#x9a57;&#x4e4b;&#x5206;&#xff0c;&#x5982;&#x679c",{"_index":2756,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x53d6;&#x503c",{"_index":1478,"title":{"num.html#取值":{}},"body":{}}],["x53d6;&#x503c;undefin",{"_index":1190,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x53d6;&#x5c0f;&#x6578;&#x524d;&#x7684",{"_index":1912,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x53d6;&#x5f97;&#x7279;&#x5b9a;&#x503c;&#x7684;&#x65b9;&#x6cd5",{"_index":1377,"title":{},"body":{"core.html#屬性特徵":{}}}],["x53d6;&#x5f97;&#x9663;&#x5217;&#x6700;&#x5f8c;&#x4e00;&#x500b;&#x503c",{"_index":1381,"title":{},"body":{"core.html#屬性特徵":{}}}],["x53d6;&#x9910;&#x7684;&#x865f;&#x78bc;&#x724c;&#xff0c;&#x8a8d;&#x865f;&#x4e0d;&#x8a8d;&#x4eba",{"_index":2136,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x53e6;&#x5916;&#xff0c;&#x9019;&#x88e1;&#x70ba;&#x4f55;&#x8981;&#x7528;data",{"_index":1791,"title":{},"body":{"performance.html#懶加載":{}}}],["x53ea;&#x57f7;&#x884c",{"_index":296,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x53ea;&#x6709;&#x4e00;&#x500b;&#x5c6c;&#x6027;&#x503c;&#xff0c;&#x5c31;&#x662f",{"_index":2737,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x53ea;&#x67e5;&#x8a62;&#x4e00;&#x500b",{"_index":1799,"title":{},"body":{"performance.html#DOM-查詢做緩存":{}}}],["x53ea;&#x80fd;&#x5728;&#x51fd;&#x6578;&#x5167;&#x4f7f;&#x7528",{"_index":2967,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x53ef;&#x4ee5;&#x4f5c;&#x70ba;&#x547c;&#x53eb",{"_index":1649,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":2900,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x53ef;&#x4ee5;&#x505a;&#x5230;&#x9664;&#x4e86;&#x88ab;&#x51cd;&#x7d50",{"_index":1410,"title":{},"body":{"core.html#const":{}}}],["x53ef;&#x4ee5;&#x505a;&#x5f88;&#x591a;&#x4e0d;&#x540c;&#x4e8b;&#x60c5",{"_index":1276,"title":{},"body":{"core.html#函式工廠":{}}}],["x53ef;&#x4ee5;&#x628a;&#x5176;&#x4ed6;&#x7269;&#x4ef6;&#x4f5c;&#x70ba;&#x539f;&#x578b;&#x4f7f;&#x7528",{"_index":1340,"title":{},"body":{"core.html#繼承":{}}}],["x53ef;&#x4ee5;&#x900f;&#x904e;&#x9ede;&#x904b;&#x7b97;&#x5b50;&#x4e0d;&#x65b7;&#x5411;&#x4e0a;&#x67e5;&#x627e;&#x53d6;&#x5f97;&#x65b9;&#x6cd5",{"_index":1197,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x53ef;&#x4ee5;&#x91cd;&#x65b0;&#x8ce6;&#x503c",{"_index":2966,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x53ef;&#x5229;&#x7528",{"_index":1006,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x53ef;&#x5426;&#x5beb;&#x5165",{"_index":1362,"title":{},"body":{"core.html#屬性特徵":{}}}],["x53ef;&#x5426;&#x88ab;&#x5217;&#x8209",{"_index":1364,"title":{},"body":{"core.html#屬性特徵":{}}}],["x53ef;&#x5426;&#x88ab;&#x522a;&#x9664",{"_index":1363,"title":{},"body":{"core.html#屬性特徵":{}}}],["x53ef;&#x7528;&#x5305;&#x88f9;&#x7269;&#x4ef6;&#x7684;&#x6240;&#x6709;&#x65b9;&#x6cd5",{"_index":1064,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x5408;&#x4f75",{"_index":1802,"title":{"performance.html#合併-DOM-插入-createDocumentFragment":{}},"body":{}}],["x5408;&#x4f75;&#x7269;&#x4ef6",{"_index":2637,"title":{"object/assign.html#合併物件":{}},"body":{}}],["x540c;&#x6642;&#x5b58;&#x5728;&#x7684;&#x6642;&#x5019;&#xff0c;pragma",{"_index":2734,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x540c;&#x6a23;&#x662f;&#x7269;&#x4ef6;&#x578b;&#x5225",{"_index":1106,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x540c;&#x6b65;&#x6982;&#x5ff5;&#x7684;&#x5148;&#x8dd1;&#x5b8c",{"_index":1009,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x540c;&#x6b65;/&#x975e;&#x540c;&#x6b65",{"_index":1003,"title":{"core.html#同步-非同步":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x547c;&#x53eb",{"_index":1662,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x548c",{"_index":1902,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["x548c;&#x524d;&#x7f6e;&#x905e;&#x589",{"_index":1975,"title":{},"body":{"operators.html#Increment":{}}}],["x548c;&#x7576;&#x524d;&#x6587;&#x4ef6;&#x7684",{"_index":2754,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x548c;gpu",{"_index":1758,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x54cd;&#x5e94;&#x5f0f;&#x6838;&#x5fc3;&#x5c31;&#x662f;&#xff0c;gett",{"_index":1402,"title":{},"body":{"core.html#屬性特徵":{}}}],["x554f;&#x984c",{"_index":1888,"title":{},"body":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x5584;&#x7528",{"_index":1924,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x55ae;&#x7d14;&#x8fed;&#x4ee3;&#x9663;&#x5217;&#x7684;&#x8a71;&#xff0c;for&#x2026;in",{"_index":3047,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x56b4;&#x683c;&#x6a21;&#x5f0f",{"_index":1311,"title":{},"body":{"core.html#this":{}}}],["x56b4;&#x683c;&#x6a21;&#x5f0f;&#x4e0b",{"_index":1316,"title":{},"body":{"core.html#this":{}}}],["x56b4;&#x683c;&#x76f8;&#x7b49",{"_index":1088,"title":{"core.html#嚴格相等-寬鬆相等":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x56de;&#x4f86;&#xff0c;&#x56de;&#x50b3;&#x7684;&#x662f;&#x7d81;&#x5b9a",{"_index":1653,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x56de;&#x50b3;&#x300c;key&#x300d",{"_index":3050,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x56de;&#x50b3;&#x300c;key&#x300d;&#xff0c;&#x4e14;&#x6703;&#x8b80;&#x53d6;&#x5230;&#x9663;&#x5217;&#x65b0;&#x589e;&#x7684;&#x5c6c;&#x6027;&#x540d;&#x7a31",{"_index":3057,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x56de;&#x50b3;&#x300c;value&#x300d",{"_index":3051,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x56de;&#x50b3;&#x7b2c;&#x4e00;&#x500b;&#x6eff;&#x8db3;&#x6240;&#x63d0;&#x4f9b;&#x4e4b;&#x6e2c;&#x8a66;&#x51fd;&#x5f0f;&#x7684;&#x5143;&#x7d20;&#x503c;&#x3002;&#x5426;&#x5247;&#x56de;&#x50b3",{"_index":2264,"title":{},"body":{"array/array_methods.html#find":{}}}],["x56de;&#x547c;&#x51fd;&#x5f0f",{"_index":1694,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x56e0;&#x4e3a;sum&#x662f;&#x5e38;&#x89c4;&#x51fd;&#x6570;&#xff0c;&#x6240;&#x4ee5;&#x5728;&#x8abf;&#x7528",{"_index":385,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x56e0;&#x70ba",{"_index":1901,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x56e0;&#x70ba;&#x4ed6;&#x5011;&#x6839;&#x672c;&#x662f;&#x540c;&#x4e00;&#x500b;&#x7269;&#x4ef6;&#xff0c;&#x9019;&#x5c31;&#x662f;&#x6240;&#x8b02;&#x7684",{"_index":488,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x56e0;&#x70ba;&#x51fd;&#x5f0f;&#x5728;&#x57f7;&#x884c;&#x6642;&#xff0c;&#x8b8a;&#x6578;&#x9084;&#x6c92;&#x6709;&#x88ab;&#x8ce6;&#x4e88;&#x503c",{"_index":1002,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x56e0;&#x70ba;&#x5b83;&#x672c;&#x8cea;&#x5c31;&#x662f;undefin",{"_index":1321,"title":{},"body":{"core.html#this":{}}}],["x56e0;&#x70ba;&#x5c0d;&#x6211;&#x5011;&#x4f86;&#x8aaa;&#xff0c;&#x6211;&#x5011;&#x5be6;&#x969b;&#x662f;&#x5728;&#x8a2a;&#x554f",{"_index":2124,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x56e0;&#x70ba;&#x6d6e;&#x9ede;&#x6578;&#x96bb;&#x6709;52&#x4f4d;&#x6709;&#x6548;&#x6578;&#x5b57;&#xff0c;&#x5f9e;&#x7b2c;53&#x4f4d;&#x958b;&#x59cb;&#xff0c;&#x5c31;&#x820d;&#x5165;&#x4e86;&#x3002;&#x9019;&#x6a23;&#x5c31;&#x9020;&#x6210;&#x4e86;&#x201c;&#x6d6e;&#x9ede;&#x6578;&#x7cbe;&#x5ea6;&#x640d;&#x5931;&#x201d;&#x554f;&#x984c;&#x3002",{"_index":1900,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x56e0;&#x70ba;&#x7570;&#x6b65;&#x51fd;&#x6578;&#x5fc5;&#x9808;&#x7b49;&#x4e3b;&#x9032;&#x7a0b;&#x904b;&#x884c;&#x5b8c;&#x7562;&#x624d;&#x6703;&#x904b;&#x884c;&#xff0c;settimeout()&#x5167;&#x90e8;&#x56de;&#x8abf;&#x904b;&#x884c;&#x7684;&#x6642;&#x5019;&#xff0c;&#x4e3b;&#x9032;&#x7a0b;&#x5df2;&#x7d93;&#x904b;&#x884c;&#x5b8c;&#x7562;&#x4e86;&#xff0c;&#x6b64;&#x6642;i=5&#xff0c;&#x6240;&#x4ee5;&#x8f38;&#x51fa;5&#x3002",{"_index":286,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x56e0;&#x70ba;&#x8a9e;&#x5f59;&#x4e0a;&#x80fd;&#x5920;&#x5f15;&#x7528;self&#x8b8a;&#x6578;&#xff08;&#x540c;&#x500b;&#x584a;&#x4f5c;&#x7528;&#x57df;&#xff09",{"_index":2838,"title":{},"body":{"global/function.html#bind":{}}}],["x56e0;&#x70ba;object.assign&#x8ddf;&#x6211;&#x5011;&#x624b;&#x52d5;&#x8907;&#x88fd;&#x7684;&#x6548;&#x679c;&#x76f8;&#x540c",{"_index":502,"title":{},"body":{"copy.html#Object-assign":{}}}],["x570b;&#x969b;&#x6a19;&#x6e96",{"_index":2628,"title":{},"body":{"global/date.html#Date-prototype-toISOString":{}}}],["x5716;&#x89e3",{"_index":2786,"title":{},"body":{"http/caching.html#References":{}}}],["x5718;&#x968a",{"_index":1969,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x5728",{"_index":1000,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x5728;&#x4e00;&#x500b;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#x4e2d;&#x5b9a;&#x7fa9;&#x53e6;&#x4e00;&#x500b;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#xff0c;&#x53ef;&#x4ee5;&#x5e6b;&#x52a9;&#x6211;&#x5011;&#x628a;&#x8907;&#x96dc;&#x7684;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#x62c6;&#x5206;&#x6210;&#x66f4;&#x5c0f;&#x7684;&#xff0c;&#x53ef;&#x91cd;&#x7528;&#x7684;&#x788e;&#x7247;&#x3002",{"_index":2526,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5728;&#x4e8c;&#x9032;&#x88fd;&#x8868;&#x793a;&#x70ba",{"_index":1905,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5728;&#x5275;&#x9020;&#x74b0;&#x5883;&#x628a;&#x8a18;&#x61b6;&#x9ad4;&#x7a7a;&#x9593;&#x6e96;&#x5099;&#x597d;&#xff0c;&#x9019;&#x500b;&#x6d41;&#x7a0b;&#x7a31;&#x70ba",{"_index":979,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5728;&#x5275;&#x9020;&#x968e;&#x6bb5;&#x5c31;&#x6703",{"_index":987,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5728;&#x539f;&#x6709;&#x968a;&#x5217;&#x7684;&#x57fa;&#x790e;&#x4e0a;&#x64f4;&#x5145;&#x4e86;&#xff1a;&#x968a;&#x982d;&#x3001;&#x968a;&#x5c3e;&#x90fd;&#x53ef;&#x4ee5;&#x9032;&#x968a;&#x51fa;&#x968a",{"_index":3146,"title":{},"body":{"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["x5728;&#x539f;&#x672c;&#x7684;&#x9663;&#x5217;&#xff0c;&#x65b0;&#x589e;&#x4e00;&#x500b;&#x5c6c;&#x6027",{"_index":3052,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x5728;&#x67d0;&#x500b;&#x7cbe;&#x5ea6;&#x9ede;&#x76f4;&#x63a5;&#x6368;&#x68c4",{"_index":1917,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5728;&#x6bcf;&#x4e00;&#x6b21;&#x8fed;&#x4ee3;&#x7684;&#x4f7f;&#x7528;&#x4e2d;&#x90fd;&#x6703;&#x7522;&#x751f;&#x526f;&#x4f5c;&#x7528;&#xff0c;&#x56e0;&#x6b64",{"_index":2290,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x5728;&#x6bcf;&#x500b;&#x57f7;&#x884c;&#x74b0;&#x5883;&#x5b58;&#x5728",{"_index":1280,"title":{},"body":{"core.html#this":{}}}],["x5728;&#x7acb;&#x5373;&#x51fd;&#x5f0f;&#x524d;&#x6216;&#x5f8c;&#x52a0;&#x5206;&#x865f",{"_index":1254,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x5728;&#x8fed;&#x4ee3",{"_index":3035,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x5728;&#x9019;&#x4e9b;&#x60c5;&#x6cc1;&#x4e0b;&#xff0c;&#x6211;&#x5011;&#x53ef;&#x4ee5;&#x8fd4;&#x56d",{"_index":2548,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x57f7;&#x884c",{"_index":378,"title":{},"body":{"arrowFunction.html#Arrow-Function":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#const":{}}}],["x57f7;&#x884c;&#x51fd;&#x5f0f;&#x7684;&#x7d50;&#x679c",{"_index":1632,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x57f7;&#x884c;&#x6642;&#x76f4;&#x63a5;&#x628a;&#x51fd;&#x6578;&#x53d6;&#x51fa;&#x4f86",{"_index":1631,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x57f7;&#x884c;&#x7269;&#x4ef6;&#x7684;&#x51fd;&#x5f0f",{"_index":1145,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x57f7;&#x884c;&#x932f;&#x8aa4",{"_index":1053,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x57f7;&#x884c;&#x9589;&#x5305;&#x5167;&#x51fd;&#x5f0f;&#x4e5f;&#x662f",{"_index":1294,"title":{},"body":{"core.html#this":{}}}],["x57f7;&#x884c;&#x968e;&#x6bb5",{"_index":985,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x57f7;&#x884c;&#x968e;&#x6bb5;&#x624d;&#x6703;&#x8ce6;&#x4e88;&#x78ba;&#x7acb;&#x578b;&#x5225",{"_index":1056,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x57f7;&#x884c;&#x968e;&#x6bb5;&#x624d;&#x78ba;&#x8a8d;&#x578b;&#x5225",{"_index":1058,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x57fa;&#x672c;&#x578b;&#x5225;&#x662f;&#x50b3",{"_index":482,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x5916;&#x5c64;&#x5c0f;&#x62ec;&#x865f;&#x5305;&#x8d77;&#x4f86",{"_index":1031,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{}}}],["x5916;&#x90e8;&#x7121;&#x6cd5;&#x5b58;&#x53d6",{"_index":2968,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x591a;&#x4f7f;&#x7528;&#x5167;&#x5b58;&#x3001;&#x7de9;&#x5b58;&#x6216;&#x8005;&#x5176;&#x4ed6;&#x65b9;&#x6cd5",{"_index":1756,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x591a;&#x6578;&#x6642;&#x5019;&#x4e00;&#x822c;&#x51fd;&#x6578;&#x7121;&#x7570;&#xff0c;&#x4f46;&#x662f;&#x6700;&#x5927;&#x7684;&#x5dee;&#x5225;&#x5728;&#x65bc",{"_index":2823,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x591a;&#x9805;&#x5f0f;&#x6642;&#x9593",{"_index":3142,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x5927;&#x578b;&#x6846;&#x67b6;&#x4e0b",{"_index":1257,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x5927;&#x90e8;&#x5206;session&#x6a5f;&#x5236;&#x90fd;&#x4f7f;&#x7528;&#x6703;&#x8a71;cookie&#x4f86;&#x4fdd;&#x5b58;sess",{"_index":2161,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x597d;&#x6d88;&#x606f;&#x662f;&#x5728",{"_index":1965,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x5982;&#x4f55;&#x5feb;&#x901f;&#x5c07;&#x4e00;&#x500b;&#x5b57;&#x7b26;&#x4e32;&#x6578;&#x7d44;&#x8f49;&#x5316;&#x70ba;&#x6578;&#x5b57;&#x985e;&#x578b;&#x7684;&#x6578;&#x7d44",{"_index":2443,"title":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}},"body":{}}],["x5982;&#x540c;&#x51fd;&#x5f0f;&#x8868;&#x9054;&#x5f0f",{"_index":1235,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x5982;&#x679c",{"_index":1122,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x5982;&#x679c;&#x4f60;&#x53ea;&#x662f;&#x5c0d;&#x6578;&#x5b57;&#x9032;&#x884c;&#x904d;&#x6b77;&#x6642;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":2293,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x5982;&#x679c;&#x4f60;&#x9700;&#x8981;&#x8fed;&#x4ee3;&#x4e00;&#x500b;&#x9663;&#x5217;&#xff0c;&#x4f7f;&#x5176;&#x672c;&#x8eab;&#x767c;&#x751f;&#x8b8a;&#x5316;&#x4e14;&#x4e0d;&#x9700;&#x8981;&#x8fd4;&#x56de;&#x4e00;&#x500b;&#x65b0;&#x9663;&#x5217;&#x6642;&#xff0c;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":2292,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x5982;&#x679c;&#x5169;&#x500b;&#x55ae;&#x8a5e;&#x9593;&#x6709;&#x591a;&#x9918;&#x7684;&#x7a7a;&#x683c;&#xff0c;&#x5c07;&#x53cd;&#x8f49;&#x5f8c;&#x55ae;&#x8a5e;&#x9593;&#x7684;&#x7a7a;&#x683c;&#x6e1b;&#x5c11;&#x5230;&#x53ea;&#x542b;&#x4e00;&#x500b;&#x3002",{"_index":3155,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x5982;&#x679c;&#x55ae;&#x5c31;&#x5be6;&#x73fe;&#x529f;&#x80fd;&#xff0c;cookie&#x8207;session&#x5f7c;&#x6b64;&#x4e4b;&#x9593;&#x662f;&#x53ef;&#x4ee5;&#x4e92;&#x63db;&#x7684;(&#x6307;&#x7684;&#x662f;&#x4f60;&#x53ef;&#x4ee5;&#x628a;&#x8cc7;&#x6599;&#x5b58;&#x653e;&#x5728;session&#x6216;&#x662f;cookie&#xff0c;&#x4e26;&#x4e0d;&#x662f;&#x6307;session&#x53ef;&#x4ee5;&#x88ab;&#x653e;&#x5728;client&#x7aef;&#x7576;cookie&#x4f7f;&#x7528;)&#x3002;&#x4f46;&#x662f;cookie&#x5728;&#x6700;&#x55ae;&#x7d14;&#x7684;&#x60c5;&#x6cc1;&#x88e1;&#xff0c;&#x662f;&#x6709;&#x5b89;&#x5168;&#x6027;&#x7684;&#x554f;&#x984c;(&#x8cc7;&#x6599;&#x5728;client&#x7aef;)&#x3002;&#x6240;&#x4ee5;&#x8003;&#x91cf;&#x5230;&#x9019;&#x9ede;&#xff0c;&#x5927;&#x90e8;&#x5206;&#x90fd;&#x6703;&#x9078;&#x64c7;session&#x3002;&#x4f46;&#x662f;&#x6b63;&#x5982;cookie&#x662f;&#x4e00;&#x500b;&#x5916;&#x52a0;&#x7684;&#x529f;&#x80fd;&#xff0c;session&#x4e5f;&#x4e0d;&#x5c6c;&#x65bc;http&#x5354;&#x5b9a;&#x3002;&#x53ea;&#x8981;&#x662f;&#x5916;&#x52a0;&#x529f;&#x80fd;&#xff0c;&#x5c31;&#x5fc5;&#x9808;&#x984d;&#x5916;&#x5beb;&#x7a0b;&#x5f0f;&#x5be6;&#x73fe;&#x3002",{"_index":2167,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5982;&#x679c;&#x6211;&#x5011;&#x4f7f;&#x7528;&#x7b2c;&#x4e00;&#x65b9;cookie&#xff0c;&#x6703;&#x70ba;&#x57df;&#x540d;a&#x5efa;&#x7acb;&#x4e00;&#x500b;cookie&#xff0c;&#x70ba;&#x57df;&#x540d;b&#x518d;&#x5efa;&#x7acb;&#x4e00;&#x500b;cookie&#xff0c;&#x4ed6;&#x5011;&#x53ef;&#x4ee5;&#x95dc;&#x806f;&#x5404;&#x81ea;&#x57df;&#x540d;&#x4e0b;&#x7db2;&#x9801;&#x4e0a;&#x7684;&#x884c;&#x70ba;&#xff0c;&#x4f46;&#x662f;&#x7121;&#x6cd5;&#x95dc;&#x806f;&#x8d77;&#x4f86;&#x3002",{"_index":2128,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5982;&#x679c;&#x6587;&#x4ef6;&#x7684;&#x4fee;&#x6539;&#x983b;&#x7387;&#x5728;&#x79d2;&#x7d1a;&#x4ee5;&#x4e0b;&#xff0c;last",{"_index":2783,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x5982;&#x679c;&#x6587;&#x4ef6;&#x88ab;&#x4fee;&#x6539;&#x4e86;&#xff0c;&#x4f46;&#x662f;&#x5167;&#x5bb9;&#x6c92;&#x6709;&#x4efb;&#x4f55;&#x8b8a;&#x5316;&#x7684;&#x6642;&#x5019;&#xff0c;last",{"_index":2785,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x5982;&#x679c;&#x6f14;&#x7b97;&#x6cd5;&#x4e2d;&#x5305;&#x542b;&#x5de2;&#x72c0;&#x7684;&#x8ff4;&#x5708;&#xff0c;&#x5247;&#x57fa;&#x672c;&#x8a9e;&#x53e5;&#x901a;&#x5e38;&#x662f;&#x6700;&#x5167;&#x5c64;&#x7684;&#x8ff4;&#x5708;&#x9ad4;&#xff0c;&#x5982;&#x679c;&#x6f14;&#x7b97;&#x6cd5;&#x4e2d;&#x5305;&#x542b;&#x4e26;&#x5217;&#x7684;&#x8ff4;&#x5708;&#xff0c;&#x5247;&#x5c07;&#x4e26;&#x5217;&#x8ff4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x76f8;&#x52a0;&#x3002;&#x4f8b;&#x5982;&#xff1a",{"_index":3130,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x5982;&#x679c;&#x700f;&#x89bd;&#x5668;&#x4e0d;&#x652f;&#x63f4",{"_index":1357,"title":{},"body":{"core.html#繼承":{}}}],["x5982;&#x679c;&#x8981;&#x4f7f;&#x7528",{"_index":1429,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x5982;&#x679c;&#x9084;&#x662f;&#x8a2a;&#x554f",{"_index":2117,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5b57;&#x4e32;&#x900f;&#x904e;parseint",{"_index":1681,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x5b57;&#x4e32;1",{"_index":1092,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x5b58;&#x503c;&#x7684;&#x65b9;&#x6cd5",{"_index":1378,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5b58;&#x653e;&#x5728;&#x5167;&#x5b58;&#x4e2d;)&#xff0c;&#x5b58;&#x653e;&#x7684;&#x4f4d;&#x7f6e;&#x662f;&#x7531;&#x700f;&#x89bd;&#x5668;&#x63a7;&#x5236;&#x7684;&#x3002",{"_index":2695,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x5b58;&#x653e;&#x5728;&#x786c;&#x76e4;&#x4e2d;)&#x548c",{"_index":2694,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x5b83;&#x5728;javascript",{"_index":1036,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x5b83;&#x8868;&#x793a;&#x4e86;&#x300c;&#x9762;&#x5411;&#x3001;&#x9023;&#x63a5;&#x300d;&#x548c;/&#x6216;&#x300c;&#x4fdd;&#x6301;&#x72c0;&#x614b;&#x300d;&#x9019;&#x6a23;&#x5169;&#x500b;&#x7570;&#x8b70",{"_index":2140,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5b89;&#x88dd;&#x6559;&#x5b78;&#xff1a",{"_index":1427,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x5b8c;&#x5168;&#x7d81;&#x5b9a;&#x5728;&#x8a9e;&#x5f59;&#x4e0a;&#x7684;&#x4f4d;&#x7f6e;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#x5728",{"_index":2826,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x5b9a;&#x7fa9;&#x5c0d;&#x8c61;&#x4e0a;&#x7684;&#x65b9;&#x6cd5",{"_index":373,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x5b9e;&#x4f8b;&#x4f5c;&#x4e3a",{"_index":1392,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5ba3;&#x544a",{"_index":1067,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x5bb9;&#x6613;&#x51fa;&#x932f;&#x7684;&#x5730;&#x65b9",{"_index":1045,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x5be6;&#x73fe;&#x975e;&#x540c;&#x6b65",{"_index":1008,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x5be6;&#x969b;&#x57f7;&#x884c;&#x5728;&#x9019",{"_index":1261,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["x5be6;&#x969b;&#x904b;&#x4f5c;&#x62c6;&#x89e3",{"_index":999,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5be6;&#x9ad4",{"_index":1338,"title":{},"body":{"core.html#繼承":{}}}],["x5beb;&#x6cd5;&#xff0c;&#x5982;&#x679c;&#x4ee5;&#x5f8c;&#x6709;&#x4ec0;&#x9ebc;&#x689d;&#x4ef6;&#x6539;&#x4e86;&#xff0c;&#x76f4;&#x63a5;&#x6539",{"_index":2901,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x5bec;&#x9b06;&#x76f8;&#x7b49",{"_index":1089,"title":{"core.html#嚴格相等-寬鬆相等":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x5bf9;&#x8c61;&#x4f20;&#x5165",{"_index":1391,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5c01;&#x88dd",{"_index":1369,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5c06;&#x904d;&#x5386;&#x6b64;&#x5bf9;&#x8c61;&#x6240;&#x6709;&#x7684;&#x5c5e;&#x6027;&#xff0c;&#x5e76;&#x4f7f;&#x7528",{"_index":1394,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5c07;&#x5b83;&#x5011;&#x5206;&#x89e3;&#x6210;&#x591a;&#x500b;&#x4e0d;&#x540c;&#x7684;&#x5de5;&#x5ee0;&#x901a;&#x5e38;&#x662f;&#x6709;&#x5e6b;&#x52a9;&#x7684;&#xff0c;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x5982;&#x4e0b;&#x7de8;&#x5beb;&#x3002",{"_index":2552,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5c07;&#x5de5;&#x5ee0;&#x50b3;&#x905e;&#x7d66;&#x9ad8;&#x968e;&#x51fd;&#x6578;&#xff0c;&#x9019;&#x5c07;&#x7d66;&#x6211;&#x5011;&#x5e36;&#x4f86;&#x5de8;&#x5927;&#x7684;&#x63a7;&#x5236;&#x529b;&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x6211;&#x5011;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x9019;&#x500b;&#x6982;&#x5ff5;&#x4f86;&#x5275;&#x5efa;&#x4e00;&#x500b;&#x589e;&#x5f37;&#x7684;&#x5c0d;&#x8c61;&#x3002",{"_index":2564,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5c07;&#x6703;&#x88ab;&#x7f6e;&#x63db;&#x6210;&#x5168;&#x57df;&#x8b8a;&#x6578",{"_index":1310,"title":{},"body":{"core.html#this":{}}}],["x5c07;&#x8fd4;&#x56de",{"_index":2404,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x5c0d;&#x4e00;&#x500b;&#x9663;&#x5217;&#x7684;&#x6240;&#x6709;&#x5143;&#x7d20;&#x9032;&#x884c;&#x6392;&#x5e8f;&#xff0c;&#x4e26;&#x56de;&#x50b3;&#x6b64;&#x9663;&#x5217",{"_index":2265,"title":{},"body":{"array/array_methods.html#sort":{}}}],["x5c0d;&#x5143;&#x7d20;&#x91cd;&#x65b0;&#x7d44;&#x88dd;&#xff0c;&#x751f;&#x6210;&#x65b0;&#x9663;&#x5217",{"_index":2260,"title":{},"body":{"array/array_methods.html#map":{},"array/map.html#map":{}}}],["x5c0d;&#x8c61",{"_index":377,"title":{},"body":{"arrowFunction.html#Arrow-Function":{},"operators/precedence.html#運算符比-運算符高":{}}}],["x5c0d;&#x8c61;&#x53ef;&#x4ee5;&#x7528",{"_index":2532,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5c0f;&#x62ec;&#x865f;&#x53ef;&#x4ee5;&#x79fb;&#x5230;&#x5916;&#x5c64",{"_index":1250,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x5c0f;&#x6578",{"_index":1887,"title":{},"body":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x5c0f;&#x6578;&#x7684;&#x7b97;&#x6cd5;&#xff0c;&#x662f;&#x4e58;2",{"_index":1908,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5c31;&#x662f;&#x7269;&#x4ef6",{"_index":1160,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x5c31;&#x662f;&#x7c21;&#x6613;&#x547c;&#x53eb",{"_index":1293,"title":{},"body":{"core.html#this":{}}}],["x5c31;&#x6703;&#x505a;&#x539f;&#x578b;&#x4e0a;&#x7684;&#x65b9;&#x6cd5",{"_index":1328,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x5c3e;&#x6578",{"_index":1898,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5c5e;&#x6027;&#xff0c;&#x811a;&#x672c;&#x5c31;&#x4f1a;&#x5f02;&#x6b65;&#x52a0;&#x8f7d;&#x3002;&#x6e32;&#x67d3;&#x5f15;&#x64ce;&#x9047;&#x5230;&#x8fd9;&#x4e00;&#x884c;&#x547d;&#x4ee4;&#xff0c;&#x5c31;&#x4f1a;&#x5f00;&#x59cb;&#x4e0b;&#x8f7d;&#x5916;&#x90e8;&#x811a;&#x672c;&#xff0c;&#x4f46;&#x4e0d;&#x4f1a;&#x7b49;&#x5b83;&#x4e0b;&#x8f7d;&#x548c;&#x6267;&#x884c",{"_index":230,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["x5c6c;&#x6027",{"_index":1148,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#屬性特徵":{}}}],["x5c6c;&#x6027;&#x3002",{"_index":2746,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x5c6c;&#x6027;&#x4e2d;&#x662f;&#x6700;&#x4f4e;&#x7684;&#x3002",{"_index":2704,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x5c6c;&#x6027;&#x5171;&#x540c;&#x4f86;&#x63a7;&#x5236;&#x3002",{"_index":2697,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x5c6c;&#x6027;&#x7279;&#x5fb5",{"_index":1359,"title":{"core.html#屬性特徵":{}},"body":{}}],["x5c6c;&#x6027;&#xff0c;&#x8abf;&#x6574;&#x5c6c;&#x6027;&#x7684;&#x7279;&#x5fb5",{"_index":1360,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5de5;&#x5ee0;&#x5141;&#x8a31;&#x6211;&#x5011;&#x5f9e;&#x8a08;&#x7b97;&#x4e2d;&#x5206;&#x96e2;&#x6211;&#x5011;&#x7684;&#x6578;&#x64da;&#x3002",{"_index":2561,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5de5;&#x5ee0;&#x9f13;&#x52f5;&#x6211;&#x5011;&#x7528;&#x539f;&#x59cb;&#x6578;&#x64da;&#x4f86;&#x6a21;&#x64ec;&#x8907;&#x96dc;&#x548c;&#x7570;&#x6b65;&#x6578;&#x64da;&#xff0c;&#x539f;&#x59cb;&#x6578;&#x64da;&#x5177;&#x6709;&#x7d44;&#x5408;&#x7684;&#x81ea;&#x7136;&#x80fd;&#x529b;&#xff0c;&#x800c;&#x4e0d;&#x5f37;&#x8feb;&#x6211;&#x5011;&#x53bb;&#x505a;&#x4e00;&#x4e9b;&#x9ad8;&#x7d1a;&#x62bd;&#x8c61;&#x3002;&#x7576;&#x6211;&#x5011;&#x5805;&#x6301;&#x7c21;&#x55ae;&#x6642;&#xff0c;javascript&#x66f4;&#x751c;&#x871c;&#xff01",{"_index":2570,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5de6;&#x53f3;&#x5169;&#x908a;&#x653e;&#x7684;&#x662f;&#x8868;&#x9054;&#x5f0f",{"_index":1124,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x5de6;&#x79fb;3",{"_index":439,"title":{},"body":{"closures.html#傳多個函數":{}}}],["x5dee;&#x5225;&#x5728;&#x4ee5;&#x9663;&#x5217;&#x65b9;&#x5f0f;&#x5448;&#x73f",{"_index":1299,"title":{},"body":{"core.html#this":{}}}],["x5df2;&#x53ef;&#x4ee5;&#x904b;&#x884c",{"_index":993,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5df2;&#x5efa;&#x69cb;&#x5f0f;&#x65b9;&#x5f0f;&#x5448;&#x73f",{"_index":1307,"title":{},"body":{"core.html#this":{}}}],["x5e03;&#x6797;&#x548c;&#x5b57;&#x4e32;&#x8f49;&#x70ba;&#x6578;&#x503c",{"_index":1095,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x5e38;&#x898b;&#x554f;&#x984c",{"_index":1437,"title":{},"body":{"core.html#箭頭函數":{}}}],["x5e38;&#x898b;&#x7684;&#x6f14;&#x7b97;&#x6cd5;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x7531;&#x5c0f;&#x5230;&#x5927;&#x4f9d;&#x6b21;&#x70ba;&#xff1a",{"_index":3139,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x5e38;&#x898f;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f",{"_index":382,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x5e73;&#x5747;&#x6578",{"_index":1443,"title":{},"body":{"core.html#箭頭函數":{}}}],["x5ef6;&#x4f38;&#x7684;&#x4e09;&#x7a2e;&#x7269;&#x4ef6;&#x65b9;&#x6cd5",{"_index":1367,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5efa;&#x69cb;&#x521d;&#x59cb;&#x5316",{"_index":1385,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5efa;&#x69cb;&#x5f0f",{"_index":1066,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x5efa;&#x69cb;&#x5f0f;&#x5ba3;&#x544a;&#x7684;&#x975e;&#x539f;&#x59cb;&#x578b;&#x5225",{"_index":1068,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x5efa;&#x8b70;&#x90fd;&#x4f7f;&#x7528;&#x8907;&#x6578",{"_index":180,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x5f37;&#x7de9;&#x5b58",{"_index":2688,"title":{"http/caching.html#強緩存":{}},"body":{}}],["x5f37;&#x7de9;&#x5b58;&#x8d85;&#x6642;&#x6642;&#x9593;&#x70ba;10&#x79d2",{"_index":2724,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x5f53;&#x4f60;&#x628a;&#x4e00;&#x4e2a;&#x666e;&#x901a;&#x7684",{"_index":1390,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5f88;&#x91cd;&#x8981;&#x3002",{"_index":3034,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x5f8c;&#x65b9;&#x662f;&#x63d2;&#x5165;&#x4e00;&#x500b;callback&#x51fd;&#x5f0f",{"_index":1295,"title":{},"body":{"core.html#this":{}}}],["x5f8c;&#x7684",{"_index":1654,"title":{},"body":{"this.html#bind-apply-call":{},"global/function.html#cab-call-apply-vs-bind":{}}}],["x5f8c;&#x7aef;&#x6e32;&#x67d3;&#xff0c;&#x6578;&#x64da;&#x76f4;&#x63a5;&#x8f38;&#x51fa;&#x5230",{"_index":1779,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x5f8c;&#x7e8c;&#x7684;&#x503c;&#x8b8a;&#x66f4;&#xff0c;&#x539f;&#x672c;&#x7684;&#x503c;&#x4e5f;&#x6703;&#x8b8a;&#x66f4",{"_index":1212,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x5f8c;&#x7f6e;&#x905e;&#x589",{"_index":1974,"title":{},"body":{"operators.html#Increment":{}}}],["x5f8c;&#x7f6e;&#x905e;&#x589e;&#x662f;&#x5148;&#x8ce6;&#x503c;&#x5f8c;&#x8a08;&#x7b97;&#xff0c;&#x5982;&#xff1a",{"_index":1979,"title":{},"body":{"operators.html#Increment":{}}}],["x5f9e;&#x4e0a;&#x9762;&#x53ef;&#x4ee5;&#x770b;&#x51fa;&#xff0c;0.1&#x7684;&#x4e8c;&#x9032;&#x5236;&#x683c;&#x5f0f;&#x662f;&#xff1a;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662f;&#x4e00;&#x500b;&#x4e8c;&#x9032;&#x5236;&#x7121;&#x9650;&#x5faa;&#x74b0;&#x5c0f;&#x6578;&#xff0c;&#x4f46;&#x8a08;&#x7b97;&#x6a5f;&#x5167;&#x5b58;&#x6709;&#x9650;&#xff0c;&#x6211;&#x5011;&#x4e0d;&#x80fd;&#x7528;&#x5132;&#x5b58;&#x6240;&#x6709;&#x7684;&#x5c0f;&#x6578;&#x4f4d;&#x6578;&#x3002;&#x90a3;&#x9ebc;&#x5728;&#x7cbe;&#x5ea6;&#x8207;&#x5167;&#x5b58;&#x9593;&#x5982;&#x4f55;&#x53d6;&#x6368;&#x5462;&#xff1f",{"_index":1915,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5f9e;&#x5927;&#x5230;&#x5c0f;&#x6392;&#x5e8f",{"_index":2267,"title":{},"body":{"array/array_methods.html#sort":{}}}],["x5f9e;&#x5c0f;&#x5230;&#x5927;&#x6392;&#x5e8f",{"_index":2266,"title":{},"body":{"array/array_methods.html#sort":{}}}],["x5f9e;&#x5de6;&#x81f3;&#x53f3",{"_index":1086,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x5faa;&#x74b0;&#x57f7;&#x884c;&#x904e;&#x7a0b;&#x4e2d;&#xff0c;&#x5e7e;&#x4e4e;&#x540c;&#x6642;&#x8a2d;&#x7f6e;&#x4e86",{"_index":287,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x6027;&#x540d;&#x7a31;(key",{"_index":3039,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x6027;&#x80fd;&#x512a;&#x5316;&#x7684;&#x539f;&#x5247;&#x662f;&#x4ee5;&#x66f4;&#x597d;&#x7684;&#x7528;&#x6236;&#x9ad4;&#x9a57;&#x70ba;&#x6a19;&#x6e96;&#xff0c;&#x5177;&#x9ad4;&#x5c31;&#x662f;&#x5be6;&#x73fe;&#x4e0b;&#x9762;&#x7684;&#x76ee;&#x6a19;&#xff1a",{"_index":1755,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x61f6;&#x52a0;&#x8f09",{"_index":1783,"title":{"performance.html#懶加載":{}},"body":{}}],["x61f6;&#x52a0;&#x8f09;&#xff08;&#x5716;&#x7247;&#x61f6;&#x52a0;&#x8f09;&#x3001;&#x4e0b;&#x62c9;&#x52a0;&#x8f09;&#x66f4;&#x591a;&#xff09",{"_index":1772,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6211;&#x5011;&#x4f7f;&#x7528",{"_index":2556,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x6211;&#x5011;&#x53ef;&#x4ee5;&#x7528;&#x7d44;&#x5408;&#x6a21;&#x5f0f;&#x8868;&#x9054;&#x76f8;&#x540c;&#x7684;&#x610f;&#x601d;&#x3002",{"_index":2540,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x6216",{"_index":229,"title":{},"body":{"es6.html#Module-的加载实现":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x6216;&#x7b49;&#x4ef7;&#x4e8",{"_index":2395,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x6216;&#x8005",{"_index":2539,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{},"http/caching.html#協商緩存":{}}}],["x6216;&#x8005;&#x5927;&#x65bc",{"_index":2402,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x6216;&#x8005;&#x8b93",{"_index":298,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x6233;&#xff09",{"_index":1766,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6240;&#x4ee5;&#x4fee;&#x6539;obj2.body.a&#x6642;&#x4e5f;&#x6703;&#x4fee;&#x6539;&#x5230;&#x820a;&#x7684",{"_index":497,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x6240;&#x4ee5;&#x6211;&#x5011;&#x53ef;&#x4ee5;&#x60f3;&#x50cf",{"_index":2143,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x6240;&#x4ee5;&#x62ff;&#x5230;&#x4e86;self.nam",{"_index":2839,"title":{},"body":{"global/function.html#bind":{}}}],["x6240;&#x4ee5;&#x6700;&#x5f8c;&#x4e00;&#x7b46;&#x4e0d;&#x53ef;&#x591a;&#x4e86;&#x4e00;&#x500b;&#x9017;&#x865f",{"_index":1209,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x6240;&#x4ee5;&#x8aaa;&#x5982;&#x679c;&#x7576;&#x524d;&#x6b63;&#x5728;&#x904b;&#x884c;&#x7684;&#x4ee3;&#x78bc;&#x6c92;&#x6709;&#x904b;&#x884c;&#x5b8c;&#xff0c;&#x5373;&#x4f7f;&#x5ef6;&#x9072;&#x7684;&#x6642;&#x9593;&#x5df2;&#x7d93;&#x904e;&#x5b8c;&#xff0c",{"_index":304,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x6240;&#x4ee5;&#x9663;&#x5217;&#x4e5f;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x7269;&#x4ef6;&#x539f;&#x578b;&#x7684;&#x65b9;&#x6cd5",{"_index":1200,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x6240;&#x4ee5;2&#x4e0d;&#x6703;&#x5b58;&#x5728;nan",{"_index":1690,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x6240;&#x4ee5;obj2&#x6703;&#x9577;&#x5f97;&#x8ddf;obj1&#x4e00;&#x6a23",{"_index":500,"title":{},"body":{"copy.html#Object-assign":{}}}],["x6240;&#x5efa;&#x69cb;&#x7684;&#x578b;&#x5225;&#xff0c;&#x5728",{"_index":1071,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x6240;&#x6709",{"_index":1793,"title":{},"body":{"performance.html#懶加載":{}}}],["x6240;&#x89e3;&#x6c7a;&#x4e0d;&#x4e86;&#x7684;&#x554f;&#x984c;&#xff1a",{"_index":2782,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x6253;&#x7d66",{"_index":2018,"title":{},"body":{"variable.html#Hoisting":{}}}],["x627e;&#x4e0d;&#x5230;&#x5c31;&#x6703;undefin",{"_index":1625,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["x628a",{"_index":1343,"title":{},"body":{"core.html#繼承":{}}}],["x628a;&#x53e6;&#x4e00;&#x500b;&#x7acb;&#x5373;&#x51fd;&#x5f0f;&#x5b9a;&#x7fa9;&#x7684;&#x8b8a;&#x6578;&#x5370;&#x51fa;&#x4f86",{"_index":1256,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x628a;&#x6578;&#x64da;&#x63d2;&#x5165;&#x9663;&#x5217;&#x5c3e;&#x90e8",{"_index":2352,"title":{"array/array_insert.html#把數據插入陣列尾部":{}},"body":{}}],["x628a;&#x6578;&#x64da;&#x63d2;&#x5165;&#x9663;&#x5217;&#x6307;&#x5b9a;&#x4f4d;&#x7f6",{"_index":2356,"title":{"array/array_insert.html#把數據插入陣列指定位置":{}},"body":{}}],["x628a;&#x6578;&#x64da;&#x63d2;&#x5165;&#x9663;&#x5217;&#x982d;&#x90e8",{"_index":2355,"title":{"array/array_insert.html#把數據插入陣列頭部":{}},"body":{"array/array_insert.html#example":{}}}],["x628a;&#x8fd9;&#x4e9b;&#x5c5e;&#x6027;&#x5168;&#x90e8;&#x8f6c;&#x4e3a",{"_index":1395,"title":{},"body":{"core.html#屬性特徵":{}}}],["x62bd;&#x8c61;&#x7d50;&#x69cb;&#x6a39;ast(abstract",{"_index":968,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x62ec;&#x865f;&#x5167;&#x5c64;&#x518d;&#x88dc;&#x4e0a;&#x5c0f;&#x62ec;&#x865f",{"_index":1249,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x62fc;&#x63a5;&#x5169;&#x500b;&#x9663;&#x5217",{"_index":2363,"title":{"array/array_insert.html#拼接兩個陣列":{}},"body":{}}],["x62ff;&#x5230;&#x6b63;&#x78ba;&#x7684",{"_index":2819,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x6307;&#x5230;&#x4e0d;&#x4e00;&#x6a23;&#x7684;&#x4f4d;&#x7f6",{"_index":1436,"title":{},"body":{"core.html#箭頭函數":{}}}],["x6307;&#x5411",{"_index":1284,"title":{},"body":{"core.html#this":{}}}],["x6307;&#x5411;&#x662f;&#x4e0d;&#x540c;&#x7684",{"_index":1442,"title":{},"body":{"core.html#箭頭函數":{}}}],["x6307;&#x6578;&#x6642;&#x9593",{"_index":3144,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x6309;&#x503c;&#x50b3;&#x905e;&#xff08;pass",{"_index":319,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x63a5;&#x6536",{"_index":1083,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x63a5;&#x8457;&#x628a;obj1&#x4e2d;&#x6240;&#x6709;&#x7684;&#x5c6c;&#x6027;&#x8907;&#x88fd;&#x904e;&#x53bb",{"_index":499,"title":{},"body":{"copy.html#Object-assign":{}}}],["x63d0;&#x4f9b;&#x93c8;&#x63a5",{"_index":202,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x63d0;&#x5347;&#xff08;hoisting&#xff09",{"_index":978,"title":{"core.html#提升（Hoisting）":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x63d0;&#x793a;&#xff1a",{"_index":295,"title":{},"body":{"asynchronous.html#setTimeout":{},"statements/for.html#for…of與for…in的差別":{}}}],["x63d2;&#x5165",{"_index":1803,"title":{"performance.html#合併-DOM-插入-createDocumentFragment":{}},"body":{}}],["x63d2;&#x5165;&#x6216;&#x522a;&#x9664;&#xff1a;&#x9032;&#x68e7;&#x8207;&#x51fa;&#x68e7;&#x7684;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x70ba",{"_index":3128,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x642d;&#x914d;&#x4f7f;&#x7528",{"_index":3046,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x642d;&#x914d;&#x5224;&#x65b7;&#x5f0f;&#x4e0d;&#x80fd;&#x76f4;&#x63a5;&#x63a5;&#x7bad;&#x982d;&#x51fd;&#x5f0f",{"_index":1439,"title":{},"body":{"core.html#箭頭函數":{}}}],["x64cd;&#x4f5c;&#x3002",{"_index":166,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x64cd;&#x4f5c;&#x662f;&#x975e;&#x5e38;&#x8017;&#x8cbb;&#x6027;&#x80fd;&#x7684;&#xff0c;&#x56e0;&#x6b64;&#x63d2;&#x5165;&#x591a;&#x500b;&#x6a19;&#x7c64;&#x6642;&#xff0c;&#x5148;&#x63d2;&#x5165",{"_index":1804,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x64cd;&#x4f5c;&#x6709;&#x4ec0;&#x9ebc;&#x5340;&#x5225;&#xff1f",{"_index":1976,"title":{},"body":{"operators.html#Increment":{}}}],["x64cd;&#x4f5c;&#xff0c;&#x591a;&#x500b;&#x64cd;&#x4f5c;&#x5118;&#x91cf;&#x5408;&#x4f75;&#x5728;&#x4e00;&#x8d77;&#x57f7;&#x884c;&#xff08",{"_index":1775,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x653e;&#x524d;&#x9762",{"_index":994,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x653e;&#x524d;&#x9762;&#x53ef;&#x56e0;&#x70ba",{"_index":991,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x653e;&#x524d;&#x9762;&#xff0c;j",{"_index":1770,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x653e;&#x5f8c;&#x9762",{"_index":1771,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6570;&#x5b57;&#x524d;&#x8865;&#x201c;0&#x201d;&#x7684;&#x4e94;&#x79cd;&#x65b9;&#x6cd5",{"_index":1484,"title":{},"body":{"num.html#補數字":{}}}],["x6574;&#x500b;&#x74b0;&#x5883;&#x4e0b;&#x7684;&#x6240;&#x6709;&#x4ee3;&#x78bc;&#x904b;&#x884c;&#x5b8c;&#x7562;&#x4e4b;&#x5f8c;&#x57f7;&#x884c",{"_index":307,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x6578;&#x5b57;&#x586b;&#x5145;9",{"_index":1489,"title":{},"body":{"num.html#補數字":{}}}],["x6578;&#x5b57;&#x88dc;0",{"_index":1485,"title":{},"body":{"num.html#補數字":{}}}],["x6578;&#x5b57;1",{"_index":1090,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x6578;&#x64da;&#x7d50;&#x69cb;&#xff1a;&#x968a;&#x5217;&#xff08;queue&#xff09",{"_index":3120,"title":{"string/queue.html#數據結構：隊列（Queue）":{}},"body":{}}],["x6587;&#x4ef6;&#x4e0d;&#x6703;&#x8868;&#x660e;&#x9019;&#x8207",{"_index":1423,"title":{},"body":{"core.html#const":{}}}],["x6587;&#x4ef6;&#x7684;&#x6700;&#x5f8c;&#x4fee;&#x6539;&#x6642;&#x9593",{"_index":2764,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x6587;&#x6a94",{"_index":316,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x65b0;&#x589e",{"_index":344,"title":{},"body":{"event.html#代理":{}}}],["x65b0;&#x589e;&#x65b9;&#x6cd5;&#x5230;&#x539f;&#x578b;&#x93c8;&#x4e0a",{"_index":1202,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x65b0;&#x589e;foo&#x5c6c;&#x6027;&#x540d;&#x7a31",{"_index":3056,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x65b0;&#x7269;&#x4ef6;&#x8ddf;&#x539f;&#x7269;&#x4ef6;&#x4e0d;&#x5171;&#x7528;&#x8a18;&#x61b6;&#x9ad4",{"_index":493,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x65b0;&#x7684;&#x4e00;&#x884c;&#x4ee5",{"_index":1046,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x65b0;&#x7684;&#x4e00;&#x884c;&#x662f",{"_index":1042,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x65b9;&#x6cd5",{"_index":1287,"title":{},"body":{"core.html#this":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{}}}],["x65b9;&#x6cd5;&#x53ef;&#x4ee5;&#x85c9;&#x7531;&#x522a;&#x9664;&#x65e2;&#x6709;&#x5143;&#x7d20;&#x4e26;&#xff0f;&#x6216;&#x52a0;&#x5165;&#x65b0;&#x5143;&#x7d20;&#x4f86;&#x6539;&#x8b8a;&#x4e00;&#x500b;&#x9663;&#x5217;&#x7684;&#x5167;&#x5bb9",{"_index":2357,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["x65b9;&#x6cd5;&#x56de;&#x50b3;&#x7684;&#x662f;&#x7d81;&#x5b9a",{"_index":2822,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x65b9;&#x6cd5;&#x5c07;&#x4e00;&#x500b;&#x7d2f;&#x52a0;&#x5668;&#x53ca;&#x9663;&#x5217;&#x4e2d;&#x6bcf;&#x9805;&#x5143;&#x7d20;&#xff08;&#x7531;&#x5de6;&#x81f3;&#x53f3;&#xff09;&#x50b3;&#x5165;&#x56de;&#x547c;&#x51fd;&#x5f0f;&#xff0c;&#x5c07;&#x9663;&#x5217;&#x5316;&#x70ba;&#x55ae;&#x4e00;&#x503c;&#x3002",{"_index":2271,"title":{},"body":{"array/array_methods.html#reduce":{}}}],["x65b9;&#x6cd5;&#x6703;&#x547c;&#x53eb;&#x4e00;&#x500b;&#x4ee5",{"_index":2807,"title":{},"body":{"global/function.html#call、apply、bind":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x5c0d;&#x61c9",{"_index":165,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x6703;&#x5efa;&#x7acb;&#x4e00;&#x500b;&#x65b0;&#x51fd;&#x5f0f;&#x3002;&#x8a72;&#x51fd;&#x5f0f;&#x88ab;&#x547c;&#x53eb;&#x6642;&#xff0c;&#x6703;&#x5c07",{"_index":2810,"title":{},"body":{"global/function.html#call、apply、bind":{}}}],["x65e5;&#x671f",{"_index":2699,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x662f",{"_index":387,"title":{},"body":{"arrowFunction.html#Arrow-Function":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#屬性特徵":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"http/caching.html#強緩存":{},"statements/for.html#for…of與for…in的差別":{}}}],["x662f;&#x4e00;&#x500b;&#x5f88;&#x7279;&#x5225;&#x7684;&#x5b58;&#x5728;&#xff0c;&#x5b83;&#x662f;&#x53ef;&#x4ee5;&#x7576;&#x6210;&#x7269;&#x4ef6;&#x4f86;&#x4f7f;&#x7528;&#xff0c",{"_index":1218,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x662f;&#x4e00;&#x500b;&#x7279;&#x6b8a;&#x7684;&#x7269;&#x4ef6",{"_index":1222,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x662f;&#x4e00;&#x500b;&#x985e;&#x9663;&#x5217",{"_index":1263,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["x662f;&#x4e00;&#x7a2e;&#x6301;&#x4e45;&#x7db2;&#x8def;&#x5354;&#x5b9a;&#xff0c;&#x8b93;client&#x7aef;&#x8207;server&#x7aef;&#x53ef;&#x4ee5;&#x4f5c;&#x4e00;&#x7a2e;&#x5c0d;&#x8a71;&#xff0c;&#x4e26;&#x5c07;&#x5169;&#x7aef;&#x5efa;&#x7acb;&#x95dc;&#x9023;&#xff0c;&#x4fdd;&#x6301;&#x4f3a;&#x670d;&#x5668;&#x8207;client&#x53ef;&#x4ee5;&#x6301;&#x7e8c;&#x7684;&#x8207;server&#x4f5c;&#x4ea4;&#x8ac7;&#x3002",{"_index":2139,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x662f;&#x4e00;&#x7a2e;&#x7a0b;&#x5e8f;&#x89e3;&#x6790;&#x6280;&#x8853;&#xff0c",{"_index":1035,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x662f;&#x52d5;&#x8a5e;&#xff0c",{"_index":177,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x662f;&#x53c3;&#x8003;&#x4f4d;&#x5740",{"_index":1103,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x662f;&#x540c;&#x6b65;&#x7684",{"_index":1005,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x662f;&#x5426;&#x5f37;&#x7de9;&#x5b58;&#x7531",{"_index":2696,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x662f;&#x5426;&#x662f;&#x7a7a;&#x968a",{"_index":3123,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x662f;&#x56e0;&#x70ba;&#x7bad;&#x982d;&#x51fd;&#x6578;&#x6309;&#x8a5e;&#x6cd5",{"_index":375,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x662f;&#x5728;&#x8abf;&#x7528;&#x6642;&#x78ba;&#x5b9a;&#x7684;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x7531;&#x5c01;&#x9589;&#x7684;&#x4e0a;&#x4e0b;&#x6587;&#x6c7a;&#x5b9a;&#x7684",{"_index":384,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x662f;&#x600e;&#x9ebc;&#x8a2d;&#x8a08;&#x7684;&#x3002",{"_index":204,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x662f;&#x60a8;&#x8a2a;&#x554f;&#x904e;&#x7684;&#x7db2;&#x7ad9;&#x5275;&#x5efa;&#x7684;&#x6587;&#x4ef6;&#xff0c;&#x7528;&#x65bc;&#x5b58;&#x5132;&#x700f;&#x89bd;&#x4fe1;&#x606f;&#xff0c;&#x4f8b;&#x5982;&#x60a8;&#x7684;&#x7db2;&#x7ad9;&#x504f;&#x597d;&#x8a2d;&#x7f6e;&#x6216;&#x500b;&#x4eba;&#x8cc7;&#x6599;&#x4fe1;&#x606f;&#x3002",{"_index":2084,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["x662f;&#x6578;&#x503c;&#x6216;&#x70ba",{"_index":1119,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x662f;&#x6578;&#x7d44;&#x5f15;&#x7528",{"_index":388,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x662f;&#x7269;&#x4ef6;&#x578b;&#x5225",{"_index":1069,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x662f;&#x7531;&#x5730;&#x5740;&#x6b04;&#x4e2d;&#x5217;&#x51fa;&#x7684;&#x7db2;&#x7ad9;&#x57df;&#x8a2d;&#x7f6e;&#x7684",{"_index":2088,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["x662f;&#x7acb;&#x523b;&#x57f7;&#x884c",{"_index":1298,"title":{},"body":{"core.html#this":{}}}],["x662f;&#x7b2c;&#x4e00;&#x6b21;&#x57f7;&#x884c;&#x7684;&#x524d;&#x4e00;&#x500b;&#x503c",{"_index":1446,"title":{},"body":{"core.html#箭頭函數":{}}}],["x662f;&#x7de8;&#x7a0b;&#x6280;&#x8853;&#x4e2d;&#x5e38;&#x7528;&#x7684;&#x65b9;&#x6cd5;&#x3002",{"_index":2291,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x662f;&#x8868;&#x9054;&#x5f0f",{"_index":1082,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x662f;&#x89e3;&#x6c7a;&#x8fa6;&#x6cd5",{"_index":1052,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x662f;&#x8cd3;&#x8a9e;&#x3002",{"_index":178,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x662f;&#x900f;&#x904e;&#x5982;&#x793e;&#x7fa4;&#x7db2;&#x8def;&#x7b49;&#x7b2c;&#x4e09;&#x65b9;&#x7a0b;&#x5f0f;&#x5b89;&#x88dd;&#xff0c;&#x4e3b;&#x8981;&#x76ee;&#x7684;&#x70ba;&#x5728;&#x672c;&#x516c;&#x53f8;&#x7db2;&#x7ad9;&#x6574;&#x5408;&#x793e;&#x7fa4;&#x5a92;&#x9ad4;&#x5167;&#x5bb9;&#xff0c;&#x5982;&#x793e;&#x7fa4;&#x63d2;&#x4ef6",{"_index":2112,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x662f;&#x9663;&#x5217;&#x539f;&#x578b;&#x7684;&#x5c6c;&#x6027",{"_index":1193,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x662f;&#x985e;&#x9663;&#x5217;&#x6c92;&#x6709;&#x9663;&#x5217;&#x65b9;&#x6cd5",{"_index":1444,"title":{},"body":{"core.html#箭頭函數":{}}}],["x662f;es5&#x4e2d;&#x65b0;&#x589e;&#x7684;&#x4e00;&#x500b;&#x65b9;&#x6cd5;&#xff0c;&#x53ef;&#x4ee5;&#x6539;&#x8b8a;&#x51fd;&#x6578;&#x5167;&#x90e8;&#x7684;this&#x6307;&#x5411",{"_index":1664,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x6642",{"_index":386,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x6642;&#x9593;&#x6233;&#x5be6;&#x4f8b",{"_index":2567,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6",{"_index":3129,"title":{"string/queue.html#時間複雜度":{}},"body":{}}],["x6642;&#xff0c;&#x4f7f;&#x7528",{"_index":1120,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"statements/for.html#for…of與for…in的差別":{}}}],["x6642;&#xff0c;&#x5247;&#x76f4;&#x63a5;&#x5957;&#x7528",{"_index":1123,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x6642;&#xff0c;cooki",{"_index":2097,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x66ab;&#x505c;&#x6309;&#x9215",{"_index":1277,"title":{},"body":{"core.html#this":{}}}],["x66ab;&#x6642;&#x6027;&#x6b7b;&#x5340",{"_index":1416,"title":{},"body":{"core.html#const":{}}}],["x66f4;&#x56b4;&#x683c;&#xff0c;&#x4ed6;&#x5011;&#x5ba3;&#x7a31;&#x6211;&#x5011;&#x61c9;&#x8a72;&#x601d;&#x8003;&#x9019;&#x4e9b;&#x65b9;&#x6cd5;&#x5982;&#x4f55;&#x8655;&#x7406",{"_index":1972,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x66f4;&#x597d;&#x7684;&#x505a;&#x6cd5;&#x662f;&#xff0c;&#x9664;&#x4e86;&#x7b2c;&#x4e00;&#x7d1a;&#xff0c;&#x5176;&#x4ed6;&#x7d1a;&#x5225;&#x90fd;&#x7528;&#x67e5;&#x8a62;&#x5b57;&#x7b26;&#x4e32;&#x8868;&#x9054;&#x3002",{"_index":189,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x6700;&#x5927;&#x7684;&#x539f;&#x56e0;&#x9084;&#x662f;&#x56e0;&#x70ba",{"_index":2814,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x6700;&#x597d;&#x7684;&#x65b9;&#x5f0f;&#x662f;&#x5f9e;&#x51fd;&#x5f0f;&#x672c;&#x8eab;&#x7684;&#x539f;&#x578b;&#x5c6c;&#x6027;&#x4e0a;&#x53bb;&#x8abf;&#x6574",{"_index":1334,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x6703;&#x4f7f;&#x5176;&#x4e2d;&#x4e00;&#x908a;&#x7684;&#x985e;&#x578b;&#x9032;&#x884c;&#x5f37;&#x5236;&#x8f49;&#x63db;&#xff0c;&#x4f7f;&#x7b49;&#x865f;&#x5169;&#x908a;&#x7684;&#x985e;&#x578b;&#x90fd;&#x76f8;&#x7b49;&#x5f8c;&#x518d;&#x5c0d;&#x6578;&#x503c;&#x9032;&#x884c;&#x6bd4;&#x8f03;&#x3002",{"_index":1959,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x6703;&#x51fa;&#x73f",{"_index":1016,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x6703;&#x5c07;&#x539f;&#x672c;&#x7684;&#x7269;&#x4ef6;&#x8f49;&#x6210;&#x5b57;&#x4e32;&#x518d;&#x8f49;&#x56de;&#x4f86",{"_index":1179,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x6703;&#x5f71;&#x97ff;&#x57f7;&#x884c;&#x7d50;&#x679c",{"_index":1048,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x6703;&#x65b0;&#x589e;&#x66f4;&#x591a;a&#x6a19;&#x7c64",{"_index":342,"title":{},"body":{"event.html#代理":{}}}],["x6703;&#x88ab;&#x8986;&#x84cb;&#x6240;&#x4ee5;&#x88dc;&#x56de;&#x539f;&#x672c;&#x5efa;&#x69cb;&#x51fd;&#x5f0f",{"_index":1353,"title":{},"body":{"core.html#繼承":{}}}],["x6703;&#x8a2d;&#x5b9a;&#x5728",{"_index":2098,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x6703;&#x932f;&#x8aa4;&#x5730;&#x8fd4;&#x56d",{"_index":2784,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x6709",{"_index":2542,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x6709;&#x4e00;&#x500b;&#x65b0;&#x7684",{"_index":1966,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x6709;&#x4ec0;&#x9ebc;&#x5340;&#x5225;&#xff1f",{"_index":2284,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x6709;&#x5275;&#x9020;&#x5230;&#x57f7;&#x884c;&#x7684;&#x6982;&#x5ff5;&#xff0c;&#x4f46;&#x4e0d;&#x6703;&#x9810;&#x5148;&#x51fa;&#x73f",{"_index":1422,"title":{},"body":{"core.html#const":{}}}],["x6709;&#x52a0;&#x5165;&#x56b4;&#x683c;&#x6a21;&#x5f0f",{"_index":1314,"title":{},"body":{"core.html#this":{}}}],["x6709;&#x5c07;&#x6b64;&#x5c6c;&#x6027",{"_index":3054,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x6709;&#x76f8;&#x540c;&#x5c6c;&#x6027;&#x6642;&#x5408;&#x4f75;&#x7269;&#x4ef6;&#x5340;&#x6bb5",{"_index":2639,"title":{"object/assign.html#有相同屬性時合併物件區段":{}},"body":{}}],["x6709;&#x76f8;&#x540c;&#x7684;&#x529f;&#x80fd;&#xff0c;&#x5728;&#x67d0;&#x4e9b;&#x7279;&#x6b8a;&#x60c5;&#x6cc1;&#x4e0b;&#x4e5f;&#x904b;&#x4f5c;&#x7684;&#x5f88;&#x597d;&#xff1a",{"_index":1968,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x6709;hoisting&#x4f46;&#x9396;&#x4f4f",{"_index":1417,"title":{},"body":{"core.html#const":{}}}],["x671f;&#x671b;&#x4ee3;&#x78bc;&#x7684;&#x8f38;&#x51fa;&#x8b8a;&#x6210;&#xff1a;5",{"_index":309,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x672c;&#x5730;&#x901a;&#x904",{"_index":2715,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["x679c;&#x51cd;&#x5c64;&#xff0c;&#x5976;&#x916a;&#x5c64;&#x548c;&#x5976;&#x6cb9;&#x5c64;&#xff0c;&#x9802;&#x90e8;&#x9084",{"_index":2543,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x67e5;&#x627e;&#xff1a;&#x5f9e;&#x5c0d;&#x982d;&#x958b;&#x59cb;&#x67e5;&#x627e;&#xff0c;&#x5f9e;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x70ba",{"_index":3127,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x67e5;&#x8a62;&#x505a;&#x7de9;&#x5b58",{"_index":1773,"title":{"performance.html#DOM-查詢做緩存":{}},"body":{"performance.html#優化原則和方向":{}}}],["x6807;&#x7b7e;&#x6253;&#x5f00",{"_index":228,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["x689d;&#x4ef6;&#x7d44;&#x5408;&#x7684;&#x554f;&#x984c",{"_index":2890,"title":{"statements/if...else.html#條件組合的問題":{}},"body":{}}],["x6a19;&#x7c64",{"_index":1809,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x6a21;&#x677f;&#x6e32;&#x67d3;&#x9801;&#x9762",{"_index":1781,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6b63;&#x5219",{"_index":3163,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x6b63;&#x78ba",{"_index":1054,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x6b63;&#x898f;&#x8868;&#x9054;&#x5f0f",{"_index":1026,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{}}}],["x6b64;&#x6642",{"_index":2931,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x6bcf;&#x500b;&#x6846;&#x67b6;&#x5be6;&#x73fe;&#x7684;&#x908f;&#x8f2f;&#x90fd;&#x53ef;&#x80fd;&#x4e0d;&#x4e00;&#x6a23;&#xff0c;&#x6240;&#x4ee5;&#x9084;&#x662f;&#x8981;&#x53bb;&#x770b;&#x5b98;&#x65b9;&#x7684;&#x8aaa;&#x660e;&#x6703;&#x6bd4;&#x8f03;&#x6e05;&#x695a;&#x3002",{"_index":2171,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x6bcf;&#x6b21;&#x5faa;&#x74b0;&#xff0c;&#x90fd;&#x6703;&#x67e5;&#x8a62",{"_index":1797,"title":{},"body":{"performance.html#DOM-查詢做緩存":{}}}],["x6bd4",{"_index":1971,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x6bd4;&#x5982;&#xff0c",{"_index":175,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x6bd4;&#x5982;&#xff0c;&#x7576;&#x6211;&#x5011;&#x6709;&#x591a;&#x500b;&#x57df;&#x540d;&#x7684;&#x7db2;&#x7ad9;&#x9700;&#x8981;&#x8ddf;&#x8e64;&#xff0c;&#x6211;&#x5011;&#x5e0c;&#x671b;&#x77ad;&#x89e3;&#x5230;&#x7528;&#x6236;&#x9ede;&#x64ca;&#x67d0;&#x500b;&#x5ee3;&#x544a;&#x5230;&#x9054;&#x57df;&#x540d;a&#x4e0b;&#x7684;&#x7db2;&#x9801;&#xff0c;&#x7136;&#x5f8c;&#x53ef;&#x80fd;&#x700f;&#x89bd;&#x4e86;&#x4e0d;&#x8ad6;&#x90a3;&#x500b;&#x57df;&#x540d;&#x4e0b;&#x7684;&#x9801;&#x9762;&#xff0c;&#x6700;&#x5f8c;&#x5728;&#x57df;&#x540d;b&#x4e0b;&#x7684;&#x7db2;&#x9801;&#x5b8c;&#x6210;&#x8a3b;&#x518a;&#x7684;&#x60c5;&#x6cc1;&#x3002;&#x5ee3;&#x544a;&#x53ef;&#x4ee5;&#x5728;&#x57df;&#x540d;a&#x4e0b;&#x7684;&#x7db2;&#x9801;&#x88ab;&#x8ddf;&#x8e64;&#x5230;&#xff0c;&#x800c;&#x8a3b;&#x518a;&#x53ef;&#x4ee5;&#x5728;&#x57df;&#x540d;b&#x4e0b;&#x7684;&#x7db2;&#x9801;&#x8ddf;&#x8e64;&#x5230;&#x3002",{"_index":2127,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x6bd4;&#x5982;&#xff0c;&#x8a2a;&#x554f",{"_index":2114,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x6bd4;&#x5c0d;&#x7684;&#x4e0d;&#x662f;&#x503c",{"_index":1102,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x6bd4;&#x5c0d;&#x7684;&#x90fd;&#x662f;&#x53c3;&#x8003;&#x4f4d;&#x5740",{"_index":1107,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x6bd4;&#x8f03;&#x4e0d;&#x662f;&#x4e00;&#x500b;&#x6bd4;&#x8f03;&#x597d;&#x7684;&#x89e3;&#x6c7a;&#x65b9;&#x5f0f;&#xff0c;&#x4f60;&#x53ef;&#x4ee5;&#x5f97;&#x5230;&#x9019;&#x6a23;&#x7684;&#x7d50;&#x679c;&#xff1a",{"_index":1964,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x6c38;&#x9060;&#x90fd;&#x662f;&#x8a9e;&#x610f;&#x4e0a;&#x7684",{"_index":2828,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x6c42;&#x503c;&#x7b56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6c42;&#x503c;&#x7b56;&#x7565",{"_index":1126,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x6c59;&#x67d3;&#x6574;&#x500b;&#x4f5c;&#x7528;&#x57df",{"_index":1409,"title":{},"body":{"core.html#Let":{}}}],["x6c92;&#x6709;&#x50b3;&#x7d71;&#x51fd;&#x6578",{"_index":1432,"title":{},"body":{"core.html#箭頭函數":{}}}],["x6c92;&#x6709;&#x95dc;&#x4fc2",{"_index":1648,"title":{},"body":{"this.html#Callback":{}}}],["x6c92;&#x88ab;&#x6539;&#x5230",{"_index":491,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{}}}],["x6c92;&#x8907;&#x88fd",{"_index":510,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["x6ce8;&#x610f;&#xff0c;&#x5982;&#x679c;&#x4f7f;&#x7528;&#x7bad;&#x982d;&#x51fd;&#x5f0f;&#xff0c;thi",{"_index":1675,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x6ce8;&#x610f;&#xff0c;&#x9019;&#x88e1;&#x662f",{"_index":1670,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x6ce8;&#x610f;&#xff0c;&#x901a;&#x5e38;&#x9810;&#x8a2d;&#x503c;&#x4e0d;&#x662f",{"_index":1696,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x6d4f;&#x89c8;&#x5668;&#x5141;&#x8bb8;&#x811a;&#x672c;&#x5f02;&#x6b65;&#x52a0;&#x8f7d;&#xff0c;&#x4e0b;&#x9762;&#x5c31;&#x662f;&#x4e24;&#x79cd;&#x5f02;&#x6b65;&#x52a0;&#x8f7d;&#x7684;&#x8bed;&#x6cd5;&#x3002",{"_index":226,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["x6d6e;&#x70b9;&#x6570;&#x9677;&#x9631;&#x53ca;&#x89e3;&#x6cd5",{"_index":1880,"title":{},"body":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x6d6e;&#x9ede;&#x6578;&#x904b;&#x7b97;&#x7684;&#x5751",{"_index":1879,"title":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}},"body":{}}],["x6df1;&#x5165;&#x54cd;&#x5e94;&#x5f0f;&#x539f;&#x7406",{"_index":1389,"title":{},"body":{"core.html#屬性特徵":{}}}],["x6df1;&#x5c64;&#x8907;&#x88fd",{"_index":1178,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x6df1;&#x62f7;&#x8c9d;(deep",{"_index":490,"title":{"copy.html#深拷貝-Deep-Copy":{}},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x6df1;&#x6dfa;&#x62f7;&#x8c9d",{"_index":1170,"title":{"core.html#深淺拷貝":{}},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x6dfa;&#x5c64;&#x8907;&#x88fd",{"_index":1177,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x6dfa;&#x62f7;&#x8c9d",{"_index":489,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x6dfa;&#x62f7;&#x8c9d;(shallow",{"_index":481,"title":{"copy.html#淺拷貝-Shallow-Copy":{}},"body":{}}],["x6e05;&#x7a7a;&#x968a",{"_index":3125,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x6e1b;&#x5c11",{"_index":1757,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6e1b;&#x5c11;&#x9801;&#x9762;&#x9ad4;&#x7a4d;&#xff0c;&#x63d0;&#x5347;&#x7db2;&#x8def;&#x52a0;&#x8f09",{"_index":1761,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6e1b;&#x5c11;dom",{"_index":1774,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6e2c;&#x8a66;&#x9663;&#x5217",{"_index":2268,"title":{},"body":{"array/array_methods.html#every":{},"array/array_methods.html#some":{}}}],["x6e32;&#x67d3;&#x5b8c;&#x5373;&#x53ef;&#x57f7;&#x884c;&#xff0c;&#x6b64;&#x6642;&#x5716;&#x7247;&#x3001;&#x8996;&#x983b;&#x9084;&#x53ef;&#x80fd;&#x6c92;&#x6709;&#x52a0;&#x8f09;&#x5b8c",{"_index":1817,"title":{},"body":{"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["x6e4a;&#x6574;&#x4f75",{"_index":1883,"title":{},"body":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x700f;&#x89bd;&#x5668;&#x4e0d;&#x8d70;&#x5f37;&#x7de9;&#x5b58",{"_index":2775,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x70ba;&#x4ec0;&#x9ebc;&#x6211;&#x5011;&#x9700;&#x8981",{"_index":2812,"title":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}},"body":{}}],["x70ba;&#x53c3;&#x6578;&#x7684;&#x51fd;&#x5f0f;&#x3002",{"_index":2809,"title":{},"body":{"global/function.html#call、apply、bind":{}}}],["x70ba;&#x53c3;&#x8003;&#x3002;&#x8acb;&#x4f7f;&#x7528;&#x7bad;&#x982d;&#x51fd;&#x5f0f;&#x6216;&#x662f",{"_index":2836,"title":{},"body":{"global/function.html#bind":{}}}],["x70ba;&#x6240;&#x6709;a&#x6a19;&#x7c64",{"_index":343,"title":{},"body":{"event.html#代理":{}}}],["x70ba;&#x95dc;&#x9375;&#x5b57",{"_index":1279,"title":{},"body":{"core.html#this":{}}}],["x7121;&#x503c;&#x50b3;&#x5165;this&#x5f80;&#x4e0a;&#x627",{"_index":1663,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x7121;&#x6cd5;&#x518d;&#x51fd;&#x5f0f;&#x5916;&#x88ab;&#x518d;&#x6b21;&#x57f7;&#x884c",{"_index":1248,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x7121;&#x6cd5;&#x53d6;&#x5f97;&#x7269;&#x4ef6;&#x7684;mynam",{"_index":1296,"title":{},"body":{"core.html#this":{}}}],["x7121;&#x6cd5;&#x65b0;&#x589e;&#x522a;&#x9664",{"_index":1372,"title":{},"body":{"core.html#屬性特徵":{}}}],["x7121;&#x7a7a;&#x683c;&#x5b57;&#x7b26;&#x69cb;&#x6210;&#x4e00;&#x500b;&#x55ae;&#x8a5e;&#x3002",{"_index":3157,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x7136;&#x5f8c;&#x518d;&#x7d71;&#x4e00;&#x63d2;&#x5165",{"_index":1805,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x7136;&#x5f8c;&#x624d;&#x8ce6;&#x4e88;&#x503c",{"_index":984,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x7136;&#x5f8c;&#x628a;obj2.b&#x6539;&#x6210;100",{"_index":486,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x7248;&#x672c;)&#xff1a",{"_index":1426,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x7269;&#x4ef6",{"_index":1111,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"this.html#bind-apply-call":{}}}],["x7269;&#x4ef6;&#x4e0a",{"_index":1331,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x7269;&#x4ef6;&#x4e0b;&#x547c;&#x53eb;&#x6703;&#x5f71;&#x97ff",{"_index":1614,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["x7269;&#x4ef6;&#x52a0;&#x4e0a;s",{"_index":1375,"title":{},"body":{"core.html#屬性特徵":{}}}],["x7269;&#x4ef6;&#x53d6;&#x503c",{"_index":1125,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x7269;&#x4ef6;&#x53d6;&#x503c;&#x5c6c;&#x6027;&#x7528;&#x5b57;&#x4e32",{"_index":1130,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x7269;&#x4ef6;&#x53ef;&#x4ee5;&#x7528;&#x55ae;&#x5f15;&#x865f",{"_index":1206,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x7269;&#x4ef6;&#x53ef;&#x96a8;&#x610f;&#x589e;&#x52a0;&#x5c6c;&#x6027",{"_index":1188,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x7269;&#x4ef6;&#x5be6;&#x5b57",{"_index":1028,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x7269;&#x4ef6;&#x5c6c;&#x6027",{"_index":3036,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x7269;&#x4ef6;&#x7684",{"_index":1624,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["x7269;&#x4ef6;&#x7684;&#x53c3;&#x8003;&#x4f4d;&#x5740;&#x4e0d;&#x540c",{"_index":1105,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x7269;&#x4ef6;&#x7684;&#x578b;&#x5225",{"_index":1308,"title":{},"body":{"core.html#this":{}}}],["x7269;&#x4ef6;&#x7684;&#x65b9;&#x6cd5;&#x8abf;&#x7528",{"_index":1613,"title":{"this.html#物件的方法調用-As-an-object-method":{}},"body":{}}],["x7269;&#x4ef6;&#x7684;mynam",{"_index":1297,"title":{},"body":{"core.html#this":{}}}],["x7269;&#x4ef6;&#x8207;&#x7269;&#x4ef6",{"_index":1101,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x7269;&#x4ef6;&#x8207;&#x975e;&#x7269;&#x4ef6",{"_index":1099,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x7269;&#x4ef6;&#x88e1;&#x9762;&#x642d;&#x914d;&#x7bad;&#x982d;&#x51fd;&#x6a39;&#x6703;&#x51fa;&#x932f",{"_index":1441,"title":{},"body":{"core.html#箭頭函數":{}}}],["x7269;&#x4ef6;&#x8a18;&#x61b6;&#x9ad4;&#x7a7a;&#x9593",{"_index":1149,"title":{"core.html#物件記憶體空間":{}},"body":{}}],["x7269;&#x4ef6;&#x8b8a;&#x6578",{"_index":1152,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["x7269;&#x4ef6;(&#x9663;&#x5217",{"_index":1167,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x7279;&#x5b9a;&#x573a;&#x666f;&#x4e0b;&#x4ee3;&#x66ff;&#x4f18;&#x5316",{"_index":2908,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x7279;&#x6b8a;&#x72c0;&#x6cc1",{"_index":1094,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x72c0;&#x614b;&#x78bc",{"_index":190,"title":{"RESTfulAPI.html#狀態碼":{}},"body":{}}],["x72c0;&#x614b;&#x78bc;&#x662f",{"_index":2691,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x72c0;&#x614b;&#xff0c;&#x52a0;&#x8f09;&#x700f;&#x89bd;&#x5668;&#x7de9;&#x5b58;&#xff0c;&#x4e26;&#x4e14;&#x97ff;&#x61c9;&#x982d;&#x6703;&#x8a2d;&#x7f6",{"_index":2745,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x72d7;&#x7684;&#x539f;&#x578b;&#x539f;&#x672c;&#x76f4;&#x63a5;&#x7e7c;&#x627f;&#x65bc;&#x52d5;&#x7269;&#x754c;&#x7684;&#x539f;&#x578b",{"_index":1352,"title":{},"body":{"core.html#繼承":{}}}],["x7372;&#x53d6;&#x968a;&#x5217;&#x9577;&#x5ea6",{"_index":3126,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x7372;&#x53d6;&#x968a;&#x982d;&#x5143;&#x7d20",{"_index":3124,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x7406;&#x89e3;&#x4e4b;&#x767d;&#x8bdd",{"_index":1401,"title":{},"body":{"core.html#屬性特徵":{}}}],["x751f;&#x6210;&#x65b0;&#x7684;&#x53c3;&#x8003;&#x7269;&#x4ef6",{"_index":1154,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["x751f;&#x6210;&#x65b0;&#x9663;&#x5217",{"_index":2258,"title":{},"body":{"array/array_methods.html#Array":{}}}],["x7528;&#x4e0d;&#x5230;301&#x72c0;&#x614b;&#x78bc;&#xff08;&#x6c38;&#x4e45;&#x91cd;&#x5b9a;&#x5411;&#xff09;&#x548c;302&#x72c0;&#x614b;&#x78bc;&#xff08;&#x66ab;&#x6642;&#x91cd;&#x5b9a;&#x5411;&#xff0c;307&#x4e5f;&#x662f;&#x9019;&#x500b;&#x542b;&#x7fa9;&#xff09;&#xff0c;&#x56e0;&#x70ba;&#x5b83;&#x5011;&#x53ef;&#x4ee5;&#x7531;&#x61c9;&#x7528;&#x7d1a;&#x5225;&#x8fd4;&#x56de;&#xff0c;&#x700f;&#x89bd;&#x5668;&#x6703;&#x76f4;&#x63a5;&#x8df3;&#x8f49;&#xff0c;api",{"_index":196,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x7528;&#x5168;&#x57df;&#x7269;&#x4ef6;&#x50b3;&#x503c",{"_index":1258,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x7528;&#x5230;&#x7684;3xx&#x72c0;&#x614b;&#x78bc;&#xff0c;&#x4e3b;&#x8981;&#x662f",{"_index":198,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x7528;&#x65bc;&#x5ba3;&#x544a;&#x4e00;&#x500b;&#x300c;&#x53ea;&#x4f5c;&#x7528;&#x5728;&#x7576;&#x524d;&#x5340;&#x584a;&#x7684;&#x8b8a;&#x6578;&#x300d;&#xff0c;&#x521d;&#x59cb;&#x503c;&#x53ef;&#x9078;&#x64c7;&#x6027;&#x7684;&#x8a2d;&#x5b9a;&#x3002",{"_index":3016,"title":{},"body":{"statements/let.html#let":{}}}],["x7528;&#x7acb;&#x5373;&#x57f7;&#x884c;&#x51fd;&#x6578",{"_index":310,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x7528;&#x7acb;&#x5373;&#x57f7;&#x884c;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x5275;&#x9020;&#x4e86;&#x65b0;&#x7684;&#x51fd;&#x6578;&#x4f5c;&#x7528;&#x57df;&#x5c07;timer&#x51fd;&#x6578;&#x5305;&#x88f9;&#x4e86;&#x8d77;&#x4f86;&#xff0c;&#x4e26;&#x7528;j&#x6355;&#x7372;&#x4e86;&#x6bcf;&#x6b21;&#x5faa;&#x74b0;&#x6642;&#x7684;i",{"_index":313,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x7528;10&#x9032;&#x5236;&#x8f49;&#x63db",{"_index":2445,"title":{},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x7528;array.from&#x8f49;&#x6210;&#x7d14;&#x9663;&#x5217",{"_index":1445,"title":{},"body":{"core.html#箭頭函數":{}}}],["x7570;&#x6b65",{"_index":283,"title":{"asynchronous.html#異步":{}},"body":{}}],["x7570;&#x6b65;&#x7684;&#x5de5;&#x5ee0;&#x51fd;&#x6578",{"_index":2546,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x7576",{"_index":1118,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"http/caching.html#強緩存":{}}}],["x7576;&#x4e2d;&#xff0c;&#x4e26;&#x4e0d;&#x662f;&#x7acb;&#x5373;&#x57f7;&#x884c;&#xff1b",{"_index":303,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x7576;&#x4f60;&#x62ff;&#x5230",{"_index":1881,"title":{},"body":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x7576;&#x6211;&#x5011;&#x9700;&#x8981;&#x70ba;&#x67d0;&#x500b;&#x5ba2;&#x6236;&#x7aef;&#x7684;&#x8acb;&#x6c42;&#x5275;&#x5efa;&#x4e00;&#x500b;session&#x7684;&#x6642;&#x5019;&#xff0c;&#x670d;&#x52d9;&#x5668;&#x9996;&#x5148;&#x6aa2;&#x67e5;&#x9019;&#x500b;&#x5ba2;&#x6236;&#x7aef;&#x7684;&#x8acb;&#x6c42;&#x88e1;&#x662f;&#x5426;&#x6709;&#x5305;&#x542b;&#x4e86;session&#x6a19;&#x8b58;&#xff0c;&#x5c31;&#x662f;&#x525b;&#x525b;&#x63d0;&#x5230;&#x7684",{"_index":2147,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7576;&#x700f;&#x89bd;&#x5668;&#x7684;&#x5f37;&#x7de9;&#x5b58;&#x5931;&#x6548;&#x7684;&#x6642;&#x5019;&#x6216;&#x8005;&#x8acb;&#x6c42;&#x982d;&#x4e2d;&#x8a2d;&#x7f6e;&#x4e86;&#x4e0d;&#x8d70;&#x5f37;&#x7de9;&#x5b58;&#xff0c;&#x4e26;&#x4e14;&#x5728;&#x8acb;&#x6c42;&#x982d;&#x4e2d;&#x8a2d;&#x7f6e;&#x4e86;if",{"_index":2743,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7576;&#x7136;&#xff0c;&#x6211;&#x5011;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x56de;&#x8abf;&#x51fd;&#x6578;&#xff0c;&#x4f46;&#x662f;&#x6211;&#x5011;&#x5df2;&#x7d93;&#x6709;&#x4e86",{"_index":2553,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x767c;&#x751f",{"_index":1040,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x767e;&#x5206;&#x6bd4",{"_index":1885,"title":{},"body":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x7684",{"_index":210,"title":{},"body":{"RESTfulAPI.html#狀態碼":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"http/caching.html#強緩存":{}}}],["x7684;&#x4e0d;&#x8db3",{"_index":3044,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x7684;&#x4ee3;&#x8868;&#x503c;&#x548c;&#x4e00;&#x500b;&#x9663;&#x5217;&#x5f62;&#x5f0f;&#x7684;&#x503c;&#x7d44;(&#x6216;&#x662f;&#x4e00;&#x500b",{"_index":2808,"title":{},"body":{"global/function.html#call、apply、bind":{}}}],["x7684;&#x4f7f;&#x7528;&#x8005;&#x672a;&#x5fc5;&#x77e5;&#x9053;&#xff0c;url",{"_index":203,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x7684;&#x503c;&#x3002",{"_index":1786,"title":{},"body":{"performance.html#懶加載":{}}}],["x7684;&#x503c;&#x4ee3;&#x8868;&#x7684;&#x662f",{"_index":2763,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x503c;&#x662f",{"_index":2747,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x503c;&#x662f;&#x4e00;&#x500b",{"_index":2698,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7684;&#x503c;&#x7684;&#x5143;&#x7d20;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x6570;&#x7ec4;&#x3002",{"_index":2396,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x7684;&#x503c;&#x9032;&#x884c;&#x6bd4;&#x8f03;&#xff0c;&#x5982;&#x679c;&#x76f8;&#x7b49;&#xff0c;&#x8fd4;&#x56de",{"_index":2769,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x503c;&#x9032;&#x884c;&#x6bd4;&#x8f03;&#xff0c;&#x5982;&#x679c;&#x7cfb;&#x7d71;&#x6642;&#x9593;&#x8d85;&#x904e;&#x4e86",{"_index":2701,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7684;&#x503c;&#xff0c;&#x7de9;&#x5b58;&#x5931;&#x6548;&#x3002;&#x7531;&#x65bc;&#x548c;&#x7cfb;&#x7d71;&#x6642;&#x9593;&#x9032;&#x884c;&#x6bd4;&#x8f03;&#xff0c;&#x6240;&#x4ee5;&#x7576;&#x7cfb;&#x7d71;&#x6642;&#x9593;&#x548c;&#x670d;&#x52d9;&#x5668;&#x6642;&#x9593;&#x4e0d;&#x4e00;&#x81f4;&#x7684;&#x6642;&#x5019;&#xff0c;&#x6703;&#x6709;&#x7de9;&#x5b58;&#x6709;&#x6548;&#x671f;&#x4e0d;&#x51c6;&#x7684;&#x554f;&#x984c;&#x3002;expir",{"_index":2702,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7684;&#x512a;&#x5148;&#x7d1a;&#x5728;&#x4e09;&#x500b",{"_index":2703,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7684;&#x512a;&#x5148;&#x7d1a;&#x9ad8;&#x65bc",{"_index":2735,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7684;&#x51fa;&#x73fe;&#x4e3b;&#x8981;&#x89e3;&#x6c7a;&#x4e86",{"_index":2781,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x52a0;&#x8f7d;&#x5b9e;&#x73b0",{"_index":225,"title":{"es6.html#Module-的加载实现":{}},"body":{}}],["x7684;&#x539f;&#x56e0;&#x3002",{"_index":1920,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x7684;&#x53e6;&#x4e00;&#x500b;&#x624b;&#x6bb5;&#xff0c;&#x7686;&#x662f;&#x56de;&#x50b3;function&#x57f7;&#x884c;&#x7d50;&#x679c",{"_index":1650,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x7684;&#x5de5;&#x5ee0;&#x3002",{"_index":2568,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x7684;&#x610f;&#x601d;&#x662f;&#x50b3;&#x905e;&#x4e00;&#x500b;&#x51fd;&#x6578;&#xff0c;&#x5ef6;&#x9072;&#x4e00;&#x6bb5;&#x6642;&#x5019;&#x628a;&#x8a72;&#x51fd;&#x6578;&#x6dfb;&#x52a0;&#x5230",{"_index":301,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x7684;&#x610f;&#x601d;&#x662f;&#x5148;&#x5efa;&#x7acb;&#x4e00;&#x500b;&#x7a7a;&#x7269;&#x4ef6",{"_index":498,"title":{},"body":{"copy.html#Object-assign":{}}}],["x7684;&#x6307;&#x5411",{"_index":1615,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["x7684;&#x6578;&#x503c",{"_index":1121,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x7684;&#x65b0;&#x8a9e;&#x6cd5;&#x3002;&#x4fee;&#x5fa9;&#x4e86;es5",{"_index":3043,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x7684;&#x65b9;&#x6848",{"_index":2909,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x7684;&#x65f6;&#x5019;&#x4f1a;&#x6536;&#x96c6;&#x4f9d;&#x8d56;&#xff0c;sett",{"_index":1403,"title":{},"body":{"core.html#屬性特徵":{}}}],["x7684;&#x65f6;&#x5019;&#x4f1a;&#x89e6;&#x53d1;&#x4f9d;&#x8d56;&#x66f4;&#x65b0",{"_index":1404,"title":{},"body":{"core.html#屬性特徵":{}}}],["x7684;&#x6642;&#x5019;&#xff0c;&#x6703;&#x5c07;&#x9019;&#x5169;&#x500b;&#x5c6c;&#x6027;&#x503c;&#x5230;&#x670d;&#x52d9;&#x7aef;&#x53bb;&#x9a57;&#x8b49;&#x662f;&#x5426;&#x547d;&#x4e2d;&#x5354;&#x5546;&#x7de9;&#x5b58;&#xff0c;&#x5982;&#x679c;&#x547d;&#x4e2d;&#x4e86;&#x5354;&#x5546;&#x7de9;&#x5b58;&#xff0c;&#x6703;&#x8fd4;&#x56d",{"_index":2744,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x6642;&#x9593",{"_index":1782,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x7684;&#x6642;&#x9593;&#xff0c;&#x4e26;&#x653e;&#x5230",{"_index":2767,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x66ff;&#x8eab",{"_index":2834,"title":{},"body":{"global/function.html#bind":{}}}],["x7684;&#x6838;&#x5fc3;&#x601d;&#x60f3;&#x5c31;&#x662f;&#xff0c;&#x5ba2;&#x6236;&#x7aef;&#x767c;&#x51fa;&#x7684;&#x6578;&#x64da;&#x64cd;&#x4f5c;&#x6307;&#x4ee4;&#x90fd;&#x662f;&#x201d;&#x52d5;&#x8a5",{"_index":173,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x7684;&#x683c;&#x5f0f;&#x662f;&#x975e;&#x5e38;&#x56b4;&#x683c;&#x7684;&#xff0c;&#x591a;&#x4e00;&#x500b;&#x9017;&#x865f;&#x5c11;&#x4e00;&#x500b;&#x9017;&#x865f;&#xff0c;&#x90fd;&#x6703;&#x5c0e;&#x81f4;&#x51fa;&#x73fe;&#x932f;&#x8aa4;&#xff0c",{"_index":1208,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x7684;&#x6d6e;&#x9ede;&#x6578;&#x4e26;&#x4e0d;&#x80fd;&#x7cbe;&#x78ba;&#x5730;&#x8868;&#x9054;&#x5c0f;&#x6578;&#xff08;&#x6bd4;&#x5982;&#x8aaa;0.1&#xff09;&#xff0c",{"_index":1895,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{}}}],["x7684;&#x7279;&#x5fb5",{"_index":321,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x7684;&#x7279;&#x6027;&#xff0c;&#x8fd9;&#x4e5f;&#x5c31;&#x662f",{"_index":1398,"title":{},"body":{"core.html#屬性特徵":{}}}],["x7684;&#x898f;&#x5247;&#xff1a",{"_index":1041,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x7684;&#x898f;&#x7bc4;&#xff0c;&#x8acb;&#x9078;&#x64c7;&#x6700;&#x5f8c;&#x4e00;&#x500b;&#x9078;&#x9805;&#x3002",{"_index":1430,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x7684;&#x89e3;&#x6c7a;&#x65b9;&#x6cd5",{"_index":1116,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x7684;&#x8abf;&#x7528;&#x65b9;&#x5f0f",{"_index":1281,"title":{},"body":{"core.html#this":{}}}],["x7684;hoisting&#x76f8;&#x540c;&#x6982;&#x5ff5",{"_index":1424,"title":{},"body":{"core.html#const":{}}}],["x7686;&#x662f;&#x56de;&#x50b3;function&#x57f7;&#x884c;&#x7d50;&#x679c",{"_index":2821,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x76e1;&#x53ef;&#x80fd;&#x4e0d;&#x8981;&#x4f7f;&#x7528;simpl",{"_index":1290,"title":{},"body":{"core.html#this":{}}}],["x76e1;&#x53ef;&#x80fd;&#x4e0d;&#x8981;&#x8abf;&#x7528;thi",{"_index":1320,"title":{},"body":{"core.html#this":{}}}],["x76e3;&#x807d;&#x662f;div1",{"_index":350,"title":{},"body":{"event.html#代理":{}}}],["x76ee;&#x524d;&#x53ea;&#x6709;&#x7e7c;&#x627f;&#x539f;&#x578b;prototyp",{"_index":1355,"title":{},"body":{"core.html#繼承":{}}}],["x76ee;&#x6a19;&#x7269;&#x4ef6;&#x672c;&#x8eab;&#x4e5f;&#x88ab;&#x6539;&#x8b8a;&#x3002",{"_index":2638,"title":{},"body":{"object/assign.html#合併物件":{}}}],["x76f4;&#x63a5;&#x64cd;&#x4f5c;&#x7269;&#x4ef6;&#x672c;&#x8eab",{"_index":1371,"title":{},"body":{"core.html#屬性特徵":{}}}],["x76f4;&#x63a5;&#x8f38;&#x51fa;&#xff0c;1",{"_index":292,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x76f4;&#x8b6f;&#x5668",{"_index":972,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x76f4;&#x8b6f;&#x5668;&#x8f49;&#x63db;&#x904e;&#x7a0b",{"_index":966,"title":{"core.html#JavaScript-直譯器轉換過程":{}},"body":{}}],["x76f8;&#x7576;&#x65bc;&#x7d66;&#x5c0d;&#x8c61;&#x6dfb;&#x52a0;&#x4e86;x&#x5c6c;&#x6027;&#x3002",{"_index":2932,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x770b;&#x5230;&#x51fd;&#x5f0f;&#x662f;&#x76f4;&#x63a5;&#x57f7;&#x884c;&#x7684",{"_index":1292,"title":{},"body":{"core.html#this":{}}}],["x770b;&#x898b;&#x7269;&#x4ef6;&#x6240;&#x6709;&#x5c6c;&#x6027;&#x5167;&#x5bb9",{"_index":1165,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x77e5;&#x591a;&#x5c11",{"_index":2310,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["x78ba;&#x4fdd;&#x7a7a;&#x7269;&#x4ef6",{"_index":1384,"title":{},"body":{"core.html#屬性特徵":{}}}],["x78bc",{"_index":2749,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x78bc;&#x662f;&#x4ee5",{"_index":2757,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7981;&#x7528;&#x5354;&#x5546;&#x7de9;&#x5b58",{"_index":2719,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x79c1;&#x6709;&#x65b9;&#x6cd5",{"_index":1275,"title":{},"body":{"core.html#函式工廠":{}}}],["x79d1;&#x5b78;&#x7b26;&#x865f;&#x8655;&#x7406",{"_index":1889,"title":{"math.html#科學符號處理":{},"cases/math.html#科學符號處理":{}},"body":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x79d2;&#x3002",{"_index":2729,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x79d2;&#x4e4b;&#x5f8c;&#x89f8;&#x767c;&#xff0c;&#x800c;&#x5faa;&#x74b0;&#x5b8c;&#x7684;&#x8f38;&#x51fa;&#x662f;&#x7acb;&#x5373;&#x57f7;&#x884c;&#x7684",{"_index":289,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x79d2;&#x4e4b;&#x5f8c;&#xff0c;&#x8f38;&#x51fa",{"_index":293,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x79d2;&#x7684;&#x8d85;&#x6642;&#x6642;&#x9593;&#x4e4b;&#x5f8c;&#xff0c;&#x518d;&#x6b21;&#x8acb;&#x6c42;&#x8cc7;&#x6e90;&#xff1a",{"_index":2733,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7a0b;&#x5e8f;&#x7684;&#x8a9e;&#x6cd5;&#x5206;&#x6790;(pars",{"_index":1037,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x7a0b;&#x5f0f",{"_index":997,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x7a4d;&#x5206;&#x3002",{"_index":2894,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x7a4d;&#x5206;&#xff0c;&#x666e;&#x901a;&#x7528;&#x6236;&#x8d08;&#x9001",{"_index":2893,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x7acb;&#x5373;&#x51fd;&#x5f0f",{"_index":1029,"title":{"core.html#立即函式":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["x7acb;&#x5373;&#x51fd;&#x5f0f;&#x4e00;&#x500b;&#x529f;&#x80fd",{"_index":1269,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["x7acb;&#x5373;&#x51fd;&#x5f0f;&#xff1a",{"_index":1636,"title":{"this.html#立即函式：":{}},"body":{}}],["x7acb;&#x5373;&#x51fd;&#x5f0f;(iif",{"_index":1239,"title":{"core.html#立即函式-IIFE":{}},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x7acb;&#x5373;&#x547c;&#x53eb;&#x51fd;&#x5f0f;&#x8868;&#x9054;&#x5f0f",{"_index":1240,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x7acb;&#x5373;&#x57f7;&#x884c",{"_index":1247,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x7b26;&#xff0c;&#x7576;&#x670d;&#x52d9;&#x7aef;&#x7684;&#x6587;&#x4ef6;&#x8b8a;&#x5316;&#x7684;&#x6642;&#x5019;&#xff0c;&#x5b83;&#x7684",{"_index":2752,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7b2c;&#x4e00;&#x500b;for&#x8ff4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x70ba",{"_index":3134,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x7b2c;&#x4e00;&#x65b9",{"_index":2087,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e00;&#x65b9;cookie&#x548c;&#x7b2c;&#x4e09;&#x65b9;cookie&#x5340;&#x5225",{"_index":2093,"title":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e00;&#x65b9;cookie&#x63a5;&#x53d7;&#x7387;&#x9ad8;&#xff0c;&#x66f4;&#x6e96;&#x78ba;&#xff0c;&#x6c92;&#x6709;&#x7279;&#x6b8a;&#x9700;&#x8981;&#x5c31;&#x7528;&#x4ed6;&#x3002",{"_index":2109,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e00;&#x6b21;&#x52a0;&#x8f09;&#xff0c;&#x9801;&#x9762;&#x6703;&#x5411;&#x670d;&#x52d9;&#x5668;&#x8acb;&#x6c42;&#x6578;&#x64da;&#xff0c;&#x4e26;&#x5728",{"_index":2726,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7b2c;&#x4e00;&#x6b21;&#x57f7;&#x884c",{"_index":2021,"title":{},"body":{"variable.html#Hoisting":{}}}],["x7b2c;&#x4e09;&#x65b9",{"_index":2100,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e09;&#x65b9;cooki",{"_index":2111,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e09;&#x65b9;cookie&#x53ef;&#x4ee5;&#x8de8;&#x57df;&#x8ddf;&#x8e64;&#xff0c;&#x7279;&#x5225;&#x9700;&#x6c42;&#x53ef;&#x4ee5;&#x61c9;&#x7528;&#x3002",{"_index":2110,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e09;&#x65b9;cookie&#x7684;&#x512a;&#x52e2;&#x548c;&#x61c9;&#x7528",{"_index":2126,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e8c;&#x5c64;&#x662f;&#x50b3;&#x53c3;&#x8003;&#x7684;&#x5f62;&#x5f0f",{"_index":1176,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x7b2c;&#x4e8c;&#x6b21;&#x52a0;&#x8f09;&#xff0c;d",{"_index":2730,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7b2c;&#x4e8c;&#x6b21;&#x57f7;&#x884c",{"_index":2022,"title":{},"body":{"variable.html#Hoisting":{}}}],["x7b2c;&#x4e8c;&#x6b21;&#x8acb;&#x6c42;&#x8cc7;&#x6e90;&#xff0c;&#x670d;&#x52d9;&#x7aef;&#x6839;&#x64da;&#x8acb;&#x6c42;&#x982d;&#x4e2d;&#x7684",{"_index":2779,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7b2c;53&#x4f4d;&#x958b;&#x59cb;)&#x3002;&#x7576;&#x7136;&#xff0c;&#x4ee3;&#x50f9;&#x5c31;&#x662f;&#xff0c;0.1&#x5728;&#x8a08;&#x7b97;&#x6a5f;&#x5167;&#x90e8;&#x6839;&#x672c;&#x5c31;&#x4e0d;&#x662f;&#x7cbe;&#x78ba;&#x7684;0.1&#xff0c;&#x800c;&#x662f;&#x4e00;&#x500b;&#x6709;&#x820d;&#x5165;&#x8aa4;&#x5dee;&#x7684;0.1&#x3002;&#x7576;&#x4ee3;&#x78bc;&#x88ab;&#x7de8;&#x8b6f;&#x6216;&#x89e3;&#x91cb;&#x5f8c;&#xff0c;0.1&#x5df2;&#x7d93;&#x88ab;&#x56db;&#x6368;&#x4e94;&#x5165;&#x6210;&#x4e00;&#x500b;&#x8207;&#x4e4b;&#x5f88;&#x63a5;&#x8fd1;&#x7684;&#x8a08;&#x7b97;&#x6a5f;&#x5167;&#x90e8;&#x6578;&#x5b57;&#xff0c;&#x4ee5;&#x81f3;&#x65bc;&#x8a08;&#x7b97;&#x9084;&#x6c92;&#x958b;&#x59cb;&#xff0c;&#x4e00;&#x500b;&#x5f88;&#x5c0f;&#x7684;&#x820d;&#x5165;&#x932f;&#x8aa4;&#x5c31;&#x5df2;&#x7d93;&#x7522;&#x751f;&#x4e86;&#x3002;&#x9019;&#x4e5f;&#x5c31;&#x662f",{"_index":1918,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x7b49;&#x4e0d;&#x80fd;&#x7de9;&#x5b58;&#x6b64;&#x97ff;&#x61c9",{"_index":2710,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7b49;&#x540c;&#x65bc",{"_index":379,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x7b49;&#x65b9;&#x6cd5;&#xff0c",{"_index":2298,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x7b49;&#x7de9;&#x5b58",{"_index":2712,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7b54;&#x6848;&#x662f;&#xff1a",{"_index":1916,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x7bad;&#x982d;&#x51fd;&#x5f0f",{"_index":1667,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x7bad;&#x982d;&#x51fd;&#x5f0f;&#x6c92;&#x6709;&#x81ea;&#x5df1;&#x7684;thi",{"_index":1433,"title":{},"body":{"core.html#箭頭函數":{}}}],["x7bad;&#x982d;&#x51fd;&#x5f0f;(es6",{"_index":1289,"title":{},"body":{"core.html#this":{}}}],["x7bad;&#x982d;&#x51fd;&#x6578",{"_index":1431,"title":{"core.html#箭頭函數":{}},"body":{"core.html#箭頭函數":{},"global/function.html#cab-call-apply-vs-bind":{},"global/function.html#bind":{}}}],["x7c21;&#x6613;&#x547c;&#x53eb",{"_index":1285,"title":{"this.html#簡易呼叫":{}},"body":{"core.html#this":{}}}],["x7c21;&#x6613;&#x547c;&#x53eb;&#x4e0b",{"_index":1319,"title":{},"body":{"core.html#this":{}}}],["x7d14;&#x503c",{"_index":1163,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x7d14;&#x503c;&#x7121;&#x6cd5;&#x65b0;&#x589e;&#x5c6c;&#x6027",{"_index":1157,"title":{"core.html#純值無法新增屬性":{}},"body":{"core.html#物件記憶體空間":{}}}],["x7d14;&#x503c;&#x7dad;&#x6301;&#x539f;&#x578b;&#x5225",{"_index":1317,"title":{},"body":{"core.html#this":{}}}],["x7d1a;&#x5225;&#x53ef;&#x4ee5;&#x4e0d;&#x8003;&#x616e;&#x9019;&#x5169;&#x7a2e;&#x60c5;&#x6cc1;&#x3002",{"_index":197,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x7d22;&#x5f15;&#x987a;&#x5e8f",{"_index":3033,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x7d44;&#x5408;&#x7684;&#x5de5;&#x5ee0;&#x51fd;&#x6578",{"_index":2525,"title":{"function/factory​_factory.html#組合的工廠函數":{}},"body":{}}],["x7d50;&#x69cb;&#x4e2d;&#x3002",{"_index":1812,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x7d66;&#x4e0d;&#x540c;&#x7684;&#x503c;&#x3000;&#x505a;&#x76f8;&#x540c;&#x7684;&#x4e8b;&#x60c5",{"_index":1274,"title":{},"body":{"core.html#函式工廠":{}}}],["x7d81;&#x5b9a;&#x5927;&#x6cd5",{"_index":2841,"title":{},"body":{"global/function.html#bind":{}}}],["x7d93;&#x5178;&#x7684;&#x96d9;&#x7aef;&#x968a;&#x5217;&#x554f;&#x984c;&#xff1a;&#x7ffb;&#x8f49;&#x5b57;&#x7b26;&#x4e32;&#x88e1;&#x7684;&#x55ae;&#x8a5",{"_index":3147,"title":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}},"body":{}}],["x7dad;&#x57fa;&#x767e;&#x79d1",{"_index":1203,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x7db2;&#x57df;&#x4e2d;&#x3002",{"_index":2099,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7db2;&#x57df;&#x4e2d;&#xff0c;&#x9019;&#x4fbf;&#x662f;&#x7b2c;&#x4e09;&#x65b9",{"_index":2106,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7db2;&#x9801;&#x7b2c;&#x4e09;&#x65b9",{"_index":2131,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7de9;&#x5b58",{"_index":2787,"title":{},"body":{"http/caching.html#References":{}}}],["x7e7c;&#x627f",{"_index":1337,"title":{"core.html#繼承":{}},"body":{}}],["x7e7c;&#x627f;&#x7269;&#x4ef6;&#x7684;&#x539f;&#x578b",{"_index":1199,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x7f3a;&#x9ed",{"_index":2130,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x800c",{"_index":1651,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x800c;&#x4e0d;&#x662f",{"_index":2557,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x800c;&#x4f7f;&#x7528;&#x7b2c;&#x4e09;&#x65b9;cookie&#xff0c;&#x90a3;&#x9ebc;&#x7121;&#x8ad6;&#x591a;&#x5c11;&#x500b;&#x57df;&#xff0c;&#x90fd;&#x53ea;&#x6709;&#x4e00;&#x500b;cookie&#xff0c;&#x4e00;&#x500b;&#x5c6c;&#x65bc;&#x7b2c;&#x4e09;&#x65b9;&#x57df;&#x7684;cookie&#xff0c;&#x7db2;&#x7ad9;&#x4e0b;&#x6240;&#x6709;&#x57df;&#x90fd;&#x80fd;&#x5171;&#x4eab;&#x9019;&#x500b;cookie&#xff0c;&#x90a3;&#x9ebc;&#x6240;&#x6709;&#x7684;&#x884c;&#x70ba;&#x90fd;&#x80fd;&#x88ab;&#x95dc;&#x806f;&#x8d77;&#x4f86;&#x5206;&#x6790;&#x3002",{"_index":2129,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x800c;&#x5982;&#x679c;&#x4e0a;&#x4e00;&#x500b;&#x8cc7;&#x6e90;&#x52a0;&#x8f09;&#x5931;&#x6557;,&#x53ef;&#x80fd;&#x5c0e;&#x81f4;&#x5f9e;&#x7de9;&#x5b58;&#x52a0;&#x8f09;&#x7684;&#x8cc7;&#x6e90;&#x5931;&#x6557",{"_index":2309,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["x800c;&#x7b2c;&#x4e09;&#x65b9",{"_index":2090,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["x800c;&#x95dc;&#x9589;&#x700f;&#x89bd;&#x5668;&#x5f8c;&#x56e0;&#x70ba;cookie&#x6d88;&#x5931;&#x9020;&#x6210",{"_index":2162,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8072;&#x660e;&#x7684;&#x8b8a;&#x91cf;&#x4e0d;&#x6703;&#x63d0;&#x5347;,&#x4e26;&#x4e14;&#x6703;&#x7522;&#x751f;&#x66ab;&#x5b58;&#x6b7b;&#x5340;&#x3002;&#x5728",{"_index":3018,"title":{},"body":{"statements/let.html#let":{}}}],["x8072;&#x660e;&#x8b8a;&#x91cf;&#x4e4b;&#x524d;&#x8a2a;&#x554f;&#x8b8a;&#x91cf;&#x6703;&#x62cb;&#x51fa;&#x932f;&#x8aa4;&#x3002",{"_index":3019,"title":{},"body":{"statements/let.html#let":{}}}],["x80fd;&#x4ee3;&#x8868;&#x8a72;&#x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x7684;&#x6578;&#x5b57",{"_index":1695,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x81ea;&#x52d5;&#x5206;&#x865f;&#x63d2;&#x5165",{"_index":1034,"title":{"core.html#ASI-自動分號插入":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x81ea;&#x8eab;&#x518d;&#x6b21;&#x8abf;&#x7528",{"_index":299,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x8207",{"_index":1128,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"this.html#Callback":{}}}],["x82f1;&#x6587;&#x539f;&#x6587;&#xff1a",{"_index":2571,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x842c;&#x7269;&#x5373;&#x5c0d;&#x8c61",{"_index":2971,"title":{},"body":{"operators/typeof.html#null":{}}}],["x85cd;&#x8272",{"_index":1091,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x86cb;&#x7cd5",{"_index":2541,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x86cb;&#x7cd5;*&#x662f;*&#x751c;&#x9ede",{"_index":2538,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x8868;&#x6578;&#x5b57;&#x5230;1",{"_index":1688,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x8868;&#x793a;&#x56b4;&#x683c;&#x76f8;&#x7b49;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#x985e;&#x578b;&#x548c;&#x503c;&#x90fd;&#x5fc5;&#x9808;&#x76f8;&#x540c;&#x3002;&#x5169;&#x500b;&#x7b49;&#x865f",{"_index":1958,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x8868;&#x793a;&#x57fa;&#x672c;&#x8a9e;&#x53e5;&#x7684;&#x57f7;&#x884c;&#x6b21;&#x6578;&#x662f;&#x4e00;&#x500b;&#x5e38;&#x6578;&#xff0c;&#x4e00;&#x822c;&#x4f86;&#x8aaa;&#xff0c;&#x53ea;&#x8981;&#x6f14;&#x7b97;&#x6cd5;&#x4e2d;&#x4e0d;&#x5b58;&#x5728;&#x8ff4;&#x5708;&#x8a9e;&#x53e5;&#xff0c;&#x5176;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x5c31;&#x662f;o(1",{"_index":3138,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x8868;&#x9054;&#x5f0f",{"_index":1023,"title":{"core.html#陳述式-表達式":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x8868;&#x9054;&#x5f0f;&#x6703;&#x56de;&#x50b3;&#x7d50;&#x679c",{"_index":1634,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x88ab;&#x6539;&#x5230;&#x4e86",{"_index":484,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x88dc;&#x6578;&#x5b57",{"_index":1483,"title":{"num.html#補數字":{}},"body":{}}],["x88dd;&#x98fe;&#x914d;&#x6599;&#x3002",{"_index":2544,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x88e1",{"_index":1406,"title":{},"body":{"core.html#Let":{}}}],["x88e1;&#x9762;&#x7684",{"_index":2827,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x8907;&#x88fd;&#x4e00;&#x4efd;obj1&#x53eb;&#x505a;obj2",{"_index":485,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x8981;&#x597d;&#x65bc",{"_index":182,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x8981;&#x63d2;&#x5165",{"_index":1808,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x898b;&#x5927;&#x62ec;&#x865f",{"_index":1153,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["x898f;&#x5247;&#x662f;&#xff1a",{"_index":2891,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x898f;&#x7bc4;&#x6587;&#x4ef6",{"_index":1425,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x89e3;&#x51b3;provision",{"_index":2305,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["x89e3;&#x6c7a;&#x65b9;&#x6cd5;&#x662f;&#x4f7f;&#x7528",{"_index":381,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x89e3;&#x91cb",{"_index":3154,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x89e3;&#x984c;&#x601d;&#x8def;&#xff1a;&#x4f7f;&#x7528;&#x96d9;&#x7aef;&#x968a;&#x5217;&#x89e3;&#x984c",{"_index":3159,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x89f8;&#x767c",{"_index":1830,"title":{},"body":{"performance.html#事件節流":{}}}],["x8a08;&#x7b97;&#x5b8c;a.x,&#x518d;&#x8a08;&#x7b97",{"_index":2933,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x8a08;&#x7b97;&#x65b9;&#x5f0f;&#x4f86;&#x6c7a;&#x5b9a;&#xff09;&#x9054;&#x5230;&#x80fd;&#x5920;&#x89f8;&#x767c",{"_index":2760,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x8a08;&#x7b97;&#x6a5f;&#x8868;&#x793a;&#x5341;&#x9032;&#x5236;&#x662f;&#x63a1;&#x7528;&#x4e8c;&#x9032;&#x88fd;&#x8868;&#x793a;&#x7684;&#xff0c;&#x6240;&#x4ee5",{"_index":1904,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x8a08;&#x7b97;&#xff0c;&#x66f4;&#x5feb;&#x5c55;&#x73f",{"_index":1759,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x8a18;&#x5f97;&#x990a;&#x6210;&#x597d;&#x7fd2;&#x6163",{"_index":1253,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x8a2d;&#x5b9a;&#x5728",{"_index":2105,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8a2d;&#x5b9a;&#x5728;&#x60a8;&#x76ee;&#x524d;&#x9020;&#x8a2a;&#x4e4b;&#x7db2;&#x57df;&#x4e2d",{"_index":2094,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8a2d;&#x5b9a;&#x5728;&#x76ee;&#x524d;&#x9020;&#x8a2a;&#x7db2;&#x57df;&#x4ee5;&#x5916;&#x7684",{"_index":2101,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8a2d;&#x7f6e;&#x4e86;&#x4e00;&#x500b;cookie&#xff0c;&#x90a3;&#x9019;&#x500b;cookie&#x53ea;&#x80fd;&#x88ab",{"_index":2121,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8a2d;&#x8a08;&#x4e2d;&#xff0c;&#x6211;&#x5011;&#x90fd;&#x6703;&#x628a;&#x8cc7;&#x6599;&#x8a18;&#x9304;&#x5728",{"_index":2154,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8a72;&#x51fd;&#x6578;&#x6703;&#x7b49;&#x5f85;&#x5230;&#x51fd;&#x6578;&#x968a;&#x5217;&#x4e2d;&#x524d;&#x9762;&#x6240;&#x6709;&#x7684;&#x51fd;&#x6578;&#x904b;&#x884c;&#x5b8c;&#x7562;&#x4e4b;&#x5f8c;&#x624d;&#x6703;&#x904b;&#x884c",{"_index":305,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x8a72;&#x53c3;&#x6578;&#x5c0f;&#x65bc",{"_index":2446,"title":{},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x8a9e;&#x6cd5;&#x4f5c;&#x7528;&#x57df",{"_index":970,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x8a9e;&#x6cd5;&#x57fa;&#x672c;&#x55ae;&#x5143;&#x5316;(token",{"_index":967,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x8a9e;&#x6cd5;&#x89e3;&#x6790;&#x6642;&#x5c31;&#x5df2;&#x7d93;&#x78ba;&#x5b9a;&#x4f5c;&#x7528;&#x57df",{"_index":973,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x8aaa;&#x660e;&#xff1a",{"_index":3156,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x8abf;&#x6574;&#x539f;&#x578b;&#x7684;&#x65b9;&#x6cd5;&#x6642",{"_index":1333,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x8acb;&#x5225;&#x5132;&#x5b58",{"_index":2835,"title":{},"body":{"global/function.html#bind":{}}}],["x8acb;&#x6c42;&#x982d;&#x5c6c;&#x6027;&#x4e2d;&#xff0c;&#x670d;&#x52d9;&#x7aef;&#x6839;&#x64da;&#x6587;&#x4ef6;&#x6700;&#x5f8c;&#x4e00;&#x6b21;&#x4fee;&#x6539;&#x6642;&#x9593;&#x548c",{"_index":2768,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x8b8a;&#x5c0d;&#x8c61",{"_index":2975,"title":{},"body":{"operators/typeof.html#null":{}}}],["x8b8a;&#x6578",{"_index":1147,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x8b8a;&#x6578;&#x6703;&#x81ea;&#x52d5;&#x88ab;&#x63d0;&#x5347",{"_index":2020,"title":{},"body":{"variable.html#Hoisting":{}}}],["x8b8a;&#x6578;&#x7121;&#x6cd5;&#x88ab;&#x522a;&#x9664;&#xff0c;&#x5c6c;&#x6027;&#x624d;&#x53ef;&#x4ee5",{"_index":1146,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x8b8a;&#x6578;&#x7684;&#x4f5c;&#x7528;&#x57df;&#x5728;&#x51fd;&#x5f0f;&#x5167",{"_index":2016,"title":{"variable.html#變數的作用域在函式內":{}},"body":{}}],["x8b8a;&#x91cf",{"_index":2965,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x8b93;&#x8cc7;&#x6e90;&#x52a0;&#x8f09;&#x66f4;&#x5feb",{"_index":1768,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x8b93;&#x9023;&#x7e8c;&#x9375;&#x5165;&#x4e0d;&#x8981;&#x983b;&#x7e41;&#x89f8;&#x767c",{"_index":1827,"title":{},"body":{"performance.html#事件節流":{}}}],["x8cc7;&#x6e90;&#x9700;&#x8981;&#x591a;&#x7d1a;&#x5206;&#x985e;&#xff0c;&#x56e0;&#x6b64;&#x5f88;&#x5bb9;&#x6613;&#x5beb;&#x51fa;&#x591a;&#x7d1a;&#x7684",{"_index":185,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x8cd3;&#x8a9e",{"_index":172,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x8cd3;&#x8a9e;&#x201d;&#x7684;&#x7d50;&#x69cb;&#x3002",{"_index":174,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x8ce6;&#x503c;&#x6210;&#x4e00;&#x500b;&#x901a;&#x7528;&#x7684;&#x9810;&#x89bd;&#x5716;&#xff0c;&#x4e0b;&#x62c9;&#x6642;&#x5019;&#x518d;&#x52d5;&#x614b;&#x8ce6;&#x503c;&#x6210;&#x6b63;&#x5f0f;&#x7684;&#x5716;&#x7247;&#x3002;&#x5982;&#x4e0b;&#xff0c;preview.png&#x662f;&#x9810;&#x89bd;&#x5716;&#x7247;&#xff0c;&#x6bd4;&#x8f03;&#x5c0f;&#xff0c;&#x52a0;&#x8f09;&#x5f88;&#x5feb;&#xff0c;&#x800c;&#x4e14;&#x5f88;&#x591a;&#x5716;&#x7247;&#x90fd;&#x5171;&#x7528;&#x9019;&#x500b;preview.png&#xff0c;&#x52a0;&#x8f09;&#x4e00;&#x6b21;&#x5373;&#x53ef;&#x3002;&#x5f85;&#x9801;&#x9762;&#x4e0b;&#x62c9;&#xff0c;&#x5716;&#x7247;&#x986f;&#x793a;&#x51fa;&#x4f86;&#x6642;&#xff0c;&#x518d;&#x53bb;&#x66ff;&#x63db;src&#x70ba",{"_index":1785,"title":{},"body":{"performance.html#懶加載":{}}}],["x8ce6;&#x503c;&#x662f;&#x5f9e;&#x53f3;&#x5411;&#x5de6;,&#x6b64;&#x6642;a&#x6307;&#x5411;&#x4e00;&#x500b;&#x65b0;&#x5c0d;&#x8c61;&#x3002",{"_index":2934,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x8ce6;&#x503c;&#x662f;&#x8868;&#x9054;&#x5f0f",{"_index":1633,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x8ce6;&#x503c;&#x7684;&#x512a;&#x5148;&#x6027;&#x5f88;&#x4f4e;&#x53ea;&#x6709;3",{"_index":1078,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x8d77;&#x4e00;&#x500b;&#x670d;&#x52d9;&#x4f86;&#x9a57;&#x8b49;&#x5354;&#x5546;&#x7de9;&#x5b58;&#xff0c;&#x4ee3;&#x78bc;&#x5982;&#x4e0b;&#xff1a",{"_index":2772,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x8d77;&#x4e00;&#x500b;&#x670d;&#x52d9;&#x4f86;&#x9a57;&#x8b49;&#x5f37;&#x7de9;&#x5b58;&#x7684",{"_index":2716,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x8ddf",{"_index":1084,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x8f03;&#x5feb",{"_index":2295,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x8f09;&#x5165;&#x7de9;&#x5b58;&#x8cc7;&#x6e90;,&#x8acb;&#x6c42;&#x6c92;&#x6709;&#x88ab;&#x767c;&#x9001",{"_index":2308,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["x8f38;&#x5165",{"_index":3148,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x8f38;&#x5165;&#x5b57;&#x7b26;&#x4e32;&#x53ef;&#x4ee5;&#x5728;&#x524d;&#x9762;&#x6216;&#x8005;&#x5f8c;&#x9762;&#x5305;&#x542b;&#x591a;&#x9918;&#x7684;&#x7a7a;&#x683c;&#xff0c;&#x4f46;&#x662f;&#x53cd;&#x8f49;&#x5f8c;&#x7684;&#x5b57;&#x7b26;&#x4e0d;&#x80fd;&#x5305;&#x62ec;&#x3002",{"_index":3158,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x8f38;&#x5165;&#x5b8c;&#x89f8;&#x767c;&#x6587;&#x5b57;&#x4fee;&#x6539;&#x4e8b;&#x4ef6",{"_index":1824,"title":{},"body":{"performance.html#事件節流":{}}}],["x8f38;&#x51fa",{"_index":3151,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x8f38;&#x51fa;&#x7684;&#x662f",{"_index":3041,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x8f38;&#x51fa;&#x7684;&#x662f;&#x503c;(valu",{"_index":3049,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x8f38;&#x51fa;&#x7684;&#x662f;&#x5c6c",{"_index":3038,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x8f38;&#x51fa;&#x7684;&#x662f;&#x5c6c;&#x6027;&#x540d;&#x7a31;(key)&#xff0c;for&#x2026;of",{"_index":3048,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x8f49",{"_index":1886,"title":{},"body":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x8f49;&#x6210",{"_index":503,"title":{"copy.html#轉成-JSON-再轉回來":{}},"body":{}}],["x8f49;&#x6210;&#x6578;&#x5b57;&#x5f8c;&#x518d;&#x986f;&#x793a;&#xff0c;&#x5982;&#x4e0b;&#xff1a",{"_index":1884,"title":{},"body":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x8f49;&#x6578;&#x5b57",{"_index":1682,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x8f49;&#x70ba;&#x5c0f;&#x6578",{"_index":1486,"title":{},"body":{"num.html#補數字":{}}}],["x8fd4;&#x56de",{"_index":2394,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x9009;&#x9879;&#xff0c;vue",{"_index":1393,"title":{},"body":{"core.html#屬性特徵":{}}}],["x900f;&#x904e",{"_index":1210,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["x900f;&#x904e;&#x5efa;&#x69cb;&#x5f0f;&#x4f86;&#x5efa;&#x7acb;&#x7684;&#x7269;&#x4ef6;&#xff0c",{"_index":1073,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x900f;&#x904e;&#x958b;&#x767c;&#x5de5;&#x5177;network&#x53ef;&#x4ee5;&#x770b;&#x7d50;&#x679c",{"_index":1216,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x900f;&#x904e;prototype&#x6240;&#x65b0;&#x589e;&#x7684;&#x5c6c;&#x6027",{"_index":1327,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x900f;&#x904e;setter&#x6539;&#x8b8a;total&#x7684;&#x503c",{"_index":1379,"title":{},"body":{"core.html#屬性特徵":{}}}],["x9010;&#x500b;&#x8b80;&#x53d6;&#x5b57;&#x7b26;&#x4e32;&#x4e2d;&#x7684;&#x6bcf;&#x500b;&#x55ae;&#x8a5e;&#xff0c;&#x4f9d;&#x6b21;&#x653e;&#x5165;&#x96d9;&#x7aef;&#x968a;&#x5217;&#x7684;&#x5c0d;&#x982d",{"_index":3161,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x9019;&#x500b",{"_index":1639,"title":{},"body":{"this.html#Callback":{}}}],["x9019;&#x500b;&#x5340;&#x57df;&#x7121;&#x6cd5;&#x547c;&#x53eb;&#x8b8a;&#x6578",{"_index":1421,"title":{},"body":{"core.html#const":{}}}],["x9019;&#x500b;&#x547d;&#x4ee4;&#xff0c",{"_index":176,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x9019;&#x500b;&#x57df;&#x4e0b;&#x7684;&#x7db2;&#x9801;&#x8b80;&#x53d6;&#xff0c;&#x9019;&#x5c31;&#x662f;&#x7b2c;&#x4e00;&#x65b9;cookie&#x3002",{"_index":2116,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x9019;&#x500b;&#x57df;&#x540d;&#x4e0b;&#x53ef;&#x67e5;&#x627",{"_index":212,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x9019;&#x500b;&#x57df;&#x8a2a;&#x554f;&#xff0c",{"_index":2123,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x9019;&#x500b;&#x589e;&#x5f37;&#x7684;&#x5c0d;&#x8c61;&#x63a1;&#x7528;&#x4e00;&#x500b;&#x73fe;&#x6709;&#x5de5;&#x5ee0;&#xff0c;&#x4e26;&#x5c07;&#x5176;&#x5305;&#x88dd;&#x4ee5;&#x5275;&#x5efa;&#x8fd4;&#x56de;&#x5e36;&#x6709",{"_index":2566,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9019;&#x500b;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x7b2c;&#x4e00;&#x500b;&#x5b57;&#x7b26;&#x662f;&#x201c;3&#x201d;&#xff0c;&#x5b83;&#x4e26;&#x4e0d;&#x662f;&#x57fa;&#x790e;&#x57fa;&#x6578;2&#x7684;&#x4e00;&#x500b;&#x6709;&#x6548;&#x6578;&#x5b57;&#x3002;&#x6240;&#x4ee5;&#x9019;&#x500b;&#x5b50;&#x5b57;&#x7b26;&#x4e32;&#x5c07;&#x88ab;&#x89e3;&#x6790;&#x70ba;&#x7a7a;&#x3002;&#x5982;&#x679c;&#x5b50;&#x5b57;&#x7b26;&#x4e32;&#x88ab;&#x89e3;&#x6790;&#x6210;&#x7a7a;&#x4e86;&#xff0c;&#x51fd;&#x6578;&#x5c07;&#x8fd4;&#x56de;&#x70ba;nan&#x3002",{"_index":2447,"title":{},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x9019;&#x500b;&#x6771;&#x897f;&#x662f",{"_index":2815,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x9019;&#x500b;&#x7269;&#x4ef6",{"_index":1674,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x9019;&#x500b;&#x914d;&#x7f6e;&#x5c31;&#x597d",{"_index":2902,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x9019;&#x5169;&#x7a2e;&#x65b9;&#x6cd5;&#x90fd;&#x662f;&#x5c0d;&#x9663;&#x5217;&#x4e2d;&#x7684;&#x5143;&#x7d20;&#x9032;&#x884c;&#x8fed;&#x4ee3;&#x3002",{"_index":2285,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x9019;&#x53ea;&#x662f;javascript&#x9075;&#x5faa;iee",{"_index":1892,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x9019;&#x610f;&#x5473;&#x8457;&#x6211;&#x5011;&#x7e3d;&#x662f;&#x80fd;&#x5920;&#x5c07;&#x5c0d;&#x8c61;&#x5e8f;&#x5217;&#x5316;&#x70ba;json&#xff0c;&#x9019;&#x5c0d;&#x65bc;&#x5728;&#x6703;&#x8a71;&#x4e4b;&#x9593;&#x6301;&#x4e45;&#x5316;&#xff0c;&#x901a;&#x904e;http&#x6216;websockets&#x767c;&#x9001;&#x5b83;&#x5011;&#xff0c;&#x4e26;&#x5c07;&#x5b83;&#x5011;&#x653e;&#x5165;&#x6578;&#x64da;&#x5b58;&#x5132;&#x5f88;&#x91cd;&#x8981;&#x3002",{"_index":2562,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9019;&#x662f;&#x56e0;&#x70ba;&#x4e00;&#x822c;&#x4f86;&#x8aaa;&#xff0c;&#x6211;&#x5011;&#x4e0d;&#x9700;&#x8981;&#x9019;&#x9ebc;&#x505a;&#x3002",{"_index":2560,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9019;&#x6642;&#x5019;&#x518d;&#x4fee;&#x6539;obj2.b&#x4e5f;&#x4e0d;&#x6703;&#x5f71;&#x97ff;obj1",{"_index":501,"title":{},"body":{"copy.html#Object-assign":{}}}],["x9019;&#x6642;&#x5019;&#x6211;&#x5011;&#x6703;&#x5beb;&#x4e00;&#x4e9b;&#x7a0b;&#x5f0f;&#x4f86;&#x586b;&#x88dc;&#x67d0;&#x4e9b;&#x700f;&#x89bd;&#x5668;&#x4e0d;&#x652f;&#x63f4;&#x7684;&#x60c5;&#x6cc1;&#xff0c;&#x6211;&#x5011;&#x628a;&#x9019;&#x4e9b;&#x7a0b;&#x5f0f;&#x7a31;&#x505a",{"_index":1358,"title":{},"body":{"core.html#繼承":{}}}],["x9019;&#x6a23;&#x505a;&#x662f;&#x771f;&#x6b63;&#x7684",{"_index":505,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["x9019;&#x6a23;&#x7684;&#x5de5;&#x5177;&#x8fd4;&#x56d",{"_index":2554,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9019;&#x6a23;&#x7684;&#x6578;&#x64da;&#x8981;&#x5c55;&#x793a;&#x6642;&#xff0c;&#x5efa;&#x8b70;&#x4f7f;&#x7528",{"_index":1882,"title":{},"body":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x9019;&#x7a2e",{"_index":187,"title":{},"body":{"RESTfulAPI.html#動詞":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x9019;&#x7a2e;&#x6df1;&#x5ea6;&#x5d4c;&#x5957;&#x7684;&#x7e2e;&#x9032;&#x6703;&#x4f7f;&#x7570;&#x6b65;&#x5de5;&#x5ee0;&#x96e3;&#x4ee5;&#x95b1;&#x8b80;&#x548c;&#x6e2c;&#x8a66;&#x3002",{"_index":2551,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9019;&#x88e1;&#x50b3;&#x904e;&#x53bb;&#x7684",{"_index":322,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x9019;&#x88e1;&#x7528;slice&#x548c;substr&#x5747;&#x53ef",{"_index":1488,"title":{},"body":{"num.html#補數字":{}}}],["x901a;&#x904e;&#x4e8b;&#x4ef6;&#x5192;&#x6ce1",{"_index":346,"title":{},"body":{"event.html#代理":{}}}],["x901a;&#x904e;&#x6bcf;&#x500b;&#x5143;&#x7d20;&#x7684;&#x56de;&#x8abf;&#x51fd;&#x6578;&#x5c07;&#x5176;&#x6620;&#x5c04;&#x5230;&#x65b0;&#x7684;&#x5143;&#x7d20;&#x4e0a;&#xff0c;&#x6700;&#x7d42;&#x8fd4;&#x56de;&#x4e00;&#x500b;&#x65b0;&#x7684;&#x9663;&#x5217;&#x3002",{"_index":2286,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x9032;&#x4f4d",{"_index":1697,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x7684;1",{"_index":1687,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x7684;2",{"_index":1692,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x9032;&#x5165;&#x57f7;&#x884c;&#x5806;&#x758a",{"_index":1278,"title":{},"body":{"core.html#this":{}}}],["x9032;&#x5230;&#x4e0b;&#x4e00;&#x4f4d",{"_index":1689,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x9032;&#x884c;&#x540c;&#x503c;&#x6bd4;&#x8f03;&#x3002;&#x4ed6;&#x6709;&#x8457;&#x81ea;&#x5df1;&#x7684;&#x7279;&#x6b8a;&#x7528;&#x9014;&#xff0c;&#x4e0d;&#x61c9;&#x8aaa;&#x4ed6;&#x66f4;&#x5bec;&#x9b06;&#x6216;&#x66f4;&#x56b4;&#x683c;&#x65bc;&#x5176;&#x4ed6;&#x7b49;&#x65bc;&#x64cd;&#x4f5c;&#x7b26",{"_index":1963,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x9032;&#x968a",{"_index":3121,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x9032;&#x968e;&#x6982;&#x5ff5",{"_index":1303,"title":{},"body":{"core.html#this":{}}}],["x9047;&#x5230;&#x4ee5;&#x4e0a;&#x7684;&#x6a19;&#x9ede;&#x7b26;&#x865f",{"_index":1050,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x904b;&#x7b97;&#x5b50",{"_index":1076,"title":{"core.html#運算子":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x904b;&#x7b97;&#x5b50;&#x512a;&#x5148;&#x5e8f",{"_index":1077,"title":{"operators/precedence.html#運算子優先序":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x904b;&#x7b97;&#x5f0f;&#x8207;&#x904b;&#x7b97;&#x5b50",{"_index":1025,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{}}}],["x904b;&#x7b97;&#x7b26",{"_index":2354,"title":{},"body":{"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#拼接兩個陣列":{}}}],["x904b;&#x7b97;&#x7b26;&#x6bd4",{"_index":2927,"title":{"operators/precedence.html#運算符比-運算符高":{}},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x904b;&#x7b97;&#x7b26;&#x9ad8",{"_index":2928,"title":{"operators/precedence.html#運算符比-運算符高":{}},"body":{}}],["x904b;&#x7b97;&#x7b26;&#x9ad8;,&#x5148;&#x8a08;&#x7b97",{"_index":2930,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x904b;&#x884c;&#x7684",{"_index":2294,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x904d;&#x6b77;&#x6240;&#x6709;&#x5143;&#x7d20",{"_index":2259,"title":{},"body":{"array/array_methods.html#forEach":{}}}],["x904e;&#x4e86",{"_index":2732,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x904e;&#x6ffe;&#x7b26;&#x5408;&#x689d;&#x4ef6;&#x7684;&#x5143;&#x7d20;&#xff0c;&#x751f;&#x6210;&#x65b0;&#x9663;&#x5217",{"_index":2263,"title":{},"body":{"array/array_methods.html#filter":{}}}],["x9078;&#x64c7;&#x6027",{"_index":1645,"title":{},"body":{"this.html#Callback":{}}}],["x907f;&#x514d;&#x591a;&#x7d1a",{"_index":184,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x9084;&#x80fd;&#x4e0d;&#x88ab;&#x8ce6;&#x503c",{"_index":1411,"title":{},"body":{"core.html#const":{}}}],["x908f;&#x8f2f;&#x904b;&#x7b97;&#x5b50;&#x53ca;&#x51fd;&#x5f0f;&#x9810;&#x8a2d;&#x503c",{"_index":1114,"title":{"core.html#邏輯運算子及函式預設值":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["x90fd;&#x4e0d;&#x6703;&#x512a;&#x5148;&#x57f7;&#x884c",{"_index":1014,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x90fd;&#x5728",{"_index":211,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x90fd;&#x662f;&#x51fd;&#x5f0f;&#x8868;&#x9054;&#x5f0f",{"_index":1228,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x90fd;&#x662f;&#x7121;&#x9650;&#x5faa;&#x74b0;&#x7684;&#x4e8c;&#x9032;&#x5236;&#x4e86;&#xff0c;&#x6240;&#x4ee5;&#x5728;&#x5c0f;&#x6578;&#x4f4d;&#x672b;&#x5c3e;&#x8655;&#x9700;&#x8981;&#x5224;&#x65b7;&#x662f;&#x5426;&#x9032;&#x4f4d;&#xff08;&#x5c31;&#x548c;&#x5341;&#x9032;&#x5236;&#x7684;&#x56db;&#x6368;&#x4e94;&#x5165;&#x4e00;&#x6a23;&#xff09;&#x3002",{"_index":1903,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x90fd;&#x6703;&#x662f",{"_index":1072,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x932f;&#x8aa4",{"_index":1021,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x932f;&#x8aa4;&#xff0c;&#x53ea;&#x662f",{"_index":1019,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x9375;&#x76e4;&#x4e8b;&#x4ef6",{"_index":1821,"title":{},"body":{"performance.html#事件節流":{}}}],["x9589;&#x5305",{"_index":1267,"title":{"core.html#閉包-Closure":{}},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["x958b;&#x555f;&#x5354;&#x5546;&#x7de9;&#x5b58",{"_index":2773,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x958b;&#x59cb",{"_index":1044,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x958b;&#x982d;&#x7684;&#x4e00;&#x4e32;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x8aaa;&#x660e;&#x6b64;&#x6642;&#x5354;&#x5546;&#x7de9;&#x5b58;&#x7684;&#x6821;&#x9a57;&#x662f;&#x5f31;&#x6821;&#x9a57;&#x7684;&#xff0c;&#x53ea;&#x6709;&#x670d;&#x52d9;&#x5668;&#x4e0a;&#x7684;&#x6587;&#x4ef6;&#x5dee;&#x7570;&#xff08;&#x6839;&#x64da",{"_index":2759,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x958b;&#x982d;&#x7684;&#x5c6c;&#x6027;&#x503c;&#xff1f",{"_index":1792,"title":{},"body":{"performance.html#懶加載":{}}}],["x958b;&#x982d;&#x7684;&#x5c6c;&#x6027;&#x700f;&#x89bd;&#x5668;&#x6e32;&#x67d3;&#x7684;&#x6642;&#x5019;&#x6703;&#x5ffd;&#x7565;&#x6389;&#xff0c;&#x63d0;&#x9ad8;&#x6e32;&#x67d3;&#x6027;&#x80fd;&#x3002",{"_index":1796,"title":{},"body":{"performance.html#懶加載":{}}}],["x958b;&#x982d;&#xff0c;&#x56e0;&#x70ba",{"_index":1795,"title":{},"body":{"performance.html#懶加載":{}}}],["x95dc;&#x4fc2;&#x662f",{"_index":1647,"title":{},"body":{"this.html#Callback":{}}}],["x95dc;&#x4fc2;&#x800c;&#x4e0d;&#x662f",{"_index":2534,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x95dc;&#x6ce8;&#x5728;&#x54ea;&#x500b;&#x7269;&#x4ef6;&#x4e0b;&#x547c;&#x53eb",{"_index":1283,"title":{},"body":{"core.html#this":{}}}],["x95dc;&#x9375;&#x5b57;&#x8a2d;&#x70ba;&#x7d66;&#x5b9a;&#x7684;&#x53c3;&#x6578;&#xff0c;&#x4e26;&#x5728;&#x547c;&#x53eb;&#x6642;&#xff0c;&#x5e36;&#x6709;&#x63d0;&#x4f9b;&#x4e4b;&#x524d;&#xff0c;&#x7d66;&#x5b9a;&#x9806;&#x5e8f;&#x7684;&#x53c3;&#x6578;&#x3002",{"_index":2811,"title":{},"body":{"global/function.html#call、apply、bind":{}}}],["x9632;&#x6b62;&#x64f4;&#x5145",{"_index":1368,"title":{},"body":{"core.html#屬性特徵":{}}}],["x9650;&#x5236;&#x4f5c;&#x7528;&#x57df",{"_index":1270,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["x9650;&#x5236;&#x8b8a;&#x6578;&#x7684;&#x4f5c;&#x7528;&#x57df",{"_index":1251,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x9663;&#x5217",{"_index":1185,"title":{"core.html#陣列":{}},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"this.html#bind-apply-call":{},"statements/for.html#for…of與for…in的差別":{}}}],["x9663;&#x5217;&#x65b9;&#x6cd5",{"_index":2283,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x9663;&#x5217;&#x662f;&#x7269;&#x4ef6;&#x578b;&#x5225;&#x7684;&#x4e00;&#x7a2",{"_index":1186,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x9663;&#x5217;&#x7684;&#x539f;&#x578b",{"_index":1196,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x9663;&#x5217;6",{"_index":1189,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x9664;&#x4e86;&#x7b49;&#x65bc;&#x64cd;&#x4f5c;&#x7b26;&#xff0c;&#x9084;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":1962,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x9673;&#x8ff0;&#x5f0f",{"_index":1022,"title":{"core.html#陳述式-表達式":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{}}}],["x9673;&#x8ff0;&#x5f0f;&#x8207;&#x5ba3;&#x544a;&#x5206;&#x985",{"_index":1024,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{}}}],["x968a;&#x5217",{"_index":302,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x968e;&#x6bb5;&#x8d77;&#x4f5c;&#x7528;&#x3002",{"_index":1038,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x968e;&#x78bc",{"_index":1897,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x96b1;&#x6027;&#x7684;&#x8f49;&#x63db",{"_index":1060,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x96d6;&#x7136;&#x4e5f;&#x70ba;&#x6bcf;&#x4e00;&#x500b;&#x5143;&#x7d20;&#x6e96;&#x5099;&#x4e86;&#x56de;&#x8abf;&#x51fd;&#x6578;&#xff0c;&#x4f46;&#x537b;&#x4e0d;&#x8fd4;&#x56de;&#x65b0;&#x7684;&#x9663;&#x5217;&#x3002",{"_index":2287,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x96d6;&#x7136;obj1&#x8ddf;obj2&#x662f;&#x4e0d;&#x540c;&#x7269;&#x4ef6",{"_index":495,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x96d9;&#x7aef;&#x968a;&#x5217;&#xff08;deque&#xff09",{"_index":3145,"title":{"string/queue.html#雙端隊列（Deque）":{}},"body":{"string/queue.html#時間複雜度":{}}}],["x96d9;&#x7cbe;&#x5ea6;&#x3002;&#x516d;&#x5341;&#x56db;&#x4f4d;&#x4e2d;&#x7b26;&#x865f;&#x4f4d;&#x4f54;&#x4e00;&#x4f4d;&#xff0c;&#x6574;&#x6578;&#x4f4d;&#x4f54;&#x5341;&#x4e00;&#x4f4d;&#xff0c;&#x5176;&#x9918;&#x4e94;&#x5341;&#x4e8c;&#x4f4d;&#x90fd;&#x70ba;&#x5c0f;&#x6578;&#x4f4d;&#x3002",{"_index":1899,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x9700;&#x6ce8;&#x610f;&#x57f7;&#x884c;&#x7d50;&#x679c",{"_index":1049,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x975c;&#x614b;&#x4f5c;&#x7528;&#x57df",{"_index":971,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x975c;&#x614b;&#x8cc7;&#x6e90;&#x7684;&#x58d3;&#x7e2e;&#x5408;&#x4f75;&#xff08;j",{"_index":1762,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x975c;&#x614b;&#x8cc7;&#x6e90;&#x7de9;&#x5b58;&#xff08;&#x8cc7;&#x6e90;&#x540d;&#x7a31;&#x52a0",{"_index":1765,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x975e;&#x540c;&#x6b65;&#x884c;&#x70ba;&#x5148;&#x79fb;&#x81f3;&#x4e8b;&#x4ef6;&#x4f47;&#x5217",{"_index":1010,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x975e;&#x7acb;&#x523b;&#x57f7;&#x884c",{"_index":1300,"title":{},"body":{"core.html#this":{}}}],["x97ff;&#x61c9;&#x982d;&#x4e2d;&#xff0c;&#x7b2c;&#x4e8c;&#x6b21;&#x767c;&#x8d77;&#x8acb;&#x6c42;&#x7684;&#x6642;&#x5019;&#xff0c;&#x8acb;&#x6c42;&#x982d;&#x6703;&#x5e36;&#x4e0a;&#x4e0a;&#x4e00;&#x6b21;&#x97ff;&#x61c9;&#x982d;&#x4e2d;&#x7684",{"_index":2766,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x9801;&#x9762;&#x7684;&#x5168;&#x90e8;&#x8cc7;&#x6e90;&#x52a0;&#x8f09;&#x5b8c;&#x624d;&#x6703;&#x57f7;&#x884c;&#xff0c;&#x5305;&#x62ec;&#x5716;&#x7247;&#x3001;&#x8996;&#x983b;&#x7b49",{"_index":1815,"title":{},"body":{"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["x9806;&#x5e8f;&#x57f7;&#x884c;&#x53c3;&#x6578;&#x6240;&#x4ee5;&#x662f;1",{"_index":1302,"title":{},"body":{"core.html#this":{}}}],["x9806;&#x5e8f;&#x57f7;&#x884c;&#x53c3;&#x6578;&#x6240;&#x4ee5;&#x662f;6",{"_index":1301,"title":{},"body":{"core.html#this":{}}}],["x9810;&#x8a2d;&#x503c;&#x70ba",{"_index":1115,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x9810;&#x8a2d;&#x7684;session&#x5be6;&#x73fe;&#x65b9;&#x5f0f;&#x662f;&#x7531;cookie&#x4f86;&#x5be6;&#x4f5c;&#x7684;(&#x5229;&#x7528;&#x52a0;&#x5bc6;&#x8207;&#x8a2d;&#x5b9a;&#x904e;&#x671f;&#x6642;&#x9593;)&#x3002",{"_index":2170,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x982d;&#x5c6c;&#x6027;&#x672a;&#x66f4;&#x65b0;&#xff0c;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#x700f;&#x89bd;&#x5668;&#x76f4;&#x63a5;&#x4f7f;&#x7528;&#x4e86;&#x5f37;&#x7de9;&#x5b58;&#xff0c;&#x5be6;&#x969b;&#x6c92;&#x6709;&#x767c;&#x9001;&#x8acb;&#x6c42;&#x3002",{"_index":2731,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x985e;&#x9663;&#x5217;&#x4e26;&#x6c92;&#x6709;&#x7d55;&#x5927;&#x591a;&#x6578;&#x9663;&#x5217;&#x53ef;&#x4f7f;&#x7528;&#x7684;&#x65b9;&#x6cd5",{"_index":1266,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["x986f;&#x6027;&#x7684;&#x8f49;&#x63db",{"_index":1059,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x9996;&#x5148;&#x53bb;&#x9664;&#x5b57;&#x7b26;&#x4e32;&#x5de6;&#x53f3;&#x7a7a;&#x683c",{"_index":3160,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x9a57;&#x8b49;&#x6587;&#x4ef6;&#x662f;&#x5426;&#x4fee;&#x6539;&#x3002",{"_index":2780,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x9ad8;&#x7d1a;&#x5de5;&#x5ee0",{"_index":2563,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9ed1;&#x8272",{"_index":1093,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x9ede",{"_index":1127,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x9ede;&#x64ca;&#x4e8b;&#x4ef6",{"_index":345,"title":{},"body":{"event.html#代理":{}}}],["x_",{"_index":2368,"title":{},"body":{"cases/replace.html":{}}}],["xa0",{"_index":1194,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["xd7",{"_index":1909,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["xff08;&#x82f1;&#x6587;&#xff1a;immedi",{"_index":1241,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["xff09",{"_index":1776,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["xff0c",{"_index":3040,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["xff0c;&#x4e0d;&#x50c5;&#x53ef;&#x4ee5;&#x8a18;&#x9304;&#x4f60;&#x7684;&#x9ede;&#x9910;&#x865f;&#x78bc;&#xff0c;&#x9084;&#x53ef;&#x4ee5;&#x8a18;&#x61b6;&#x4f60;&#x7684;&#x9910;&#x9ede;&#x7d30;&#x7bc0;&#xff0c;&#x6d88;&#x8cbb;&#x8a18;&#x9304;&#x548c;&#x9ede;&#x9910;&#x559c;&#x597d;&#x2026;&#x7b49;&#x3002;&#x800c;&#x9019;&#x5c31;&#x89e3;&#x6c7a;&#x865f;&#x78bc;&#x724c;&#x907a;&#x5931;&#x9818;&#x4e0d;&#x5230;&#x9910;&#x7684;&#x554f;&#x984c;&#xff0c;&#x4f46;&#x662f;&#x4ed6;&#x4e0d;&#x662f;&#x8a18;&#x61b6;&#x4f60;&#x5e25;&#x6c23;&#x5f97;&#x7a7f;&#x642d;&#x6216;&#x9577;&#x50cf;&#xff0c;&#x800c;&#x662f;&#x9760;&#x8457;&#x6240;&#x8b02;&#x7684;sess",{"_index":2145,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["xff0c;&#x4e0d;&#x7ba1;&#x662f;&#x8ab0;&#x547c;&#x53eb;&#x4ed6;&#xff0c;&#x6216;&#x662f;&#x88ab;&#x5982;&#x4f55",{"_index":2829,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["xff0c;&#x4e14;&#x8fd4;&#x56de;&#x7684;&#x65b0;&#x9663;&#x5217;&#x53ef;&#x4ee5;&#x8b93;&#x4f60;&#x7e7c;&#x7e8c;&#x4f7f;&#x7528",{"_index":2296,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["xff0c;&#x4e26;&#x52a0;&#x8f09;&#x700f;&#x89bd;&#x5668;&#x7de9;&#x5b58;&#x3002",{"_index":2770,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["xff0c;&#x4ed6;&#x53ef;&#x4ee5;&#x8b93;&#x539f;&#x59cb;&#x9663;&#x5217;&#x7684;&#x6bcf;&#x4e00;&#x500b;&#x503c;&#x90fd;&#x6620;&#x5c04;&#x5230;&#x65b0;&#x7684;&#x9663;&#x5217;&#x4e0a;&#x3002",{"_index":2289,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["xff0c;&#x4ed6;&#x6c38;&#x9060;&#x90fd;&#x662f;&#x62ff;&#x5230;&#x539f;&#x5148;&#x4f5c;&#x7528;&#x57df;&#x7684",{"_index":2830,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["xff0c;&#x4ee3;&#x8868;&#x7684;&#x662f",{"_index":2750,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["xff0c;&#x4f46;&#x4f3c;&#x4e4e;&#x5f88;&#x591a;&#x4eba;&#x90fd;&#x6709;&#x4e00;&#x7a2e;&#x5f77;&#x5f7f;&#x700f;&#x89bd;&#x5668;&#x95dc;&#x6389;session&#x4e5f;&#x6703;&#x6d88;&#x5931;&#x7684;&#x932f;&#x89ba;&#xff0c;&#x4f46;&#x672c;&#x8cea;&#x4e0a;&#x4e26;&#x975e;&#x5982;&#x6b64;&#xff0c;&#x5c31;&#x50cf;&#x6703;&#x54e1;&#x5361;&#xff0c;&#x9664;&#x975e;&#x4f60;&#x4e3b;&#x52d5;&#x63d0;&#x51fa;&#x92b7;&#x5361;&#xff0c;&#x5426;&#x5247;&#x5e97;&#x5bb6;&#x4e0d;&#x6703;&#x522a;&#x9664;&#x9867;&#x5ba2;&#x8cc7;&#x6599;&#xff0c;&#x9019;&#x4ef6;&#x4e8b;&#x60c5;&#x5c0d;session&#x4f86;&#x8aaa;&#x4e5f;&#x5982;&#x51fa;&#x4e00;&#x8f4d;&#xff0c;&#x9664;&#x975e;&#x901a;&#x77e5;server&#x522a;&#x9664;session&#xff0c;&#x5426;&#x5247;server&#x7aef;&#x6703;&#x4e00;&#x76f4;&#x4fdd;&#x7559;&#x4f86;&#x4fdd;&#x6301;&#x6703;&#x8a71;&#x66a2;&#x901a;&#xff0c;&#x4f46;&#x700f;&#x89bd;&#x5668;&#x5f9e;&#x4f86;&#x4e0d;&#x6703;&#x4e3b;&#x52d5;&#x5728;&#x95dc;&#x9589;&#x524d;&#x901a;&#x77e5;&#x670d;&#x52d9;&#x5668;&#x8981;&#x95dc;&#x9589",{"_index":2160,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["xff0c;&#x547c;&#x53eb;&#x662f;&#x5728;&#x7269;&#x4ef6;&#x4e0b;&#x8abf;&#x7528;&#xff0c;&#x90a3;&#x9ebc",{"_index":1620,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["xff0c;&#x5728",{"_index":2692,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff0c;&#x5728;&#x700f;&#x89bd;&#x5668;&#x767c;&#x8d77;&#x8acb;&#x6c42;&#x6642;&#xff0c;&#x6703;&#x6839;&#x64da;&#x7cfb;&#x7d71;&#x6642;&#x9593;&#x548c",{"_index":2700,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff0c;&#x5982;&#x679c;&#x4eca;&#x5929;&#x907a;&#x5931;&#x6216;&#x662f;&#x88ab;&#x5225;&#x4eba;&#x5e79;&#x8d70;&#xff0c;&#x90a3;&#x4f60;&#x7684;&#x9910;&#x9ede;&#x5c31;&#x6703;&#x88ab;&#x5176;&#x4ed6;&#x4eba;&#x7d66;&#x9818;&#x8d70;&#xff0c;&#x66f4;&#x5225;&#x63d0;&#x95dc;&#x9589;&#x700f;&#x89bd;&#x5668;&#x4e4b;&#x5f8c;cookie&#x5c31;&#x6703;&#x6709;&#x88ab;&#x6e05;&#x9664;&#x7684;&#x98a8;&#x96aa;&#x4e86;&#x3002",{"_index":2137,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["xff0c;&#x5b83;&#x662f",{"_index":380,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["xff0c;&#x5b83;&#x662f;&#x66f4;&#x7cbe;&#x78ba;&#x800c;&#x4e14;&#x548c",{"_index":1967,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["xff0c;&#x5c6c;&#x6027;c&#x70ba;o3.c&#x7684;&#x503c;&#xff0c;&#x6700;&#x5f8c;&#x4e00;&#x500b;&#x51fa;&#x73fe;&#x7684;&#x5c6c;&#x6027;c&#x3002",{"_index":2640,"title":{},"body":{"object/assign.html#有相同屬性時合併物件區段":{}}}],["xff0c;&#x6548;&#x679c;&#x548c",{"_index":2738,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff0c;&#x662f;&#x570b;&#x969b;&#x6a19;&#x6e96;&#x5316;&#x7d44;&#x7e54;&#x7684;&#x65e5;&#x671f;&#x548c;&#x6642;&#x9593;&#x7684;&#x8868;&#x793a;&#x65b9;&#x6cd5",{"_index":2629,"title":{},"body":{"global/date.html#Date-prototype-toISOString":{}}}],["xff0c;&#x7b2c;&#x4e00;&#x6b21;&#x8acb;&#x6c42;&#x670d;&#x52d9;&#x7aef;&#x6703;&#x628a;&#x8cc7;&#x6e90;&#x7684;&#x6700;&#x5f8c;&#x4fee;&#x6539;&#x6642;&#x9593;&#x653e;&#x5230",{"_index":2765,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["xff0c;&#x7b2c;&#x4e8c;&#x500b;for&#x8ff4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x70ba;o(n2)&#xff0c",{"_index":3135,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["xff0c;&#x7de9;&#x5b58;&#x5728",{"_index":1800,"title":{},"body":{"performance.html#DOM-查詢做緩存":{}}}],["xff0c;&#x800c;&#x975e;&#x4e00;&#x8a00;&#x4e0d;&#x5408;&#x5c31",{"_index":2820,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["xff0c;&#x8017;&#x8cbb;&#x6027;&#x80fd",{"_index":1798,"title":{},"body":{"performance.html#DOM-查詢做緩存":{}}}],["xff0c;&#x8868;&#x793a;&#x53c3;&#x8003;&#x53e6;&#x4e00;&#x500b",{"_index":199,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["xff0c;&#x9019;&#x6a23;&#x5728;&#x904b;&#x884c;&#x5230;console.log(j)&#x7684;&#x6642;&#x5019;&#x986f;&#x793a;&#x7684;&#x5c31;&#x662f;&#x6bcf;&#x6b21;&#x5faa;&#x74b0;&#x6642;&#x7684;i&#x503c",{"_index":314,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["xff0c;&#x904e;&#x671f;&#x6642;&#x9593;&#x70ba",{"_index":2728,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff1a;&#x4e0d;&#x4f7f;&#x7528;&#x5f37;&#x7de9;&#x5b58;&#xff0c;&#x9700;&#x8981;&#x8207;&#x670d;&#x52d9;&#x5668;&#x9a57;&#x8b49;&#x7de9;&#x5b58;&#x662f;&#x5426;&#x65b0;&#x9ba",{"_index":2707,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff1a;&#x7981;&#x6b62;&#x4f7f;&#x7528;&#x7de9;&#x5b58;&#xff08;&#x5305;&#x62ec;&#x5354;&#x5546;&#x7de9;&#x5b58;&#xff09;&#xff0c;&#x6bcf;&#x6b21;&#x90fd;&#x5411;&#x670d;&#x52d9;&#x5668;&#x8acb;&#x6c42;&#x6700;&#x65b0;&#x7684;&#x8cc7;&#x6e90",{"_index":2708,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff1a;&#x8072;&#x660e;&#x5373;&#x57f7;&#x884c;&#x7684;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#xff09;&#x52a0;&#x9589;&#x5305",{"_index":312,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["xff1b",{"_index":308,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["xff1b;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#x6240;&#x6709;&#x50b3;&#x905e;&#x7d66;settimeout&#x7684;&#x56de;&#x8abf;&#x65b9;&#x6cd5;&#x90fd;&#x6703;&#x5728",{"_index":306,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["xff1b;&#x5728;&#x8fed;&#x4ee3",{"_index":3037,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["xff1f",{"_index":2813,"title":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}},"body":{}}],["xffe3;&#xffe3;&#xffe3;&#xffe3",{"_index":1910,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["xhr",{"_index":13,"title":{},"body":{"ajax.html":{}}}],["xhr.onreadystatechang",{"_index":20,"title":{},"body":{"ajax.html":{}}}],["xhr.open",{"_index":17,"title":{},"body":{"ajax.html":{}}}],["xhr.readyst",{"_index":22,"title":{},"body":{"ajax.html":{}}}],["xhr.send",{"_index":26,"title":{},"body":{"ajax.html":{}}}],["xhr.statu",{"_index":23,"title":{},"body":{"ajax.html":{}}}],["xmlhttprequest",{"_index":16,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["xmlhttprequest.readyst",{"_index":28,"title":{},"body":{"ajax.html":{}}}],["xmlhttprequest請求，從而克服了ajax",{"_index":93,"title":{},"body":{"ajax.html":{}}}],["xw50eztmfnqg0wuxkeiaz",{"_index":1611,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["xyz",{"_index":255,"title":{},"body":{"RegExp.html":{}}}],["y",{"_index":399,"title":{},"body":{"closures.html":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"object/create.html":{}}}],["youreasycard",{"_index":1565,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["youreasycard2",{"_index":1566,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["yyyi",{"_index":850,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["z",{"_index":1949,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["z0",{"_index":251,"title":{},"body":{"RegExp.html":{}}}],["za",{"_index":250,"title":{},"body":{"RegExp.html":{}}}]],"pipeline":["stemmer"]},"store":{"ajax.html":{"title":"AJAX","path":"\\javascript\\ajax.html","body":"1 2 3 4 5 6 7 8 9 10 11 var xhr = new XMLHttpRequest() xhr.open( \"GET\" , \"/api\" , false ) xhr.onreadystatechange = function ( )  // 異步執行 if (xhr.readyState == 4 )  //響應內容解析完成，可以在客戶端調用了 if (xhr.status == 200 )  //表示成功處理請求 alert(xhr.responseText)    xhr.send( null ) XMLHttpRequest XMLHttpRequest.readyState HTTP response status codes 取得用get傳遞之網址列資訊(Query String) https://jsbin.com/katifugevu/edit?js,console,output 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 //取得網址字串 var url = location.href; url = 'http://example.com/?userid=jacob.hsu' ; //再來用去尋找網址列中是否有資料傳遞(QueryString) if (url.indexOf( '?' )!= -1 )  var id = \"\" ; //在此直接將各自的參數資料切割放進ary中 var ary = url.split( '?' )[ 1 ].split( '&amp;' ); // console.log(ary); [\"userid=jacob.hsu\"] //下迴圈去搜尋每個資料參數 for (i= 0 ;i=ary.length -1 ;i++)  //如果資料名稱為id的話那就把他取出來 if (ary[i].split( '=' )[ 0 ] == 'userid' ) id = ary[i].split( '=' )[ 1 ]; console .log(id); //\"jacob.hsu\"   ref : https://ithelp.ithome.com.tw/articles/10190254 ex: http://blog.xuite.net/ahdaa/blog1/test.html?id=AD&amp;val1=02&amp;val2=22#achorAD 1 2 3 4 5 6 7 8 location.href // 完整的網址 location.protocol // 協定　　　　　　 http: location.hostname // 伺服器名稱　　　 blog.xuite.net location.host // 伺服器:埠號　　　blog.xuite.net:80 location.port // 埠號　　　　　　 80 location.pathname // host之後的部份 /ahdaa/blog1/test.html?id=AD&amp;val1=02&amp;val2=22#achorAD location.search // 含?之後所有字串　?id=AD&amp;val1=02&amp;val2=22#achorAD location.hash // 含#之後所有字串　#achorAD(通常用於錨點) 跨域 瀏覽器有同源策略，不允許ajax訪問 跨域條件: 協議、域名、端口，有一個不同就算跨域 所有的跨域請求都必須經由資源提供方允許 可以跨域的三個標籤 img src=xxx link href=xxx script src=xxx link script 可以使用CDN， CDN 也是其他域 CORS是一個W3C標準，全稱是”跨域資源共享”（Cross-origin resource sharing）。 它允許瀏覽器向跨源服務器，發出XMLHttpRequest請求，從而克服了AJAX只能同源使用的限制。 CORS需要瀏覽器和服務器同時支持。實現CORS通信的關鍵是服務器。只要服務器實現了CORS接口，就可以跨源通信。 CORS Workflow 簡單說在A網站底下若有需要去access B網站的resource 那瀏覽器會在送去B網站的http request的header 中加上這行 Origin: http://www.foo.com 表明這個request是從 www.foo.com的resource出來的 那個在B網站的web server收到了這個request後 如果他認為A網站是B網站自己的白名單 那麼B網站就可以在http response 中加入這行 Access-Control-Allow-Origin: http://www.foo.com 這麼一來就可以順利的拿到B網站的resource了 詳細的範例程式在 https://developer.mozilla.org/zh-TW/docs/HTTP/Access_control_CORS 跨域资源共享 CORS 详解 異步 https://jsbin.com/hipiruzoru/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 console .log( 1 ); setTimeout( function ( )  console .log( 'setTimeout' ) , 0 ) let promise = new Promise ( function ( resolve,reject )  console .log( 3 ) resolve( 100 ) ).then( function ( data )  console .log( 100 ) ) console .log( 2 ); // 1 3 2 100 \"setTimeout\" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 console .log( 0 ) let promise = new Promise ( ( resolve, reject )=  console .log( 1 ); setTimeout( () =  console .log( 2 ); resolve(); , 0 ) console .log( 3 ) ) promise.then( res =  console .log( 100 ) ) console .log( 4 )"},"RESTfulAPI.html":{"title":"RESTful API","path":"\\javascript\\RESTfulAPI.html","body":"RESTful 是目前最流行的 API 設計規範，用於 Web 數據接口的設計。 動詞 動詞通常就是五種 HTTP 方法，對應 CRUD 操作。 POST：新建（Create） GET：讀取（Read） PUT：更新（Update） PATCH：更新（Update），通常是部分更新 DELETE：刪除（Delete） 動詞 + 賓語 RESTful 的核心思想就是，客戶端發出的數據操作指令都是”動詞 + 賓語”的結構。 比如， GET /articles 這個命令， GET 是動詞， /articles 是賓語。 使用複數 URL 建議都使用複數 URL，比如 GET /articles/2 要好於 GET /article/2 。 避免多級 URL 資源需要多級分類，因此很容易寫出多級的 URL，比如獲取某個作者的某一類文章。 GET /authors/12/categories/2 這種 URL 不利於擴展，語義也不明確 更好的做法是，除了第一級，其他級別都用查詢字符串表達。 GET /authors/12?categories=2 狀態碼 1xx：相關信息 2xx：操作成功 3xx：重定向 4xx：客戶端錯誤 5xx：服務器錯誤 API 用不到301狀態碼（永久重定向）和302狀態碼（暫時重定向，307也是這個含義），因為它們可以由應用級別返回，瀏覽器會直接跳轉，API 級別可以不考慮這兩種情況。 API 用到的3xx狀態碼，主要是 303 See Other ，表示參考另一個 URL。它與302和307的含義一樣，也是”暫時重定向”，區別在於302和307用於GET請求，而303用於POST、PUT和DELETE請求。收到303以後，瀏覽器不會自動跳轉，而會讓用戶自己決定下一步怎麼辦。 下面是一個例子。 1 2 HTTP/ 1.1 303 See Other Location: /api/ orders/ 12345 HATEOAS 提供鏈接 API 的使用者未必知道，URL 是怎麼設計的。 一個解決方法就是，在回應中，給出相關鏈接，便於下一步操作。這樣的話，用戶只要記住一個 URL，就可以發現其他的 URL。這種方法叫做 HATEOAS。 例 GitHub 的 API 都在 api.github.com 這個域名下可查找 References https://blog.florimondmanca.com/restful-api-design-13-best-practices-to-make-your-users-happy http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html"},"RESTfulAPI.html#動詞":{"title":"&#x52D5;&#x8A5E;","path":"\\javascript\\RESTfulAPI.html#動詞","body":"&#x52D5;&#x8A5E;&#x901A;&#x5E38;&#x5C31;&#x662F;&#x4E94;&#x7A2E; HTTP &#x65B9;&#x6CD5;&#xFF0C;&#x5C0D;&#x61C9; CRUD &#x64CD;&#x4F5C;&#x3002; POST&#xFF1A;&#x65B0;&#x5EFA;&#xFF08;Create&#xFF09; GET&#xFF1A;&#x8B80;&#x53D6;&#xFF08;Read&#xFF09; PUT&#xFF1A;&#x66F4;&#x65B0;&#xFF08;Update&#xFF09; PATCH&#xFF1A;&#x66F4;&#x65B0;&#xFF08;Update&#xFF09;&#xFF0C;&#x901A;&#x5E38;&#x662F;&#x90E8;&#x5206;&#x66F4;&#x65B0; DELETE&#xFF1A;&#x522A;&#x9664;&#xFF08;Delete&#xFF09; &#x52D5;&#x8A5E; + &#x8CD3;&#x8A9E; RESTful &#x7684;&#x6838;&#x5FC3;&#x601D;&#x60F3;&#x5C31;&#x662F;&#xFF0C;&#x5BA2;&#x6236;&#x7AEF;&#x767C;&#x51FA;&#x7684;&#x6578;&#x64DA;&#x64CD;&#x4F5C;&#x6307;&#x4EE4;&#x90FD;&#x662F;&#x201D;&#x52D5;&#x8A5E; + &#x8CD3;&#x8A9E;&#x201D;&#x7684;&#x7D50;&#x69CB;&#x3002; &#x6BD4;&#x5982;&#xFF0C; GET /articles &#x9019;&#x500B;&#x547D;&#x4EE4;&#xFF0C; GET &#x662F;&#x52D5;&#x8A5E;&#xFF0C; /articles &#x662F;&#x8CD3;&#x8A9E;&#x3002; &#x4F7F;&#x7528;&#x8907;&#x6578; URL &#x5EFA;&#x8B70;&#x90FD;&#x4F7F;&#x7528;&#x8907;&#x6578; URL&#xFF0C;&#x6BD4;&#x5982; GET /articles/2 &#x8981;&#x597D;&#x65BC; GET /article/2 &#x3002; &#x907F;&#x514D;&#x591A;&#x7D1A; URL &#x8CC7;&#x6E90;&#x9700;&#x8981;&#x591A;&#x7D1A;&#x5206;&#x985E;&#xFF0C;&#x56E0;&#x6B64;&#x5F88;&#x5BB9;&#x6613;&#x5BEB;&#x51FA;&#x591A;&#x7D1A;&#x7684; URL&#xFF0C;&#x6BD4;&#x5982;&#x7372;&#x53D6;&#x67D0;&#x500B;&#x4F5C;&#x8005;&#x7684;&#x67D0;&#x4E00;&#x985E;&#x6587;&#x7AE0;&#x3002; GET /authors/12/categories/2 &#x9019;&#x7A2E; URL &#x4E0D;&#x5229;&#x65BC;&#x64F4;&#x5C55;&#xFF0C;&#x8A9E;&#x7FA9;&#x4E5F;&#x4E0D;&#x660E;&#x78BA; &#x66F4;&#x597D;&#x7684;&#x505A;&#x6CD5;&#x662F;&#xFF0C;&#x9664;&#x4E86;&#x7B2C;&#x4E00;&#x7D1A;&#xFF0C;&#x5176;&#x4ED6;&#x7D1A;&#x5225;&#x90FD;&#x7528;&#x67E5;&#x8A62;&#x5B57;&#x7B26;&#x4E32;&#x8868;&#x9054;&#x3002; GET /authors/12?categories=2"},"RESTfulAPI.html#狀態碼":{"title":"&#x72C0;&#x614B;&#x78BC;","path":"\\javascript\\RESTfulAPI.html#狀態碼","body":"1xx&#xFF1A;&#x76F8;&#x95DC;&#x4FE1;&#x606F; 2xx&#xFF1A;&#x64CD;&#x4F5C;&#x6210;&#x529F; 3xx&#xFF1A;&#x91CD;&#x5B9A;&#x5411; 4xx&#xFF1A;&#x5BA2;&#x6236;&#x7AEF;&#x932F;&#x8AA4; 5xx&#xFF1A;&#x670D;&#x52D9;&#x5668;&#x932F;&#x8AA4; API &#x7528;&#x4E0D;&#x5230;301&#x72C0;&#x614B;&#x78BC;&#xFF08;&#x6C38;&#x4E45;&#x91CD;&#x5B9A;&#x5411;&#xFF09;&#x548C;302&#x72C0;&#x614B;&#x78BC;&#xFF08;&#x66AB;&#x6642;&#x91CD;&#x5B9A;&#x5411;&#xFF0C;307&#x4E5F;&#x662F;&#x9019;&#x500B;&#x542B;&#x7FA9;&#xFF09;&#xFF0C;&#x56E0;&#x70BA;&#x5B83;&#x5011;&#x53EF;&#x4EE5;&#x7531;&#x61C9;&#x7528;&#x7D1A;&#x5225;&#x8FD4;&#x56DE;&#xFF0C;&#x700F;&#x89BD;&#x5668;&#x6703;&#x76F4;&#x63A5;&#x8DF3;&#x8F49;&#xFF0C;API &#x7D1A;&#x5225;&#x53EF;&#x4EE5;&#x4E0D;&#x8003;&#x616E;&#x9019;&#x5169;&#x7A2E;&#x60C5;&#x6CC1;&#x3002; API &#x7528;&#x5230;&#x7684;3xx&#x72C0;&#x614B;&#x78BC;&#xFF0C;&#x4E3B;&#x8981;&#x662F; 303 See Other &#xFF0C;&#x8868;&#x793A;&#x53C3;&#x8003;&#x53E6;&#x4E00;&#x500B; URL&#x3002;&#x5B83;&#x8207;302&#x548C;307&#x7684;&#x542B;&#x7FA9;&#x4E00;&#x6A23;&#xFF0C;&#x4E5F;&#x662F;&#x201D;&#x66AB;&#x6642;&#x91CD;&#x5B9A;&#x5411;&#x201D;&#xFF0C;&#x5340;&#x5225;&#x5728;&#x65BC;302&#x548C;307&#x7528;&#x65BC;GET&#x8ACB;&#x6C42;&#xFF0C;&#x800C;303&#x7528;&#x65BC;POST&#x3001;PUT&#x548C;DELETE&#x8ACB;&#x6C42;&#x3002;&#x6536;&#x5230;303&#x4EE5;&#x5F8C;&#xFF0C;&#x700F;&#x89BD;&#x5668;&#x4E0D;&#x6703;&#x81EA;&#x52D5;&#x8DF3;&#x8F49;&#xFF0C;&#x800C;&#x6703;&#x8B93;&#x7528;&#x6236;&#x81EA;&#x5DF1;&#x6C7A;&#x5B9A;&#x4E0B;&#x4E00;&#x6B65;&#x600E;&#x9EBC;&#x8FA6;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x4E00;&#x500B;&#x4F8B;&#x5B50;&#x3002; 1 2 HTTP/ 1.1 303 See Other Location: /api/ orders/ 12345 HATEOAS &#x63D0;&#x4F9B;&#x93C8;&#x63A5; API &#x7684;&#x4F7F;&#x7528;&#x8005;&#x672A;&#x5FC5;&#x77E5;&#x9053;&#xFF0C;URL &#x662F;&#x600E;&#x9EBC;&#x8A2D;&#x8A08;&#x7684;&#x3002; &#x4E00;&#x500B;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#xFF0C;&#x5728;&#x56DE;&#x61C9;&#x4E2D;&#xFF0C;&#x7D66;&#x51FA;&#x76F8;&#x95DC;&#x93C8;&#x63A5;&#xFF0C;&#x4FBF;&#x65BC;&#x4E0B;&#x4E00;&#x6B65;&#x64CD;&#x4F5C;&#x3002;&#x9019;&#x6A23;&#x7684;&#x8A71;&#xFF0C;&#x7528;&#x6236;&#x53EA;&#x8981;&#x8A18;&#x4F4F;&#x4E00;&#x500B; URL&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x767C;&#x73FE;&#x5176;&#x4ED6;&#x7684; URL&#x3002;&#x9019;&#x7A2E;&#x65B9;&#x6CD5;&#x53EB;&#x505A; HATEOAS&#x3002; &#x4F8B; GitHub &#x7684; API &#x90FD;&#x5728; api.github.com &#x9019;&#x500B;&#x57DF;&#x540D;&#x4E0B;&#x53EF;&#x67E5;&#x627E;"},"RESTfulAPI.html#References":{"title":"References","path":"\\javascript\\RESTfulAPI.html#References","body":"https://blog.florimondmanca.com/restful-api-design-13-best-practices-to-make-your-users-happy http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html"},"es6.html":{"title":"ECMAScript 6","path":"\\javascript\\es6.html","body":"ECMAScript 6 入门 Module 的加载实现 浏览器允许脚本异步加载，下面就是两种异步加载的语法。 1 2 script src= \"path/to/myModule.js\" defer/script script src= \"path/to/myModule.js\" async /script 上面代码中， script 标签打开 defer 或 async 属性，脚本就会异步加载。渲染引擎遇到这一行命令，就会开始下载外部脚本，但不会等它下载和执行 加载规则 script type=module src=./foo.js/script 1 2 3 script type= \"module\"  import './index.js' ;  /script"},"es6.html#Module-的加载实现":{"title":"Module &#x7684;&#x52A0;&#x8F7D;&#x5B9E;&#x73B0;","path":"\\javascript\\es6.html#Module-的加载实现","body":"&#x6D4F;&#x89C8;&#x5668;&#x5141;&#x8BB8;&#x811A;&#x672C;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#xFF0C;&#x4E0B;&#x9762;&#x5C31;&#x662F;&#x4E24;&#x79CD;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#x7684;&#x8BED;&#x6CD5;&#x3002; 1 2 script src= path/to/myModule.js defer/script script src= path/to/myModule.js async /script &#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C; script &#x6807;&#x7B7E;&#x6253;&#x5F00; defer &#x6216; async &#x5C5E;&#x6027;&#xFF0C;&#x811A;&#x672C;&#x5C31;&#x4F1A;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#x3002;&#x6E32;&#x67D3;&#x5F15;&#x64CE;&#x9047;&#x5230;&#x8FD9;&#x4E00;&#x884C;&#x547D;&#x4EE4;&#xFF0C;&#x5C31;&#x4F1A;&#x5F00;&#x59CB;&#x4E0B;&#x8F7D;&#x5916;&#x90E8;&#x811A;&#x672C;&#xFF0C;&#x4F46;&#x4E0D;&#x4F1A;&#x7B49;&#x5B83;&#x4E0B;&#x8F7D;&#x548C;&#x6267;&#x884C; &#x52A0;&#x8F7D;&#x89C4;&#x5219; script type=module src=./foo.js/script 1 2 3 script type= module  import &apos;./index.js&apos; ;  /script"},"RegExp.html":{"title":"正規表達式 regexp","path":"\\javascript\\RegExp.html","body":"正規表達式 2019年JS正则大全(常用) js正则表达式，限1-2位整数，或者至多含有两位小数 1 2 //1、只能输入数字或者小数点 仅整数,整数加小数 var reg1= /(^[0-9]1,2$)|(^[0-9]1,2[\\.]1[0-9]1,2$)/ ; email 1 2 3 var firstRegExp = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/ ; console .log(firstRegExp.test( 'jacob.hsu.tw@gmail.com' )); //true console .log(firstRegExp.test( 'jacob.hsu.tw' )); //false 規表示式的特定字元 說明 等效的正規表示式 \\d 數字 [0-9] \\D 非數字 [^0-9] \\w 數字、字母、底線 [a-zA-Z0-9_] \\W 非 \\w [^a-zA-Z0-9_] \\s 空白字元 [ \\r\\t\\n\\f] \\S 非空白字元 [^ \\r\\t\\n\\f] [xyz] 比對中括弧內的任一個字元 /[ecm]/ 可比對 “welcome” 中的 “e” 或 “c” 或 “m” [^xyz] 比對不在中括弧內出現的任一個字元 /[^ecm]/ 可比對 “welcome” 中的 “w”、”l”、”o”，可見出其與 [xyz] 功能相反。（同時請注意 /^/ 與 [^] 之間功能的不同。）"},"asynchronous.html":{"title":"Asynchronous","path":"\\javascript\\asynchronous.html","body":"異步 https://jsbin.com/honidujame/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 console .log( 1 ) setTimeout( () =  console .log( 2 ); , 0 ) console .log( 3 ) setTimeout( function ( )  console .log( 4 ); , 0 ) // 1 3 2 4 https://jsbin.com/hipiruzoru/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 console .log( 1 ); setTimeout( function ( )  console .log( 'setTimeout' ) , 0 ) let promise = new Promise ( function ( resolve,reject )  console .log( 3 ) resolve( 100 ) ).then( function ( data )  console .log( 100 ) ) console .log( 2 ); // 1 3 2 100 \"setTimeout\" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 console .log( 0 ) let promise = new Promise ( ( resolve, reject )=  console .log( 1 ); setTimeout( () =  console .log( 2 ); resolve(); , 0 ) console .log( 3 ) ) promise.then( res =  console .log( 100 ) ) console .log( 4 ) // 0 1 3 4 2 100 setTimeout setTimeout() 函數是異步的 1 2 3 4 5 for ( var i = 0 ; i  5 ; i++)  setTimeout( function ( )  console .log(i); // 5,5,5,5,5 , i* 1000 );  1 2 3 4 5 6 for ( var i = 0 ; i  5 ; i++)  setTimeout( function ( )  console .log( new Date , i); , 1000 );  console .log(i); //5,- 5,5,5,5,5 因為異步函數必須等主進程運行完畢才會運行，setTimeout()內部回調運行的時候，主進程已經運行完畢了，此時i=5，所以輸出5。 循環執行過程中，幾乎同時設置了 5 個定時器，一般情況下，這些定時器都會在 1 秒之後觸發，而循環完的輸出是立即執行的 即第 1 個 5 直接輸出，1 秒之後，輸出 5 個 5； 提示： setTimeout() 只執行 code 一次。如果要多次調用，請使用 setInterval() 或者讓 code 自身再次調用 setTimeout()。 setTimeout 的意思是傳遞一個函數，延遲一段時候把該函數添加到 隊列 當中，並不是立即執行； 所以說如果當前正在運行的代碼沒有運行完，即使延遲的時間已經過完， 該函數會等待到函數隊列中前面所有的函數運行完畢之後才會運行 ；也就是說所有傳遞給setTimeout的回調方法都會在 整個環境下的所有代碼運行完畢之後執行 ； 期望代碼的輸出變成：5 - 0,1,2,3,4 1 用立即執行函數 IIFE（Immediately Invoked Function Expression ：聲明即執行的函數表達式）加閉包 1 2 3 4 5 6 7 8 for ( var i = 0 ; i  5 ; i++)  ( function ( j )  //j =i setTimeout( function ( )  console .log( new Date , j); , 1000 ); )(i)  console .log(i); //5, 0,1,2,3,4 用立即執行函數表達式創造了新的函數作用域將timer函數包裹了起來，並用j捕獲了每次循環時的i ，這樣在運行到console.log(j)的時候顯示的就是每次循環時的i值 2 利用 API 文檔 1 2 3 4 5 6 for ( var i = 0 ; i  5 ; i++)  setTimeout( function ( j )  console .log( new Date , j); , 1000 , i);  console .log(i); //5, 0,1,2,3,4 3 利用 JS 中基本類型（Primitive Type）的參數傳遞是 按值傳遞（Pass by Value） 的特徵 1 2 3 4 5 6 7 8 9 var output = function ( i )  setTimeout( function ( )  console .log( new Date , i); , 1000 ); ; for ( var i = 0 ; i  5 ; i++)  output(i); // 這裡傳過去的 i 值被複製了  console .log(i); //5, 0,1,2,3,4"},"asynchronous.html#異步":{"title":"&#x7570;&#x6B65;","path":"\\javascript\\asynchronous.html#異步","body":"https://jsbin.com/honidujame/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 console .log( 1 ) setTimeout( () = { console .log( 2 ); }, 0 ) console .log( 3 ) setTimeout( function ( ) { console .log( 4 ); }, 0 ) // 1 3 2 4 https://jsbin.com/hipiruzoru/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 console .log( 1 ); setTimeout( function ( ) { console .log( &apos;setTimeout&apos; ) }, 0 ) let promise = new Promise ( function ( resolve,reject ) { console .log( 3 ) resolve( 100 ) }).then( function ( data ) { console .log( 100 ) }) console .log( 2 ); // 1 3 2 100 setTimeout 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 console .log( 0 ) let promise = new Promise ( ( resolve, reject )= { console .log( 1 ); setTimeout( () = { console .log( 2 ); resolve(); }, 0 ) console .log( 3 ) }) promise.then( res = { console .log( 100 ) }) console .log( 4 ) // 0 1 3 4 2 100"},"asynchronous.html#setTimeout":{"title":"setTimeout","path":"\\javascript\\asynchronous.html#setTimeout","body":"setTimeout() &#x51FD;&#x6578;&#x662F;&#x7570;&#x6B65;&#x7684; 1 2 3 4 5 for ( var i = 0 ; i  5 ; i++) { setTimeout( function ( ) { console .log(i); // 5,5,5,5,5 }, i* 1000 ); } 1 2 3 4 5 6 for ( var i = 0 ; i  5 ; i++) { setTimeout( function ( ) { console .log( new Date , i); }, 1000 ); } console .log(i); //5,- 5,5,5,5,5 &#x56E0;&#x70BA;&#x7570;&#x6B65;&#x51FD;&#x6578;&#x5FC5;&#x9808;&#x7B49;&#x4E3B;&#x9032;&#x7A0B;&#x904B;&#x884C;&#x5B8C;&#x7562;&#x624D;&#x6703;&#x904B;&#x884C;&#xFF0C;setTimeout()&#x5167;&#x90E8;&#x56DE;&#x8ABF;&#x904B;&#x884C;&#x7684;&#x6642;&#x5019;&#xFF0C;&#x4E3B;&#x9032;&#x7A0B;&#x5DF2;&#x7D93;&#x904B;&#x884C;&#x5B8C;&#x7562;&#x4E86;&#xFF0C;&#x6B64;&#x6642;i=5&#xFF0C;&#x6240;&#x4EE5;&#x8F38;&#x51FA;5&#x3002; &#x5FAA;&#x74B0;&#x57F7;&#x884C;&#x904E;&#x7A0B;&#x4E2D;&#xFF0C;&#x5E7E;&#x4E4E;&#x540C;&#x6642;&#x8A2D;&#x7F6E;&#x4E86; 5 &#x500B;&#x5B9A;&#x6642;&#x5668;&#xFF0C;&#x4E00;&#x822C;&#x60C5;&#x6CC1;&#x4E0B;&#xFF0C;&#x9019;&#x4E9B;&#x5B9A;&#x6642;&#x5668;&#x90FD;&#x6703;&#x5728; 1 &#x79D2;&#x4E4B;&#x5F8C;&#x89F8;&#x767C;&#xFF0C;&#x800C;&#x5FAA;&#x74B0;&#x5B8C;&#x7684;&#x8F38;&#x51FA;&#x662F;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x7684; &#x5373;&#x7B2C; 1 &#x500B; 5 &#x76F4;&#x63A5;&#x8F38;&#x51FA;&#xFF0C;1 &#x79D2;&#x4E4B;&#x5F8C;&#xFF0C;&#x8F38;&#x51FA; 5 &#x500B; 5&#xFF1B; &#x63D0;&#x793A;&#xFF1A; setTimeout() &#x53EA;&#x57F7;&#x884C; code &#x4E00;&#x6B21;&#x3002;&#x5982;&#x679C;&#x8981;&#x591A;&#x6B21;&#x8ABF;&#x7528;&#xFF0C;&#x8ACB;&#x4F7F;&#x7528; setInterval() &#x6216;&#x8005;&#x8B93; code &#x81EA;&#x8EAB;&#x518D;&#x6B21;&#x8ABF;&#x7528; setTimeout()&#x3002; setTimeout &#x7684;&#x610F;&#x601D;&#x662F;&#x50B3;&#x905E;&#x4E00;&#x500B;&#x51FD;&#x6578;&#xFF0C;&#x5EF6;&#x9072;&#x4E00;&#x6BB5;&#x6642;&#x5019;&#x628A;&#x8A72;&#x51FD;&#x6578;&#x6DFB;&#x52A0;&#x5230; &#x968A;&#x5217; &#x7576;&#x4E2D;&#xFF0C;&#x4E26;&#x4E0D;&#x662F;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#xFF1B; &#x6240;&#x4EE5;&#x8AAA;&#x5982;&#x679C;&#x7576;&#x524D;&#x6B63;&#x5728;&#x904B;&#x884C;&#x7684;&#x4EE3;&#x78BC;&#x6C92;&#x6709;&#x904B;&#x884C;&#x5B8C;&#xFF0C;&#x5373;&#x4F7F;&#x5EF6;&#x9072;&#x7684;&#x6642;&#x9593;&#x5DF2;&#x7D93;&#x904E;&#x5B8C;&#xFF0C; &#x8A72;&#x51FD;&#x6578;&#x6703;&#x7B49;&#x5F85;&#x5230;&#x51FD;&#x6578;&#x968A;&#x5217;&#x4E2D;&#x524D;&#x9762;&#x6240;&#x6709;&#x7684;&#x51FD;&#x6578;&#x904B;&#x884C;&#x5B8C;&#x7562;&#x4E4B;&#x5F8C;&#x624D;&#x6703;&#x904B;&#x884C; &#xFF1B;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#x6240;&#x6709;&#x50B3;&#x905E;&#x7D66;setTimeout&#x7684;&#x56DE;&#x8ABF;&#x65B9;&#x6CD5;&#x90FD;&#x6703;&#x5728; &#x6574;&#x500B;&#x74B0;&#x5883;&#x4E0B;&#x7684;&#x6240;&#x6709;&#x4EE3;&#x78BC;&#x904B;&#x884C;&#x5B8C;&#x7562;&#x4E4B;&#x5F8C;&#x57F7;&#x884C; &#xFF1B; &#x671F;&#x671B;&#x4EE3;&#x78BC;&#x7684;&#x8F38;&#x51FA;&#x8B8A;&#x6210;&#xFF1A;5 - 0,1,2,3,4 1 &#x7528;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x6578; IIFE&#xFF08;Immediately Invoked Function Expression &#xFF1A;&#x8072;&#x660E;&#x5373;&#x57F7;&#x884C;&#x7684;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#xFF09;&#x52A0;&#x9589;&#x5305; 1 2 3 4 5 6 7 8 for ( var i = 0 ; i  5 ; i++) { ( function ( j ) { //j =i setTimeout( function ( ) { console .log( new Date , j); }, 1000 ); })(i) } console .log(i); //5, 0,1,2,3,4 &#x7528;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x5275;&#x9020;&#x4E86;&#x65B0;&#x7684;&#x51FD;&#x6578;&#x4F5C;&#x7528;&#x57DF;&#x5C07;timer&#x51FD;&#x6578;&#x5305;&#x88F9;&#x4E86;&#x8D77;&#x4F86;&#xFF0C;&#x4E26;&#x7528;j&#x6355;&#x7372;&#x4E86;&#x6BCF;&#x6B21;&#x5FAA;&#x74B0;&#x6642;&#x7684;i &#xFF0C;&#x9019;&#x6A23;&#x5728;&#x904B;&#x884C;&#x5230;console.log(j)&#x7684;&#x6642;&#x5019;&#x986F;&#x793A;&#x7684;&#x5C31;&#x662F;&#x6BCF;&#x6B21;&#x5FAA;&#x74B0;&#x6642;&#x7684;i&#x503C; 2 &#x5229;&#x7528; API &#x6587;&#x6A94; 1 2 3 4 5 6 for ( var i = 0 ; i  5 ; i++) { setTimeout( function ( j ) { console .log( new Date , j); }, 1000 , i); } console .log(i); //5, 0,1,2,3,4 3 &#x5229;&#x7528; JS &#x4E2D;&#x57FA;&#x672C;&#x985E;&#x578B;&#xFF08;Primitive Type&#xFF09;&#x7684;&#x53C3;&#x6578;&#x50B3;&#x905E;&#x662F; &#x6309;&#x503C;&#x50B3;&#x905E;&#xFF08;Pass by Value&#xFF09; &#x7684;&#x7279;&#x5FB5; 1 2 3 4 5 6 7 8 9 var output = function ( i ) { setTimeout( function ( ) { console .log( new Date , i); }, 1000 ); }; for ( var i = 0 ; i  5 ; i++) { output(i); // &#x9019;&#x88E1;&#x50B3;&#x904E;&#x53BB;&#x7684; i &#x503C;&#x88AB;&#x8907;&#x88FD;&#x4E86; } console .log(i); //5, 0,1,2,3,4"},"event.html":{"title":"Event","path":"\\javascript\\event.html","body":"無限下拉加載圖片的頁面 綁定事件? 代理 https://jsbin.com/hajohit/edit?html,js,output 1 2 3 4 5 6 7  div id = \"div1\"   a href = \"#\"  a1 / a   a href = \"#\"  a2 / a   a href = \"#\"  a3 / a   a href = \"#\"  a4 / a  !--會新增更多a標籤-- / div  為所有a標籤 新增 點擊事件 1 2 3 4 5 6 7 8 9 // 通過事件冒泡 去上層綁定 var div1 = document .getElementById( 'div1' ) div1.addEventListener( 'click' , function ( e )  //監聽是div1 但target可以告知點擊從哪出發的 var target = e.target if (target.nodeName === 'A' )  alert(target.innerHTML); //a1  )"},"event.html#代理":{"title":"&#x4EE3;&#x7406;","path":"\\javascript\\event.html#代理","body":"https://jsbin.com/hajohit/edit?html,js,output 1 2 3 4 5 6 7  div id = div1   a href = #  a1 / a   a href = #  a2 / a   a href = #  a3 / a   a href = #  a4 / a  !--&#x6703;&#x65B0;&#x589E;&#x66F4;&#x591A;a&#x6A19;&#x7C64;-- / div  &#x70BA;&#x6240;&#x6709;a&#x6A19;&#x7C64; &#x65B0;&#x589E; &#x9EDE;&#x64CA;&#x4E8B;&#x4EF6; 1 2 3 4 5 6 7 8 9 // &#x901A;&#x904E;&#x4E8B;&#x4EF6;&#x5192;&#x6CE1; &#x53BB;&#x4E0A;&#x5C64;&#x7D81;&#x5B9A; var div1 = document .getElementById( &apos;div1&apos; ) div1.addEventListener( &apos;click&apos; , function ( e ) { //&#x76E3;&#x807D;&#x662F;div1 &#x4F46;target&#x53EF;&#x4EE5;&#x544A;&#x77E5;&#x9EDE;&#x64CA;&#x5F9E;&#x54EA;&#x51FA;&#x767C;&#x7684; var target = e.target if (target.nodeName === &apos;A&apos; ) { alert(target.innerHTML); //a1 } })"},"arrowFunction.html":{"title":"箭頭函式","path":"\\javascript\\arrowFunction.html","body":"Arrow Function 什麼時候不使用箭頭函數 定義對象上的方法 1 2 3 4 5 6 7 8 9 10 const calculate =  array: [ 1 , 2 , 3 ], sum: () =  console .log( this === window ); // = true return this .array.reduce( ( result, item ) = result + item);  ; console .log( this === window ); // = true // Throws \"TypeError: Cannot read property 'reduce' of undefined\" calculate.sum(); 是因為箭頭函數按詞法 作用域將上下文綁定到 window 對象 執行 this.array 等同於 window.array ，它是 undefined 。 解決方法是使用 常規函數表達式 來定義方法。 this 是在調用時確定的，而不是由封閉的上下文決定的 1 2 3 4 5 6 7 8 9 const calculate =  array: [ 1 , 2 , 3 ], sum()  console .log( this === window ); // = false console .log( this === calculate); // = true return this .array.reduce( ( result, item ) = result + item);  ; calculate.sum(); // = 6 因为sum是常规函数，所以在調用 calculate.sum() 時 this 是 calculate 對象 。 this.array 是數組引用"},"arrowFunction.html#Arrow-Function":{"title":"Arrow Function","path":"\\javascript\\arrowFunction.html#Arrow-Function","body":"&#x4EC0;&#x9EBC;&#x6642;&#x5019;&#x4E0D;&#x4F7F;&#x7528;&#x7BAD;&#x982D;&#x51FD;&#x6578; &#x5B9A;&#x7FA9;&#x5C0D;&#x8C61;&#x4E0A;&#x7684;&#x65B9;&#x6CD5; 1 2 3 4 5 6 7 8 9 10 const calculate = { array: [ 1 , 2 , 3 ], sum: () = { console .log( this === window ); // = true return this .array.reduce( ( result, item ) = result + item); } }; console .log( this === window ); // = true // Throws TypeError: Cannot read property &apos;reduce&apos; of undefined calculate.sum(); &#x662F;&#x56E0;&#x70BA;&#x7BAD;&#x982D;&#x51FD;&#x6578;&#x6309;&#x8A5E;&#x6CD5; &#x4F5C;&#x7528;&#x57DF;&#x5C07;&#x4E0A;&#x4E0B;&#x6587;&#x7D81;&#x5B9A;&#x5230; window &#x5C0D;&#x8C61; &#x57F7;&#x884C; this.array &#x7B49;&#x540C;&#x65BC; window.array &#xFF0C;&#x5B83;&#x662F; undefined &#x3002; &#x89E3;&#x6C7A;&#x65B9;&#x6CD5;&#x662F;&#x4F7F;&#x7528; &#x5E38;&#x898F;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F; &#x4F86;&#x5B9A;&#x7FA9;&#x65B9;&#x6CD5;&#x3002; this &#x662F;&#x5728;&#x8ABF;&#x7528;&#x6642;&#x78BA;&#x5B9A;&#x7684;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x7531;&#x5C01;&#x9589;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x6C7A;&#x5B9A;&#x7684; 1 2 3 4 5 6 7 8 9 const calculate = { array: [ 1 , 2 , 3 ], sum() { console .log( this === window ); // = false console .log( this === calculate); // = true return this .array.reduce( ( result, item ) = result + item); } }; calculate.sum(); // = 6 &#x56E0;&#x4E3A;sum&#x662F;&#x5E38;&#x89C4;&#x51FD;&#x6570;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x8ABF;&#x7528; calculate.sum() &#x6642; this &#x662F; calculate &#x5C0D;&#x8C61; &#x3002; this.array &#x662F;&#x6578;&#x7D44;&#x5F15;&#x7528;"},"closures.html":{"title":"Closures","path":"\\javascript\\closures.html","body":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures 1 2 3 4 5 6 7 8 9 var name = \"hello\" ; ( function ( )  if ( typeof name === \"undefined\" )  var name = \"world\" ; console .log( \"goodbye \" + name);  else  console .log( \"hello \" +name);  )(); “goodbye world” 1 2 3 4 5 6 7 8 9 10 11 function makeAdder ( x )  return function ( y )  return x + y; ;  var add5 = makeAdder( 5 ); var add10 = makeAdder( 10 ); console .log(add5( 2 )); // 7 console .log(add10( 2 )); // 12 1 2 3 4 5 6 7 8 9 10 11 12 // fn declaration function add ( x )  return function ( y )  return x + y; ;  var add5 = add( 5 ); var add10 = add( 10 ); console .log(add5( 2 )); // 7 console .log(add10( 2 )); // 12 箭頭函式 https://tylermcginnis.com/arrow-functions/ 1 2 3 4 5 6 7 8 9 10 11 12 13 function add ( x )  return ( y ) = x + y;  const addf1 = ( a,b ) = a + b; var add5 = add( 5 ); var add10 = add( 10 ); console .log(add5( 2 )); // 7 console .log(add10( 2 )); // 12 console .log(addf1( 5 , 2 )); // 7 傳函數 (函數即物件) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const addf1 = ( a,b ) = a + b; function passFn ( addf1 )  return addf1;  function insideFn ( x,y )  return addf1(x,y);  console .log( addf1( 5 , 2 ) ); // 7 console .log( passFn(addf1( 5 , 2 )) ); // 7 console .log( insideFn( 5 , 2 ) ); // 7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // global scope var e = 10 ; function sum ( a )  return function ( b,c )  return function ( d )  // local scope return a + b + c + d + e;    console .log(sum( 1 )( 2 , 3 )( 4 )); // log 20 傳多個函數 1 2 3 4 5 6 7 function fns ( a )  return function ( b,c )  return a + b + c;   console .log(fns( 1 )( 2 , 3 )); // log 6 1 2 3 4 5 6 7 8 function fns ( f1 )  return function ( b,c )  return f1(b,c);   const addf1 = ( a,b ) = a + b; console .log(fns(addf1)( 2 , 3 )); // 5 https://jsbin.com/yijuyebixu/edit?js,console 1 2 3 4 5 6 7 8 9 10 function fns ( f1,f2 )  return function ( b,c )  return f1(b,c)+ ' ' +f2(b)+ ' ' +f3(b,c);   const f1 = ( a,b ) = a + b; const f2 = ( a ) = a * a; const f3 = ( a,b ) = a  b; //2 左移3 00010 - 10000 16 console .log(fns(f1,f2,f3)( 2 , 3 )); // \"5 4 16\" https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#%3E%3E_(Sign-propagating_right_shift)"},"closures.html#傳多個函數":{"title":"&#x50B3;&#x591A;&#x500B;&#x51FD;&#x6578;","path":"\\javascript\\closures.html#傳多個函數","body":"1 2 3 4 5 6 7 function fns ( a ) { return function ( b,c ) { return a + b + c; } } console .log(fns( 1 )( 2 , 3 )); // log 6 1 2 3 4 5 6 7 8 function fns ( f1 ) { return function ( b,c ) { return f1(b,c); } } const addf1 = ( a,b ) = a + b; console .log(fns(addf1)( 2 , 3 )); // 5 https://jsbin.com/yijuyebixu/edit?js,console 1 2 3 4 5 6 7 8 9 10 function fns ( f1,f2 ) { return function ( b,c ) { return f1(b,c)+ &apos; &apos; +f2(b)+ &apos; &apos; +f3(b,c); } } const f1 = ( a,b ) = a + b; const f2 = ( a ) = a * a; const f3 = ( a,b ) = a  b; //2 &#x5DE6;&#x79FB;3 00010 - 10000 16 console .log(fns(f1,f2,f3)( 2 , 3 )); // 5 4 16 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#%3E%3E_(Sign-propagating_right_shift)"},"copy.html":{"title":"Copy","path":"\\javascript\\copy.html","body":"物件跟基本型別最大的不同就在於他們的傳值方式 淺拷貝(Shallow Copy) 基本型別是傳 value https://jsbin.com/lokejiveha/edit?js,console 1 2 3 4 5 6 var a = 10 ; var b = a; b = 20 ; console .log(a); // 10 console .log(b); // 20 但物件就不同，物件傳的是 reference https://jsbin.com/keholuroba/edit?js,console 1 2 3 4 5 6 var obj1 =  a : 10 , b : 20 , c : 30 ; var obj2 = obj1; obj2.b = 100 ; console .log(obj1); //  a: 10, b: 100, c: 30  -- b 被改到了 console .log(obj2); //  a: 10, b: 100, c: 30  複製一份obj1叫做obj2 然後把obj2.b改成100 但卻不小心改到obj1.b 因為他們根本是同一個物件，這就是所謂的 淺拷貝 深拷貝(Deep Copy) https://jsbin.com/xeqevarisa/1/edit?js,console 1 2 3 4 5 6 var obj1 =  a : 10 , b : 20 , c : 30 ; var obj2 =  a : obj1.a, b : obj1.b, c : obj1.c ; obj2.b = 100 ; console .log(obj1); //  a: 10, b: 20, c: 30  -- b 沒被改到 console .log(obj2); //  a: 10, b: 100, c: 30  但深拷貝會另外創造一個一模一樣的物件 新物件跟原物件不共用記憶體 修改新物件不會改到原物件 https://jsbin.com/venezeyonu/edit?js,console 1 2 3 4 5 6 7 8 var obj1 =  body :  a : 10  ; var obj2 =  body : obj1.body ; obj2.body.a = 100 ; console .log(obj1); //  body:  a: 100   -- 被改到了 console .log(obj2); //  body:  a: 100   console .log(obj1 === obj2); // false console .log(obj1.body === obj2.body); // true 雖然obj1跟obj2是不同物件 但他們會共用同一個 obj1.body 所以修改obj2.body.a時也會修改到舊的 Object.assign https://jsbin.com/cejijipevo/edit?js,console 1 2 3 4 5 6 var obj1 =  a : 10 , b : 20 , c : 30 ; var obj2 = Object .assign(, obj1); obj2.b = 100 ; console .log(obj1); //  a: 10, b: 20, c: 30  -- 沒被改到 console .log(obj2); //  a: 10, b: 100, c: 30  Object.assign({}, obj1) 的意思是先建立一個空物件{} 接著把obj1中所有的屬性複製過去 所以obj2會長得跟obj1一樣 這時候再修改obj2.b也不會影響obj1 因為Object.assign跟我們手動複製的效果相同 轉成 JSON 再轉回來 https://jsbin.com/kofawafune/edit?js,console 1 2 3 4 5 6 7 8 var obj1 =  body :  a : 10  ; var obj2 = JSON .parse( JSON .stringify(obj1)); obj2.body.a = 20 ; console .log(obj1); //  body:  a: 10   -- 沒被改到 console .log(obj2); //  body:  a: 20   console .log(obj1 === obj2); // false console .log(obj1.body === obj2.body); // false 這樣做是真正的 Deep Copy 但只有可以轉成JSON格式的物件才可以這樣用 像function沒辦法轉成JSON 1 2 3 4 5 var obj1 =  fun : function ( )  console .log( 123 )  ; var obj2 = JSON .parse( JSON .stringify(obj1)); console .log( typeof obj1.fun); // 'function' console .log( typeof obj2.fun); // 'undefined' -- 沒複製"},"copy.html#淺拷貝-Shallow-Copy":{"title":"&#x6DFA;&#x62F7;&#x8C9D;(Shallow Copy)","path":"\\javascript\\copy.html#淺拷貝-Shallow-Copy","body":"&#x57FA;&#x672C;&#x578B;&#x5225;&#x662F;&#x50B3; value https://jsbin.com/lokejiveha/edit?js,console 1 2 3 4 5 6 var a = 10 ; var b = a; b = 20 ; console .log(a); // 10 console .log(b); // 20 &#x4F46;&#x7269;&#x4EF6;&#x5C31;&#x4E0D;&#x540C;&#xFF0C;&#x7269;&#x4EF6;&#x50B3;&#x7684;&#x662F; reference https://jsbin.com/keholuroba/edit?js,console 1 2 3 4 5 6 var obj1 = { a : 10 , b : 20 , c : 30 }; var obj2 = obj1; obj2.b = 100 ; console .log(obj1); // { a: 10, b: 100, c: 30 } -- b &#x88AB;&#x6539;&#x5230;&#x4E86; console .log(obj2); // { a: 10, b: 100, c: 30 } &#x8907;&#x88FD;&#x4E00;&#x4EFD;obj1&#x53EB;&#x505A;obj2 &#x7136;&#x5F8C;&#x628A;obj2.b&#x6539;&#x6210;100 &#x4F46;&#x537B;&#x4E0D;&#x5C0F;&#x5FC3;&#x6539;&#x5230;obj1.b &#x56E0;&#x70BA;&#x4ED6;&#x5011;&#x6839;&#x672C;&#x662F;&#x540C;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x9019;&#x5C31;&#x662F;&#x6240;&#x8B02;&#x7684; &#x6DFA;&#x62F7;&#x8C9D; &#x6DF1;&#x62F7;&#x8C9D;(Deep Copy) https://jsbin.com/xeqevarisa/1/edit?js,console 1 2 3 4 5 6 var obj1 = { a : 10 , b : 20 , c : 30 }; var obj2 = { a : obj1.a, b : obj1.b, c : obj1.c }; obj2.b = 100 ; console .log(obj1); // { a: 10, b: 20, c: 30 } -- b &#x6C92;&#x88AB;&#x6539;&#x5230; console .log(obj2); // { a: 10, b: 100, c: 30 } &#x4F46;&#x6DF1;&#x62F7;&#x8C9D;&#x6703;&#x53E6;&#x5916;&#x5275;&#x9020;&#x4E00;&#x500B;&#x4E00;&#x6A21;&#x4E00;&#x6A23;&#x7684;&#x7269;&#x4EF6; &#x65B0;&#x7269;&#x4EF6;&#x8DDF;&#x539F;&#x7269;&#x4EF6;&#x4E0D;&#x5171;&#x7528;&#x8A18;&#x61B6;&#x9AD4; &#x4FEE;&#x6539;&#x65B0;&#x7269;&#x4EF6;&#x4E0D;&#x6703;&#x6539;&#x5230;&#x539F;&#x7269;&#x4EF6; https://jsbin.com/venezeyonu/edit?js,console 1 2 3 4 5 6 7 8 var obj1 = { body : { a : 10 } }; var obj2 = { body : obj1.body }; obj2.body.a = 100 ; console .log(obj1); // { body: { a: 100 } } -- &#x88AB;&#x6539;&#x5230;&#x4E86; console .log(obj2); // { body: { a: 100 } } console .log(obj1 === obj2); // false console .log(obj1.body === obj2.body); // true &#x96D6;&#x7136;obj1&#x8DDF;obj2&#x662F;&#x4E0D;&#x540C;&#x7269;&#x4EF6; &#x4F46;&#x4ED6;&#x5011;&#x6703;&#x5171;&#x7528;&#x540C;&#x4E00;&#x500B; obj1.body &#x6240;&#x4EE5;&#x4FEE;&#x6539;obj2.body.a&#x6642;&#x4E5F;&#x6703;&#x4FEE;&#x6539;&#x5230;&#x820A;&#x7684;"},"copy.html#深拷貝-Deep-Copy":{"title":"&#x6DF1;&#x62F7;&#x8C9D;(Deep Copy)","path":"\\javascript\\copy.html#深拷貝-Deep-Copy","body":"https://jsbin.com/xeqevarisa/1/edit?js,console 1 2 3 4 5 6 var obj1 = { a : 10 , b : 20 , c : 30 }; var obj2 = { a : obj1.a, b : obj1.b, c : obj1.c }; obj2.b = 100 ; console .log(obj1); // { a: 10, b: 20, c: 30 } -- b &#x6C92;&#x88AB;&#x6539;&#x5230; console .log(obj2); // { a: 10, b: 100, c: 30 } &#x4F46;&#x6DF1;&#x62F7;&#x8C9D;&#x6703;&#x53E6;&#x5916;&#x5275;&#x9020;&#x4E00;&#x500B;&#x4E00;&#x6A21;&#x4E00;&#x6A23;&#x7684;&#x7269;&#x4EF6; &#x65B0;&#x7269;&#x4EF6;&#x8DDF;&#x539F;&#x7269;&#x4EF6;&#x4E0D;&#x5171;&#x7528;&#x8A18;&#x61B6;&#x9AD4; &#x4FEE;&#x6539;&#x65B0;&#x7269;&#x4EF6;&#x4E0D;&#x6703;&#x6539;&#x5230;&#x539F;&#x7269;&#x4EF6; https://jsbin.com/venezeyonu/edit?js,console 1 2 3 4 5 6 7 8 var obj1 = { body : { a : 10 } }; var obj2 = { body : obj1.body }; obj2.body.a = 100 ; console .log(obj1); // { body: { a: 100 } } -- &#x88AB;&#x6539;&#x5230;&#x4E86; console .log(obj2); // { body: { a: 100 } } console .log(obj1 === obj2); // false console .log(obj1.body === obj2.body); // true &#x96D6;&#x7136;obj1&#x8DDF;obj2&#x662F;&#x4E0D;&#x540C;&#x7269;&#x4EF6; &#x4F46;&#x4ED6;&#x5011;&#x6703;&#x5171;&#x7528;&#x540C;&#x4E00;&#x500B; obj1.body &#x6240;&#x4EE5;&#x4FEE;&#x6539;obj2.body.a&#x6642;&#x4E5F;&#x6703;&#x4FEE;&#x6539;&#x5230;&#x820A;&#x7684;"},"copy.html#Object-assign":{"title":"Object.assign","path":"\\javascript\\copy.html#Object-assign","body":"https://jsbin.com/cejijipevo/edit?js,console 1 2 3 4 5 6 var obj1 = { a : 10 , b : 20 , c : 30 }; var obj2 = Object .assign({}, obj1); obj2.b = 100 ; console .log(obj1); // { a: 10, b: 20, c: 30 } -- &#x6C92;&#x88AB;&#x6539;&#x5230; console .log(obj2); // { a: 10, b: 100, c: 30 } Object.assign({}, obj1) &#x7684;&#x610F;&#x601D;&#x662F;&#x5148;&#x5EFA;&#x7ACB;&#x4E00;&#x500B;&#x7A7A;&#x7269;&#x4EF6;{} &#x63A5;&#x8457;&#x628A;obj1&#x4E2D;&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x8907;&#x88FD;&#x904E;&#x53BB; &#x6240;&#x4EE5;obj2&#x6703;&#x9577;&#x5F97;&#x8DDF;obj1&#x4E00;&#x6A23; &#x9019;&#x6642;&#x5019;&#x518D;&#x4FEE;&#x6539;obj2.b&#x4E5F;&#x4E0D;&#x6703;&#x5F71;&#x97FF;obj1 &#x56E0;&#x70BA;Object.assign&#x8DDF;&#x6211;&#x5011;&#x624B;&#x52D5;&#x8907;&#x88FD;&#x7684;&#x6548;&#x679C;&#x76F8;&#x540C;"},"copy.html#轉成-JSON-再轉回來":{"title":"&#x8F49;&#x6210; JSON &#x518D;&#x8F49;&#x56DE;&#x4F86;","path":"\\javascript\\copy.html#轉成-JSON-再轉回來","body":"https://jsbin.com/kofawafune/edit?js,console 1 2 3 4 5 6 7 8 var obj1 = { body : { a : 10 } }; var obj2 = JSON .parse( JSON .stringify(obj1)); obj2.body.a = 20 ; console .log(obj1); // { body: { a: 10 } } -- &#x6C92;&#x88AB;&#x6539;&#x5230; console .log(obj2); // { body: { a: 20 } } console .log(obj1 === obj2); // false console .log(obj1.body === obj2.body); // false &#x9019;&#x6A23;&#x505A;&#x662F;&#x771F;&#x6B63;&#x7684; Deep Copy &#x4F46;&#x53EA;&#x6709;&#x53EF;&#x4EE5;&#x8F49;&#x6210;JSON&#x683C;&#x5F0F;&#x7684;&#x7269;&#x4EF6;&#x624D;&#x53EF;&#x4EE5;&#x9019;&#x6A23;&#x7528; &#x50CF;function&#x6C92;&#x8FA6;&#x6CD5;&#x8F49;&#x6210;JSON 1 2 3 4 5 var obj1 = { fun : function ( ) { console .log( 123 ) } }; var obj2 = JSON .parse( JSON .stringify(obj1)); console .log( typeof obj1.fun); // &apos;function&apos; console .log( typeof obj2.fun); // &apos;undefined&apos; -- &#x6C92;&#x8907;&#x88FD;"},"core.html":{"title":"JavaScript 核心","path":"\\javascript\\core.html","body":"JavaScript 直譯器轉換過程 語法基本單元化(Tokenizing) 抽象結構樹AST(Abstract Syntax Tree) 代碼生成 esprima.org Parser produces the (beautiful) syntax tree Lexical Scope 語法作用域 (靜態作用域) 直譯器 靜態作用域 語法解析時就已經確定作用域 不會改變 JS屬於靜態作用域 執行 動態作用域 作用域是函數調用時才決定 提升（Hoisting） 在創造環境把記憶體空間準備好，這個流程稱為 提升（Hoisting） var name = &#39;Jacob&#39; // 創造環境 name放入記憶體 name = undefined 1 2 var name; //先宣告變數 name = 'Jacob' //然後才賦予值 執行階段 函數陳述式 在創造階段就會 優先載入 創造階段函式已可以運行 1 2 3 4 var a = '1' function fn ( )  ...  a undefined fn function .. 1 2 3 4 fn() //放前面可因為 創造階段 已可以運行 function fn ( )  console .log()  1 2 3 4 5 fn() //放前面 uncaught typeError: fn is not a function console .log(fn) //undefined var fn = function ( )  //函式表達式 console .log()  創造階段函式優先 1 2 3 4 5 6 7 8 9 10 11 12 //創造階段 function fn ( )  console .log( 1 )  var fn; //執行階段 fn = function ( )  console .log( 2 )  console .log(fn) //2 程式 1 2 3 4 5 function fn ( )  console .log(a)  var a = 'hello' fn() 實際運作拆解 1 2 3 4 5 6 7 8 //創造階段 function fn ( )  console .log(a)  var a; //執行階段 a = 'hello' fn () 1 2 3 4 5 6 7 8 9 function fn ( )  if (a)  // undefined 在 JavaScript 代表著 false console .log( 'hello' )  else  console .log( 'jacob' )   fn() //因為函式在執行時，變數還沒有被賦予值 var a = true 同步/非同步 JS是單執行序 是同步的 可利用 事件佇列 實現非同步 同步概念的先跑完 非同步行為先移至事件佇列 1 2 3 setTimeout( function ( )  console .log( 'someone call' ) , 3000 ) //不管如何調整秒數 都不會優先執行 0也是最後執行 LHS 1= true 1 = true 會出現 left-hand side (LHS)，實際上在此就無法繼續執行 Uncaught ReferenceError: Invalid left-hand side in assignment console.log(a) not defined 但其實是 RHS 錯誤，只是 JavaScript 並不會直接顯示 RHS 錯誤 陳述式 表達式 陳述式與宣告分類 運算式與運算子 正規表達式 陳述式 不會回傳結果 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 )  // 物件實字 var a =  name : \"Jacob\"  立即函式 (匿名函式()) // 匿名函式 外層小括號包起來 並且在後面加入() 來立即執行函式 1 2 3 ( function ( )  console .log( 'Jacob' ) ()) ASI 自動分號插入 自動分號插入( automatic semicolon insertion, ASI ) 是一種程序解析技術， 它在JavaScript 程序的語法分析(parsing) 階段起作用。 “不會” 發生 ASI 的規則： 新的一行是 ( 、 [ 、 / 開始 (容易出錯的地方) 新的一行以 + 、 - 、 * 、 % 作開始 (會影響執行結果) 新的一行以 , 、 . 作開始 (需注意執行結果) 遇到以上的標點符號 前方加入分號 是解決辦法 1 2 3 4 5 6 7 // 執行錯誤 ( function ( )  )() ( function ( )  )() // 正確 ;( function ( )  )() ;( function ( )  )() 1 2 3 4 5 var a = 1 ( function ( )  console .log(a); )() // var a = 1(function() console.log(a);)() 動態型別 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //執行階段才會賦予確立型別 var myName = 'Jacob' var myName; // 先賦予命名空間 myName = 'Jacob' //執行階段才確認型別 console .log( typeof myName) console .log( typeof 'Jacob' ) //顯性的轉換 explicit conversion //隱性的轉換 implicit conversion var num = 1 //number num = num + '' //string num = num * 3 //number console .log(num, typeof num) 原始型別及物件型別 原始型別 可用包裹物件的所有方法 1 2 3 4 a = 'Jacob' var e = new String (a) //但是原始型別盡量不用此方式 建構式 宣告 console .log(a, e) console .log( typeof e) // 建構式宣告的非原始型別 是物件型別 凡是使用 new 所建構的型別，在 typeof 都會是 object 透過建構式來建立的物件， var a = new Object(); if(a) 一樣是會被判定 true，因為物件的記憶體已經存在了 運算子 運算子 運算子優先序 賦值的優先性很低只有3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a是收 3賦予至b的 ‘回傳結果’ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = ; Object .defineProperty(b, 'a' ,  value: 2 , writable: false ) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a 是表達式 接收 1 b.a = 1 跟 b.a沒有關連性 Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 從左至右 console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = '1' ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b )  return a+b console .log( '1'  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( '1' + 2 ) //12 string型別相加 console .log(c)) console .log( 12 ) 嚴格相等 寬鬆相等 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //數字1 藍色 console .log( '1' ) //字串1 黑色 //嚴格相等 特殊狀況 console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //寬鬆相等 console .log( 1 == '1' ) // true 布林和字串轉為數值 console .log( Number ( '1' )) console .log( Number ( '0x11' )) //17 0x是指十六進制數 16+1 console .log( 17 == '0x11' ) //true //Null Undefined 不會轉數字型別 console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // 物件與非物件 使用包裹物件轉換 (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log(  A : 'A' ) //__proto__: Object console .log( String ( A : 'A' )) // [object Object] //物件與物件 比對的不是值 是參考位址 參考同一個記憶體 console .log( == ) //false 物件的參考位址不同 console .log( []==[] ) //false 同樣是物件型別 比對的都是參考位址 var a = [] var b = a ; //b取得的是a的參考位址 console .log( a===b) //a,b使用同個參考位址 JavaScript Equality Table Truthy Truthy（真值） console.log(new Boolean(false)) //Boolean{false} 物件 proto : Object 1 2 3 4 5 if ( new Boolean ( false ))  console .log( 'Truthy' )  else  console .log( 'Falsy' )  邏輯運算子及函式預設值 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // 預設值為 0 的解決方法 使用三元運算子 // 當 cash 是數值或為 0 時，使用 cash 的數值 // 如果 cash 是 NaN 時，則直接套用 500 cash = (cash || cash === 0 )? cash: 500 ; // or 左右兩邊放的是表達式 `` ` # 物件取值 [求值策略](https://zh.wikipedia.org/wiki/求值策略) 點 與 中括弧(可用變數方式) 物件取值屬性用字串 ` `` js const family =  name: 'Hsu' , members:  mon: 'mon' , dad: 'dad' , others: 'others' , 1 : 10 , '$-myFamily' : 'my family' , callFamily: function ( )  console .log( 'call family' ) , 'Hello' : function ( )  console .log( 'I am groot ' )   //物件實字 console .log(family.name); console .log(family[ 'name' ]); const a = 'name' ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ 'callFamily' ](); //add family[ '$' ] = 'money' delete family.others delete family[ '$' ] //利用陣列及for迴圈 執行物件的函式 var familyMethod = [ 'callFamily' , 'Hello' ] for ( var i= 0 ; i familyMethod.length;i++)  console .log(familyMethod[i]) family[familyMethod[i]]();  1 2 3 4 5 6 7 //變數無法被刪除，屬性才可以 var a= 1 ; //變數 b= 2 ; //屬性 console .log( window ) delete a; delete b; //b is not defind console .log( window ) 物件記憶體空間 1 2 3 4 5 var person =  name: 'Jacob'  var person2 = person person2 = 'Hsu' //find 0x01 change name's value 參考物件 Value 0x01 name Jacob 物件變數 Value person 0x01 person2 0x01 1 2 3 4 5 6 7 8 // 見大括號 生成新的參考物件 var company =  team: 'dev' , member:  rd: 'Jacob' qa: 'Claire'   參考物件 Value 0x01 team dev member 0x02 | 0x02 | | | rd | Jacob | | qa | Claire | 物件變數 Value company 0x01 純值無法新增屬性 js兩種型別 不是純值 就是物件 (function是物件) 1 2 3 4 5 6 7 8 9 10 11 12 13 var newStr = 'myname' //純值 newStr.name = 'Jacob' console .log(newStr) var newStr2 = new String ( 'myname' ) //建構式 物件 newStr2.name = 'Jacob' console .log(newStr2) function callFn ( )  console .log( 'fun' )  console .log(callFn) console .dir(callFn) //看見物件所有屬性內容 純值 傳值(call by value) 物件(陣列 函式)) 傳參考(call by reference) 深淺拷貝 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 var family =  name: 'Hsu' , member:  father: 'dad' , monther: 'mom' , other: 'someone'   var newFamily =  for ( var key in family)  console .log(key, family[key]); newFamily[key] =family[key];  newFamily.name = 'Chen' console .log(family, newFamily) newFamily.member.other = 'stranger' console .log(family, newFamily) //for in只能做第一層的複製 第二層是傳參考的形式 //淺層複製 js for in, jQuery extend, ES6 assign //jQuery var newFamily2 = jQuery.extend(, family); //ES6 var newFamily3 = Object .assign(, family) //深層複製 deep copy 會將原本的物件轉成字串再轉回來 傳參考特性會沒有 //console.log(family, JSON.stringify(family)) console .log(family, JSON .parse( JSON .stringify(family) )) var newFamily4 = JSON .parse( JSON .stringify(family) ); console .log(family === newFamily4) newFamily4.name = 'Liao' newFamily4.member.other = 'Deep' console .log(family, newFamily4) //兩者完全無關 參考也都不一樣 陣列 陣列是物件型別的一種 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var newArray = [ 1 , 'Str' , true ,  name: 'Jacob'  ]; console .log(newArray[ 3 ]); //[object Object]  name: \"Jacob\" console .log(newArray .3 ); //\"error\" newArray.push( 5 ); newArray.name = 'Hsu' ; //物件可隨意增加屬性 newArray[ 5 ] = 'Chen' ; newArray[ 7 ] = 'Liao' ; //陣列6 empty 取值undefined console .log(newArray); //name不屬於陣列裡面的長度 for ( var i= 0 ;inewArray.length;i++)  console .log(newArray[i])  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a = [ 1 , 2 , 3 ]; console .log(a, a[ 1 ], a.length) //forEach 不是實體屬性 是陣列原型的屬性 a.forEach( function ( i )  console .log(i) ); ( 3 ) [ 1 , 2 , 3 ] 0 : 1 1 : 2 2 : 3 length: 3 // length 也是一個物件的屬性 __proto__: Array ( 0 ) //陣列的原型 可以透過點運算子不斷向上查找取得方法 例:forEach ... __proto__: Object // 陣列的原型 繼承物件的原型 所以陣列也可以使用物件原型的方法 例:toString 1 2 3 4 5 6 7 8 var a = [ 1 , 2 , 3 ]; var b = [ 4 , 5 , 6 ]; //新增方法到原型鏈上 a.__proto__.getLast = function ( )  return this [ this .length -1 ]; //b[b.length-1]  console .log(a, b, a.getLast(), a.toString()) JSON JSON - 維基百科 儘管JSON是JavaScript的一個子集，但JSON是獨立於語言的文字格式 JSON所有的屬性一定都是字串的形式 物件可以用單引號 &#39; 但JSON一律用雙引號  SON 的格式是非常嚴格的，多一個逗號少一個逗號，都會導致出現錯誤， 所以最後一筆不可多了一個逗號 透過 JSON.parse() 出來的資料是一個物件，所以物件會有傳參考特性 後續的值變更，原本的值也會變更 原生AJAX讀JSON 1 2 3 4 5 6 7 8 9 10 //原生AJAX function getData ( )  console .log( this .response) var data = JSON .parse( this .response); console .log(data);  var oReq = new XMLHttpRequest(); oReq.addEventListener( \"load\" , getData); oReq.open( \"GET\" , \"family.json\" ) //傳入的字串 oReq.send(); 透過開發工具Network可以看結果 function 在 JavaScript 中 function 是一個很特別的存在，它是可以當成物件來使用， function 也是物件的一種，只是它是擁有程式區塊的能力物件而已 透過 「.」 即可做到新增屬性與值，所以function 在 JavaScript 是一個特殊的物件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( )  console .log( '函式陳述式' , '具名函式' ); console .log(statementFn);  statementFn(); var expressionFn = function ( )  console .log( '函式表達式' , '匿名函式' ); //不是所有匿名函式 都是函式表達式 console .log(expressionFn);  expressionFn() var functionC = function functionD ( )  console .log(functionC, functionD) //具名函式能夠在函式內被調用  console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin )  num += 1 console .log( 'Exec giveMeMoney' ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) ; console .log(giveMeMoney( 30 )) //加錢到超過100元才停止 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn )  fn();  // 函數陳述式沒有名稱無法執行 // function (fn)  // fn(); //  // 傳入的參數函式 如同函式表達式 不需要名稱 callSomeFn( function ( )  console .log( '執行函式' ) ) // 2定義一段函式並賦予到參數上 立即函式(IIFE) 立即呼叫函式表達式 （英文：immediately-invoked function expression，縮寫：IIFE） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( )  console .log( 'IIFE' )  fnA(); // IIFE ( function IIFE ( )  console .log( '立即函式' , 'IIFE' , '沒有fnA也可以執行' , '這裡是具名函式' ) // 1. 立即執行 // 2. 無法再函式外被再次執行 ()); //括號內層再補上小括號 ( function IIFE ( )  )(); //小括號可以移到外層 console .log(IIFE); //IIFE is not defined ( function ( )  console .log( '立即函式' , 'IIFE' , '沒有fnA也可以執行' ) // 1. 立即執行 // 2. 無法再函式外被再次執行 ()); ( function ( )  var name = 'Jacob' ; console .log(name) // 限制變數的作用域 )(); var whereParameter = ( function ( parameter )  console .log(parameter) return parameter; )( '參數在這' ); console .log(whereParameter); //記得養成好習慣 在立即函式前或後加分號 // 立即函式 傳遞變數 var a = ; ( function ( b )  b.person = 'jacob' ; )(a) ;( function ( c )  console .log(c.person); //把另一個立即函式定義的變數印出來 )(a) // 大型框架下 用全域物件傳值 ( function ( global )  global.person = 'jacob' ; )( window ) ;( function ( )  console .log(person); //把另一個立即函式定義的變數印出來 )() 參數 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a )  console .log(name+ '你好' +a)  function funcB ( fn )  fn( 'Jacob' , 1 ) //實際執行在這  funcB(cbFn) //\"Jacob你好1\" 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a )  console .log(a, arguments ); //arguments 是一個類陣列 不是純陣列 for ( let index = 0 ; index  arguments .length; index++)  console .log( arguments [index]); // 1 2 3 '4'  // 類陣列並沒有絕大多數陣列可使用的方法 // \"TypeError: arguments.forEach is not a function arguments .forEach( function ( )  )  callArg( 1 , 2 , 3 , '4' ) //1, [object Arguments]  0: 1, 1: 2, 2: 3, 3: \"4\" 閉包 Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( )  var money = 1000 ; return function ( price )  money = money + price return money   //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price)  console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( )  var arr = []; for ( var i= 0 ;i 3 ;i++)  arr.push( function ( )  console .log(i); );  console .log( 'i' , i) // 3 3 3 return arr;  var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); 透過 立即函式 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( )  var arr = []; for ( var i= 0 ;i 3 ;i++)  // 立即函式一個功能 限制作用域 ( function ( j )  arr.push( function ( )  console .log(j); ); )(i);  console .log( 'i' , i) // 0 1 2 return arr;  var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); 透過 let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( )  var arr = []; for ( let i= 0 ;i 3 ;i++)  arr.push( function ( )  console .log(i); // 0 1 2 );  //console.log('i', i) // \"error\" let作用域只在for return arr;  var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); 函式工廠 給不同的值　做相同的事情 1 2 3 4 5 6 7 8 9 function storeMoney ( initVal )  var money = initVal || 1000 return function ( price )  money = money + price; return money;   var MingMoney = storeMoney( 100 ); console .log(MingMoney( 500 )) // 600 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 function storeMoney ( initVal )  var money = initVal || 1000 // 私有方法 可以做很多不同事情 return  increase: function ( price )  money += price , decrease: function ( price )  money -= price , value: function ( )  return money;    var MingMoney = storeMoney( 100 ); MingMoney.increase( 100 ); MingMoney.increase( 25 ); MingMoney.decrease( 25 ); console .log(MingMoney.value()) // 200 this chrome / devTool / Sources / || 暫停按鈕 / 進入執行堆疊 this 為關鍵字 在每個執行環境存在 this 的調用方式 作為物件方法 關注在哪個物件下呼叫 Object.fn() this 指向 Object 簡易呼叫 (不建議調用this) bind, apply, call 方法 new DOM事件處理器 箭頭函式(ES6) simple call 簡易呼叫 1 2 3 4 5 6 var myName = 'Jacob' ; function callName ( )  console .log( this , this .myName)  callName() // this - window // 盡可能不要使用simple call的this 1 2 3 4 5 6 7 ( function ( )  console .log( this .myName); function callFn ( )  console .log( this .myName);  callFn(); //simple call 看到函式是直接執行的 就是簡易呼叫 執行閉包內函式也是 )(); 1 2 3 4 5 6 7 8 // callback function myCb ( callback )  var money = 100 return callback(money)  myCb( function ( money )  console .log( this .myName, money+ 100 ) ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 var a = [ 1 , 2 , 3 ] // forEach 後方是插入一個callback函式 a.forEach( function ( i )  console .log( this .myName, i); ) var family =  myName: 'Hsu' , callName: function ( )  // var self = this; // vm , that setTimeout( function ( )  console .log( this .myName) // simple call this-window 'Jacob' 無法取得物件的myName 'Hsu' console .log(self.myName) // 物件的myName 'Hsu' , 1000 )  family.callName();  Call, appply, bind 1 2 3 4 5 6 7 8 9 10 11 12 13 var team =  myName: 'Jacob'  function fn ( para1, para2 )  console .log( this , para1, para2)  fn( 1 , 2 ); //simple call fn.call(team, 1 , 2 ); // call 是立刻執行 fn.apply(team, [ 3 , 4 ]); // apply 是立刻執行 差別在以陣列方式呈現 var fn2 = fn.bind(team, 5 , 6 ); // bind 非立刻執行 fn2( 6 ); // [object Object] 5 6 順序執行參數所以是6 fn2( 1 , 2 ); // [object Object] 5 1 順序執行參數所以是1 1 2 3 4 5 6 7 8 function fn ( para1, para2 )  console .log( this , para1, para2)  // 進階概念 fn.call( 1 , 'Jacob' , 'Jessica' ) //傳純值 Number1 'Jacob', 'Jessica' 已建構式方式呈現 物件的型別 fn.call( 'Str' , 'Jacob' , 'Jessica' ) fn.call( undefined , 'Jacob' , 'Jessica' ) // null 、undefined 將會被置換成全域變數 [object Window] 'Jacob', 'Jessica' MDN call() 嚴格模式 1 2 3 4 ( function ( )  'use strict' ; name = 'Jacob' ; // \"error\" name is not defined )() 1 2 3 4 5 6 7 function fn ( para1, para2 )  'use strict' ; // 有加入嚴格模式 this所指向的window會變undefined console .log( this , para1, para2) // 1 \"Jacob\" \"Jessica\" 嚴格模式下 純值維持原型別 不以建構式方式呈現  fn.call( 1 , 'Jacob' , 'Jessica' ) fn.call( undefined , 'Jacob' , 'Jessica' ) // undefined \"Jacob\" \"Jessica\" // 簡易呼叫下 盡可能不要調用this 因為它本質就是undefined this: DOM 1 2  button onclick = \"console.log(this)\"  this is btn / button   button onclick = \"console.dir(this)\"  this is btn / button  console.dir(object) new 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function Dog ( name, color, size )  this .name = name; this .color = color; this .size = size;  var Bibi = new Dog( '比比' , '棕色' , '小' ) console .log(Bibi) //函式本身就是一個物件 函式物件有一個特別的屬性 prototype //透過prototype所新增的屬性 就會做原型上的方法 函式物件特有的屬性 Dog.prototype.bark = function ( )  console .log( this .name, 'barking' )  // __proto__ 物件上 // prototype 函式上 // 調整原型的方法時 最好的方式是從函式本身的原型屬性上去調整 console .log(Dog.prototype === Bibi.__proto__) // true 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 var b = new String ( 'bcde' ); console .log(b) console .dir( String ) String .prototype.lastText = function ( )  return this [ this .length - 1 ];  console .log(b.lastText()); Number .prototype.secondPower = function ( )  return this * this ;  var num = 5 ; console .log(num.secondPower()); var date = new Date (); console .log(date); console .dir( Date ); Date .prototype.getFullDate = function ( )  var dd = String ( this .getDate()); var mm = String ( this .getMonth()+ 1 ); var yyyy = this .getFullYear(); var today = yyyy + '/' + mm + '/' +dd; return today;  console .log(date.getFullDate()); 繼承 Object.create() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 var a = [] //Object  Array  a (實體) //原型鏈上新增一個層級 //Object  Animal  Dog  實體 //Object  Animal  Cat  實體 // Object.create() 可以把其他物件作為原型使用 var dog =  name: '狗' , bark: function ( )  console .log( this .name + ' barking' )   var Corgi = Object .create(dog); //Corgi 把 dog 作為原型使用 Corgi.name = 'Welsh Corgi' console .log(Corgi) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 function Animal ( family )  this .kingdom = '動物界' this .family = family || '貓科'  Animal.prototype.move = function ( )  console .log( this .name + ' can move' )  function Dog ( name, size )  Animal.call( this , '犬科' ) this .name = name; this .size = size || 'small'  Dog.prototype = Object .create(Animal.prototype) Dog.prototype.constructor = Dog; // 狗的原型原本直接繼承於動物界的原型 constructor 會被覆蓋所以補回原本建構函式 Dog.prototype.bark = function ( )  console .log( this .name + ' barking' )  var Chihuahua = new Dog( 'Chihuahua' , 'small' ); console .log(Chihuahua) Chihuahua.bark(); Chihuahua.move(); Chihuahua.family // undefined 目前只有繼承原型prototype 但無繼承動物界的建構函式 Animal.call 如果瀏覽器不支援 Object.create() 這時候我們會寫一些程式來填補某些瀏覽器不支援的情況，我們把這些程式稱做 polyfill 屬性特徵 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 const obj =  a: 1 , b: 2 , c: 3  console .log(obj) //Object.defineProperty() // 屬性，調整屬性的特徵 // 1. 值 2. 可否寫入 3. 可否被刪除 4. 可否被列舉 //Object.defineProperty(物件, 屬性, 參數) // being explicit Object .defineProperty(obj, 'a' ,  enumerable: true , configurable: true , writable: false , value: 4 ); console .log(obj) // \"TypeError: Cannot assign to read only property 'a' of object '#Object' ( function ( )  'use strict' ; obj.a = 5 ; ()) Object.defineProperty() // 延伸的三種物件方法 preventExtensions seal Freeze 防止擴充 封裝 凍結 直接操作物件本身 Object.preventExtensions() Object.seal() 無法新增刪除 也無法配置特徵 但是可以調整屬性值 Object.freeze() 物件加上seal 且無法調整值 Setter And Getter 1 2 3 4 5 6 7 8 9 10 11 12 13 14 var wallet =  total: 100 , set save(price)  this .total = this .total + price / 2 , get save()  return this .total / 2   // Getter 取得特定值的方法 // Setter 存值的方法 // wallet.total = 300; wallet.save = 300 ; //透過Setter改變total的值 console .log(wallet.save) //250 / 2 = 125 Object.defineProperty() Object.getOwnPropertyDescriptor() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var wallet =  total: 100  Object .defineProperty(wallet, 'save' ,  configurable: true , set : function(price)  this .total = this .total + price / 2 , get : function()  return this .total / 2  ); wallet.save = 300 ; //透過Setter改變total的值 console .log(wallet); // save 250 / 2 = 125 console .log( Object .getOwnPropertyDescriptor(wallet, 'save' )) // [object Object]  // configurable: false, // enumerable: false, 1 2 3 4 5 6 7 8 // 取得陣列最後一個值 var a = [ 1 , 2 , 3 ]; Object .defineProperty( Array .prototype, 'lastest' ,  get : function()  return this [ this .length - 1 ];  ); console .log(a.lastest); //3 ##　vue https://github.com/vuejs/vue/blob/dev/dist/vue.js var emptyObject = Object.freeze({}); 確保空物件 1 2 3 4 5 6 7 8 var app = new Vue( //建構初始化 el: '#app' , data:  message: 'Hello Vue!'  ) console .log(app) 深入响应式原理 当你把一个普通的 JavaScript 对象传入 Vue 实例作为 data 选项，Vue 将遍历此对象所有的属性，并使用 Object.defineProperty 把这些属性全部转为 getter/setter 。Object.defineProperty 是 ES5 中一个无法 shim 的特性，这也就是 Vue 不支持 IE8 以及更低版本浏览器的原因。 Vue 理解之白话 getter/setter https://github.com/vuejs/vue/blob/dev/dist/vue.js proxySetter reactiveSetter app.obj === app._data.obj Vue 响应式核心就是，getter 的时候会收集依赖，setter 的时候会触发依赖更新 Let var的作用域在函數(function) 裡 let的作用域則是在區塊(block) 裡 1 2 3 4 for ( var i= 0 ;i 10 ;i++)  console .log(i)  console .log(i) //window.i 全域 汙染整個作用域 1 2 3 4 5 6 let name = 'Jacob'  let name = 'Hsu'  console .log(name) //Jacob const 利用 const 可以做到除了被凍結 還能不被賦值 1 2 3 4 5 6 7 8 9 10 11 12 13 const person =  name: '黨工' , money: 500  person.name = '網軍' Object .freeze(person); person.money = 1000 ; person = ; // devTool console person // var  person // const let TDZ 1 2 3 4 5 6 7 8 9 10 let arg = 'first' ;  //創造 let arg; // 暫時性死區 TDZ 有hoisting但鎖住 //執行 console .log(arg); // first let arg = 'second'  1 let 一樣有創造階段 2 但從創造到實際宣告的階段會出現TDZ 這個區域無法呼叫變數 3 有創造到執行的概念，但不會預先出現 (文件不會表明這與 var 的Hoisting相同概念) ES6 Airbnb Airbnb 規範文件 (ES6 版本)： https://github.com/airbnb/javascript ESLint 安裝教學： https://www.youtube.com/watch?v=WiommcFaYvY ? How would you like to use ESLint? (Use arrow keys) To check syntax only To check syntax and find problems ❯ To check syntax, find problems, and enforce code style 如果要使用 Airbnb 的規範，請選擇最後一個選項。 箭頭函數 //沒有傳統函數 arguments 參數 1 2 3 4 const nums = function ( )  console .log( arguments );  nums( 10 , 50 , 100 , 50 , 5 , 1 ); 1 2 3 4 const nums = () =  console .log( arguments ); //Uncaught ReferenceError  nums( 10 , 50 , 100 , 50 , 5 , 1 ); 1 2 3 4 const nums = ( ...arg ) =  console .log(arg); //Uncaught ReferenceError  nums( 10 , 50 , 100 , 50 , 5 , 1 ); 箭頭函式沒有自己的this 他的this指向外層 1 2 3 4 5 6 7 const ele = document .querySelector( 'p' ); ele.addEventListener( 'click' , function ( )  console .log( this ) ); ele.addEventListener( 'click' , () = console .log( this ) //指到不一樣的位置 window 全域 ); 箭頭函數 常見問題 不能直接回傳物件實字 1 2 3 4 const arrFn = () =  data : 1  console .log(arrFn()) //undefined const arrFnr = () = ( data : 1 ) console .log(arrFnr()) //data: 1 搭配判斷式不能直接接箭頭函式 1 2 3 4 5 let num = 0 const numFn = num || () = 1 ; console .log(numFn) const numFunction = num || ( ( ) = 1 ); console .log(numFunction) // 加括號修正 物件裡面搭配箭頭函樹會出錯 指向是不同的 1 2 3 4 5 6 7 8 const app = new Vue( data:  num: 1 , created: () =  console .log( this .num) //FAIL  ) 平均數 1 2 3 4 5 6 7 8 9 10 const average = function ( )  // arguments 是類陣列沒有陣列方法 用Array.from轉成純陣列 const nums = Array .from( arguments ); const total = nums.reduce( function ( acc, val )  return acc + val , 0 ); // 0 是第一次執行的前一個值 console .log(total); return total / nums.length;  console .log(average( 1 , 2 , 3 , 4 , 5 )) // 15 3 Array.from() Array.reduce() 1 2 const average = ( ...nums ) = nums.reduce( ( acc, val ) = acc + val, 0 ) / nums.length console .log(average( 1 , 2 , 3 , 4 , 5 )) // 3"},"core.html#JavaScript-直譯器轉換過程":{"title":"JavaScript &#x76F4;&#x8B6F;&#x5668;&#x8F49;&#x63DB;&#x904E;&#x7A0B;","path":"\\javascript\\core.html#JavaScript-直譯器轉換過程","body":"&#x8A9E;&#x6CD5;&#x57FA;&#x672C;&#x55AE;&#x5143;&#x5316;(Tokenizing) &#x62BD;&#x8C61;&#x7D50;&#x69CB;&#x6A39;AST(Abstract Syntax Tree) &#x4EE3;&#x78BC;&#x751F;&#x6210; esprima.org Parser produces the (beautiful) syntax tree Lexical Scope &#x8A9E;&#x6CD5;&#x4F5C;&#x7528;&#x57DF; (&#x975C;&#x614B;&#x4F5C;&#x7528;&#x57DF;) &#x76F4;&#x8B6F;&#x5668; &#x975C;&#x614B;&#x4F5C;&#x7528;&#x57DF; &#x8A9E;&#x6CD5;&#x89E3;&#x6790;&#x6642;&#x5C31;&#x5DF2;&#x7D93;&#x78BA;&#x5B9A;&#x4F5C;&#x7528;&#x57DF; &#x4E0D;&#x6703;&#x6539;&#x8B8A; JS&#x5C6C;&#x65BC;&#x975C;&#x614B;&#x4F5C;&#x7528;&#x57DF; &#x57F7;&#x884C; &#x52D5;&#x614B;&#x4F5C;&#x7528;&#x57DF; &#x4F5C;&#x7528;&#x57DF;&#x662F;&#x51FD;&#x6578;&#x8ABF;&#x7528;&#x6642;&#x624D;&#x6C7A;&#x5B9A; &#x63D0;&#x5347;&#xFF08;Hoisting&#xFF09; &#x5728;&#x5275;&#x9020;&#x74B0;&#x5883;&#x628A;&#x8A18;&#x61B6;&#x9AD4;&#x7A7A;&#x9593;&#x6E96;&#x5099;&#x597D;&#xFF0C;&#x9019;&#x500B;&#x6D41;&#x7A0B;&#x7A31;&#x70BA; &#x63D0;&#x5347;&#xFF08;Hoisting&#xFF09; var name = &apos;Jacob&apos; // &#x5275;&#x9020;&#x74B0;&#x5883; name&#x653E;&#x5165;&#x8A18;&#x61B6;&#x9AD4; name = undefined 1 2 var name; //&#x5148;&#x5BA3;&#x544A;&#x8B8A;&#x6578; name = &apos;Jacob&apos; //&#x7136;&#x5F8C;&#x624D;&#x8CE6;&#x4E88;&#x503C; &#x57F7;&#x884C;&#x968E;&#x6BB5; &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F; &#x5728;&#x5275;&#x9020;&#x968E;&#x6BB5;&#x5C31;&#x6703; &#x512A;&#x5148;&#x8F09;&#x5165; &#x5275;&#x9020;&#x968E;&#x6BB5;&#x51FD;&#x5F0F;&#x5DF2;&#x53EF;&#x4EE5;&#x904B;&#x884C; 1 2 3 4 var a = &apos;1&apos; function fn ( ) { ... } a undefined fn function .. 1 2 3 4 fn() //&#x653E;&#x524D;&#x9762;&#x53EF;&#x56E0;&#x70BA; &#x5275;&#x9020;&#x968E;&#x6BB5; &#x5DF2;&#x53EF;&#x4EE5;&#x904B;&#x884C; function fn ( ) { console .log() } 1 2 3 4 5 fn() //&#x653E;&#x524D;&#x9762; uncaught typeError: fn is not a function console .log(fn) //undefined var fn = function ( ) { //&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log() } &#x5275;&#x9020;&#x968E;&#x6BB5;&#x51FD;&#x5F0F;&#x512A;&#x5148; 1 2 3 4 5 6 7 8 9 10 11 12 //&#x5275;&#x9020;&#x968E;&#x6BB5; function fn ( ) { console .log( 1 ) } var fn; //&#x57F7;&#x884C;&#x968E;&#x6BB5; fn = function ( ) { console .log( 2 ) } console .log(fn) //2 &#x7A0B;&#x5F0F; 1 2 3 4 5 function fn ( ) { console .log(a) } var a = &apos;hello&apos; fn() &#x5BE6;&#x969B;&#x904B;&#x4F5C;&#x62C6;&#x89E3; 1 2 3 4 5 6 7 8 //&#x5275;&#x9020;&#x968E;&#x6BB5; function fn ( ) { console .log(a) } var a; //&#x57F7;&#x884C;&#x968E;&#x6BB5; a = &apos;hello&apos; fn () 1 2 3 4 5 6 7 8 9 function fn ( ) { if (a) { // undefined &#x5728; JavaScript &#x4EE3;&#x8868;&#x8457; false console .log( &apos;hello&apos; ) } else { console .log( &apos;jacob&apos; ) } } fn() //&#x56E0;&#x70BA;&#x51FD;&#x5F0F;&#x5728;&#x57F7;&#x884C;&#x6642;&#xFF0C;&#x8B8A;&#x6578;&#x9084;&#x6C92;&#x6709;&#x88AB;&#x8CE6;&#x4E88;&#x503C; var a = true &#x540C;&#x6B65;/&#x975E;&#x540C;&#x6B65; JS&#x662F;&#x55AE;&#x57F7;&#x884C;&#x5E8F; &#x662F;&#x540C;&#x6B65;&#x7684; &#x53EF;&#x5229;&#x7528; &#x4E8B;&#x4EF6;&#x4F47;&#x5217; &#x5BE6;&#x73FE;&#x975E;&#x540C;&#x6B65; &#x540C;&#x6B65;&#x6982;&#x5FF5;&#x7684;&#x5148;&#x8DD1;&#x5B8C; &#x975E;&#x540C;&#x6B65;&#x884C;&#x70BA;&#x5148;&#x79FB;&#x81F3;&#x4E8B;&#x4EF6;&#x4F47;&#x5217; 1 2 3 setTimeout( function ( ) { console .log( &apos;someone call&apos; ) }, 3000 ) //&#x4E0D;&#x7BA1;&#x5982;&#x4F55;&#x8ABF;&#x6574;&#x79D2;&#x6578; &#x90FD;&#x4E0D;&#x6703;&#x512A;&#x5148;&#x57F7;&#x884C; 0&#x4E5F;&#x662F;&#x6700;&#x5F8C;&#x57F7;&#x884C; LHS 1= true 1 = true &#x6703;&#x51FA;&#x73FE; left-hand side (LHS)&#xFF0C;&#x5BE6;&#x969B;&#x4E0A;&#x5728;&#x6B64;&#x5C31;&#x7121;&#x6CD5;&#x7E7C;&#x7E8C;&#x57F7;&#x884C; Uncaught ReferenceError: Invalid left-hand side in assignment console.log(a) not defined &#x4F46;&#x5176;&#x5BE6;&#x662F; RHS &#x932F;&#x8AA4;&#xFF0C;&#x53EA;&#x662F; JavaScript &#x4E26;&#x4E0D;&#x6703;&#x76F4;&#x63A5;&#x986F;&#x793A; RHS &#x932F;&#x8AA4; &#x9673;&#x8FF0;&#x5F0F; &#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F;&#x8207;&#x5BA3;&#x544A;&#x5206;&#x985E; &#x904B;&#x7B97;&#x5F0F;&#x8207;&#x904B;&#x7B97;&#x5B50; &#x6B63;&#x898F;&#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F; &#x4E0D;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 ) {} // &#x7269;&#x4EF6;&#x5BE6;&#x5B57; var a = { name : Jacob } &#x7ACB;&#x5373;&#x51FD;&#x5F0F; (&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#提升（Hoisting）":{"title":"&#x63D0;&#x5347;&#xFF08;Hoisting&#xFF09;","path":"\\javascript\\core.html#提升（Hoisting）","body":"&#x5728;&#x5275;&#x9020;&#x74B0;&#x5883;&#x628A;&#x8A18;&#x61B6;&#x9AD4;&#x7A7A;&#x9593;&#x6E96;&#x5099;&#x597D;&#xFF0C;&#x9019;&#x500B;&#x6D41;&#x7A0B;&#x7A31;&#x70BA; &#x63D0;&#x5347;&#xFF08;Hoisting&#xFF09; var name = &apos;Jacob&apos; // &#x5275;&#x9020;&#x74B0;&#x5883; name&#x653E;&#x5165;&#x8A18;&#x61B6;&#x9AD4; name = undefined 1 2 var name; //&#x5148;&#x5BA3;&#x544A;&#x8B8A;&#x6578; name = &apos;Jacob&apos; //&#x7136;&#x5F8C;&#x624D;&#x8CE6;&#x4E88;&#x503C; &#x57F7;&#x884C;&#x968E;&#x6BB5; &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F; &#x5728;&#x5275;&#x9020;&#x968E;&#x6BB5;&#x5C31;&#x6703; &#x512A;&#x5148;&#x8F09;&#x5165; &#x5275;&#x9020;&#x968E;&#x6BB5;&#x51FD;&#x5F0F;&#x5DF2;&#x53EF;&#x4EE5;&#x904B;&#x884C; 1 2 3 4 var a = &apos;1&apos; function fn ( ) { ... } a undefined fn function .. 1 2 3 4 fn() //&#x653E;&#x524D;&#x9762;&#x53EF;&#x56E0;&#x70BA; &#x5275;&#x9020;&#x968E;&#x6BB5; &#x5DF2;&#x53EF;&#x4EE5;&#x904B;&#x884C; function fn ( ) { console .log() } 1 2 3 4 5 fn() //&#x653E;&#x524D;&#x9762; uncaught typeError: fn is not a function console .log(fn) //undefined var fn = function ( ) { //&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log() } &#x5275;&#x9020;&#x968E;&#x6BB5;&#x51FD;&#x5F0F;&#x512A;&#x5148; 1 2 3 4 5 6 7 8 9 10 11 12 //&#x5275;&#x9020;&#x968E;&#x6BB5; function fn ( ) { console .log( 1 ) } var fn; //&#x57F7;&#x884C;&#x968E;&#x6BB5; fn = function ( ) { console .log( 2 ) } console .log(fn) //2 &#x7A0B;&#x5F0F; 1 2 3 4 5 function fn ( ) { console .log(a) } var a = &apos;hello&apos; fn() &#x5BE6;&#x969B;&#x904B;&#x4F5C;&#x62C6;&#x89E3; 1 2 3 4 5 6 7 8 //&#x5275;&#x9020;&#x968E;&#x6BB5; function fn ( ) { console .log(a) } var a; //&#x57F7;&#x884C;&#x968E;&#x6BB5; a = &apos;hello&apos; fn () 1 2 3 4 5 6 7 8 9 function fn ( ) { if (a) { // undefined &#x5728; JavaScript &#x4EE3;&#x8868;&#x8457; false console .log( &apos;hello&apos; ) } else { console .log( &apos;jacob&apos; ) } } fn() //&#x56E0;&#x70BA;&#x51FD;&#x5F0F;&#x5728;&#x57F7;&#x884C;&#x6642;&#xFF0C;&#x8B8A;&#x6578;&#x9084;&#x6C92;&#x6709;&#x88AB;&#x8CE6;&#x4E88;&#x503C; var a = true &#x540C;&#x6B65;/&#x975E;&#x540C;&#x6B65; JS&#x662F;&#x55AE;&#x57F7;&#x884C;&#x5E8F; &#x662F;&#x540C;&#x6B65;&#x7684; &#x53EF;&#x5229;&#x7528; &#x4E8B;&#x4EF6;&#x4F47;&#x5217; &#x5BE6;&#x73FE;&#x975E;&#x540C;&#x6B65; &#x540C;&#x6B65;&#x6982;&#x5FF5;&#x7684;&#x5148;&#x8DD1;&#x5B8C; &#x975E;&#x540C;&#x6B65;&#x884C;&#x70BA;&#x5148;&#x79FB;&#x81F3;&#x4E8B;&#x4EF6;&#x4F47;&#x5217; 1 2 3 setTimeout( function ( ) { console .log( &apos;someone call&apos; ) }, 3000 ) //&#x4E0D;&#x7BA1;&#x5982;&#x4F55;&#x8ABF;&#x6574;&#x79D2;&#x6578; &#x90FD;&#x4E0D;&#x6703;&#x512A;&#x5148;&#x57F7;&#x884C; 0&#x4E5F;&#x662F;&#x6700;&#x5F8C;&#x57F7;&#x884C; LHS 1= true 1 = true &#x6703;&#x51FA;&#x73FE; left-hand side (LHS)&#xFF0C;&#x5BE6;&#x969B;&#x4E0A;&#x5728;&#x6B64;&#x5C31;&#x7121;&#x6CD5;&#x7E7C;&#x7E8C;&#x57F7;&#x884C; Uncaught ReferenceError: Invalid left-hand side in assignment console.log(a) not defined &#x4F46;&#x5176;&#x5BE6;&#x662F; RHS &#x932F;&#x8AA4;&#xFF0C;&#x53EA;&#x662F; JavaScript &#x4E26;&#x4E0D;&#x6703;&#x76F4;&#x63A5;&#x986F;&#x793A; RHS &#x932F;&#x8AA4; &#x9673;&#x8FF0;&#x5F0F; &#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F;&#x8207;&#x5BA3;&#x544A;&#x5206;&#x985E; &#x904B;&#x7B97;&#x5F0F;&#x8207;&#x904B;&#x7B97;&#x5B50; &#x6B63;&#x898F;&#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F; &#x4E0D;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 ) {} // &#x7269;&#x4EF6;&#x5BE6;&#x5B57; var a = { name : Jacob } &#x7ACB;&#x5373;&#x51FD;&#x5F0F; (&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#同步-非同步":{"title":"&#x540C;&#x6B65;/&#x975E;&#x540C;&#x6B65;","path":"\\javascript\\core.html#同步-非同步","body":"JS&#x662F;&#x55AE;&#x57F7;&#x884C;&#x5E8F; &#x662F;&#x540C;&#x6B65;&#x7684; &#x53EF;&#x5229;&#x7528; &#x4E8B;&#x4EF6;&#x4F47;&#x5217; &#x5BE6;&#x73FE;&#x975E;&#x540C;&#x6B65; &#x540C;&#x6B65;&#x6982;&#x5FF5;&#x7684;&#x5148;&#x8DD1;&#x5B8C; &#x975E;&#x540C;&#x6B65;&#x884C;&#x70BA;&#x5148;&#x79FB;&#x81F3;&#x4E8B;&#x4EF6;&#x4F47;&#x5217; 1 2 3 setTimeout( function ( ) { console .log( &apos;someone call&apos; ) }, 3000 ) //&#x4E0D;&#x7BA1;&#x5982;&#x4F55;&#x8ABF;&#x6574;&#x79D2;&#x6578; &#x90FD;&#x4E0D;&#x6703;&#x512A;&#x5148;&#x57F7;&#x884C; 0&#x4E5F;&#x662F;&#x6700;&#x5F8C;&#x57F7;&#x884C; LHS 1= true 1 = true &#x6703;&#x51FA;&#x73FE; left-hand side (LHS)&#xFF0C;&#x5BE6;&#x969B;&#x4E0A;&#x5728;&#x6B64;&#x5C31;&#x7121;&#x6CD5;&#x7E7C;&#x7E8C;&#x57F7;&#x884C; Uncaught ReferenceError: Invalid left-hand side in assignment console.log(a) not defined &#x4F46;&#x5176;&#x5BE6;&#x662F; RHS &#x932F;&#x8AA4;&#xFF0C;&#x53EA;&#x662F; JavaScript &#x4E26;&#x4E0D;&#x6703;&#x76F4;&#x63A5;&#x986F;&#x793A; RHS &#x932F;&#x8AA4; &#x9673;&#x8FF0;&#x5F0F; &#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F;&#x8207;&#x5BA3;&#x544A;&#x5206;&#x985E; &#x904B;&#x7B97;&#x5F0F;&#x8207;&#x904B;&#x7B97;&#x5B50; &#x6B63;&#x898F;&#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F; &#x4E0D;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 ) {} // &#x7269;&#x4EF6;&#x5BE6;&#x5B57; var a = { name : Jacob } &#x7ACB;&#x5373;&#x51FD;&#x5F0F; (&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#LHS":{"title":"LHS","path":"\\javascript\\core.html#LHS","body":"1= true 1 = true &#x6703;&#x51FA;&#x73FE; left-hand side (LHS)&#xFF0C;&#x5BE6;&#x969B;&#x4E0A;&#x5728;&#x6B64;&#x5C31;&#x7121;&#x6CD5;&#x7E7C;&#x7E8C;&#x57F7;&#x884C; Uncaught ReferenceError: Invalid left-hand side in assignment console.log(a) not defined &#x4F46;&#x5176;&#x5BE6;&#x662F; RHS &#x932F;&#x8AA4;&#xFF0C;&#x53EA;&#x662F; JavaScript &#x4E26;&#x4E0D;&#x6703;&#x76F4;&#x63A5;&#x986F;&#x793A; RHS &#x932F;&#x8AA4; &#x9673;&#x8FF0;&#x5F0F; &#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F;&#x8207;&#x5BA3;&#x544A;&#x5206;&#x985E; &#x904B;&#x7B97;&#x5F0F;&#x8207;&#x904B;&#x7B97;&#x5B50; &#x6B63;&#x898F;&#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F; &#x4E0D;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 ) {} // &#x7269;&#x4EF6;&#x5BE6;&#x5B57; var a = { name : Jacob } &#x7ACB;&#x5373;&#x51FD;&#x5F0F; (&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#陳述式-表達式":{"title":"&#x9673;&#x8FF0;&#x5F0F; &#x8868;&#x9054;&#x5F0F;","path":"\\javascript\\core.html#陳述式-表達式","body":"&#x9673;&#x8FF0;&#x5F0F;&#x8207;&#x5BA3;&#x544A;&#x5206;&#x985E; &#x904B;&#x7B97;&#x5F0F;&#x8207;&#x904B;&#x7B97;&#x5B50; &#x6B63;&#x898F;&#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F; &#x4E0D;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 ) {} // &#x7269;&#x4EF6;&#x5BE6;&#x5B57; var a = { name : Jacob } &#x7ACB;&#x5373;&#x51FD;&#x5F0F; (&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#立即函式":{"title":"&#x7ACB;&#x5373;&#x51FD;&#x5F0F;","path":"\\javascript\\core.html#立即函式","body":"(&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#ASI-自動分號插入":{"title":"ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;","path":"\\javascript\\core.html#ASI-自動分號插入","body":"&#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#動態型別":{"title":"&#x52D5;&#x614B;&#x578B;&#x5225;","path":"\\javascript\\core.html#動態型別","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#原始型別及物件型別":{"title":"&#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225;","path":"\\javascript\\core.html#原始型別及物件型別","body":"&#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#運算子":{"title":"&#x904B;&#x7B97;&#x5B50;","path":"\\javascript\\core.html#運算子","body":"&#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#嚴格相等-寬鬆相等":{"title":"&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49;","path":"\\javascript\\core.html#嚴格相等-寬鬆相等","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#Truthy":{"title":"Truthy","path":"\\javascript\\core.html#Truthy","body":"Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#邏輯運算子及函式預設值":{"title":"&#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C;","path":"\\javascript\\core.html#邏輯運算子及函式預設值","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#物件記憶體空間":{"title":"&#x7269;&#x4EF6;&#x8A18;&#x61B6;&#x9AD4;&#x7A7A;&#x9593;","path":"\\javascript\\core.html#物件記憶體空間","body":"1 2 3 4 5 var person = { name: &apos;Jacob&apos; } var person2 = person person2 = &apos;Hsu&apos; //find 0x01 change name&apos;s value &#x53C3;&#x8003;&#x7269;&#x4EF6; Value 0x01 name Jacob &#x7269;&#x4EF6;&#x8B8A;&#x6578; Value person 0x01 person2 0x01 1 2 3 4 5 6 7 8 // &#x898B;&#x5927;&#x62EC;&#x865F; &#x751F;&#x6210;&#x65B0;&#x7684;&#x53C3;&#x8003;&#x7269;&#x4EF6; var company = { team: &apos;dev&apos; , member: { rd: &apos;Jacob&apos; qa: &apos;Claire&apos; } } &#x53C3;&#x8003;&#x7269;&#x4EF6; Value 0x01 team dev member 0x02 | 0x02 | | | rd | Jacob | | qa | Claire | &#x7269;&#x4EF6;&#x8B8A;&#x6578; Value company 0x01 &#x7D14;&#x503C;&#x7121;&#x6CD5;&#x65B0;&#x589E;&#x5C6C;&#x6027; js&#x5169;&#x7A2E;&#x578B;&#x5225; &#x4E0D;&#x662F;&#x7D14;&#x503C; &#x5C31;&#x662F;&#x7269;&#x4EF6; (function&#x662F;&#x7269;&#x4EF6;) 1 2 3 4 5 6 7 8 9 10 11 12 13 var newStr = &apos;myname&apos; //&#x7D14;&#x503C; newStr.name = &apos;Jacob&apos; console .log(newStr) var newStr2 = new String ( &apos;myname&apos; ) //&#x5EFA;&#x69CB;&#x5F0F; &#x7269;&#x4EF6; newStr2.name = &apos;Jacob&apos; console .log(newStr2) function callFn ( ) { console .log( &apos;fun&apos; ) } console .log(callFn) console .dir(callFn) //&#x770B;&#x898B;&#x7269;&#x4EF6;&#x6240;&#x6709;&#x5C6C;&#x6027;&#x5167;&#x5BB9; &#x7D14;&#x503C; &#x50B3;&#x503C;(call by value) &#x7269;&#x4EF6;(&#x9663;&#x5217; &#x51FD;&#x5F0F;)) &#x50B3;&#x53C3;&#x8003;(call by reference) &#x6DF1;&#x6DFA;&#x62F7;&#x8C9D; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 var family = { name: &apos;Hsu&apos; , member: { father: &apos;dad&apos; , monther: &apos;mom&apos; , other: &apos;someone&apos; } } var newFamily = {} for ( var key in family) { console .log(key, family[key]); newFamily[key] =family[key]; } newFamily.name = &apos;Chen&apos; console .log(family, newFamily) newFamily.member.other = &apos;stranger&apos; console .log(family, newFamily) //for in&#x53EA;&#x80FD;&#x505A;&#x7B2C;&#x4E00;&#x5C64;&#x7684;&#x8907;&#x88FD; &#x7B2C;&#x4E8C;&#x5C64;&#x662F;&#x50B3;&#x53C3;&#x8003;&#x7684;&#x5F62;&#x5F0F; //&#x6DFA;&#x5C64;&#x8907;&#x88FD; js for in, jQuery extend, ES6 assign //jQuery var newFamily2 = jQuery.extend({}, family); //ES6 var newFamily3 = Object .assign({}, family) //&#x6DF1;&#x5C64;&#x8907;&#x88FD; deep copy &#x6703;&#x5C07;&#x539F;&#x672C;&#x7684;&#x7269;&#x4EF6;&#x8F49;&#x6210;&#x5B57;&#x4E32;&#x518D;&#x8F49;&#x56DE;&#x4F86; &#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027;&#x6703;&#x6C92;&#x6709; //console.log(family, JSON.stringify(family)) console .log(family, JSON .parse( JSON .stringify(family) )) var newFamily4 = JSON .parse( JSON .stringify(family) ); console .log(family === newFamily4) newFamily4.name = &apos;Liao&apos; newFamily4.member.other = &apos;Deep&apos; console .log(family, newFamily4) //&#x5169;&#x8005;&#x5B8C;&#x5168;&#x7121;&#x95DC; &#x53C3;&#x8003;&#x4E5F;&#x90FD;&#x4E0D;&#x4E00;&#x6A23; &#x9663;&#x5217; &#x9663;&#x5217;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225;&#x7684;&#x4E00;&#x7A2E; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var newArray = [ 1 , &apos;Str&apos; , true , { name: &apos;Jacob&apos; } ]; console .log(newArray[ 3 ]); //[object Object] { name: Jacob} console .log(newArray .3 ); //error newArray.push( 5 ); newArray.name = &apos;Hsu&apos; ; //&#x7269;&#x4EF6;&#x53EF;&#x96A8;&#x610F;&#x589E;&#x52A0;&#x5C6C;&#x6027; newArray[ 5 ] = &apos;Chen&apos; ; newArray[ 7 ] = &apos;Liao&apos; ; //&#x9663;&#x5217;6 empty &#x53D6;&#x503C;undefined console .log(newArray); //name&#x4E0D;&#x5C6C;&#x65BC;&#x9663;&#x5217;&#x88E1;&#x9762;&#x7684;&#x9577;&#x5EA6; for ( var i= 0 ;inewArray.length;i++) { console .log(newArray[i]) } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a = [ 1 , 2 , 3 ]; console .log(a, a[ 1 ], a.length) //forEach &#x4E0D;&#x662F;&#x5BE6;&#x9AD4;&#x5C6C;&#x6027; &#x662F;&#x9663;&#x5217;&#x539F;&#x578B;&#x7684;&#x5C6C;&#x6027; a.forEach( function ( i ) { console .log(i) }); ( 3 )&#xA0;[ 1 , 2 , 3 ] 0 : 1 1 : 2 2 : 3 length: 3 // length &#x4E5F;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#x7684;&#x5C6C;&#x6027; __proto__: Array ( 0 ) //&#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x53EF;&#x4EE5;&#x900F;&#x904E;&#x9EDE;&#x904B;&#x7B97;&#x5B50;&#x4E0D;&#x65B7;&#x5411;&#x4E0A;&#x67E5;&#x627E;&#x53D6;&#x5F97;&#x65B9;&#x6CD5; &#x4F8B;:forEach ... __proto__: Object // &#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x7E7C;&#x627F;&#x7269;&#x4EF6;&#x7684;&#x539F;&#x578B; &#x6240;&#x4EE5;&#x9663;&#x5217;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7269;&#x4EF6;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5; &#x4F8B;:toString 1 2 3 4 5 6 7 8 var a = [ 1 , 2 , 3 ]; var b = [ 4 , 5 , 6 ]; //&#x65B0;&#x589E;&#x65B9;&#x6CD5;&#x5230;&#x539F;&#x578B;&#x93C8;&#x4E0A; a.__proto__.getLast = function ( ) { return this [ this .length -1 ]; //b[b.length-1] } console .log(a, b, a.getLast(), a.toString()) JSON JSON - &#x7DAD;&#x57FA;&#x767E;&#x79D1; &#x5118;&#x7BA1;JSON&#x662F;JavaScript&#x7684;&#x4E00;&#x500B;&#x5B50;&#x96C6;&#xFF0C;&#x4F46;JSON&#x662F;&#x7368;&#x7ACB;&#x65BC;&#x8A9E;&#x8A00;&#x7684;&#x6587;&#x5B57;&#x683C;&#x5F0F; JSON&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x4E00;&#x5B9A;&#x90FD;&#x662F;&#x5B57;&#x4E32;&#x7684;&#x5F62;&#x5F0F; &#x7269;&#x4EF6;&#x53EF;&#x4EE5;&#x7528;&#x55AE;&#x5F15;&#x865F; &apos; &#x4F46;JSON&#x4E00;&#x5F8B;&#x7528;&#x96D9;&#x5F15;&#x865F;  SON &#x7684;&#x683C;&#x5F0F;&#x662F;&#x975E;&#x5E38;&#x56B4;&#x683C;&#x7684;&#xFF0C;&#x591A;&#x4E00;&#x500B;&#x9017;&#x865F;&#x5C11;&#x4E00;&#x500B;&#x9017;&#x865F;&#xFF0C;&#x90FD;&#x6703;&#x5C0E;&#x81F4;&#x51FA;&#x73FE;&#x932F;&#x8AA4;&#xFF0C; &#x6240;&#x4EE5;&#x6700;&#x5F8C;&#x4E00;&#x7B46;&#x4E0D;&#x53EF;&#x591A;&#x4E86;&#x4E00;&#x500B;&#x9017;&#x865F; &#x900F;&#x904E; JSON.parse() &#x51FA;&#x4F86;&#x7684;&#x8CC7;&#x6599;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x7269;&#x4EF6;&#x6703;&#x6709;&#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027; &#x5F8C;&#x7E8C;&#x7684;&#x503C;&#x8B8A;&#x66F4;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x503C;&#x4E5F;&#x6703;&#x8B8A;&#x66F4; &#x539F;&#x751F;AJAX&#x8B80;JSON 1 2 3 4 5 6 7 8 9 10 //&#x539F;&#x751F;AJAX function getData ( ) { console .log( this .response) var data = JSON .parse( this .response); console .log(data); } var oReq = new XMLHttpRequest(); oReq.addEventListener( load , getData); oReq.open( GET , family.json ) //&#x50B3;&#x5165;&#x7684;&#x5B57;&#x4E32; oReq.send(); &#x900F;&#x904E;&#x958B;&#x767C;&#x5DE5;&#x5177;Network&#x53EF;&#x4EE5;&#x770B;&#x7D50;&#x679C; function &#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#純值無法新增屬性":{"title":"&#x7D14;&#x503C;&#x7121;&#x6CD5;&#x65B0;&#x589E;&#x5C6C;&#x6027;","path":"\\javascript\\core.html#純值無法新增屬性","body":"js&#x5169;&#x7A2E;&#x578B;&#x5225; &#x4E0D;&#x662F;&#x7D14;&#x503C; &#x5C31;&#x662F;&#x7269;&#x4EF6; (function&#x662F;&#x7269;&#x4EF6;) 1 2 3 4 5 6 7 8 9 10 11 12 13 var newStr = &apos;myname&apos; //&#x7D14;&#x503C; newStr.name = &apos;Jacob&apos; console .log(newStr) var newStr2 = new String ( &apos;myname&apos; ) //&#x5EFA;&#x69CB;&#x5F0F; &#x7269;&#x4EF6; newStr2.name = &apos;Jacob&apos; console .log(newStr2) function callFn ( ) { console .log( &apos;fun&apos; ) } console .log(callFn) console .dir(callFn) //&#x770B;&#x898B;&#x7269;&#x4EF6;&#x6240;&#x6709;&#x5C6C;&#x6027;&#x5167;&#x5BB9; &#x7D14;&#x503C; &#x50B3;&#x503C;(call by value) &#x7269;&#x4EF6;(&#x9663;&#x5217; &#x51FD;&#x5F0F;)) &#x50B3;&#x53C3;&#x8003;(call by reference) &#x6DF1;&#x6DFA;&#x62F7;&#x8C9D; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 var family = { name: &apos;Hsu&apos; , member: { father: &apos;dad&apos; , monther: &apos;mom&apos; , other: &apos;someone&apos; } } var newFamily = {} for ( var key in family) { console .log(key, family[key]); newFamily[key] =family[key]; } newFamily.name = &apos;Chen&apos; console .log(family, newFamily) newFamily.member.other = &apos;stranger&apos; console .log(family, newFamily) //for in&#x53EA;&#x80FD;&#x505A;&#x7B2C;&#x4E00;&#x5C64;&#x7684;&#x8907;&#x88FD; &#x7B2C;&#x4E8C;&#x5C64;&#x662F;&#x50B3;&#x53C3;&#x8003;&#x7684;&#x5F62;&#x5F0F; //&#x6DFA;&#x5C64;&#x8907;&#x88FD; js for in, jQuery extend, ES6 assign //jQuery var newFamily2 = jQuery.extend({}, family); //ES6 var newFamily3 = Object .assign({}, family) //&#x6DF1;&#x5C64;&#x8907;&#x88FD; deep copy &#x6703;&#x5C07;&#x539F;&#x672C;&#x7684;&#x7269;&#x4EF6;&#x8F49;&#x6210;&#x5B57;&#x4E32;&#x518D;&#x8F49;&#x56DE;&#x4F86; &#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027;&#x6703;&#x6C92;&#x6709; //console.log(family, JSON.stringify(family)) console .log(family, JSON .parse( JSON .stringify(family) )) var newFamily4 = JSON .parse( JSON .stringify(family) ); console .log(family === newFamily4) newFamily4.name = &apos;Liao&apos; newFamily4.member.other = &apos;Deep&apos; console .log(family, newFamily4) //&#x5169;&#x8005;&#x5B8C;&#x5168;&#x7121;&#x95DC; &#x53C3;&#x8003;&#x4E5F;&#x90FD;&#x4E0D;&#x4E00;&#x6A23; &#x9663;&#x5217; &#x9663;&#x5217;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225;&#x7684;&#x4E00;&#x7A2E; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var newArray = [ 1 , &apos;Str&apos; , true , { name: &apos;Jacob&apos; } ]; console .log(newArray[ 3 ]); //[object Object] { name: Jacob} console .log(newArray .3 ); //error newArray.push( 5 ); newArray.name = &apos;Hsu&apos; ; //&#x7269;&#x4EF6;&#x53EF;&#x96A8;&#x610F;&#x589E;&#x52A0;&#x5C6C;&#x6027; newArray[ 5 ] = &apos;Chen&apos; ; newArray[ 7 ] = &apos;Liao&apos; ; //&#x9663;&#x5217;6 empty &#x53D6;&#x503C;undefined console .log(newArray); //name&#x4E0D;&#x5C6C;&#x65BC;&#x9663;&#x5217;&#x88E1;&#x9762;&#x7684;&#x9577;&#x5EA6; for ( var i= 0 ;inewArray.length;i++) { console .log(newArray[i]) } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a = [ 1 , 2 , 3 ]; console .log(a, a[ 1 ], a.length) //forEach &#x4E0D;&#x662F;&#x5BE6;&#x9AD4;&#x5C6C;&#x6027; &#x662F;&#x9663;&#x5217;&#x539F;&#x578B;&#x7684;&#x5C6C;&#x6027; a.forEach( function ( i ) { console .log(i) }); ( 3 )&#xA0;[ 1 , 2 , 3 ] 0 : 1 1 : 2 2 : 3 length: 3 // length &#x4E5F;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#x7684;&#x5C6C;&#x6027; __proto__: Array ( 0 ) //&#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x53EF;&#x4EE5;&#x900F;&#x904E;&#x9EDE;&#x904B;&#x7B97;&#x5B50;&#x4E0D;&#x65B7;&#x5411;&#x4E0A;&#x67E5;&#x627E;&#x53D6;&#x5F97;&#x65B9;&#x6CD5; &#x4F8B;:forEach ... __proto__: Object // &#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x7E7C;&#x627F;&#x7269;&#x4EF6;&#x7684;&#x539F;&#x578B; &#x6240;&#x4EE5;&#x9663;&#x5217;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7269;&#x4EF6;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5; &#x4F8B;:toString 1 2 3 4 5 6 7 8 var a = [ 1 , 2 , 3 ]; var b = [ 4 , 5 , 6 ]; //&#x65B0;&#x589E;&#x65B9;&#x6CD5;&#x5230;&#x539F;&#x578B;&#x93C8;&#x4E0A; a.__proto__.getLast = function ( ) { return this [ this .length -1 ]; //b[b.length-1] } console .log(a, b, a.getLast(), a.toString()) JSON JSON - &#x7DAD;&#x57FA;&#x767E;&#x79D1; &#x5118;&#x7BA1;JSON&#x662F;JavaScript&#x7684;&#x4E00;&#x500B;&#x5B50;&#x96C6;&#xFF0C;&#x4F46;JSON&#x662F;&#x7368;&#x7ACB;&#x65BC;&#x8A9E;&#x8A00;&#x7684;&#x6587;&#x5B57;&#x683C;&#x5F0F; JSON&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x4E00;&#x5B9A;&#x90FD;&#x662F;&#x5B57;&#x4E32;&#x7684;&#x5F62;&#x5F0F; &#x7269;&#x4EF6;&#x53EF;&#x4EE5;&#x7528;&#x55AE;&#x5F15;&#x865F; &apos; &#x4F46;JSON&#x4E00;&#x5F8B;&#x7528;&#x96D9;&#x5F15;&#x865F;  SON &#x7684;&#x683C;&#x5F0F;&#x662F;&#x975E;&#x5E38;&#x56B4;&#x683C;&#x7684;&#xFF0C;&#x591A;&#x4E00;&#x500B;&#x9017;&#x865F;&#x5C11;&#x4E00;&#x500B;&#x9017;&#x865F;&#xFF0C;&#x90FD;&#x6703;&#x5C0E;&#x81F4;&#x51FA;&#x73FE;&#x932F;&#x8AA4;&#xFF0C; &#x6240;&#x4EE5;&#x6700;&#x5F8C;&#x4E00;&#x7B46;&#x4E0D;&#x53EF;&#x591A;&#x4E86;&#x4E00;&#x500B;&#x9017;&#x865F; &#x900F;&#x904E; JSON.parse() &#x51FA;&#x4F86;&#x7684;&#x8CC7;&#x6599;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x7269;&#x4EF6;&#x6703;&#x6709;&#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027; &#x5F8C;&#x7E8C;&#x7684;&#x503C;&#x8B8A;&#x66F4;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x503C;&#x4E5F;&#x6703;&#x8B8A;&#x66F4; &#x539F;&#x751F;AJAX&#x8B80;JSON 1 2 3 4 5 6 7 8 9 10 //&#x539F;&#x751F;AJAX function getData ( ) { console .log( this .response) var data = JSON .parse( this .response); console .log(data); } var oReq = new XMLHttpRequest(); oReq.addEventListener( load , getData); oReq.open( GET , family.json ) //&#x50B3;&#x5165;&#x7684;&#x5B57;&#x4E32; oReq.send(); &#x900F;&#x904E;&#x958B;&#x767C;&#x5DE5;&#x5177;Network&#x53EF;&#x4EE5;&#x770B;&#x7D50;&#x679C; function &#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#深淺拷貝":{"title":"&#x6DF1;&#x6DFA;&#x62F7;&#x8C9D;","path":"\\javascript\\core.html#深淺拷貝","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 var family = { name: &apos;Hsu&apos; , member: { father: &apos;dad&apos; , monther: &apos;mom&apos; , other: &apos;someone&apos; } } var newFamily = {} for ( var key in family) { console .log(key, family[key]); newFamily[key] =family[key]; } newFamily.name = &apos;Chen&apos; console .log(family, newFamily) newFamily.member.other = &apos;stranger&apos; console .log(family, newFamily) //for in&#x53EA;&#x80FD;&#x505A;&#x7B2C;&#x4E00;&#x5C64;&#x7684;&#x8907;&#x88FD; &#x7B2C;&#x4E8C;&#x5C64;&#x662F;&#x50B3;&#x53C3;&#x8003;&#x7684;&#x5F62;&#x5F0F; //&#x6DFA;&#x5C64;&#x8907;&#x88FD; js for in, jQuery extend, ES6 assign //jQuery var newFamily2 = jQuery.extend({}, family); //ES6 var newFamily3 = Object .assign({}, family) //&#x6DF1;&#x5C64;&#x8907;&#x88FD; deep copy &#x6703;&#x5C07;&#x539F;&#x672C;&#x7684;&#x7269;&#x4EF6;&#x8F49;&#x6210;&#x5B57;&#x4E32;&#x518D;&#x8F49;&#x56DE;&#x4F86; &#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027;&#x6703;&#x6C92;&#x6709; //console.log(family, JSON.stringify(family)) console .log(family, JSON .parse( JSON .stringify(family) )) var newFamily4 = JSON .parse( JSON .stringify(family) ); console .log(family === newFamily4) newFamily4.name = &apos;Liao&apos; newFamily4.member.other = &apos;Deep&apos; console .log(family, newFamily4) //&#x5169;&#x8005;&#x5B8C;&#x5168;&#x7121;&#x95DC; &#x53C3;&#x8003;&#x4E5F;&#x90FD;&#x4E0D;&#x4E00;&#x6A23; &#x9663;&#x5217; &#x9663;&#x5217;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225;&#x7684;&#x4E00;&#x7A2E; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var newArray = [ 1 , &apos;Str&apos; , true , { name: &apos;Jacob&apos; } ]; console .log(newArray[ 3 ]); //[object Object] { name: Jacob} console .log(newArray .3 ); //error newArray.push( 5 ); newArray.name = &apos;Hsu&apos; ; //&#x7269;&#x4EF6;&#x53EF;&#x96A8;&#x610F;&#x589E;&#x52A0;&#x5C6C;&#x6027; newArray[ 5 ] = &apos;Chen&apos; ; newArray[ 7 ] = &apos;Liao&apos; ; //&#x9663;&#x5217;6 empty &#x53D6;&#x503C;undefined console .log(newArray); //name&#x4E0D;&#x5C6C;&#x65BC;&#x9663;&#x5217;&#x88E1;&#x9762;&#x7684;&#x9577;&#x5EA6; for ( var i= 0 ;inewArray.length;i++) { console .log(newArray[i]) } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a = [ 1 , 2 , 3 ]; console .log(a, a[ 1 ], a.length) //forEach &#x4E0D;&#x662F;&#x5BE6;&#x9AD4;&#x5C6C;&#x6027; &#x662F;&#x9663;&#x5217;&#x539F;&#x578B;&#x7684;&#x5C6C;&#x6027; a.forEach( function ( i ) { console .log(i) }); ( 3 )&#xA0;[ 1 , 2 , 3 ] 0 : 1 1 : 2 2 : 3 length: 3 // length &#x4E5F;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#x7684;&#x5C6C;&#x6027; __proto__: Array ( 0 ) //&#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x53EF;&#x4EE5;&#x900F;&#x904E;&#x9EDE;&#x904B;&#x7B97;&#x5B50;&#x4E0D;&#x65B7;&#x5411;&#x4E0A;&#x67E5;&#x627E;&#x53D6;&#x5F97;&#x65B9;&#x6CD5; &#x4F8B;:forEach ... __proto__: Object // &#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x7E7C;&#x627F;&#x7269;&#x4EF6;&#x7684;&#x539F;&#x578B; &#x6240;&#x4EE5;&#x9663;&#x5217;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7269;&#x4EF6;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5; &#x4F8B;:toString 1 2 3 4 5 6 7 8 var a = [ 1 , 2 , 3 ]; var b = [ 4 , 5 , 6 ]; //&#x65B0;&#x589E;&#x65B9;&#x6CD5;&#x5230;&#x539F;&#x578B;&#x93C8;&#x4E0A; a.__proto__.getLast = function ( ) { return this [ this .length -1 ]; //b[b.length-1] } console .log(a, b, a.getLast(), a.toString()) JSON JSON - &#x7DAD;&#x57FA;&#x767E;&#x79D1; &#x5118;&#x7BA1;JSON&#x662F;JavaScript&#x7684;&#x4E00;&#x500B;&#x5B50;&#x96C6;&#xFF0C;&#x4F46;JSON&#x662F;&#x7368;&#x7ACB;&#x65BC;&#x8A9E;&#x8A00;&#x7684;&#x6587;&#x5B57;&#x683C;&#x5F0F; JSON&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x4E00;&#x5B9A;&#x90FD;&#x662F;&#x5B57;&#x4E32;&#x7684;&#x5F62;&#x5F0F; &#x7269;&#x4EF6;&#x53EF;&#x4EE5;&#x7528;&#x55AE;&#x5F15;&#x865F; &apos; &#x4F46;JSON&#x4E00;&#x5F8B;&#x7528;&#x96D9;&#x5F15;&#x865F;  SON &#x7684;&#x683C;&#x5F0F;&#x662F;&#x975E;&#x5E38;&#x56B4;&#x683C;&#x7684;&#xFF0C;&#x591A;&#x4E00;&#x500B;&#x9017;&#x865F;&#x5C11;&#x4E00;&#x500B;&#x9017;&#x865F;&#xFF0C;&#x90FD;&#x6703;&#x5C0E;&#x81F4;&#x51FA;&#x73FE;&#x932F;&#x8AA4;&#xFF0C; &#x6240;&#x4EE5;&#x6700;&#x5F8C;&#x4E00;&#x7B46;&#x4E0D;&#x53EF;&#x591A;&#x4E86;&#x4E00;&#x500B;&#x9017;&#x865F; &#x900F;&#x904E; JSON.parse() &#x51FA;&#x4F86;&#x7684;&#x8CC7;&#x6599;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x7269;&#x4EF6;&#x6703;&#x6709;&#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027; &#x5F8C;&#x7E8C;&#x7684;&#x503C;&#x8B8A;&#x66F4;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x503C;&#x4E5F;&#x6703;&#x8B8A;&#x66F4; &#x539F;&#x751F;AJAX&#x8B80;JSON 1 2 3 4 5 6 7 8 9 10 //&#x539F;&#x751F;AJAX function getData ( ) { console .log( this .response) var data = JSON .parse( this .response); console .log(data); } var oReq = new XMLHttpRequest(); oReq.addEventListener( load , getData); oReq.open( GET , family.json ) //&#x50B3;&#x5165;&#x7684;&#x5B57;&#x4E32; oReq.send(); &#x900F;&#x904E;&#x958B;&#x767C;&#x5DE5;&#x5177;Network&#x53EF;&#x4EE5;&#x770B;&#x7D50;&#x679C; function &#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#陣列":{"title":"&#x9663;&#x5217;","path":"\\javascript\\core.html#陣列","body":"&#x9663;&#x5217;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225;&#x7684;&#x4E00;&#x7A2E; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var newArray = [ 1 , &apos;Str&apos; , true , { name: &apos;Jacob&apos; } ]; console .log(newArray[ 3 ]); //[object Object] { name: Jacob} console .log(newArray .3 ); //error newArray.push( 5 ); newArray.name = &apos;Hsu&apos; ; //&#x7269;&#x4EF6;&#x53EF;&#x96A8;&#x610F;&#x589E;&#x52A0;&#x5C6C;&#x6027; newArray[ 5 ] = &apos;Chen&apos; ; newArray[ 7 ] = &apos;Liao&apos; ; //&#x9663;&#x5217;6 empty &#x53D6;&#x503C;undefined console .log(newArray); //name&#x4E0D;&#x5C6C;&#x65BC;&#x9663;&#x5217;&#x88E1;&#x9762;&#x7684;&#x9577;&#x5EA6; for ( var i= 0 ;inewArray.length;i++) { console .log(newArray[i]) } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a = [ 1 , 2 , 3 ]; console .log(a, a[ 1 ], a.length) //forEach &#x4E0D;&#x662F;&#x5BE6;&#x9AD4;&#x5C6C;&#x6027; &#x662F;&#x9663;&#x5217;&#x539F;&#x578B;&#x7684;&#x5C6C;&#x6027; a.forEach( function ( i ) { console .log(i) }); ( 3 )&#xA0;[ 1 , 2 , 3 ] 0 : 1 1 : 2 2 : 3 length: 3 // length &#x4E5F;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#x7684;&#x5C6C;&#x6027; __proto__: Array ( 0 ) //&#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x53EF;&#x4EE5;&#x900F;&#x904E;&#x9EDE;&#x904B;&#x7B97;&#x5B50;&#x4E0D;&#x65B7;&#x5411;&#x4E0A;&#x67E5;&#x627E;&#x53D6;&#x5F97;&#x65B9;&#x6CD5; &#x4F8B;:forEach ... __proto__: Object // &#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x7E7C;&#x627F;&#x7269;&#x4EF6;&#x7684;&#x539F;&#x578B; &#x6240;&#x4EE5;&#x9663;&#x5217;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7269;&#x4EF6;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5; &#x4F8B;:toString 1 2 3 4 5 6 7 8 var a = [ 1 , 2 , 3 ]; var b = [ 4 , 5 , 6 ]; //&#x65B0;&#x589E;&#x65B9;&#x6CD5;&#x5230;&#x539F;&#x578B;&#x93C8;&#x4E0A; a.__proto__.getLast = function ( ) { return this [ this .length -1 ]; //b[b.length-1] } console .log(a, b, a.getLast(), a.toString()) JSON JSON - &#x7DAD;&#x57FA;&#x767E;&#x79D1; &#x5118;&#x7BA1;JSON&#x662F;JavaScript&#x7684;&#x4E00;&#x500B;&#x5B50;&#x96C6;&#xFF0C;&#x4F46;JSON&#x662F;&#x7368;&#x7ACB;&#x65BC;&#x8A9E;&#x8A00;&#x7684;&#x6587;&#x5B57;&#x683C;&#x5F0F; JSON&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x4E00;&#x5B9A;&#x90FD;&#x662F;&#x5B57;&#x4E32;&#x7684;&#x5F62;&#x5F0F; &#x7269;&#x4EF6;&#x53EF;&#x4EE5;&#x7528;&#x55AE;&#x5F15;&#x865F; &apos; &#x4F46;JSON&#x4E00;&#x5F8B;&#x7528;&#x96D9;&#x5F15;&#x865F;  SON &#x7684;&#x683C;&#x5F0F;&#x662F;&#x975E;&#x5E38;&#x56B4;&#x683C;&#x7684;&#xFF0C;&#x591A;&#x4E00;&#x500B;&#x9017;&#x865F;&#x5C11;&#x4E00;&#x500B;&#x9017;&#x865F;&#xFF0C;&#x90FD;&#x6703;&#x5C0E;&#x81F4;&#x51FA;&#x73FE;&#x932F;&#x8AA4;&#xFF0C; &#x6240;&#x4EE5;&#x6700;&#x5F8C;&#x4E00;&#x7B46;&#x4E0D;&#x53EF;&#x591A;&#x4E86;&#x4E00;&#x500B;&#x9017;&#x865F; &#x900F;&#x904E; JSON.parse() &#x51FA;&#x4F86;&#x7684;&#x8CC7;&#x6599;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x7269;&#x4EF6;&#x6703;&#x6709;&#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027; &#x5F8C;&#x7E8C;&#x7684;&#x503C;&#x8B8A;&#x66F4;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x503C;&#x4E5F;&#x6703;&#x8B8A;&#x66F4; &#x539F;&#x751F;AJAX&#x8B80;JSON 1 2 3 4 5 6 7 8 9 10 //&#x539F;&#x751F;AJAX function getData ( ) { console .log( this .response) var data = JSON .parse( this .response); console .log(data); } var oReq = new XMLHttpRequest(); oReq.addEventListener( load , getData); oReq.open( GET , family.json ) //&#x50B3;&#x5165;&#x7684;&#x5B57;&#x4E32; oReq.send(); &#x900F;&#x904E;&#x958B;&#x767C;&#x5DE5;&#x5177;Network&#x53EF;&#x4EE5;&#x770B;&#x7D50;&#x679C; function &#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#JSON":{"title":"JSON","path":"\\javascript\\core.html#JSON","body":"JSON - &#x7DAD;&#x57FA;&#x767E;&#x79D1; &#x5118;&#x7BA1;JSON&#x662F;JavaScript&#x7684;&#x4E00;&#x500B;&#x5B50;&#x96C6;&#xFF0C;&#x4F46;JSON&#x662F;&#x7368;&#x7ACB;&#x65BC;&#x8A9E;&#x8A00;&#x7684;&#x6587;&#x5B57;&#x683C;&#x5F0F; JSON&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x4E00;&#x5B9A;&#x90FD;&#x662F;&#x5B57;&#x4E32;&#x7684;&#x5F62;&#x5F0F; &#x7269;&#x4EF6;&#x53EF;&#x4EE5;&#x7528;&#x55AE;&#x5F15;&#x865F; &apos; &#x4F46;JSON&#x4E00;&#x5F8B;&#x7528;&#x96D9;&#x5F15;&#x865F;  SON &#x7684;&#x683C;&#x5F0F;&#x662F;&#x975E;&#x5E38;&#x56B4;&#x683C;&#x7684;&#xFF0C;&#x591A;&#x4E00;&#x500B;&#x9017;&#x865F;&#x5C11;&#x4E00;&#x500B;&#x9017;&#x865F;&#xFF0C;&#x90FD;&#x6703;&#x5C0E;&#x81F4;&#x51FA;&#x73FE;&#x932F;&#x8AA4;&#xFF0C; &#x6240;&#x4EE5;&#x6700;&#x5F8C;&#x4E00;&#x7B46;&#x4E0D;&#x53EF;&#x591A;&#x4E86;&#x4E00;&#x500B;&#x9017;&#x865F; &#x900F;&#x904E; JSON.parse() &#x51FA;&#x4F86;&#x7684;&#x8CC7;&#x6599;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x7269;&#x4EF6;&#x6703;&#x6709;&#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027; &#x5F8C;&#x7E8C;&#x7684;&#x503C;&#x8B8A;&#x66F4;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x503C;&#x4E5F;&#x6703;&#x8B8A;&#x66F4; &#x539F;&#x751F;AJAX&#x8B80;JSON 1 2 3 4 5 6 7 8 9 10 //&#x539F;&#x751F;AJAX function getData ( ) { console .log( this .response) var data = JSON .parse( this .response); console .log(data); } var oReq = new XMLHttpRequest(); oReq.addEventListener( load , getData); oReq.open( GET , family.json ) //&#x50B3;&#x5165;&#x7684;&#x5B57;&#x4E32; oReq.send(); &#x900F;&#x904E;&#x958B;&#x767C;&#x5DE5;&#x5177;Network&#x53EF;&#x4EE5;&#x770B;&#x7D50;&#x679C; function &#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#function":{"title":"function","path":"\\javascript\\core.html#function","body":"&#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#立即函式-IIFE":{"title":"&#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE)","path":"\\javascript\\core.html#立即函式-IIFE","body":"&#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#參數":{"title":"&#x53C3;&#x6578;","path":"\\javascript\\core.html#參數","body":"1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#閉包-Closure":{"title":"&#x9589;&#x5305; Closure","path":"\\javascript\\core.html#閉包-Closure","body":"1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#函式工廠":{"title":"&#x51FD;&#x5F0F;&#x5DE5;&#x5EE0;","path":"\\javascript\\core.html#函式工廠","body":"&#x7D66;&#x4E0D;&#x540C;&#x7684;&#x503C;&#x3000;&#x505A;&#x76F8;&#x540C;&#x7684;&#x4E8B;&#x60C5; 1 2 3 4 5 6 7 8 9 function storeMoney ( initVal ) { var money = initVal || 1000 return function ( price ) { money = money + price; return money; } } var MingMoney = storeMoney( 100 ); console .log(MingMoney( 500 )) // 600 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 function storeMoney ( initVal ) { var money = initVal || 1000 // &#x79C1;&#x6709;&#x65B9;&#x6CD5; &#x53EF;&#x4EE5;&#x505A;&#x5F88;&#x591A;&#x4E0D;&#x540C;&#x4E8B;&#x60C5; return { increase: function ( price ) { money += price }, decrease: function ( price ) { money -= price }, value: function ( ) { return money; } } } var MingMoney = storeMoney( 100 ); MingMoney.increase( 100 ); MingMoney.increase( 25 ); MingMoney.decrease( 25 ); console .log(MingMoney.value()) // 200"},"core.html#this":{"title":"this","path":"\\javascript\\core.html#this","body":"chrome / devTool / Sources / || &#x66AB;&#x505C;&#x6309;&#x9215; / &#x9032;&#x5165;&#x57F7;&#x884C;&#x5806;&#x758A; this &#x70BA;&#x95DC;&#x9375;&#x5B57; &#x5728;&#x6BCF;&#x500B;&#x57F7;&#x884C;&#x74B0;&#x5883;&#x5B58;&#x5728; this &#x7684;&#x8ABF;&#x7528;&#x65B9;&#x5F0F; &#x4F5C;&#x70BA;&#x7269;&#x4EF6;&#x65B9;&#x6CD5; &#x95DC;&#x6CE8;&#x5728;&#x54EA;&#x500B;&#x7269;&#x4EF6;&#x4E0B;&#x547C;&#x53EB; Object.fn() this &#x6307;&#x5411; Object &#x7C21;&#x6613;&#x547C;&#x53EB; (&#x4E0D;&#x5EFA;&#x8B70;&#x8ABF;&#x7528;this) bind, apply, call &#x65B9;&#x6CD5; new DOM&#x4E8B;&#x4EF6;&#x8655;&#x7406;&#x5668; &#x7BAD;&#x982D;&#x51FD;&#x5F0F;(ES6) simple call &#x7C21;&#x6613;&#x547C;&#x53EB; 1 2 3 4 5 6 var myName = &apos;Jacob&apos; ; function callName ( ) { console .log( this , this .myName) } callName() // this - window // &#x76E1;&#x53EF;&#x80FD;&#x4E0D;&#x8981;&#x4F7F;&#x7528;simple call&#x7684;this 1 2 3 4 5 6 7 ( function ( ) { console .log( this .myName); function callFn ( ) { console .log( this .myName); } callFn(); //simple call &#x770B;&#x5230;&#x51FD;&#x5F0F;&#x662F;&#x76F4;&#x63A5;&#x57F7;&#x884C;&#x7684; &#x5C31;&#x662F;&#x7C21;&#x6613;&#x547C;&#x53EB; &#x57F7;&#x884C;&#x9589;&#x5305;&#x5167;&#x51FD;&#x5F0F;&#x4E5F;&#x662F; })(); 1 2 3 4 5 6 7 8 // callback function myCb ( callback ) { var money = 100 return callback(money) } myCb( function ( money ) { console .log( this .myName, money+ 100 ) }) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 var a = [ 1 , 2 , 3 ] // forEach &#x5F8C;&#x65B9;&#x662F;&#x63D2;&#x5165;&#x4E00;&#x500B;callback&#x51FD;&#x5F0F; a.forEach( function ( i ) { console .log( this .myName, i); }) var family = { myName: &apos;Hsu&apos; , callName: function ( ) { // var self = this; // vm , that setTimeout( function ( ) { console .log( this .myName) // simple call this-window &apos;Jacob&apos; &#x7121;&#x6CD5;&#x53D6;&#x5F97;&#x7269;&#x4EF6;&#x7684;myName &apos;Hsu&apos; console .log(self.myName) // &#x7269;&#x4EF6;&#x7684;myName &apos;Hsu&apos; }, 1000 ) } family.callName(); } Call, appply, bind 1 2 3 4 5 6 7 8 9 10 11 12 13 var team = { myName: &apos;Jacob&apos; } function fn ( para1, para2 ) { console .log( this , para1, para2) } fn( 1 , 2 ); //simple call fn.call(team, 1 , 2 ); // call &#x662F;&#x7ACB;&#x523B;&#x57F7;&#x884C; fn.apply(team, [ 3 , 4 ]); // apply &#x662F;&#x7ACB;&#x523B;&#x57F7;&#x884C; &#x5DEE;&#x5225;&#x5728;&#x4EE5;&#x9663;&#x5217;&#x65B9;&#x5F0F;&#x5448;&#x73FE; var fn2 = fn.bind(team, 5 , 6 ); // bind &#x975E;&#x7ACB;&#x523B;&#x57F7;&#x884C; fn2( 6 ); // [object Object] 5 6 &#x9806;&#x5E8F;&#x57F7;&#x884C;&#x53C3;&#x6578;&#x6240;&#x4EE5;&#x662F;6 fn2( 1 , 2 ); // [object Object] 5 1 &#x9806;&#x5E8F;&#x57F7;&#x884C;&#x53C3;&#x6578;&#x6240;&#x4EE5;&#x662F;1 1 2 3 4 5 6 7 8 function fn ( para1, para2 ) { console .log( this , para1, para2) } // &#x9032;&#x968E;&#x6982;&#x5FF5; fn.call( 1 , &apos;Jacob&apos; , &apos;Jessica&apos; ) //&#x50B3;&#x7D14;&#x503C; Number{1} &apos;Jacob&apos;, &apos;Jessica&apos; &#x5DF2;&#x5EFA;&#x69CB;&#x5F0F;&#x65B9;&#x5F0F;&#x5448;&#x73FE; &#x7269;&#x4EF6;&#x7684;&#x578B;&#x5225; fn.call( &apos;Str&apos; , &apos;Jacob&apos; , &apos;Jessica&apos; ) fn.call( undefined , &apos;Jacob&apos; , &apos;Jessica&apos; ) // null &#x3001;undefined &#x5C07;&#x6703;&#x88AB;&#x7F6E;&#x63DB;&#x6210;&#x5168;&#x57DF;&#x8B8A;&#x6578; [object Window] &apos;Jacob&apos;, &apos;Jessica&apos; MDN call() &#x56B4;&#x683C;&#x6A21;&#x5F0F; 1 2 3 4 ( function ( ) { &apos;use strict&apos; ; name = &apos;Jacob&apos; ; // error name is not defined })() 1 2 3 4 5 6 7 function fn ( para1, para2 ) { &apos;use strict&apos; ; // &#x6709;&#x52A0;&#x5165;&#x56B4;&#x683C;&#x6A21;&#x5F0F; this&#x6240;&#x6307;&#x5411;&#x7684;window&#x6703;&#x8B8A;undefined console .log( this , para1, para2) // 1 Jacob Jessica &#x56B4;&#x683C;&#x6A21;&#x5F0F;&#x4E0B; &#x7D14;&#x503C;&#x7DAD;&#x6301;&#x539F;&#x578B;&#x5225; &#x4E0D;&#x4EE5;&#x5EFA;&#x69CB;&#x5F0F;&#x65B9;&#x5F0F;&#x5448;&#x73FE; } fn.call( 1 , &apos;Jacob&apos; , &apos;Jessica&apos; ) fn.call( undefined , &apos;Jacob&apos; , &apos;Jessica&apos; ) // undefined Jacob Jessica // &#x7C21;&#x6613;&#x547C;&#x53EB;&#x4E0B; &#x76E1;&#x53EF;&#x80FD;&#x4E0D;&#x8981;&#x8ABF;&#x7528;this &#x56E0;&#x70BA;&#x5B83;&#x672C;&#x8CEA;&#x5C31;&#x662F;undefined this: DOM 1 2  button onclick = console.log(this)  this is btn / button   button onclick = console.dir(this)  this is btn / button  console.dir(object) new 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function Dog ( name, color, size ) { this .name = name; this .color = color; this .size = size; } var Bibi = new Dog( &apos;&#x6BD4;&#x6BD4;&apos; , &apos;&#x68D5;&#x8272;&apos; , &apos;&#x5C0F;&apos; ) console .log(Bibi) //&#x51FD;&#x5F0F;&#x672C;&#x8EAB;&#x5C31;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6; &#x51FD;&#x5F0F;&#x7269;&#x4EF6;&#x6709;&#x4E00;&#x500B;&#x7279;&#x5225;&#x7684;&#x5C6C;&#x6027; prototype //&#x900F;&#x904E;prototype&#x6240;&#x65B0;&#x589E;&#x7684;&#x5C6C;&#x6027; &#x5C31;&#x6703;&#x505A;&#x539F;&#x578B;&#x4E0A;&#x7684;&#x65B9;&#x6CD5; &#x51FD;&#x5F0F;&#x7269;&#x4EF6;&#x7279;&#x6709;&#x7684;&#x5C6C;&#x6027; Dog.prototype.bark = function ( ) { console .log( this .name, &apos;barking&apos; ) } // __proto__ &#x7269;&#x4EF6;&#x4E0A; // prototype &#x51FD;&#x5F0F;&#x4E0A; // &#x8ABF;&#x6574;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5;&#x6642; &#x6700;&#x597D;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x5F9E;&#x51FD;&#x5F0F;&#x672C;&#x8EAB;&#x7684;&#x539F;&#x578B;&#x5C6C;&#x6027;&#x4E0A;&#x53BB;&#x8ABF;&#x6574; console .log(Dog.prototype === Bibi.__proto__) // true 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 var b = new String ( &apos;bcde&apos; ); console .log(b) console .dir( String ) String .prototype.lastText = function ( ) { return this [ this .length - 1 ]; } console .log(b.lastText()); Number .prototype.secondPower = function ( ) { return this * this ; } var num = 5 ; console .log(num.secondPower()); var date = new Date (); console .log(date); console .dir( Date ); Date .prototype.getFullDate = function ( ) { var dd = String ( this .getDate()); var mm = String ( this .getMonth()+ 1 ); var yyyy = this .getFullYear(); var today = yyyy + &apos;/&apos; + mm + &apos;/&apos; +dd; return today; } console .log(date.getFullDate());"},"core.html#new":{"title":"new","path":"\\javascript\\core.html#new","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function Dog ( name, color, size ) { this .name = name; this .color = color; this .size = size; } var Bibi = new Dog( &apos;&#x6BD4;&#x6BD4;&apos; , &apos;&#x68D5;&#x8272;&apos; , &apos;&#x5C0F;&apos; ) console .log(Bibi) //&#x51FD;&#x5F0F;&#x672C;&#x8EAB;&#x5C31;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6; &#x51FD;&#x5F0F;&#x7269;&#x4EF6;&#x6709;&#x4E00;&#x500B;&#x7279;&#x5225;&#x7684;&#x5C6C;&#x6027; prototype //&#x900F;&#x904E;prototype&#x6240;&#x65B0;&#x589E;&#x7684;&#x5C6C;&#x6027; &#x5C31;&#x6703;&#x505A;&#x539F;&#x578B;&#x4E0A;&#x7684;&#x65B9;&#x6CD5; &#x51FD;&#x5F0F;&#x7269;&#x4EF6;&#x7279;&#x6709;&#x7684;&#x5C6C;&#x6027; Dog.prototype.bark = function ( ) { console .log( this .name, &apos;barking&apos; ) } // __proto__ &#x7269;&#x4EF6;&#x4E0A; // prototype &#x51FD;&#x5F0F;&#x4E0A; // &#x8ABF;&#x6574;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5;&#x6642; &#x6700;&#x597D;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x5F9E;&#x51FD;&#x5F0F;&#x672C;&#x8EAB;&#x7684;&#x539F;&#x578B;&#x5C6C;&#x6027;&#x4E0A;&#x53BB;&#x8ABF;&#x6574; console .log(Dog.prototype === Bibi.__proto__) // true 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 var b = new String ( &apos;bcde&apos; ); console .log(b) console .dir( String ) String .prototype.lastText = function ( ) { return this [ this .length - 1 ]; } console .log(b.lastText()); Number .prototype.secondPower = function ( ) { return this * this ; } var num = 5 ; console .log(num.secondPower()); var date = new Date (); console .log(date); console .dir( Date ); Date .prototype.getFullDate = function ( ) { var dd = String ( this .getDate()); var mm = String ( this .getMonth()+ 1 ); var yyyy = this .getFullYear(); var today = yyyy + &apos;/&apos; + mm + &apos;/&apos; +dd; return today; } console .log(date.getFullDate());"},"core.html#繼承":{"title":"&#x7E7C;&#x627F;","path":"\\javascript\\core.html#繼承","body":"Object.create() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 var a = [] //Object  Array  a (&#x5BE6;&#x9AD4;) //&#x539F;&#x578B;&#x93C8;&#x4E0A;&#x65B0;&#x589E;&#x4E00;&#x500B;&#x5C64;&#x7D1A; //Object  Animal  Dog  &#x5BE6;&#x9AD4; //Object  Animal  Cat  &#x5BE6;&#x9AD4; // Object.create() &#x53EF;&#x4EE5;&#x628A;&#x5176;&#x4ED6;&#x7269;&#x4EF6;&#x4F5C;&#x70BA;&#x539F;&#x578B;&#x4F7F;&#x7528; var dog = { name: &apos;&#x72D7;&apos; , bark: function ( ) { console .log( this .name + &apos; barking&apos; ) } } var Corgi = Object .create(dog); //Corgi &#x628A; dog &#x4F5C;&#x70BA;&#x539F;&#x578B;&#x4F7F;&#x7528; Corgi.name = &apos;Welsh Corgi&apos; console .log(Corgi) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 function Animal ( family ) { this .kingdom = &apos;&#x52D5;&#x7269;&#x754C;&apos; this .family = family || &apos;&#x8C93;&#x79D1;&apos; } Animal.prototype.move = function ( ) { console .log( this .name + &apos; can move&apos; ) } function Dog ( name, size ) { Animal.call( this , &apos;&#x72AC;&#x79D1;&apos; ) this .name = name; this .size = size || &apos;small&apos; } Dog.prototype = Object .create(Animal.prototype) Dog.prototype.constructor = Dog; // &#x72D7;&#x7684;&#x539F;&#x578B;&#x539F;&#x672C;&#x76F4;&#x63A5;&#x7E7C;&#x627F;&#x65BC;&#x52D5;&#x7269;&#x754C;&#x7684;&#x539F;&#x578B; constructor &#x6703;&#x88AB;&#x8986;&#x84CB;&#x6240;&#x4EE5;&#x88DC;&#x56DE;&#x539F;&#x672C;&#x5EFA;&#x69CB;&#x51FD;&#x5F0F; Dog.prototype.bark = function ( ) { console .log( this .name + &apos; barking&apos; ) } var Chihuahua = new Dog( &apos;Chihuahua&apos; , &apos;small&apos; ); console .log(Chihuahua) Chihuahua.bark(); Chihuahua.move(); Chihuahua.family // undefined &#x76EE;&#x524D;&#x53EA;&#x6709;&#x7E7C;&#x627F;&#x539F;&#x578B;prototype &#x4F46;&#x7121;&#x7E7C;&#x627F;&#x52D5;&#x7269;&#x754C;&#x7684;&#x5EFA;&#x69CB;&#x51FD;&#x5F0F; Animal.call &#x5982;&#x679C;&#x700F;&#x89BD;&#x5668;&#x4E0D;&#x652F;&#x63F4; Object.create() &#x9019;&#x6642;&#x5019;&#x6211;&#x5011;&#x6703;&#x5BEB;&#x4E00;&#x4E9B;&#x7A0B;&#x5F0F;&#x4F86;&#x586B;&#x88DC;&#x67D0;&#x4E9B;&#x700F;&#x89BD;&#x5668;&#x4E0D;&#x652F;&#x63F4;&#x7684;&#x60C5;&#x6CC1;&#xFF0C;&#x6211;&#x5011;&#x628A;&#x9019;&#x4E9B;&#x7A0B;&#x5F0F;&#x7A31;&#x505A; polyfill"},"core.html#屬性特徵":{"title":"&#x5C6C;&#x6027;&#x7279;&#x5FB5;","path":"\\javascript\\core.html#屬性特徵","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 const obj = { a: 1 , b: 2 , c: 3 } console .log(obj) //Object.defineProperty() // &#x5C6C;&#x6027;&#xFF0C;&#x8ABF;&#x6574;&#x5C6C;&#x6027;&#x7684;&#x7279;&#x5FB5; // 1. &#x503C; 2. &#x53EF;&#x5426;&#x5BEB;&#x5165; 3. &#x53EF;&#x5426;&#x88AB;&#x522A;&#x9664; 4. &#x53EF;&#x5426;&#x88AB;&#x5217;&#x8209; //Object.defineProperty(&#x7269;&#x4EF6;, &#x5C6C;&#x6027;, &#x53C3;&#x6578;) // being explicit Object .defineProperty(obj, &apos;a&apos; , { enumerable: true , configurable: true , writable: false , value: 4 }); console .log(obj) // TypeError: Cannot assign to read only property &apos;a&apos; of object &apos;#Object&apos; ( function ( ) { &apos;use strict&apos; ; obj.a = 5 ; }()) Object.defineProperty() // &#x5EF6;&#x4F38;&#x7684;&#x4E09;&#x7A2E;&#x7269;&#x4EF6;&#x65B9;&#x6CD5; preventExtensions seal Freeze &#x9632;&#x6B62;&#x64F4;&#x5145; &#x5C01;&#x88DD; &#x51CD;&#x7D50; &#x76F4;&#x63A5;&#x64CD;&#x4F5C;&#x7269;&#x4EF6;&#x672C;&#x8EAB; Object.preventExtensions() Object.seal() &#x7121;&#x6CD5;&#x65B0;&#x589E;&#x522A;&#x9664; &#x4E5F;&#x7121;&#x6CD5;&#x914D;&#x7F6E;&#x7279;&#x5FB5; &#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x8ABF;&#x6574;&#x5C6C;&#x6027;&#x503C; Object.freeze() &#x7269;&#x4EF6;&#x52A0;&#x4E0A;seal &#x4E14;&#x7121;&#x6CD5;&#x8ABF;&#x6574;&#x503C; Setter And Getter 1 2 3 4 5 6 7 8 9 10 11 12 13 14 var wallet = { total: 100 , set save(price) { this .total = this .total + price / 2 }, get save() { return this .total / 2 } } // Getter &#x53D6;&#x5F97;&#x7279;&#x5B9A;&#x503C;&#x7684;&#x65B9;&#x6CD5; // Setter &#x5B58;&#x503C;&#x7684;&#x65B9;&#x6CD5; // wallet.total = 300; wallet.save = 300 ; //&#x900F;&#x904E;Setter&#x6539;&#x8B8A;total&#x7684;&#x503C; console .log(wallet.save) //250 / 2 = 125 Object.defineProperty() Object.getOwnPropertyDescriptor() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var wallet = { total: 100 } Object .defineProperty(wallet, &apos;save&apos; , { configurable: true , set : function(price) { this .total = this .total + price / 2 }, get : function() { return this .total / 2 } }); wallet.save = 300 ; //&#x900F;&#x904E;Setter&#x6539;&#x8B8A;total&#x7684;&#x503C; console .log(wallet); // save 250 / 2 = 125 console .log( Object .getOwnPropertyDescriptor(wallet, &apos;save&apos; )) // [object Object] { // configurable: false, // enumerable: false, 1 2 3 4 5 6 7 8 // &#x53D6;&#x5F97;&#x9663;&#x5217;&#x6700;&#x5F8C;&#x4E00;&#x500B;&#x503C; var a = [ 1 , 2 , 3 ]; Object .defineProperty( Array .prototype, &apos;lastest&apos; , { get : function() { return this [ this .length - 1 ]; } }); console .log(a.lastest); //3 ##&#x3000;vue https://github.com/vuejs/vue/blob/dev/dist/vue.js var emptyObject = Object.freeze({}); &#x78BA;&#x4FDD;&#x7A7A;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 var app = new Vue({ //&#x5EFA;&#x69CB;&#x521D;&#x59CB;&#x5316; el: &apos;#app&apos; , data: { message: &apos;Hello Vue!&apos; } }) console .log(app) &#x6DF1;&#x5165;&#x54CD;&#x5E94;&#x5F0F;&#x539F;&#x7406; &#x5F53;&#x4F60;&#x628A;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x7684; JavaScript &#x5BF9;&#x8C61;&#x4F20;&#x5165; Vue &#x5B9E;&#x4F8B;&#x4F5C;&#x4E3A; data &#x9009;&#x9879;&#xFF0C;Vue &#x5C06;&#x904D;&#x5386;&#x6B64;&#x5BF9;&#x8C61;&#x6240;&#x6709;&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x5E76;&#x4F7F;&#x7528; Object.defineProperty &#x628A;&#x8FD9;&#x4E9B;&#x5C5E;&#x6027;&#x5168;&#x90E8;&#x8F6C;&#x4E3A; getter/setter &#x3002;Object.defineProperty &#x662F; ES5 &#x4E2D;&#x4E00;&#x4E2A;&#x65E0;&#x6CD5; shim &#x7684;&#x7279;&#x6027;&#xFF0C;&#x8FD9;&#x4E5F;&#x5C31;&#x662F; Vue &#x4E0D;&#x652F;&#x6301; IE8 &#x4EE5;&#x53CA;&#x66F4;&#x4F4E;&#x7248;&#x672C;&#x6D4F;&#x89C8;&#x5668;&#x7684;&#x539F;&#x56E0;&#x3002; Vue &#x7406;&#x89E3;&#x4E4B;&#x767D;&#x8BDD; getter/setter https://github.com/vuejs/vue/blob/dev/dist/vue.js proxySetter reactiveSetter app.obj === app._data.obj Vue &#x54CD;&#x5E94;&#x5F0F;&#x6838;&#x5FC3;&#x5C31;&#x662F;&#xFF0C;getter &#x7684;&#x65F6;&#x5019;&#x4F1A;&#x6536;&#x96C6;&#x4F9D;&#x8D56;&#xFF0C;setter &#x7684;&#x65F6;&#x5019;&#x4F1A;&#x89E6;&#x53D1;&#x4F9D;&#x8D56;&#x66F4;&#x65B0;"},"core.html#Let":{"title":"Let","path":"\\javascript\\core.html#Let","body":"var&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x5728;&#x51FD;&#x6578;(function) &#x88E1; let&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x5247;&#x662F;&#x5728;&#x5340;&#x584A;(block) &#x88E1; 1 2 3 4 for ( var i= 0 ;i 10 ;i++) { console .log(i) } console .log(i) //window.i &#x5168;&#x57DF; &#x6C59;&#x67D3;&#x6574;&#x500B;&#x4F5C;&#x7528;&#x57DF; 1 2 3 4 5 6 let name = &apos;Jacob&apos; { let name = &apos;Hsu&apos; } console .log(name) //Jacob"},"core.html#const":{"title":"const","path":"\\javascript\\core.html#const","body":"&#x5229;&#x7528; const &#x53EF;&#x4EE5;&#x505A;&#x5230;&#x9664;&#x4E86;&#x88AB;&#x51CD;&#x7D50; &#x9084;&#x80FD;&#x4E0D;&#x88AB;&#x8CE6;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 const person = { name: &apos;&#x9EE8;&#x5DE5;&apos; , money: 500 } person.name = &apos;&#x7DB2;&#x8ECD;&apos; Object .freeze(person); person.money = 1000 ; person = {}; // devTool console person // var {} person // const let TDZ 1 2 3 4 5 6 7 8 9 10 let arg = &apos;first&apos; ; { //&#x5275;&#x9020; let arg; // &#x66AB;&#x6642;&#x6027;&#x6B7B;&#x5340; TDZ &#x6709;hoisting&#x4F46;&#x9396;&#x4F4F; //&#x57F7;&#x884C; console .log(arg); // first let arg = &apos;second&apos; } 1 let &#x4E00;&#x6A23;&#x6709;&#x5275;&#x9020;&#x968E;&#x6BB5; 2 &#x4F46;&#x5F9E;&#x5275;&#x9020;&#x5230;&#x5BE6;&#x969B;&#x5BA3;&#x544A;&#x7684;&#x968E;&#x6BB5;&#x6703;&#x51FA;&#x73FE;TDZ &#x9019;&#x500B;&#x5340;&#x57DF;&#x7121;&#x6CD5;&#x547C;&#x53EB;&#x8B8A;&#x6578; 3 &#x6709;&#x5275;&#x9020;&#x5230;&#x57F7;&#x884C;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x4F46;&#x4E0D;&#x6703;&#x9810;&#x5148;&#x51FA;&#x73FE; (&#x6587;&#x4EF6;&#x4E0D;&#x6703;&#x8868;&#x660E;&#x9019;&#x8207; var &#x7684;Hoisting&#x76F8;&#x540C;&#x6982;&#x5FF5;)"},"core.html#ES6-Airbnb":{"title":"ES6 Airbnb","path":"\\javascript\\core.html#ES6-Airbnb","body":"Airbnb &#x898F;&#x7BC4;&#x6587;&#x4EF6; (ES6 &#x7248;&#x672C;)&#xFF1A; https://github.com/airbnb/javascript ESLint &#x5B89;&#x88DD;&#x6559;&#x5B78;&#xFF1A; https://www.youtube.com/watch?v=WiommcFaYvY ? How would you like to use ESLint? (Use arrow keys) To check syntax only To check syntax and find problems &#x276F; To check syntax, find problems, and enforce code style &#x5982;&#x679C;&#x8981;&#x4F7F;&#x7528; Airbnb &#x7684;&#x898F;&#x7BC4;&#xFF0C;&#x8ACB;&#x9078;&#x64C7;&#x6700;&#x5F8C;&#x4E00;&#x500B;&#x9078;&#x9805;&#x3002;"},"core.html#箭頭函數":{"title":"&#x7BAD;&#x982D;&#x51FD;&#x6578;","path":"\\javascript\\core.html#箭頭函數","body":"//&#x6C92;&#x6709;&#x50B3;&#x7D71;&#x51FD;&#x6578; arguments &#x53C3;&#x6578; 1 2 3 4 const nums = function ( ) { console .log( arguments ); } nums( 10 , 50 , 100 , 50 , 5 , 1 ); 1 2 3 4 const nums = () = { console .log( arguments ); //Uncaught ReferenceError } nums( 10 , 50 , 100 , 50 , 5 , 1 ); 1 2 3 4 const nums = ( ...arg ) = { console .log(arg); //Uncaught ReferenceError } nums( 10 , 50 , 100 , 50 , 5 , 1 ); &#x7BAD;&#x982D;&#x51FD;&#x5F0F;&#x6C92;&#x6709;&#x81EA;&#x5DF1;&#x7684;this &#x4ED6;&#x7684;this&#x6307;&#x5411;&#x5916;&#x5C64; 1 2 3 4 5 6 7 const ele = document .querySelector( &apos;p&apos; ); ele.addEventListener( &apos;click&apos; , function ( ) { console .log( this ) }); ele.addEventListener( &apos;click&apos; , () ={ console .log( this ) //&#x6307;&#x5230;&#x4E0D;&#x4E00;&#x6A23;&#x7684;&#x4F4D;&#x7F6E; window &#x5168;&#x57DF; }); &#x7BAD;&#x982D;&#x51FD;&#x6578; &#x5E38;&#x898B;&#x554F;&#x984C; &#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x56DE;&#x50B3;&#x7269;&#x4EF6;&#x5BE6;&#x5B57; 1 2 3 4 const arrFn = () = { data : 1 } console .log(arrFn()) //undefined const arrFnr = () = ({ data : 1 }) console .log(arrFnr()) //{data: 1} &#x642D;&#x914D;&#x5224;&#x65B7;&#x5F0F;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x63A5;&#x7BAD;&#x982D;&#x51FD;&#x5F0F; 1 2 3 4 5 let num = 0 const numFn = num || () = 1 ; console .log(numFn) const numFunction = num || ( ( ) = 1 ); console .log(numFunction) // &#x52A0;&#x62EC;&#x865F;&#x4FEE;&#x6B63; &#x7269;&#x4EF6;&#x88E1;&#x9762;&#x642D;&#x914D;&#x7BAD;&#x982D;&#x51FD;&#x6A39;&#x6703;&#x51FA;&#x932F; &#x6307;&#x5411;&#x662F;&#x4E0D;&#x540C;&#x7684; 1 2 3 4 5 6 7 8 const app = new Vue({ data: { num: 1 }, created: () = { console .log( this .num) //FAIL } }) &#x5E73;&#x5747;&#x6578; 1 2 3 4 5 6 7 8 9 10 const average = function ( ) { // arguments &#x662F;&#x985E;&#x9663;&#x5217;&#x6C92;&#x6709;&#x9663;&#x5217;&#x65B9;&#x6CD5; &#x7528;Array.from&#x8F49;&#x6210;&#x7D14;&#x9663;&#x5217; const nums = Array .from( arguments ); const total = nums.reduce( function ( acc, val ) { return acc + val }, 0 ); // 0 &#x662F;&#x7B2C;&#x4E00;&#x6B21;&#x57F7;&#x884C;&#x7684;&#x524D;&#x4E00;&#x500B;&#x503C; console .log(total); return total / nums.length; } console .log(average( 1 , 2 , 3 , 4 , 5 )) // 15 3 Array.from() Array.reduce() 1 2 const average = ( ...nums ) = nums.reduce( ( acc, val ) = acc + val, 0 ) / nums.length console .log(average( 1 , 2 , 3 , 4 , 5 )) // 3"},"num.html":{"title":"number","path":"\\javascript\\num.html","body":"取值 Math.pow()傳回指定乘冪數的基底運算式值 Math.round() 函數回傳四捨五入後的近似值 Math.floor() 函式會回傳無條件捨去後的最大整數 Math.ceil() 函式會回傳大於等於所給數字的最小整數 1 2 3 4 5 6 7 8 9 10 11 12 13 14 export function precisionRound ( number, precision )  const factor = Math .pow( 10 , precision) return Math .round(number * factor) / factor  export function precisionFloor ( number, precision )  const factor = Math .pow( 10 , precision) return Math .floor(number * factor) / factor  export function precisionCeil ( number, precision )  const factor = Math .pow( 10 , precision) return Math .ceil(number * factor) / factor  補數字 JavaScript 数字前补“0”的五种方法 數字補0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //轉為小數 function padding3 ( num, length )  var decimal = num / Math .pow( 10 , length); //toFixed指定保留幾位小數 decimal = decimal.toFixed(length) + \"\" ; return decimal.substr(decimal.indexOf( \".\" )+ 1 );  console .log( padding3( 7 , 3 ) ) //\"007\" function padding4 ( num, length )  //這裡用slice和substr均可 return ( Array (length).join( \"0\" ) + num).slice(-length);  console .log( padding4( 7 , 3 ) ) //\"007\" 數字填充9 function paddingPoint ( length ) { var decimal = 1 / Math .pow( 10 , length); decimal = decimal.toFixed(length) + \"\" ; return 1 -decimal;} console .log( paddingPoint( 3 ) ) // 0.999 function paddingInt ( length ) { return ( Array (length).join( \"9\" ) + 9 ).slice(-length);} console .log( paddingInt( 3 ) ) //\"999\" console .log( Number (paddingInt( 3 )) + paddingPoint( 3 ) ) // 999.999"},"num.html#取值":{"title":"&#x53D6;&#x503C;","path":"\\javascript\\num.html#取值","body":"Math.pow()&#x50B3;&#x56DE;&#x6307;&#x5B9A;&#x4E58;&#x51AA;&#x6578;&#x7684;&#x57FA;&#x5E95;&#x904B;&#x7B97;&#x5F0F;&#x503C; Math.round() &#x51FD;&#x6578;&#x56DE;&#x50B3;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x5F8C;&#x7684;&#x8FD1;&#x4F3C;&#x503C; Math.floor() &#x51FD;&#x5F0F;&#x6703;&#x56DE;&#x50B3;&#x7121;&#x689D;&#x4EF6;&#x6368;&#x53BB;&#x5F8C;&#x7684;&#x6700;&#x5927;&#x6574;&#x6578; Math.ceil() &#x51FD;&#x5F0F;&#x6703;&#x56DE;&#x50B3;&#x5927;&#x65BC;&#x7B49;&#x65BC;&#x6240;&#x7D66;&#x6578;&#x5B57;&#x7684;&#x6700;&#x5C0F;&#x6574;&#x6578; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 export function precisionRound ( number, precision ) { const factor = Math .pow( 10 , precision) return Math .round(number * factor) / factor } export function precisionFloor ( number, precision ) { const factor = Math .pow( 10 , precision) return Math .floor(number * factor) / factor } export function precisionCeil ( number, precision ) { const factor = Math .pow( 10 , precision) return Math .ceil(number * factor) / factor }"},"num.html#補數字":{"title":"&#x88DC;&#x6578;&#x5B57;","path":"\\javascript\\num.html#補數字","body":"JavaScript &#x6570;&#x5B57;&#x524D;&#x8865;&#x201C;0&#x201D;&#x7684;&#x4E94;&#x79CD;&#x65B9;&#x6CD5; &#x6578;&#x5B57;&#x88DC;0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x8F49;&#x70BA;&#x5C0F;&#x6578; function padding3 ( num, length ) { var decimal = num / Math .pow( 10 , length); //toFixed&#x6307;&#x5B9A;&#x4FDD;&#x7559;&#x5E7E;&#x4F4D;&#x5C0F;&#x6578; decimal = decimal.toFixed(length) +  ; return decimal.substr(decimal.indexOf( . )+ 1 ); } console .log( padding3( 7 , 3 ) ) //007 function padding4 ( num, length ) { //&#x9019;&#x88E1;&#x7528;slice&#x548C;substr&#x5747;&#x53EF; return ( Array (length).join( 0 ) + num).slice(-length); } console .log( padding4( 7 , 3 ) ) //007 &#x6578;&#x5B57;&#x586B;&#x5145;9 function paddingPoint ( length ) { var decimal = 1 / Math .pow( 10 , length); decimal = decimal.toFixed(length) +  ; return 1 -decimal;} console .log( paddingPoint( 3 ) ) // 0.999 function paddingInt ( length ) { return ( Array (length).join( 9 ) + 9 ).slice(-length);} console .log( paddingInt( 3 ) ) //999 console .log( Number (paddingInt( 3 )) + paddingPoint( 3 ) ) // 999.999"},"index.html":{"title":"hexo-theme-doc-seed","path":"\\javascript\\index.html","body":"hexo-theme-doc-seed This project is a skeleton for a documentation website using Hexo and hexo-theme-doc . You can use it to quickly bootstrap your documentation website. The seed contains the required structure and files to use Hexo and the theme, plus dummy content to show the usage of the main features of the theme. Getting Started To get started have a look first to the requirements , then install hexo-cli with: 1 $ npm install -g hexo-cli Now just clone hexo-theme-doc-seed repository: 1 $ git clone https://github.com/zalando-incubator/hexo-theme-doc-seed.git directory Go into the resulting directory and install dependencies: 1 $ npm install Start the preview server locally with: 1 hexo s If you open your browser at http://localhost:4000 you should see the documentation website up and running. More Informations For more informations please visit the user documentation website ."},"index.html#hexo-theme-doc-seed":{"title":"hexo-theme-doc-seed","path":"\\javascript\\index.html#hexo-theme-doc-seed","body":"This project is a skeleton for a documentation website using Hexo and hexo-theme-doc . You can use it to quickly bootstrap your documentation website. The seed contains the required structure and files to use Hexo and the theme, plus dummy content to show the usage of the main features of the theme."},"index.html#Getting-Started":{"title":"Getting Started","path":"\\javascript\\index.html#Getting-Started","body":"To get started have a look first to the requirements , then install hexo-cli with: 1 $ npm install -g hexo-cli Now just clone hexo-theme-doc-seed repository: 1 $ git clone https://github.com/zalando-incubator/hexo-theme-doc-seed.git directory Go into the resulting directory and install dependencies: 1 $ npm install Start the preview server locally with: 1 hexo s If you open your browser at http://localhost:4000 you should see the documentation website up and running."},"index.html#More-Informations":{"title":"More Informations","path":"\\javascript\\index.html#More-Informations","body":"For more informations please visit the user documentation website ."},"this.html":{"title":"This","path":"\\javascript\\this.html","body":"物件的方法調用 (As an object method) 物件下呼叫會影響 this 的指向 https://jsbin.com/viziyewore/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 function callName ( )  console .log( this .name);  var name = '全域' ; var obj =  name: '區域' , callName: callName, watch:  name: 'Watch' , callName: callName   callName() // \"全域\" obj.callName(); //\"區域\" ，呼叫是在物件下調用，那麼 this 則是該物件 obj.watch.callName(); //\"Watch\" https://jsbin.com/vihonezita/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 var name = '全域' ; var obj =  name: '區域' , callName: function ( )  console .log( this .name);   //callName; // callName is not defined //callName(); // error\" \"TypeError: callName is not a function obj.callName(); //\"區域\" ，呼叫是在物件下調用，那麼 this 則是該物件 var callName = obj.callName; callName(); // \"全域\" 1 2 3 4 5 6 7 8 9 var name = '全域' var obj =  //name : '物件的', x: function ( )  name = '函式的' ; console .log( this .name); //\"物件的\" 找不到就會undefined   obj.x() 簡易呼叫 1 2 3 4 5 6 7 8 9 var name = '全域' var obj =  name : '物件的' , getName: function ( )  return this .name;   var getName = obj.getName; console .log(getName()) //\"全域\" 1 2 3 4 5 6 7 8 9 10 var name = '全域' var obj =  name : '物件的' , fn: function ( a, b, c )  return this .name+ ',' +a+ ',' +b+ ',' +c;   var fnA = obj.fn; var fnB = fnA.bind( null , 0 ); // a console .log( fnB( 1 , 2 ) ) // b c \"全域,0,1,2\" 1 2 3 4 5 6 7 8 9 10 11 var name = '全域' var obj =  name : '物件的' , fn: function ( a, b, c )  'use strict' return this + ',' +a+ ',' +b+ ',' +c;   var fnA = obj.fn; var fnB = fnA.bind( null , 0 ); // a console .log( fnB( 1 , 2 ) ) // b c \"null,0,1,2\" 1 2 3 4 5 6 7 8 9 10 11 12 13 var value = 'global' ; var foo =  value: 'local' , bar: function ( )  return this .value;   console .log(foo.bar()); // \"local\" // 下面是表達式 執行時直接把函數取出來 執行函式的結果 console .log( foo.bar = foo.bar ); // function() return this.value; // 賦值是表達式 表達式會回傳結果 console .log( (foo.bar = foo.bar)() ); // \"global\" console .log( ( false || foo.bar)() ) // \"global\" 1 2 3 4 5 6 7 8 var value = 'global' ; var obj =  x: function ( )  value: 'fn' , console .log( this .value); //undefined ,  obj.x(); // \"local\" 1 2 3 4 5 6 7 8 9 10 var value = 'global' ; var obj =  x: function ( )  value: 'fn' , console .log( this .value); , value: 'local' ,  obj.x(); // \"local\" 立即函式： 1 2 3 4 5 6 7 var name = '全域' ; ( function ( )  function callSomeone ( )  console .log( this .name);  callSomeone(); //\"全域\" )(); 1 2 3 4 5 var name = '全域' ; ( function ( )  var name = '區域' ; console .log( this .name); //\"全域\" )() 1 2 3 4 5 6 7 8 9 10 var name = '全域' ; var obj =  name: '區域' , callName: function ( )  console .log( this .name);  ; ( function ( )  obj.callName(); // \"區域\" )(); Closure https://jsbin.com/tagalenuje/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 var name = '全域' function easyCard ( base = 100 )  var money = base return function ( update = 10 )  money = money + update console .log( this .name, money)   var MingEasyCard = easyCard( 100 ) MingEasyCard(); // 110 MingEasyCard(); // 120 var YourEasyCard = easyCard( 20 ); YourEasyCard(); //30 var YourEasyCard2 = easyCard( 20 ); YourEasyCard2( 100 ); // 120 var MyEasyCard = easyCard( 1000 )( 100 ); MyEasyCard( 100 ); // \"TypeError: MyEasyCard is not a function 1 2 3 4 5 6 7 8 9 10 11 var name = '全域' function easyCard ( base = 100 )  var money = base var name = '悠遊卡' return function ( update = 10 )  money = money + update console .log( this .name, money) // \"全域\" 110   var MingEasyCard = easyCard( 100 ) MingEasyCard() Callback 1 2 3 4 5 6 7 function myEasyCard ( callback )  var money = 150 return callback(money)  myEasyCard( function ( money )  console .log( money + 100 ) //250 ) 1 2 3 4 var a = [ 1 , 2 , 3 ]; a.forEach( function ( item )  console .log( this , item) ); https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#語法 1 2 3 arr.forEach( function callback ( currentValue[, index[, array]] )  //your iterator [, thisArg]); 這個 callback 函式將會把 Array 中的每一個元素作為參數，帶進本 callback 函式裡，每個元素各執行一次，接收三個參數： currentValue 代表目前被處理中的 Array 之中的那個元素。 index,array, thisArg 選擇性 Note: IIFE、Closure、Callback function 與 this 關係是!? 沒有關係 bind, apply, call call &amp; apply 可以作為呼叫 Function 的另一個手段，皆是回傳function執行結果 而 bind 則會回傳一個經過包裹後的 Function 回來，回傳的是綁定 this 後的 原函數 。 「綁定this的函數」 一但被綁定，其this無法再被修改。 call vs. apply 作用完全一樣，只是接受參數的方式不太一樣 1 2 func.call( this , arg1, arg2); func.apply( this , [arg1, arg2]); //陣列 JavaScript Call 使用給定的this參數以及分別給定的參數來呼叫某個函數 1 2 3 4 5 6 7 8 9 10 11 function callName ( name )  console .log( this .name, name);  var name = '全域' ; var obj =  name: '區域' ,  callName( undefined , '全域2' ); // \"全域\" undefined (this.name, name) callName.call( undefined , '呼叫' ); // \"全域\" \"呼叫\" (this.name, name) 無值傳入this往上找 callName.call(obj, '呼叫' ); // \"區域\" \"呼叫\" (this.name, name) bind 是ES5中新增的一個方法，可以改變函數內部的this指向 bind的應用場景 借用Array的原生方法 https://jsbin.com/pupasabapa/edit?js,console 1 2 3 4 5 6 7 8 9 var a = ; Array .prototype.push.bind(a, \"hello\" , \"world\" )(); console .log(a); // [object Object]  // 0: \"hello\", // 1: \"world\", // length: 2 //  http://www.dengzhr.com/js/1069 箭頭函式 「箭頭函式沒有自己的 this」 https://jsbin.com/wuxiqeciko/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 var name = '全域' var obj =  name: '區域' , callName: function ( )  // 注意，這裡是 function，以此為基準產生一個作用域 console .log( '1' , this .name); // 1 \"區域\" setTimeout( () =  console .log( '2' , this .name); // 2 \"區域\" //console.log('3', this); // 3 obj 這個物件 , 10 ); , callNameArrow: () =  // 注意，如果使用箭頭函式，this 依然指向 window console .log( '4' , this .name); // 4 \"全域\" setTimeout( () =  console .log( '5' , this .name); // 5 \"全域\" //console.log('6', this); // 6 window 物件 , 10 );   obj.callName(); obj.callNameArrow(); const func = (x) = x + 1 const func = function (x) { return x + 1 } JS語言中函式的設計，必有回傳值，沒寫相當於回傳 undefined map 1 2 3 4 5 6 7 8 9 10 // ['1','2','3'] 字串透過parseInt 轉數字 var arr = [ '1' , '2' , '3' ].map( parseInt ); console .log(arr) // [1, NaN, NaN] var arr = [ '1' , '2' , '3' ].map( function ( item, i )  console .log(item, i) // parseInt('1', 0); parseInt('2', 1); parseInt('3', 2); // parseInt('2', 1) 進位系統的1 表數字到1 進到下一位 所以2不會存在NaN // parseInt('11', 2) 進位系統的2 11表示2+1=3 return parseInt (item, 10 ) // \"1\" \"2\" \"3\" parseInt(item, i) ); map() callback 回呼函式 參數 currentValue index array parseInt() radix 能代表該進位系統的數字 注意，通常預設值不是 10 進位 References https://wcc723.github.io/javascript/2019/03/18/JS-THIS/ https://paper.dropbox.com/doc/JSJavaScript-This---AZqD8PDvbl5uk5Mfq_EJlXMkAg-Xw50EZtMFNqG0wUxKeIaz https://wcc723.github.io/javascript/2017/12/21/javascript-es6-arrow-function/"},"this.html#物件的方法調用-As-an-object-method":{"title":"&#x7269;&#x4EF6;&#x7684;&#x65B9;&#x6CD5;&#x8ABF;&#x7528; (As an object method)","path":"\\javascript\\this.html#物件的方法調用-As-an-object-method","body":"&#x7269;&#x4EF6;&#x4E0B;&#x547C;&#x53EB;&#x6703;&#x5F71;&#x97FF; this &#x7684;&#x6307;&#x5411; https://jsbin.com/viziyewore/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 function callName ( ) { console .log( this .name); } var name = &apos;&#x5168;&#x57DF;&apos; ; var obj = { name: &apos;&#x5340;&#x57DF;&apos; , callName: callName, watch: { name: &apos;Watch&apos; , callName: callName } } callName() // &#x5168;&#x57DF; obj.callName(); //&#x5340;&#x57DF; &#xFF0C;&#x547C;&#x53EB;&#x662F;&#x5728;&#x7269;&#x4EF6;&#x4E0B;&#x8ABF;&#x7528;&#xFF0C;&#x90A3;&#x9EBC; this &#x5247;&#x662F;&#x8A72;&#x7269;&#x4EF6; obj.watch.callName(); //Watch https://jsbin.com/vihonezita/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 var name = &apos;&#x5168;&#x57DF;&apos; ; var obj = { name: &apos;&#x5340;&#x57DF;&apos; , callName: function ( ) { console .log( this .name); } } //callName; // callName is not defined //callName(); // error TypeError: callName is not a function obj.callName(); //&#x5340;&#x57DF; &#xFF0C;&#x547C;&#x53EB;&#x662F;&#x5728;&#x7269;&#x4EF6;&#x4E0B;&#x8ABF;&#x7528;&#xFF0C;&#x90A3;&#x9EBC; this &#x5247;&#x662F;&#x8A72;&#x7269;&#x4EF6; var callName = obj.callName; callName(); // &#x5168;&#x57DF; 1 2 3 4 5 6 7 8 9 var name = &apos;&#x5168;&#x57DF;&apos; var obj = { //name : &apos;&#x7269;&#x4EF6;&#x7684;&apos;, x: function ( ) { name = &apos;&#x51FD;&#x5F0F;&#x7684;&apos; ; console .log( this .name); //&#x7269;&#x4EF6;&#x7684; &#x627E;&#x4E0D;&#x5230;&#x5C31;&#x6703;undefined } } obj.x()"},"this.html#簡易呼叫":{"title":"&#x7C21;&#x6613;&#x547C;&#x53EB;","path":"\\javascript\\this.html#簡易呼叫","body":"1 2 3 4 5 6 7 8 9 var name = &apos;&#x5168;&#x57DF;&apos; var obj = { name : &apos;&#x7269;&#x4EF6;&#x7684;&apos; , getName: function ( ) { return this .name; } } var getName = obj.getName; console .log(getName()) //&#x5168;&#x57DF; 1 2 3 4 5 6 7 8 9 10 var name = &apos;&#x5168;&#x57DF;&apos; var obj = { name : &apos;&#x7269;&#x4EF6;&#x7684;&apos; , fn: function ( a, b, c ) { return this .name+ &apos;,&apos; +a+ &apos;,&apos; +b+ &apos;,&apos; +c; } } var fnA = obj.fn; var fnB = fnA.bind( null , 0 ); // a console .log( fnB( 1 , 2 ) ) // b c &#x5168;&#x57DF;,0,1,2 1 2 3 4 5 6 7 8 9 10 11 var name = &apos;&#x5168;&#x57DF;&apos; var obj = { name : &apos;&#x7269;&#x4EF6;&#x7684;&apos; , fn: function ( a, b, c ) { &apos;use strict&apos; return this + &apos;,&apos; +a+ &apos;,&apos; +b+ &apos;,&apos; +c; } } var fnA = obj.fn; var fnB = fnA.bind( null , 0 ); // a console .log( fnB( 1 , 2 ) ) // b c null,0,1,2 1 2 3 4 5 6 7 8 9 10 11 12 13 var value = &apos;global&apos; ; var foo = { value: &apos;local&apos; , bar: function ( ) { return this .value; } } console .log(foo.bar()); // local // &#x4E0B;&#x9762;&#x662F;&#x8868;&#x9054;&#x5F0F; &#x57F7;&#x884C;&#x6642;&#x76F4;&#x63A5;&#x628A;&#x51FD;&#x6578;&#x53D6;&#x51FA;&#x4F86; &#x57F7;&#x884C;&#x51FD;&#x5F0F;&#x7684;&#x7D50;&#x679C; console .log( foo.bar = foo.bar ); // function() {return this.value;} // &#x8CE6;&#x503C;&#x662F;&#x8868;&#x9054;&#x5F0F; &#x8868;&#x9054;&#x5F0F;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; console .log( (foo.bar = foo.bar)() ); // global console .log( ( false || foo.bar)() ) // global 1 2 3 4 5 6 7 8 var value = &apos;global&apos; ; var obj = { x: function ( ) { value: &apos;fn&apos; , console .log( this .value); //undefined }, } obj.x(); // local 1 2 3 4 5 6 7 8 9 10 var value = &apos;global&apos; ; var obj = { x: function ( ) { value: &apos;fn&apos; , console .log( this .value); }, value: &apos;local&apos; , } obj.x(); // local"},"this.html#立即函式：":{"title":"&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#xFF1A;","path":"\\javascript\\this.html#立即函式：","body":"1 2 3 4 5 6 7 var name = &apos;&#x5168;&#x57DF;&apos; ; ( function ( ) { function callSomeone ( ) { console .log( this .name); } callSomeone(); //&#x5168;&#x57DF; })(); 1 2 3 4 5 var name = &apos;&#x5168;&#x57DF;&apos; ; ( function ( ) { var name = &apos;&#x5340;&#x57DF;&apos; ; console .log( this .name); //&#x5168;&#x57DF; })() 1 2 3 4 5 6 7 8 9 10 var name = &apos;&#x5168;&#x57DF;&apos; ; var obj = { name: &apos;&#x5340;&#x57DF;&apos; , callName: function ( ) { console .log( this .name); } }; ( function ( ) { obj.callName(); // &#x5340;&#x57DF; })();"},"this.html#Closure":{"title":"Closure","path":"\\javascript\\this.html#Closure","body":"https://jsbin.com/tagalenuje/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 var name = &apos;&#x5168;&#x57DF;&apos; function easyCard ( base = 100 ) { var money = base return function ( update = 10 ) { money = money + update console .log( this .name, money) } } var MingEasyCard = easyCard( 100 ) MingEasyCard(); // 110 MingEasyCard(); // 120 var YourEasyCard = easyCard( 20 ); YourEasyCard(); //30 var YourEasyCard2 = easyCard( 20 ); YourEasyCard2( 100 ); // 120 var MyEasyCard = easyCard( 1000 )( 100 ); MyEasyCard( 100 ); // TypeError: MyEasyCard is not a function 1 2 3 4 5 6 7 8 9 10 11 var name = &apos;&#x5168;&#x57DF;&apos; function easyCard ( base = 100 ) { var money = base var name = &apos;&#x60A0;&#x904A;&#x5361;&apos; return function ( update = 10 ) { money = money + update console .log( this .name, money) // &#x5168;&#x57DF; 110 } } var MingEasyCard = easyCard( 100 ) MingEasyCard()"},"this.html#Callback":{"title":"Callback","path":"\\javascript\\this.html#Callback","body":"1 2 3 4 5 6 7 function myEasyCard ( callback ) { var money = 150 return callback(money) } myEasyCard( function ( money ) { console .log( money + 100 ) //250 }) 1 2 3 4 var a = [ 1 , 2 , 3 ]; a.forEach( function ( item ) { console .log( this , item) }); https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#&#x8A9E;&#x6CD5; 1 2 3 arr.forEach( function callback ( currentValue[, index[, array]] ) { //your iterator }[, thisArg]); &#x9019;&#x500B; callback &#x51FD;&#x5F0F;&#x5C07;&#x6703;&#x628A; Array &#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x4F5C;&#x70BA;&#x53C3;&#x6578;&#xFF0C;&#x5E36;&#x9032;&#x672C; callback &#x51FD;&#x5F0F;&#x88E1;&#xFF0C;&#x6BCF;&#x500B;&#x5143;&#x7D20;&#x5404;&#x57F7;&#x884C;&#x4E00;&#x6B21;&#xFF0C;&#x63A5;&#x6536;&#x4E09;&#x500B;&#x53C3;&#x6578;&#xFF1A; currentValue &#x4EE3;&#x8868;&#x76EE;&#x524D;&#x88AB;&#x8655;&#x7406;&#x4E2D;&#x7684; Array &#x4E4B;&#x4E2D;&#x7684;&#x90A3;&#x500B;&#x5143;&#x7D20;&#x3002; index,array, thisArg &#x9078;&#x64C7;&#x6027; Note: IIFE&#x3001;Closure&#x3001;Callback function &#x8207; this &#x95DC;&#x4FC2;&#x662F;!? &#x6C92;&#x6709;&#x95DC;&#x4FC2;"},"this.html#bind-apply-call":{"title":"bind, apply, call","path":"\\javascript\\this.html#bind-apply-call","body":"call &amp; apply &#x53EF;&#x4EE5;&#x4F5C;&#x70BA;&#x547C;&#x53EB; Function &#x7684;&#x53E6;&#x4E00;&#x500B;&#x624B;&#x6BB5;&#xFF0C;&#x7686;&#x662F;&#x56DE;&#x50B3;function&#x57F7;&#x884C;&#x7D50;&#x679C; &#x800C; bind &#x5247;&#x6703;&#x56DE;&#x50B3;&#x4E00;&#x500B;&#x7D93;&#x904E;&#x5305;&#x88F9;&#x5F8C;&#x7684; Function &#x56DE;&#x4F86;&#xFF0C;&#x56DE;&#x50B3;&#x7684;&#x662F;&#x7D81;&#x5B9A; this &#x5F8C;&#x7684; &#x539F;&#x51FD;&#x6578; &#x3002; &#x300C;&#x7D81;&#x5B9A;this&#x7684;&#x51FD;&#x6578;&#x300D; &#x4E00;&#x4F46;&#x88AB;&#x7D81;&#x5B9A;&#xFF0C;&#x5176;this&#x7121;&#x6CD5;&#x518D;&#x88AB;&#x4FEE;&#x6539;&#x3002; call vs. apply &#x4F5C;&#x7528;&#x5B8C;&#x5168;&#x4E00;&#x6A23;&#xFF0C;&#x53EA;&#x662F;&#x63A5;&#x53D7;&#x53C3;&#x6578;&#x7684;&#x65B9;&#x5F0F;&#x4E0D;&#x592A;&#x4E00;&#x6A23; 1 2 func.call( this , arg1, arg2); func.apply( this , [arg1, arg2]); //&#x9663;&#x5217; JavaScript Call &#x4F7F;&#x7528;&#x7D66;&#x5B9A;&#x7684;this&#x53C3;&#x6578;&#x4EE5;&#x53CA;&#x5206;&#x5225;&#x7D66;&#x5B9A;&#x7684;&#x53C3;&#x6578;&#x4F86;&#x547C;&#x53EB;&#x67D0;&#x500B;&#x51FD;&#x6578; 1 2 3 4 5 6 7 8 9 10 11 function callName ( name ) { console .log( this .name, name); } var name = &apos;&#x5168;&#x57DF;&apos; ; var obj = { name: &apos;&#x5340;&#x57DF;&apos; , } callName( undefined , &apos;&#x5168;&#x57DF;2&apos; ); // &#x5168;&#x57DF; undefined (this.name, name) callName.call( undefined , &apos;&#x547C;&#x53EB;&apos; ); // &#x5168;&#x57DF; &#x547C;&#x53EB; (this.name, name) &#x7121;&#x503C;&#x50B3;&#x5165;this&#x5F80;&#x4E0A;&#x627E; callName.call(obj, &apos;&#x547C;&#x53EB;&apos; ); // &#x5340;&#x57DF; &#x547C;&#x53EB; (this.name, name) bind &#x662F;ES5&#x4E2D;&#x65B0;&#x589E;&#x7684;&#x4E00;&#x500B;&#x65B9;&#x6CD5;&#xFF0C;&#x53EF;&#x4EE5;&#x6539;&#x8B8A;&#x51FD;&#x6578;&#x5167;&#x90E8;&#x7684;this&#x6307;&#x5411; bind&#x7684;&#x61C9;&#x7528;&#x5834;&#x666F; &#x501F;&#x7528;Array&#x7684;&#x539F;&#x751F;&#x65B9;&#x6CD5; https://jsbin.com/pupasabapa/edit?js,console 1 2 3 4 5 6 7 8 9 var a = {}; Array .prototype.push.bind(a, hello , world )(); console .log(a); // [object Object] { // 0: hello, // 1: world, // length: 2 // } http://www.dengzhr.com/js/1069 &#x7BAD;&#x982D;&#x51FD;&#x5F0F; &#x300C;&#x7BAD;&#x982D;&#x51FD;&#x5F0F;&#x6C92;&#x6709;&#x81EA;&#x5DF1;&#x7684; this&#x300D; https://jsbin.com/wuxiqeciko/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 var name = &apos;&#x5168;&#x57DF;&apos; var obj = { name: &apos;&#x5340;&#x57DF;&apos; , callName: function ( ) { // &#x6CE8;&#x610F;&#xFF0C;&#x9019;&#x88E1;&#x662F; function&#xFF0C;&#x4EE5;&#x6B64;&#x70BA;&#x57FA;&#x6E96;&#x7522;&#x751F;&#x4E00;&#x500B;&#x4F5C;&#x7528;&#x57DF; console .log( &apos;1&apos; , this .name); // 1 &#x5340;&#x57DF; setTimeout( () = { console .log( &apos;2&apos; , this .name); // 2 &#x5340;&#x57DF; //console.log(&apos;3&apos;, this); // 3 obj &#x9019;&#x500B;&#x7269;&#x4EF6; }, 10 ); }, callNameArrow: () = { // &#x6CE8;&#x610F;&#xFF0C;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x7BAD;&#x982D;&#x51FD;&#x5F0F;&#xFF0C;this &#x4F9D;&#x7136;&#x6307;&#x5411; window console .log( &apos;4&apos; , this .name); // 4 &#x5168;&#x57DF; setTimeout( () = { console .log( &apos;5&apos; , this .name); // 5 &#x5168;&#x57DF; //console.log(&apos;6&apos;, this); // 6 window &#x7269;&#x4EF6; }, 10 ); } } obj.callName(); obj.callNameArrow(); const func = (x) = x + 1 const func = function (x) { return x + 1 } JS&#x8A9E;&#x8A00;&#x4E2D;&#x51FD;&#x5F0F;&#x7684;&#x8A2D;&#x8A08;&#xFF0C;&#x5FC5;&#x6709;&#x56DE;&#x50B3;&#x503C;&#xFF0C;&#x6C92;&#x5BEB;&#x76F8;&#x7576;&#x65BC;&#x56DE;&#x50B3; undefined map 1 2 3 4 5 6 7 8 9 10 // [&apos;1&apos;,&apos;2&apos;,&apos;3&apos;] &#x5B57;&#x4E32;&#x900F;&#x904E;parseInt &#x8F49;&#x6578;&#x5B57; var arr = [ &apos;1&apos; , &apos;2&apos; , &apos;3&apos; ].map( parseInt ); console .log(arr) // [1, NaN, NaN] var arr = [ &apos;1&apos; , &apos;2&apos; , &apos;3&apos; ].map( function ( item, i ) { console .log(item, i) // parseInt(&apos;1&apos;, 0); parseInt(&apos;2&apos;, 1); parseInt(&apos;3&apos;, 2); // parseInt(&apos;2&apos;, 1) &#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x7684;1 &#x8868;&#x6578;&#x5B57;&#x5230;1 &#x9032;&#x5230;&#x4E0B;&#x4E00;&#x4F4D; &#x6240;&#x4EE5;2&#x4E0D;&#x6703;&#x5B58;&#x5728;NaN // parseInt(&apos;11&apos;, 2) &#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x7684;2 11&#x8868;&#x793A;2+1=3 return parseInt (item, 10 ) // 1 2 3 parseInt(item, i) }); map() callback &#x56DE;&#x547C;&#x51FD;&#x5F0F; &#x53C3;&#x6578; currentValue index array parseInt() radix &#x80FD;&#x4EE3;&#x8868;&#x8A72;&#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x7684;&#x6578;&#x5B57; &#x6CE8;&#x610F;&#xFF0C;&#x901A;&#x5E38;&#x9810;&#x8A2D;&#x503C;&#x4E0D;&#x662F; 10 &#x9032;&#x4F4D; References https://wcc723.github.io/javascript/2019/03/18/JS-THIS/ https://paper.dropbox.com/doc/JSJavaScript-This---AZqD8PDvbl5uk5Mfq_EJlXMkAg-Xw50EZtMFNqG0wUxKeIaz https://wcc723.github.io/javascript/2017/12/21/javascript-es6-arrow-function/"},"scope.html":{"title":"Scope","path":"\\javascript\\scope.html","body":"範圍鏈 當函式本身沒有變數會向外層尋找 1 2 3 4 5 6 7 8 9 10 var value = 1 function fn1 ( )  console .log(value) //沒有變數 向外尋找 指向全域的變數 value=1 //尋找時與執行環境無關 因為js是語法作用域 撰寫時已確定作用域  function fn2 ( )  var value = 2 fn1()  fn2() 變數的作用域在函式內 全域變數 vs 區域變數：內可用外，外不可用內。 不能污染全域變數。 1 2 3 4 5 var value = \"global\" ; var fn = function ( )  console .log(value); // \"global\"  fn(); 1 2 3 4 5 6 7 var value = \"global\" ; var fn = function ( )  console .log(value); // \"global\" value = \"local\" ; console .log(value); // \"local\"  fn(); 1 2 3 4 5 6 var value = \"global\" ; var fn = function ( )  console .log(value); // undefined var value = \"local\" ;  fn(); 1 2 3 4 5 6 7 8 9 var scope = 'global' ; function checkScope ( )  var scope = 'local' ; function fn ( )  return scope;  return fn(); ; console .log( checkScope() ); // \"local\" 1 2 3 4 5 6 7 8 9 var value = 'global' ; var person =  value: 'local' , callSomeone: function ( )  console .log(value) ,  person.callSomeone() //\"global\" 1 2 3 4 5 6 var foo = \"global\" ; ( function ( )  var bar = \"Local\" console .log(foo+bar); //\"globalLocal\" )(); console .log(foo+bar); // \"error\" ReferenceError: bar is not defined 1 2 3 4 5 ( function ( )  var a = b = 1 ; )(); console .log(b); // 1 b沒有宣告 為全域 ‘use strict’ 1 2 3 4 5 ( function ( )  'use strict' ; var a = b = 1 ; )(); console .log(b); // \"error\" \"ReferenceError: b is not defined 注意: 只有將 &#39;use strict&#39; 放在函式開頭才會有作用。 References https://paper.dropbox.com/doc/JS--AaILvqN7Gcen3zEExnLuHUzmAg-K98zBcemd1Ig9DZYYNruL https://wcc723.github.io/javascript/2017/12/15/javascript-use-strict/"},"performance.html":{"title":"Performance","path":"\\javascript\\performance.html","body":"##　Clean Code 如何寫出漂亮的 JavaScript 代碼 優化原則和方向 性能優化的原則是以更好的用戶體驗為標準，具體就是實現下面的目標： 多使用內存、緩存或者其他方法 減少 CPU 和GPU 計算，更快展現 優化的方向有兩個： 減少頁面體積，提升網路加載 靜態資源的壓縮合併（JS 代碼壓縮合併、CSS 代碼壓縮合併） 靜態資源緩存（資源名稱加 MD5 戳） 使用 CDN 讓資源加載更快 優化頁面渲染 CSS 放前面，JS 放後面 懶加載（圖片懶加載、下拉加載更多） DOM 查詢做緩存 減少DOM 操作，多個操作儘量合併在一起執行（ DocumentFragment ） 儘早執行操作（ DOMContentLoaded ） 事件節流 使用 SSR 後端渲染，數據直接輸出到 HTML 中，減少瀏覽器使用 JS 模板渲染頁面 HTML 的時間 懶加載 一開始先給為 src 賦值成一個通用的預覽圖，下拉時候再動態賦值成正式的圖片。如下，preview.png是預覽圖片，比較小，加載很快，而且很多圖片都共用這個preview.png，加載一次即可。待頁面下拉，圖片顯示出來時，再去替換src為 data-realsrc 的值。 1 2 3 4 5  img src = \"img1\" src = \"preview.jpg\" data-realsrc = 'abc.png'   script type = \"text/javascript\"  \t var img1 = document .getElementById( 'img1' ) \timg1.src= img1.getAttribute( 'data-realsrc' ) / script  另外，這裡為何要用data-開頭的屬性值？ 所有 HTML 中自定義的屬性，都應該用 data- 開頭，因為 data- 開頭的屬性瀏覽器渲染的時候會忽略掉，提高渲染性能。 DOM 查詢做緩存 1 2 3 4 // 每次循環，都會查詢 DOM ，耗費性能 var i for (i = 0 ; i  document .getElementsByTagName( 'p' ).length; i++)   1 2 3 4 5 6 // 只查詢一個 DOM ，緩存在 pList 中了 var pList = document .getElementsByTagName( 'p' ) var i for (i = 0 ; i  pList.length; i++)  //todo  合併 DOM 插入 (createDocumentFragment) DOM 操作是非常耗費性能的，因此插入多個標籤時，先插入 Fragment 然後再統一插入 DOM。 1 2 3 4 5 6 7 8 9 10 var listNode = document .getElementById( 'list' ) // 要插入 10 個 li 標籤 var frag = document .createDocumentFragment(); var x, li; for (x = 0 ; x  10 ; x++)  li = document .createElement( \"li\" ); li.innerHTML = \"List item \" + x; frag.appendChild(li); // 先放在 frag 中，最後一次性插入到 DOM 結構中。  listNode.appendChild(frag); 儘早執行操作 (DOMContentLoaded) 1 2 3 4 5 6 window .addEventListener( 'load' , function ( )  // 頁面的全部資源加載完才會執行，包括圖片、視頻等 ) document .addEventListener( 'DOMContentLoaded' , function ( )  // DOM 渲染完即可執行，此時圖片、視頻還可能沒有加載完 ) 事件節流 例如要在文字改變時觸發一個 change 事件，通過 keyup 來監聽。使用節流。 鍵盤事件 keydown：按下鍵盤鍵 keyup：釋放鍵盤鍵 1 2 3 4 5 6 7 8 9 10 11 12 // 輸入完觸發文字修改事件 var textarea = document .getElementById( 'text' ) var timeoutId textarea.addEventListener( 'keyup' , function ( )  if (timeoutId)  clearTimeout(timeoutId)  // 讓連續鍵入不要頻繁觸發 change 事件 停下才觸發 timeoutId = setTimeout( function ( )  // 觸發 change 事件 , 100 ) ) Rreferences https://is.gd/0IyWU2 https://www.jianshu.com/p/8f839f558319"},"performance.html#優化原則和方向":{"title":"&#x512A;&#x5316;&#x539F;&#x5247;&#x548C;&#x65B9;&#x5411;","path":"\\javascript\\performance.html#優化原則和方向","body":"&#x6027;&#x80FD;&#x512A;&#x5316;&#x7684;&#x539F;&#x5247;&#x662F;&#x4EE5;&#x66F4;&#x597D;&#x7684;&#x7528;&#x6236;&#x9AD4;&#x9A57;&#x70BA;&#x6A19;&#x6E96;&#xFF0C;&#x5177;&#x9AD4;&#x5C31;&#x662F;&#x5BE6;&#x73FE;&#x4E0B;&#x9762;&#x7684;&#x76EE;&#x6A19;&#xFF1A; &#x591A;&#x4F7F;&#x7528;&#x5167;&#x5B58;&#x3001;&#x7DE9;&#x5B58;&#x6216;&#x8005;&#x5176;&#x4ED6;&#x65B9;&#x6CD5; &#x6E1B;&#x5C11; CPU &#x548C;GPU &#x8A08;&#x7B97;&#xFF0C;&#x66F4;&#x5FEB;&#x5C55;&#x73FE; &#x512A;&#x5316;&#x7684;&#x65B9;&#x5411;&#x6709;&#x5169;&#x500B;&#xFF1A; &#x6E1B;&#x5C11;&#x9801;&#x9762;&#x9AD4;&#x7A4D;&#xFF0C;&#x63D0;&#x5347;&#x7DB2;&#x8DEF;&#x52A0;&#x8F09; &#x975C;&#x614B;&#x8CC7;&#x6E90;&#x7684;&#x58D3;&#x7E2E;&#x5408;&#x4F75;&#xFF08;JS &#x4EE3;&#x78BC;&#x58D3;&#x7E2E;&#x5408;&#x4F75;&#x3001;CSS &#x4EE3;&#x78BC;&#x58D3;&#x7E2E;&#x5408;&#x4F75;&#xFF09; &#x975C;&#x614B;&#x8CC7;&#x6E90;&#x7DE9;&#x5B58;&#xFF08;&#x8CC7;&#x6E90;&#x540D;&#x7A31;&#x52A0; MD5 &#x6233;&#xFF09; &#x4F7F;&#x7528; CDN &#x8B93;&#x8CC7;&#x6E90;&#x52A0;&#x8F09;&#x66F4;&#x5FEB; &#x512A;&#x5316;&#x9801;&#x9762;&#x6E32;&#x67D3; CSS &#x653E;&#x524D;&#x9762;&#xFF0C;JS &#x653E;&#x5F8C;&#x9762; &#x61F6;&#x52A0;&#x8F09;&#xFF08;&#x5716;&#x7247;&#x61F6;&#x52A0;&#x8F09;&#x3001;&#x4E0B;&#x62C9;&#x52A0;&#x8F09;&#x66F4;&#x591A;&#xFF09; DOM &#x67E5;&#x8A62;&#x505A;&#x7DE9;&#x5B58; &#x6E1B;&#x5C11;DOM &#x64CD;&#x4F5C;&#xFF0C;&#x591A;&#x500B;&#x64CD;&#x4F5C;&#x5118;&#x91CF;&#x5408;&#x4F75;&#x5728;&#x4E00;&#x8D77;&#x57F7;&#x884C;&#xFF08; DocumentFragment &#xFF09; &#x5118;&#x65E9;&#x57F7;&#x884C;&#x64CD;&#x4F5C;&#xFF08; DOMContentLoaded &#xFF09; &#x4E8B;&#x4EF6;&#x7BC0;&#x6D41; &#x4F7F;&#x7528; SSR &#x5F8C;&#x7AEF;&#x6E32;&#x67D3;&#xFF0C;&#x6578;&#x64DA;&#x76F4;&#x63A5;&#x8F38;&#x51FA;&#x5230; HTML &#x4E2D;&#xFF0C;&#x6E1B;&#x5C11;&#x700F;&#x89BD;&#x5668;&#x4F7F;&#x7528; JS &#x6A21;&#x677F;&#x6E32;&#x67D3;&#x9801;&#x9762; HTML &#x7684;&#x6642;&#x9593;"},"performance.html#懶加載":{"title":"&#x61F6;&#x52A0;&#x8F09;","path":"\\javascript\\performance.html#懶加載","body":"&#x4E00;&#x958B;&#x59CB;&#x5148;&#x7D66;&#x70BA; src &#x8CE6;&#x503C;&#x6210;&#x4E00;&#x500B;&#x901A;&#x7528;&#x7684;&#x9810;&#x89BD;&#x5716;&#xFF0C;&#x4E0B;&#x62C9;&#x6642;&#x5019;&#x518D;&#x52D5;&#x614B;&#x8CE6;&#x503C;&#x6210;&#x6B63;&#x5F0F;&#x7684;&#x5716;&#x7247;&#x3002;&#x5982;&#x4E0B;&#xFF0C;preview.png&#x662F;&#x9810;&#x89BD;&#x5716;&#x7247;&#xFF0C;&#x6BD4;&#x8F03;&#x5C0F;&#xFF0C;&#x52A0;&#x8F09;&#x5F88;&#x5FEB;&#xFF0C;&#x800C;&#x4E14;&#x5F88;&#x591A;&#x5716;&#x7247;&#x90FD;&#x5171;&#x7528;&#x9019;&#x500B;preview.png&#xFF0C;&#x52A0;&#x8F09;&#x4E00;&#x6B21;&#x5373;&#x53EF;&#x3002;&#x5F85;&#x9801;&#x9762;&#x4E0B;&#x62C9;&#xFF0C;&#x5716;&#x7247;&#x986F;&#x793A;&#x51FA;&#x4F86;&#x6642;&#xFF0C;&#x518D;&#x53BB;&#x66FF;&#x63DB;src&#x70BA; data-realsrc &#x7684;&#x503C;&#x3002; 1 2 3 4 5  img src = img1 src = preview.jpg data-realsrc = &apos;abc.png&apos;   script type = text/javascript  \t var img1 = document .getElementById( &apos;img1&apos; ) \timg1.src= img1.getAttribute( &apos;data-realsrc&apos; ) / script  &#x53E6;&#x5916;&#xFF0C;&#x9019;&#x88E1;&#x70BA;&#x4F55;&#x8981;&#x7528;data-&#x958B;&#x982D;&#x7684;&#x5C6C;&#x6027;&#x503C;&#xFF1F; &#x6240;&#x6709; HTML &#x4E2D;&#x81EA;&#x5B9A;&#x7FA9;&#x7684;&#x5C6C;&#x6027;&#xFF0C;&#x90FD;&#x61C9;&#x8A72;&#x7528; data- &#x958B;&#x982D;&#xFF0C;&#x56E0;&#x70BA; data- &#x958B;&#x982D;&#x7684;&#x5C6C;&#x6027;&#x700F;&#x89BD;&#x5668;&#x6E32;&#x67D3;&#x7684;&#x6642;&#x5019;&#x6703;&#x5FFD;&#x7565;&#x6389;&#xFF0C;&#x63D0;&#x9AD8;&#x6E32;&#x67D3;&#x6027;&#x80FD;&#x3002;"},"performance.html#DOM-查詢做緩存":{"title":"DOM &#x67E5;&#x8A62;&#x505A;&#x7DE9;&#x5B58;","path":"\\javascript\\performance.html#DOM-查詢做緩存","body":"1 2 3 4 // &#x6BCF;&#x6B21;&#x5FAA;&#x74B0;&#xFF0C;&#x90FD;&#x6703;&#x67E5;&#x8A62; DOM &#xFF0C;&#x8017;&#x8CBB;&#x6027;&#x80FD; var i for (i = 0 ; i  document .getElementsByTagName( &apos;p&apos; ).length; i++) { } 1 2 3 4 5 6 // &#x53EA;&#x67E5;&#x8A62;&#x4E00;&#x500B; DOM &#xFF0C;&#x7DE9;&#x5B58;&#x5728; pList &#x4E2D;&#x4E86; var pList = document .getElementsByTagName( &apos;p&apos; ) var i for (i = 0 ; i  pList.length; i++) { //todo }"},"performance.html#合併-DOM-插入-createDocumentFragment":{"title":"&#x5408;&#x4F75; DOM &#x63D2;&#x5165; (createDocumentFragment)","path":"\\javascript\\performance.html#合併-DOM-插入-createDocumentFragment","body":"DOM &#x64CD;&#x4F5C;&#x662F;&#x975E;&#x5E38;&#x8017;&#x8CBB;&#x6027;&#x80FD;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x63D2;&#x5165;&#x591A;&#x500B;&#x6A19;&#x7C64;&#x6642;&#xFF0C;&#x5148;&#x63D2;&#x5165; Fragment &#x7136;&#x5F8C;&#x518D;&#x7D71;&#x4E00;&#x63D2;&#x5165; DOM&#x3002; 1 2 3 4 5 6 7 8 9 10 var listNode = document .getElementById( &apos;list&apos; ) // &#x8981;&#x63D2;&#x5165; 10 &#x500B; li &#x6A19;&#x7C64; var frag = document .createDocumentFragment(); var x, li; for (x = 0 ; x  10 ; x++) { li = document .createElement( li ); li.innerHTML = List item  + x; frag.appendChild(li); // &#x5148;&#x653E;&#x5728; frag &#x4E2D;&#xFF0C;&#x6700;&#x5F8C;&#x4E00;&#x6B21;&#x6027;&#x63D2;&#x5165;&#x5230; DOM &#x7D50;&#x69CB;&#x4E2D;&#x3002; } listNode.appendChild(frag);"},"performance.html#儘早執行操作-DOMContentLoaded":{"title":"&#x5118;&#x65E9;&#x57F7;&#x884C;&#x64CD;&#x4F5C; (DOMContentLoaded)","path":"\\javascript\\performance.html#儘早執行操作-DOMContentLoaded","body":"1 2 3 4 5 6 window .addEventListener( &apos;load&apos; , function ( ) { // &#x9801;&#x9762;&#x7684;&#x5168;&#x90E8;&#x8CC7;&#x6E90;&#x52A0;&#x8F09;&#x5B8C;&#x624D;&#x6703;&#x57F7;&#x884C;&#xFF0C;&#x5305;&#x62EC;&#x5716;&#x7247;&#x3001;&#x8996;&#x983B;&#x7B49; }) document .addEventListener( &apos;DOMContentLoaded&apos; , function ( ) { // DOM &#x6E32;&#x67D3;&#x5B8C;&#x5373;&#x53EF;&#x57F7;&#x884C;&#xFF0C;&#x6B64;&#x6642;&#x5716;&#x7247;&#x3001;&#x8996;&#x983B;&#x9084;&#x53EF;&#x80FD;&#x6C92;&#x6709;&#x52A0;&#x8F09;&#x5B8C; })"},"performance.html#事件節流":{"title":"&#x4E8B;&#x4EF6;&#x7BC0;&#x6D41;","path":"\\javascript\\performance.html#事件節流","body":"&#x4F8B;&#x5982;&#x8981;&#x5728;&#x6587;&#x5B57;&#x6539;&#x8B8A;&#x6642;&#x89F8;&#x767C;&#x4E00;&#x500B; change &#x4E8B;&#x4EF6;&#xFF0C;&#x901A;&#x904E; keyup &#x4F86;&#x76E3;&#x807D;&#x3002;&#x4F7F;&#x7528;&#x7BC0;&#x6D41;&#x3002; &#x9375;&#x76E4;&#x4E8B;&#x4EF6; keydown&#xFF1A;&#x6309;&#x4E0B;&#x9375;&#x76E4;&#x9375; keyup&#xFF1A;&#x91CB;&#x653E;&#x9375;&#x76E4;&#x9375; 1 2 3 4 5 6 7 8 9 10 11 12 // &#x8F38;&#x5165;&#x5B8C;&#x89F8;&#x767C;&#x6587;&#x5B57;&#x4FEE;&#x6539;&#x4E8B;&#x4EF6; var textarea = document .getElementById( &apos;text&apos; ) var timeoutId textarea.addEventListener( &apos;keyup&apos; , function ( ) { if (timeoutId) { clearTimeout(timeoutId) } // &#x8B93;&#x9023;&#x7E8C;&#x9375;&#x5165;&#x4E0D;&#x8981;&#x983B;&#x7E41;&#x89F8;&#x767C; change &#x4E8B;&#x4EF6; &#x505C;&#x4E0B;&#x624D;&#x89F8;&#x767C; timeoutId = setTimeout( function ( ) { // &#x89F8;&#x767C; change &#x4E8B;&#x4EF6; }, 100 ) }) Rreferences https://is.gd/0IyWU2 https://www.jianshu.com/p/8f839f558319"},"math.html":{"title":"問題","path":"\\javascript\\math.html","body":"浮點數運算的坑 JavaScript 浮点数陷阱及解法 當你拿到 1.4000000000000001 這樣的數據要展示時，建議使用 toPrecision 湊整併 parseFloat 轉成數字後再顯示，如下： parseFloat(1.4000000000000001.toPrecision(12)) === 1.4 // True 百分比 轉 小數 問題 1 2 3 4 5 6 var a = 0.9 ; var b = a / 100 ; var c = parseFloat ( (a / 100 ).toPrecision( 12 )) console .log(b) // 0.009000000000000001 console .log(c) // 0.009 科學符號處理 npm from-exponential 1 2 3 4 5 6 7 8 span v-text= \"getPriceValue(order.itemPrice)\"  / span  import fromExponential from 'from-exponential' methods:  getPriceValue(value)  return fromExponential(value)   why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 這只是JavaScript遵循IEEE 754標準所產生的必然結果。 IEEE 754標準中 的浮點數並不能精確地表達小數（比如說0.1）， JavaScript中的小數採用的是雙精度(64位)表示的，由三部分組成：　符 + 階碼 + 尾數 IEEE 754 雙精度。六十四位中符號位佔一位，整數位佔十一位，其餘五十二位都為小數位。 因為浮點數隻有52位有效數字，從第53位開始，就舍入了。這樣就造成了“浮點數精度損失”問題。 因為 0.1 和 0.2 都是無限循環的二進制了，所以在小數位末尾處需要判斷是否進位（就和十進制的四捨五入一樣）。 計算機表示十進制是採用二進製表示的，所以 0.1 在二進製表示為 `0.1.toString(2) // “0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01” 小數的算法，是乘2 0.1 × 2 ￣￣￣￣ 0.2 → 取小數前的 0 0.2 × 2 ￣￣￣￣ 0.4 → 取小數前的 0 0.4 × 2 ￣￣￣￣ 0.8 → 取小數前的 0 0.8 × 2 ￣￣￣￣ 1.6 → 取小數前的 1 0.6 × 2 ￣￣￣￣ 1.2 → 取小數前的 1 0.2 × 2 ￣￣￣￣ 0.4 → 取小數前的 0 十進位 0.1 = 二進位 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 從上面可以看出，0.1的二進制格式是：0.0001100011….。這是一個二進制無限循環小數，但計算機內存有限，我們不能用儲存所有的小數位數。那麼在精度與內存間如何取捨呢？ 答案是： 在某個精度點直接捨棄 (第53位開始)。當然，代價就是，0.1在計算機內部根本就不是精確的0.1，而是一個有舍入誤差的0.1。當代碼被編譯或解釋後，0.1已經被四捨五入成一個與之很接近的計算機內部數字，以至於計算還沒開始，一個很小的舍入錯誤就已經產生了。這也就是 0.1 + 0.2 不等於0.3 的原因。 使用JavaScript內置的函數 toPrecision 或 toFixed 來保留一定的精度： (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true 不要相信js的計算 善用 math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"math.html#浮點數運算的坑":{"title":"&#x6D6E;&#x9EDE;&#x6578;&#x904B;&#x7B97;&#x7684;&#x5751;","path":"\\javascript\\math.html#浮點數運算的坑","body":"JavaScript &#x6D6E;&#x70B9;&#x6570;&#x9677;&#x9631;&#x53CA;&#x89E3;&#x6CD5; &#x7576;&#x4F60;&#x62FF;&#x5230; 1.4000000000000001 &#x9019;&#x6A23;&#x7684;&#x6578;&#x64DA;&#x8981;&#x5C55;&#x793A;&#x6642;&#xFF0C;&#x5EFA;&#x8B70;&#x4F7F;&#x7528; toPrecision &#x6E4A;&#x6574;&#x4F75; parseFloat &#x8F49;&#x6210;&#x6578;&#x5B57;&#x5F8C;&#x518D;&#x986F;&#x793A;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; parseFloat(1.4000000000000001.toPrecision(12)) === 1.4 // True &#x767E;&#x5206;&#x6BD4; &#x8F49; &#x5C0F;&#x6578; &#x554F;&#x984C; 1 2 3 4 5 6 var a = 0.9 ; var b = a / 100 ; var c = parseFloat ( (a / 100 ).toPrecision( 12 )) console .log(b) // 0.009000000000000001 console .log(c) // 0.009 &#x79D1;&#x5B78;&#x7B26;&#x865F;&#x8655;&#x7406; npm from-exponential 1 2 3 4 5 6 7 8 span v-text= getPriceValue(order.itemPrice)  / span  import fromExponential from &apos;from-exponential&apos; methods: { getPriceValue(value) { return fromExponential(value) } } why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002; IEEE 754&#x6A19;&#x6E96;&#x4E2D; &#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"math.html#科學符號處理":{"title":"&#x79D1;&#x5B78;&#x7B26;&#x865F;&#x8655;&#x7406;","path":"\\javascript\\math.html#科學符號處理","body":"npm from-exponential 1 2 3 4 5 6 7 8 span v-text= getPriceValue(order.itemPrice)  / span  import fromExponential from &apos;from-exponential&apos; methods: { getPriceValue(value) { return fromExponential(value) } } why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002; IEEE 754&#x6A19;&#x6E96;&#x4E2D; &#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"math.html#why-0-1-0-2-0-3":{"title":"why 0.1 + 0.2 != 0.3","path":"\\javascript\\math.html#why-0-1-0-2-0-3","body":"0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002; IEEE 754&#x6A19;&#x6E96;&#x4E2D; &#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"operators.html":{"title":"Operators","path":"\\javascript\\operators.html","body":"What is the difference between the equality operators == and === ? 三個等號 === 表示嚴格相等，也就是說類型和值都必須相同。兩個等號 == 會使其中一邊的類型進行強制轉換，使等號兩邊的類型都相等後再對數值進行比較。 加分回答 儘量使用全等操作符。因為其沒有隱式轉換，這樣結果會比較容易預測、計算也會比較快 除了等於操作符，還可以使用 Object.is 進行同值比較。他有著自己的特殊用途，不應說他更寬鬆或更嚴格於其他等於操作符 === 比較不是一個比較好的解決方式，你可以得到這樣的結果： NaN === NaN //false 好消息是在 ES6 有一個新的 Object.is() ，它是更精確而且和 === 有相同的功能，在某些特殊情況下也運作的很好： Mozilla 團隊 不認為 Object.is 比 === 更嚴格，他們宣稱我們應該思考這些方法如何處理 NaN、-0 和 +0 1 2 3 4 Object .is( 0 , ' ' ); //false Object .is( null , undefined ); //false Object .is([ 1 ], true ); //false Object .is( NaN , NaN ); //true https://jsbin.com/guqetaviho/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 var a = true , b = 1 ; console .log(a==b); //true console .log(a===b); //false console .log(a==b== 1 ); //true console .log(a===b== 1 ); //false console .log(a===b=== 1 ); //false console .log(a==b=== 1 ); // false console .log(a==b== 0 ); // false console .log(a===b== 0 ); // true console .log(a===b=== 0 ); // false console .log(a==b=== 0 ); // false http://www.jstips.co/zh_tw/javascript/why-you-should-use-Object.is()-in-equality-comparison/ https://30secondsofinterviews.org/ https://hacpai.com/article/1546570870626?r=Vanessa ++ Increment 後置遞增 i++ 和前置遞增 ++i 操作有什麼區別？ 他們都會使變量增加 1，只是計算和賦值的順序不一樣。 後置遞增是先賦值後計算，如： 1 2 3 4 5 let i = 1 ; console .log(i); // 1 let a = i++; console .log(i); // 2 console .log(a); // 1 前置遞增是先計算後賦值，如： 1 2 3 4 5 let i = 1 ; console .log(i); // 1 let a = ++i; console .log(i); // 2 console .log(a); // 2 https://jsbin.com/samaxubazo/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 function aFunc ( x )  return () = console .log(x++);  function bFunc ( x )  return x++;  function cFunc ( x )  return ++x;  let newFunc = aFunc( 1 ) newFunc() //1 newFunc() //2 newFunc() //3 console .log(bFunc( 1 )) //1 console .log(cFunc( 1 )) //2 references https://www.w3schools.com/js/js_operators.asp https://hacpai.com/article/1546665384680?r=Vanessa Adding Strings and Numbers 1 2 3 var x = 5 + 5 ; // 10 var y = \"5\" + 5 ; // 55 var z = \"Hello\" + 5 ; //Hello5 https://jsbin.com/hupumaxoru/edit?js,console 1 2 3 4 5 6 7 8 9 console .log( 1 + \"2\" + \"2\" ); // \"122\" //console.log(1++\"2\"+\"2\"); // \"error\" \"ReferenceError: Invalid left-hand side expression in postfix operation console .log( 1 + + \"2\" + \"2\" ); // \"32\" console .log( 1 + - \"1\" + \"2\" ); // \"02\" console .log(+ \"1\" + + \"1\" + \"2\" ); // \"22\" console .log( \"A\" - \"B\" ); // NaN console .log( \"A\" - \"B\" + \"2\" ); // \"NaN2\" console .log( \"A\" + \"B\" + \"2\" ); // \"AB2\" console .log( \"A\" + \"B\" + 2 ); // \"AB2\" https://www.w3schools.com/js/js_operators.asp"},"operators.html#What-is-the-difference-between-the-equality-operators-and":{"title":"What is the difference between the equality operators == and === ?","path":"\\javascript\\operators.html#What-is-the-difference-between-the-equality-operators-and","body":"&#x4E09;&#x500B;&#x7B49;&#x865F; === &#x8868;&#x793A;&#x56B4;&#x683C;&#x76F8;&#x7B49;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#x985E;&#x578B;&#x548C;&#x503C;&#x90FD;&#x5FC5;&#x9808;&#x76F8;&#x540C;&#x3002;&#x5169;&#x500B;&#x7B49;&#x865F; == &#x6703;&#x4F7F;&#x5176;&#x4E2D;&#x4E00;&#x908A;&#x7684;&#x985E;&#x578B;&#x9032;&#x884C;&#x5F37;&#x5236;&#x8F49;&#x63DB;&#xFF0C;&#x4F7F;&#x7B49;&#x865F;&#x5169;&#x908A;&#x7684;&#x985E;&#x578B;&#x90FD;&#x76F8;&#x7B49;&#x5F8C;&#x518D;&#x5C0D;&#x6578;&#x503C;&#x9032;&#x884C;&#x6BD4;&#x8F03;&#x3002; &#x52A0;&#x5206;&#x56DE;&#x7B54; &#x5118;&#x91CF;&#x4F7F;&#x7528;&#x5168;&#x7B49;&#x64CD;&#x4F5C;&#x7B26;&#x3002;&#x56E0;&#x70BA;&#x5176;&#x6C92;&#x6709;&#x96B1;&#x5F0F;&#x8F49;&#x63DB;&#xFF0C;&#x9019;&#x6A23;&#x7D50;&#x679C;&#x6703;&#x6BD4;&#x8F03;&#x5BB9;&#x6613;&#x9810;&#x6E2C;&#x3001;&#x8A08;&#x7B97;&#x4E5F;&#x6703;&#x6BD4;&#x8F03;&#x5FEB; &#x9664;&#x4E86;&#x7B49;&#x65BC;&#x64CD;&#x4F5C;&#x7B26;&#xFF0C;&#x9084;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; Object.is &#x9032;&#x884C;&#x540C;&#x503C;&#x6BD4;&#x8F03;&#x3002;&#x4ED6;&#x6709;&#x8457;&#x81EA;&#x5DF1;&#x7684;&#x7279;&#x6B8A;&#x7528;&#x9014;&#xFF0C;&#x4E0D;&#x61C9;&#x8AAA;&#x4ED6;&#x66F4;&#x5BEC;&#x9B06;&#x6216;&#x66F4;&#x56B4;&#x683C;&#x65BC;&#x5176;&#x4ED6;&#x7B49;&#x65BC;&#x64CD;&#x4F5C;&#x7B26; === &#x6BD4;&#x8F03;&#x4E0D;&#x662F;&#x4E00;&#x500B;&#x6BD4;&#x8F03;&#x597D;&#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x5F0F;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x9019;&#x6A23;&#x7684;&#x7D50;&#x679C;&#xFF1A; NaN === NaN //false &#x597D;&#x6D88;&#x606F;&#x662F;&#x5728; ES6 &#x6709;&#x4E00;&#x500B;&#x65B0;&#x7684; Object.is() &#xFF0C;&#x5B83;&#x662F;&#x66F4;&#x7CBE;&#x78BA;&#x800C;&#x4E14;&#x548C; === &#x6709;&#x76F8;&#x540C;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x5728;&#x67D0;&#x4E9B;&#x7279;&#x6B8A;&#x60C5;&#x6CC1;&#x4E0B;&#x4E5F;&#x904B;&#x4F5C;&#x7684;&#x5F88;&#x597D;&#xFF1A; Mozilla &#x5718;&#x968A; &#x4E0D;&#x8A8D;&#x70BA; Object.is &#x6BD4; === &#x66F4;&#x56B4;&#x683C;&#xFF0C;&#x4ED6;&#x5011;&#x5BA3;&#x7A31;&#x6211;&#x5011;&#x61C9;&#x8A72;&#x601D;&#x8003;&#x9019;&#x4E9B;&#x65B9;&#x6CD5;&#x5982;&#x4F55;&#x8655;&#x7406; NaN&#x3001;-0 &#x548C; +0 1 2 3 4 Object .is( 0 , &apos; &apos; ); //false Object .is( null , undefined ); //false Object .is([ 1 ], true ); //false Object .is( NaN , NaN ); //true https://jsbin.com/guqetaviho/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 var a = true , b = 1 ; console .log(a==b); //true console .log(a===b); //false console .log(a==b== 1 ); //true console .log(a===b== 1 ); //false console .log(a===b=== 1 ); //false console .log(a==b=== 1 ); // false console .log(a==b== 0 ); // false console .log(a===b== 0 ); // true console .log(a===b=== 0 ); // false console .log(a==b=== 0 ); // false http://www.jstips.co/zh_tw/javascript/why-you-should-use-Object.is()-in-equality-comparison/ https://30secondsofinterviews.org/ https://hacpai.com/article/1546570870626?r=Vanessa"},"operators.html#Increment":{"title":"++ Increment","path":"\\javascript\\operators.html#Increment","body":"&#x5F8C;&#x7F6E;&#x905E;&#x589E; i++ &#x548C;&#x524D;&#x7F6E;&#x905E;&#x589E; ++i &#x64CD;&#x4F5C;&#x6709;&#x4EC0;&#x9EBC;&#x5340;&#x5225;&#xFF1F; &#x4ED6;&#x5011;&#x90FD;&#x6703;&#x4F7F;&#x8B8A;&#x91CF;&#x589E;&#x52A0; 1&#xFF0C;&#x53EA;&#x662F;&#x8A08;&#x7B97;&#x548C;&#x8CE6;&#x503C;&#x7684;&#x9806;&#x5E8F;&#x4E0D;&#x4E00;&#x6A23;&#x3002; &#x5F8C;&#x7F6E;&#x905E;&#x589E;&#x662F;&#x5148;&#x8CE6;&#x503C;&#x5F8C;&#x8A08;&#x7B97;&#xFF0C;&#x5982;&#xFF1A; 1 2 3 4 5 let i = 1 ; console .log(i); // 1 let a = i++; console .log(i); // 2 console .log(a); // 1 &#x524D;&#x7F6E;&#x905E;&#x589E;&#x662F;&#x5148;&#x8A08;&#x7B97;&#x5F8C;&#x8CE6;&#x503C;&#xFF0C;&#x5982;&#xFF1A; 1 2 3 4 5 let i = 1 ; console .log(i); // 1 let a = ++i; console .log(i); // 2 console .log(a); // 2 https://jsbin.com/samaxubazo/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 function aFunc ( x ) { return () = console .log(x++); } function bFunc ( x ) { return x++; } function cFunc ( x ) { return ++x; } let newFunc = aFunc( 1 ) newFunc() //1 newFunc() //2 newFunc() //3 console .log(bFunc( 1 )) //1 console .log(cFunc( 1 )) //2 references https://www.w3schools.com/js/js_operators.asp https://hacpai.com/article/1546665384680?r=Vanessa"},"operators.html#references":{"title":"references","path":"\\javascript\\operators.html#references","body":"https://www.w3schools.com/js/js_operators.asp https://hacpai.com/article/1546665384680?r=Vanessa"},"operators.html#Adding-Strings-and-Numbers":{"title":"Adding Strings and Numbers","path":"\\javascript\\operators.html#Adding-Strings-and-Numbers","body":"1 2 3 var x = 5 + 5 ; // 10 var y = 5 + 5 ; // 55 var z = Hello + 5 ; //Hello5 https://jsbin.com/hupumaxoru/edit?js,console 1 2 3 4 5 6 7 8 9 console .log( 1 + 2 + 2 ); // 122 //console.log(1++2+2); // error ReferenceError: Invalid left-hand side expression in postfix operation console .log( 1 + + 2 + 2 ); // 32 console .log( 1 + - 1 + 2 ); // 02 console .log(+ 1 + + 1 + 2 ); // 22 console .log( A - B ); // NaN console .log( A - B + 2 ); // NaN2 console .log( A + B + 2 ); // AB2 console .log( A + B + 2 ); // AB2 https://www.w3schools.com/js/js_operators.asp"},"url.html":{"title":"URL","path":"\\javascript\\url.html","body":"取得網址的property window.location.href 取得目前造訪網頁的網址 window.location.protocol 取得目前造訪網頁的通訊協定(protocol) window.location.host 取得目前造訪網頁的主機名稱(hostname), 包含port window.location.hostname 取得目前造訪網頁的主機名稱(hostname) window.location.pathname 取得目前造訪網頁的路徑(path) window.location.hash 取得目前造訪網頁茅點(#)(hashtag) window.location.port 取得目前造訪網頁的port window.location.search 取得目前造訪網頁查詢參數(?) sample location.href = https://${window.location.host}"},"variable.html":{"title":"Variable","path":"\\javascript\\variable.html","body":"1 2 3 4 5 6 7 8 9 10 11 var name = 'Jacob' ; console .log( window .name); //\"Jacob\" mom = 'Jacob' ; console .log( window .name); //\"Jacob\" ( function ( )  name = 'Jacob' )(); console .log( window .name); //\"Jacob\" 宣告的變數不能被刪除 屬性可以被刪除 1 2 3 4 5 6 7 8 9 10 11 var name1 = \"Jacob1\" ; name2 = \"Jacob2\" ; ( function ( )  name3 = \"Jacob3\" ; )(); delete name1; delete name2; delete name3; console .log( window .name1); //\"Jacob1\" console .log( window .name2); // undefined console .log( window .name3); // undefined 變數的作用域在函式內 1 2 3 4 5 6 7 8 9 10 11 var value1 = \"global\" ; var class1 =  value2: \"local\" , function1 : function ( )  var value3 = \"function\" ;   console .log(value1); //\"global\" console .log(class1.value2); //\"local\" console .log(class1.value3); //undefined 1 2 3 4 5 6 7 8 9 10 11 12 var value = 1 ; function foo ( )  console .log(value); // 1  function bar ( )  var value = 2 ; foo();  bar(); Hoisting 函式會自動提升 1 2 3 4 callSomeone( 'Jacob' ); // \"打給 Jacob\" function callSomeone ( name )  console .log( '打給 ' + name)  變數會自動被提升 1 console .log(myname); // \"error\" ReferenceError: myname is not defined 1 2 console .log(myname); // undefined var myname = 'jacob' ; 1 2 3 4 5 6 7 8 9 10 fn() function fn ( params )  console .log(a) // undefined if (a)  a = 2 ;  console .log(a) // undefined  var a = 1 ; console .log(a) // 1 1 2 3 4 5 6 7 8 9 10 fn() function fn ( params )  console .log(a) // undefined if (! a)  a = 2 ;  console .log(a) // 2  var a = 1 ; console .log(a) // 1 1 2 3 4 5 fn(); function fn ( )  console .log(a); // undefined  var a = 1 ; 1 2 3 4 5 6 7 8 9 function foo ( )  console .log( '1' );  foo(); // 第一次執行 \"2\" function foo ( )  console .log( '2' );  foo(); // 第二次執行 \"2\" 動態型別 1 2 3 4 5 6 var a = '1' ; console .log( typeof a) // \"string\" a = +a; console .log( typeof a) // \"number\" a = a + '' ; console .log( typeof a) // \"string\" 1 console .log( 100 === '10' * 10 ) // true '10' * 10 = number https://paper.dropbox.com/doc/JavaScript--AaHkVSbD5F40g8SUfOv1i9ehAg-K98zBcemd1Ig9DZYYNruL"},"variable.html#變數的作用域在函式內":{"title":"&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x5728;&#x51FD;&#x5F0F;&#x5167;","path":"\\javascript\\variable.html#變數的作用域在函式內","body":"1 2 3 4 5 6 7 8 9 10 11 var value1 = global ; var class1 = { value2: local , function1 : function ( ) { var value3 = function ; } } console .log(value1); //global console .log(class1.value2); //local console .log(class1.value3); //undefined 1 2 3 4 5 6 7 8 9 10 11 12 var value = 1 ; function foo ( ) { console .log(value); // 1 } function bar ( ) { var value = 2 ; foo(); } bar();"},"variable.html#Hoisting":{"title":"Hoisting","path":"\\javascript\\variable.html#Hoisting","body":"&#x51FD;&#x5F0F;&#x6703;&#x81EA;&#x52D5;&#x63D0;&#x5347; 1 2 3 4 callSomeone( &apos;Jacob&apos; ); // &#x6253;&#x7D66; Jacob function callSomeone ( name ) { console .log( &apos;&#x6253;&#x7D66; &apos; + name) } &#x8B8A;&#x6578;&#x6703;&#x81EA;&#x52D5;&#x88AB;&#x63D0;&#x5347; 1 console .log(myname); // error ReferenceError: myname is not defined 1 2 console .log(myname); // undefined var myname = &apos;jacob&apos; ; 1 2 3 4 5 6 7 8 9 10 fn() function fn ( params ) { console .log(a) // undefined if (a) { a = 2 ; } console .log(a) // undefined } var a = 1 ; console .log(a) // 1 1 2 3 4 5 6 7 8 9 10 fn() function fn ( params ) { console .log(a) // undefined if (! a) { a = 2 ; } console .log(a) // 2 } var a = 1 ; console .log(a) // 1 1 2 3 4 5 fn(); function fn ( ) { console .log(a); // undefined } var a = 1 ; 1 2 3 4 5 6 7 8 9 function foo ( ) { console .log( &apos;1&apos; ); } foo(); // &#x7B2C;&#x4E00;&#x6B21;&#x57F7;&#x884C; 2 function foo ( ) { console .log( &apos;2&apos; ); } foo(); // &#x7B2C;&#x4E8C;&#x6B21;&#x57F7;&#x884C; 2"},"variable.html#動態型別":{"title":"&#x52D5;&#x614B;&#x578B;&#x5225;","path":"\\javascript\\variable.html#動態型別","body":"1 2 3 4 5 6 var a = &apos;1&apos; ; console .log( typeof a) // string a = +a; console .log( typeof a) // number a = a + &apos;&apos; ; console .log( typeof a) // string 1 console .log( 100 === &apos;10&apos; * 10 ) // true &apos;10&apos; * 10 = number https://paper.dropbox.com/doc/JavaScript--AaHkVSbD5F40g8SUfOv1i9ehAg-K98zBcemd1Ig9DZYYNruL"},"F2E/header.html":{"title":"Header","path":"\\javascript\\F2E\\header.html","body":"HTTP Referer 教程 Referer 提供訪問來源的信息。 引薦人（referrer） ，誰引薦了你？ HTTP 協議在請求（request）的頭信息裡面，設計了一個Referer字段，給出 “引薦網頁” 的 URL。 字段是可選的。 主要是以下三種場景，會發送Referer字段。 （1）用戶點擊網頁上的鏈接。 （2）用戶發送表單。 （3）網頁加載靜態資源，比如加載圖片、腳本、樣式。 ###　Referer 的作用 涉及隱私，很多時候不適合發送 Referer 字段 不適合暴露 URL。一是功能URL，即有的URL不要登錄，可以訪問，就能直接完成 密碼重置、郵件退訂 等功能。 還有一種特殊情況，需要定製Referer字段。比如 社交網站 上，用戶在對話中提到某個網址。這時，不希望暴露用戶所在的原始網址，但是可以暴露社交網站的域名，讓對方知道，是我貢獻了你的流量。 nginx 真實IP Remote-Addr X-Forwarded-For X-Real-IP X-Forwarded-For（XFF） 是用來辨識通過HTTP代理或負載均衡方式連接到Web伺服器的用戶端最原始的IP位址的HTTP請求頭欄位。"},"F2E/cookie.html":{"title":"Cookie","path":"\\javascript\\F2E\\cookie.html","body":"因為HTTP 本身是 無狀態(Stateless) 的協議。 無論是客戶端還是服務器端，每一次的請求都是獨立性質，而且沒有必要紀錄彼此過去的互動行為，自然而然他沒辦法記憶你每次請求的內容。 舉凡像是登入來說，過去我們總是必須藉著不斷又不斷的登打帳號密碼，來完成網站上身分驗證的這件事情，起因當然是因為HTTP的無狀態(stateless)通訊協議造成的，而 Cookie 就是用來繞開HTTP的無狀態性的「額外手段」之一，讓伺服器可以設定或讀取Cookies中所包含資訊，藉此來維護我們在使用服務時，可以在背景完成向伺服器發送請求，接著伺服器就匯回傳包含登入憑據（使用者名稱加密碼的某種加密形式）的Cookie文檔，到使用者的硬碟(或記憶體上)，在之後登入時，只要Cookie尚未到期，瀏覽器會傳送該Cookie給伺服器作驗證憑據，來減少重複登入的輸入行為。 什麼是 Cookie？ Cookie 是您訪問過的網站創建的文件，用於存儲瀏覽信息，例如您的網站偏好設置或個人資料信息。 共有兩種類型的 Cookie： 第一方 Cookie 是由地址欄中列出的網站域設置的 Cookie， 而第三方 Cookie 來自在網頁上嵌入廣告或圖片等項的其他域來源。 Cookie可以用來提升用戶體驗，比如網站可以使用Cookie來記錄用戶的登錄狀態，用戶只要登錄一次就可以不用登錄了，購物網站通過Cookie來保存購物車中的商品等。同時很多的網站分析都是依靠Cookie來完成的。 第一方Cookie和第三方Cookie區別 第一方 Cookie 是 設定在您目前造訪之網域中 的 Cookie。例如，如果您在 www.adobe.com/tw 中，使用第一方 Cookie 時，Cookie 會設定在 adobe.com 網域中。 第三方 Cookie 是 設定在目前造訪網域以外的 其他網域中的 Cookie。例如，如果您造訪 www.adobe.com 且 Cookie 設定在 omtrdc.com 網域中，這便是第三方 Cookie。 Cookie是必須的，離開Cookie我們什麼也分析不了。 第一方Cookie接受率高，更準確，沒有特殊需要就用他。 第三方Cookie可以跨域跟蹤，特別需求可以應用。 第三方Cookie 這種 Cookie 是透過如社群網路等第三方程式安裝，主要目的為在本公司網站整合社群媒體內容，如社群插件 (Social Plugins)。 比如，訪問 www.a.com這個網站，這個網站設置了一個Cookie，這個Cookie也只能被 www.a.com 這個域下的網頁讀取，這就是第一方Cookie。 如果還是訪問 www.a.com這個網站，網頁裡有用到 www.b.com網站的一張圖片，瀏覽器在 www.b.com請求圖片的時候，www.b.com 設置了一個Cookie，那這個Cookie只能被 www.b.com這個域訪問，反而不能被 www.a.com 這個域訪問， 因為對我們來說，我們實際是在訪問 www.a.com這個網站被設置了一個www.b.com這個域下的Cookie，所以叫第三方Cookie。 第三方Cookie的優勢和應用 比如，當我們有多個域名的網站需要跟蹤，我們希望瞭解到用戶點擊某個廣告到達域名A下的網頁，然後可能瀏覽了不論那個域名下的頁面，最後在域名B下的網頁完成註冊的情況。廣告可以在域名A下的網頁被跟蹤到，而註冊可以在域名B下的網頁跟蹤到。 如果我們使用第一方Cookie，會為域名A建立一個Cookie，為域名B再建立一個Cookie，他們可以關聯各自域名下網頁上的行為，但是無法關聯起來。 而使用第三方Cookie，那麼無論多少個域，都只有一個Cookie，一個屬於第三方域的Cookie，網站下所有域都能共享這個Cookie，那麼所有的行為都能被關聯起來分析。 缺點 網頁第三方 Cookies（Third-Party Cookies）會洩漏網頁瀏覽的隱私 Session又是什麼呢? Cookie就像 取餐的號碼牌，認號不認人 ，如果今天遺失或是被別人幹走，那你的餐點就會被其他人給領走，更別提關閉瀏覽器之後Cookie就會有被清除的風險了。 Session有點類似會話的概念，Session機制是一種服務器端的機制。 是一種持久網路協定，讓Client端與Server端可以作一種對話，並將兩端建立關連，保持伺服器與Client可以持續的與Server作交談。 它表示了「面向、連接」和/或「保持狀態」這樣兩個異議 「面向、連接」表是客戶端和Server端通信前要先建立一個通信的渠道 「保持狀態」，則是指通信交談的其中一方，可以所有的消息作關聯，就像是巷口的早餐店阿姨，還記得你最愛吃的火腿蛋不喜歡有美乃滋。 所以我們可以想像 Cookie是一張領餐的號碼牌，而Session可以是一張數位會員卡 ，不僅可以記錄你的點餐號碼，還可以記憶你的餐點細節，消費記錄和點餐喜好…等。而這就解決號碼牌遺失領不到餐的問題，但是他不是記憶你帥氣得穿搭或長像，而是靠著所謂的Session ID。 當我們需要為某個客戶端的請求創建一個Session的時候，服務器首先檢查這個客戶端的請求裡是否有包含了Session標識，就是剛剛提到的 Session id，當然如果已包含一個Session id，就表示這個客戶是老司機啦，當然伺服器端以前就為了這個客戶端創建過Session，服務器就按照Session id，把這個Session找出來使用。但如果客戶端請求不包含Session id，，則表示他是新臉孔，那伺服器端就為此客戶端創建一個Session，並生成一個Session id，並在本次響應中返回給客戶端保存。 但是在最初的 Session 設計中，我們都會把資料記錄在 Server端 上，如 Database、記憶體或是利用檔案交換的方式，來把你的點餐資訊作儲存，而當你去領飲料時，店員會輸入你的號碼，並在叫出你點的內容。但如果是大型網站上，如果有負載平衡的機制，你怎麼能確定你當初輸入和最後取餐的Server是同一台呢，而這樣作當你資料量大時，也會有效能影響的問題，這時候Cookie就出場了。 保存這個Session id的方式也可以採用Cookie ，但似乎很多人都有一種彷彿瀏覽器關掉Session也會消失的錯覺，但本質上並非如此，就像會員卡，除非你主動提出銷卡，否則店家不會刪除顧客資料，這件事情對Session來說也如出一轍，除非通知Server刪除Session，否則Server端會一直保留來保持會話暢通，但瀏覽器從來不會主動在關閉前通知服務器要關閉 大部分Session機制都使用會話Cookie來保存Session ID 而關閉瀏覽器後因為Cookie消失造成 Session id也消失了，但只要把原來的Session ID再發送給Server，那還是能夠找到原來的Session 。 但大家都會擔心，Cookie和Session得結合，到底還會不會有被竄改的問題，這個時候就要靠”簽章”來驗證資料的真實性，在我使用Cookie請求時，可以加一個簽章，也就是在我傳輸的資料後面加上一個對應的秘密字串，當伺服器回傳時，可以回應該字串，若是其他使用者偷偷串改的話，由於串改的資料和我的秘密字串無法相符，當然也無法作偽造，這就是所謂的 SignedCookie 但記住Session就像是你的會員卡號，不見也表示仍然有資料被竊取的風險。 如果單就實現功能，Cookie與Session彼此之間是可以互換的(指的是你可以把資料存放在Session或是Cookie，並不是指Session可以被放在Client端當Cookie使用)。但是Cookie在最單純的情況裡，是有安全性的問題(資料在Client端)。所以考量到這點，大部分都會選擇Session。但是正如Cookie是一個外加的功能，Session也不屬於HTTP協定。只要是外加功能，就必須額外寫程式實現。 不過現在做網站我們都流行使用框架，Session的機制都被框架所實現了，以Ruby on Rails來說， 預設的Session實現方式是由Cookie來實作的(利用加密與設定過期時間)。 每個框架實現的邏輯都可能不一樣，所以還是要去看官方的說明會比較清楚。 但從這裡可得知，Session並不是一個很明確實體的機制，算是一個概念，只要符合概念所實作出來的功能都可以被叫做Session。 references 第一方Cookie和第三方Cookie區別 判斷您是使用第一方還是第三方 Cookie 五分鐘概述網路界的記憶大神-Session"},"F2E/cookie.html#什麼是-Cookie？":{"title":"&#x4EC0;&#x9EBC;&#x662F; Cookie&#xFF1F;","path":"\\javascript\\F2E\\cookie.html#什麼是-Cookie？","body":"Cookie &#x662F;&#x60A8;&#x8A2A;&#x554F;&#x904E;&#x7684;&#x7DB2;&#x7AD9;&#x5275;&#x5EFA;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x7528;&#x65BC;&#x5B58;&#x5132;&#x700F;&#x89BD;&#x4FE1;&#x606F;&#xFF0C;&#x4F8B;&#x5982;&#x60A8;&#x7684;&#x7DB2;&#x7AD9;&#x504F;&#x597D;&#x8A2D;&#x7F6E;&#x6216;&#x500B;&#x4EBA;&#x8CC7;&#x6599;&#x4FE1;&#x606F;&#x3002; &#x5171;&#x6709;&#x5169;&#x7A2E;&#x985E;&#x578B;&#x7684; Cookie&#xFF1A; &#x7B2C;&#x4E00;&#x65B9; Cookie &#x662F;&#x7531;&#x5730;&#x5740;&#x6B04;&#x4E2D;&#x5217;&#x51FA;&#x7684;&#x7DB2;&#x7AD9;&#x57DF;&#x8A2D;&#x7F6E;&#x7684; Cookie&#xFF0C; &#x800C;&#x7B2C;&#x4E09;&#x65B9; Cookie &#x4F86;&#x81EA;&#x5728;&#x7DB2;&#x9801;&#x4E0A;&#x5D4C;&#x5165;&#x5EE3;&#x544A;&#x6216;&#x5716;&#x7247;&#x7B49;&#x9805;&#x7684;&#x5176;&#x4ED6;&#x57DF;&#x4F86;&#x6E90;&#x3002; Cookie&#x53EF;&#x4EE5;&#x7528;&#x4F86;&#x63D0;&#x5347;&#x7528;&#x6236;&#x9AD4;&#x9A57;&#xFF0C;&#x6BD4;&#x5982;&#x7DB2;&#x7AD9;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;Cookie&#x4F86;&#x8A18;&#x9304;&#x7528;&#x6236;&#x7684;&#x767B;&#x9304;&#x72C0;&#x614B;&#xFF0C;&#x7528;&#x6236;&#x53EA;&#x8981;&#x767B;&#x9304;&#x4E00;&#x6B21;&#x5C31;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;&#x767B;&#x9304;&#x4E86;&#xFF0C;&#x8CFC;&#x7269;&#x7DB2;&#x7AD9;&#x901A;&#x904E;Cookie&#x4F86;&#x4FDD;&#x5B58;&#x8CFC;&#x7269;&#x8ECA;&#x4E2D;&#x7684;&#x5546;&#x54C1;&#x7B49;&#x3002;&#x540C;&#x6642;&#x5F88;&#x591A;&#x7684;&#x7DB2;&#x7AD9;&#x5206;&#x6790;&#x90FD;&#x662F;&#x4F9D;&#x9760;Cookie&#x4F86;&#x5B8C;&#x6210;&#x7684;&#x3002;"},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{"title":"&#x7B2C;&#x4E00;&#x65B9;Cookie&#x548C;&#x7B2C;&#x4E09;&#x65B9;Cookie&#x5340;&#x5225;","path":"\\javascript\\F2E\\cookie.html#第一方Cookie和第三方Cookie區別","body":"&#x7B2C;&#x4E00;&#x65B9; Cookie &#x662F; &#x8A2D;&#x5B9A;&#x5728;&#x60A8;&#x76EE;&#x524D;&#x9020;&#x8A2A;&#x4E4B;&#x7DB2;&#x57DF;&#x4E2D; &#x7684; Cookie&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x60A8;&#x5728; www.adobe.com/tw &#x4E2D;&#xFF0C;&#x4F7F;&#x7528;&#x7B2C;&#x4E00;&#x65B9; Cookie &#x6642;&#xFF0C;Cookie &#x6703;&#x8A2D;&#x5B9A;&#x5728; adobe.com &#x7DB2;&#x57DF;&#x4E2D;&#x3002; &#x7B2C;&#x4E09;&#x65B9; Cookie &#x662F; &#x8A2D;&#x5B9A;&#x5728;&#x76EE;&#x524D;&#x9020;&#x8A2A;&#x7DB2;&#x57DF;&#x4EE5;&#x5916;&#x7684; &#x5176;&#x4ED6;&#x7DB2;&#x57DF;&#x4E2D;&#x7684; Cookie&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x60A8;&#x9020;&#x8A2A; www.adobe.com &#x4E14; Cookie &#x8A2D;&#x5B9A;&#x5728; omtrdc.com &#x7DB2;&#x57DF;&#x4E2D;&#xFF0C;&#x9019;&#x4FBF;&#x662F;&#x7B2C;&#x4E09;&#x65B9; Cookie&#x3002; Cookie&#x662F;&#x5FC5;&#x9808;&#x7684;&#xFF0C;&#x96E2;&#x958B;Cookie&#x6211;&#x5011;&#x4EC0;&#x9EBC;&#x4E5F;&#x5206;&#x6790;&#x4E0D;&#x4E86;&#x3002; &#x7B2C;&#x4E00;&#x65B9;Cookie&#x63A5;&#x53D7;&#x7387;&#x9AD8;&#xFF0C;&#x66F4;&#x6E96;&#x78BA;&#xFF0C;&#x6C92;&#x6709;&#x7279;&#x6B8A;&#x9700;&#x8981;&#x5C31;&#x7528;&#x4ED6;&#x3002; &#x7B2C;&#x4E09;&#x65B9;Cookie&#x53EF;&#x4EE5;&#x8DE8;&#x57DF;&#x8DDF;&#x8E64;&#xFF0C;&#x7279;&#x5225;&#x9700;&#x6C42;&#x53EF;&#x4EE5;&#x61C9;&#x7528;&#x3002; &#x7B2C;&#x4E09;&#x65B9;Cookie &#x9019;&#x7A2E; Cookie &#x662F;&#x900F;&#x904E;&#x5982;&#x793E;&#x7FA4;&#x7DB2;&#x8DEF;&#x7B49;&#x7B2C;&#x4E09;&#x65B9;&#x7A0B;&#x5F0F;&#x5B89;&#x88DD;&#xFF0C;&#x4E3B;&#x8981;&#x76EE;&#x7684;&#x70BA;&#x5728;&#x672C;&#x516C;&#x53F8;&#x7DB2;&#x7AD9;&#x6574;&#x5408;&#x793E;&#x7FA4;&#x5A92;&#x9AD4;&#x5167;&#x5BB9;&#xFF0C;&#x5982;&#x793E;&#x7FA4;&#x63D2;&#x4EF6; (Social Plugins)&#x3002; &#x6BD4;&#x5982;&#xFF0C;&#x8A2A;&#x554F; www.a.com&#x9019;&#x500B;&#x7DB2;&#x7AD9;&#xFF0C;&#x9019;&#x500B;&#x7DB2;&#x7AD9;&#x8A2D;&#x7F6E;&#x4E86;&#x4E00;&#x500B;Cookie&#xFF0C;&#x9019;&#x500B;Cookie&#x4E5F;&#x53EA;&#x80FD;&#x88AB; www.a.com &#x9019;&#x500B;&#x57DF;&#x4E0B;&#x7684;&#x7DB2;&#x9801;&#x8B80;&#x53D6;&#xFF0C;&#x9019;&#x5C31;&#x662F;&#x7B2C;&#x4E00;&#x65B9;Cookie&#x3002; &#x5982;&#x679C;&#x9084;&#x662F;&#x8A2A;&#x554F; www.a.com&#x9019;&#x500B;&#x7DB2;&#x7AD9;&#xFF0C;&#x7DB2;&#x9801;&#x88E1;&#x6709;&#x7528;&#x5230; www.b.com&#x7DB2;&#x7AD9;&#x7684;&#x4E00;&#x5F35;&#x5716;&#x7247;&#xFF0C;&#x700F;&#x89BD;&#x5668;&#x5728; www.b.com&#x8ACB;&#x6C42;&#x5716;&#x7247;&#x7684;&#x6642;&#x5019;&#xFF0C;www.b.com &#x8A2D;&#x7F6E;&#x4E86;&#x4E00;&#x500B;Cookie&#xFF0C;&#x90A3;&#x9019;&#x500B;Cookie&#x53EA;&#x80FD;&#x88AB; www.b.com&#x9019;&#x500B;&#x57DF;&#x8A2A;&#x554F;&#xFF0C;&#x53CD;&#x800C;&#x4E0D;&#x80FD;&#x88AB; www.a.com &#x9019;&#x500B;&#x57DF;&#x8A2A;&#x554F;&#xFF0C; &#x56E0;&#x70BA;&#x5C0D;&#x6211;&#x5011;&#x4F86;&#x8AAA;&#xFF0C;&#x6211;&#x5011;&#x5BE6;&#x969B;&#x662F;&#x5728;&#x8A2A;&#x554F; www.a.com&#x9019;&#x500B;&#x7DB2;&#x7AD9;&#x88AB;&#x8A2D;&#x7F6E;&#x4E86;&#x4E00;&#x500B;www.b.com&#x9019;&#x500B;&#x57DF;&#x4E0B;&#x7684;Cookie&#xFF0C;&#x6240;&#x4EE5;&#x53EB;&#x7B2C;&#x4E09;&#x65B9;Cookie&#x3002; &#x7B2C;&#x4E09;&#x65B9;Cookie&#x7684;&#x512A;&#x52E2;&#x548C;&#x61C9;&#x7528; &#x6BD4;&#x5982;&#xFF0C;&#x7576;&#x6211;&#x5011;&#x6709;&#x591A;&#x500B;&#x57DF;&#x540D;&#x7684;&#x7DB2;&#x7AD9;&#x9700;&#x8981;&#x8DDF;&#x8E64;&#xFF0C;&#x6211;&#x5011;&#x5E0C;&#x671B;&#x77AD;&#x89E3;&#x5230;&#x7528;&#x6236;&#x9EDE;&#x64CA;&#x67D0;&#x500B;&#x5EE3;&#x544A;&#x5230;&#x9054;&#x57DF;&#x540D;A&#x4E0B;&#x7684;&#x7DB2;&#x9801;&#xFF0C;&#x7136;&#x5F8C;&#x53EF;&#x80FD;&#x700F;&#x89BD;&#x4E86;&#x4E0D;&#x8AD6;&#x90A3;&#x500B;&#x57DF;&#x540D;&#x4E0B;&#x7684;&#x9801;&#x9762;&#xFF0C;&#x6700;&#x5F8C;&#x5728;&#x57DF;&#x540D;B&#x4E0B;&#x7684;&#x7DB2;&#x9801;&#x5B8C;&#x6210;&#x8A3B;&#x518A;&#x7684;&#x60C5;&#x6CC1;&#x3002;&#x5EE3;&#x544A;&#x53EF;&#x4EE5;&#x5728;&#x57DF;&#x540D;A&#x4E0B;&#x7684;&#x7DB2;&#x9801;&#x88AB;&#x8DDF;&#x8E64;&#x5230;&#xFF0C;&#x800C;&#x8A3B;&#x518A;&#x53EF;&#x4EE5;&#x5728;&#x57DF;&#x540D;B&#x4E0B;&#x7684;&#x7DB2;&#x9801;&#x8DDF;&#x8E64;&#x5230;&#x3002; &#x5982;&#x679C;&#x6211;&#x5011;&#x4F7F;&#x7528;&#x7B2C;&#x4E00;&#x65B9;Cookie&#xFF0C;&#x6703;&#x70BA;&#x57DF;&#x540D;A&#x5EFA;&#x7ACB;&#x4E00;&#x500B;Cookie&#xFF0C;&#x70BA;&#x57DF;&#x540D;B&#x518D;&#x5EFA;&#x7ACB;&#x4E00;&#x500B;Cookie&#xFF0C;&#x4ED6;&#x5011;&#x53EF;&#x4EE5;&#x95DC;&#x806F;&#x5404;&#x81EA;&#x57DF;&#x540D;&#x4E0B;&#x7DB2;&#x9801;&#x4E0A;&#x7684;&#x884C;&#x70BA;&#xFF0C;&#x4F46;&#x662F;&#x7121;&#x6CD5;&#x95DC;&#x806F;&#x8D77;&#x4F86;&#x3002; &#x800C;&#x4F7F;&#x7528;&#x7B2C;&#x4E09;&#x65B9;Cookie&#xFF0C;&#x90A3;&#x9EBC;&#x7121;&#x8AD6;&#x591A;&#x5C11;&#x500B;&#x57DF;&#xFF0C;&#x90FD;&#x53EA;&#x6709;&#x4E00;&#x500B;Cookie&#xFF0C;&#x4E00;&#x500B;&#x5C6C;&#x65BC;&#x7B2C;&#x4E09;&#x65B9;&#x57DF;&#x7684;Cookie&#xFF0C;&#x7DB2;&#x7AD9;&#x4E0B;&#x6240;&#x6709;&#x57DF;&#x90FD;&#x80FD;&#x5171;&#x4EAB;&#x9019;&#x500B;Cookie&#xFF0C;&#x90A3;&#x9EBC;&#x6240;&#x6709;&#x7684;&#x884C;&#x70BA;&#x90FD;&#x80FD;&#x88AB;&#x95DC;&#x806F;&#x8D77;&#x4F86;&#x5206;&#x6790;&#x3002; &#x7F3A;&#x9EDE; &#x7DB2;&#x9801;&#x7B2C;&#x4E09;&#x65B9; Cookies&#xFF08;Third-Party Cookies&#xFF09;&#x6703;&#x6D29;&#x6F0F;&#x7DB2;&#x9801;&#x700F;&#x89BD;&#x7684;&#x96B1;&#x79C1; Session&#x53C8;&#x662F;&#x4EC0;&#x9EBC;&#x5462;? Cookie&#x5C31;&#x50CF; &#x53D6;&#x9910;&#x7684;&#x865F;&#x78BC;&#x724C;&#xFF0C;&#x8A8D;&#x865F;&#x4E0D;&#x8A8D;&#x4EBA; &#xFF0C;&#x5982;&#x679C;&#x4ECA;&#x5929;&#x907A;&#x5931;&#x6216;&#x662F;&#x88AB;&#x5225;&#x4EBA;&#x5E79;&#x8D70;&#xFF0C;&#x90A3;&#x4F60;&#x7684;&#x9910;&#x9EDE;&#x5C31;&#x6703;&#x88AB;&#x5176;&#x4ED6;&#x4EBA;&#x7D66;&#x9818;&#x8D70;&#xFF0C;&#x66F4;&#x5225;&#x63D0;&#x95DC;&#x9589;&#x700F;&#x89BD;&#x5668;&#x4E4B;&#x5F8C;Cookie&#x5C31;&#x6703;&#x6709;&#x88AB;&#x6E05;&#x9664;&#x7684;&#x98A8;&#x96AA;&#x4E86;&#x3002; Session&#x6709;&#x9EDE;&#x985E;&#x4F3C;&#x6703;&#x8A71;&#x7684;&#x6982;&#x5FF5;&#xFF0C;Session&#x6A5F;&#x5236;&#x662F;&#x4E00;&#x7A2E;&#x670D;&#x52D9;&#x5668;&#x7AEF;&#x7684;&#x6A5F;&#x5236;&#x3002; &#x662F;&#x4E00;&#x7A2E;&#x6301;&#x4E45;&#x7DB2;&#x8DEF;&#x5354;&#x5B9A;&#xFF0C;&#x8B93;Client&#x7AEF;&#x8207;Server&#x7AEF;&#x53EF;&#x4EE5;&#x4F5C;&#x4E00;&#x7A2E;&#x5C0D;&#x8A71;&#xFF0C;&#x4E26;&#x5C07;&#x5169;&#x7AEF;&#x5EFA;&#x7ACB;&#x95DC;&#x9023;&#xFF0C;&#x4FDD;&#x6301;&#x4F3A;&#x670D;&#x5668;&#x8207;Client&#x53EF;&#x4EE5;&#x6301;&#x7E8C;&#x7684;&#x8207;Server&#x4F5C;&#x4EA4;&#x8AC7;&#x3002; &#x5B83;&#x8868;&#x793A;&#x4E86;&#x300C;&#x9762;&#x5411;&#x3001;&#x9023;&#x63A5;&#x300D;&#x548C;/&#x6216;&#x300C;&#x4FDD;&#x6301;&#x72C0;&#x614B;&#x300D;&#x9019;&#x6A23;&#x5169;&#x500B;&#x7570;&#x8B70; &#x300C;&#x9762;&#x5411;&#x3001;&#x9023;&#x63A5;&#x300D;&#x8868;&#x662F;&#x5BA2;&#x6236;&#x7AEF;&#x548C;Server&#x7AEF;&#x901A;&#x4FE1;&#x524D;&#x8981;&#x5148;&#x5EFA;&#x7ACB;&#x4E00;&#x500B;&#x901A;&#x4FE1;&#x7684;&#x6E20;&#x9053; &#x300C;&#x4FDD;&#x6301;&#x72C0;&#x614B;&#x300D;&#xFF0C;&#x5247;&#x662F;&#x6307;&#x901A;&#x4FE1;&#x4EA4;&#x8AC7;&#x7684;&#x5176;&#x4E2D;&#x4E00;&#x65B9;&#xFF0C;&#x53EF;&#x4EE5;&#x6240;&#x6709;&#x7684;&#x6D88;&#x606F;&#x4F5C;&#x95DC;&#x806F;&#xFF0C;&#x5C31;&#x50CF;&#x662F;&#x5DF7;&#x53E3;&#x7684;&#x65E9;&#x9910;&#x5E97;&#x963F;&#x59E8;&#xFF0C;&#x9084;&#x8A18;&#x5F97;&#x4F60;&#x6700;&#x611B;&#x5403;&#x7684;&#x706B;&#x817F;&#x86CB;&#x4E0D;&#x559C;&#x6B61;&#x6709;&#x7F8E;&#x4E43;&#x6ECB;&#x3002; &#x6240;&#x4EE5;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x60F3;&#x50CF; Cookie&#x662F;&#x4E00;&#x5F35;&#x9818;&#x9910;&#x7684;&#x865F;&#x78BC;&#x724C;&#xFF0C;&#x800C;Session&#x53EF;&#x4EE5;&#x662F;&#x4E00;&#x5F35;&#x6578;&#x4F4D;&#x6703;&#x54E1;&#x5361; &#xFF0C;&#x4E0D;&#x50C5;&#x53EF;&#x4EE5;&#x8A18;&#x9304;&#x4F60;&#x7684;&#x9EDE;&#x9910;&#x865F;&#x78BC;&#xFF0C;&#x9084;&#x53EF;&#x4EE5;&#x8A18;&#x61B6;&#x4F60;&#x7684;&#x9910;&#x9EDE;&#x7D30;&#x7BC0;&#xFF0C;&#x6D88;&#x8CBB;&#x8A18;&#x9304;&#x548C;&#x9EDE;&#x9910;&#x559C;&#x597D;&#x2026;&#x7B49;&#x3002;&#x800C;&#x9019;&#x5C31;&#x89E3;&#x6C7A;&#x865F;&#x78BC;&#x724C;&#x907A;&#x5931;&#x9818;&#x4E0D;&#x5230;&#x9910;&#x7684;&#x554F;&#x984C;&#xFF0C;&#x4F46;&#x662F;&#x4ED6;&#x4E0D;&#x662F;&#x8A18;&#x61B6;&#x4F60;&#x5E25;&#x6C23;&#x5F97;&#x7A7F;&#x642D;&#x6216;&#x9577;&#x50CF;&#xFF0C;&#x800C;&#x662F;&#x9760;&#x8457;&#x6240;&#x8B02;&#x7684;Session ID&#x3002; &#x7576;&#x6211;&#x5011;&#x9700;&#x8981;&#x70BA;&#x67D0;&#x500B;&#x5BA2;&#x6236;&#x7AEF;&#x7684;&#x8ACB;&#x6C42;&#x5275;&#x5EFA;&#x4E00;&#x500B;Session&#x7684;&#x6642;&#x5019;&#xFF0C;&#x670D;&#x52D9;&#x5668;&#x9996;&#x5148;&#x6AA2;&#x67E5;&#x9019;&#x500B;&#x5BA2;&#x6236;&#x7AEF;&#x7684;&#x8ACB;&#x6C42;&#x88E1;&#x662F;&#x5426;&#x6709;&#x5305;&#x542B;&#x4E86;Session&#x6A19;&#x8B58;&#xFF0C;&#x5C31;&#x662F;&#x525B;&#x525B;&#x63D0;&#x5230;&#x7684; Session id&#xFF0C;&#x7576;&#x7136;&#x5982;&#x679C;&#x5DF2;&#x5305;&#x542B;&#x4E00;&#x500B;Session id&#xFF0C;&#x5C31;&#x8868;&#x793A;&#x9019;&#x500B;&#x5BA2;&#x6236;&#x662F;&#x8001;&#x53F8;&#x6A5F;&#x5566;&#xFF0C;&#x7576;&#x7136;&#x4F3A;&#x670D;&#x5668;&#x7AEF;&#x4EE5;&#x524D;&#x5C31;&#x70BA;&#x4E86;&#x9019;&#x500B;&#x5BA2;&#x6236;&#x7AEF;&#x5275;&#x5EFA;&#x904E;Session&#xFF0C;&#x670D;&#x52D9;&#x5668;&#x5C31;&#x6309;&#x7167;Session id&#xFF0C;&#x628A;&#x9019;&#x500B;Session&#x627E;&#x51FA;&#x4F86;&#x4F7F;&#x7528;&#x3002;&#x4F46;&#x5982;&#x679C;&#x5BA2;&#x6236;&#x7AEF;&#x8ACB;&#x6C42;&#x4E0D;&#x5305;&#x542B;Session id&#xFF0C;&#xFF0C;&#x5247;&#x8868;&#x793A;&#x4ED6;&#x662F;&#x65B0;&#x81C9;&#x5B54;&#xFF0C;&#x90A3;&#x4F3A;&#x670D;&#x5668;&#x7AEF;&#x5C31;&#x70BA;&#x6B64;&#x5BA2;&#x6236;&#x7AEF;&#x5275;&#x5EFA;&#x4E00;&#x500B;Session&#xFF0C;&#x4E26;&#x751F;&#x6210;&#x4E00;&#x500B;Session id&#xFF0C;&#x4E26;&#x5728;&#x672C;&#x6B21;&#x97FF;&#x61C9;&#x4E2D;&#x8FD4;&#x56DE;&#x7D66;&#x5BA2;&#x6236;&#x7AEF;&#x4FDD;&#x5B58;&#x3002; &#x4F46;&#x662F;&#x5728;&#x6700;&#x521D;&#x7684; Session &#x8A2D;&#x8A08;&#x4E2D;&#xFF0C;&#x6211;&#x5011;&#x90FD;&#x6703;&#x628A;&#x8CC7;&#x6599;&#x8A18;&#x9304;&#x5728; Server&#x7AEF; &#x4E0A;&#xFF0C;&#x5982; Database&#x3001;&#x8A18;&#x61B6;&#x9AD4;&#x6216;&#x662F;&#x5229;&#x7528;&#x6A94;&#x6848;&#x4EA4;&#x63DB;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x4F86;&#x628A;&#x4F60;&#x7684;&#x9EDE;&#x9910;&#x8CC7;&#x8A0A;&#x4F5C;&#x5132;&#x5B58;&#xFF0C;&#x800C;&#x7576;&#x4F60;&#x53BB;&#x9818;&#x98F2;&#x6599;&#x6642;&#xFF0C;&#x5E97;&#x54E1;&#x6703;&#x8F38;&#x5165;&#x4F60;&#x7684;&#x865F;&#x78BC;&#xFF0C;&#x4E26;&#x5728;&#x53EB;&#x51FA;&#x4F60;&#x9EDE;&#x7684;&#x5167;&#x5BB9;&#x3002;&#x4F46;&#x5982;&#x679C;&#x662F;&#x5927;&#x578B;&#x7DB2;&#x7AD9;&#x4E0A;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x8CA0;&#x8F09;&#x5E73;&#x8861;&#x7684;&#x6A5F;&#x5236;&#xFF0C;&#x4F60;&#x600E;&#x9EBC;&#x80FD;&#x78BA;&#x5B9A;&#x4F60;&#x7576;&#x521D;&#x8F38;&#x5165;&#x548C;&#x6700;&#x5F8C;&#x53D6;&#x9910;&#x7684;Server&#x662F;&#x540C;&#x4E00;&#x53F0;&#x5462;&#xFF0C;&#x800C;&#x9019;&#x6A23;&#x4F5C;&#x7576;&#x4F60;&#x8CC7;&#x6599;&#x91CF;&#x5927;&#x6642;&#xFF0C;&#x4E5F;&#x6703;&#x6709;&#x6548;&#x80FD;&#x5F71;&#x97FF;&#x7684;&#x554F;&#x984C;&#xFF0C;&#x9019;&#x6642;&#x5019;Cookie&#x5C31;&#x51FA;&#x5834;&#x4E86;&#x3002; &#x4FDD;&#x5B58;&#x9019;&#x500B;Session id&#x7684;&#x65B9;&#x5F0F;&#x4E5F;&#x53EF;&#x4EE5;&#x63A1;&#x7528;Cookie &#xFF0C;&#x4F46;&#x4F3C;&#x4E4E;&#x5F88;&#x591A;&#x4EBA;&#x90FD;&#x6709;&#x4E00;&#x7A2E;&#x5F77;&#x5F7F;&#x700F;&#x89BD;&#x5668;&#x95DC;&#x6389;Session&#x4E5F;&#x6703;&#x6D88;&#x5931;&#x7684;&#x932F;&#x89BA;&#xFF0C;&#x4F46;&#x672C;&#x8CEA;&#x4E0A;&#x4E26;&#x975E;&#x5982;&#x6B64;&#xFF0C;&#x5C31;&#x50CF;&#x6703;&#x54E1;&#x5361;&#xFF0C;&#x9664;&#x975E;&#x4F60;&#x4E3B;&#x52D5;&#x63D0;&#x51FA;&#x92B7;&#x5361;&#xFF0C;&#x5426;&#x5247;&#x5E97;&#x5BB6;&#x4E0D;&#x6703;&#x522A;&#x9664;&#x9867;&#x5BA2;&#x8CC7;&#x6599;&#xFF0C;&#x9019;&#x4EF6;&#x4E8B;&#x60C5;&#x5C0D;Session&#x4F86;&#x8AAA;&#x4E5F;&#x5982;&#x51FA;&#x4E00;&#x8F4D;&#xFF0C;&#x9664;&#x975E;&#x901A;&#x77E5;Server&#x522A;&#x9664;Session&#xFF0C;&#x5426;&#x5247;Server&#x7AEF;&#x6703;&#x4E00;&#x76F4;&#x4FDD;&#x7559;&#x4F86;&#x4FDD;&#x6301;&#x6703;&#x8A71;&#x66A2;&#x901A;&#xFF0C;&#x4F46;&#x700F;&#x89BD;&#x5668;&#x5F9E;&#x4F86;&#x4E0D;&#x6703;&#x4E3B;&#x52D5;&#x5728;&#x95DC;&#x9589;&#x524D;&#x901A;&#x77E5;&#x670D;&#x52D9;&#x5668;&#x8981;&#x95DC;&#x9589; &#x5927;&#x90E8;&#x5206;Session&#x6A5F;&#x5236;&#x90FD;&#x4F7F;&#x7528;&#x6703;&#x8A71;Cookie&#x4F86;&#x4FDD;&#x5B58;Session ID &#x800C;&#x95DC;&#x9589;&#x700F;&#x89BD;&#x5668;&#x5F8C;&#x56E0;&#x70BA;Cookie&#x6D88;&#x5931;&#x9020;&#x6210; Session id&#x4E5F;&#x6D88;&#x5931;&#x4E86;&#xFF0C;&#x4F46;&#x53EA;&#x8981;&#x628A;&#x539F;&#x4F86;&#x7684;Session ID&#x518D;&#x767C;&#x9001;&#x7D66;Server&#xFF0C;&#x90A3;&#x9084;&#x662F;&#x80FD;&#x5920;&#x627E;&#x5230;&#x539F;&#x4F86;&#x7684;Session &#x3002; &#x4F46;&#x5927;&#x5BB6;&#x90FD;&#x6703;&#x64D4;&#x5FC3;&#xFF0C;Cookie&#x548C;Session&#x5F97;&#x7D50;&#x5408;&#xFF0C;&#x5230;&#x5E95;&#x9084;&#x6703;&#x4E0D;&#x6703;&#x6709;&#x88AB;&#x7AC4;&#x6539;&#x7684;&#x554F;&#x984C;&#xFF0C;&#x9019;&#x500B;&#x6642;&#x5019;&#x5C31;&#x8981;&#x9760;&#x201D;&#x7C3D;&#x7AE0;&#x201D;&#x4F86;&#x9A57;&#x8B49;&#x8CC7;&#x6599;&#x7684;&#x771F;&#x5BE6;&#x6027;&#xFF0C;&#x5728;&#x6211;&#x4F7F;&#x7528;Cookie&#x8ACB;&#x6C42;&#x6642;&#xFF0C;&#x53EF;&#x4EE5;&#x52A0;&#x4E00;&#x500B;&#x7C3D;&#x7AE0;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5728;&#x6211;&#x50B3;&#x8F38;&#x7684;&#x8CC7;&#x6599;&#x5F8C;&#x9762;&#x52A0;&#x4E0A;&#x4E00;&#x500B;&#x5C0D;&#x61C9;&#x7684;&#x79D8;&#x5BC6;&#x5B57;&#x4E32;&#xFF0C;&#x7576;&#x4F3A;&#x670D;&#x5668;&#x56DE;&#x50B3;&#x6642;&#xFF0C;&#x53EF;&#x4EE5;&#x56DE;&#x61C9;&#x8A72;&#x5B57;&#x4E32;&#xFF0C;&#x82E5;&#x662F;&#x5176;&#x4ED6;&#x4F7F;&#x7528;&#x8005;&#x5077;&#x5077;&#x4E32;&#x6539;&#x7684;&#x8A71;&#xFF0C;&#x7531;&#x65BC;&#x4E32;&#x6539;&#x7684;&#x8CC7;&#x6599;&#x548C;&#x6211;&#x7684;&#x79D8;&#x5BC6;&#x5B57;&#x4E32;&#x7121;&#x6CD5;&#x76F8;&#x7B26;&#xFF0C;&#x7576;&#x7136;&#x4E5F;&#x7121;&#x6CD5;&#x4F5C;&#x507D;&#x9020;&#xFF0C;&#x9019;&#x5C31;&#x662F;&#x6240;&#x8B02;&#x7684; SignedCookie &#x4F46;&#x8A18;&#x4F4F;Session&#x5C31;&#x50CF;&#x662F;&#x4F60;&#x7684;&#x6703;&#x54E1;&#x5361;&#x865F;&#xFF0C;&#x4E0D;&#x898B;&#x4E5F;&#x8868;&#x793A;&#x4ECD;&#x7136;&#x6709;&#x8CC7;&#x6599;&#x88AB;&#x7ACA;&#x53D6;&#x7684;&#x98A8;&#x96AA;&#x3002; &#x5982;&#x679C;&#x55AE;&#x5C31;&#x5BE6;&#x73FE;&#x529F;&#x80FD;&#xFF0C;Cookie&#x8207;Session&#x5F7C;&#x6B64;&#x4E4B;&#x9593;&#x662F;&#x53EF;&#x4EE5;&#x4E92;&#x63DB;&#x7684;(&#x6307;&#x7684;&#x662F;&#x4F60;&#x53EF;&#x4EE5;&#x628A;&#x8CC7;&#x6599;&#x5B58;&#x653E;&#x5728;Session&#x6216;&#x662F;Cookie&#xFF0C;&#x4E26;&#x4E0D;&#x662F;&#x6307;Session&#x53EF;&#x4EE5;&#x88AB;&#x653E;&#x5728;Client&#x7AEF;&#x7576;Cookie&#x4F7F;&#x7528;)&#x3002;&#x4F46;&#x662F;Cookie&#x5728;&#x6700;&#x55AE;&#x7D14;&#x7684;&#x60C5;&#x6CC1;&#x88E1;&#xFF0C;&#x662F;&#x6709;&#x5B89;&#x5168;&#x6027;&#x7684;&#x554F;&#x984C;(&#x8CC7;&#x6599;&#x5728;Client&#x7AEF;)&#x3002;&#x6240;&#x4EE5;&#x8003;&#x91CF;&#x5230;&#x9019;&#x9EDE;&#xFF0C;&#x5927;&#x90E8;&#x5206;&#x90FD;&#x6703;&#x9078;&#x64C7;Session&#x3002;&#x4F46;&#x662F;&#x6B63;&#x5982;Cookie&#x662F;&#x4E00;&#x500B;&#x5916;&#x52A0;&#x7684;&#x529F;&#x80FD;&#xFF0C;Session&#x4E5F;&#x4E0D;&#x5C6C;&#x65BC;HTTP&#x5354;&#x5B9A;&#x3002;&#x53EA;&#x8981;&#x662F;&#x5916;&#x52A0;&#x529F;&#x80FD;&#xFF0C;&#x5C31;&#x5FC5;&#x9808;&#x984D;&#x5916;&#x5BEB;&#x7A0B;&#x5F0F;&#x5BE6;&#x73FE;&#x3002; &#x4E0D;&#x904E;&#x73FE;&#x5728;&#x505A;&#x7DB2;&#x7AD9;&#x6211;&#x5011;&#x90FD;&#x6D41;&#x884C;&#x4F7F;&#x7528;&#x6846;&#x67B6;&#xFF0C;Session&#x7684;&#x6A5F;&#x5236;&#x90FD;&#x88AB;&#x6846;&#x67B6;&#x6240;&#x5BE6;&#x73FE;&#x4E86;&#xFF0C;&#x4EE5;Ruby on Rails&#x4F86;&#x8AAA;&#xFF0C; &#x9810;&#x8A2D;&#x7684;Session&#x5BE6;&#x73FE;&#x65B9;&#x5F0F;&#x662F;&#x7531;Cookie&#x4F86;&#x5BE6;&#x4F5C;&#x7684;(&#x5229;&#x7528;&#x52A0;&#x5BC6;&#x8207;&#x8A2D;&#x5B9A;&#x904E;&#x671F;&#x6642;&#x9593;)&#x3002; &#x6BCF;&#x500B;&#x6846;&#x67B6;&#x5BE6;&#x73FE;&#x7684;&#x908F;&#x8F2F;&#x90FD;&#x53EF;&#x80FD;&#x4E0D;&#x4E00;&#x6A23;&#xFF0C;&#x6240;&#x4EE5;&#x9084;&#x662F;&#x8981;&#x53BB;&#x770B;&#x5B98;&#x65B9;&#x7684;&#x8AAA;&#x660E;&#x6703;&#x6BD4;&#x8F03;&#x6E05;&#x695A;&#x3002; &#x4F46;&#x5F9E;&#x9019;&#x88E1;&#x53EF;&#x5F97;&#x77E5;&#xFF0C;Session&#x4E26;&#x4E0D;&#x662F;&#x4E00;&#x500B;&#x5F88;&#x660E;&#x78BA;&#x5BE6;&#x9AD4;&#x7684;&#x6A5F;&#x5236;&#xFF0C;&#x7B97;&#x662F;&#x4E00;&#x500B;&#x6982;&#x5FF5;&#xFF0C;&#x53EA;&#x8981;&#x7B26;&#x5408;&#x6982;&#x5FF5;&#x6240;&#x5BE6;&#x4F5C;&#x51FA;&#x4F86;&#x7684;&#x529F;&#x80FD;&#x90FD;&#x53EF;&#x4EE5;&#x88AB;&#x53EB;&#x505A;Session&#x3002; references &#x7B2C;&#x4E00;&#x65B9;Cookie&#x548C;&#x7B2C;&#x4E09;&#x65B9;Cookie&#x5340;&#x5225; &#x5224;&#x65B7;&#x60A8;&#x662F;&#x4F7F;&#x7528;&#x7B2C;&#x4E00;&#x65B9;&#x9084;&#x662F;&#x7B2C;&#x4E09;&#x65B9; Cookie &#x4E94;&#x5206;&#x9418;&#x6982;&#x8FF0;&#x7DB2;&#x8DEF;&#x754C;&#x7684;&#x8A18;&#x61B6;&#x5927;&#x795E;-Session"},"F2E/GraphQL.html":{"title":"GraphQL","path":"\\javascript\\F2E\\GraphQL.html","body":"GraphQL 是一個用於 API 的查詢語言，是一個使用基於類型系統來執行查詢的服務端運行時（類型系統由你的數據定義）。GraphQL 並沒有和任何特定數據庫或者存儲引擎綁定，而是依靠你現有的代碼和數據支撐。 使用一個 API 系統就像在百貨公司的地下美食廣場買晚餐， 傳統的 RESTful API 會要求你要一家一家 (很多 route) 去點餐，耗時又費力。 GraphQL 的體驗就如同使用APP一樣，百貨公司的餐飲店家們開發出一款點餐APP整合各家的點餐介面，消費者只要把想點的各家食物放進菜單，一鍵送出後就只要等待所有餐點送來桌上，省時又不費力！此外通過 APP 還可以更容易取得額外資訊如餐廳的聯絡方式 有了 GraphQL ，你可以把你的商業模型 (business model) 像圖形 (graph) 一樣串連起來 不同或相同type 的資料可以串接再一起，使得 GraphQL 只要一筆 query 就能一次拿全資料且資料格式非常有彈性！ 反觀 RESTful API 同樣的資料需要多筆 request 才能拿到且格式難以調整。 優點 缺點 資料只拿剛好且彈性十足 過於自由、規範少 程式即文檔 學習成本 前端控制權提升 相關社群仍在開發中 (Apollo) 強型別 Server Side Caching 實作困難 Server Side Caching 實作困難 RESTful API 的 endpoint 固定且資料需求單純，然而 GraphQL 難以保證每次 request 的模樣，因此較難實作 Caching References https://graphql.cn/learn/ https://ithelp.ithome.com.tw/articles/10200678"},"F2E/GraphQL.html#References":{"title":"References","path":"\\javascript\\F2E\\GraphQL.html#References","body":"https://graphql.cn/learn/ https://ithelp.ithome.com.tw/articles/10200678"},"array/array_method.html":{"title":"Array Method","path":"\\javascript\\array\\array_method.html","body":"一行代碼去重數組 Set 1 2 3 const list = [ 1 , 1 , 2 , 3 , 6 , 45 , 8 , 5 , 4 , 6 , 5 ] const uniqueList = [...new Set (list)] // [1, 2, 3, 6, 45, 8, 5, 4] console .log(uniqueList)"},"array/array_methods.html":{"title":"Array methods","path":"\\javascript\\array\\array_methods.html","body":"Array 生成新陣列 map filter forEach 遍歷所有元素 Array.prototype.forEach() https://jsbin.com/xoninaz/edit?js,console 1 2 3 4 5 6 7 8 9 var arr = [ 1 , 2 , 3 ]; arr.forEach( function ( item,index )  console .log(item,index); ); // expected output: 1 0 // expected output: 2 1 // expected output: 3 2 map 對元素重新組裝，生成新陣列 Array.prototype.map() https://jsbin.com/xevunu/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.map( function ( item,index )  return 'b' +item+ '/b' ; ) console .log(arr2); // expected output: [\"b1/b\", \"b2/b\", \"b3/b\"] filter 過濾符合條件的元素，生成新陣列 Array.prototype.filter() https://jsbin.com/xoninaz/1/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.filter( function ( item,index )  if (item 2 )  return true ;  ) console .log(arr2); // expected output: [3] find 回傳第一個滿足所提供之測試函式的元素值。否則回傳 undefined Array.prototype.find() https://jsbin.com/qapevom/edit?js,console 1 2 3 4 5 6 var arr = [ 1 , 2 , 3 ]; var found = arr.find( function ( item,index )  return item 1 ; ) console .log(found); // expected output: 2 sort 對一個陣列的所有元素進行排序，並回傳此陣列 Array.prototype.sort() https://jsbin.com/gaceyen/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 4 , 2 , 3 , 5 ]; var arr2 = arr.sort( function ( a,b )  return a - b; //從小到大排序 //return b - a; //從大到小排序 ) console .log(arr2); // expected output: [1, 2, 3, 4, 5] every 測試陣列 判斷所有元素是否都符合條件 Array.prototype.every() https://jsbin.com/nefobuh/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var result = arr.every( function ( item,index )  if (item 4 )  return true ;  ) console .log(result); // expected output: true some 測試陣列 判斷是否至少一個元素符合條件 Array.prototype.some() https://jsbin.com/yeleboz/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var result = arr.some( function ( item,index )  if (item 2 )  return true ;  ) console .log(result); // expected output: true reduce Array.prototype.reduce() reduce() 方法將一個累加器及陣列中每項元素（由左至右）傳入回呼函式，將陣列化為單一值。 1 2 3 4 5 6 const array1 = [ 1 , 2 , 3 , 4 ]; const reducer = ( accumulator, currentValue ) = accumulator + currentValue; // 1 + 2 + 3 + 4 console .log(array1.reduce(reducer)); // expected output: 10 Return longest string in array https://jsbin.com/razufufago/edit?js,console 1 2 3 var arr = [ \"vue\" , \"raact\" , \"JavaScript\" , \"Angular\" , \"jQuery\" ]; var longest = arr.reduce( ( a, b ) = a.length  b.length ? a : b, '' ); console .log(longest); // \"JavaScript\" examples https://jsbin.com/yapugucezi/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 let arr = [  product : 'The Godfather' , catalog : 'movie' , price : '150' ,  product : 'The Dark Knight' , catalog : 'movie' , price : '100' ,  product : '7 Rings' , catalog : 'music' , price : '300'  ] var arrFilter = arr.filter( function ( item,index )  if (item.catalog == \"movie\" )  return true ;  ) console .log(arrFilter); //arr catalog:'music' var arrSortPrice = arr.sort( function ( a,b )  return b.price - a.price; ) console .log(arrSortPrice); // arr 300 150 100 let sum = 0 ; arr.forEach( function ( element )  sum+= parseInt (element.price); ); console .log(sum); //sum price 550 陣列方法 map() 和 forEach() 有什麼區別？ 這兩種方法都是對陣列中的元素進行迭代。 map() 通過每個元素的回調函數將其映射到新的元素上，最終返回一個新的陣列。 forEach() 雖然也為每一個元素準備了回調函數，但卻不返回新的陣列。 map() 是 保持原有陣列不變的正確選擇 ，他可以讓原始陣列的每一個值都映射到新的陣列上。 forEach() 在每一次迭代的使用中都會產生副作用，因此 map() 是編程技術中常用的方法。 如果你需要迭代一個陣列，使其本身發生變化且不需要返回一個新陣列時，可以使用 forEach() 如果你只是對數字進行遍歷時，也可以使用 forEach() map() 運行的 較快 ，且返回的新陣列可以讓你繼續使用 map()、filter()、reduce() 等方法， 1 2 3 4 const arr = [ 1 , 2 , 3 , 4 , 5 ]; const arr1 = arr.map( num = num * 2 ).filter( num = num  5 ); console .log(arr); // [1, 2, 3, 4, 5] console .log(arr1); // [6, 8, 10] ref: https://hacpai.com/article/1547790109416?r=Vanessa"},"array/array_methods.html#Array":{"title":"Array","path":"\\javascript\\array\\array_methods.html#Array","body":"&#x751F;&#x6210;&#x65B0;&#x9663;&#x5217; map filter"},"array/array_methods.html#forEach":{"title":"forEach","path":"\\javascript\\array\\array_methods.html#forEach","body":"&#x904D;&#x6B77;&#x6240;&#x6709;&#x5143;&#x7D20; Array.prototype.forEach() https://jsbin.com/xoninaz/edit?js,console 1 2 3 4 5 6 7 8 9 var arr = [ 1 , 2 , 3 ]; arr.forEach( function ( item,index ) { console .log(item,index); }); // expected output: 1 0 // expected output: 2 1 // expected output: 3 2"},"array/array_methods.html#map":{"title":"map","path":"\\javascript\\array\\array_methods.html#map","body":"&#x5C0D;&#x5143;&#x7D20;&#x91CD;&#x65B0;&#x7D44;&#x88DD;&#xFF0C;&#x751F;&#x6210;&#x65B0;&#x9663;&#x5217; Array.prototype.map() https://jsbin.com/xevunu/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.map( function ( item,index ) { return &apos;b&apos; +item+ &apos;/b&apos; ; }) console .log(arr2); // expected output: [b1/b, b2/b, b3/b]"},"array/array_methods.html#filter":{"title":"filter","path":"\\javascript\\array\\array_methods.html#filter","body":"&#x904E;&#x6FFE;&#x7B26;&#x5408;&#x689D;&#x4EF6;&#x7684;&#x5143;&#x7D20;&#xFF0C;&#x751F;&#x6210;&#x65B0;&#x9663;&#x5217; Array.prototype.filter() https://jsbin.com/xoninaz/1/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.filter( function ( item,index ) { if (item 2 ) { return true ; } }) console .log(arr2); // expected output: [3]"},"array/array_methods.html#find":{"title":"find","path":"\\javascript\\array\\array_methods.html#find","body":"&#x56DE;&#x50B3;&#x7B2C;&#x4E00;&#x500B;&#x6EFF;&#x8DB3;&#x6240;&#x63D0;&#x4F9B;&#x4E4B;&#x6E2C;&#x8A66;&#x51FD;&#x5F0F;&#x7684;&#x5143;&#x7D20;&#x503C;&#x3002;&#x5426;&#x5247;&#x56DE;&#x50B3; undefined Array.prototype.find() https://jsbin.com/qapevom/edit?js,console 1 2 3 4 5 6 var arr = [ 1 , 2 , 3 ]; var found = arr.find( function ( item,index ) { return item 1 ; }) console .log(found); // expected output: 2"},"array/array_methods.html#sort":{"title":"sort","path":"\\javascript\\array\\array_methods.html#sort","body":"&#x5C0D;&#x4E00;&#x500B;&#x9663;&#x5217;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x9032;&#x884C;&#x6392;&#x5E8F;&#xFF0C;&#x4E26;&#x56DE;&#x50B3;&#x6B64;&#x9663;&#x5217; Array.prototype.sort() https://jsbin.com/gaceyen/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 4 , 2 , 3 , 5 ]; var arr2 = arr.sort( function ( a,b ) { return a - b; //&#x5F9E;&#x5C0F;&#x5230;&#x5927;&#x6392;&#x5E8F; //return b - a; //&#x5F9E;&#x5927;&#x5230;&#x5C0F;&#x6392;&#x5E8F; }) console .log(arr2); // expected output: [1, 2, 3, 4, 5]"},"array/array_methods.html#every":{"title":"every","path":"\\javascript\\array\\array_methods.html#every","body":"&#x6E2C;&#x8A66;&#x9663;&#x5217; &#x5224;&#x65B7;&#x6240;&#x6709;&#x5143;&#x7D20;&#x662F;&#x5426;&#x90FD;&#x7B26;&#x5408;&#x689D;&#x4EF6; Array.prototype.every() https://jsbin.com/nefobuh/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var result = arr.every( function ( item,index ) { if (item 4 ) { return true ; } }) console .log(result); // expected output: true"},"array/array_methods.html#some":{"title":"some","path":"\\javascript\\array\\array_methods.html#some","body":"&#x6E2C;&#x8A66;&#x9663;&#x5217; &#x5224;&#x65B7;&#x662F;&#x5426;&#x81F3;&#x5C11;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x7B26;&#x5408;&#x689D;&#x4EF6; Array.prototype.some() https://jsbin.com/yeleboz/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var result = arr.some( function ( item,index ) { if (item 2 ) { return true ; } }) console .log(result); // expected output: true"},"array/array_methods.html#reduce":{"title":"reduce","path":"\\javascript\\array\\array_methods.html#reduce","body":"Array.prototype.reduce() reduce() &#x65B9;&#x6CD5;&#x5C07;&#x4E00;&#x500B;&#x7D2F;&#x52A0;&#x5668;&#x53CA;&#x9663;&#x5217;&#x4E2D;&#x6BCF;&#x9805;&#x5143;&#x7D20;&#xFF08;&#x7531;&#x5DE6;&#x81F3;&#x53F3;&#xFF09;&#x50B3;&#x5165;&#x56DE;&#x547C;&#x51FD;&#x5F0F;&#xFF0C;&#x5C07;&#x9663;&#x5217;&#x5316;&#x70BA;&#x55AE;&#x4E00;&#x503C;&#x3002; 1 2 3 4 5 6 const array1 = [ 1 , 2 , 3 , 4 ]; const reducer = ( accumulator, currentValue ) = accumulator + currentValue; // 1 + 2 + 3 + 4 console .log(array1.reduce(reducer)); // expected output: 10 Return longest string in array https://jsbin.com/razufufago/edit?js,console 1 2 3 var arr = [ vue , raact , JavaScript , Angular , jQuery ]; var longest = arr.reduce( ( a, b ) = a.length  b.length ? a : b, &apos;&apos; ); console .log(longest); // JavaScript examples https://jsbin.com/yapugucezi/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 let arr = [ { product : &apos;The Godfather&apos; , catalog : &apos;movie&apos; , price : &apos;150&apos; }, { product : &apos;The Dark Knight&apos; , catalog : &apos;movie&apos; , price : &apos;100&apos; }, { product : &apos;7 Rings&apos; , catalog : &apos;music&apos; , price : &apos;300&apos; } ] var arrFilter = arr.filter( function ( item,index ) { if (item.catalog == movie ) { return true ; } }) console .log(arrFilter); //arr catalog:&apos;music&apos; var arrSortPrice = arr.sort( function ( a,b ) { return b.price - a.price; }) console .log(arrSortPrice); // arr 300 150 100 let sum = 0 ; arr.forEach( function ( element ) { sum+= parseInt (element.price); }); console .log(sum); //sum price 550 &#x9663;&#x5217;&#x65B9;&#x6CD5; map() &#x548C; forEach() &#x6709;&#x4EC0;&#x9EBC;&#x5340;&#x5225;&#xFF1F; &#x9019;&#x5169;&#x7A2E;&#x65B9;&#x6CD5;&#x90FD;&#x662F;&#x5C0D;&#x9663;&#x5217;&#x4E2D;&#x7684;&#x5143;&#x7D20;&#x9032;&#x884C;&#x8FED;&#x4EE3;&#x3002; map() &#x901A;&#x904E;&#x6BCF;&#x500B;&#x5143;&#x7D20;&#x7684;&#x56DE;&#x8ABF;&#x51FD;&#x6578;&#x5C07;&#x5176;&#x6620;&#x5C04;&#x5230;&#x65B0;&#x7684;&#x5143;&#x7D20;&#x4E0A;&#xFF0C;&#x6700;&#x7D42;&#x8FD4;&#x56DE;&#x4E00;&#x500B;&#x65B0;&#x7684;&#x9663;&#x5217;&#x3002; forEach() &#x96D6;&#x7136;&#x4E5F;&#x70BA;&#x6BCF;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x6E96;&#x5099;&#x4E86;&#x56DE;&#x8ABF;&#x51FD;&#x6578;&#xFF0C;&#x4F46;&#x537B;&#x4E0D;&#x8FD4;&#x56DE;&#x65B0;&#x7684;&#x9663;&#x5217;&#x3002; map() &#x662F; &#x4FDD;&#x6301;&#x539F;&#x6709;&#x9663;&#x5217;&#x4E0D;&#x8B8A;&#x7684;&#x6B63;&#x78BA;&#x9078;&#x64C7; &#xFF0C;&#x4ED6;&#x53EF;&#x4EE5;&#x8B93;&#x539F;&#x59CB;&#x9663;&#x5217;&#x7684;&#x6BCF;&#x4E00;&#x500B;&#x503C;&#x90FD;&#x6620;&#x5C04;&#x5230;&#x65B0;&#x7684;&#x9663;&#x5217;&#x4E0A;&#x3002; forEach() &#x5728;&#x6BCF;&#x4E00;&#x6B21;&#x8FED;&#x4EE3;&#x7684;&#x4F7F;&#x7528;&#x4E2D;&#x90FD;&#x6703;&#x7522;&#x751F;&#x526F;&#x4F5C;&#x7528;&#xFF0C;&#x56E0;&#x6B64; map() &#x662F;&#x7DE8;&#x7A0B;&#x6280;&#x8853;&#x4E2D;&#x5E38;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x5982;&#x679C;&#x4F60;&#x9700;&#x8981;&#x8FED;&#x4EE3;&#x4E00;&#x500B;&#x9663;&#x5217;&#xFF0C;&#x4F7F;&#x5176;&#x672C;&#x8EAB;&#x767C;&#x751F;&#x8B8A;&#x5316;&#x4E14;&#x4E0D;&#x9700;&#x8981;&#x8FD4;&#x56DE;&#x4E00;&#x500B;&#x65B0;&#x9663;&#x5217;&#x6642;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; forEach() &#x5982;&#x679C;&#x4F60;&#x53EA;&#x662F;&#x5C0D;&#x6578;&#x5B57;&#x9032;&#x884C;&#x904D;&#x6B77;&#x6642;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; forEach() map() &#x904B;&#x884C;&#x7684; &#x8F03;&#x5FEB; &#xFF0C;&#x4E14;&#x8FD4;&#x56DE;&#x7684;&#x65B0;&#x9663;&#x5217;&#x53EF;&#x4EE5;&#x8B93;&#x4F60;&#x7E7C;&#x7E8C;&#x4F7F;&#x7528; map()&#x3001;filter()&#x3001;reduce() &#x7B49;&#x65B9;&#x6CD5;&#xFF0C; 1 2 3 4 const arr = [ 1 , 2 , 3 , 4 , 5 ]; const arr1 = arr.map( num = num * 2 ).filter( num = num  5 ); console .log(arr); // [1, 2, 3, 4, 5] console .log(arr1); // [6, 8, 10] ref: https://hacpai.com/article/1547790109416?r=Vanessa"},"array/array_methods.html#examples":{"title":"examples","path":"\\javascript\\array\\array_methods.html#examples","body":"https://jsbin.com/yapugucezi/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 let arr = [ { product : &apos;The Godfather&apos; , catalog : &apos;movie&apos; , price : &apos;150&apos; }, { product : &apos;The Dark Knight&apos; , catalog : &apos;movie&apos; , price : &apos;100&apos; }, { product : &apos;7 Rings&apos; , catalog : &apos;music&apos; , price : &apos;300&apos; } ] var arrFilter = arr.filter( function ( item,index ) { if (item.catalog == movie ) { return true ; } }) console .log(arrFilter); //arr catalog:&apos;music&apos; var arrSortPrice = arr.sort( function ( a,b ) { return b.price - a.price; }) console .log(arrSortPrice); // arr 300 150 100 let sum = 0 ; arr.forEach( function ( element ) { sum+= parseInt (element.price); }); console .log(sum); //sum price 550 &#x9663;&#x5217;&#x65B9;&#x6CD5; map() &#x548C; forEach() &#x6709;&#x4EC0;&#x9EBC;&#x5340;&#x5225;&#xFF1F; &#x9019;&#x5169;&#x7A2E;&#x65B9;&#x6CD5;&#x90FD;&#x662F;&#x5C0D;&#x9663;&#x5217;&#x4E2D;&#x7684;&#x5143;&#x7D20;&#x9032;&#x884C;&#x8FED;&#x4EE3;&#x3002; map() &#x901A;&#x904E;&#x6BCF;&#x500B;&#x5143;&#x7D20;&#x7684;&#x56DE;&#x8ABF;&#x51FD;&#x6578;&#x5C07;&#x5176;&#x6620;&#x5C04;&#x5230;&#x65B0;&#x7684;&#x5143;&#x7D20;&#x4E0A;&#xFF0C;&#x6700;&#x7D42;&#x8FD4;&#x56DE;&#x4E00;&#x500B;&#x65B0;&#x7684;&#x9663;&#x5217;&#x3002; forEach() &#x96D6;&#x7136;&#x4E5F;&#x70BA;&#x6BCF;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x6E96;&#x5099;&#x4E86;&#x56DE;&#x8ABF;&#x51FD;&#x6578;&#xFF0C;&#x4F46;&#x537B;&#x4E0D;&#x8FD4;&#x56DE;&#x65B0;&#x7684;&#x9663;&#x5217;&#x3002; map() &#x662F; &#x4FDD;&#x6301;&#x539F;&#x6709;&#x9663;&#x5217;&#x4E0D;&#x8B8A;&#x7684;&#x6B63;&#x78BA;&#x9078;&#x64C7; &#xFF0C;&#x4ED6;&#x53EF;&#x4EE5;&#x8B93;&#x539F;&#x59CB;&#x9663;&#x5217;&#x7684;&#x6BCF;&#x4E00;&#x500B;&#x503C;&#x90FD;&#x6620;&#x5C04;&#x5230;&#x65B0;&#x7684;&#x9663;&#x5217;&#x4E0A;&#x3002; forEach() &#x5728;&#x6BCF;&#x4E00;&#x6B21;&#x8FED;&#x4EE3;&#x7684;&#x4F7F;&#x7528;&#x4E2D;&#x90FD;&#x6703;&#x7522;&#x751F;&#x526F;&#x4F5C;&#x7528;&#xFF0C;&#x56E0;&#x6B64; map() &#x662F;&#x7DE8;&#x7A0B;&#x6280;&#x8853;&#x4E2D;&#x5E38;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x5982;&#x679C;&#x4F60;&#x9700;&#x8981;&#x8FED;&#x4EE3;&#x4E00;&#x500B;&#x9663;&#x5217;&#xFF0C;&#x4F7F;&#x5176;&#x672C;&#x8EAB;&#x767C;&#x751F;&#x8B8A;&#x5316;&#x4E14;&#x4E0D;&#x9700;&#x8981;&#x8FD4;&#x56DE;&#x4E00;&#x500B;&#x65B0;&#x9663;&#x5217;&#x6642;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; forEach() &#x5982;&#x679C;&#x4F60;&#x53EA;&#x662F;&#x5C0D;&#x6578;&#x5B57;&#x9032;&#x884C;&#x904D;&#x6B77;&#x6642;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; forEach() map() &#x904B;&#x884C;&#x7684; &#x8F03;&#x5FEB; &#xFF0C;&#x4E14;&#x8FD4;&#x56DE;&#x7684;&#x65B0;&#x9663;&#x5217;&#x53EF;&#x4EE5;&#x8B93;&#x4F60;&#x7E7C;&#x7E8C;&#x4F7F;&#x7528; map()&#x3001;filter()&#x3001;reduce() &#x7B49;&#x65B9;&#x6CD5;&#xFF0C; 1 2 3 4 const arr = [ 1 , 2 , 3 , 4 , 5 ]; const arr1 = arr.map( num = num * 2 ).filter( num = num  5 ); console .log(arr); // [1, 2, 3, 4, 5] console .log(arr1); // [6, 8, 10] ref: https://hacpai.com/article/1547790109416?r=Vanessa"},"array/good_part.html":{"title":"JS 不良編碼習慣","path":"\\javascript\\array\\good_part.html","body":"不要使用早期的JavaScript技巧 它的創建者沒有料到這種語言會如此流行。 基於JavaScript構建的應用程序的複雜性比語言發展的速度還要快。這種情況迫使開發人員使用JavaScript技巧和變通方法，只是為了讓事情正常運行。 一個典型的例子是查看數組是否包含某個元素。 ES6 中可以使用 array.includes(item) 來代替 array.indexOf(item) !== -1"},"F2E/token.html":{"title":"Token","path":"\\javascript\\F2E\\token.html","body":"JSON Web Token 入門教程 JSON Web Token （縮寫 JWT ）是目前最流行的跨域認證解決方案 A 網站和 B 網站是同一家公司的關聯服務。現在要求，用戶只要在其中一個網站登錄，再訪問另一個網站就會自動登錄，請問怎麼實現？ 一種方案是服務器索性不保存 session 數據了，所有數據都保存在客戶端，每次請求都發回服務器。 JWT 就是這種方案的一個代表。 provisional headers are shown 解决provisional headers are shown的过程 出現在 載入緩存資源,請求沒有被發送, 而如果上一個資源加載失敗,可能導致從緩存加載的資源失敗 provisional headers are shown 知多少"},"F2E/token.html#provisional-headers-are-shown":{"title":"provisional headers are shown","path":"\\javascript\\F2E\\token.html#provisional-headers-are-shown","body":"&#x89E3;&#x51B3;provisional headers are shown&#x7684;&#x8FC7;&#x7A0B; &#x51FA;&#x73FE;&#x5728; &#x8F09;&#x5165;&#x7DE9;&#x5B58;&#x8CC7;&#x6E90;,&#x8ACB;&#x6C42;&#x6C92;&#x6709;&#x88AB;&#x767C;&#x9001;, &#x800C;&#x5982;&#x679C;&#x4E0A;&#x4E00;&#x500B;&#x8CC7;&#x6E90;&#x52A0;&#x8F09;&#x5931;&#x6557;,&#x53EF;&#x80FD;&#x5C0E;&#x81F4;&#x5F9E;&#x7DE9;&#x5B58;&#x52A0;&#x8F09;&#x7684;&#x8CC7;&#x6E90;&#x5931;&#x6557; provisional headers are shown &#x77E5;&#x591A;&#x5C11;"},"array/array_merge.html":{"title":"Array Merge","path":"\\javascript\\array\\array_merge.html","body":"concat 合併陣列 Array.prototype.concat() 1 2 3 4 var a = [ 1 , 2 , 3 ], b = [ 4 , 5 , 6 ]; var c = a.concat(b); console .log(c); // 1,2,3,4,5,6 console .log(a); // 1,2,3 不改變本身 JS 中合併多個陣列，且去除陣列重複元素 1 2 3 4 var a = [ \"a\" , \"b\" , \"c\" ], b = [ \"c\" , 1 , 2 ]; var arr = a.concat(b); console .log(arr); // [\"a\", \"b\", \"c\", \"c\", 1, 2] 要求必須返回原陣列 https://jsbin.com/nidizam/edit?js,console 1 2 3 4 5 6 7 8 // 對該陣列進行循環 arr.forEach( ( item, index ) =  // 如果當前下標和當前元素在陣列中的lastIndex不同，則刪除這個元素 if (index != arr.lastIndexOf(item))  arr.splice(index, 1 );  ); console .log(arr); // \"a\", \"b\", \"c\", 1, 2] 要求返回新陣列 https://jsbin.com/lufavuf/1/edit?js,console 1 2 3 4 5 6 // 最簡單的應該是使用陣列的 filter 方法，將當前下標和當前元素在數組中的 lastIndex 相同的元素篩選出來 var arr2 = arr.filter( ( item,index ) = index ===arr.lastIndexOf(item) ); console .log(arr); // [\"a\", \"b\", \"c\", \"c\", 1, 2] console .log(arr2); // [\"a\", \"b\", \"c\", 1, 2]"},"array/map.html":{"title":"","path":"\\javascript\\array\\map.html","body":"map 對元素重新組裝，生成新陣列 Array.prototype.map() https://jsbin.com/xevunu/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.map( function ( item,index )  return 'b' +item+ '/b' ; ) console .log(arr2); // expected output: [\"b1/b\", \"b2/b\", \"b3/b\"] 1 2 3 4 5 6 7 const array1 = [ 1 , 4 , 9 , 16 ]; // pass a function to map const map1 = array1.map( x = x * 2 ); console .log(map1); // expected output: Array [2, 8, 18, 32]"},"array/map.html#map":{"title":"map","path":"\\javascript\\array\\map.html#map","body":"&#x5C0D;&#x5143;&#x7D20;&#x91CD;&#x65B0;&#x7D44;&#x88DD;&#xFF0C;&#x751F;&#x6210;&#x65B0;&#x9663;&#x5217; Array.prototype.map() https://jsbin.com/xevunu/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.map( function ( item,index ) { return &apos;b&apos; +item+ &apos;/b&apos; ; }) console .log(arr2); // expected output: [b1/b, b2/b, b3/b] 1 2 3 4 5 6 7 const array1 = [ 1 , 4 , 9 , 16 ]; // pass a function to map const map1 = array1.map( x = x * 2 ); console .log(map1); // expected output: Array [2, 8, 18, 32]"},"array/array_insert.html":{"title":"Array Insert","path":"\\javascript\\array\\array_insert.html","body":"immutable 的重要性，處理資料要注意有沒有改變到本身。 處理 array 用 push、pop、shift、unshift、reserve、sort、splice 都會改變原有的陣列。這個觀念在處理複雜的全域變數陣列有幫助。 把數據插入陣列尾部 利用陣列長度進行賦值 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr[arr.length] = 6 ; console .log(arr); // [1, 2, 3, 4, 5, 6] 利用 Array.prototype.push 方法 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.push( 6 ); console .log(arr); // [1, 2, 3, 4, 5, 6] 利用 Array.prototype.concat 方法 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = arr.concat( 6 ); console .log(arr); // [1, 2, 3, 4, 5, 6] 利用 spread 運算符 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [...arr, 6 ]; console .log(arr); // [1, 2, 3, 4, 5, 6] 把數據插入陣列頭部 利用 Array.prototype.unshift 方法 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.unshift( 0 ); console .log(arr); // [1, 2, 3, 4, 5, 6] 利用 Array.prototype.concat 方法 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.unshift( 0 ); console .log(arr); // [1, 2, 3, 4, 5, 6] 利用 spread 運算符 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [ 0 , ...arr]; console .log(arr); // [1, 2, 3, 4, 5, 6] 把數據插入陣列指定位置 利用 Array.prototype.splice 方法 1 2 3 let items = [ 1 , 2 , 4 , 5 ]; items.splice(items.length / 2 , 0 , 3 ); console .log(items); Array.prototype.splice() splice() 方法可以藉由刪除既有元素並／或加入新元素來改變一個陣列的內容 1 2 3 4 5 const months = [ 'Jan' , 'March' , 'April' , 'June' ]; months.splice( 1 , 3 ); console .log(months); // [\"Jan\"] months.splice( 1 , 0 , 'Feb' ); // inserts at index 1 console .log(months); // [\"Jan\", \"Feb\"] 拼接兩個陣列 利用 Array.prototype.concat 方法 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [ -2 , -1 , 0 ].concat(arr); console .log(arr); // [-2, -1, 0, 1, 2, 3, 4, 5] 利用 spread 運算符 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [...[ -2 , -1 , 0 ], ...arr]; console .log(arr); // [-2, -1, 0, 1, 2, 3, 4, 5] example unshift 把數據插入陣列頭部 下拉選單補標題　　　　 1 2 3 4 5 6 7 8 const opts = this .dataOpts.map( data = ( value: data.id, text: data.name )) opts.unshift( value: null , text: 'select_title' )"},"array/array_insert.html#把數據插入陣列尾部":{"title":"&#x628A;&#x6578;&#x64DA;&#x63D2;&#x5165;&#x9663;&#x5217;&#x5C3E;&#x90E8;","path":"\\javascript\\array\\array_insert.html#把數據插入陣列尾部","body":"&#x5229;&#x7528;&#x9663;&#x5217;&#x9577;&#x5EA6;&#x9032;&#x884C;&#x8CE6;&#x503C; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr[arr.length] = 6 ; console .log(arr); // [1, 2, 3, 4, 5, 6] &#x5229;&#x7528; Array.prototype.push &#x65B9;&#x6CD5; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.push( 6 ); console .log(arr); // [1, 2, 3, 4, 5, 6] &#x5229;&#x7528; Array.prototype.concat &#x65B9;&#x6CD5; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = arr.concat( 6 ); console .log(arr); // [1, 2, 3, 4, 5, 6] &#x5229;&#x7528; spread &#x904B;&#x7B97;&#x7B26; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [...arr, 6 ]; console .log(arr); // [1, 2, 3, 4, 5, 6]"},"array/array_insert.html#把數據插入陣列頭部":{"title":"&#x628A;&#x6578;&#x64DA;&#x63D2;&#x5165;&#x9663;&#x5217;&#x982D;&#x90E8;","path":"\\javascript\\array\\array_insert.html#把數據插入陣列頭部","body":"&#x5229;&#x7528; Array.prototype.unshift &#x65B9;&#x6CD5; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.unshift( 0 ); console .log(arr); // [1, 2, 3, 4, 5, 6] &#x5229;&#x7528; Array.prototype.concat &#x65B9;&#x6CD5; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.unshift( 0 ); console .log(arr); // [1, 2, 3, 4, 5, 6] &#x5229;&#x7528; spread &#x904B;&#x7B97;&#x7B26; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [ 0 , ...arr]; console .log(arr); // [1, 2, 3, 4, 5, 6]"},"array/array_insert.html#把數據插入陣列指定位置":{"title":"&#x628A;&#x6578;&#x64DA;&#x63D2;&#x5165;&#x9663;&#x5217;&#x6307;&#x5B9A;&#x4F4D;&#x7F6E;","path":"\\javascript\\array\\array_insert.html#把數據插入陣列指定位置","body":"&#x5229;&#x7528; Array.prototype.splice &#x65B9;&#x6CD5; 1 2 3 let items = [ 1 , 2 , 4 , 5 ]; items.splice(items.length / 2 , 0 , 3 ); console .log(items); Array.prototype.splice() splice() &#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x85C9;&#x7531;&#x522A;&#x9664;&#x65E2;&#x6709;&#x5143;&#x7D20;&#x4E26;&#xFF0F;&#x6216;&#x52A0;&#x5165;&#x65B0;&#x5143;&#x7D20;&#x4F86;&#x6539;&#x8B8A;&#x4E00;&#x500B;&#x9663;&#x5217;&#x7684;&#x5167;&#x5BB9; 1 2 3 4 5 const months = [ &apos;Jan&apos; , &apos;March&apos; , &apos;April&apos; , &apos;June&apos; ]; months.splice( 1 , 3 ); console .log(months); // [Jan] months.splice( 1 , 0 , &apos;Feb&apos; ); // inserts at index 1 console .log(months); // [Jan, Feb]"},"array/array_insert.html#拼接兩個陣列":{"title":"&#x62FC;&#x63A5;&#x5169;&#x500B;&#x9663;&#x5217;","path":"\\javascript\\array\\array_insert.html#拼接兩個陣列","body":"&#x5229;&#x7528; Array.prototype.concat &#x65B9;&#x6CD5; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [ -2 , -1 , 0 ].concat(arr); console .log(arr); // [-2, -1, 0, 1, 2, 3, 4, 5] &#x5229;&#x7528; spread &#x904B;&#x7B97;&#x7B26; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [...[ -2 , -1 , 0 ], ...arr]; console .log(arr); // [-2, -1, 0, 1, 2, 3, 4, 5]"},"array/array_insert.html#example":{"title":"example","path":"\\javascript\\array\\array_insert.html#example","body":"unshift &#x628A;&#x6578;&#x64DA;&#x63D2;&#x5165;&#x9663;&#x5217;&#x982D;&#x90E8; &#x4E0B;&#x62C9;&#x9078;&#x55AE;&#x88DC;&#x6A19;&#x984C;&#x3000;&#x3000;&#x3000;&#x3000; 1 2 3 4 5 6 7 8 const opts = this .dataOpts.map( data = ({ value: data.id, text: data.name })) opts.unshift({ value: null , text: &apos;select_title&apos; })"},"cases/replace.html":{"title":"replace","path":"\\javascript\\cases\\replace.html","body":"String.prototype.replace() 1 2 3 4 5 6 7 8 var str = 'x-x_' ; var retArr = []; str.replace( /(x_*)|(-)/g , function ( match, p1, p2 )  if (p1)  retArr.push( on : true , length : p1.length );  if (p2)  retArr.push( on : false , length : 1 );  ); console .log(retArr);"},"array/filter.html":{"title":"Array filter","path":"\\javascript\\array\\filter.html","body":"filter 1 2 3 4 5 6 var arr = [ 0 , 1 , 2 ] arr[ 10 ] = 10 ; const result = arr.filter( function ( x )  return x === undefined ; ) console .log(result) // [] filter 和 map 基本屬性 會把 或直接略過那些空的東西 不處理 [‘1’, ‘2’, ‘3’].filter(parseInt) ? filter 为数组中的每个元素调用一次 callback 函数，并利用所有使得 callback 返回 true 或等价于 true 的值的元素创建一个新数组。 1 2 3 parseInt ( '1' , 0 ); // 1 parseInt ( '2' , 1 ); // 不返回 parseInt ( '3' , 2 ); // NaN 不返回 parseInt(‘1’, 0)：radix的值為0，判斷字符串發現介於1~9，用10進制轉換，結果為1，所以callback的結果等價於true，返回元素’1’。 parseInt(‘2’, 1)：radix的值為1，如果該參數小於 2 或者大於 36，則 parseInt() 將返回 NaN，結果不等價於true，不返回。 parseInt(‘3’, 2): radix的值為2，這就意味著字符串將被解析成字節數，也就是僅僅包含數值0和1。parseInt的規範指出，它僅嘗試分析第一個字符的左側。這個字符串的第一個字符是“3”，它並不是基礎基數2的一個有效數字。所以這個子字符串將被解析為空。如果子字符串被解析成空了，函數將返回為NaN。 https://juejin.im/post/5dbff8735188252ddb2fd25e [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;].filter(parseInt) // [1]"},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{"title":"[&#x2018;1&#x2019;, &#x2018;2&#x2019;, &#x2018;3&#x2019;].filter(parseInt) ?","path":"\\javascript\\array\\filter.html#‘1’-‘2’-‘3’-filter-parseInt","body":"filter &#x4E3A;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x8C03;&#x7528;&#x4E00;&#x6B21; callback &#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x5229;&#x7528;&#x6240;&#x6709;&#x4F7F;&#x5F97; callback &#x8FD4;&#x56DE; true &#x6216;&#x7B49;&#x4EF7;&#x4E8E; true &#x7684;&#x503C;&#x7684;&#x5143;&#x7D20;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x6570;&#x7EC4;&#x3002; 1 2 3 parseInt ( &apos;1&apos; , 0 ); // 1 parseInt ( &apos;2&apos; , 1 ); // &#x4E0D;&#x8FD4;&#x56DE; parseInt ( &apos;3&apos; , 2 ); // NaN &#x4E0D;&#x8FD4;&#x56DE; parseInt(&#x2018;1&#x2019;, 0)&#xFF1A;radix&#x7684;&#x503C;&#x70BA;0&#xFF0C;&#x5224;&#x65B7;&#x5B57;&#x7B26;&#x4E32;&#x767C;&#x73FE;&#x4ECB;&#x65BC;1~9&#xFF0C;&#x7528;10&#x9032;&#x5236;&#x8F49;&#x63DB;&#xFF0C;&#x7D50;&#x679C;&#x70BA;1&#xFF0C;&#x6240;&#x4EE5;callback&#x7684;&#x7D50;&#x679C;&#x7B49;&#x50F9;&#x65BC;true&#xFF0C;&#x8FD4;&#x56DE;&#x5143;&#x7D20;&#x2019;1&#x2019;&#x3002; parseInt(&#x2018;2&#x2019;, 1)&#xFF1A;radix&#x7684;&#x503C;&#x70BA;1&#xFF0C;&#x5982;&#x679C;&#x8A72;&#x53C3;&#x6578;&#x5C0F;&#x65BC; 2 &#x6216;&#x8005;&#x5927;&#x65BC; 36&#xFF0C;&#x5247; parseInt() &#x5C07;&#x8FD4;&#x56DE; NaN&#xFF0C;&#x7D50;&#x679C;&#x4E0D;&#x7B49;&#x50F9;&#x65BC;true&#xFF0C;&#x4E0D;&#x8FD4;&#x56DE;&#x3002; parseInt(&#x2018;3&#x2019;, 2): radix&#x7684;&#x503C;&#x70BA;2&#xFF0C;&#x9019;&#x5C31;&#x610F;&#x5473;&#x8457;&#x5B57;&#x7B26;&#x4E32;&#x5C07;&#x88AB;&#x89E3;&#x6790;&#x6210;&#x5B57;&#x7BC0;&#x6578;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x50C5;&#x50C5;&#x5305;&#x542B;&#x6578;&#x503C;0&#x548C;1&#x3002;parseInt&#x7684;&#x898F;&#x7BC4;&#x6307;&#x51FA;&#xFF0C;&#x5B83;&#x50C5;&#x5617;&#x8A66;&#x5206;&#x6790;&#x7B2C;&#x4E00;&#x500B;&#x5B57;&#x7B26;&#x7684;&#x5DE6;&#x5074;&#x3002;&#x9019;&#x500B;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x7B2C;&#x4E00;&#x500B;&#x5B57;&#x7B26;&#x662F;&#x201C;3&#x201D;&#xFF0C;&#x5B83;&#x4E26;&#x4E0D;&#x662F;&#x57FA;&#x790E;&#x57FA;&#x6578;2&#x7684;&#x4E00;&#x500B;&#x6709;&#x6548;&#x6578;&#x5B57;&#x3002;&#x6240;&#x4EE5;&#x9019;&#x500B;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x5C07;&#x88AB;&#x89E3;&#x6790;&#x70BA;&#x7A7A;&#x3002;&#x5982;&#x679C;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x88AB;&#x89E3;&#x6790;&#x6210;&#x7A7A;&#x4E86;&#xFF0C;&#x51FD;&#x6578;&#x5C07;&#x8FD4;&#x56DE;&#x70BA;NaN&#x3002; https://juejin.im/post/5dbff8735188252ddb2fd25e [&apos;1&apos;, &apos;2&apos;, &apos;3&apos;].filter(parseInt) // [1]"},"array/object_to_array.html":{"title":"object to array","path":"\\javascript\\array\\object_to_array.html","body":"transform object to array with lodash A modern native solution if anyone is interested: 1 const arr = Object .keys(obj).map( key = ( key, value : obj[key] ));"},"cases/math.html":{"title":"問題","path":"\\javascript\\cases\\math.html","body":"浮點數運算的坑 JavaScript 浮点数陷阱及解法 當你拿到 1.4000000000000001 這樣的數據要展示時，建議使用 toPrecision 湊整併 parseFloat 轉成數字後再顯示，如下： parseFloat(1.4000000000000001.toPrecision(12)) === 1.4 // True 百分比 轉 小數 問題 1 2 3 4 5 6 var a = 0.9 ; var b = a / 100 ; var c = parseFloat ( (a / 100 ).toPrecision( 12 )) console .log(b) // 0.009000000000000001 console .log(c) // 0.009 科學符號處理 npm from-exponential 1 2 3 4 5 6 7 8 span v-text= \"getPriceValue(order.itemPrice)\"  / span  import fromExponential from 'from-exponential' methods:  getPriceValue(value)  return fromExponential(value)   why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 這只是JavaScript遵循IEEE 754標準所產生的必然結果。IEEE 754標準中的浮點數並不能精確地表達小數（比如說0.1）， JavaScript中的小數採用的是雙精度(64位)表示的，由三部分組成：　符 + 階碼 + 尾數 IEEE 754 雙精度。六十四位中符號位佔一位，整數位佔十一位，其餘五十二位都為小數位。 因為浮點數隻有52位有效數字，從第53位開始，就舍入了。這樣就造成了“浮點數精度損失”問題。 因為 0.1 和 0.2 都是無限循環的二進制了，所以在小數位末尾處需要判斷是否進位（就和十進制的四捨五入一樣）。 計算機表示十進制是採用二進製表示的，所以 0.1 在二進製表示為 `0.1.toString(2) // “0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01” 小數的算法，是乘2 0.1 × 2 ￣￣￣￣ 0.2 → 取小數前的 0 0.2 × 2 ￣￣￣￣ 0.4 → 取小數前的 0 0.4 × 2 ￣￣￣￣ 0.8 → 取小數前的 0 0.8 × 2 ￣￣￣￣ 1.6 → 取小數前的 1 0.6 × 2 ￣￣￣￣ 1.2 → 取小數前的 1 0.2 × 2 ￣￣￣￣ 0.4 → 取小數前的 0 十進位 0.1 = 二進位 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 從上面可以看出，0.1的二進制格式是：0.0001100011….。這是一個二進制無限循環小數，但計算機內存有限，我們不能用儲存所有的小數位數。那麼在精度與內存間如何取捨呢？ 答案是： 在某個精度點直接捨棄 (第53位開始)。當然，代價就是，0.1在計算機內部根本就不是精確的0.1，而是一個有舍入誤差的0.1。當代碼被編譯或解釋後，0.1已經被四捨五入成一個與之很接近的計算機內部數字，以至於計算還沒開始，一個很小的舍入錯誤就已經產生了。這也就是 0.1 + 0.2 不等於0.3 的原因。 使用JavaScript內置的函數 toPrecision 或 toFixed 來保留一定的精度： (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true 不要相信js的計算 善用 math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"cases/math.html#浮點數運算的坑":{"title":"&#x6D6E;&#x9EDE;&#x6578;&#x904B;&#x7B97;&#x7684;&#x5751;","path":"\\javascript\\cases\\math.html#浮點數運算的坑","body":"JavaScript &#x6D6E;&#x70B9;&#x6570;&#x9677;&#x9631;&#x53CA;&#x89E3;&#x6CD5; &#x7576;&#x4F60;&#x62FF;&#x5230; 1.4000000000000001 &#x9019;&#x6A23;&#x7684;&#x6578;&#x64DA;&#x8981;&#x5C55;&#x793A;&#x6642;&#xFF0C;&#x5EFA;&#x8B70;&#x4F7F;&#x7528; toPrecision &#x6E4A;&#x6574;&#x4F75; parseFloat &#x8F49;&#x6210;&#x6578;&#x5B57;&#x5F8C;&#x518D;&#x986F;&#x793A;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; parseFloat(1.4000000000000001.toPrecision(12)) === 1.4 // True &#x767E;&#x5206;&#x6BD4; &#x8F49; &#x5C0F;&#x6578; &#x554F;&#x984C; 1 2 3 4 5 6 var a = 0.9 ; var b = a / 100 ; var c = parseFloat ( (a / 100 ).toPrecision( 12 )) console .log(b) // 0.009000000000000001 console .log(c) // 0.009 &#x79D1;&#x5B78;&#x7B26;&#x865F;&#x8655;&#x7406; npm from-exponential 1 2 3 4 5 6 7 8 span v-text= getPriceValue(order.itemPrice)  / span  import fromExponential from &apos;from-exponential&apos; methods: { getPriceValue(value) { return fromExponential(value) } } why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002;IEEE 754&#x6A19;&#x6E96;&#x4E2D;&#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"cases/math.html#科學符號處理":{"title":"&#x79D1;&#x5B78;&#x7B26;&#x865F;&#x8655;&#x7406;","path":"\\javascript\\cases\\math.html#科學符號處理","body":"npm from-exponential 1 2 3 4 5 6 7 8 span v-text= getPriceValue(order.itemPrice)  / span  import fromExponential from &apos;from-exponential&apos; methods: { getPriceValue(value) { return fromExponential(value) } } why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002;IEEE 754&#x6A19;&#x6E96;&#x4E2D;&#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"cases/math.html#why-0-1-0-2-0-3":{"title":"why 0.1 + 0.2 != 0.3","path":"\\javascript\\cases\\math.html#why-0-1-0-2-0-3","body":"0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002;IEEE 754&#x6A19;&#x6E96;&#x4E2D;&#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"cases/if.html":{"title":"if else","path":"\\javascript\\cases\\if.html","body":"good programming patterns 三元運算符 Nested ternaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 let result = null ; if (conditionA)  if (conditionB)  result = \"A &amp; B\" ;  else  result = \"A\" ;   else  result = \"Not A\" ;  const result = !conditionA ? \"Not A\" : conditionB ? \"A &amp; B\" : \"A\" ; 1 2 3 4 5 6 var a = [ 0 ] if (a)  console .log( a == true )  else  console .log( \"done\" )  if 作為判斷數組有東西會過 但js怕比 [0] == true false"},"cases/arr.html":{"title":"arrays","path":"\\javascript\\cases\\arr.html","body":"一个合格的中级前端工程师必须要掌握的 28 个 JavaScript 技巧 ###　 One loop two arrays https://jsbin.com/janoyunemu/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const exampleValues = [ 2 , 15 , 8 , 23 , 1 , 32 ]; const [truthyValues, falseyValues] = exampleValues.reduce( ( arrays, exampleValue ) =  if (exampleValue  10 )  arrays[ 0 ].push(exampleValue); return arrays;  arrays[ 1 ].push(exampleValue); return arrays; , [[], []]); console .log(truthyValues); // [15, 23, 32] console .log(falseyValues); // [2, 8, 1] 如何快速將一個字符串數組轉化為數字類型的數組 1 2 [ '1' , '2' , '3' ].map( parseFloat ) [ '1' , '2' , '3' ].map( Number ) [‘1’, ‘2’, ‘3’].map(parseInt)的輸出結果是什麼？ 1 2 3 4 [ '1' , '2' , '3' ].map( parseInt ) parseInt ( '1' , 0 ); // 用10進制轉換 parseInt ( '2' , 1 ); // 該參數小於 2 或者大於 36，則 parseInt() 將返回 NaN parseInt ( '3' , 2 ); // 這個字符串的第一個字符是“3”，它並不是基礎基數2的一個有效數字。所以這個子字符串將被解析為空。如果子字符串被解析成空了，函數將返回為NaN。"},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{"title":"&#x5982;&#x4F55;&#x5FEB;&#x901F;&#x5C07;&#x4E00;&#x500B;&#x5B57;&#x7B26;&#x4E32;&#x6578;&#x7D44;&#x8F49;&#x5316;&#x70BA;&#x6578;&#x5B57;&#x985E;&#x578B;&#x7684;&#x6578;&#x7D44;","path":"\\javascript\\cases\\arr.html#如何快速將一個字符串數組轉化為數字類型的數組","body":"1 2 [ &apos;1&apos; , &apos;2&apos; , &apos;3&apos; ].map( parseFloat ) [ &apos;1&apos; , &apos;2&apos; , &apos;3&apos; ].map( Number ) [&#x2018;1&#x2019;, &#x2018;2&#x2019;, &#x2018;3&#x2019;].map(parseInt)&#x7684;&#x8F38;&#x51FA;&#x7D50;&#x679C;&#x662F;&#x4EC0;&#x9EBC;&#xFF1F; 1 2 3 4 [ &apos;1&apos; , &apos;2&apos; , &apos;3&apos; ].map( parseInt ) parseInt ( &apos;1&apos; , 0 ); // &#x7528;10&#x9032;&#x5236;&#x8F49;&#x63DB; parseInt ( &apos;2&apos; , 1 ); // &#x8A72;&#x53C3;&#x6578;&#x5C0F;&#x65BC; 2 &#x6216;&#x8005;&#x5927;&#x65BC; 36&#xFF0C;&#x5247; parseInt() &#x5C07;&#x8FD4;&#x56DE; NaN parseInt ( &apos;3&apos; , 2 ); // &#x9019;&#x500B;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x7B2C;&#x4E00;&#x500B;&#x5B57;&#x7B26;&#x662F;&#x201C;3&#x201D;&#xFF0C;&#x5B83;&#x4E26;&#x4E0D;&#x662F;&#x57FA;&#x790E;&#x57FA;&#x6578;2&#x7684;&#x4E00;&#x500B;&#x6709;&#x6548;&#x6578;&#x5B57;&#x3002;&#x6240;&#x4EE5;&#x9019;&#x500B;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x5C07;&#x88AB;&#x89E3;&#x6790;&#x70BA;&#x7A7A;&#x3002;&#x5982;&#x679C;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x88AB;&#x89E3;&#x6790;&#x6210;&#x7A7A;&#x4E86;&#xFF0C;&#x51FD;&#x6578;&#x5C07;&#x8FD4;&#x56DE;&#x70BA;NaN&#x3002;"},"cases/str.html":{"title":"String 類別","path":"\\javascript\\cases\\str.html","body":"String​.prototype​.toLower​Case() 1 2 3 4 5 function lowercase ( str )  return str.charAt( 0 ).toLowerCase() + str.slice( 1 );  console .log( lowercase( 'Hello' ) ) // \"hello\" String​.prototype​.replace() 1 2 3 4 var str = 'hello put world' ; var replaceStr = str.replace( /get|post|put|delete/ , \"\" ); console .log(replaceStr) // \"hello world\" url Array.join() 1 2 3 var url = 'http://3000' ; const link = [ \"'\" ,url, \"'\" ].join( '' ) console .log(link); // = \"'http://3000'\""},"cases/str.html#url":{"title":"url","path":"\\javascript\\cases\\str.html#url","body":"Array.join() 1 2 3 var url = &apos;http://3000&apos; ; const link = [ &apos; ,url, &apos; ].join( &apos;&apos; ) console .log(link); // = &apos;http://3000&apos;"},"glossary/hoisting.html":{"title":"提升（[Hoisting](https://developer.mozilla.org/zh-TW/docs/Glossary/Hoisting)）","path":"\\javascript\\glossary\\hoisting.html","body":"在執行任何程式碼前，JavaScript 會把函式宣告放進記憶體裡面，這樣做的優點是：可以在程式碼宣告該函式之前使用它。 1 2 3 4 5 6 7 8 function catName ( name )  console .log( \"My cat's name is \" + name);  catName( \"Tigger\" ); /* 上面程式的結果是: \"My cat's name is Tigger\" */ 1 2 3 4 5 6 7 8 9 console .log(c); var c; function c ( a )  console .log(a); var a = 3 ; function a ( )    c( 2 ); // 输出 1 2 3 4 5 6 7 8 9 10 // console.log(c); function c ( a )  console .log(a); var a = 3 ; function a ( )    // console.log(a); function a ( )   變量提升也有優先級, 函數聲明  arguments  變量聲明 1 2 3 var c = 1 ; console .log(c); c( 2 ); 1 “TypeError: c is not a function 由於函數聲明會提升,當函數外的 console.log(c) 執行時,c已經被賦值為1。 因此,執行c(2)時會拋出TypeError,因為 1 不是函數。 1 2 3 4 5 6 7 8 9 var name = 'erdong' ; ( function ( )  if ( typeof name === 'undefined' )  var name = 'chen' ; console .log(name);  else  console .log(name);  )(); chen 自執行函數執行時,會先進行變量提升(這裡涉及到執行上下文不過多說,一定要搞懂執行上下文), 在自執行函數執行時,偽代碼為: 1 2 3 4 5 6 7 8 9 ( function ( )  var name; // 變量name會提升到當前作用域頂部 if ( typeof name === 'undefined' )  name = 'chen' ; console .log(name);  else  console .log(name);  )(); 所以會執行if中的console.log(name)"},"function/factory​_factory.html":{"title":"factory function","path":"\\javascript\\function\\factory​_factory.html","body":"當一個函數返回一個對象時，我們稱之他為 工廠函數(factory function) 1 2 3 4 5 6 7 function createJelly ( )  return  type: 'jelly' , colour: 'red' scoops: 3 ;  每次我們調用這個工廠函數，它將返回一個新的 jelly（果凍） 對象實例。 要注意的重點是，我們不必在工廠函數名稱前面加上create，但它可以讓其他人更清楚函數的意圖。 對於type屬性也是如此，但通常它可以幫助我們區分我們程序的對象。 帶參數的工廠函數 通過參數來定義我們的工廠函數 （icecream 冰淇淋），這可以用來改變返回對象的模型。 1 2 3 4 5 6 7 function createIceCream ( flavour= 'Vanilla' )  return  type: 'icecream' , scoops: 3 , flavour   組合的工廠函數 在一個工廠函數中定義另一個工廠函數，可以幫助我們把複雜的工廠函數拆分成更小的，可重用的碎片。 例如，我們可以創建一個 dessert（甜點）工廠函數，通過前面的 jelly（果凍）和 icecream（冰淇淋）工廠函數來定義。 1 2 3 4 5 6 7 8 9 function createDessert ( )  return  type: 'dessert' , bowl: [ createJelly(), createIceCream() ] ;  對象可以用 has-a(具有) 關係而不是 is-a(是) 來表示。也就是說，可以用組合而不是繼承來實現。 例如，使用繼承。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // A trifle *is a* dessert 蛋糕*是*甜點 function Trifle ( )  Dessert.apply( this , arguments );  Trifle.prototype = Dessert.prototype; // 或者 class Trifle extends Dessert  constructor ()  super ();   我們可以用組合模式表達相同的意思。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // A trifle *has* layers of jelly, custard and cream. It also *has a* topping. // 蛋糕 *有* 果凍層，奶酪層和奶油層，頂部還 *有* 裝飾配料。 function createTrifle ( )  return  type: 'trifle' , layers: [ createJelly(), createCustard(), createCream() ], topping: createAlmonds() ;  異步的工廠函數 並非所有工廠都會立即返回數據。例如，有些必須先獲取數據。 在這些情況下，我們可以返回 Promises 來定義工廠函數。 1 2 3 4 5 6 7 8 9 10 11 12 function getMeal ( menuUrl )  return new Promise ( ( resolve, reject ) =  fetch(menuUrl) .then( result =  resolve( type: 'meal' , courses: result.json() ); ) .catch(reject); );  這種深度嵌套的縮進會使異步工廠難以閱讀和測試。 將它們分解成多個不同的工廠通常是有幫助的，可以使用如下編寫。 1 2 3 4 5 6 7 8 9 10 11 12 function getMeal ( menuUrl )  return fetch(menuUrl) .then( result = result.json()) .then( json = createMeal(json));  function createMeal ( courses=[] )  return  type: 'meal' , courses ;  當然，我們可以使用回調函數，但是我們已經有了 Promise.all 這樣的工具返回 Promises 來定義工廠函數。 1 2 3 4 5 6 7 8 9 10 11 function getWeeksMeals ( )  const menuUrl = 'jsfood.com/' ; return Promise .all([ getMeal( ` $menuUrl /monday` ), getMeal( ` $menuUrl /tuesday` ), getMeal( ` $menuUrl /wednesday` ), getMeal( ` $menuUrl /thursday` ), getMeal( ` $menuUrl /friday` ) ]);  我們使用 get 而不是 create 作為命名約定來顯示這些工廠做一些異步工作和返回promise。 到目前為止，我們還沒有看到任何工廠用方法返回對象，這是故意的。 這是因為一般來說，我們不需要這麼做。 工廠允許我們從計算中分離我們的數據。 這意味著我們總是能夠將對象序列化為JSON，這對於在會話之間持久化，通過HTTP或WebSockets發送它們，並將它們放入數據存儲很重要。 高級工廠 將工廠傳遞給高階函數，這將給我們帶來巨大的控制力。例如，我們可以使用這個概念來創建一個增強的對象。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function giveTimestamp ( factory )  return ( ...args ) =  const instance = factory(...args); const time = Date .now(); return  time, instance ; ;  const createOrder = giveTimestamp( function ( ingredients )  return  type: 'order' , ingredients ; ); 這個增強的對象採用一個現有工廠，並將其包裝以創建返回帶有 時間戳實例 的工廠。 使用這些簡單的構建塊使得我們的代碼更加友好，這絕對是我們應該關心的事情。 工廠鼓勵我們用原始數據來模擬複雜和異步數據，原始數據具有組合的自然能力，而不強迫我們去做一些高級抽象。當我們堅持簡單時，JavaScript更甜蜜！ 英文原文： https://www.sitepoint.com/factory-functions-javascript/"},"function/factory​_factory.html#組合的工廠函數":{"title":"&#x7D44;&#x5408;&#x7684;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;","path":"\\javascript\\function\\factory​_factory.html#組合的工廠函數","body":"&#x5728;&#x4E00;&#x500B;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#x4E2D;&#x5B9A;&#x7FA9;&#x53E6;&#x4E00;&#x500B;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#xFF0C;&#x53EF;&#x4EE5;&#x5E6B;&#x52A9;&#x6211;&#x5011;&#x628A;&#x8907;&#x96DC;&#x7684;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#x62C6;&#x5206;&#x6210;&#x66F4;&#x5C0F;&#x7684;&#xFF0C;&#x53EF;&#x91CD;&#x7528;&#x7684;&#x788E;&#x7247;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x5275;&#x5EFA;&#x4E00;&#x500B; dessert&#xFF08;&#x751C;&#x9EDE;&#xFF09;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#xFF0C;&#x901A;&#x904E;&#x524D;&#x9762;&#x7684; jelly&#xFF08;&#x679C;&#x51CD;&#xFF09;&#x548C; icecream&#xFF08;&#x51B0;&#x6DC7;&#x6DCB;&#xFF09;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#x4F86;&#x5B9A;&#x7FA9;&#x3002; 1 2 3 4 5 6 7 8 9 function createDessert ( ) { return { type: &apos;dessert&apos; , bowl: [ createJelly(), createIceCream() ] }; } &#x5C0D;&#x8C61;&#x53EF;&#x4EE5;&#x7528; has-a(&#x5177;&#x6709;) &#x95DC;&#x4FC2;&#x800C;&#x4E0D;&#x662F; is-a(&#x662F;) &#x4F86;&#x8868;&#x793A;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x7D44;&#x5408;&#x800C;&#x4E0D;&#x662F;&#x7E7C;&#x627F;&#x4F86;&#x5BE6;&#x73FE;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x4F7F;&#x7528;&#x7E7C;&#x627F;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // A trifle *is a* dessert &#x86CB;&#x7CD5;*&#x662F;*&#x751C;&#x9EDE; function Trifle ( ) { Dessert.apply( this , arguments ); } Trifle.prototype = Dessert.prototype; // &#x6216;&#x8005; class Trifle extends Dessert { constructor () { super (); } } &#x6211;&#x5011;&#x53EF;&#x4EE5;&#x7528;&#x7D44;&#x5408;&#x6A21;&#x5F0F;&#x8868;&#x9054;&#x76F8;&#x540C;&#x7684;&#x610F;&#x601D;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // A trifle *has* layers of jelly, custard and cream. It also *has a* topping. // &#x86CB;&#x7CD5; *&#x6709;* &#x679C;&#x51CD;&#x5C64;&#xFF0C;&#x5976;&#x916A;&#x5C64;&#x548C;&#x5976;&#x6CB9;&#x5C64;&#xFF0C;&#x9802;&#x90E8;&#x9084; *&#x6709;* &#x88DD;&#x98FE;&#x914D;&#x6599;&#x3002; function createTrifle ( ) { return { type: &apos;trifle&apos; , layers: [ createJelly(), createCustard(), createCream() ], topping: createAlmonds() }; } &#x7570;&#x6B65;&#x7684;&#x5DE5;&#x5EE0;&#x51FD;&#x6578; &#x4E26;&#x975E;&#x6240;&#x6709;&#x5DE5;&#x5EE0;&#x90FD;&#x6703;&#x7ACB;&#x5373;&#x8FD4;&#x56DE;&#x6578;&#x64DA;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x6709;&#x4E9B;&#x5FC5;&#x9808;&#x5148;&#x7372;&#x53D6;&#x6578;&#x64DA;&#x3002; &#x5728;&#x9019;&#x4E9B;&#x60C5;&#x6CC1;&#x4E0B;&#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x8FD4;&#x56DE; Promises &#x4F86;&#x5B9A;&#x7FA9;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 function getMeal ( menuUrl ) { return new Promise ( ( resolve, reject ) = { fetch(menuUrl) .then( result = { resolve({ type: &apos;meal&apos; , courses: result.json() }); }) .catch(reject); }); } &#x9019;&#x7A2E;&#x6DF1;&#x5EA6;&#x5D4C;&#x5957;&#x7684;&#x7E2E;&#x9032;&#x6703;&#x4F7F;&#x7570;&#x6B65;&#x5DE5;&#x5EE0;&#x96E3;&#x4EE5;&#x95B1;&#x8B80;&#x548C;&#x6E2C;&#x8A66;&#x3002; &#x5C07;&#x5B83;&#x5011;&#x5206;&#x89E3;&#x6210;&#x591A;&#x500B;&#x4E0D;&#x540C;&#x7684;&#x5DE5;&#x5EE0;&#x901A;&#x5E38;&#x662F;&#x6709;&#x5E6B;&#x52A9;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5982;&#x4E0B;&#x7DE8;&#x5BEB;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 function getMeal ( menuUrl ) { return fetch(menuUrl) .then( result = result.json()) .then( json = createMeal(json)); } function createMeal ( courses=[] ) { return { type: &apos;meal&apos; , courses }; } &#x7576;&#x7136;&#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x56DE;&#x8ABF;&#x51FD;&#x6578;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x5011;&#x5DF2;&#x7D93;&#x6709;&#x4E86; Promise.all &#x9019;&#x6A23;&#x7684;&#x5DE5;&#x5177;&#x8FD4;&#x56DE; Promises &#x4F86;&#x5B9A;&#x7FA9;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 function getWeeksMeals ( ) { const menuUrl = &apos;jsfood.com/&apos; ; return Promise .all([ getMeal( ` ${menuUrl} /monday` ), getMeal( ` ${menuUrl} /tuesday` ), getMeal( ` ${menuUrl} /wednesday` ), getMeal( ` ${menuUrl} /thursday` ), getMeal( ` ${menuUrl} /friday` ) ]); } &#x6211;&#x5011;&#x4F7F;&#x7528; get &#x800C;&#x4E0D;&#x662F; create &#x4F5C;&#x70BA;&#x547D;&#x540D;&#x7D04;&#x5B9A;&#x4F86;&#x986F;&#x793A;&#x9019;&#x4E9B;&#x5DE5;&#x5EE0;&#x505A;&#x4E00;&#x4E9B;&#x7570;&#x6B65;&#x5DE5;&#x4F5C;&#x548C;&#x8FD4;&#x56DE;promise&#x3002; &#x5230;&#x76EE;&#x524D;&#x70BA;&#x6B62;&#xFF0C;&#x6211;&#x5011;&#x9084;&#x6C92;&#x6709;&#x770B;&#x5230;&#x4EFB;&#x4F55;&#x5DE5;&#x5EE0;&#x7528;&#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x5C0D;&#x8C61;&#xFF0C;&#x9019;&#x662F;&#x6545;&#x610F;&#x7684;&#x3002; &#x9019;&#x662F;&#x56E0;&#x70BA;&#x4E00;&#x822C;&#x4F86;&#x8AAA;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x9700;&#x8981;&#x9019;&#x9EBC;&#x505A;&#x3002; &#x5DE5;&#x5EE0;&#x5141;&#x8A31;&#x6211;&#x5011;&#x5F9E;&#x8A08;&#x7B97;&#x4E2D;&#x5206;&#x96E2;&#x6211;&#x5011;&#x7684;&#x6578;&#x64DA;&#x3002; &#x9019;&#x610F;&#x5473;&#x8457;&#x6211;&#x5011;&#x7E3D;&#x662F;&#x80FD;&#x5920;&#x5C07;&#x5C0D;&#x8C61;&#x5E8F;&#x5217;&#x5316;&#x70BA;JSON&#xFF0C;&#x9019;&#x5C0D;&#x65BC;&#x5728;&#x6703;&#x8A71;&#x4E4B;&#x9593;&#x6301;&#x4E45;&#x5316;&#xFF0C;&#x901A;&#x904E;HTTP&#x6216;WebSockets&#x767C;&#x9001;&#x5B83;&#x5011;&#xFF0C;&#x4E26;&#x5C07;&#x5B83;&#x5011;&#x653E;&#x5165;&#x6578;&#x64DA;&#x5B58;&#x5132;&#x5F88;&#x91CD;&#x8981;&#x3002; &#x9AD8;&#x7D1A;&#x5DE5;&#x5EE0; &#x5C07;&#x5DE5;&#x5EE0;&#x50B3;&#x905E;&#x7D66;&#x9AD8;&#x968E;&#x51FD;&#x6578;&#xFF0C;&#x9019;&#x5C07;&#x7D66;&#x6211;&#x5011;&#x5E36;&#x4F86;&#x5DE8;&#x5927;&#x7684;&#x63A7;&#x5236;&#x529B;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x9019;&#x500B;&#x6982;&#x5FF5;&#x4F86;&#x5275;&#x5EFA;&#x4E00;&#x500B;&#x589E;&#x5F37;&#x7684;&#x5C0D;&#x8C61;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function giveTimestamp ( factory ) { return ( ...args ) = { const instance = factory(...args); const time = Date .now(); return { time, instance }; }; } const createOrder = giveTimestamp( function ( ingredients ) { return { type: &apos;order&apos; , ingredients }; }); &#x9019;&#x500B;&#x589E;&#x5F37;&#x7684;&#x5C0D;&#x8C61;&#x63A1;&#x7528;&#x4E00;&#x500B;&#x73FE;&#x6709;&#x5DE5;&#x5EE0;&#xFF0C;&#x4E26;&#x5C07;&#x5176;&#x5305;&#x88DD;&#x4EE5;&#x5275;&#x5EFA;&#x8FD4;&#x56DE;&#x5E36;&#x6709; &#x6642;&#x9593;&#x6233;&#x5BE6;&#x4F8B; &#x7684;&#x5DE5;&#x5EE0;&#x3002; &#x4F7F;&#x7528;&#x9019;&#x4E9B;&#x7C21;&#x55AE;&#x7684;&#x69CB;&#x5EFA;&#x584A;&#x4F7F;&#x5F97;&#x6211;&#x5011;&#x7684;&#x4EE3;&#x78BC;&#x66F4;&#x52A0;&#x53CB;&#x597D;&#xFF0C;&#x9019;&#x7D55;&#x5C0D;&#x662F;&#x6211;&#x5011;&#x61C9;&#x8A72;&#x95DC;&#x5FC3;&#x7684;&#x4E8B;&#x60C5;&#x3002; &#x5DE5;&#x5EE0;&#x9F13;&#x52F5;&#x6211;&#x5011;&#x7528;&#x539F;&#x59CB;&#x6578;&#x64DA;&#x4F86;&#x6A21;&#x64EC;&#x8907;&#x96DC;&#x548C;&#x7570;&#x6B65;&#x6578;&#x64DA;&#xFF0C;&#x539F;&#x59CB;&#x6578;&#x64DA;&#x5177;&#x6709;&#x7D44;&#x5408;&#x7684;&#x81EA;&#x7136;&#x80FD;&#x529B;&#xFF0C;&#x800C;&#x4E0D;&#x5F37;&#x8FEB;&#x6211;&#x5011;&#x53BB;&#x505A;&#x4E00;&#x4E9B;&#x9AD8;&#x7D1A;&#x62BD;&#x8C61;&#x3002;&#x7576;&#x6211;&#x5011;&#x5805;&#x6301;&#x7C21;&#x55AE;&#x6642;&#xFF0C;JavaScript&#x66F4;&#x751C;&#x871C;&#xFF01; &#x82F1;&#x6587;&#x539F;&#x6587;&#xFF1A; https://www.sitepoint.com/factory-functions-javascript/"},"global/promise.html":{"title":"Promise","path":"\\javascript\\global\\promise.html","body":"Promise 是一個表示非同步運算的最終完成或失敗的物件。 Promise 對象在異步操作後可對其完成或失敗進行回調，並展示其結果值。 以下代碼片斷是一個 Promise 的示例：100ms 後使用標準輸出流打印出 result 字符串。 此外請注意 catch ，他可以用於錯誤處理。Promise 是 鏈式的 。 1 2 3 4 5 new Promise ( ( resolve, reject ) =  setTimeout( () =  resolve( \"result\" ) , 100 ) ).then( console .log).catch( console .error) // result Promise 有哪些狀態？ Promise 對象用於表示一個異步操作的最終狀態（完成或失敗）及其返回值。他有以下幾種狀態： pending ：初始狀態，完成或失敗狀態的前一個狀態 fulfilled ：操作成功完成 rejected ：操作失敗 pending 狀態的 Promise 對象會觸發 fulfilled/rejected 狀態，在其狀態處理方法中可以傳入參數 / 失敗信息。 當操作成功完成時，Promise 對象的 then 方法就會被調用；否則就會觸發 catch 。如： 1 2 3 4 5 6 7 8 9 const myFirstPromise = new Promise ( ( resolve, reject ) =  setTimeout( function ( )  resolve( \"成功!\" ); , 250 ); ); myFirstPromise.then( ( data ) =  console .log( \"完成!\" + data); ).catch( ( e ) = ...); Promise​.all() Promise​.all() 1 2 3 4 5 6 7 8 9 var p1 = Promise .resolve( 3 ); var p2 = 1337 ; var p3 = new Promise ( ( resolve, reject ) =  setTimeout(resolve, 100 , 'foo' ); ); Promise .all([p1, p2, p3]).then( values =  console .log(values); // [3, 1337, \"foo\"] ); examples https://jsbin.com/zosebomeko/edit?js,console,output 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 /* * 依照 tasks 順序 console 出 a, b, c */ const a = callback =  setTimeout( () =  callback( 'a' ); , 500 ); ; const b = callback =  setTimeout( () =  callback( 'b' ); , 200 ); ; const c = callback =  setTimeout( () =  callback( 'c' ); , 300 ); ; const tasks = [a, b, c]; const doByOrder = ( tasks, callback ) =  // implement here tasks = tasks.map( function ( task )  return new Promise ( ( resolve, reject ) =  task(resolve); ); ); const ansArr = []; let t = tasks[ 0 ]; for ( let i = 0 ; i  tasks.length; ++i)  t = t.then( p =  ansArr.push(p); //等待所有setTimeout callback function執行完畢才執行 if (i === tasks.length - 1 )  return callback(ansArr);  return tasks[i + 1 ]; //tasks[1] tasks[2] );  ; doByOrder(tasks, console .log.bind( console )); // expect to be [\"a\", \"b\", \"c\"] 事件循環：javascript的執行規則裡面有個 事件循環Event Loot 的規則 在事件循環中，異步事件會放到異步隊列裡面， 但是異步隊列裡面又分為宏任務和微任務， 瀏覽器端的 宏任務一般有： script標籤,setTimeout,setInterval,setImmediate,requestAnimationFrame 微任務有： MutationObserver,Promise.then catch finally 宏任務會阻塞瀏覽器的渲染進程，微任務會在宏任務結束後立即執行，在渲染之前。 在不使用 async/await 的情況下，順序執行一組異步代碼函數，並輸出最後的結果。 Promise.race() References 把setTimeout包裝成Promise、等待所有setTimout的callback function執行完程式流程才往下執行 promise經典面試題"},"global/date.html":{"title":"Date","path":"\\javascript\\global\\date.html","body":"Date 建立 Date 物件的方式： 1 2 3 4 5 var today = new Date (); var birthday = new Date ( 'December 17, 1995 03:24:00' ); var birthday = new Date ( '1995-12-17T03:24:00' ); var birthday = new Date ( 1995 , 11 , 17 ); var birthday = new Date ( 1995 , 11 , 17 , 3 , 24 , 0 ); Date.prototype.toISOString() 國際標準 ISO 8601 ，是國際標準化組織的日期和時間的表示方法 1 2 3 4 5 6 7 const d = new Date (); const today = d.toISOString().substring( 0 , 10 ); console .log(today) // \"yyyy-mm-dd\" format. 2020-05-25 let sevenDaysAgo = d.setDate(d.getDate() - 7 ); sevenDaysAgo = new Date (sevenDaysAgo).toISOString().substring( 0 , 10 );; console .log(sevenDaysAgo) // 2020-05-18"},"global/date.html#Date-prototype-toISOString":{"title":"Date.prototype.toISOString()","path":"\\javascript\\global\\date.html#Date-prototype-toISOString","body":"&#x570B;&#x969B;&#x6A19;&#x6E96; ISO 8601 &#xFF0C;&#x662F;&#x570B;&#x969B;&#x6A19;&#x6E96;&#x5316;&#x7D44;&#x7E54;&#x7684;&#x65E5;&#x671F;&#x548C;&#x6642;&#x9593;&#x7684;&#x8868;&#x793A;&#x65B9;&#x6CD5; 1 2 3 4 5 6 7 const d = new Date (); const today = d.toISOString().substring( 0 , 10 ); console .log(today) // yyyy-mm-dd format. 2020-05-25 let sevenDaysAgo = d.setDate(d.getDate() - 7 ); sevenDaysAgo = new Date (sevenDaysAgo).toISOString().substring( 0 , 10 );; console .log(sevenDaysAgo) // 2020-05-18"},"object/assign.html":{"title":"Object assign","path":"\\javascript\\object\\assign.html","body":"用來複製 Object.assign() 被用來複製一個或多個物件自身所有可數的屬性到另一個目標物件。回傳的值為該目標物件。 Object.assign() 只會從來源物件將自身可列舉的 屬性複製 到目標物件。 ##　複製物件 1 2 3 var obj =  a : 1 ; var copy = Object .assign(, obj); console .log(copy); //  a: 1  合併物件 1 2 3 4 5 6 7 var o1 =  a : 1 ; var o2 =  b : 2 ; var o3 =  c : 3 ; var obj = Object .assign(o1, o2, o3); console .log(obj); //  a: 1, b: 2, c: 3  console .log(o1); //  a: 1, b: 2, c: 3 , 目標物件本身也被改變。 有相同屬性時合併物件區段 1 2 3 4 5 6 var o1 =  a : 1 , b : 1 , c : 1 ; var o2 =  b : 2 , c : 2 ; var o3 =  c : 3 ; var obj = Object .assign(, o1, o2, o3); console .log(obj); //  a: 1, b: 2, c: 3 ，屬性c為o3.c的值，最後一個出現的屬性c。"},"object/assign.html#合併物件":{"title":"&#x5408;&#x4F75;&#x7269;&#x4EF6;","path":"\\javascript\\object\\assign.html#合併物件","body":"1 2 3 4 5 6 7 var o1 = { a : 1 }; var o2 = { b : 2 }; var o3 = { c : 3 }; var obj = Object .assign(o1, o2, o3); console .log(obj); // { a: 1, b: 2, c: 3 } console .log(o1); // { a: 1, b: 2, c: 3 }, &#x76EE;&#x6A19;&#x7269;&#x4EF6;&#x672C;&#x8EAB;&#x4E5F;&#x88AB;&#x6539;&#x8B8A;&#x3002;"},"object/assign.html#有相同屬性時合併物件區段":{"title":"&#x6709;&#x76F8;&#x540C;&#x5C6C;&#x6027;&#x6642;&#x5408;&#x4F75;&#x7269;&#x4EF6;&#x5340;&#x6BB5;","path":"\\javascript\\object\\assign.html#有相同屬性時合併物件區段","body":"1 2 3 4 5 6 var o1 = { a : 1 , b : 1 , c : 1 }; var o2 = { b : 2 , c : 2 }; var o3 = { c : 3 }; var obj = Object .assign({}, o1, o2, o3); console .log(obj); // { a: 1, b: 2, c: 3 }&#xFF0C;&#x5C6C;&#x6027;c&#x70BA;o3.c&#x7684;&#x503C;&#xFF0C;&#x6700;&#x5F8C;&#x4E00;&#x500B;&#x51FA;&#x73FE;&#x7684;&#x5C6C;&#x6027;c&#x3002;"},"object/object​_keys.html":{"title":"Object​.keys()","path":"\\javascript\\object\\object​_keys.html","body":"Object​.keys() https://jsbin.com/wurocegika/edit?js,console 1 2 3 4 5 6 7 8 9 10 var arr = [ 'a' , 'b' , 'c' ]; console .log( Object .keys(arr)); // console: ['0', '1', '2'] // 類似陣列的物件 var obj =  0 : 'a' , 1 : 'b' , 2 : 'c' ; console .log( Object .keys(obj)); // console: ['0', '1', '2'] // 擁有隨機 key 排序，類似陣列的物件 var an_obj =  100 : 'a' , 2 : 'b' , 7 : 'c' ; console .log( Object .keys(an_obj)); // console: ['2', '7', '100'] https://jsbin.com/sidixofelo/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 const types =  status: '404' , users: 'https'  const getObj = ; Object .keys(types).forEach( type =  console .log(type) // \"status\" \"users\" const camelCaseTypeRes = type + 'Res' ; getObj[type] = camelCaseTypeRes; ) console .log(getObj) // [object Object]  // status: \"statusRes\", // users: \"usersRes\" // "},"http/caching.html":{"title":"HTTP 緩存","path":"\\javascript\\http\\caching.html","body":"HTTP 緩存分為 2 種，一種是強緩存，另一種是協商緩存。 主要作用是可以加快資源獲取速度，提升用戶體驗，減少網絡傳輸，緩解服務端的壓力。 這是緩存運作的一個整體流程圖： 強緩存 不需要發送請求到服務端，直接讀取瀏覽器本地緩存，在 Chrome 的 Network 中顯示的 HTTP 狀態碼是 200 ，在 Chrome 中，強緩存又分為 Disk Cache (存放在硬盤中)和 Memory Cache (存放在內存中)，存放的位置是由瀏覽器控制的。 是否強緩存由 Expires 、 Cache-Control 和 Pragma 3 個 Header 屬性共同來控制。 Expires Expires 的值是一個 HTTP 日期 ，在瀏覽器發起請求時，會根據系統時間和 Expires 的值進行比較，如果系統時間超過了 Expires 的值，緩存失效。由於和系統時間進行比較，所以當系統時間和服務器時間不一致的時候，會有緩存有效期不准的問題。Expires 的優先級在三個 Header 屬性中是最低的。 Cache-Control Cache-Control 是 HTTP/1.1 中新增的屬性，在請求頭和響應頭中都可以使用，常用的屬性值如有： max-age：單位是秒，緩存時間計算的方式是距離發起的時間的秒數，超過間隔的秒數緩存失效 no-cache ：不使用強緩存，需要與服務器驗證緩存是否新鮮 no-store ：禁止使用緩存（包括協商緩存），每次都向服務器請求最新的資源 private：專用於個人的緩存，中間代理、CDN 等不能緩存此響應 public：響應可以被中間代理、CDN 等緩存 must-revalidate：在緩存過期前可以使用，過期後必須向服務器驗證 ###　驗證強緩存 本地通過 express 起一個服務來驗證強緩存的 3 個屬性，代碼如下： 1 2 3 4 5 6 7 8 9 10 11 const express = require ( 'express' ); const app = express(); var options =  etag: false , // 禁用協商緩存 lastModified: false , // 禁用協商緩存 setHeaders: ( res, path, stat ) =  res.set( 'Cache-Control' , 'max-age=10' ); // 強緩存超時時間為10秒 , ; app.use(express.static((__dirname + '/public' ), options)); app.listen( 3000 ); 第一次加載，頁面會向服務器請求數據，並在 Response Header 中添加 Cache-Control ，過期時間為 10 秒。 第二次加載，Date 頭屬性未更新，可以看到瀏覽器直接使用了強緩存，實際沒有發送請求。 過了 10 秒的超時時間之後，再次請求資源： 當 Pragma 和 Cache-Control 同時存在的時候，Pragma 的優先級高於 Cache-Control。 Headers  Response Headers  Cache-Control: max-age=10 / Pragma: no-cache Pragma Pragma 只有一個屬性值，就是 no-cache ，效果和 Cache-Control 中的 no-cache 一致，不使用強緩存，需要與服務器驗證緩存是否新鮮，在 3 個頭部屬性中的優先級最高。 協商緩存 當瀏覽器的強緩存失效的時候或者請求頭中設置了不走強緩存，並且在請求頭中設置了If-Modified-Since 或者 If-None-Match 的時候，會將這兩個屬性值到服務端去驗證是否命中協商緩存，如果命中了協商緩存，會返回 304 狀態，加載瀏覽器緩存，並且響應頭會設置 Last-Modified 或者 ETag 屬性。 ETag/If-None-Match ETag/If-None-Match 的值是 一串 hash 碼 ，代表的是 一個資源的標識 符，當服務端的文件變化的時候，它的 hash碼會隨之改變，通過請求頭中的 If-None-Match 和當前文件的 hash 值進行比較，如果相等則表示命中協商緩存。ETag 又有強弱校驗之分，如果 hash 碼是以 “W/“ 開頭的一串字符串，說明此時協商緩存的校驗是弱校驗的，只有服務器上的文件差異（根據 ETag 計算方式來決定）達到能夠觸發 hash 值後綴變化的時候，才會真正地請求資源，否則返回 304 並加載瀏覽器緩存。 Last-Modified/If-Modified-Since Last-Modified/If-Modified-Since 的值代表的是 文件的最後修改時間 ，第一次請求服務端會把資源的最後修改時間放到 Last-Modified 響應頭中，第二次發起請求的時候，請求頭會帶上上一次響應頭中的 Last-Modified 的時間，並放到 If-Modified-Since 請求頭屬性中，服務端根據文件最後一次修改時間和 If-Modified-Since 的值進行比較，如果相等，返回 304 ，並加載瀏覽器緩存。 ###　驗證協商緩存 本地通過 express 起一個服務來驗證協商緩存，代碼如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const express = require ( 'express' ); const app = express(); var options =  etag: true , // 開啟協商緩存 lastModified: true , // 開啟協商緩存 setHeaders: ( res, path, stat ) =  res.set( 'Cache-Control' : 'max-age=00' , // 瀏覽器不走強緩存 'Pragma' : 'no-cache' , // 瀏覽器不走強緩存 ); , ; app.use(express.static((__dirname + '/public' ), options)); app.listen( 3001 ); 第二次請求資源，服務端根據請求頭中的 If-Modified-Since 和 If-None-Match 驗證文件是否修改。 Tag/If-None-Match 的出現主要解決了 Last-Modified/If-Modified-Since 所解決不了的問題： 如果文件的修改頻率在秒級以下，Last-Modified/If-Modified-Since 會錯誤地返回 304 如果文件被修改了，但是內容沒有任何變化的時候，Last-Modified/If-Modified-Since 會錯誤地返回 304 References HTTP caching 圖解 HTTP 緩存"},"http/caching.html#強緩存":{"title":"&#x5F37;&#x7DE9;&#x5B58;","path":"\\javascript\\http\\caching.html#強緩存","body":"&#x4E0D;&#x9700;&#x8981;&#x767C;&#x9001;&#x8ACB;&#x6C42;&#x5230;&#x670D;&#x52D9;&#x7AEF;&#xFF0C;&#x76F4;&#x63A5;&#x8B80;&#x53D6;&#x700F;&#x89BD;&#x5668;&#x672C;&#x5730;&#x7DE9;&#x5B58;&#xFF0C;&#x5728; Chrome &#x7684; Network &#x4E2D;&#x986F;&#x793A;&#x7684; HTTP &#x72C0;&#x614B;&#x78BC;&#x662F; 200 &#xFF0C;&#x5728; Chrome &#x4E2D;&#xFF0C;&#x5F37;&#x7DE9;&#x5B58;&#x53C8;&#x5206;&#x70BA; Disk Cache (&#x5B58;&#x653E;&#x5728;&#x786C;&#x76E4;&#x4E2D;)&#x548C; Memory Cache (&#x5B58;&#x653E;&#x5728;&#x5167;&#x5B58;&#x4E2D;)&#xFF0C;&#x5B58;&#x653E;&#x7684;&#x4F4D;&#x7F6E;&#x662F;&#x7531;&#x700F;&#x89BD;&#x5668;&#x63A7;&#x5236;&#x7684;&#x3002; &#x662F;&#x5426;&#x5F37;&#x7DE9;&#x5B58;&#x7531; Expires &#x3001; Cache-Control &#x548C; Pragma 3 &#x500B; Header &#x5C6C;&#x6027;&#x5171;&#x540C;&#x4F86;&#x63A7;&#x5236;&#x3002; Expires Expires &#x7684;&#x503C;&#x662F;&#x4E00;&#x500B; HTTP &#x65E5;&#x671F; &#xFF0C;&#x5728;&#x700F;&#x89BD;&#x5668;&#x767C;&#x8D77;&#x8ACB;&#x6C42;&#x6642;&#xFF0C;&#x6703;&#x6839;&#x64DA;&#x7CFB;&#x7D71;&#x6642;&#x9593;&#x548C; Expires &#x7684;&#x503C;&#x9032;&#x884C;&#x6BD4;&#x8F03;&#xFF0C;&#x5982;&#x679C;&#x7CFB;&#x7D71;&#x6642;&#x9593;&#x8D85;&#x904E;&#x4E86; Expires &#x7684;&#x503C;&#xFF0C;&#x7DE9;&#x5B58;&#x5931;&#x6548;&#x3002;&#x7531;&#x65BC;&#x548C;&#x7CFB;&#x7D71;&#x6642;&#x9593;&#x9032;&#x884C;&#x6BD4;&#x8F03;&#xFF0C;&#x6240;&#x4EE5;&#x7576;&#x7CFB;&#x7D71;&#x6642;&#x9593;&#x548C;&#x670D;&#x52D9;&#x5668;&#x6642;&#x9593;&#x4E0D;&#x4E00;&#x81F4;&#x7684;&#x6642;&#x5019;&#xFF0C;&#x6703;&#x6709;&#x7DE9;&#x5B58;&#x6709;&#x6548;&#x671F;&#x4E0D;&#x51C6;&#x7684;&#x554F;&#x984C;&#x3002;Expires &#x7684;&#x512A;&#x5148;&#x7D1A;&#x5728;&#x4E09;&#x500B; Header &#x5C6C;&#x6027;&#x4E2D;&#x662F;&#x6700;&#x4F4E;&#x7684;&#x3002; Cache-Control Cache-Control &#x662F; HTTP/1.1 &#x4E2D;&#x65B0;&#x589E;&#x7684;&#x5C6C;&#x6027;&#xFF0C;&#x5728;&#x8ACB;&#x6C42;&#x982D;&#x548C;&#x97FF;&#x61C9;&#x982D;&#x4E2D;&#x90FD;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#xFF0C;&#x5E38;&#x7528;&#x7684;&#x5C6C;&#x6027;&#x503C;&#x5982;&#x6709;&#xFF1A; max-age&#xFF1A;&#x55AE;&#x4F4D;&#x662F;&#x79D2;&#xFF0C;&#x7DE9;&#x5B58;&#x6642;&#x9593;&#x8A08;&#x7B97;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x8DDD;&#x96E2;&#x767C;&#x8D77;&#x7684;&#x6642;&#x9593;&#x7684;&#x79D2;&#x6578;&#xFF0C;&#x8D85;&#x904E;&#x9593;&#x9694;&#x7684;&#x79D2;&#x6578;&#x7DE9;&#x5B58;&#x5931;&#x6548; no-cache &#xFF1A;&#x4E0D;&#x4F7F;&#x7528;&#x5F37;&#x7DE9;&#x5B58;&#xFF0C;&#x9700;&#x8981;&#x8207;&#x670D;&#x52D9;&#x5668;&#x9A57;&#x8B49;&#x7DE9;&#x5B58;&#x662F;&#x5426;&#x65B0;&#x9BAE; no-store &#xFF1A;&#x7981;&#x6B62;&#x4F7F;&#x7528;&#x7DE9;&#x5B58;&#xFF08;&#x5305;&#x62EC;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#xFF09;&#xFF0C;&#x6BCF;&#x6B21;&#x90FD;&#x5411;&#x670D;&#x52D9;&#x5668;&#x8ACB;&#x6C42;&#x6700;&#x65B0;&#x7684;&#x8CC7;&#x6E90; private&#xFF1A;&#x5C08;&#x7528;&#x65BC;&#x500B;&#x4EBA;&#x7684;&#x7DE9;&#x5B58;&#xFF0C;&#x4E2D;&#x9593;&#x4EE3;&#x7406;&#x3001;CDN &#x7B49;&#x4E0D;&#x80FD;&#x7DE9;&#x5B58;&#x6B64;&#x97FF;&#x61C9; public&#xFF1A;&#x97FF;&#x61C9;&#x53EF;&#x4EE5;&#x88AB;&#x4E2D;&#x9593;&#x4EE3;&#x7406;&#x3001;CDN &#x7B49;&#x7DE9;&#x5B58; must-revalidate&#xFF1A;&#x5728;&#x7DE9;&#x5B58;&#x904E;&#x671F;&#x524D;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#xFF0C;&#x904E;&#x671F;&#x5F8C;&#x5FC5;&#x9808;&#x5411;&#x670D;&#x52D9;&#x5668;&#x9A57;&#x8B49; ###&#x3000;&#x9A57;&#x8B49;&#x5F37;&#x7DE9;&#x5B58; &#x672C;&#x5730;&#x901A;&#x904E; express &#x8D77;&#x4E00;&#x500B;&#x670D;&#x52D9;&#x4F86;&#x9A57;&#x8B49;&#x5F37;&#x7DE9;&#x5B58;&#x7684; 3 &#x500B;&#x5C6C;&#x6027;&#xFF0C;&#x4EE3;&#x78BC;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 const express = require ( &apos;express&apos; ); const app = express(); var options = { etag: false , // &#x7981;&#x7528;&#x5354;&#x5546;&#x7DE9;&#x5B58; lastModified: false , // &#x7981;&#x7528;&#x5354;&#x5546;&#x7DE9;&#x5B58; setHeaders: ( res, path, stat ) = { res.set( &apos;Cache-Control&apos; , &apos;max-age=10&apos; ); // &#x5F37;&#x7DE9;&#x5B58;&#x8D85;&#x6642;&#x6642;&#x9593;&#x70BA;10&#x79D2; }, }; app.use(express.static((__dirname + &apos;/public&apos; ), options)); app.listen( 3000 ); &#x7B2C;&#x4E00;&#x6B21;&#x52A0;&#x8F09;&#xFF0C;&#x9801;&#x9762;&#x6703;&#x5411;&#x670D;&#x52D9;&#x5668;&#x8ACB;&#x6C42;&#x6578;&#x64DA;&#xFF0C;&#x4E26;&#x5728; Response Header &#x4E2D;&#x6DFB;&#x52A0; Cache-Control &#xFF0C;&#x904E;&#x671F;&#x6642;&#x9593;&#x70BA; 10 &#x79D2;&#x3002; &#x7B2C;&#x4E8C;&#x6B21;&#x52A0;&#x8F09;&#xFF0C;Date &#x982D;&#x5C6C;&#x6027;&#x672A;&#x66F4;&#x65B0;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x700F;&#x89BD;&#x5668;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x4E86;&#x5F37;&#x7DE9;&#x5B58;&#xFF0C;&#x5BE6;&#x969B;&#x6C92;&#x6709;&#x767C;&#x9001;&#x8ACB;&#x6C42;&#x3002; &#x904E;&#x4E86; 10 &#x79D2;&#x7684;&#x8D85;&#x6642;&#x6642;&#x9593;&#x4E4B;&#x5F8C;&#xFF0C;&#x518D;&#x6B21;&#x8ACB;&#x6C42;&#x8CC7;&#x6E90;&#xFF1A; &#x7576; Pragma &#x548C; Cache-Control &#x540C;&#x6642;&#x5B58;&#x5728;&#x7684;&#x6642;&#x5019;&#xFF0C;Pragma &#x7684;&#x512A;&#x5148;&#x7D1A;&#x9AD8;&#x65BC; Cache-Control&#x3002; Headers  Response Headers  Cache-Control: max-age=10 / Pragma: no-cache Pragma Pragma &#x53EA;&#x6709;&#x4E00;&#x500B;&#x5C6C;&#x6027;&#x503C;&#xFF0C;&#x5C31;&#x662F; no-cache &#xFF0C;&#x6548;&#x679C;&#x548C; Cache-Control &#x4E2D;&#x7684; no-cache &#x4E00;&#x81F4;&#xFF0C;&#x4E0D;&#x4F7F;&#x7528;&#x5F37;&#x7DE9;&#x5B58;&#xFF0C;&#x9700;&#x8981;&#x8207;&#x670D;&#x52D9;&#x5668;&#x9A57;&#x8B49;&#x7DE9;&#x5B58;&#x662F;&#x5426;&#x65B0;&#x9BAE;&#xFF0C;&#x5728; 3 &#x500B;&#x982D;&#x90E8;&#x5C6C;&#x6027;&#x4E2D;&#x7684;&#x512A;&#x5148;&#x7D1A;&#x6700;&#x9AD8;&#x3002;"},"http/caching.html#協商緩存":{"title":"&#x5354;&#x5546;&#x7DE9;&#x5B58;","path":"\\javascript\\http\\caching.html#協商緩存","body":"&#x7576;&#x700F;&#x89BD;&#x5668;&#x7684;&#x5F37;&#x7DE9;&#x5B58;&#x5931;&#x6548;&#x7684;&#x6642;&#x5019;&#x6216;&#x8005;&#x8ACB;&#x6C42;&#x982D;&#x4E2D;&#x8A2D;&#x7F6E;&#x4E86;&#x4E0D;&#x8D70;&#x5F37;&#x7DE9;&#x5B58;&#xFF0C;&#x4E26;&#x4E14;&#x5728;&#x8ACB;&#x6C42;&#x982D;&#x4E2D;&#x8A2D;&#x7F6E;&#x4E86;If-Modified-Since &#x6216;&#x8005; If-None-Match &#x7684;&#x6642;&#x5019;&#xFF0C;&#x6703;&#x5C07;&#x9019;&#x5169;&#x500B;&#x5C6C;&#x6027;&#x503C;&#x5230;&#x670D;&#x52D9;&#x7AEF;&#x53BB;&#x9A57;&#x8B49;&#x662F;&#x5426;&#x547D;&#x4E2D;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#xFF0C;&#x5982;&#x679C;&#x547D;&#x4E2D;&#x4E86;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#xFF0C;&#x6703;&#x8FD4;&#x56DE; 304 &#x72C0;&#x614B;&#xFF0C;&#x52A0;&#x8F09;&#x700F;&#x89BD;&#x5668;&#x7DE9;&#x5B58;&#xFF0C;&#x4E26;&#x4E14;&#x97FF;&#x61C9;&#x982D;&#x6703;&#x8A2D;&#x7F6E; Last-Modified &#x6216;&#x8005; ETag &#x5C6C;&#x6027;&#x3002; ETag/If-None-Match ETag/If-None-Match &#x7684;&#x503C;&#x662F; &#x4E00;&#x4E32; hash &#x78BC; &#xFF0C;&#x4EE3;&#x8868;&#x7684;&#x662F; &#x4E00;&#x500B;&#x8CC7;&#x6E90;&#x7684;&#x6A19;&#x8B58; &#x7B26;&#xFF0C;&#x7576;&#x670D;&#x52D9;&#x7AEF;&#x7684;&#x6587;&#x4EF6;&#x8B8A;&#x5316;&#x7684;&#x6642;&#x5019;&#xFF0C;&#x5B83;&#x7684; hash&#x78BC;&#x6703;&#x96A8;&#x4E4B;&#x6539;&#x8B8A;&#xFF0C;&#x901A;&#x904E;&#x8ACB;&#x6C42;&#x982D;&#x4E2D;&#x7684; If-None-Match &#x548C;&#x7576;&#x524D;&#x6587;&#x4EF6;&#x7684; hash &#x503C;&#x9032;&#x884C;&#x6BD4;&#x8F03;&#xFF0C;&#x5982;&#x679C;&#x76F8;&#x7B49;&#x5247;&#x8868;&#x793A;&#x547D;&#x4E2D;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#x3002;ETag &#x53C8;&#x6709;&#x5F37;&#x5F31;&#x6821;&#x9A57;&#x4E4B;&#x5206;&#xFF0C;&#x5982;&#x679C; hash &#x78BC;&#x662F;&#x4EE5; &#x201C;W/&#x201C; &#x958B;&#x982D;&#x7684;&#x4E00;&#x4E32;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x8AAA;&#x660E;&#x6B64;&#x6642;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#x7684;&#x6821;&#x9A57;&#x662F;&#x5F31;&#x6821;&#x9A57;&#x7684;&#xFF0C;&#x53EA;&#x6709;&#x670D;&#x52D9;&#x5668;&#x4E0A;&#x7684;&#x6587;&#x4EF6;&#x5DEE;&#x7570;&#xFF08;&#x6839;&#x64DA; ETag &#x8A08;&#x7B97;&#x65B9;&#x5F0F;&#x4F86;&#x6C7A;&#x5B9A;&#xFF09;&#x9054;&#x5230;&#x80FD;&#x5920;&#x89F8;&#x767C; hash &#x503C;&#x5F8C;&#x7DB4;&#x8B8A;&#x5316;&#x7684;&#x6642;&#x5019;&#xFF0C;&#x624D;&#x6703;&#x771F;&#x6B63;&#x5730;&#x8ACB;&#x6C42;&#x8CC7;&#x6E90;&#xFF0C;&#x5426;&#x5247;&#x8FD4;&#x56DE; 304 &#x4E26;&#x52A0;&#x8F09;&#x700F;&#x89BD;&#x5668;&#x7DE9;&#x5B58;&#x3002; Last-Modified/If-Modified-Since Last-Modified/If-Modified-Since &#x7684;&#x503C;&#x4EE3;&#x8868;&#x7684;&#x662F; &#x6587;&#x4EF6;&#x7684;&#x6700;&#x5F8C;&#x4FEE;&#x6539;&#x6642;&#x9593; &#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x8ACB;&#x6C42;&#x670D;&#x52D9;&#x7AEF;&#x6703;&#x628A;&#x8CC7;&#x6E90;&#x7684;&#x6700;&#x5F8C;&#x4FEE;&#x6539;&#x6642;&#x9593;&#x653E;&#x5230; Last-Modified &#x97FF;&#x61C9;&#x982D;&#x4E2D;&#xFF0C;&#x7B2C;&#x4E8C;&#x6B21;&#x767C;&#x8D77;&#x8ACB;&#x6C42;&#x7684;&#x6642;&#x5019;&#xFF0C;&#x8ACB;&#x6C42;&#x982D;&#x6703;&#x5E36;&#x4E0A;&#x4E0A;&#x4E00;&#x6B21;&#x97FF;&#x61C9;&#x982D;&#x4E2D;&#x7684; Last-Modified &#x7684;&#x6642;&#x9593;&#xFF0C;&#x4E26;&#x653E;&#x5230; If-Modified-Since &#x8ACB;&#x6C42;&#x982D;&#x5C6C;&#x6027;&#x4E2D;&#xFF0C;&#x670D;&#x52D9;&#x7AEF;&#x6839;&#x64DA;&#x6587;&#x4EF6;&#x6700;&#x5F8C;&#x4E00;&#x6B21;&#x4FEE;&#x6539;&#x6642;&#x9593;&#x548C; If-Modified-Since &#x7684;&#x503C;&#x9032;&#x884C;&#x6BD4;&#x8F03;&#xFF0C;&#x5982;&#x679C;&#x76F8;&#x7B49;&#xFF0C;&#x8FD4;&#x56DE; 304 &#xFF0C;&#x4E26;&#x52A0;&#x8F09;&#x700F;&#x89BD;&#x5668;&#x7DE9;&#x5B58;&#x3002; ###&#x3000;&#x9A57;&#x8B49;&#x5354;&#x5546;&#x7DE9;&#x5B58; &#x672C;&#x5730;&#x901A;&#x904E; express &#x8D77;&#x4E00;&#x500B;&#x670D;&#x52D9;&#x4F86;&#x9A57;&#x8B49;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#xFF0C;&#x4EE3;&#x78BC;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const express = require ( &apos;express&apos; ); const app = express(); var options = { etag: true , // &#x958B;&#x555F;&#x5354;&#x5546;&#x7DE9;&#x5B58; lastModified: true , // &#x958B;&#x555F;&#x5354;&#x5546;&#x7DE9;&#x5B58; setHeaders: ( res, path, stat ) = { res.set({ &apos;Cache-Control&apos; : &apos;max-age=00&apos; , // &#x700F;&#x89BD;&#x5668;&#x4E0D;&#x8D70;&#x5F37;&#x7DE9;&#x5B58; &apos;Pragma&apos; : &apos;no-cache&apos; , // &#x700F;&#x89BD;&#x5668;&#x4E0D;&#x8D70;&#x5F37;&#x7DE9;&#x5B58; }); }, }; app.use(express.static((__dirname + &apos;/public&apos; ), options)); app.listen( 3001 ); &#x7B2C;&#x4E8C;&#x6B21;&#x8ACB;&#x6C42;&#x8CC7;&#x6E90;&#xFF0C;&#x670D;&#x52D9;&#x7AEF;&#x6839;&#x64DA;&#x8ACB;&#x6C42;&#x982D;&#x4E2D;&#x7684; If-Modified-Since &#x548C; If-None-Match &#x9A57;&#x8B49;&#x6587;&#x4EF6;&#x662F;&#x5426;&#x4FEE;&#x6539;&#x3002; Tag/If-None-Match &#x7684;&#x51FA;&#x73FE;&#x4E3B;&#x8981;&#x89E3;&#x6C7A;&#x4E86; Last-Modified/If-Modified-Since &#x6240;&#x89E3;&#x6C7A;&#x4E0D;&#x4E86;&#x7684;&#x554F;&#x984C;&#xFF1A; &#x5982;&#x679C;&#x6587;&#x4EF6;&#x7684;&#x4FEE;&#x6539;&#x983B;&#x7387;&#x5728;&#x79D2;&#x7D1A;&#x4EE5;&#x4E0B;&#xFF0C;Last-Modified/If-Modified-Since &#x6703;&#x932F;&#x8AA4;&#x5730;&#x8FD4;&#x56DE; 304 &#x5982;&#x679C;&#x6587;&#x4EF6;&#x88AB;&#x4FEE;&#x6539;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x5167;&#x5BB9;&#x6C92;&#x6709;&#x4EFB;&#x4F55;&#x8B8A;&#x5316;&#x7684;&#x6642;&#x5019;&#xFF0C;Last-Modified/If-Modified-Since &#x6703;&#x932F;&#x8AA4;&#x5730;&#x8FD4;&#x56DE; 304"},"http/caching.html#References":{"title":"References","path":"\\javascript\\http\\caching.html#References","body":"HTTP caching &#x5716;&#x89E3; HTTP &#x7DE9;&#x5B58;"},"global/function.html":{"title":"","path":"\\javascript\\global\\function.html","body":"call、apply、bind Function.prototype.call() 使用給定的this參數以及分別給定的參數來呼叫某個函數 Function.prototype.apply() apply() 方法會呼叫一個以 this 的代表值和一個陣列形式的值組(或是一個 array-like object )為參數的函式。 Function.prototype.bind() bind() 方法，會建立一個新函式。該函式被呼叫時，會將 this 關鍵字設為給定的參數，並在呼叫時，帶有提供之前，給定順序的參數。 為什麼我們需要 apply / bind / call ？ 最大的原因還是因為 this 這個東西是 動態的 。（ PS. arguments 也是） 拿到正確的 this ，而非一言不合就 undefined cab [ call , apply ] vs [ bind ] call 、 apply 皆是回傳function執行結果 bind 方法回傳的是綁定 this 後的 原函數 箭頭函數 多數時候一般函數無異，但是最大的差別在於 — 其 this 完全綁定在語彙上的位置，也就是說在 arrow 裡面的 this 永遠都是語意上的 this ，不管是誰呼叫他，或是被如何 bind 、 call 、 apply ，他永遠都是拿到原先作用域的 this 。 bind 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class dog  constructor (name) this .name = name;  sayHello() console .log( 'Hello I am ' , this .name);  laterHello() setTimeout( function ( )  console .log( '(1 sec...) Hi!, I am' , this .name) , 1000 );   let boo = new dog( 'Corgi' ); boo.sayHello(); // Hello I am Corgi boo.laterHello(); // (1 sec...) Hi!, I am undefined 1 2 3 4 5 6 7 8 9 10 11 // Self — this 的替身 // bad 請別儲存 this 為參考。請使用箭頭函式或是 Function#bind laterHello()  var self = this ; // 先把這邊的this(指向class內部)存起來 setTimeout( function ( )  console .log( '(1 sec...) Hi!, I am' , self.name); // 因為語彙上能夠引用self變數（同個塊作用域） // 所以拿到了self.name , 1000 );  1 2 3 4 5 6 7 8 9 // .bind(this) — Binding大法 綁定大法 laterHello()  setTimeout( function ( )  console .log( '(1 sec...) Hi!, I am' , this .name); .bind( this ), 1000 );  1 2 3 4 5 6 // Arrow Function — 箭頭函數 laterHello()  setTimeout( () =  console .log( '(1 sec...) Hi!, I am' , this .name); , 1000 );  References 函數原型最實用的 3 個方法 — call、apply、bind"},"global/function.html#call、apply、bind":{"title":"call&#x3001;apply&#x3001;bind","path":"\\javascript\\global\\function.html#call、apply、bind","body":"Function.prototype.call() &#x4F7F;&#x7528;&#x7D66;&#x5B9A;&#x7684;this&#x53C3;&#x6578;&#x4EE5;&#x53CA;&#x5206;&#x5225;&#x7D66;&#x5B9A;&#x7684;&#x53C3;&#x6578;&#x4F86;&#x547C;&#x53EB;&#x67D0;&#x500B;&#x51FD;&#x6578; Function.prototype.apply() apply() &#x65B9;&#x6CD5;&#x6703;&#x547C;&#x53EB;&#x4E00;&#x500B;&#x4EE5; this &#x7684;&#x4EE3;&#x8868;&#x503C;&#x548C;&#x4E00;&#x500B;&#x9663;&#x5217;&#x5F62;&#x5F0F;&#x7684;&#x503C;&#x7D44;(&#x6216;&#x662F;&#x4E00;&#x500B; array-like object )&#x70BA;&#x53C3;&#x6578;&#x7684;&#x51FD;&#x5F0F;&#x3002; Function.prototype.bind() bind() &#x65B9;&#x6CD5;&#xFF0C;&#x6703;&#x5EFA;&#x7ACB;&#x4E00;&#x500B;&#x65B0;&#x51FD;&#x5F0F;&#x3002;&#x8A72;&#x51FD;&#x5F0F;&#x88AB;&#x547C;&#x53EB;&#x6642;&#xFF0C;&#x6703;&#x5C07; this &#x95DC;&#x9375;&#x5B57;&#x8A2D;&#x70BA;&#x7D66;&#x5B9A;&#x7684;&#x53C3;&#x6578;&#xFF0C;&#x4E26;&#x5728;&#x547C;&#x53EB;&#x6642;&#xFF0C;&#x5E36;&#x6709;&#x63D0;&#x4F9B;&#x4E4B;&#x524D;&#xFF0C;&#x7D66;&#x5B9A;&#x9806;&#x5E8F;&#x7684;&#x53C3;&#x6578;&#x3002;"},"global/function.html#為什麼我們需要-apply-bind-call-？":{"title":"&#x70BA;&#x4EC0;&#x9EBC;&#x6211;&#x5011;&#x9700;&#x8981; apply / bind / call &#xFF1F;","path":"\\javascript\\global\\function.html#為什麼我們需要-apply-bind-call-？","body":"&#x6700;&#x5927;&#x7684;&#x539F;&#x56E0;&#x9084;&#x662F;&#x56E0;&#x70BA; this &#x9019;&#x500B;&#x6771;&#x897F;&#x662F; &#x52D5;&#x614B;&#x7684; &#x3002;&#xFF08; PS. arguments &#x4E5F;&#x662F;&#xFF09; &#x62FF;&#x5230;&#x6B63;&#x78BA;&#x7684; this &#xFF0C;&#x800C;&#x975E;&#x4E00;&#x8A00;&#x4E0D;&#x5408;&#x5C31; undefined"},"global/function.html#cab-call-apply-vs-bind":{"title":"cab [ call , apply ] vs [ bind ]","path":"\\javascript\\global\\function.html#cab-call-apply-vs-bind","body":"call &#x3001; apply &#x7686;&#x662F;&#x56DE;&#x50B3;function&#x57F7;&#x884C;&#x7D50;&#x679C; bind &#x65B9;&#x6CD5;&#x56DE;&#x50B3;&#x7684;&#x662F;&#x7D81;&#x5B9A; this &#x5F8C;&#x7684; &#x539F;&#x51FD;&#x6578; &#x7BAD;&#x982D;&#x51FD;&#x6578; &#x591A;&#x6578;&#x6642;&#x5019;&#x4E00;&#x822C;&#x51FD;&#x6578;&#x7121;&#x7570;&#xFF0C;&#x4F46;&#x662F;&#x6700;&#x5927;&#x7684;&#x5DEE;&#x5225;&#x5728;&#x65BC; &#x2014; &#x5176; this &#x5B8C;&#x5168;&#x7D81;&#x5B9A;&#x5728;&#x8A9E;&#x5F59;&#x4E0A;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#x5728; arrow &#x88E1;&#x9762;&#x7684; this &#x6C38;&#x9060;&#x90FD;&#x662F;&#x8A9E;&#x610F;&#x4E0A;&#x7684; this &#xFF0C;&#x4E0D;&#x7BA1;&#x662F;&#x8AB0;&#x547C;&#x53EB;&#x4ED6;&#xFF0C;&#x6216;&#x662F;&#x88AB;&#x5982;&#x4F55; bind &#x3001; call &#x3001; apply &#xFF0C;&#x4ED6;&#x6C38;&#x9060;&#x90FD;&#x662F;&#x62FF;&#x5230;&#x539F;&#x5148;&#x4F5C;&#x7528;&#x57DF;&#x7684; this &#x3002;"},"global/function.html#bind":{"title":"bind","path":"\\javascript\\global\\function.html#bind","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class dog { constructor (name){ this .name = name; } sayHello(){ console .log( &apos;Hello I am &apos; , this .name); } laterHello(){ setTimeout( function ( ) { console .log( &apos;(1 sec...) Hi!, I am&apos; , this .name) }, 1000 ); } } let boo = new dog( &apos;Corgi&apos; ); boo.sayHello(); // Hello I am Corgi boo.laterHello(); // (1 sec...) Hi!, I am undefined 1 2 3 4 5 6 7 8 9 10 11 // Self &#x2014; this &#x7684;&#x66FF;&#x8EAB; // bad &#x8ACB;&#x5225;&#x5132;&#x5B58; this &#x70BA;&#x53C3;&#x8003;&#x3002;&#x8ACB;&#x4F7F;&#x7528;&#x7BAD;&#x982D;&#x51FD;&#x5F0F;&#x6216;&#x662F; Function#bind laterHello() { var self = this ; // &#x5148;&#x628A;&#x9019;&#x908A;&#x7684;this(&#x6307;&#x5411;class&#x5167;&#x90E8;)&#x5B58;&#x8D77;&#x4F86; setTimeout( function ( ) { console .log( &apos;(1 sec...) Hi!, I am&apos; , self.name); // &#x56E0;&#x70BA;&#x8A9E;&#x5F59;&#x4E0A;&#x80FD;&#x5920;&#x5F15;&#x7528;self&#x8B8A;&#x6578;&#xFF08;&#x540C;&#x500B;&#x584A;&#x4F5C;&#x7528;&#x57DF;&#xFF09; // &#x6240;&#x4EE5;&#x62FF;&#x5230;&#x4E86;self.name }, 1000 ); } 1 2 3 4 5 6 7 8 9 // .bind(this) &#x2014; Binding&#x5927;&#x6CD5; &#x7D81;&#x5B9A;&#x5927;&#x6CD5; laterHello() { setTimeout( function ( ) { console .log( &apos;(1 sec...) Hi!, I am&apos; , this .name); }.bind( this ), 1000 ); } 1 2 3 4 5 6 // Arrow Function &#x2014; &#x7BAD;&#x982D;&#x51FD;&#x6578; laterHello() { setTimeout( () = { console .log( &apos;(1 sec...) Hi!, I am&apos; , this .name); }, 1000 ); }"},"global/function.html#References":{"title":"References","path":"\\javascript\\global\\function.html#References","body":"&#x51FD;&#x6578;&#x539F;&#x578B;&#x6700;&#x5BE6;&#x7528;&#x7684; 3 &#x500B;&#x65B9;&#x6CD5; &#x2014; call&#x3001;apply&#x3001;bind"},"operators/delete.html":{"title":"","path":"\\javascript\\operators\\delete.html","body":"delete 1 2 3 4 ( function ( x )  delete x; return x; )( 1 ) //1 刪不掉x delete只能操作對象的屬性 不能操作變量"},"operators/delete.html#delete":{"title":"delete","path":"\\javascript\\operators\\delete.html#delete","body":"1 2 3 4 ( function ( x ) { delete x; return x; })( 1 ) //1 &#x522A;&#x4E0D;&#x6389;x delete&#x53EA;&#x80FD;&#x64CD;&#x4F5C;&#x5C0D;&#x8C61;&#x7684;&#x5C6C;&#x6027; &#x4E0D;&#x80FD;&#x64CD;&#x4F5C;&#x8B8A;&#x91CF;"},"object/create.html":{"title":"Object.create()","path":"\\javascript\\object\\create.html","body":"Object.create() 指定其原型物件與屬性，創建一個新物件。 使用 Object.create() 實現類別繼承 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // Shape - 父類別 function Shape ( )  this .x = 0 ; this .y = 0 ;  // 父類別的方法 Shape.prototype.move = function ( x, y )  this .x += x; this .y += y; console .info( 'Shape moved.' ); ; // Rectangle - 子類別 function Rectangle ( )  Shape.call( this ); // call super constructor.  // 子類別擴展(extends)父類別 Rectangle.prototype = Object .create(Shape.prototype); Rectangle.prototype.constructor = Rectangle; var rect = new Rectangle(); console .log( 'Is rect an instance of Rectangle?' , rect instanceof Rectangle); // true console .log( 'Is rect an instance of Shape?' , rect instanceof Shape); // true rect.move( 1 , 1 ); // Outputs, 'Shape moved.' ex 1 2 let ...arr = Object .create( x : 1 ) // Object.create 將x掛在原形鏈上了 沒有掛在值上  console .log(arr) // undefined"},"operators/destructuring_assignment.html":{"title":"","path":"\\javascript\\operators\\destructuring_assignment.html","body":"Destructuring assignment 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 let a, b, rest; [a, b] = [ 10 , 20 ]; console .log(a); // 10 console .log(b); // 20 [a, b, ...rest] = [ 10 , 20 , 30 , 40 , 50 ]; console .log(a); // 10 console .log(b); // 20 console .log(rest); // [30, 40, 50] ( a, b  =  a : 10 , b : 20 ); console .log(a); // 10 console .log(b); // 20 ( a, b  =  a : 10 , b : 20 , c : 30 ); console .log(a); // 10 console .log(b); // 20 // Stage 4(finished) proposal (a, b, ...rest =  a : 10 , b : 20 , c : 30 , d : 40 ); console .log(a); // 10 console .log(b); // 20 console .log(rest); // c: 30, d: 40 1 2 3 4 5 6 7 8 const object =  a : 5 , b : 6 , c : 7 ; const picked = ( ( a, c  ) = ( a, c ))(object); console .log(picked); //  a: 5, c: 7  let unwrap = ( a, c ) = (a, c); let picked = unwrap( a : 5 , b : 6 , c : 7 ); console .log(picked) //  a: 5, c: 7  1 2 3 4 5 6 let picked = ( date, close, symbol ) = (date, close, symbol); const map1 = quotes.map( obj =  // console.log(obj) return picked(obj) ); console .log(map1); [ { date: 2020-05-14T04:00:00.000Z, close: 142.970001, symbol: ‘vti’ }, { date: 2020-05-13T04:00:00.000Z, close: 141.449997, symbol: ‘vti’ } ]"},"operators/destructuring_assignment.html#Destructuring-assignment":{"title":"Destructuring assignment","path":"\\javascript\\operators\\destructuring_assignment.html#Destructuring-assignment","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 let a, b, rest; [a, b] = [ 10 , 20 ]; console .log(a); // 10 console .log(b); // 20 [a, b, ...rest] = [ 10 , 20 , 30 , 40 , 50 ]; console .log(a); // 10 console .log(b); // 20 console .log(rest); // [30, 40, 50] ({ a, b } = { a : 10 , b : 20 }); console .log(a); // 10 console .log(b); // 20 ({ a, b } = { a : 10 , b : 20 , c : 30 }); console .log(a); // 10 console .log(b); // 20 // Stage 4(finished) proposal ({a, b, ...rest} = { a : 10 , b : 20 , c : 30 , d : 40 }); console .log(a); // 10 console .log(b); // 20 console .log(rest); // {c: 30, d: 40} 1 2 3 4 5 6 7 8 const object = { a : 5 , b : 6 , c : 7 }; const picked = ( ({ a, c } ) = ({ a, c }))(object); console .log(picked); // { a: 5, c: 7 } let unwrap = ( {a, c} ) = ({a, c}); let picked = unwrap({ a : 5 , b : 6 , c : 7 }); console .log(picked) // { a: 5, c: 7 } 1 2 3 4 5 6 let picked = ( {date, close, symbol} ) = ({date, close, symbol}); const map1 = quotes.map( obj = { // console.log(obj) return picked(obj) }); console .log(map1); [ { date: 2020-05-14T04:00:00.000Z, close: 142.970001, symbol: &#x2018;vti&#x2019; }, { date: 2020-05-13T04:00:00.000Z, close: 141.449997, symbol: &#x2018;vti&#x2019; } ]"},"statements/if...else.html":{"title":"","path":"\\javascript\\statements\\if...else.html","body":"if…else 條件組合的問題 規則是： 1.在預熱中參與活動，vip用戶贈送 1000 積分，普通用戶贈送 700 積分。 2.在進行中參與活動，vip用戶贈送 800 積分，普通用戶贈送 300 積分。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 let status= 1 let type= 2 if (status=== 1 ) if (type=== 1 ) console .log( '普通用戶在預售中參與活動，贈送700積分' )  else if (type=== 2 ) console .log( 'vip用戶在預售中參與活動，贈送1000積分' )   else if (status=== 2 ) if (type=== 1 ) console .log( '普通用戶在進行中參與活動，贈送300積分' )  else if (type=== 2 ) console .log( 'vip用戶在進行中參與活動，贈送800積分' )   可以使用 obj 寫法，如果以後有什麼條件改了，直接改 obj 這個配置就好 1 2 3 4 5 6 7 8 let obj= 'status=1&amp;type=1' : '普通用戶在預售中參與活動，贈送700積分' , 'status=1&amp;type=2' : 'vip用戶在預售中參與活動，贈送1000積分' , 'status=2&amp;type=1' : '普通用戶在進行中參與活動，贈送300積分' , 'status=2&amp;type=2' : '普通用戶在進行中參與活動，贈送800積分'  console .log(obj[ `status= $status &amp;type= $type ` ]) 特定场景下代替优化 if-else 的方案"},"statements/if...else.html#if…else":{"title":"if&#x2026;else","path":"\\javascript\\statements\\if...else.html#if…else","body":""},"statements/if...else.html#條件組合的問題":{"title":"&#x689D;&#x4EF6;&#x7D44;&#x5408;&#x7684;&#x554F;&#x984C;","path":"\\javascript\\statements\\if...else.html#條件組合的問題","body":"&#x898F;&#x5247;&#x662F;&#xFF1A; 1.&#x5728;&#x9810;&#x71B1;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;vip&#x7528;&#x6236;&#x8D08;&#x9001; 1000 &#x7A4D;&#x5206;&#xFF0C;&#x666E;&#x901A;&#x7528;&#x6236;&#x8D08;&#x9001; 700 &#x7A4D;&#x5206;&#x3002; 2.&#x5728;&#x9032;&#x884C;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;vip&#x7528;&#x6236;&#x8D08;&#x9001; 800 &#x7A4D;&#x5206;&#xFF0C;&#x666E;&#x901A;&#x7528;&#x6236;&#x8D08;&#x9001; 300 &#x7A4D;&#x5206;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 let status= 1 let type= 2 if (status=== 1 ){ if (type=== 1 ){ console .log( &apos;&#x666E;&#x901A;&#x7528;&#x6236;&#x5728;&#x9810;&#x552E;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;700&#x7A4D;&#x5206;&apos; ) } else if (type=== 2 ){ console .log( &apos;vip&#x7528;&#x6236;&#x5728;&#x9810;&#x552E;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;1000&#x7A4D;&#x5206;&apos; ) } } else if (status=== 2 ){ if (type=== 1 ){ console .log( &apos;&#x666E;&#x901A;&#x7528;&#x6236;&#x5728;&#x9032;&#x884C;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;300&#x7A4D;&#x5206;&apos; ) } else if (type=== 2 ){ console .log( &apos;vip&#x7528;&#x6236;&#x5728;&#x9032;&#x884C;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;800&#x7A4D;&#x5206;&apos; ) } } &#x53EF;&#x4EE5;&#x4F7F;&#x7528; obj &#x5BEB;&#x6CD5;&#xFF0C;&#x5982;&#x679C;&#x4EE5;&#x5F8C;&#x6709;&#x4EC0;&#x9EBC;&#x689D;&#x4EF6;&#x6539;&#x4E86;&#xFF0C;&#x76F4;&#x63A5;&#x6539; obj &#x9019;&#x500B;&#x914D;&#x7F6E;&#x5C31;&#x597D; 1 2 3 4 5 6 7 8 let obj={ &apos;status=1&amp;type=1&apos; : &apos;&#x666E;&#x901A;&#x7528;&#x6236;&#x5728;&#x9810;&#x552E;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;700&#x7A4D;&#x5206;&apos; , &apos;status=1&amp;type=2&apos; : &apos;vip&#x7528;&#x6236;&#x5728;&#x9810;&#x552E;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;1000&#x7A4D;&#x5206;&apos; , &apos;status=2&amp;type=1&apos; : &apos;&#x666E;&#x901A;&#x7528;&#x6236;&#x5728;&#x9032;&#x884C;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;300&#x7A4D;&#x5206;&apos; , &apos;status=2&amp;type=2&apos; : &apos;&#x666E;&#x901A;&#x7528;&#x6236;&#x5728;&#x9032;&#x884C;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;800&#x7A4D;&#x5206;&apos; } console .log(obj[ `status= ${status} &amp;type= ${type} ` ]) &#x7279;&#x5B9A;&#x573A;&#x666F;&#x4E0B;&#x4EE3;&#x66FF;&#x4F18;&#x5316; if-else &#x7684;&#x65B9;&#x6848;"},"operators/precedence.html":{"title":"","path":"\\javascript\\operators\\precedence.html","body":"運算子優先序 1 2 3 var s = 'msg' console .log((s === 'msg' ) ? \"something\" : \"nothing\" ) console .log( \"value is \" + (s === 'msg' ) ? \"something\" : \"nothing\" ) // something value is 不見了 + 優先序高於 … ? … : … value is  + (s ===&#39;msg&#39;) // true .運算符比 = 運算符高 1 2 3 4 5 6 var a =  n : 1  var b = a a.x = a =  n : 2  console .log(a.n, b.n); console .log(a.x, b.x); 2 1 undefined {n: 2} 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 var b = a,此時a和b指向同一個對象。 .運算符比 = 運算符高,先計算 `a.x` ,此時 b =  n: 1 , x: undefined  相當於給對象添加了x屬性。 a.x = a =  n : 2 ; 計算完a.x,再計算 = ,賦值是從右向左,此時a指向一個新對象。 a =  n: 2  a.x已經執行過了,此時對象的x屬性賦值為a,此時 對象 =  n: 1 , x: n: 2   即: a =  n: 2  b =  n: 1 , x: n: 2  "},"operators/precedence.html#運算子優先序":{"title":"&#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F;","path":"\\javascript\\operators\\precedence.html#運算子優先序","body":"1 2 3 var s = &apos;msg&apos; console .log((s === &apos;msg&apos; ) ? something : nothing ) console .log( value is  + (s === &apos;msg&apos; ) ? something : nothing ) // something value is &#x4E0D;&#x898B;&#x4E86; + &#x512A;&#x5148;&#x5E8F;&#x9AD8;&#x65BC; &#x2026; ? &#x2026; : &#x2026; value is  + (s ===&apos;msg&apos;) // true"},"operators/precedence.html#運算符比-運算符高":{"title":".&#x904B;&#x7B97;&#x7B26;&#x6BD4; = &#x904B;&#x7B97;&#x7B26;&#x9AD8;","path":"\\javascript\\operators\\precedence.html#運算符比-運算符高","body":"1 2 3 4 5 6 var a = { n : 1 } var b = a a.x = a = { n : 2 } console .log(a.n, b.n); console .log(a.x, b.x); 2 1 undefined {n: 2} 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 var b = a,&#x6B64;&#x6642;a&#x548C;b&#x6307;&#x5411;&#x540C;&#x4E00;&#x500B;&#x5C0D;&#x8C61;&#x3002; .&#x904B;&#x7B97;&#x7B26;&#x6BD4; = &#x904B;&#x7B97;&#x7B26;&#x9AD8;,&#x5148;&#x8A08;&#x7B97; `a.x` ,&#x6B64;&#x6642; b = { n: 1 , x: undefined } &#x76F8;&#x7576;&#x65BC;&#x7D66;&#x5C0D;&#x8C61;&#x6DFB;&#x52A0;&#x4E86;x&#x5C6C;&#x6027;&#x3002; a.x = a = { n : 2 }; &#x8A08;&#x7B97;&#x5B8C;a.x,&#x518D;&#x8A08;&#x7B97; = ,&#x8CE6;&#x503C;&#x662F;&#x5F9E;&#x53F3;&#x5411;&#x5DE6;,&#x6B64;&#x6642;a&#x6307;&#x5411;&#x4E00;&#x500B;&#x65B0;&#x5C0D;&#x8C61;&#x3002; a = { n: 2 } a.x&#x5DF2;&#x7D93;&#x57F7;&#x884C;&#x904E;&#x4E86;,&#x6B64;&#x6642;&#x5C0D;&#x8C61;&#x7684;x&#x5C6C;&#x6027;&#x8CE6;&#x503C;&#x70BA;a,&#x6B64;&#x6642; &#x5C0D;&#x8C61; = { n: 1 , x:{ n: 2 } } &#x5373;: a = { n: 2 } b = { n: 1 , x:{ n: 2 } }"},"operators/function.html":{"title":"","path":"\\javascript\\operators\\function.html","body":"函數表達式 函數表達式（function expression）非常類似於函數聲明（function statement）（詳情查看函數聲明），並且兩者擁有幾乎相同的語法。函數表達式與函數聲明的最主要區別是函數名稱（function name），在函數表達式中可省略它，從而創建匿名函數（anonymous functions）。 1 2 3 4 5 6 // 函數聲明 function name ( [param[, param[, ... param]]] )  statements  // 函數表達式 var myFunction = function name ( [param[, param[, ... param]]] )  statements  // 函數表達式 匿名函數 var myFunction = function ( [param[, param[, ... param]]] )  statements  1 2 3 ( function ( )  debugger )() 函數表達式提升 (Function expression hoisting) JavaScript中的函數表達式沒有提升,不像函數聲明,你在定義函數表達式之前不能使用函數表達式: 1 2 3 4 5 notHoisted(); // TypeError: notHoisted is not a function var notHoisted = function ( )  console .log( 'bar' ); ;"},"operators/function.html#函數表達式":{"title":"&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;","path":"\\javascript\\operators\\function.html#函數表達式","body":"&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#xFF08;function expression&#xFF09;&#x975E;&#x5E38;&#x985E;&#x4F3C;&#x65BC;&#x51FD;&#x6578;&#x8072;&#x660E;&#xFF08;function statement&#xFF09;&#xFF08;&#x8A73;&#x60C5;&#x67E5;&#x770B;&#x51FD;&#x6578;&#x8072;&#x660E;&#xFF09;&#xFF0C;&#x4E26;&#x4E14;&#x5169;&#x8005;&#x64C1;&#x6709;&#x5E7E;&#x4E4E;&#x76F8;&#x540C;&#x7684;&#x8A9E;&#x6CD5;&#x3002;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x8207;&#x51FD;&#x6578;&#x8072;&#x660E;&#x7684;&#x6700;&#x4E3B;&#x8981;&#x5340;&#x5225;&#x662F;&#x51FD;&#x6578;&#x540D;&#x7A31;&#xFF08;function name&#xFF09;&#xFF0C;&#x5728;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x4E2D;&#x53EF;&#x7701;&#x7565;&#x5B83;&#xFF0C;&#x5F9E;&#x800C;&#x5275;&#x5EFA;&#x533F;&#x540D;&#x51FD;&#x6578;&#xFF08;anonymous functions&#xFF09;&#x3002; 1 2 3 4 5 6 // &#x51FD;&#x6578;&#x8072;&#x660E; function name ( [param[, param[, ... param]]] ) { statements } // &#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F; var myFunction = function name ( [param[, param[, ... param]]] ) { statements } // &#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F; &#x533F;&#x540D;&#x51FD;&#x6578; var myFunction = function ( [param[, param[, ... param]]] ) { statements } 1 2 3 ( function ( ) { debugger })() &#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x63D0;&#x5347; (Function expression hoisting) JavaScript&#x4E2D;&#x7684;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x6C92;&#x6709;&#x63D0;&#x5347;,&#x4E0D;&#x50CF;&#x51FD;&#x6578;&#x8072;&#x660E;,&#x4F60;&#x5728;&#x5B9A;&#x7FA9;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x4E4B;&#x524D;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;: 1 2 3 4 5 notHoisted(); // TypeError: notHoisted is not a function var notHoisted = function ( ) { console .log( &apos;bar&apos; ); };"},"operators/typeof.html":{"title":"","path":"\\javascript\\operators\\typeof.html","body":"typeof 1 2 3 4 5 var f = function g ( )  return 123  typeof g(); // Uncaught ReferenceError: g is not defined typeof f; // \"function\" g() 不能變動 變量 f function_expression 可以重新賦值 g() 只能在函數內使用 外部無法存取 1 2 3 4 5 // g() 函數聲明 function g ( )  return 123  typeof g(); // \"number\" ref 函數 null [typeof null, null instanceof Object] // [“object”, false] js 萬物即對象 但null不是Object new出來的 ref: instanceof Object.prototype.name = 1 ; 1.0.name; // 1 1是整型 1.0 變對象 1.name; // Uncaught SyntaxError: Invalid or unexpected token js沒有整型只有對象 Function.name; // “Function”"},"operators/typeof.html#typeof":{"title":"typeof","path":"\\javascript\\operators\\typeof.html#typeof","body":"1 2 3 4 5 var f = function g ( ) { return 123 } typeof g(); // Uncaught ReferenceError: g is not defined typeof f; // function g() &#x4E0D;&#x80FD;&#x8B8A;&#x52D5; &#x8B8A;&#x91CF; f function_expression &#x53EF;&#x4EE5;&#x91CD;&#x65B0;&#x8CE6;&#x503C; g() &#x53EA;&#x80FD;&#x5728;&#x51FD;&#x6578;&#x5167;&#x4F7F;&#x7528; &#x5916;&#x90E8;&#x7121;&#x6CD5;&#x5B58;&#x53D6; 1 2 3 4 5 // g() &#x51FD;&#x6578;&#x8072;&#x660E; function g ( ) { return 123 } typeof g(); // number ref &#x51FD;&#x6578;"},"operators/typeof.html#null":{"title":"null","path":"\\javascript\\operators\\typeof.html#null","body":"[typeof null, null instanceof Object] // [&#x201C;object&#x201D;, false] js &#x842C;&#x7269;&#x5373;&#x5C0D;&#x8C61; &#x4F46;null&#x4E0D;&#x662F;Object new&#x51FA;&#x4F86;&#x7684; ref: instanceof Object.prototype.name = 1 ; 1.0.name; // 1 1&#x662F;&#x6574;&#x578B; 1.0 &#x8B8A;&#x5C0D;&#x8C61; 1.name; // Uncaught SyntaxError: Invalid or unexpected token js&#x6C92;&#x6709;&#x6574;&#x578B;&#x53EA;&#x6709;&#x5C0D;&#x8C61; Function.name; // &#x201C;Function&#x201D;"},"statements/AsyncFunction.html":{"title":"AsyncFunction","path":"\\javascript\\statements\\AsyncFunction.html","body":"async function 宣告被定義為一個回傳 AsyncFunction 物件的非同步函式 。 同一個步道(同步 接力賽跑 等) vs 不同步道(非同步 賽跑) 1 2 3 4 5 6 7 8 let a = 0 let fn = async () =  a = a + await 10 ; console .log( '異步' ) console .log(a)  fn() console .log(++a) babeljs 1 ‘異步’ 10 a = await 10 + a; 1 ‘異步’ 11"},"swagger/to-html.html":{"title":"swagger - to HTML","path":"\\javascript\\swagger\\to-html.html","body":"Swagger to HTML Download Schema Swagger Petstore Version: 1.0.0 List all pets GET /pets Request Sample Request Path limit integer (int32) Used in query How many items to return at one time (max 100) curl -v -X GET http://petstore.swagger.io/v1/pets Copy Request Response Sample Response Status Code: 200 An paged array of pets Reference [] [].id integer (int64) required [].name string required [].tag string This is a default response for the request. unexpected error Reference code integer (int32) required message string required Create a pet POST /pets Request Sample Request curl -v -X POST http://petstore.swagger.io/v1/pets Copy Request Response Sample Response Status Code: 201 Null response Reference This is a default response for the request. unexpected error Reference code integer (int32) required message string required Info for a specific pet GET /pets/{petId} Request Sample Request Path petId string required Used in path The id of the pet to retrieve curl -v -X GET http://petstore.swagger.io/v1/pets/{petId} Copy Request Response Sample Response Status Code: 200 Expected response to a valid request Reference [] [].id integer (int64) required [].name string required [].tag string This is a default response for the request. unexpected error Reference code integer (int32) required message string required"},"swagger/to-html.html#Swagger-to-HTML":{"title":"Swagger to HTML","path":"\\javascript\\swagger\\to-html.html#Swagger-to-HTML","body":"Download Schema Swagger Petstore Version: 1.0.0 List all pets GET /pets Request Sample Request Path limit integer (int32) Used in query How many items to return at one time (max 100) curl -v -X GET http://petstore.swagger.io/v1/pets Copy Request Response Sample Response Status Code: 200 An paged array of pets Reference [] [].id integer (int64) required [].name string required [].tag string This is a default response for the request. unexpected error Reference code integer (int32) required message string required Create a pet POST /pets Request Sample Request curl -v -X POST http://petstore.swagger.io/v1/pets Copy Request Response Sample Response Status Code: 201 Null response Reference This is a default response for the request. unexpected error Reference code integer (int32) required message string required Info for a specific pet GET /pets/{petId} Request Sample Request Path petId string required Used in path The id of the pet to retrieve curl -v -X GET http://petstore.swagger.io/v1/pets/{petId} Copy Request Response Sample Response Status Code: 200 Expected response to a valid request Reference [] [].id integer (int64) required [].name string required [].tag string This is a default response for the request. unexpected error Reference code integer (int32) required message string required"},"swagger/to-html.html#undefined":{"title":"Swagger Petstore","path":"\\javascript\\swagger\\to-html.html#undefined","body":"Version: 1.0.0"},"swagger/to-html.html#List-all-pets":{"title":"List all pets","path":"\\javascript\\swagger\\to-html.html#List-all-pets","body":"GET /pets"},"swagger/to-html.html#Create-a-pet":{"title":"Create a pet","path":"\\javascript\\swagger\\to-html.html#Create-a-pet","body":"POST /pets"},"swagger/to-html.html#Info-for-a-specific-pet":{"title":"Info for a specific pet","path":"\\javascript\\swagger\\to-html.html#Info-for-a-specific-pet","body":"GET /pets/{petId}"},"statements/block.html":{"title":"區塊","path":"\\javascript\\statements\\block.html","body":"區塊陳述用來組合零個或多個陳述。我們使用一對大括號 { } 以界定區塊。 var 1 2 3 4 5 var x = 1 ;  var x = 2 ;  alert(x); // outputs 2 let 和 const 1 2 3 4 5 let x = 1 ;  let x = 2 ;  console .log(x); // logs 1 function 1 2 3 4 5 6 7 8 9 10 11 function foo ( )   var a = 'var' ;  let a = 'let' ; console .log(a); // let   console .log(a); // var  foo(); 1 2 3 4 5 6 7  debugger function test ( )  test = 123 console .log( 'inner:' ,test) // inner: 123  console .log( 'outer:' ,test) // outer: ƒ test() 塊會限制函數的提升 有条件的创建函数 函数可以被有条件来声明 ，这意味着，函数声明可能出现在一个 if 语句里，但是，这种声明方式在不同的浏览器里可能有不同的效果。因此，不应该在生成环境代码中使用这种声明方式，应该使用函数表达式来代替。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 var hoisted = \"foo\" in this ; console .log( `'foo' name $hoisted ? \"is\" : \"is not\"  hoisted. typeof foo is $ typeof foo ` ); if ( false )  function foo ( )  return 1 ;   // 在Chrome里: // 'foo' 变量名被提升，但是 typeof foo 为 undefined // // 在Firefox里: // 'foo' 变量名被提升. 但是 typeof foo 为 undefined // // 在Edge里: // 'foo' 变量名未被提升. 而且 typeof foo 为 undefined // // 在Safari里: // 'foo' 变量名被提升. 而且 typeof foo 为 function var 不會產生塊級作用域, let 會產生塊級作用域。 1 2 3 4 5 6 if ( false ) var a = 1 ; let b = 2 ;  console .log(a); console .log(b); 代碼相當於: 1 2 3 4 5 6 7 var a; if ( false ) a = 1 ; let b = 2 ;  console .log(a); // undefined console .log(b); // ReferenceError: b is not defined"},"statements/let.html":{"title":"","path":"\\javascript\\statements\\let.html","body":"let let 用於宣告一個「只作用在當前區塊的變數」，初始值可選擇性的設定。 1 2 3 4 5 var a = 1 ; if ( true ) console .log(a); let a = 2 ;  ReferenceError: Cannot access ‘a’ before initialization let 聲明的變量不會提升,並且會產生暫存死區。在 let 聲明變量之前訪問變量會拋出錯誤。"},"statements/let.html#let":{"title":"let","path":"\\javascript\\statements\\let.html#let","body":"let &#x7528;&#x65BC;&#x5BA3;&#x544A;&#x4E00;&#x500B;&#x300C;&#x53EA;&#x4F5C;&#x7528;&#x5728;&#x7576;&#x524D;&#x5340;&#x584A;&#x7684;&#x8B8A;&#x6578;&#x300D;&#xFF0C;&#x521D;&#x59CB;&#x503C;&#x53EF;&#x9078;&#x64C7;&#x6027;&#x7684;&#x8A2D;&#x5B9A;&#x3002; 1 2 3 4 5 var a = 1 ; if ( true ){ console .log(a); let a = 2 ; } ReferenceError: Cannot access &#x2018;a&#x2019; before initialization let &#x8072;&#x660E;&#x7684;&#x8B8A;&#x91CF;&#x4E0D;&#x6703;&#x63D0;&#x5347;,&#x4E26;&#x4E14;&#x6703;&#x7522;&#x751F;&#x66AB;&#x5B58;&#x6B7B;&#x5340;&#x3002;&#x5728; let &#x8072;&#x660E;&#x8B8A;&#x91CF;&#x4E4B;&#x524D;&#x8A2A;&#x554F;&#x8B8A;&#x91CF;&#x6703;&#x62CB;&#x51FA;&#x932F;&#x8AA4;&#x3002;"},"statements/for.html":{"title":"","path":"\\javascript\\statements\\for.html","body":"for…of與for…in的差別 For…Of for…in 提示： for...in 不应该用于迭代一个 Array，其中 索引顺序 很重要。 在迭代 物件屬性 時，使用 for...in ；在迭代 陣列 時，使用 for...of 。 for...in 輸出的是屬 性名稱(key) ， for...of 輸出的是 值(value) for...of 是 ES6 的新語法。修復了ES5 for…in 的不足 for...of 不能迭代物件，需要透過和 Object.keys() 搭配使用 單純迭代陣列的話，for…in 輸出的是屬性名稱(key)，for…of 輸出的是值(value) 1 2 3 4 5 6 7 8 9 10 11 let iterable = [ 3 , 5 , 7 ]; // 回傳「key」 for ( let i in iterable)  console .log(i); // \"0\", \"1\", \"2\"  // 回傳「value」 for ( let i of iterable)  console .log(i); // 3, 5, 7  在原本的陣列，新增一個屬性 foo，可看到 for…in 有將此屬性 foo 也輸出。 1 2 3 4 5 6 7 8 9 10 11 12 let iterable = [ 3 , 5 , 7 ]; iterable.foo = 'hello' ; //新增foo屬性名稱 // 回傳「key」，且會讀取到陣列新增的屬性名稱 for ( let i in iterable)  console .log(i); // \"0\", \"1\", \"2\", \"foo\"  // 回傳「value」 for ( let i of iterable)  console .log(i); // 3, 5, 7 "},"statements/for.html#for…of與for…in的差別":{"title":"for&#x2026;of&#x8207;for&#x2026;in&#x7684;&#x5DEE;&#x5225;","path":"\\javascript\\statements\\for.html#for…of與for…in的差別","body":"For&#x2026;Of for&#x2026;in &#x63D0;&#x793A;&#xFF1A; for...in &#x4E0D;&#x5E94;&#x8BE5;&#x7528;&#x4E8E;&#x8FED;&#x4EE3;&#x4E00;&#x4E2A; Array&#xFF0C;&#x5176;&#x4E2D; &#x7D22;&#x5F15;&#x987A;&#x5E8F; &#x5F88;&#x91CD;&#x8981;&#x3002; &#x5728;&#x8FED;&#x4EE3; &#x7269;&#x4EF6;&#x5C6C;&#x6027; &#x6642;&#xFF0C;&#x4F7F;&#x7528; for...in &#xFF1B;&#x5728;&#x8FED;&#x4EE3; &#x9663;&#x5217; &#x6642;&#xFF0C;&#x4F7F;&#x7528; for...of &#x3002; for...in &#x8F38;&#x51FA;&#x7684;&#x662F;&#x5C6C; &#x6027;&#x540D;&#x7A31;(key) &#xFF0C; for...of &#x8F38;&#x51FA;&#x7684;&#x662F; &#x503C;(value) for...of &#x662F; ES6 &#x7684;&#x65B0;&#x8A9E;&#x6CD5;&#x3002;&#x4FEE;&#x5FA9;&#x4E86;ES5 for&#x2026;in &#x7684;&#x4E0D;&#x8DB3; for...of &#x4E0D;&#x80FD;&#x8FED;&#x4EE3;&#x7269;&#x4EF6;&#xFF0C;&#x9700;&#x8981;&#x900F;&#x904E;&#x548C; Object.keys() &#x642D;&#x914D;&#x4F7F;&#x7528; &#x55AE;&#x7D14;&#x8FED;&#x4EE3;&#x9663;&#x5217;&#x7684;&#x8A71;&#xFF0C;for&#x2026;in &#x8F38;&#x51FA;&#x7684;&#x662F;&#x5C6C;&#x6027;&#x540D;&#x7A31;(key)&#xFF0C;for&#x2026;of &#x8F38;&#x51FA;&#x7684;&#x662F;&#x503C;(value) 1 2 3 4 5 6 7 8 9 10 11 let iterable = [ 3 , 5 , 7 ]; // &#x56DE;&#x50B3;&#x300C;key&#x300D; for ( let i in iterable) { console .log(i); // 0, 1, 2 } // &#x56DE;&#x50B3;&#x300C;value&#x300D; for ( let i of iterable) { console .log(i); // 3, 5, 7 } &#x5728;&#x539F;&#x672C;&#x7684;&#x9663;&#x5217;&#xFF0C;&#x65B0;&#x589E;&#x4E00;&#x500B;&#x5C6C;&#x6027; foo&#xFF0C;&#x53EF;&#x770B;&#x5230; for&#x2026;in &#x6709;&#x5C07;&#x6B64;&#x5C6C;&#x6027; foo &#x4E5F;&#x8F38;&#x51FA;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 let iterable = [ 3 , 5 , 7 ]; iterable.foo = &apos;hello&apos; ; //&#x65B0;&#x589E;foo&#x5C6C;&#x6027;&#x540D;&#x7A31; // &#x56DE;&#x50B3;&#x300C;key&#x300D;&#xFF0C;&#x4E14;&#x6703;&#x8B80;&#x53D6;&#x5230;&#x9663;&#x5217;&#x65B0;&#x589E;&#x7684;&#x5C6C;&#x6027;&#x540D;&#x7A31; for ( let i in iterable) { console .log(i); // 0, 1, 2, foo } // &#x56DE;&#x50B3;&#x300C;value&#x300D; for ( let i of iterable) { console .log(i); // 3, 5, 7 }"},"swagger/ui.html":{"title":"swagger - UI","path":"\\javascript\\swagger\\ui.html","body":"Swagger UI angular .module('swagger-module-1', ['ngSanitize', 'swaggerUi']) .config([ '$provide', '$locationProvider', function($provide, $locationProvider) { $provide.decorator('$anchorScroll', [ '$delegate', function anchorScrollDecorator($delegate){ return function () { /* Just not doing anything to prevent $anchorScrool default behaviour */} } ]); $locationProvider.hashPrefix(''); } ]); angular.bootstrap(document.getElementById('swagger-wrap-1'), ['swagger-module-1'])"},"swagger/ui.html#Swagger-UI":{"title":"Swagger UI","path":"\\javascript\\swagger\\ui.html#Swagger-UI","body":"angular .module('swagger-module-1', ['ngSanitize', 'swaggerUi']) .config([ '$provide', '$locationProvider', function($provide, $locationProvider) { $provide.decorator('$anchorScroll', [ '$delegate', function anchorScrollDecorator($delegate){ return function () { /* Just not doing anything to prevent $anchorScrool default behaviour */} } ]); $locationProvider.hashPrefix(''); } ]); angular.bootstrap(document.getElementById('swagger-wrap-1'), ['swagger-module-1'])"},"string/queue.html":{"title":"隊列（Queue）","path":"\\javascript\\string\\queue.html","body":"數據結構：隊列（Queue） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 function Queue ( )  let items = [] this .enqueue = function ( e )  items.push(e) // 進隊  this .dequeue = function ( )  return items.shift() // 出隊  this .isEmpty = function ( )  return items.length === 0 // 是否是空隊  this .front = function ( )  return items[ 0 ] // 獲取隊頭元素  this .clear = function ( )  items = [] // 清空隊  this .size = function ( )  return items.length // 獲取隊列長度   查找：從對頭開始查找，從時間複雜度為 O(n) 插入或刪除：進棧與出棧的時間複雜度為 O(1) 時間複雜度 如果演算法中包含巢狀的迴圈，則基本語句通常是最內層的迴圈體，如果演算法中包含並列的迴圈，則將並列迴圈的時間複雜度相加。例如： for (i=1; i=n; i++)　　x++; for (i=1; i=n; i++)　　for (j=1; j=n; j++)　　x++; 第一個for迴圈的時間複雜度為 O(n) ，第二個for迴圈的時間複雜度為O(n2)， 則整個演算法的時間複雜度為O(n+n2)=O(n2)。 Ο(1) 表示基本語句的執行次數是一個常數，一般來說，只要演算法中不存在迴圈語句，其時間複雜度就是O(1) 常見的演算法時間複雜度由小到大依次為： O(1)＜O(log2n)＜O(n)＜O(nlog2n)＜O(n2)＜O(n3)＜…＜O(2n)＜O(n!) O(log2n)、O(n)、O(nlog2n)、O(n2)和O(n3)稱為 多項式時間 O(2n)和O(n!)稱為 指數時間 雙端隊列（Deque） Deque 在原有隊列的基礎上擴充了：隊頭、隊尾都可以進隊出隊 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 function Deque ( )  let items = [] this .addFirst = function ( e )  items.unshift(e)  this .removeFirst = function ( )  return items.shift()  this .addLast = function ( e )  items.push(e)  this .removeLast = function ( )  return items.pop()   經典的雙端隊列問題：翻轉字符串裡的單詞 輸入: “a good example” 輸出: “example good a” 解釋: 如果兩個單詞間有多餘的空格，將反轉後單詞間的空格減少到只含一個。 說明： 無空格字符構成一個單詞。 輸入字符串可以在前面或者後面包含多餘的空格，但是反轉後的字符不能包括。 如果兩個單詞間有多餘的空格，將反轉後單詞間的空格減少到只含一個。 解題思路：使用雙端隊列解題 首先去除字符串左右空格 逐個讀取字符串中的每個單詞，依次放入雙端隊列的對頭 再將隊列轉換成字符串輸出（已空格為分隔符） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 var reverseWords = function ( s )  let left = 0 let right = s.length - 1 let queue = [] let word = '' while (s.charAt(left) === ' ' ) left ++ while (s.charAt(right) === ' ' ) right -- while (left = right)  let char = s.charAt(left) if (char === ' ' &amp;&amp; word)  queue.unshift(word) word = ''  else if (char !== ' ' ) word += char  left++  console .log(word) // example queue.unshift(word) console .log(queue) // [\"example\", \"good\", \"a\"] return queue.join( ' ' ) ; const ans = reverseWords( \"a good example\" ) console .log(ans) // \"example good a\" 正则 + JS API 1 2 3 var reverseWords = function ( s )  return s.trim().replace( /\\s+/g , ' ' ).split( ' ' ).reverse().join( ' ' ) ; References 前端进阶算法：一看就懂的队列及配套算法题"},"string/queue.html#數據結構：隊列（Queue）":{"title":"&#x6578;&#x64DA;&#x7D50;&#x69CB;&#xFF1A;&#x968A;&#x5217;&#xFF08;Queue&#xFF09;","path":"\\javascript\\string\\queue.html#數據結構：隊列（Queue）","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 function Queue ( ) { let items = [] this .enqueue = function ( e ) { items.push(e) // &#x9032;&#x968A; } this .dequeue = function ( ) { return items.shift() // &#x51FA;&#x968A; } this .isEmpty = function ( ) { return items.length === 0 // &#x662F;&#x5426;&#x662F;&#x7A7A;&#x968A; } this .front = function ( ) { return items[ 0 ] // &#x7372;&#x53D6;&#x968A;&#x982D;&#x5143;&#x7D20; } this .clear = function ( ) { items = [] // &#x6E05;&#x7A7A;&#x968A; } this .size = function ( ) { return items.length // &#x7372;&#x53D6;&#x968A;&#x5217;&#x9577;&#x5EA6; } } &#x67E5;&#x627E;&#xFF1A;&#x5F9E;&#x5C0D;&#x982D;&#x958B;&#x59CB;&#x67E5;&#x627E;&#xFF0C;&#x5F9E;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x70BA; O(n) &#x63D2;&#x5165;&#x6216;&#x522A;&#x9664;&#xFF1A;&#x9032;&#x68E7;&#x8207;&#x51FA;&#x68E7;&#x7684;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x70BA; O(1)"},"string/queue.html#時間複雜度":{"title":"&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;","path":"\\javascript\\string\\queue.html#時間複雜度","body":"&#x5982;&#x679C;&#x6F14;&#x7B97;&#x6CD5;&#x4E2D;&#x5305;&#x542B;&#x5DE2;&#x72C0;&#x7684;&#x8FF4;&#x5708;&#xFF0C;&#x5247;&#x57FA;&#x672C;&#x8A9E;&#x53E5;&#x901A;&#x5E38;&#x662F;&#x6700;&#x5167;&#x5C64;&#x7684;&#x8FF4;&#x5708;&#x9AD4;&#xFF0C;&#x5982;&#x679C;&#x6F14;&#x7B97;&#x6CD5;&#x4E2D;&#x5305;&#x542B;&#x4E26;&#x5217;&#x7684;&#x8FF4;&#x5708;&#xFF0C;&#x5247;&#x5C07;&#x4E26;&#x5217;&#x8FF4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x76F8;&#x52A0;&#x3002;&#x4F8B;&#x5982;&#xFF1A; for (i=1; i=n; i++)&#x3000;&#x3000;x++; for (i=1; i=n; i++)&#x3000;&#x3000;for (j=1; j=n; j++)&#x3000;&#x3000;x++; &#x7B2C;&#x4E00;&#x500B;for&#x8FF4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x70BA; O(n) &#xFF0C;&#x7B2C;&#x4E8C;&#x500B;for&#x8FF4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x70BA;O(n2)&#xFF0C; &#x5247;&#x6574;&#x500B;&#x6F14;&#x7B97;&#x6CD5;&#x7684;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x70BA;O(n+n2)=O(n2)&#x3002; &#x39F;(1) &#x8868;&#x793A;&#x57FA;&#x672C;&#x8A9E;&#x53E5;&#x7684;&#x57F7;&#x884C;&#x6B21;&#x6578;&#x662F;&#x4E00;&#x500B;&#x5E38;&#x6578;&#xFF0C;&#x4E00;&#x822C;&#x4F86;&#x8AAA;&#xFF0C;&#x53EA;&#x8981;&#x6F14;&#x7B97;&#x6CD5;&#x4E2D;&#x4E0D;&#x5B58;&#x5728;&#x8FF4;&#x5708;&#x8A9E;&#x53E5;&#xFF0C;&#x5176;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x5C31;&#x662F;O(1) &#x5E38;&#x898B;&#x7684;&#x6F14;&#x7B97;&#x6CD5;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x7531;&#x5C0F;&#x5230;&#x5927;&#x4F9D;&#x6B21;&#x70BA;&#xFF1A; O(1)&#xFF1C;O(log2n)&#xFF1C;O(n)&#xFF1C;O(nlog2n)&#xFF1C;O(n2)&#xFF1C;O(n3)&#xFF1C;&#x2026;&#xFF1C;O(2n)&#xFF1C;O(n!) O(log2n)&#x3001;O(n)&#x3001;O(nlog2n)&#x3001;O(n2)&#x548C;O(n3)&#x7A31;&#x70BA; &#x591A;&#x9805;&#x5F0F;&#x6642;&#x9593; O(2n)&#x548C;O(n!)&#x7A31;&#x70BA; &#x6307;&#x6578;&#x6642;&#x9593; &#x96D9;&#x7AEF;&#x968A;&#x5217;&#xFF08;Deque&#xFF09; Deque &#x5728;&#x539F;&#x6709;&#x968A;&#x5217;&#x7684;&#x57FA;&#x790E;&#x4E0A;&#x64F4;&#x5145;&#x4E86;&#xFF1A;&#x968A;&#x982D;&#x3001;&#x968A;&#x5C3E;&#x90FD;&#x53EF;&#x4EE5;&#x9032;&#x968A;&#x51FA;&#x968A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 function Deque ( ) { let items = [] this .addFirst = function ( e ) { items.unshift(e) } this .removeFirst = function ( ) { return items.shift() } this .addLast = function ( e ) { items.push(e) } this .removeLast = function ( ) { return items.pop() } }"},"string/queue.html#雙端隊列（Deque）":{"title":"&#x96D9;&#x7AEF;&#x968A;&#x5217;&#xFF08;Deque&#xFF09;","path":"\\javascript\\string\\queue.html#雙端隊列（Deque）","body":"Deque &#x5728;&#x539F;&#x6709;&#x968A;&#x5217;&#x7684;&#x57FA;&#x790E;&#x4E0A;&#x64F4;&#x5145;&#x4E86;&#xFF1A;&#x968A;&#x982D;&#x3001;&#x968A;&#x5C3E;&#x90FD;&#x53EF;&#x4EE5;&#x9032;&#x968A;&#x51FA;&#x968A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 function Deque ( ) { let items = [] this .addFirst = function ( e ) { items.unshift(e) } this .removeFirst = function ( ) { return items.shift() } this .addLast = function ( e ) { items.push(e) } this .removeLast = function ( ) { return items.pop() } }"},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{"title":"&#x7D93;&#x5178;&#x7684;&#x96D9;&#x7AEF;&#x968A;&#x5217;&#x554F;&#x984C;&#xFF1A;&#x7FFB;&#x8F49;&#x5B57;&#x7B26;&#x4E32;&#x88E1;&#x7684;&#x55AE;&#x8A5E;","path":"\\javascript\\string\\queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞","body":"&#x8F38;&#x5165;: &#x201C;a good example&#x201D; &#x8F38;&#x51FA;: &#x201C;example good a&#x201D; &#x89E3;&#x91CB;: &#x5982;&#x679C;&#x5169;&#x500B;&#x55AE;&#x8A5E;&#x9593;&#x6709;&#x591A;&#x9918;&#x7684;&#x7A7A;&#x683C;&#xFF0C;&#x5C07;&#x53CD;&#x8F49;&#x5F8C;&#x55AE;&#x8A5E;&#x9593;&#x7684;&#x7A7A;&#x683C;&#x6E1B;&#x5C11;&#x5230;&#x53EA;&#x542B;&#x4E00;&#x500B;&#x3002; &#x8AAA;&#x660E;&#xFF1A; &#x7121;&#x7A7A;&#x683C;&#x5B57;&#x7B26;&#x69CB;&#x6210;&#x4E00;&#x500B;&#x55AE;&#x8A5E;&#x3002; &#x8F38;&#x5165;&#x5B57;&#x7B26;&#x4E32;&#x53EF;&#x4EE5;&#x5728;&#x524D;&#x9762;&#x6216;&#x8005;&#x5F8C;&#x9762;&#x5305;&#x542B;&#x591A;&#x9918;&#x7684;&#x7A7A;&#x683C;&#xFF0C;&#x4F46;&#x662F;&#x53CD;&#x8F49;&#x5F8C;&#x7684;&#x5B57;&#x7B26;&#x4E0D;&#x80FD;&#x5305;&#x62EC;&#x3002; &#x5982;&#x679C;&#x5169;&#x500B;&#x55AE;&#x8A5E;&#x9593;&#x6709;&#x591A;&#x9918;&#x7684;&#x7A7A;&#x683C;&#xFF0C;&#x5C07;&#x53CD;&#x8F49;&#x5F8C;&#x55AE;&#x8A5E;&#x9593;&#x7684;&#x7A7A;&#x683C;&#x6E1B;&#x5C11;&#x5230;&#x53EA;&#x542B;&#x4E00;&#x500B;&#x3002; &#x89E3;&#x984C;&#x601D;&#x8DEF;&#xFF1A;&#x4F7F;&#x7528;&#x96D9;&#x7AEF;&#x968A;&#x5217;&#x89E3;&#x984C; &#x9996;&#x5148;&#x53BB;&#x9664;&#x5B57;&#x7B26;&#x4E32;&#x5DE6;&#x53F3;&#x7A7A;&#x683C; &#x9010;&#x500B;&#x8B80;&#x53D6;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;&#x6BCF;&#x500B;&#x55AE;&#x8A5E;&#xFF0C;&#x4F9D;&#x6B21;&#x653E;&#x5165;&#x96D9;&#x7AEF;&#x968A;&#x5217;&#x7684;&#x5C0D;&#x982D; &#x518D;&#x5C07;&#x968A;&#x5217;&#x8F49;&#x63DB;&#x6210;&#x5B57;&#x7B26;&#x4E32;&#x8F38;&#x51FA;&#xFF08;&#x5DF2;&#x7A7A;&#x683C;&#x70BA;&#x5206;&#x9694;&#x7B26;&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 var reverseWords = function ( s ) { let left = 0 let right = s.length - 1 let queue = [] let word = &apos;&apos; while (s.charAt(left) === &apos; &apos; ) left ++ while (s.charAt(right) === &apos; &apos; ) right -- while (left = right) { let char = s.charAt(left) if (char === &apos; &apos; &amp;&amp; word) { queue.unshift(word) word = &apos;&apos; } else if (char !== &apos; &apos; ){ word += char } left++ } console .log(word) // example queue.unshift(word) console .log(queue) // [example, good, a] return queue.join( &apos; &apos; ) }; const ans = reverseWords( a good example ) console .log(ans) // example good a &#x6B63;&#x5219; + JS API 1 2 3 var reverseWords = function ( s ) { return s.trim().replace( /\\s+/g , &apos; &apos; ).split( &apos; &apos; ).reverse().join( &apos; &apos; ) };"},"string/queue.html#References":{"title":"References","path":"\\javascript\\string\\queue.html#References","body":"&#x524D;&#x7AEF;&#x8FDB;&#x9636;&#x7B97;&#x6CD5;&#xFF1A;&#x4E00;&#x770B;&#x5C31;&#x61C2;&#x7684;&#x961F;&#x5217;&#x53CA;&#x914D;&#x5957;&#x7B97;&#x6CD5;&#x9898;"}}}