{"index":{"version":"2.1.0","fields":["title","body"],"fieldVectors":[["title/RegExp.html",[0,0.015,1,4.152]],["body/RegExp.html",[0,0.038,2,6.02,3,6.02,4,0.368,5,0.302,6,0.929,7,6.02,8,1.592,9,6.02,10,6.02,11,6.02,12,6.02,13,0.345,14,6.02,15,8.335,16,6.02,17,6.02,18,0.739,19,7.724,20,6.02,21,1.582,22,6.02,23,1.91,24,5.412,25,1.047,26,7.724,27,7.724,28,7.724,29,5.186,30,7.724,31,8.529,32,7.724,33,7.724,34,2.867,35,1.939,36,6.02,37,6.02,38,4.423,39,5.392,40,0.323,41,1.979,42,5.392,43,7.64,44,7.64,45,6.919,46,5.392,47,4.042,48,3.414,49,4.978,50,5.392,51,4.978]],["title/RegExp.html#match",[38,4.065]],["body/RegExp.html#match",[0,0.037,4,0.306,5,0.286,8,1.323,13,0.334,18,0.648,39,6.7,40,0.402,41,2.18,42,6.7,43,7.909,44,7.909,45,7.909,46,6.7,47,5.022,48,4.242,49,6.186,50,6.7,51,6.186,52,7.48,53,7.48,54,7.48,55,4.124]],["title/RESTfulAPI.html",[56,2.909,57,2.503]],["body/RESTfulAPI.html",[0,0.038,4,0.26,5,0.206,56,5.602,57,5.975,58,5.694,59,4.671,60,5.694,61,6.357,62,6.357,63,6.357,64,6.357,65,6.357,66,7.162,67,6.403,68,5.694,69,5.694,70,5.694,71,5.694,72,6.357,73,6.357,74,7.996,75,6.357,76,6.357,77,6.357,78,7.162,79,6.203,80,6.357,81,5.694,82,5.694,83,5.257,84,5.694,85,7.162,86,5.694,87,5.694,88,2.582,89,5.694,90,5.694,91,1.22,92,7.162,93,5.694,94,5.694,95,4.671,96,5.694,97,5.694,98,5.694]],["title/RESTfulAPI.html#動詞",[99,4.956]],["body/RESTfulAPI.html#動詞",[0,0.031,56,5.186,59,4.324,60,6.63,66,7.86,67,6.041,68,6.63,69,6.63,70,6.63,71,6.63,99,6.63,100,7.402,101,7.402,102,7.402,103,7.402,104,7.402,105,7.402,106,7.402,107,7.402,108,7.402,109,7.402,110,7.402,111,7.402,112,7.402,113,7.402,114,7.402,115,7.402,116,7.402,117,7.402,118,7.402,119,5.186,120,7.402,121,7.402,122,7.402,123,6.63,124,7.402,125,7.402]],["title/RESTfulAPI.html#狀態碼",[126,5.533]],["body/RESTfulAPI.html#狀態碼",[4,0.303,5,0.24,57,5.952,59,4.324,78,7.86,79,6.807,81,6.63,82,6.63,83,6.121,84,6.63,85,6.63,86,6.63,87,6.63,127,7.402,128,7.402,129,7.402,130,7.402,131,7.402,132,7.402,133,7.402,134,7.402,135,7.402,136,7.402,137,7.402,138,7.402,139,7.402,140,7.402,141,7.402,142,7.402,143,7.402,144,7.402,145,7.402,146,6.121,147,7.402,148,7.402]],["title/RESTfulAPI.html#References",[88,2.247]],["body/RESTfulAPI.html#References",[57,5.528,89,7.152,90,7.152,91,1.533,92,8.216,93,7.152,94,7.152,95,5.867,96,7.152,97,7.152,98,7.152]],["title/ajax.html",[149,4.065]],["body/ajax.html",[0,0.038,4,0.366,5,0.307,6,0.921,8,1.438,13,0.4,18,0.822,23,1.3,25,1.038,40,0.47,48,2.324,57,2.47,59,3.468,67,3.835,91,1.34,149,3.011,150,0.491,151,0.559,152,0.742,153,0.822,154,0.949,155,1.3,156,4.098,157,2.249,158,3.986,159,4.098,160,4.098,161,1.053,162,4.098,163,4.098,164,2.553,165,4.098,166,4.098,167,1.664,168,4.098,169,3.468,170,2.751,171,2.647,172,4.098,173,1.695,174,4.098,175,1.153,176,1.22,177,0.913,178,0.964,179,1.107,180,1.156,181,1.225,182,1.156,183,1.3,184,5.318,185,4.098,186,4.098,187,4.098,188,4.688,189,5.938,190,4.098,191,2.871,192,3.179,193,4.098,194,4.098,195,4.098,196,5.938,197,4.098,198,4.098,199,4.098,200,2.751,201,4.098,202,3.67,203,4.098,204,4.098,205,4.098,206,4.098,207,4.098,208,4.098,209,4.098,210,4.098,211,4.098,212,4.098,213,4.098,214,4.098,215,4.098,216,4.098,217,4.098,218,3.389,219,5.938,220,4.91,221,4.098,222,4.362,223,4.91,224,4.098,225,6.983,226,4.098,227,4.098,228,4.098,229,4.098,230,5.938,231,4.098,232,4.098,233,5.938,234,4.098,235,4.098,236,5.938,237,3.179,238,4.098,239,4.098,240,4.098,241,4.098,242,4.098,243,3.389,244,3.389,245,4.098,246,3.389,247,4.098,248,3.389,249,1.981,250,3.816,251,4.11,252,3.389,253,4.351,254,2.357,255,2.042,256,2.553,257,3.389]],["title/event.html",[258,4.956]],["body/event.html",[0,0.038,4,0.34,5,0.269,6,0.999,13,0.371,25,0.915,34,3.215,40,0.446,150,0.502,151,0.571,152,0.758,153,0.682,161,0.928,188,4.532,259,6.046,260,7.435,261,8.399,262,8.399,263,7.435,264,6.046,265,6.046,266,6.046,267,3.623,268,4.729,269,6.046,270,6.046,271,7.435,272,6.046,273,6.046,274,6.046]],["title/event.html#代理",[275,5.533]],["body/event.html#代理",[0,0.038,4,0.338,5,0.268,6,0.994,13,0.369,25,0.908,34,3.192,40,0.444,150,0.499,151,0.569,152,0.755,153,0.678,161,0.922,188,4.5,259,6.003,260,7.402,261,7.402,262,8.379,263,7.402,264,6.003,265,6.003,266,6.003,267,3.598,268,4.696,269,6.003,271,6.003,272,6.003,273,6.003,274,6.003,276,6.702,277,6.702,278,6.702,279,6.702,280,6.702,281,6.702,282,6.702,283,6.003,284,6.702,285,6.702,286,3.696]],["title/es6.html",[151,0.286,287,3.719]],["body/es6.html",[0,0.037,4,0.359,5,0.284,13,0.331,151,0.509,222,7.49,287,6.63,288,6.448,289,6.807,290,7.86,291,7.86,292,6.807,293,6.63,294,6.63,295,4.324,296,4.78,297,7.402]],["title/es6.html#Module-的加载实现",[288,3.051,298,4.152]],["body/es6.html#Module-的加载实现",[0,0.034,4,0.362,5,0.287,13,0.335,222,7.507,288,5.51,289,6.86,290,7.922,291,7.922,292,6.86,293,6.718,294,6.718,295,4.381,296,4.844,299,7.5,300,7.5,301,7.5,302,4.844,303,7.5,304,7.5,305,7.5]],["title/arrowFunction.html",[0,0.02]],["body/arrowFunction.html",[0,0.038,4,0.366,5,0.29,13,0.399,18,0.774,21,2.221,23,1.874,25,1.034,40,0.41,41,1.771,150,0.461,151,0.582,152,0.697,153,0.771,154,0.732,161,0.812,249,1.885,306,3.681,307,8.002,308,2.535,309,4.213,310,3.44,311,1.314,312,5.919,313,5.067,314,3.839,315,5.291,316,2.753,317,4.582,318,4.34,319,4.582,320,2.535,321,7.571,322,6.835,323,5.291]],["title/arrowFunction.html#Arrow-Function",[161,0.571,306,2.587]],["body/arrowFunction.html#Arrow-Function",[0,0.038,4,0.364,5,0.289,13,0.398,18,0.772,21,2.212,23,1.858,25,1.029,40,0.408,41,1.761,119,5.318,150,0.459,151,0.579,152,0.693,153,0.767,154,0.726,249,1.88,307,7.977,308,2.521,309,3.783,310,3.429,311,1.307,312,5.887,313,5.051,314,3.827,315,5.247,316,2.73,317,4.544,318,4.304,320,2.521,321,7.541,322,6.798,323,5.247,324,5.858,325,5.858,326,5.858,327,5.858,328,5.858,329,6.798,330,4.845,331,5.858,332,5.858,333,5.858,334,5.858,335,5.858,336,5.858,337,5.858,338,5.858,339,2.73,340,5.858]],["title/closures.html",[341,3.051]],["body/closures.html",[0,0.038,4,0.404,5,0.292,6,1.045,13,0.417,18,0.822,24,3.628,25,1.116,34,2.467,35,1.668,40,0.484,41,1.838,91,1.202,150,0.581,151,0.61,152,0.867,153,0.858,154,1.099,155,1.277,161,1.323,175,1.36,176,1.064,178,1.218,182,0.961,249,1.737,309,1.699,311,1.634,320,1.132,342,4.639,343,3.408,344,2.316,345,3.121,346,1.556,347,4.017,348,5.179,349,6.263,350,3.404,351,6.145,352,6.263,353,6.263,354,6.263,355,6.263,356,3.193,357,3.408,358,4.144,359,3.408,360,7.095,361,5.051,362,2.104,363,3.408,364,3.408,365,5.179,366,3.408,367,3.408,368,3.408,369,1.83,370,3.805,371,6.266,372,2.201,373,2.644,374,2.504,375,4.639,376,4.639,377,3.053,378,3.053,379,3.053,380,3.053,381,3.053,382,3.053,383,3.053,384,3.053,385,1.879,386,3.053,387,3.053,388,3.053]],["title/closures.html#傳多個函數",[389,5.533]],["body/closures.html#傳多個函數",[0,0.038,4,0.392,5,0.286,13,0.42,18,0.722,25,0.778,35,1.849,40,0.475,41,2.051,150,0.554,151,0.608,152,0.762,153,0.757,154,0.712,161,1.293,178,1.762,249,1.211,311,1.618,342,5.141,356,3.805,360,5.141,361,5.597,362,2.258,371,7.467,374,4.217,375,6.708,376,6.708,377,5.141,378,5.141,379,5.141,380,5.141,381,5.141,382,5.141,383,5.141,384,5.141,385,3.165,386,5.141,387,5.141,388,5.141,390,3.725,391,5.739]],["title/asynchronous.html",[392,5.533]],["body/asynchronous.html",[0,0.038,4,0.393,5,0.317,6,0.992,8,1.633,13,0.429,18,0.867,25,1,40,0.502,48,2.153,57,2.288,91,1.283,150,0.601,151,0.587,152,0.72,153,0.797,154,0.829,155,1.134,157,2.657,161,1.285,171,3.626,175,1.104,176,0.78,177,0.846,178,0.893,248,3.139,249,2.073,250,4.846,251,3.963,252,3.139,253,4.163,254,2.425,255,1.892,256,2.366,257,3.139,295,2.217,393,3.4,394,3.927,395,5.029,396,2.931,397,3.963,398,3.796,399,3.4,400,6.612,401,3.796,402,2.288,403,1.986,404,4.344,405,3.796,406,3.796,407,1.412,408,3.796,409,3.139,410,1.412,411,1.849,412,3.4]],["title/asynchronous.html#異步",[413,5.533]],["body/asynchronous.html#異步",[0,0.038,4,0.396,5,0.314,8,1.631,13,0.433,18,0.874,25,1.091,40,0.506,48,3.034,91,1.546,150,0.487,151,0.554,152,0.736,153,0.814,154,0.999,155,1.367,157,2.303,161,1.182,175,1.33,176,1.099,177,1.192,178,1.259,248,4.424,249,2.13,250,4.465,251,4.614,252,4.424,253,5.018,254,2.758,255,2.666,256,3.334,257,4.424,393,4.792,414,5.35]],["title/asynchronous.html#setTimeout",[250,2.758]],["body/asynchronous.html#setTimeout",[0,0.038,4,0.367,5,0.303,6,1.079,8,1.535,13,0.4,18,0.823,25,0.66,40,0.466,57,2.936,150,0.608,151,0.569,152,0.613,153,0.678,157,2.664,161,1.287,171,4.334,249,1.745,250,4.664,394,4.323,395,6.01,396,3.227,397,4.439,399,4.364,400,7.408,402,2.936,403,2.549,404,4.782,407,1.812,411,2.373,412,4.364,415,4.872,416,4.872,417,4.872,418,4.872,419,4.872,420,4.872,421,5.549,422,4.872,423,4.872,424,4.872,425,4.364,426,4.872,427,4.872,428,4.872,429,4.872,430,4.872,431,4.872,432,4.872,433,4.872,434,4.872,435,4.872,436,4.872,437,4.872,438,4.872,439,4.872,440,4.872,441,4.872,442,4.872,443,4.872,444,4.872,445,4.701,446,4.872,447,4.872,448,4.872,449,4.872,450,4.872,451,4.872,452,4.872,453,4.872]],["title/copy.html",[454,3.051]],["body/copy.html",[0,0.038,4,0.357,5,0.283,6,1.16,13,0.39,18,0.859,21,1.072,23,2.21,35,2.982,40,0.469,88,1.657,150,0.528,151,0.582,152,0.541,153,0.598,154,1.196,161,0.814,182,2.57,249,1.47,254,2.85,320,1.355,346,2.701,362,2.464,410,1.518,454,3.841,455,4.08,456,3.655,457,1.444,458,2.25,459,3.655,460,6.801,461,3.279,462,6.569,463,5.403,464,6.413,465,5.961,466,4.08,467,4.08,468,4.895,469,4.147,470,3.374,471,3.374,472,3.374,473,3.374,474,6.771,475,4.895,476,5.403,477,4.591,478,4.591,479,4.08,480,5.403,481,3.655,482,1.202,483,1.788,484,4.08,485,4.08,486,4.665,487,3.655,488,3.823,489,5.302,490,4.08,491,3.374,492,2.998,493,3.655,494,3.655]],["title/copy.html#淺拷貝-Shallow-Copy",[454,2.29,495,4.152]],["body/copy.html#淺拷貝-Shallow-Copy",[0,0.038,4,0.343,5,0.272,6,1.135,13,0.375,18,0.838,21,1.326,23,1.601,35,2.986,40,0.451,88,2.049,150,0.507,151,0.577,152,0.461,153,0.51,154,1.187,182,2.476,254,2.905,362,2.496,410,1.877,454,2.782,456,4.519,457,1.786,458,2.782,459,4.519,460,6.166,461,3.26,462,6.166,463,5.331,464,6.166,465,5.743,468,4.172,470,4.172,471,4.172,472,4.172,473,4.172,474,6.51,475,5.684,476,3.914,477,3.914,478,3.914,496,5.045,497,5.045,498,6.156,499,5.045,500,5.045,501,5.045,502,5.045,503,5.045,504,4.519,505,3.914,506,4.519,507,4.519,508,4.519,509,4.519,510,4.519,511,4.519]],["title/copy.html#深拷貝-Deep-Copy",[454,2.29,504,3.719]],["body/copy.html#深拷貝-Deep-Copy",[0,0.038,4,0.315,5,0.25,6,1.081,13,0.344,18,0.824,21,1.575,23,1.902,35,2.894,40,0.414,150,0.466,151,0.53,152,0.548,153,0.606,154,1.114,182,2.173,254,2.861,362,2.375,460,5.66,461,3.063,462,6.254,463,4.65,464,6.254,465,5.66,468,4.957,470,4.957,471,4.957,472,4.957,473,4.957,474,6.969,475,6.371,476,4.65,477,4.65,478,4.65,498,5.369,505,4.65,506,5.369,507,5.369,508,5.369,509,5.369,510,5.369,511,5.369]],["title/copy.html#Object-assign",[480,4.292]],["body/copy.html#Object-assign",[0,0.037,4,0.289,5,0.229,6,1.026,13,0.315,18,0.739,35,2.951,40,0.379,150,0.426,151,0.485,154,1.136,182,2.404,254,2.624,362,2.341,460,6.732,461,3.297,462,5.181,463,5.47,464,5.181,465,5.181,480,5.47,481,6.317,482,2.077,483,3.09,505,5.47,512,7.052,513,7.052,514,7.052,515,7.052,516,7.052]],["title/copy.html#轉成-JSON-再轉回來",[486,1.832,517,3.323,518,3.323]],["body/copy.html#轉成-JSON-再轉回來",[0,0.038,4,0.325,5,0.258,6,1.101,13,0.355,18,0.847,23,2.523,40,0.427,150,0.481,151,0.433,152,0.575,153,0.637,154,0.986,161,0.866,182,2.243,249,1.839,346,3.629,454,3.474,460,5.842,462,6.401,464,5.842,465,4.629,469,4.414,474,6.758,476,4.887,477,4.887,478,4.887,486,5.045,487,5.643,488,5.135,489,7.122,491,5.21,492,4.629,493,5.643,494,5.643,505,4.887,519,6.3,520,6.3,521,6.3,522,6.3,523,6.3,524,6.3]],["title/core.html",[0,0.015,525,1.337]],["body/core.html",[0,0.038,4,0.388,5,0.317,6,1.107,8,1.285,13,0.416,18,0.852,21,1.439,23,1.571,25,1.002,34,0.791,35,0.927,40,0.478,41,1.402,88,0.251,91,1.247,149,0.454,150,0.531,151,0.582,152,0.748,153,0.802,154,0.99,155,1.137,157,1.595,158,0.414,161,1.267,164,0.385,167,1.02,169,0.682,171,0.399,173,1.786,175,1.121,176,1.241,177,1.22,178,1.25,179,1.48,180,1.282,181,1.29,182,1.074,183,1.118,249,1.894,250,0.582,254,1.582,255,1.603,267,0.331,270,1.046,306,0.385,308,0.7,309,0.308,310,1.238,311,1.061,312,0.479,316,0.774,317,0.479,318,0.454,320,1.765,341,0.34,344,2.213,345,1.735,346,1.146,356,3.432,358,0.323,361,0.414,362,1.266,369,0.331,370,0.454,374,0.858,385,0.34,394,1.252,396,1.071,397,1.131,402,0.372,403,0.323,404,0.34,407,0.934,410,1.417,454,0.34,457,1.349,458,0.34,461,0.904,469,0.818,482,2.096,483,1.1,486,2.101,488,1.361,491,0.511,525,1.135,526,0.454,527,0.617,528,2.077,529,1.046,530,0.553,531,0.553,532,0.553,533,0.553,534,0.553,535,1.476,536,0.617,537,3.934,538,1.313,539,1.168,540,2.739,541,0.432,542,0.858,543,0.728,544,0.784,545,0.754,546,0.848,547,0.385,548,0.728,549,0.758,550,0.858,551,0.399,552,0.315,553,1.035,554,0.399,555,0.399,556,0.361,557,0.399,558,3.105,559,0.704,560,0.728,561,0.385,562,2.701,563,1.458,564,0.385,565,0.372,566,0.361,567,0.361,568,0.361,569,0.361,570,0.617,571,0.361,572,0.662,573,1.682,574,0.361,575,0.361,576,0.361,577,0.361,578,0.361,579,0.361,580,0.361,581,0.361,582,1.05,583,0.848,584,0.682,585,0.361,586,0.361,587,0.682,588,0.361,589,0.361,590,1.118,591,1.171,592,1.12,593,1.394,594,1.128,595,0.856,596,0.856,597,0.872,598,0.872,599,0.826,600,0.872,601,0.687,602,0.728,603,1.168,604,0.617,605,0.35,606,0.35,607,0.35,609,0.617,610,0.35,611,0.323,612,0.35,613,0.916,614,0.34,615,0.34,616,0.34,617,0.34,618,0.34,619,0.617,620,0.483,621,0.466,622,0.483,623,0.502,624,0.714,625,0.483,626,0.502,627,0.512,628,0.512,629,0.512,630,0.502,631,0.512,632,0.533,633,0.533,634,0.533,635,1.515,636,0.533,637,0.533,638,0.533,639,0.533,640,0.315,641,0.331,642,1.726,643,1.05,644,0.617,645,2.359,646,3.525,647,1.05,648,0.627,649,0.892,650,0.627,651,0.617,652,0.892,653,0.331,654,0.331,655,1.757,656,0.331,657,0.331,658,0.556,659,0.331,660,2.795,661,1.026,662,0.331,663,0.331,664,0.331,665,0.331,666,0.331,667,0.544,668,2.494,669,1.488,670,1.221,671,2.579,672,0.479,673,0.617,674,1.046,675,1.374,676,1.046,677,1.046,678,1.046,679,1.046,680,1.046,681,0.511,682,0.511,683,0.511,684,0.511,685,0.511,686,0.511,687,1.289,688,0.511,689,0.511,690,0.479,691,0.479,692,0.553,693,1.289,694,0.754,695,0.479,696,0.906,697,0.479,698,0.479,699,1.046,700,0.479,701,0.617,702,0.818,703,0.414,704,1.385,705,0.479,706,0.479,707,0.479,708,0.479,709,0.479,710,0.906,711,1.289,712,0.479,713,1.168,714,0.479,715,1.221,716,0.966,717,1.221,718,0.743,719,0.454,720,0.454,721,0.454,722,0.454,723,0.454,724,0.414,725,1.131,726,0.754,727,1.314,728,0.617,729,0.454,730,0.454,731,0.454,732,0.454,733,0.617,734,0.432,735,0.432,736,0.617,737,0.784,738,0.432,739,0.432,740,0.432,741,0.414,742,0.432,743,0.432,744,0.432,745,0.511,746,0.784,747,0.414,748,0.784,749,0.414,750,0.414,751,1.116,752,1.116,753,0.414,754,0.784,755,0.414,756,1.415,757,0.617,758,0.414,759,0.414,760,0.414,761,0.784,762,2.276,763,0.617,764,0.617,765,1.27,766,0.399,767,0.971,768,0.399,769,0.754,770,0.399,771,0.399,772,0.399,773,0.399,774,0.399,775,0.399,776,1.05,777,0.385,778,0.385,779,0.385,780,0.617,781,0.728,782,2.259,783,1.102,784,0.385,785,1.682,786,2.131,787,0.372,788,0.372,789,0.372,790,0.971,791,0.971,792,0.682,793,1.735,794,1.053,795,0.942,796,0.372,797,0.617,798,0.617,799,1.887,800,0.553,801,0.553,802,0.553,803,1.046,804,0.553,805,0.553,806,0.454,807,0.966,808,0.553,809,0.553,810,0.942,811,0.704,812,0.728,813,2.249,814,1.164,815,0.617,816,1.046,817,0.479,818,0.479,819,0.553,820,0.553,821,0.553,822,0.553,823,2.579,824,2.579,825,0.553,826,0.553,827,1.374,828,0.553,829,2.249,830,3.412,831,0.617,832,0.553,833,1.513,834,1.374,835,0.617,836,1.887,837,1.046,838,0.553,839,1.046,840,0.553,841,0.553,842,2.47,843,1.374,844,1.859,845,0.511,846,0.511,847,1.948,848,0.906,849,1.887,850,0.511,851,0.511,852,0.617,853,0.966,854,0.511,855,0.511,856,0.511,857,0.511,858,0.511,859,0.511,860,0.858,861,0.511,862,0.858,863,0.511,864,0.858,865,0.511,866,0.858,867,0.511,868,1.289,869,1.488,870,0.553,871,1.289,872,0.553,873,0.553,874,0.617,875,0.553,876,0.553,877,0.553,878,0.553,879,1.046,880,1.168,881,0.553,882,0.553,883,0.553,884,null,885,1.046,886,0.553,887,0.553,888,0.553,889,0.553,890,0.553,891,0.315,892,0.784,893,2.579,894,0.553,895,0.553,896,1.046,897,1.488,898,0.553,899,0.553,900,1.046,901,0.553,902,0.553,903,0.553,904,1.046,905,1.488,906,1.488,907,1.046,908,3.368,909,0.966,910,0.553,911,1.887,912,0.553,913,1.073,914,1.046,915,1.168,916,0.553,917,0.858,918,1.046,919,0.553,920,0.553,921,0.553,922,0.553,923,0.553,924,0.617,925,0.553,926,2.799,927,1.046,928,0.553,929,1.116,930,0.966,931,0.479,932,0.553,933,1.046,934,0.511,935,0.553,936,0.553,937,0.553,938,0.553,939,0.553,940,0.553,941,0.617,942,0.617,943,0.553,944,0.553,945,0.553,946,0.553,947,1.488,948,1.548,949,0.906,950,0.966,951,0.617,952,1.374,953,0.553,954,1.046,955,0.553,956,1.488,957,1.046,958,0.553,959,0.553,960,0.553,961,0.454,962,1.046,963,0.553,964,0.553,965,0.553,966,0.553,967,0.553,968,0.553,969,0.553,970,0.553,971,0.399,972,1.046,973,1.046,974,1.046,975,1.887,976,1.887,977,0.553,978,1.046,979,1.046]],["title/core.html#JavaScript-直譯器轉換過程",[525,1.337,980,4.152]],["body/core.html#JavaScript-直譯器轉換過程",[0,0.038,4,0.387,5,0.317,6,1.103,8,1.411,13,0.403,18,0.87,21,1.915,23,2.312,25,0.921,34,1.863,35,1.498,40,0.463,41,0.908,55,0.948,91,0.893,150,0.504,151,0.539,152,0.701,153,0.737,154,1.034,155,0.891,157,1.498,161,1.173,167,1.889,173,1.924,175,1.016,176,0.956,177,0.661,178,0.698,179,1.257,180,0.837,181,0.887,182,0.837,183,0.941,249,2.061,250,0.857,254,0.913,286,2.157,309,0.857,310,1.142,311,0.296,316,0.802,320,2.159,330,1.422,339,0.802,344,1.767,346,2.395,356,3.7,358,0.9,362,1.737,370,1.264,374,2.179,385,0.948,390,1.25,396,0.64,403,0.9,407,0.64,410,0.64,457,2.032,461,1.067,482,1.811,483,1.3,525,1.26,528,2.453,529,2.657,530,1.541,531,1.541,532,1.541,533,1.541,534,1.541,537,0.923,538,1.848,541,1.205,542,1.264,543,1.848,544,1.992,545,1.916,546,0.878,547,1.072,548,1.848,549,0.785,550,2.179,551,1.111,552,0.878,553,2.437,554,1.111,555,1.111,556,1.005,557,1.111,558,2.638,559,1.037,560,1.848,561,1.072,562,2.515,563,2.544,564,1.072,565,1.037,566,1.005,567,1.005,568,1.005,569,1.005,571,1.005,572,0.975,573,3.066,574,1.005,575,1.005,576,1.005,577,1.005,578,1.005,579,1.005,580,1.005,581,1.005,582,2.319,583,1.996,584,1.733,585,1.005,586,1.005,587,1.733,588,1.005,589,1.005,590,0.941,591,0.985,592,1.033,593,1.085,594,1.162,595,1.205,596,1.205,597,1.227,598,1.227,599,1.162,600,1.227,601,1.227,602,1.714,605,0.975,606,0.975,607,0.975,610,0.975,611,0.9,612,0.975,613,0.948,614,0.948,615,0.948,616,0.948,617,0.948,618,0.948,620,0.712,621,0.686,622,0.712,623,0.739,624,0.739,625,0.712,626,0.739,627,0.754,628,0.754,629,0.754,630,0.739,631,0.754,632,0.785,633,0.785,634,0.785,635,0.739,636,0.785,637,0.785,638,0.785,639,0.785,640,0.878,641,0.923,642,3.301,643,1.478,645,2.216,647,0.857,648,0.923,649,0.923,650,0.923,652,0.923,653,0.923,654,0.923,655,1.949,656,0.923,657,0.923,658,0.819,659,0.923,661,2.266,662,0.923,663,0.923,664,0.923,665,0.923,666,0.923,667,0.802,981,1.72,982,1.72,983,1.72,984,1.72,985,2.966,986,1.72,987,1.72,988,1.72,989,1.72,990,1.72,991,1.72,992,2.453,993,1.541,994,3.029,995,1.541,996,1.541,997,1.541,998,1.541,999,3.503,1000,1.541,1001,1.541,1002,1.541,1003,1.541,1004,3.065,1005,1.541,1006,3.503,1007,1.541,1008,1.541,1009,1.541,1010,1.541,1011,1.541,1012,2.817,1013,1.541,1014,1.111,1015,1.541,1016,1.541,1017,1.422,1018,1.422,1019,1.422,1020,1.422,1021,1.422,1022,1.422,1023,1.422,1024,1.422,1025,1.422,1026,1.422,1027,1.422,1028,1.422,1029,1.422,1030,1.334,1031,1.334,1032,1.334,1033,1.334,1034,1.334,1035,1.334,1036,2.078,1037,1.264,1038,1.264,1039,1.264,1040,1.264,1041,1.264,1042,1.636,1043,0.9,1044,2.078,1045,1.205,1046,1.205,1047,1.205,1048,1.916,1049,1.155,1050,1.155,1051,1.155,1052,1.155,1053,1.155,1054,1.155,1055,1.155,1056,1.155,1057,3.576,1058,1.155,1059,1.155,1060,1.992,1061,1.992,1062,1.155,1063,1.155,1064,1.155,1065,1.155,1066,1.155,1067,1.155,1068,1.155,1069,1.072,1070,1.111,1071,1.111,1072,1.111,1073,1.111,1074,1.111,1075,1.072,1076,1.072,1077,1.072,1078,1.072,1079,1.005,1080,1.072,1081,1.072,1082,1.072,1083,1.072,1084,1.072,1085,1.072,1086,1.072,1087,1.072,1088,1.072,1089,1.733,1090,1.005,1091,1.037,1092,1.037,1093,1.037,1094,1.037,1095,1.037,1096,1.037,1097,1.037,1098,1.037,1099,1.037,1100,1.037,1101,1.682,1102,1.682,1103,1.005,1104,1.005,1105,1.005,1106,1.005,1107,1.005,1108,1.005,1109,1.733,1110,1.005,1111,1.005,1112,1.005,1113,1.005,1114,1.005,1115,1.005,1116,1.005,1117,1.005,1118,1.005,1119,1.005,1120,1.005,1121,1.005,1122,1.005,1123,0.975,1124,0.9,1125,0.975,1126,0.975,1127,0.948,1128,0.948,1129,0.948,1130,0.948,1131,0.923,1132,0.948,1133,0.923,1134,0.948,1135,0.948,1136,0.948,1137,0.948,1138,0.948,1139,0.948,1140,0.948,1141,0.923,1142,0.948,1143,0.948,1144,0.819,1145,0.948,1146,0.878,1147,0.948,1148,0.948,1149,0.948,1150,1.636,1151,0.948,1152,0.948,1153,1.636,1154,1.636,1155,1.636,1156,0.948,1157,0.948,1158,0.948,1159,0.948,1160,0.948,1161,0.923]],["title/core.html#提升（Hoisting）",[992,4.576]],["body/core.html#提升（Hoisting）",[0,0.038,4,0.388,5,0.318,6,1.106,8,1.418,13,0.404,18,0.871,21,1.926,23,2.325,25,0.927,34,1.884,35,1.513,40,0.464,41,0.918,55,0.962,91,0.902,150,0.506,151,0.541,152,0.704,153,0.741,154,1.038,155,0.899,157,1.513,161,1.177,167,1.908,173,1.944,175,1.023,176,0.965,177,0.669,178,0.707,179,1.27,180,0.847,181,0.898,182,0.847,183,0.953,249,2.065,250,0.87,254,0.925,286,2.181,309,0.87,310,1.157,311,0.3,316,0.814,320,2.174,339,0.814,344,1.781,346,2.417,356,3.716,358,0.913,362,1.748,374,2.207,385,0.962,390,1.266,396,0.649,403,0.913,407,0.649,410,0.649,457,2.048,461,1.081,482,1.825,483,1.316,525,1.274,537,0.937,538,1.872,541,1.223,542,1.282,543,1.872,544,2.017,545,1.94,546,0.891,547,1.088,548,1.872,549,0.797,550,2.207,551,1.127,552,0.891,553,2.464,554,1.127,555,1.127,556,1.02,557,1.127,558,2.664,559,1.052,560,1.872,561,1.088,562,2.536,563,2.563,564,1.088,565,1.052,566,1.02,567,1.02,568,1.02,569,1.02,571,1.02,572,0.99,573,3.093,574,1.02,575,1.02,576,1.02,577,1.02,578,1.02,579,1.02,580,1.02,581,1.02,582,2.342,583,2.019,584,1.755,585,1.02,586,1.02,587,1.755,588,1.02,589,1.02,590,0.953,591,0.998,592,1.046,593,1.099,594,1.177,595,1.22,596,1.22,597,1.243,598,1.243,599,1.177,600,1.243,601,1.243,602,1.733,605,0.99,606,0.99,607,0.99,610,0.99,611,0.913,612,0.99,613,0.962,614,0.962,615,0.962,616,0.962,617,0.962,618,0.962,620,0.722,621,0.696,622,0.722,623,0.75,624,0.75,625,0.722,626,0.75,627,0.765,628,0.765,629,0.765,630,0.75,631,0.765,632,0.797,633,0.797,634,0.797,635,0.75,636,0.797,637,0.797,638,0.797,639,0.797,640,0.891,641,0.937,642,3.326,643,1.497,645,2.238,647,0.87,648,0.937,649,0.937,650,0.937,652,0.937,653,0.937,654,0.937,655,1.971,656,0.937,657,0.937,658,0.831,659,0.937,661,2.288,662,0.937,663,0.937,664,0.937,665,0.937,666,0.937,667,0.814,992,1.443,993,1.563,994,3.05,995,1.563,996,1.563,997,1.563,998,1.563,999,3.542,1000,1.563,1001,1.563,1002,1.563,1003,1.563,1004,3.088,1005,1.563,1006,3.542,1007,1.563,1008,1.563,1009,1.563,1010,1.563,1011,1.563,1012,2.843,1013,1.563,1014,1.127,1015,1.563,1016,1.563,1017,1.443,1018,1.443,1019,1.443,1020,1.443,1021,1.443,1022,1.443,1023,1.443,1024,1.443,1025,1.443,1026,1.443,1027,1.443,1028,1.443,1029,1.443,1030,1.354,1031,1.354,1032,1.354,1033,1.354,1034,1.354,1035,1.354,1036,2.105,1037,1.282,1038,1.282,1039,1.282,1040,1.282,1041,1.282,1042,1.656,1043,0.913,1044,2.105,1045,1.223,1046,1.223,1047,1.223,1048,1.94,1049,1.172,1050,1.172,1051,1.172,1052,1.172,1053,1.172,1054,1.172,1055,1.172,1056,1.172,1057,3.605,1058,1.172,1059,1.172,1060,2.017,1061,2.017,1062,1.172,1063,1.172,1064,1.172,1065,1.172,1066,1.172,1067,1.172,1068,1.172,1069,1.088,1070,1.127,1071,1.127,1072,1.127,1073,1.127,1074,1.127,1075,1.088,1076,1.088,1077,1.088,1078,1.088,1079,1.02,1080,1.088,1081,1.088,1082,1.088,1083,1.088,1084,1.088,1085,1.088,1086,1.088,1087,1.088,1088,1.088,1089,1.755,1090,1.02,1091,1.052,1092,1.052,1093,1.052,1094,1.052,1095,1.052,1096,1.052,1097,1.052,1098,1.052,1099,1.052,1100,1.052,1101,1.704,1102,1.704,1103,1.02,1104,1.02,1105,1.02,1106,1.02,1107,1.02,1108,1.02,1109,1.755,1110,1.02,1111,1.02,1112,1.02,1113,1.02,1114,1.02,1115,1.02,1116,1.02,1117,1.02,1118,1.02,1119,1.02,1120,1.02,1121,1.02,1122,1.02,1123,0.99,1124,0.913,1125,0.99,1126,0.99,1127,0.962,1128,0.962,1129,0.962,1130,0.962,1131,0.937,1132,0.962,1133,0.937,1134,0.962,1135,0.962,1136,0.962,1137,0.962,1138,0.962,1139,0.962,1140,0.962,1141,0.937,1142,0.962,1143,0.962,1144,0.831,1145,0.962,1146,0.891,1147,0.962,1148,0.962,1149,0.962,1150,1.656,1151,0.962,1152,0.962,1153,1.656,1154,1.656,1155,1.656,1156,0.962,1157,0.962,1158,0.962,1159,0.962,1160,0.962,1161,0.937]],["title/core.html#同步-非同步",[1017,4.576]],["body/core.html#同步-非同步",[0,0.038,4,0.381,5,0.317,6,1.081,8,1.475,13,0.395,18,0.872,21,1.968,23,2.376,25,0.898,34,2.084,35,1.655,40,0.441,41,1.015,55,1.103,91,0.986,150,0.487,151,0.53,152,0.684,153,0.704,154,1.062,155,0.873,157,1.655,161,1.03,167,2.087,173,2.126,175,1.028,176,1.056,177,0.752,178,0.794,179,1.389,180,0.952,181,1.008,182,0.952,183,1.07,249,2.072,250,0.997,254,1.039,286,2.413,309,0.997,310,1.299,311,0.344,320,1.707,339,0.932,344,1.039,346,2.619,358,1.046,362,1.851,385,1.103,390,1.422,396,0.744,403,1.046,407,0.744,410,0.744,457,1.819,461,1.214,482,1.951,483,1.479,525,1.087,537,1.074,538,1.246,541,1.401,542,1.47,543,2.102,544,2.265,545,2.179,546,1.021,547,1.246,548,2.102,549,0.913,550,2.479,551,1.292,552,1.021,553,2.727,554,1.292,555,1.292,556,1.168,557,1.292,558,2.914,559,1.205,560,2.102,561,1.246,562,2.727,563,2.74,564,1.246,565,1.205,566,1.168,567,1.168,568,1.168,569,1.168,571,1.168,572,1.134,573,3.352,574,1.168,575,1.168,576,1.168,577,1.168,578,1.168,579,1.168,580,1.168,581,1.168,582,2.561,583,2.233,584,1.971,585,1.168,586,1.168,587,1.971,588,1.168,589,1.168,590,1.07,591,1.121,592,1.175,593,1.234,594,1.322,595,1.37,596,1.37,597,1.396,598,1.396,599,1.322,600,1.396,601,1.396,602,1.918,605,1.134,606,1.134,607,1.134,610,1.134,611,1.046,612,1.134,613,1.103,614,1.103,615,1.103,616,1.103,617,1.103,618,1.103,620,0.827,621,0.798,622,0.827,623,0.859,624,0.859,625,0.827,626,0.859,627,0.876,628,0.876,629,0.876,630,0.859,631,0.876,632,0.913,633,0.913,634,0.913,635,0.859,636,0.913,637,0.913,638,0.913,639,0.913,640,1.021,641,1.074,642,3.556,643,1.682,645,2.448,647,0.997,648,1.074,649,1.074,650,1.074,652,1.074,653,1.074,654,1.074,655,2.181,656,1.074,657,1.074,658,0.953,659,1.074,661,2.503,662,1.074,663,1.074,664,1.074,665,1.074,666,1.074,667,0.932,994,2.675,1004,3.102,1012,1.811,1018,1.654,1019,1.654,1020,1.654,1021,1.654,1022,1.654,1023,1.654,1024,1.654,1025,1.654,1026,1.654,1027,1.654,1028,1.654,1029,1.654,1030,1.551,1031,1.551,1032,1.551,1033,1.551,1034,1.551,1035,1.551,1036,2.364,1037,1.47,1038,1.47,1039,1.47,1040,1.47,1041,1.47,1042,1.86,1043,1.046,1044,2.364,1045,1.401,1046,1.401,1047,1.401,1048,2.179,1049,1.343,1050,1.343,1051,1.343,1052,1.343,1053,1.343,1054,1.343,1055,1.343,1056,1.343,1057,3.878,1058,1.343,1059,1.343,1060,2.265,1061,2.265,1062,1.343,1063,1.343,1064,1.343,1065,1.343,1066,1.343,1067,1.343,1068,1.343,1069,1.246,1070,1.292,1071,1.292,1072,1.292,1073,1.292,1074,1.292,1075,1.246,1076,1.246,1077,1.246,1078,1.246,1079,1.168,1080,1.246,1081,1.246,1082,1.246,1083,1.246,1084,1.246,1085,1.246,1086,1.246,1087,1.246,1088,1.246,1089,1.971,1090,1.168,1091,1.205,1092,1.205,1093,1.205,1094,1.205,1095,1.205,1096,1.205,1097,1.205,1098,1.205,1099,1.205,1100,1.205,1101,1.913,1102,1.913,1103,1.168,1104,1.168,1105,1.168,1106,1.168,1107,1.168,1108,1.168,1109,1.971,1110,1.168,1111,1.168,1112,1.168,1113,1.168,1114,1.168,1115,1.168,1116,1.168,1117,1.168,1118,1.168,1119,1.168,1120,1.168,1121,1.168,1122,1.168,1123,1.134,1124,1.046,1125,1.134,1126,1.134,1127,1.103,1128,1.103,1129,1.103,1130,1.103,1131,1.074,1132,1.103,1133,1.074,1134,1.103,1135,1.103,1136,1.103,1137,1.103,1138,1.103,1139,1.103,1140,1.103,1141,1.074,1142,1.103,1143,1.103,1144,0.953,1145,1.103,1146,1.021,1147,1.103,1148,1.103,1149,1.103,1150,1.86,1151,1.103,1152,1.103,1153,1.86,1154,1.86,1155,1.86,1156,1.103,1157,1.103,1158,1.103,1159,1.103,1160,1.103,1161,1.074]],["title/core.html#LHS",[542,4.065]],["body/core.html#LHS",[0,0.038,4,0.38,5,0.317,6,1.085,8,1.483,13,0.393,18,0.872,21,1.982,23,2.393,25,0.906,34,2.114,35,1.676,40,0.443,41,1.03,55,1.124,91,0.999,150,0.49,151,0.534,152,0.689,153,0.709,154,1.067,155,0.883,157,1.676,161,1.004,167,2.113,173,2.152,175,1.038,176,1.069,177,0.764,178,0.807,179,1.406,180,0.967,181,1.025,182,0.967,183,1.088,249,2.072,254,1.056,286,2.447,309,1.016,310,1.32,311,0.351,320,1.728,339,0.95,344,1.056,346,2.648,358,1.067,362,1.865,385,1.124,390,1.445,396,0.759,403,1.067,407,0.759,410,0.759,457,1.842,461,1.234,482,1.969,483,1.503,525,1.104,537,1.094,538,1.271,543,2.137,544,2.302,545,2.215,546,1.041,547,1.271,548,2.137,549,0.931,550,2.519,551,1.317,552,1.041,553,2.765,554,1.317,555,1.317,556,1.191,557,1.317,558,2.95,559,1.229,560,2.137,561,1.271,562,2.755,563,2.765,564,1.271,565,1.229,566,1.191,567,1.191,568,1.191,569,1.191,571,1.191,572,1.156,573,3.389,574,1.191,575,1.191,576,1.191,577,1.191,578,1.191,579,1.191,580,1.191,581,1.191,582,2.593,583,2.265,584,2.003,585,1.191,586,1.191,587,2.003,588,1.191,589,1.191,590,1.088,591,1.139,592,1.194,593,1.254,594,1.343,595,1.393,596,1.393,597,1.419,598,1.419,599,1.343,600,1.419,601,1.419,602,1.945,605,1.156,606,1.156,607,1.156,610,1.156,611,1.067,612,1.156,613,1.124,614,1.124,615,1.124,616,1.124,617,1.124,618,1.124,620,0.843,621,0.813,622,0.843,623,0.876,624,0.876,625,0.843,626,0.876,627,0.893,628,0.893,629,0.893,630,0.876,631,0.893,632,0.931,633,0.931,634,0.931,635,0.876,636,0.931,637,0.931,638,0.931,639,0.931,640,1.041,641,1.094,642,3.588,643,1.709,645,2.478,647,1.016,648,1.094,649,1.094,650,1.094,652,1.094,653,1.094,654,1.094,655,2.212,656,1.094,657,1.094,658,0.971,659,1.094,661,2.534,662,1.094,663,1.094,664,1.094,665,1.094,666,1.094,667,0.95,994,2.705,1004,3.133,1012,1.841,1030,1.582,1031,1.582,1032,1.582,1033,1.582,1034,1.582,1035,1.582,1036,2.402,1037,1.498,1038,1.498,1039,1.498,1040,1.498,1041,1.498,1042,1.891,1043,1.067,1044,2.402,1045,1.428,1046,1.428,1047,1.428,1048,2.215,1049,1.369,1050,1.369,1051,1.369,1052,1.369,1053,1.369,1054,1.369,1055,1.369,1056,1.369,1057,3.917,1058,1.369,1059,1.369,1060,2.302,1061,2.302,1062,1.369,1063,1.369,1064,1.369,1065,1.369,1066,1.369,1067,1.369,1068,1.369,1069,1.271,1070,1.317,1071,1.317,1072,1.317,1073,1.317,1074,1.317,1075,1.271,1076,1.271,1077,1.271,1078,1.271,1079,1.191,1080,1.271,1081,1.271,1082,1.271,1083,1.271,1084,1.271,1085,1.271,1086,1.271,1087,1.271,1088,1.271,1089,2.003,1090,1.191,1091,1.229,1092,1.229,1093,1.229,1094,1.229,1095,1.229,1096,1.229,1097,1.229,1098,1.229,1099,1.229,1100,1.229,1101,1.945,1102,1.945,1103,1.191,1104,1.191,1105,1.191,1106,1.191,1107,1.191,1108,1.191,1109,2.003,1110,1.191,1111,1.191,1112,1.191,1113,1.191,1114,1.191,1115,1.191,1116,1.191,1117,1.191,1118,1.191,1119,1.191,1120,1.191,1121,1.191,1122,1.191,1123,1.156,1124,1.067,1125,1.156,1126,1.156,1127,1.124,1128,1.124,1129,1.124,1130,1.124,1131,1.094,1132,1.124,1133,1.094,1134,1.124,1135,1.124,1136,1.124,1137,1.124,1138,1.124,1139,1.124,1140,1.124,1141,1.094,1142,1.124,1143,1.124,1144,0.971,1145,1.124,1146,1.041,1147,1.124,1148,1.124,1149,1.124,1150,1.891,1151,1.124,1152,1.124,1153,1.891,1154,1.891,1155,1.891,1156,1.124,1157,1.124,1158,1.124,1159,1.124,1160,1.124,1161,1.094]],["title/core.html#陳述式-表達式",[1036,2.909,1037,3.051]],["body/core.html#陳述式-表達式",[0,0.038,4,0.382,5,0.316,6,1.089,8,1.491,13,0.395,18,0.874,21,1.86,23,2.411,25,0.914,34,2.145,35,1.698,40,0.446,41,1.045,55,1.147,91,1.012,150,0.493,151,0.537,152,0.694,153,0.716,154,1.073,155,0.895,157,1.698,161,1.012,167,2.14,173,2.18,175,1.049,176,1.082,177,0.777,178,0.821,179,1.424,180,0.984,181,1.042,182,0.984,183,1.107,249,2.077,254,1.074,286,2.483,309,1.037,310,1.343,311,0.358,320,1.751,339,0.97,344,1.074,346,2.679,358,1.089,362,1.88,385,1.147,390,1.47,396,0.774,403,1.089,407,0.774,410,0.774,457,1.866,461,1.255,482,1.987,483,0.912,525,0.67,537,1.117,548,1.297,551,1.344,552,1.062,553,2.806,554,1.344,555,1.344,556,1.215,557,1.344,558,2.989,559,1.254,560,2.174,561,1.297,562,2.783,563,2.791,564,1.297,565,1.254,566,1.215,567,1.215,568,1.215,569,1.215,571,1.215,572,1.18,573,3.429,574,1.215,575,1.215,576,1.215,577,1.215,578,1.215,579,1.215,580,1.215,581,1.215,582,2.627,583,2.298,584,2.037,585,1.215,586,1.215,587,2.037,588,1.215,589,1.215,590,1.107,591,1.159,592,1.215,593,1.276,594,1.367,595,1.417,596,1.417,597,1.443,598,1.443,599,1.367,600,1.443,601,1.443,602,1.973,605,1.18,606,1.18,607,1.18,610,1.18,611,1.089,612,1.18,613,1.147,614,1.147,615,1.147,616,1.147,617,1.147,618,1.147,620,0.861,621,0.83,622,0.861,623,0.894,624,0.894,625,0.861,626,0.894,627,0.912,628,0.912,629,0.912,630,0.894,631,0.912,632,0.95,633,0.95,634,0.95,635,0.894,636,0.95,637,0.95,638,0.95,639,0.95,640,1.062,641,1.117,642,3.622,643,1.738,645,2.51,647,1.037,648,1.117,649,1.117,650,1.117,652,1.117,653,1.117,654,1.117,655,2.244,656,1.117,657,1.117,658,0.991,659,1.117,661,2.567,662,1.117,663,1.117,664,1.117,665,1.117,666,1.117,667,0.97,994,2.736,1004,3.166,1012,1.872,1036,1.458,1038,1.529,1039,1.529,1040,1.529,1041,1.529,1042,1.923,1043,1.089,1044,2.444,1045,1.458,1046,1.458,1047,1.458,1048,2.253,1049,1.397,1050,1.397,1051,1.397,1052,1.397,1053,1.397,1054,1.397,1055,1.397,1056,1.397,1057,3.958,1058,1.397,1059,1.397,1060,2.342,1061,2.342,1062,1.397,1063,1.397,1064,1.397,1065,1.397,1066,1.397,1067,1.397,1068,1.397,1069,1.297,1070,1.344,1071,1.344,1072,1.344,1073,1.344,1074,1.344,1075,1.297,1076,1.297,1077,1.297,1078,1.297,1079,1.215,1080,1.297,1081,1.297,1082,1.297,1083,1.297,1084,1.297,1085,1.297,1086,1.297,1087,1.297,1088,1.297,1089,2.037,1090,1.215,1091,1.254,1092,1.254,1093,1.254,1094,1.254,1095,1.254,1096,1.254,1097,1.254,1098,1.254,1099,1.254,1100,1.254,1101,1.978,1102,1.978,1103,1.215,1104,1.215,1105,1.215,1106,1.215,1107,1.215,1108,1.215,1109,2.037,1110,1.215,1111,1.215,1112,1.215,1113,1.215,1114,1.215,1115,1.215,1116,1.215,1117,1.215,1118,1.215,1119,1.215,1120,1.215,1121,1.215,1122,1.215,1123,1.18,1124,1.089,1125,1.18,1126,1.18,1127,1.147,1128,1.147,1129,1.147,1130,1.147,1131,1.117,1132,1.147,1133,1.117,1134,1.147,1135,1.147,1136,1.147,1137,1.147,1138,1.147,1139,1.147,1140,1.147,1141,1.117,1142,1.147,1143,1.147,1144,0.991,1145,1.147,1146,1.062,1147,1.147,1148,1.147,1149,1.147,1150,1.923,1151,1.147,1152,1.147,1153,1.923,1154,1.923,1155,1.923,1156,1.147,1157,1.147,1158,1.147,1159,1.147,1160,1.147,1161,1.117]],["title/core.html#立即函式",[1043,2.895]],["body/core.html#立即函式",[0,0.038,4,0.382,5,0.315,6,1.079,8,1.503,13,0.393,18,0.876,21,1.883,23,2.437,25,0.874,34,2.191,35,1.73,40,0.442,41,1.068,55,1.182,91,1.031,150,0.488,151,0.529,152,0.68,153,0.692,154,1.068,155,0.912,157,1.73,161,1.024,167,2.181,173,2.221,175,1.065,176,1.103,177,0.797,178,0.841,179,1.451,180,1.009,181,1.069,182,1.009,183,1.134,249,2.083,286,2.537,309,1.068,310,1.377,311,0.369,320,1.784,339,0.999,344,0.66,346,2.724,358,1.122,362,1.902,385,1.182,390,1.507,396,0.797,407,0.797,410,0.797,457,1.901,461,1.287,482,2.015,483,0.939,525,0.69,548,1.336,553,2.867,554,1.384,555,1.384,556,1.252,557,1.384,558,3.045,559,1.292,560,2.228,561,1.336,562,2.826,563,2.83,564,1.336,565,1.292,566,1.252,567,1.252,568,1.252,569,1.252,571,1.252,572,1.216,573,3.486,574,1.252,575,1.252,576,1.252,577,1.252,578,1.252,579,1.252,580,1.252,581,1.252,582,2.676,583,2.348,584,2.089,585,1.252,586,1.252,587,2.089,588,1.252,589,1.252,590,1.134,591,1.188,592,1.246,593,1.308,594,1.401,595,1.452,596,1.452,597,1.479,598,1.479,599,1.401,600,1.479,601,1.479,602,2.016,605,1.216,606,1.216,607,1.216,610,1.216,611,1.122,612,1.216,613,1.182,614,1.182,615,1.182,616,1.182,617,1.182,618,1.182,620,0.887,621,0.855,622,0.887,623,0.921,624,0.921,625,0.887,626,0.921,627,0.939,628,0.939,629,0.939,630,0.921,631,0.939,632,0.978,633,0.978,634,0.978,635,0.921,636,0.978,637,0.978,638,0.978,639,0.978,640,1.094,641,1.151,642,3.672,643,1.782,645,2.558,647,1.068,648,1.151,649,1.151,650,1.151,652,1.151,653,1.151,654,1.151,655,2.293,656,1.151,657,1.151,658,1.021,659,1.151,661,2.615,662,1.151,663,1.151,664,1.151,665,1.151,666,1.151,667,0.999,994,2.782,1004,3.214,1012,1.92,1042,1.182,1044,2.505,1045,1.502,1046,1.502,1047,1.502,1048,2.31,1049,1.439,1050,1.439,1051,1.439,1052,1.439,1053,1.439,1054,1.439,1055,1.439,1056,1.439,1057,4.018,1058,1.439,1059,1.439,1060,2.401,1061,2.401,1062,1.439,1063,1.439,1064,1.439,1065,1.439,1066,1.439,1067,1.439,1068,1.439,1069,1.336,1070,1.384,1071,1.384,1072,1.384,1073,1.384,1074,1.384,1075,1.336,1076,1.336,1077,1.336,1078,1.336,1079,1.252,1080,1.336,1081,1.336,1082,1.336,1083,1.336,1084,1.336,1085,1.336,1086,1.336,1087,1.336,1088,1.336,1089,2.089,1090,1.252,1091,1.292,1092,1.292,1093,1.292,1094,1.292,1095,1.292,1096,1.292,1097,1.292,1098,1.292,1099,1.292,1100,1.292,1101,2.028,1102,2.028,1103,1.252,1104,1.252,1105,1.252,1106,1.252,1107,1.252,1108,1.252,1109,2.089,1110,1.252,1111,1.252,1112,1.252,1113,1.252,1114,1.252,1115,1.252,1116,1.252,1117,1.252,1118,1.252,1119,1.252,1120,1.252,1121,1.252,1122,1.252,1123,1.216,1124,1.122,1125,1.216,1126,1.216,1127,1.182,1128,1.182,1129,1.182,1130,1.182,1131,1.151,1132,1.182,1133,1.151,1134,1.182,1135,1.182,1136,1.182,1137,1.182,1138,1.182,1139,1.182,1140,1.182,1141,1.151,1142,1.182,1143,1.182,1144,1.021,1145,1.182,1146,1.094,1147,1.182,1148,1.182,1149,1.182,1150,1.972,1151,1.182,1152,1.182,1153,1.972,1154,1.972,1155,1.972,1156,1.182,1157,1.182,1158,1.182,1159,1.182,1160,1.182,1161,1.151]],["title/core.html#ASI-自動分號插入",[553,2.587,1048,2.682]],["body/core.html#ASI-自動分號插入",[0,0.038,4,0.381,5,0.315,6,1.083,8,1.509,13,0.391,18,0.876,21,1.896,23,2.451,25,0.881,34,2.216,35,1.747,40,0.444,41,1.08,55,1.201,91,1.041,150,0.49,151,0.532,152,0.684,153,0.697,154,1.072,155,0.921,157,1.747,161,0.992,167,2.203,173,2.244,175,1.074,176,1.114,177,0.807,178,0.853,179,1.466,180,1.022,181,1.083,182,1.022,183,1.15,249,2.083,286,2.566,309,1.086,310,1.395,311,0.375,320,1.802,339,1.015,344,0.671,346,2.748,358,1.14,362,1.914,385,1.201,390,1.528,396,0.81,407,0.81,410,0.81,457,1.92,461,1.304,482,2.029,483,0.955,525,0.702,548,1.357,553,2.258,554,1.407,555,1.407,556,1.272,557,1.407,558,3.076,559,1.313,560,2.258,561,1.357,562,2.848,563,2.85,564,1.357,565,1.313,566,1.272,567,1.272,568,1.272,569,1.272,571,1.272,572,1.235,573,3.518,574,1.272,575,1.272,576,1.272,577,1.272,578,1.272,579,1.272,580,1.272,581,1.272,582,2.703,583,2.375,584,2.117,585,1.272,586,1.272,587,2.117,588,1.272,589,1.272,590,1.15,591,1.204,592,1.262,593,1.326,594,1.42,595,1.472,596,1.472,597,1.499,598,1.499,599,1.42,600,1.499,601,1.499,602,2.039,605,1.235,606,1.235,607,1.235,610,1.235,611,1.14,612,1.235,613,1.201,614,1.201,615,1.201,616,1.201,617,1.201,618,1.201,620,0.901,621,0.869,622,0.901,623,0.936,624,0.936,625,0.901,626,0.936,627,0.955,628,0.955,629,0.955,630,0.936,631,0.955,632,0.994,633,0.994,634,0.994,635,0.936,636,0.994,637,0.994,638,0.994,639,0.994,640,1.112,641,1.169,642,3.699,643,1.806,645,2.583,647,1.086,648,1.169,649,1.169,650,1.169,652,1.169,653,1.169,654,1.169,655,2.319,656,1.169,657,1.169,658,1.038,659,1.169,661,2.642,662,1.169,663,1.169,664,1.169,665,1.169,666,1.169,667,1.015,994,2.528,1004,3.24,1012,1.945,1042,1.201,1048,1.407,1049,1.462,1050,1.462,1051,1.462,1052,1.462,1053,1.462,1054,1.462,1055,1.462,1056,1.462,1057,4.05,1058,1.462,1059,1.462,1060,2.433,1061,2.433,1062,1.462,1063,1.462,1064,1.462,1065,1.462,1066,1.462,1067,1.462,1068,1.462,1069,1.357,1070,1.407,1071,1.407,1072,1.407,1073,1.407,1074,1.407,1075,1.357,1076,1.357,1077,1.357,1078,1.357,1079,1.272,1080,1.357,1081,1.357,1082,1.357,1083,1.357,1084,1.357,1085,1.357,1086,1.357,1087,1.357,1088,1.357,1089,2.117,1090,1.272,1091,1.313,1092,1.313,1093,1.313,1094,1.313,1095,1.313,1096,1.313,1097,1.313,1098,1.313,1099,1.313,1100,1.313,1101,2.055,1102,2.055,1103,1.272,1104,1.272,1105,1.272,1106,1.272,1107,1.272,1108,1.272,1109,2.117,1110,1.272,1111,1.272,1112,1.272,1113,1.272,1114,1.272,1115,1.272,1116,1.272,1117,1.272,1118,1.272,1119,1.272,1120,1.272,1121,1.272,1122,1.272,1123,1.235,1124,1.14,1125,1.235,1126,1.235,1127,1.201,1128,1.201,1129,1.201,1130,1.201,1131,1.169,1132,1.201,1133,1.169,1134,1.201,1135,1.201,1136,1.201,1137,1.201,1138,1.201,1139,1.201,1140,1.201,1141,1.169,1142,1.201,1143,1.201,1144,1.038,1145,1.201,1146,1.112,1147,1.201,1148,1.201,1149,1.201,1150,1.998,1151,1.201,1152,1.201,1153,1.998,1154,1.998,1155,1.998,1156,1.201,1157,1.201,1158,1.201,1159,1.201,1160,1.201,1161,1.169]],["title/core.html#動態型別",[1069,3.448]],["body/core.html#動態型別",[0,0.038,4,0.382,5,0.315,6,1.081,8,1.539,13,0.389,18,0.88,21,1.956,23,2.518,25,0.915,34,2.341,35,1.832,40,0.437,41,1.14,55,1.298,91,1.092,150,0.48,151,0.53,152,0.68,153,0.721,154,1.092,155,0.966,157,1.832,161,0.676,167,2.31,173,2.353,175,1.115,176,1.168,177,0.861,178,0.909,179,1.537,180,1.09,181,1.155,182,1.09,183,1.226,249,2.099,286,2.71,309,1.173,310,1.487,311,0.405,320,1.889,339,1.097,344,0.725,346,2.866,358,1.231,362,1.97,385,1.298,390,1.629,396,0.876,407,0.876,410,0.876,457,1.74,461,1.39,482,2.1,483,1.031,525,0.758,558,3.225,559,1.418,560,2.407,561,1.467,562,2.958,563,2.95,564,1.467,565,1.418,566,1.375,567,1.375,568,1.375,569,1.375,571,1.375,572,1.335,573,3.669,574,1.375,575,1.375,576,1.375,577,1.375,578,1.375,579,1.375,580,1.375,581,1.375,582,2.835,583,2.508,584,2.257,585,1.375,586,1.375,587,2.257,588,1.375,589,1.375,590,1.226,591,1.283,592,1.346,593,1.413,594,1.514,595,1.569,596,1.569,597,1.598,598,1.598,599,1.514,600,1.598,601,1.598,602,2.153,605,1.335,606,1.335,607,1.335,610,1.335,611,1.231,612,1.335,613,1.298,614,1.298,615,1.298,616,1.298,617,1.298,618,1.298,620,0.974,621,0.939,622,0.974,623,1.011,624,1.011,625,0.974,626,1.011,627,1.031,628,1.031,629,1.031,630,1.011,631,1.031,632,1.074,633,1.074,634,1.074,635,1.011,636,1.074,637,1.074,638,1.074,639,1.074,640,1.201,641,1.263,642,3.828,643,1.925,645,2.709,647,1.173,648,1.263,649,1.263,650,1.263,652,1.263,653,1.263,654,1.263,655,2.449,656,1.263,657,1.263,658,1.121,659,1.263,661,2.77,662,1.263,663,1.263,664,1.263,665,1.263,666,1.263,667,1.097,994,2.651,1004,3.364,1012,2.074,1042,1.298,1070,1.52,1071,1.52,1072,1.52,1073,1.52,1074,1.52,1075,1.467,1076,1.467,1077,1.467,1078,1.467,1079,1.375,1080,1.467,1081,1.467,1082,1.467,1083,1.467,1084,1.467,1085,1.467,1086,1.467,1087,1.467,1088,1.467,1089,2.257,1090,1.375,1091,1.418,1092,1.418,1093,1.418,1094,1.418,1095,1.418,1096,1.418,1097,1.418,1098,1.418,1099,1.418,1100,1.418,1101,2.191,1102,2.191,1103,1.375,1104,1.375,1105,1.375,1106,1.375,1107,1.375,1108,1.375,1109,2.257,1110,1.375,1111,1.375,1112,1.375,1113,1.375,1114,1.375,1115,1.375,1116,1.375,1117,1.375,1118,1.375,1119,1.375,1120,1.375,1121,1.375,1122,1.375,1123,1.335,1124,1.231,1125,1.335,1126,1.335,1127,1.298,1128,1.298,1129,1.298,1130,1.298,1131,1.263,1132,1.298,1133,1.263,1134,1.298,1135,1.298,1136,1.298,1137,1.298,1138,1.298,1139,1.298,1140,1.298,1141,1.263,1142,1.298,1143,1.298,1144,1.121,1145,1.298,1146,1.201,1147,1.298,1148,1.298,1149,1.298,1150,2.13,1151,1.298,1152,1.298,1153,2.13,1154,2.13,1155,2.13,1156,1.298,1157,1.298,1158,1.298,1159,1.298,1160,1.298,1161,1.263]],["title/core.html#原始型別及物件型別",[1075,3.448]],["body/core.html#原始型別及物件型別",[0,0.038,4,0.383,5,0.315,6,1.061,8,1.56,13,0.383,18,0.881,21,1.998,23,2.563,25,0.876,34,2.43,35,1.893,40,0.434,41,1.184,91,0.98,150,0.475,151,0.523,152,0.667,153,0.7,154,1.093,155,0.866,157,1.893,161,0.702,167,2.386,173,2.111,175,1.068,176,1.048,177,0.9,178,0.95,179,1.588,180,1.139,181,1.207,182,1.139,183,1.281,249,2.103,286,2.814,309,1.239,310,1.555,311,0.428,320,1.952,339,1.159,344,0.765,346,1.843,358,1.3,362,2.009,385,1.371,390,1.703,396,0.925,407,0.925,410,0.925,457,1.806,461,1.453,482,2.15,483,1.089,525,0.801,563,2.674,565,1.498,566,1.452,567,1.452,568,1.452,569,1.452,571,1.452,572,1.41,573,3.776,574,1.452,575,1.452,576,1.452,577,1.452,578,1.452,579,1.452,580,1.452,581,1.452,582,2.929,583,2.604,584,2.359,585,1.452,586,1.452,587,2.359,588,1.452,589,1.452,590,1.281,591,1.342,592,1.407,593,1.478,594,1.583,595,1.64,596,1.64,597,1.671,598,1.671,599,1.583,600,1.671,601,1.671,602,2.236,605,1.41,606,1.41,607,1.41,610,1.41,611,1.3,612,1.41,613,1.371,614,1.371,615,1.371,616,1.371,617,1.371,618,1.371,620,1.028,621,0.991,622,1.028,623,1.068,624,1.068,625,1.028,626,1.068,627,1.089,628,1.089,629,1.089,630,1.068,631,1.089,632,1.134,633,1.134,634,1.134,635,1.068,636,1.134,637,1.134,638,1.134,639,1.134,640,1.269,641,1.334,642,3.918,643,2.013,645,2.799,647,1.239,648,1.334,649,1.334,650,1.334,652,1.334,653,1.334,654,1.334,655,2.543,656,1.334,657,1.334,658,1.184,659,1.334,661,2.862,662,1.334,663,1.334,664,1.334,665,1.334,666,1.334,667,1.159,994,1.159,1004,3.452,1012,2.168,1042,1.371,1076,1.549,1077,1.549,1078,1.549,1079,1.452,1080,1.549,1081,1.549,1082,1.549,1083,1.549,1084,1.549,1085,1.549,1086,1.549,1087,1.549,1088,1.549,1089,2.359,1090,1.452,1091,1.498,1092,1.498,1093,1.498,1094,1.498,1095,1.498,1096,1.498,1097,1.498,1098,1.498,1099,1.498,1100,1.498,1101,2.291,1102,2.291,1103,1.452,1104,1.452,1105,1.452,1106,1.452,1107,1.452,1108,1.452,1109,2.359,1110,1.452,1111,1.452,1112,1.452,1113,1.452,1114,1.452,1115,1.452,1116,1.452,1117,1.452,1118,1.452,1119,1.452,1120,1.452,1121,1.452,1122,1.452,1123,1.41,1124,1.3,1125,1.41,1126,1.41,1127,1.371,1128,1.371,1129,1.371,1130,1.371,1131,1.334,1132,1.371,1133,1.334,1134,1.371,1135,1.371,1136,1.371,1137,1.371,1138,1.371,1139,1.371,1140,1.371,1141,1.334,1142,1.371,1143,1.371,1144,1.184,1145,1.371,1146,1.269,1147,1.371,1148,1.371,1149,1.371,1150,2.227,1151,1.371,1152,1.371,1153,2.227,1154,2.227,1155,2.227,1156,1.371,1157,1.371,1158,1.371,1159,1.371,1160,1.371,1161,1.334]],["title/core.html#運算子",[1089,3.232]],["body/core.html#運算子",[0,0.038,4,0.383,5,0.316,6,1.042,8,1.573,13,0.381,18,0.882,21,2.026,23,2.594,25,0.893,35,1.934,40,0.428,41,1.214,91,1.004,150,0.481,151,0.531,152,0.677,153,0.712,154,1.103,155,0.888,157,0.83,161,0.719,167,2.438,173,1.721,175,1.088,176,1.074,177,0.927,178,0.979,179,1.622,180,1.173,181,1.244,182,1.173,183,1.32,249,2.107,286,2.884,309,1.285,310,1.602,311,0.444,320,1.994,339,1.202,344,0.794,358,1.349,362,2.035,385,1.422,390,1.754,396,0.959,407,0.959,410,0.959,457,1.473,461,1.497,482,1.94,483,1.13,525,0.83,563,2.725,566,1.506,567,1.506,568,1.506,569,1.506,571,1.506,572,1.462,573,3.848,574,1.506,575,1.506,576,1.506,577,1.506,578,1.506,579,1.506,580,1.506,581,1.506,582,2.992,583,2.67,584,2.43,585,1.506,586,1.506,587,2.43,588,1.506,589,1.506,590,1.32,591,1.382,592,1.449,593,1.522,594,1.63,595,1.69,596,1.69,597,1.721,598,1.721,599,1.63,600,1.721,601,1.721,602,2.292,605,1.462,606,1.462,607,1.462,610,1.462,611,1.349,612,1.462,613,1.422,614,1.422,615,1.422,616,1.422,617,1.422,618,1.422,620,1.067,621,1.028,622,1.067,623,1.108,624,1.108,625,1.067,626,1.108,627,1.13,628,1.13,629,1.13,630,1.108,631,1.13,632,1.177,633,1.177,634,1.177,635,1.108,636,1.177,637,1.177,638,1.177,639,1.177,640,1.316,641,1.384,642,3.978,643,2.074,645,2.859,647,1.285,648,1.384,649,1.384,650,1.384,652,1.384,653,1.384,654,1.384,655,2.607,656,1.384,657,1.384,658,1.228,659,1.384,661,2.924,662,1.384,663,1.384,664,1.384,665,1.384,666,1.384,667,1.202,1004,3.51,1012,2.234,1042,1.422,1089,1.506,1090,1.506,1091,1.554,1092,1.554,1093,1.554,1094,1.554,1095,1.554,1096,1.554,1097,1.554,1098,1.554,1099,1.554,1100,1.554,1101,2.36,1102,2.36,1103,1.506,1104,1.506,1105,1.506,1106,1.506,1107,1.506,1108,1.506,1109,2.43,1110,1.506,1111,1.506,1112,1.506,1113,1.506,1114,1.506,1115,1.506,1116,1.506,1117,1.506,1118,1.506,1119,1.506,1120,1.506,1121,1.506,1122,1.506,1123,1.462,1124,1.349,1125,1.462,1126,1.462,1127,1.422,1128,1.422,1129,1.422,1130,1.422,1131,1.384,1132,1.422,1133,1.384,1134,1.422,1135,1.422,1136,1.422,1137,1.422,1138,1.422,1139,1.422,1140,1.422,1141,1.384,1142,1.422,1143,1.422,1144,1.228,1145,1.422,1146,1.316,1147,1.422,1148,1.422,1149,1.422,1150,2.294,1151,1.422,1152,1.422,1153,2.294,1154,2.294,1155,2.294,1156,1.422,1157,1.422,1158,1.422,1159,1.422,1160,1.422,1161,1.384]],["title/core.html#嚴格相等-寬鬆相等",[1101,2.355,1102,2.355]],["body/core.html#嚴格相等-寬鬆相等",[0,0.038,4,0.338,5,0.293,6,0.91,8,1.463,13,0.314,18,0.877,21,1.849,23,2.525,25,0.708,40,0.378,41,1.213,91,1.003,150,0.425,151,0.434,152,0.576,153,0.528,154,1.056,155,0.887,157,1.111,161,0.719,167,2.859,173,2.162,175,0.863,176,1.074,177,1.164,178,1.23,179,1.902,180,1.474,181,1.562,182,1.474,183,1.658,249,2.108,286,2.882,310,2.012,320,2.338,339,1.608,344,1.062,358,1.805,362,1.799,390,2.203,407,1.283,461,1.881,482,2.073,525,1.111,563,3.129,583,1.761,590,1.658,591,1.736,592,1.82,593,1.912,594,2.048,595,2.123,596,2.123,597,2.162,598,2.162,599,2.048,600,2.162,601,2.162,602,2.765,605,1.956,606,1.956,607,1.956,610,1.956,611,1.805,612,1.956,613,1.902,614,1.902,615,1.902,616,1.902,617,1.902,618,1.902,620,1.427,621,1.376,622,1.427,623,1.482,624,1.482,625,1.427,626,1.482,627,1.512,628,1.512,629,1.512,630,1.482,631,1.512,632,1.574,633,1.574,634,1.574,635,1.482,636,1.574,637,1.574,638,1.574,639,1.574,640,1.761,641,1.852,642,4.438,643,2.605,645,3.353,647,1.719,648,1.852,649,1.852,650,1.852,652,1.852,653,1.852,654,1.852,655,3.145,656,1.852,657,1.852,658,1.643,659,1.852,661,3.428,662,1.852,663,1.852,664,1.852,665,1.852,666,1.852,667,1.608,1004,3.145,1012,2.806,1042,1.902,1101,1.956,1102,1.956,1103,2.015,1104,2.015,1105,2.015,1106,2.015,1107,2.015,1108,2.015,1109,3.053,1110,2.015,1111,2.015,1112,2.015,1113,2.015,1114,2.015,1115,2.015,1116,2.015,1117,2.015,1118,2.015,1119,2.015,1120,2.015,1121,2.015,1122,2.015,1123,1.956,1124,1.805,1125,1.956,1126,1.956,1127,1.902,1128,1.902,1129,1.902,1130,1.902,1131,1.852,1132,1.902,1133,1.852,1134,1.902,1135,1.902,1136,1.902,1137,1.902,1138,1.902,1139,1.902,1140,1.902,1141,1.852,1142,1.902,1143,1.902,1144,1.643,1145,1.902,1146,1.761,1147,1.902,1148,1.902,1149,1.902,1150,2.882,1151,1.902,1152,1.902,1153,2.882,1154,2.882,1155,2.882,1156,1.902,1157,1.902,1158,1.902,1159,1.902,1160,1.902,1161,1.852]],["title/core.html#Truthy",[613,3.051]],["body/core.html#Truthy",[0,0.038,4,0.358,5,0.298,6,0.888,8,1.418,13,0.33,18,0.85,23,2.023,25,0.614,40,0.397,41,1.48,91,0.87,150,0.446,151,0.439,152,0.583,153,0.458,154,0.791,155,0.769,157,1.459,161,0.877,175,0.748,176,0.93,177,1.009,178,1.066,179,1.224,180,1.277,181,1.354,182,1.277,183,1.437,249,1.94,310,2.455,339,2.111,344,1.394,358,2.37,362,1.886,390,2.689,407,1.685,461,1.63,482,1.334,583,2.312,590,1.437,591,1.505,592,1.578,593,1.657,594,1.775,595,1.84,596,1.84,597,1.874,598,1.874,599,1.775,600,1.874,601,1.874,602,1.985,614,2.498,615,2.498,616,2.498,617,2.498,618,2.498,620,1.874,621,1.807,622,1.874,623,1.946,624,1.946,625,1.874,626,1.946,627,1.985,628,1.985,629,1.985,630,1.946,631,1.985,632,2.067,633,2.067,634,2.067,635,1.946,636,2.067,637,2.067,638,2.067,639,2.067,640,2.312,641,2.432,642,4.832,643,3.179,645,3.817,647,2.258,648,2.432,649,2.432,650,2.432,652,2.432,653,2.432,654,2.432,655,3.679,656,2.432,657,2.432,658,2.158,659,2.432,661,3.903,662,2.432,663,2.432,664,2.432,665,2.432,666,2.432,667,2.111,1012,3.424,1042,2.498,1123,2.569,1124,2.37,1125,2.569,1126,2.569,1127,2.498,1128,2.498,1129,2.498,1130,2.498,1131,2.432,1132,2.498,1133,2.432,1134,2.498,1135,2.498,1136,2.498,1137,2.498,1138,2.498,1139,2.498,1140,2.498,1141,2.432,1142,2.498,1143,2.498,1144,2.158,1145,2.498,1146,2.312,1147,2.498,1148,2.498,1149,2.498,1150,3.517,1151,2.498,1152,2.498,1153,3.517,1154,3.517,1155,3.517,1156,2.498,1157,2.498,1158,2.498,1159,2.498,1160,2.498,1161,2.432]],["title/core.html#邏輯運算子及函式預設值",[1127,3.051]],["body/core.html#邏輯運算子及函式預設值",[0,0.038,4,0.352,5,0.296,6,0.914,8,1.451,13,0.296,18,0.845,23,1.514,25,0.647,40,0.355,41,1.535,91,0.916,150,0.4,151,0.455,152,0.604,153,0.483,154,0.82,155,0.811,161,0.91,175,0.789,176,0.98,177,1.063,178,1.123,179,1.29,180,1.346,181,1.427,182,1.346,183,1.514,249,1.88,310,2.547,339,2.225,344,1.47,358,2.497,362,1.94,390,2.789,407,1.776,461,1.718,583,2.437,590,1.514,591,1.586,592,1.663,593,1.746,594,1.87,595,1.939,596,1.939,597,1.975,598,1.975,599,1.87,600,1.975,601,1.975,602,2.092,620,1.975,621,1.904,622,1.975,623,2.051,624,2.051,625,1.975,626,2.051,627,2.092,628,2.092,629,2.092,630,2.051,631,2.092,632,2.179,633,2.179,634,2.179,635,2.051,636,2.179,637,2.179,638,2.179,639,2.179,640,2.437,641,2.562,642,4.903,643,3.298,645,3.905,647,2.379,648,2.562,649,2.562,650,2.562,652,2.562,653,2.562,654,2.562,655,3.784,656,2.562,657,2.562,658,2.274,659,2.562,661,3.993,662,2.562,663,2.562,664,2.562,665,2.562,666,2.562,667,2.225,1012,3.552,1042,2.632,1128,2.632,1129,2.632,1130,2.632,1131,2.562,1132,2.632,1133,2.562,1134,2.632,1135,2.632,1136,2.632,1137,2.632,1138,2.632,1139,2.632,1140,2.632,1141,2.562,1142,2.632,1143,2.632,1144,2.274,1145,2.632,1146,2.437,1147,2.632,1148,2.632,1149,2.632,1150,3.648,1151,2.632,1152,2.632,1153,3.648,1154,3.648,1155,3.648,1156,2.632,1157,2.632,1158,2.632,1159,2.632,1160,2.632,1161,2.562]],["title/core.html#物件記憶體空間",[1162,5.533]],["body/core.html#物件記憶體空間",[0,0.038,4,0.38,5,0.309,6,1.126,8,1.355,13,0.418,18,0.842,21,0.45,25,1.038,35,0.551,40,0.453,88,0.695,91,1.352,150,0.515,151,0.565,152,0.75,153,0.819,154,0.927,155,1.235,157,0.952,158,1.149,161,1.308,169,1.726,173,0.708,175,1.164,176,1.332,177,1.275,178,1.347,179,1.414,180,1.308,181,1.386,182,1.099,183,1.236,249,1.578,254,0.909,255,0.853,308,0.569,310,0.659,311,1.116,316,0.798,341,0.944,344,1.889,356,3.8,362,0.996,369,0.919,390,0.722,394,1.942,396,0.637,402,1.032,404,0.944,407,0.637,410,2.129,454,0.944,457,1.379,461,1.402,469,1.199,482,1.541,483,1.295,486,3.383,488,2.517,525,0.952,537,2.092,549,0.781,562,1.295,590,1.236,591,1.295,592,1.357,593,1.426,594,1.527,595,1.2,596,1.2,597,1.222,598,1.222,599,1.157,600,1.222,601,0.708,620,0.708,621,0.683,622,0.708,623,0.736,624,0.736,625,0.708,626,0.736,627,0.75,628,0.75,629,0.75,630,0.736,631,0.75,632,0.781,633,0.781,634,0.781,635,0.736,636,0.781,637,0.781,638,0.781,639,0.781,645,2.209,647,1.942,655,2.608,660,2.367,667,0.798,668,3.023,669,3.49,670,1.258,671,5.127,672,1.328,674,2.646,675,2.443,676,1.533,677,2.646,678,2.646,679,1.533,680,2.646,681,1.416,682,1.416,683,1.416,684,1.416,685,1.416,686,1.416,687,1.328,688,1.416,689,1.416,690,1.328,691,1.328,693,3.023,694,1.105,695,1.328,696,2.291,697,1.328,698,1.328,700,1.328,702,2.07,703,1.149,704,1.629,705,1.328,706,1.328,707,1.328,708,1.328,709,1.328,710,2.291,711,3.023,712,1.328,714,1.328,715,2.863,717,2.863,718,1.321,719,1.258,720,1.258,721,1.258,722,1.258,723,1.258,724,1.149,725,1.586,726,1.105,727,2.116,729,1.258,730,1.258,731,1.258,732,1.258,734,1.199,735,1.199,737,1.983,738,1.199,739,1.199,740,1.199,741,1.149,742,1.199,743,1.199,744,1.199,746,1.983,747,1.149,748,1.983,749,1.149,750,1.149,751,2.616,752,2.616,753,1.149,754,1.149,755,1.149,756,3.113,758,1.149,759,1.149,760,1.149,761,1.983,762,2.995,765,1.78,766,1.105,767,1.726,768,1.105,769,1.908,770,1.105,771,1.105,772,1.105,773,1.105,774,1.105,775,1.105,776,0.853,777,1.067,778,1.067,779,1.067,781,1.841,782,2.995,783,2.426,784,1.067,785,1.726,786,1.546,787,1.032,788,1.032,789,1.032,790,1,791,1.726,792,1,793,3.45,794,2.094,795,2.21,796,1.032,994,3.162,1014,1.908,1043,1.546,1079,1,1124,0.896,1144,1.856,1146,0.874,1163,1.712,1164,2.954,1165,2.954,1166,1.712,1167,1.712,1168,1.712,1169,1.712,1170,1.533,1171,1.533,1172,1.533,1173,1.533,1174,1.533,1175,2.646,1176,2.646,1177,1.533,1178,1.533,1179,1.533,1180,1.533,1181,1.533,1182,1.533,1183,1.416,1184,1.416,1185,1.416,1186,2.291,1187,1.416,1188,1.416,1189,1.416,1190,1.416,1191,1.416,1192,1.416,1193,1.416,1194,2.291,1195,1.416,1196,1.416,1197,1.416,1198,1.199,1199,1.328,1200,1.258,1201,1.328,1202,1.328,1203,1.328,1204,1.328,1205,1.328,1206,1.328,1207,1.328,1208,1.328,1209,2.291,1210,1.328,1211,1.328,1212,1.328,1213,1.328,1214,1.328,1215,1.328,1216,1.258,1217,1.258,1218,1.258,1219,1.258,1220,1.258,1221,1.258,1222,1.258,1223,2.795,1224,1.258,1225,1.258,1226,1.258,1227,1.258,1228,1.258,1229,1.258,1230,1.199,1231,1.199,1232,1.199,1233,1.199,1234,1.199,1235,1.199,1236,1.199,1237,1.199,1238,1.199,1239,1.199,1240,1.199,1241,1.199,1242,1.199,1243,1.199,1244,1.199,1245,1.199,1246,1.199,1247,1.199,1248,1.199,1249,1.199,1250,1.199,1251,1.199,1252,1.149,1253,1.149,1254,1.149,1255,1.149,1256,2.616,1257,1.983,1258,1.983,1259,1.149,1260,1.983,1261,1.983,1262,1.149,1263,1.149,1264,1.149,1265,1.149,1266,1.149,1267,1.149,1268,1.149,1269,1.983,1270,1.149,1271,1.149,1272,1,1273,1.105,1274,1.105,1275,1.105,1276,1.105,1277,1.105,1278,1.841,1279,1.105,1280,1.067,1281,1.841,1282,1.067,1283,1.067,1284,1.067,1285,1.067]],["title/core.html#純值無法新增屬性",[1170,4.956]],["body/core.html#純值無法新增屬性",[0,0.038,4,0.38,5,0.31,6,1.122,8,1.38,13,0.418,18,0.848,21,0.475,25,1.057,35,0.582,40,0.448,88,0.734,91,1.382,150,0.51,151,0.566,152,0.751,153,0.819,154,0.945,155,1.261,157,0.997,158,1.213,161,1.318,169,1.807,173,0.747,175,1.189,176,1.366,177,1.314,178,1.387,179,1.461,180,1.356,181,1.437,182,1.145,183,1.288,249,1.608,254,0.953,255,0.9,308,0.6,310,0.695,311,1.145,316,0.842,341,0.996,344,1.664,356,3.854,362,1.037,369,0.97,390,0.762,394,2.023,396,0.672,402,1.089,404,0.996,407,0.672,410,0.672,454,0.996,457,1.437,461,1.46,469,1.266,482,1.592,483,1.356,486,3.476,488,2.621,525,0.997,537,0.97,549,0.824,562,1.356,590,1.288,591,1.348,592,1.414,593,1.485,594,1.59,595,1.257,596,1.257,597,1.28,598,1.28,599,1.212,600,1.28,601,0.747,620,0.747,621,0.72,622,0.747,623,0.776,624,0.776,625,0.747,626,0.776,627,0.792,628,0.792,629,0.792,630,0.776,631,0.792,632,0.824,633,0.824,634,0.824,635,0.776,636,0.824,637,0.824,638,0.824,639,0.824,645,2.29,647,0.9,655,2.695,660,2.454,667,0.842,681,1.494,682,1.494,683,1.494,684,1.494,685,1.494,686,1.494,687,1.401,688,1.494,689,1.494,690,1.401,691,1.401,693,3.148,694,1.167,695,1.401,696,2.4,697,1.401,698,1.401,700,1.401,702,2.168,703,1.213,704,1.706,705,1.401,706,1.401,707,1.401,708,1.401,709,1.401,710,2.4,711,3.148,712,1.401,714,1.401,715,2.982,717,2.982,718,1.383,719,1.327,720,1.327,721,1.327,722,1.327,723,1.327,724,1.213,725,1.661,726,1.167,727,2.194,729,1.327,730,1.327,731,1.327,732,1.327,734,1.266,735,1.266,737,2.077,738,1.266,739,1.266,740,1.266,741,1.213,742,1.266,743,1.266,744,1.266,746,2.077,747,1.213,748,2.077,749,1.213,750,1.213,751,2.725,752,2.725,753,1.213,754,1.213,755,1.213,756,3.228,758,1.213,759,1.213,760,1.213,761,2.077,762,3.105,765,1.865,766,1.167,767,1.807,768,1.167,769,1.998,770,1.167,771,1.167,772,1.167,773,1.167,774,1.167,775,1.167,776,0.9,777,1.126,778,1.126,779,1.126,781,1.928,782,3.085,783,2.515,784,1.126,785,1.807,786,1.619,787,1.089,788,1.089,789,1.089,790,1.055,791,1.807,792,1.055,793,3.554,794,2.157,795,2.302,796,1.089,994,2.938,1014,1.998,1043,1.619,1079,1.055,1124,0.945,1144,1.474,1146,0.922,1171,1.618,1172,1.618,1173,1.618,1174,1.618,1175,2.772,1176,2.772,1177,1.618,1178,1.618,1179,1.618,1180,1.618,1181,1.618,1182,1.618,1183,1.494,1184,1.494,1185,1.494,1186,2.4,1187,1.494,1188,1.494,1189,1.494,1190,1.494,1191,1.494,1192,1.494,1193,1.494,1194,2.4,1195,1.494,1196,1.494,1197,1.494,1198,1.266,1199,1.401,1200,1.327,1201,1.401,1202,1.401,1203,1.401,1204,1.401,1205,1.401,1206,1.401,1207,1.401,1208,1.401,1209,2.4,1210,1.401,1211,1.401,1212,1.401,1213,1.401,1214,1.401,1215,1.401,1216,1.327,1217,1.327,1218,1.327,1219,1.327,1220,1.327,1221,1.327,1222,1.327,1223,2.898,1224,1.327,1225,1.327,1226,1.327,1227,1.327,1228,1.327,1229,1.327,1230,1.266,1231,1.266,1232,1.266,1233,1.266,1234,1.266,1235,1.266,1236,1.266,1237,1.266,1238,1.266,1239,1.266,1240,1.266,1241,1.266,1242,1.266,1243,1.266,1244,1.266,1245,1.266,1246,1.266,1247,1.266,1248,1.266,1249,1.266,1250,1.266,1251,1.266,1252,1.213,1253,1.213,1254,1.213,1255,1.213,1256,2.725,1257,2.077,1258,2.077,1259,1.213,1260,2.077,1261,2.077,1262,1.213,1263,1.213,1264,1.213,1265,1.213,1266,1.213,1267,1.213,1268,1.213,1269,2.077,1270,1.213,1271,1.213,1272,1.055,1273,1.167,1274,1.167,1275,1.167,1276,1.167,1277,1.167,1278,1.928,1279,1.167,1280,1.126,1281,1.928,1282,1.126,1283,1.126,1284,1.126,1285,1.126]],["title/core.html#深淺拷貝",[1183,4.576]],["body/core.html#深淺拷貝",[0,0.038,4,0.381,5,0.311,6,1.12,8,1.399,13,0.42,18,0.843,21,0.495,25,1.048,35,0.607,40,0.447,91,1.357,150,0.51,151,0.564,152,0.749,153,0.815,154,0.935,155,1.243,157,0.607,158,1.265,161,1.322,169,1.874,175,1.168,176,1.392,177,1.344,178,1.419,179,1.498,180,1.394,181,1.478,182,1.181,183,1.329,249,1.591,254,0.988,255,0.939,308,0.626,310,0.725,311,1.167,316,0.878,341,1.039,344,1.707,356,3.896,362,1.07,369,1.012,390,0.794,394,2.088,396,0.701,402,1.136,404,1.039,407,0.701,454,1.039,457,1.483,461,1.507,469,1.32,482,1.633,483,1.406,486,3.549,488,2.705,525,1.033,537,1.012,549,0.86,562,1.406,590,1.329,591,1.391,592,1.459,593,1.532,594,1.641,595,1.303,596,1.303,597,1.327,598,1.327,599,1.257,600,1.327,601,0.78,620,0.78,621,0.752,622,0.78,623,0.81,624,0.81,625,0.78,626,0.81,627,0.826,628,0.826,629,0.826,630,0.81,631,0.826,632,0.86,633,0.86,634,0.86,635,0.81,636,0.86,637,0.86,638,0.86,639,0.86,645,2.355,647,0.939,655,2.763,660,2.524,667,0.878,690,1.462,691,1.462,693,3.249,694,1.217,695,1.462,696,2.488,697,1.462,698,1.462,700,1.462,702,2.248,703,1.265,704,1.769,705,1.462,706,1.462,707,1.462,708,1.462,709,1.462,710,2.488,711,3.249,712,1.462,714,1.462,715,3.077,717,3.077,718,1.434,719,1.385,720,1.385,721,1.385,722,1.385,723,1.385,724,1.265,725,1.722,726,1.217,727,2.256,729,1.385,730,1.385,731,1.385,732,1.385,734,1.32,735,1.32,737,2.154,738,1.32,739,1.32,740,1.32,741,1.265,742,1.32,743,1.32,744,1.32,746,2.154,747,1.265,748,2.154,749,1.265,750,1.265,751,2.812,752,2.812,753,1.265,754,1.265,755,1.265,756,3.319,758,1.265,759,1.265,760,1.265,761,2.154,762,3.193,765,1.933,766,1.217,767,1.874,768,1.217,769,2.072,770,1.217,771,1.217,772,1.217,773,1.217,774,1.217,775,1.217,776,0.939,777,1.174,778,1.174,779,1.174,781,1.999,782,3.156,783,2.587,784,1.174,785,1.874,786,1.678,787,1.136,788,1.136,789,1.136,790,1.101,791,1.874,792,1.101,793,3.636,794,2.207,795,2.375,796,1.136,994,2.584,1014,2.072,1043,1.678,1144,1.528,1146,0.962,1184,1.558,1185,1.558,1186,2.488,1187,1.558,1188,1.558,1189,1.558,1190,1.558,1191,1.558,1192,1.558,1193,1.558,1194,2.488,1195,1.558,1196,1.558,1197,1.558,1198,1.32,1199,1.462,1200,1.385,1201,1.462,1202,1.462,1203,1.462,1204,1.462,1205,1.462,1206,1.462,1207,1.462,1208,1.462,1209,2.488,1210,1.462,1211,1.462,1212,1.462,1213,1.462,1214,1.462,1215,1.462,1216,1.385,1217,1.385,1218,1.385,1219,1.385,1220,1.385,1221,1.385,1222,1.385,1223,2.98,1224,1.385,1225,1.385,1226,1.385,1227,1.385,1228,1.385,1229,1.385,1230,1.32,1231,1.32,1232,1.32,1233,1.32,1234,1.32,1235,1.32,1236,1.32,1237,1.32,1238,1.32,1239,1.32,1240,1.32,1241,1.32,1242,1.32,1243,1.32,1244,1.32,1245,1.32,1246,1.32,1247,1.32,1248,1.32,1249,1.32,1250,1.32,1251,1.32,1252,1.265,1253,1.265,1254,1.265,1255,1.265,1256,2.812,1257,2.154,1258,2.154,1259,1.265,1260,2.154,1261,2.154,1262,1.265,1263,1.265,1264,1.265,1265,1.265,1266,1.265,1267,1.265,1268,1.265,1269,2.154,1270,1.265,1271,1.265,1272,1.101,1273,1.217,1274,1.217,1275,1.217,1276,1.217,1277,1.217,1278,1.999,1279,1.217,1280,1.174,1281,1.999,1282,1.174,1283,1.174,1284,1.174,1285,1.174]],["title/core.html#陣列",[1198,3.876]],["body/core.html#陣列",[0,0.038,4,0.385,5,0.314,6,1.103,8,1.441,13,0.424,18,0.841,21,0.545,25,1.057,35,0.668,40,0.452,91,1.357,150,0.516,151,0.57,152,0.757,153,0.824,154,0.941,155,1.248,157,0.668,158,1.392,161,1.338,169,2.031,175,1.167,176,1.384,177,1.305,178,1.378,179,1.421,180,1.267,181,1.342,182,0.981,183,1.103,249,1.646,254,1.071,255,1.033,308,0.689,310,0.798,311,1.217,316,0.966,341,1.143,344,1.619,356,3.988,362,1.148,369,1.113,390,0.874,394,2.238,396,0.771,402,1.25,404,1.143,457,1.59,461,1.251,482,1.549,486,2.476,488,1.339,525,1.12,537,1.113,549,0.946,562,1.524,590,1.103,591,1.155,592,1.211,593,1.272,594,1.362,595,0.842,596,0.842,597,0.858,598,0.858,599,0.812,600,0.858,601,0.858,620,0.858,621,0.827,622,0.858,623,0.891,624,0.891,625,0.858,626,0.891,627,0.908,628,0.908,629,0.908,630,0.891,631,0.908,632,0.946,633,0.946,634,0.946,635,0.891,636,0.946,637,0.946,638,0.946,639,0.946,660,2.684,667,0.966,715,3.3,717,3.3,718,1.555,719,1.523,720,1.523,721,1.523,722,1.523,723,1.523,724,1.392,725,1.867,726,1.339,727,2.4,729,1.523,730,1.523,731,1.523,732,1.523,734,1.453,735,1.453,737,2.335,738,1.453,739,1.453,740,1.453,741,1.392,742,1.453,743,1.453,744,1.453,746,2.335,747,1.392,748,2.335,749,1.392,750,1.392,751,3.015,752,3.015,753,1.392,754,1.392,755,1.392,756,3.53,758,1.392,759,1.392,760,1.392,761,2.335,762,3.396,765,2.096,766,1.339,767,2.031,768,1.339,769,2.246,770,1.339,771,1.339,772,1.339,773,1.339,774,1.339,775,1.339,776,1.033,777,1.292,778,1.292,779,1.292,781,2.167,782,3.317,783,2.751,784,1.292,785,2.031,786,1.819,787,1.25,788,1.25,789,1.25,790,1.211,791,2.031,792,1.211,793,3.821,794,2.319,795,2.547,796,1.25,994,2.73,1014,2.246,1043,1.819,1144,0.987,1186,1.608,1194,1.608,1199,1.608,1200,1.523,1201,1.608,1202,1.608,1203,1.608,1204,1.608,1205,1.608,1206,1.608,1207,1.608,1208,1.608,1209,2.697,1210,1.608,1211,1.608,1212,1.608,1213,1.608,1214,1.608,1215,1.608,1216,1.523,1217,1.523,1218,1.523,1219,1.523,1220,1.523,1221,1.523,1222,1.523,1223,3.169,1224,1.523,1225,1.523,1226,1.523,1227,1.523,1228,1.523,1229,1.523,1230,1.453,1231,1.453,1232,1.453,1233,1.453,1234,1.453,1235,1.453,1236,1.453,1237,1.453,1238,1.453,1239,1.453,1240,1.453,1241,1.453,1242,1.453,1243,1.453,1244,1.453,1245,1.453,1246,1.453,1247,1.453,1248,1.453,1249,1.453,1250,1.453,1251,1.453,1252,1.392,1253,1.392,1254,1.392,1255,1.392,1256,3.015,1257,2.335,1258,2.335,1259,1.392,1260,2.335,1261,2.335,1262,1.392,1263,1.392,1264,1.392,1265,1.392,1266,1.392,1267,1.392,1268,1.392,1269,2.335,1270,1.392,1271,1.392,1272,1.211,1273,1.339,1274,1.339,1275,1.339,1276,1.339,1277,1.339,1278,2.167,1279,1.339,1280,1.292,1281,2.167,1282,1.292,1283,1.292,1284,1.292,1285,1.292]],["title/core.html#JSON",[486,3.051]],["body/core.html#JSON",[0,0.038,4,0.379,5,0.307,6,1.1,8,1.423,13,0.411,18,0.841,25,1.06,35,0.79,40,0.442,91,1.321,150,0.486,151,0.553,152,0.735,153,0.813,154,0.938,155,1.232,157,0.79,158,1.646,161,1.357,169,2.333,175,1.137,176,1.318,177,1.126,178,1.189,179,1.366,180,1.126,181,1.194,182,1.126,183,1.267,249,1.738,254,1.23,255,1.222,310,0.944,311,1.249,316,1.143,341,1.352,344,1.23,356,4.137,362,0.626,369,1.316,390,1.033,394,1.991,396,0.912,402,1.477,404,1.352,457,0.868,461,1.437,482,0.722,486,2.202,488,1.583,525,1.286,549,1.119,562,1.75,590,1.267,591,1.327,592,1.391,593,1.461,594,1.565,595,0.995,596,0.995,597,1.014,598,1.014,599,0.96,600,1.014,601,1.014,620,1.014,621,0.978,622,1.014,623,1.053,624,1.053,625,1.014,626,1.053,627,1.074,628,1.074,629,1.074,630,1.053,631,1.074,632,1.119,633,1.119,634,1.119,635,1.053,636,1.119,637,1.119,638,1.119,639,1.119,660,2.975,667,1.143,718,1.096,725,1.316,727,1.119,734,1.717,735,1.717,737,2.681,738,1.717,739,1.717,740,1.717,741,1.646,742,1.717,743,1.717,744,1.717,746,2.681,747,1.646,748,2.681,749,1.646,750,1.646,751,3.393,752,3.393,753,1.646,754,1.646,755,1.646,756,3.913,758,1.646,759,1.646,760,1.646,761,2.681,762,3.764,765,2.407,766,1.583,767,2.333,768,1.583,769,2.579,770,1.583,771,1.583,772,1.583,773,1.583,774,1.583,775,1.583,776,1.222,777,1.527,778,1.527,779,1.527,781,2.489,782,3.6,783,3.049,784,1.527,785,2.333,786,2.09,787,1.477,788,1.477,789,1.477,790,1.432,791,2.333,792,1.432,793,4.147,794,2.517,795,2.866,796,1.477,994,2.716,1014,2.579,1043,2.09,1216,1.801,1217,1.801,1218,1.801,1219,1.801,1220,1.801,1221,1.801,1222,1.801,1223,3.512,1224,1.801,1225,1.801,1226,1.801,1227,1.801,1228,1.801,1229,1.801,1230,1.717,1231,1.717,1232,1.717,1233,1.717,1234,1.717,1235,1.717,1236,1.717,1237,1.717,1238,1.717,1239,1.717,1240,1.717,1241,1.717,1242,1.717,1243,1.717,1244,1.717,1245,1.717,1246,1.717,1247,1.717,1248,1.717,1249,1.717,1250,1.717,1251,1.717,1252,1.646,1253,1.646,1254,1.646,1255,1.646,1256,3.393,1257,2.681,1258,2.681,1259,1.646,1260,2.681,1261,2.681,1262,1.646,1263,1.646,1264,1.646,1265,1.646,1266,1.646,1267,1.646,1268,1.646,1269,2.681,1270,1.646,1271,1.646,1272,1.432,1273,1.583,1274,1.583,1275,1.583,1276,1.583,1277,1.583,1278,2.489,1279,1.583,1280,1.527,1281,2.489,1282,1.527,1283,1.527,1284,1.527,1285,1.527]],["title/core.html#function",[161,0.761]],["body/core.html#function",[0,0.038,4,0.381,5,0.308,6,1.093,8,1.448,13,0.413,18,0.842,25,1.046,35,0.833,40,0.44,91,1.354,150,0.482,151,0.548,152,0.728,153,0.806,154,0.92,155,1.26,161,1.359,175,1.165,176,1.355,177,1.168,178,1.233,179,1.416,180,1.176,181,1.246,182,1.176,183,1.323,249,1.727,254,1.284,310,0.995,311,1.277,316,1.205,341,1.425,344,1.284,356,4.182,362,0.661,369,1.388,394,2.078,396,0.962,402,1.558,404,1.425,457,0.915,461,1.5,482,0.761,525,1.343,549,1.18,562,1.827,590,1.323,591,1.385,592,1.452,593,1.525,594,1.634,595,1.05,596,1.05,597,1.069,598,1.069,599,1.013,600,1.069,601,1.069,620,1.069,621,1.031,622,1.069,623,1.111,624,1.111,625,1.069,626,1.111,627,1.133,628,1.133,629,1.133,630,1.111,631,1.133,632,1.18,633,1.18,634,1.18,635,1.111,636,1.18,637,1.18,638,1.18,639,1.18,660,3.069,667,1.205,718,1.156,725,1.388,727,1.18,746,2.8,747,1.736,748,2.8,749,1.736,750,1.736,751,3.519,752,3.519,753,1.736,754,1.736,755,1.736,756,4.037,758,1.736,759,1.736,760,1.736,761,2.8,762,3.883,765,2.513,766,1.67,767,2.436,768,1.67,769,2.693,770,1.67,771,1.67,772,1.67,773,1.67,774,1.67,775,1.67,776,1.288,777,1.611,778,1.611,779,1.611,781,2.598,782,3.689,783,3.146,784,1.611,785,2.436,786,2.182,787,1.558,788,1.558,789,1.558,790,1.51,791,2.436,792,1.51,793,4.25,794,2.58,795,2.972,796,1.558,994,2.803,1014,2.693,1043,2.182,1223,3.159,1230,1.811,1231,1.811,1232,1.811,1233,1.811,1234,1.811,1235,1.811,1236,1.811,1237,1.811,1238,1.811,1239,1.811,1240,1.811,1241,1.811,1242,1.811,1243,1.811,1244,1.811,1245,1.811,1246,1.811,1247,1.811,1248,1.811,1249,1.811,1250,1.811,1251,1.811,1252,1.736,1253,1.736,1254,1.736,1255,1.736,1256,3.519,1257,2.8,1258,2.8,1259,1.736,1260,2.8,1261,2.8,1262,1.736,1263,1.736,1264,1.736,1265,1.736,1266,1.736,1267,1.736,1268,1.736,1269,2.8,1270,1.736,1271,1.736,1272,1.51,1273,1.67,1274,1.67,1275,1.67,1276,1.67,1277,1.67,1278,2.598,1279,1.67,1280,1.611,1281,2.598,1282,1.611,1283,1.611,1284,1.611,1285,1.611]],["title/core.html#立即函式-IIFE",[1252,3.715]],["body/core.html#立即函式-IIFE",[0,0.038,4,0.387,5,0.31,6,1.087,8,1.524,13,0.419,18,0.824,25,1.029,35,0.989,40,0.441,91,1.377,150,0.479,151,0.546,152,0.724,153,0.802,154,0.942,155,1.29,161,1.351,175,1.185,176,1.36,177,1.064,178,1.124,179,1.291,180,0.866,181,0.917,182,0.866,183,0.974,249,1.603,254,0.945,310,1.182,311,1.308,316,1.431,341,1.692,344,1.471,356,4.17,362,0.784,369,1.648,394,2.381,396,1.142,402,1.85,404,1.692,457,1.086,461,1.104,482,0.904,549,1.401,590,0.974,591,1.02,592,1.069,593,1.123,594,1.202,595,1.246,596,1.246,597,1.27,598,1.27,599,1.202,600,1.27,601,1.27,620,1.27,621,1.224,622,1.27,623,1.319,624,1.319,625,1.27,626,1.319,627,1.345,628,1.345,629,1.345,630,1.319,631,1.345,632,1.401,633,1.401,634,1.401,635,1.319,636,1.401,637,1.401,638,1.401,639,1.401,660,3.379,718,1.372,725,1.648,727,1.401,762,4.275,765,2.879,766,1.982,767,2.791,768,1.982,769,3.086,770,1.982,771,1.982,772,1.982,773,1.982,774,1.982,775,1.982,776,1.53,777,1.912,778,1.912,779,1.912,781,2.977,782,3.974,783,3.463,784,1.912,785,2.791,786,2.5,787,1.85,788,1.85,789,1.85,790,1.793,791,2.791,792,1.793,793,4.578,794,2.779,795,3.327,796,1.85,994,3.086,1043,2.5,1223,2.879,1253,2.061,1254,2.061,1255,2.061,1256,3.938,1257,3.208,1258,3.208,1259,2.061,1260,3.208,1261,3.208,1262,2.061,1263,2.061,1264,2.061,1265,2.061,1266,2.061,1267,2.061,1268,2.061,1269,3.208,1270,2.061,1271,2.061,1272,1.793,1273,1.982,1274,1.982,1275,1.982,1276,1.982,1277,1.982,1278,2.977,1279,1.982,1280,1.912,1281,2.977,1282,1.912,1283,1.912,1284,1.912,1285,1.912]],["title/core.html#參數",[1272,3.232]],["body/core.html#參數",[0,0.038,4,0.396,5,0.317,6,1.108,8,1.63,13,0.435,18,0.798,25,1.09,40,0.466,91,1.452,150,0.508,151,0.578,152,0.767,153,0.849,154,0.998,155,1.366,161,1.331,175,1.25,176,1.413,177,0.89,178,0.94,179,1.079,249,1.452,254,1.23,311,1.385,316,1.862,341,2.202,344,1.23,356,4.386,394,2.905,396,1.486,404,2.202,457,1.414,482,1.176,660,3.861,718,1.786,725,2.144,727,1.823,767,2.333,776,1.991,777,2.489,778,2.489,779,2.489,781,3.631,782,4.394,783,3.958,784,2.489,785,3.404,786,3.049,787,2.407,788,2.407,789,2.407,790,2.333,791,3.404,792,2.333,793,5.062,794,3.072,795,3.902,796,2.407,994,1.862,1043,2.09,1223,3.512,1273,2.579,1274,2.579,1275,2.579,1276,2.579,1277,2.579,1278,3.631,1279,2.579,1280,2.489,1281,3.631,1282,2.489,1283,2.489,1284,2.489,1285,2.489]],["title/core.html#閉包-Closure",[341,2.29,1280,2.587]],["body/core.html#閉包-Closure",[0,0.038,4,0.387,5,0.307,6,1.152,8,1.649,13,0.428,18,0.792,25,1.113,40,0.441,91,1.46,150,0.496,151,0.565,152,0.75,153,0.83,154,1.018,155,1.394,161,1.301,175,1.257,176,1.562,177,1.067,178,1.127,179,1.294,249,1.399,254,1.475,311,1.484,356,4.454,394,3.305,396,1.782,404,2.641,660,4.191,718,2.141,785,3.874,786,3.47,787,2.887,788,2.887,789,2.887,790,2.798,791,3.874,792,2.798,793,5.375,794,3.262,795,4.314,796,2.887,1043,2.506,1223,3.997,1281,4.132,1282,2.985,1283,2.985,1284,2.985,1285,2.985]],["title/core.html#函式工廠",[1286,5.533]],["body/core.html#函式工廠",[0,0.038,4,0.313,5,0.248,6,1.077,13,0.342,18,0.664,25,1.038,40,0.412,91,1.141,150,0.463,151,0.527,152,0.7,153,0.775,154,0.737,155,1.009,161,1.305,164,3.704,175,0.982,176,1.221,177,1.324,178,1.398,179,1.606,180,1.676,181,1.777,182,1.676,254,2.61,311,1.542,396,2.85,410,2.211,593,2.803,643,2.962,660,4.993,785,5.231,786,4.965,790,4.475,791,3.472,799,8.021,800,5.324,801,5.324,802,5.324,803,6.862,804,5.324,805,5.324,1287,5.944,1288,5.944,1289,5.944]],["title/core.html#this",[]],["body/core.html#this",[0,0.038,4,0.371,5,0.308,6,1.092,13,0.39,18,0.818,21,0.742,25,0.857,40,0.461,91,1.214,150,0.535,151,0.6,152,0.728,153,0.742,154,0.784,155,1.074,157,2.221,161,1.271,167,1.147,173,2.852,175,1.045,176,1.142,177,1.239,178,1.308,179,1.502,180,0.797,181,0.844,182,0.797,183,0.896,249,1.774,250,1.408,254,1.378,310,2.14,311,1.089,320,1.847,344,2.258,356,2.886,362,0.722,396,1.051,397,3.395,458,1.557,482,2.16,537,2.403,540,4.804,549,1.289,558,4.655,562,1.238,563,1.169,590,0.896,591,0.938,592,0.984,593,1.033,594,1.107,645,1.345,660,2.838,675,2.336,687,3.472,718,1.263,725,1.516,726,1.824,727,1.289,776,2.231,806,2.075,807,2.336,808,2.53,809,2.53,810,3.153,811,2.698,812,1.76,813,5.665,814,3.895,816,4.009,817,2.191,818,2.191,819,2.53,820,2.53,821,2.53,822,2.53,823,6.57,824,6.57,825,2.53,826,2.53,827,4.598,828,2.53,829,6.175,830,4.009,832,2.53,836,5.665,837,4.009,838,2.53,839,4.009,840,2.53,841,2.53,842,3.136,843,4.598,844,3.59,845,2.336,846,2.336,847,3.472,848,2.191,850,2.336,851,2.336,853,3.702,854,2.336,855,2.336,856,2.336,857,2.336,858,2.336,859,2.336,860,3.289,861,2.336,862,3.289,863,2.336,864,3.289,865,2.336,866,3.289,867,2.336,994,3.999,1144,2.648,1200,2.075,1290,2.825,1291,2.825,1292,2.825,1293,2.825,1294,2.825,1295,2.825,1296,2.825,1297,2.825,1298,4.009,1299,2.825,1300,2.075,1301,2.825,1302,2.825,1303,2.825,1304,2.825,1305,2.825,1306,2.825,1307,2.825,1308,2.825,1309,2.825,1310,2.825,1311,4.476,1312,2.825,1313,2.825,1314,2.825,1315,2.825,1316,2.825,1317,7.685,1318,2.825,1319,2.825,1320,2.825,1321,2.825,1322,2.825,1323,2.825,1324,2.825,1325,3.702,1326,3.702,1327,2.825,1328,2.825,1329,2.825,1330,2.825,1331,2.825,1332,2.825,1333,2.825,1334,2.825,1335,2.53,1336,2.53,1337,2.53,1338,2.53,1339,2.53,1340,2.53,1341,2.53,1342,2.53,1343,2.53,1344,2.53,1345,2.53,1346,2.53,1347,2.53,1348,2.53,1349,4.009]],["title/core.html#new",[157,1.782]],["body/core.html#new",[0,0.038,4,0.286,5,0.275,6,1.141,13,0.312,18,0.842,21,1.357,25,0.946,40,0.375,91,1.34,150,0.478,151,0.48,152,0.638,153,0.706,154,0.866,155,1.186,157,2.548,161,1.217,173,3.662,175,1.153,176,1.434,177,1.556,178,1.643,179,1.887,180,1.457,181,1.544,182,1.457,183,1.638,249,1.09,311,1.362,344,2.609,362,1.32,397,4.549,458,2.848,562,2.263,563,2.137,590,1.638,591,1.716,592,1.799,593,1.889,594,2.023,727,2.357,842,4.892,843,6.542,844,5.109,845,4.271,846,4.271,847,5.416,848,4.006,850,4.271,851,4.271,853,5.775,854,4.271,855,4.271,856,4.271,857,4.271,858,4.271,859,4.271,860,5.13,861,4.271,862,5.13,863,4.271,864,5.13,865,4.271,866,5.13,867,4.271,1335,4.626,1336,4.626,1337,4.626,1338,4.626,1339,4.626,1340,4.626,1341,4.626,1342,4.626,1343,4.626,1344,4.626,1345,4.626,1346,4.626,1347,4.626,1348,4.626,1349,6.254]],["title/core.html#繼承",[1350,5.533]],["body/core.html#繼承",[0,0.038,4,0.291,5,0.23,6,1.03,13,0.317,18,0.774,25,0.963,40,0.382,91,1.364,150,0.429,151,0.489,152,0.649,153,0.718,154,0.881,155,1.206,157,1.707,161,1.228,175,1.174,176,1.459,177,1.583,178,1.672,179,1.92,180,2.004,181,1.584,182,1.495,183,1.681,249,1.691,308,1.761,320,1.761,344,2.891,390,3.379,482,2.63,590,1.681,591,1.761,645,3.818,842,6.44,844,5.176,848,4.111,849,4.747,868,6.217,869,7.179,870,4.747,871,5.511,872,4.747,873,4.747,875,4.747,876,4.747,877,4.747,879,6.364,881,4.747,882,4.747,883,4.747,884,null,885,4.747,886,4.747,887,4.747,888,4.747,889,4.747,890,4.747,1351,8.015,1352,5.3,1353,5.3,1354,5.3,1355,7.105,1356,5.3,1357,5.3,1358,5.3,1359,5.3,1360,5.3,1361,5.3,1362,5.3,1363,5.3,1364,7.105,1365,5.3,1366,5.3,1367,5.3,1368,5.3,1369,5.3,1370,5.3,1371,5.3]],["title/core.html#屬性特徵",[1372,5.533]],["body/core.html#屬性特徵",[0,0.038,4,0.393,5,0.293,6,0.965,13,0.404,18,0.75,21,1.801,23,2.174,25,0.929,35,1.277,40,0.465,41,0.92,91,1.316,150,0.506,151,0.552,152,0.733,153,0.811,154,0.85,155,1.164,157,1.277,161,0.942,175,1.132,176,1.408,177,1.292,178,1.364,179,1.567,180,1.635,181,1.733,182,1.119,183,1.258,249,0.837,254,1.785,255,2.89,286,3.197,308,1.317,311,1.18,316,1.849,317,3.076,318,2.914,339,1.849,362,1.013,410,1.475,482,2.549,483,1.738,525,1.277,559,2.39,572,2.249,590,1.258,591,1.317,592,1.381,593,1.451,727,1.81,786,3.033,792,2.317,847,3.076,891,2.024,892,3.893,893,6.753,894,3.552,895,3.552,896,5.193,897,6.138,898,3.552,899,3.552,900,3.552,901,3.552,902,3.552,903,3.552,904,5.193,905,5.193,906,5.193,907,5.193,908,7.337,909,4.795,910,3.552,911,5.193,912,3.552,913,4.426,914,5.193,916,3.552,917,4.26,918,5.193,919,3.552,920,3.552,921,3.552,922,3.552,923,3.552,925,3.552,926,5.893,927,5.193,928,3.552,929,2.663,930,3.28,931,3.076,932,3.552,933,5.193,934,3.28,935,3.552,936,3.552,937,3.552,938,3.552,939,3.552,940,3.552,1161,2.129,1272,2.317,1325,3.28,1326,3.28,1373,3.966,1374,3.966,1375,3.966,1376,3.966,1377,3.966,1378,3.966,1379,3.966,1380,3.966,1381,3.966,1382,3.966,1383,3.966,1384,3.966,1385,3.966,1386,3.966,1387,3.966,1388,3.966,1389,3.966,1390,3.966,1391,3.966,1392,5.798,1393,5.798,1394,3.966,1395,3.966,1396,3.966,1397,3.966,1398,3.966,1399,3.966,1400,3.552,1401,3.966,1402,3.966,1403,3.966,1404,3.966,1405,3.966,1406,3.966,1407,3.966,1408,3.966,1409,3.966,1410,3.966,1411,3.966,1412,3.966,1413,3.966,1414,3.966,1415,3.966,1416,3.966,1417,3.966]],["title/core.html#Let",[]],["body/core.html#Let",[0,0.036,4,0.361,5,0.286,6,0.898,8,1.32,13,0.394,18,0.813,40,0.474,150,0.451,151,0.513,154,0.925,344,2.714,394,4.394,537,4.005,767,4.358,943,6.682,994,3.477,1144,3.553,1418,7.46,1419,8.816,1420,7.46,1421,5.009,1422,7.46]],["title/core.html#const",[41,1.284]],["body/core.html#const",[0,0.037,4,0.363,5,0.288,6,0.981,13,0.397,18,0.707,25,1.105,40,0.438,41,2.06,91,1.26,150,0.493,151,0.561,152,0.745,153,0.825,154,1.012,155,1.114,175,1.084,330,5.427,344,2.02,396,2.441,445,4.598,482,1.933,643,3.271,660,3.35,668,7.203,807,5.427,944,5.878,945,5.878,946,5.878,947,7.306,948,6.521,949,5.091,950,5.427,1423,6.563,1424,6.563,1425,6.563,1426,6.563,1427,6.563,1428,6.563,1429,6.563,1430,6.563,1431,6.563,1432,6.563,1433,6.563,1434,6.563,1435,6.563,1436,6.563,1437,6.563]],["title/core.html#ES6-Airbnb",[704,2.29,952,3.434]],["body/core.html#ES6-Airbnb",[0,0.027,171,4.909,306,4.736,528,7.822,670,6.549,694,4.909,704,4.191,833,5.372,952,7.371,953,6.808,954,7.984,955,6.808,956,8.472,957,7.984,958,6.808,959,6.808,1438,7.6,1439,7.6,1440,7.6,1441,7.6,1442,7.6,1443,7.6]],["title/core.html#箭頭函數",[1444,4.292]],["body/core.html#箭頭函數",[0,0.038,4,0.385,5,0.324,8,1.366,13,0.425,18,0.832,25,0.565,40,0.5,41,2.229,150,0.554,151,0.485,152,0.644,153,0.608,154,0.957,157,1.343,161,1.061,177,0.929,249,1.727,254,2.171,255,3.847,267,2.238,283,5.386,308,1.385,310,1.605,311,1.035,312,3.235,320,1.385,538,3.747,546,3.069,562,4.209,635,3.663,658,1.986,782,4.281,908,4.973,926,3.064,929,2.8,930,3.449,948,3.064,950,3.449,960,3.735,962,5.386,963,3.735,964,3.735,965,3.735,966,3.735,967,3.735,968,3.735,969,3.735,970,3.735,971,2.693,972,5.386,973,3.735,974,5.386,975,6.914,976,6.914,977,3.735,978,5.386,979,5.386,1272,2.436,1421,2.8,1444,3.235,1445,4.17,1446,4.17,1447,4.17,1448,3.735,1449,4.17,1450,4.17,1451,4.17,1452,4.17,1453,4.17,1454,4.17,1455,4.17,1456,4.17,1457,4.17,1458,4.17,1459,4.17]],["title/index.html",[1460,2.035,1461,2.035,1462,2.035,1463,2.035]],["body/index.html",[0,0.035,5,0.298,29,4.278,47,4.278,79,4.942,95,4.681,267,4.932,313,3.613,372,4.115,833,5.278,949,4.942,1460,7.287,1461,7.099,1462,6.75,1463,6.434,1464,5.707,1465,5.707,1466,7.127,1467,5.707,1468,5.707,1469,5.707,1470,5.172,1471,5.707,1472,5.707,1473,5.707,1474,5.707,1475,5.707,1476,5.707,1477,5.707,1478,5.707,1479,5.707,1480,5.707,1481,7.242,1482,5.707,1483,8.229,1484,7.172,1485,5.172,1486,4.942,1487,7.172,1488,5.707,1489,5.707,1490,5.707,1491,5.707,1492,5.707,1493,7.172,1494,5.707,1495,5.707,1496,5.707,1497,4.942,1498,5.707,1499,5.707,1500,5.707,1501,5.707,1502,5.707,1503,6.622,1504,6.622,1505,5.707,1506,5.707]],["title/index.html#hexo-theme-doc-seed",[1460,2.035,1461,2.035,1462,2.035,1463,2.035]],["body/index.html#hexo-theme-doc-seed",[0,0.027,267,4.785,833,5.7,1460,6.949,1461,6.949,1462,5.584,1463,5.584,1464,6.808,1465,6.808,1466,6.914,1467,6.808,1468,6.808,1469,6.808,1470,4.909,1471,6.808,1472,6.808,1473,6.808,1474,6.808,1475,6.808,1476,6.808,1477,6.808,1478,6.808,1479,6.808]],["title/index.html#Getting-Started",[1480,3.719,1481,3.434]],["body/index.html#Getting-Started",[0,0.034,5,0.31,29,4.782,47,4.782,79,5.525,267,3.824,313,4.04,372,4.6,949,5.525,1460,7.017,1461,6.301,1462,6.301,1463,5.233,1466,5.525,1470,4.6,1481,7.093,1482,6.38,1483,8.555,1484,7.682,1485,5.539,1486,5.525,1487,7.682,1488,6.38,1489,6.38,1490,6.38,1491,6.38,1492,6.38,1493,7.682,1494,6.38,1495,6.38,1496,6.38,1497,5.525,1498,6.38,1499,6.38,1500,6.38,1501,6.38,1502,6.38]],["title/index.html#More-Informations",[1503,3.434,1504,3.434]],["body/index.html#More-Informations",[0,0.029,95,5.951,267,4.348,1466,6.283,1503,6.698,1504,6.698,1505,7.255,1506,7.255]],["title/num.html",[563,2.289]],["body/num.html",[0,0.038,4,0.275,5,0.281,6,0.807,8,1.358,13,0.418,18,0.751,25,1.175,40,0.36,41,1.781,91,1.288,150,0.406,151,0.462,152,0.755,153,0.678,154,1.139,155,1.139,161,1.263,175,1.108,176,1.378,249,1.83,308,2.229,311,1.581,525,1.569,562,3.363,563,3.421,727,4.271,1507,4.872,1508,4.364,1509,4.364,1510,4.364,1511,6.875,1512,4.364,1513,8.03,1514,8.506,1515,7.739,1516,7.173,1517,4.364,1518,4.364,1519,4.364,1520,4.364,1521,4.364,1522,6.01,1523,7.769,1524,3.036,1525,6.01,1526,4.364,1527,6.01,1528,6.01,1529,4.872,1530,6.01,1531,4.364,1532,6.875,1533,4.364,1534,6.875,1535,4.364,1536,4.364,1537,4.364]],["title/num.html#取值",[1538,5.533]],["body/num.html#取值",[0,0.038,4,0.267,5,0.211,13,0.291,25,0.883,40,0.35,41,2.053,91,1.251,150,0.394,151,0.448,152,0.595,153,0.659,154,1.149,155,1.107,161,1.217,175,1.077,176,1.339,311,1.523,563,3.66,1508,5.838,1509,5.838,1510,5.838,1511,7.926,1512,5.838,1513,8.704,1514,8.998,1515,8.036,1516,7.318,1517,5.838,1518,5.838,1519,5.838,1520,5.838,1521,5.838,1539,6.518,1540,6.518,1541,6.518,1542,6.518]],["title/num.html#補數字",[1543,5.533]],["body/num.html#補數字",[0,0.038,4,0.234,5,0.286,6,0.9,8,1.013,13,0.428,18,0.794,25,1.129,40,0.308,91,1.1,150,0.346,151,0.394,152,0.761,153,0.579,154,1.033,155,0.973,161,1.214,175,0.946,176,1.177,249,1.933,308,2.485,311,1.52,525,1.845,562,3.65,563,2.37,727,4.43,1515,6.186,1516,6.186,1522,6.7,1523,8.205,1525,6.7,1526,5.13,1527,6.7,1528,6.7,1530,6.7,1531,5.13,1532,7.46,1533,5.13,1534,7.46,1535,5.13,1536,5.13,1537,5.13,1544,5.728,1545,5.728,1546,5.728,1547,5.728,1548,5.728,1549,5.728]],["title/operators.html",[1550,4.292]],["body/operators.html",[0,0.038,4,0.406,5,0.329,6,0.894,8,1.516,13,0.393,18,0.875,21,2.178,23,2.938,25,0.913,40,0.445,88,1.563,91,1.089,150,0.552,151,0.463,152,0.615,153,0.681,154,0.835,155,0.963,161,0.926,167,1.563,173,1.592,175,0.937,176,1.165,177,0.857,178,0.905,249,1.856,311,1.159,320,1.278,345,2.319,350,3.561,351,2.985,362,2.024,394,3.703,403,2.013,457,2.007,482,2.189,543,2.398,544,2.583,545,2.485,546,1.964,547,2.398,563,1.592,590,1.221,599,1.507,602,3.632,611,2.967,640,1.964,704,2.122,718,1.72,833,2.319,1550,4.399,1551,3.446,1552,3.446,1553,6.656,1554,3.446,1555,3.446,1556,7.096,1557,7.096,1558,3.446,1559,3.446,1560,3.446,1561,3.446,1562,3.446,1563,3.446,1564,5.079,1565,3.182,1566,3.446,1567,3.446,1568,6.656,1569,3.446,1570,3.446,1571,4.399,1572,3.182,1573,3.446,1574,3.446,1575,3.446,1576,3.446,1577,3.446,1578,3.848,1579,3.446,1580,2.319,1581,3.446,1582,5.079]],["title/operators.html#What-is-the-difference-between-the-equality-operators-and",[0,0.015,611,0.967,1550,1.433,1551,1.655,1552,1.655]],["body/operators.html#What-is-the-difference-between-the-equality-operators-and",[0,0.038,4,0.31,5,0.316,6,0.702,8,1.701,13,0.338,18,0.861,21,2.481,23,3.174,25,0.791,40,0.407,91,1.12,150,0.353,151,0.401,152,0.533,153,0.59,154,0.723,155,0.991,167,2.369,175,0.964,176,1.198,320,1.938,362,1.491,390,3.191,482,2.619,602,3.897,611,3.052,704,3.217,833,3.516,1553,7.965,1554,5.225,1555,5.225,1556,8.253,1557,8.253,1558,5.225,1559,5.225,1560,5.225,1561,5.225,1583,5.834,1584,5.834,1585,5.834,1586,5.834,1587,5.834,1588,5.834,1589,5.834,1590,5.834,1591,5.834,1592,5.834,1593,5.834,1594,5.834,1595,5.834,1596,5.834,1597,5.834,1598,5.834,1599,5.834,1600,3.408]],["title/operators.html#Increment",[0,0.015,1562,3.719]],["body/operators.html#Increment",[0,0.038,4,0.403,5,0.33,13,0.405,18,0.861,25,0.832,40,0.462,88,2.492,91,1.178,150,0.52,151,0.422,152,0.561,153,0.62,154,0.761,155,1.042,161,1.183,175,1.014,176,1.261,177,1.367,178,1.444,311,1.482,350,4.022,394,4.517,457,2.768,1563,5.497,1564,7.004,1565,5.075,1566,5.497,1567,5.497,1568,8.118,1569,5.497,1570,5.497,1571,4.76,1572,5.075,1601,6.137,1602,6.137,1603,6.137,1604,6.137,1605,6.137,1606,6.137,1607,6.137]],["title/operators.html#references",[88,2.247]],["body/operators.html#references",[1571,6.392,1572,6.815]],["title/operators.html#Adding-Strings-and-Numbers",[173,1.375,563,1.375,1573,2.977]],["body/operators.html#Adding-Strings-and-Numbers",[0,0.038,4,0.412,5,0.318,6,1.03,13,0.347,18,0.851,25,0.823,40,0.326,150,0.577,151,0.418,152,0.555,153,0.614,154,0.753,249,2.073,345,3.659,350,2.609,351,4.709,362,2.307,403,3.176,543,3.783,544,4.076,545,3.921,546,3.099,547,3.783,590,1.926,599,2.379,602,2.66,640,3.099,718,2.714,1550,4.709,1571,4.709,1574,5.438,1575,5.438,1576,5.438,1577,5.438,1579,5.438,1580,3.659,1581,5.438,1582,6.956,1608,6.071]],["title/scope.html",[370,4.065]],["body/scope.html",[0,0.038,4,0.388,5,0.316,6,1.2,13,0.418,18,0.83,25,1.002,40,0.502,88,1.845,150,0.565,151,0.603,152,0.733,153,0.748,154,0.564,161,1.317,249,0.959,311,1.1,320,1.51,356,4.198,362,2.05,369,5.019,370,5.433,372,5.819,407,1.69,410,3.479,458,3.525,546,3.263,549,2.917,552,2.319,668,3.525,718,2.858,827,5.287,833,4.457,834,6.116,1609,6.392,1610,6.803,1611,4.544,1612,3.184,1613,6.392,1614,3.339,1615,4.544,1616,4.479,1617,6.392,1618,4.544,1619,4.544,1620,4.544,1621,4.544,1622,4.544,1623,3.758,1624,4.544]],["title/performance.html",[1625,5.533]],["body/performance.html",[0,0.038,4,0.355,5,0.281,6,1.117,8,1.287,13,0.388,25,0.848,40,0.467,150,0.505,151,0.545,152,0.572,153,0.633,154,0.982,155,0.749,161,1.089,171,2.848,175,0.728,218,3.647,222,4.598,223,3.647,250,2.198,254,1.358,255,4.329,267,4.9,268,5.097,289,5.643,295,2.576,310,1.698,314,1.895,350,3.593,407,2.706,525,1.42,672,5.643,727,2.013,741,2.961,812,5.868,961,4.598,1626,4.41,1627,3.95,1628,4.41,1629,5.606,1630,3.95,1631,3.95,1632,6.016,1633,3.95,1634,5.097,1635,4.41,1636,6.516,1637,6.516,1638,3.95,1639,4.41,1640,3.95,1641,3.95,1642,3.95,1643,5.606,1644,5.606,1645,3.95,1646,3.95,1647,5.176,1648,3.95,1649,3.95,1650,4.042,1651,7.092,1652,5.606,1653,3.95,1654,3.95,1655,3.95,1656,3.95,1657,5.606,1658,6.516,1659,4.41,1660,3.95,1661,2.748,1662,6.516,1663,3.95,1664,3.95,1665,2.658,1666,3.95,1667,3.95]],["title/performance.html#優化原則和方向",[1668,5.533]],["body/performance.html#優化原則和方向",[223,6.121,407,2.754,812,4.612,1627,6.63,1629,6.63,1630,6.63,1631,6.63,1632,6.121,1633,6.63,1634,6.148,1669,7.402,1670,7.402,1671,7.402,1672,7.402,1673,7.402,1674,7.402,1675,7.402,1676,7.402,1677,7.402,1678,7.402,1679,7.402,1680,7.402,1681,8.776,1682,7.402,1683,7.402,1684,7.402,1685,7.402,1686,7.402,1687,6.63,1688,7.402,1689,7.402,1690,7.86,1691,7.402,1692,6.63,1693,7.402,1694,7.402,1695,7.402,1696,7.402]],["title/performance.html#懶加載",[1697,5.533]],["body/performance.html#懶加載",[0,0.036,4,0.297,5,0.235,6,0.872,13,0.324,40,0.389,150,0.438,218,5.996,222,6.369,255,4.788,267,3.892,268,5.08,289,7.193,295,4.235,1634,5.08,1636,7.764,1637,7.764,1638,6.494,1640,6.494,1641,6.494,1642,6.494,1698,7.251,1699,7.251,1700,7.251,1701,7.251,1702,7.251,1703,7.251,1704,7.251,1705,7.251,1706,7.251,1707,7.251,1708,7.251,1709,7.251,1710,7.251]],["title/performance.html#DOM-查詢做緩存",[812,2.587,1687,3.719]],["body/performance.html#DOM-查詢做緩存",[0,0.037,4,0.357,5,0.283,6,1.121,8,1.543,13,0.39,40,0.469,150,0.443,151,0.504,267,4.682,727,3.343,812,5.435,1448,7.812,1643,7.812,1644,7.812,1645,6.561,1646,6.561,1711,7.325,1712,7.325,1713,7.325,1714,7.325,1715,7.325]],["title/performance.html#合併-DOM-插入-createDocumentFragment",[812,1.726,1647,2.291,1716,2.77,1717,2.77]],["body/performance.html#合併-DOM-插入-createDocumentFragment",[0,0.037,4,0.284,5,0.225,6,1.095,8,1.229,13,0.31,25,0.942,40,0.373,150,0.42,151,0.478,152,0.635,153,0.703,154,1.129,267,4.887,268,4.868,314,2.986,350,4.171,421,5.747,812,5.265,1647,5.747,1648,6.224,1649,6.224,1650,4.488,1651,8.483,1652,7.568,1653,6.224,1654,6.224,1655,6.224,1656,6.224,1718,6.949,1719,6.949,1720,6.949,1721,6.949,1722,6.949,1723,6.949,1724,6.949,1725,6.949,1726,6.949]],["title/performance.html#儘早執行操作-DOMContentLoaded",[1632,3.434,1727,4.152]],["body/performance.html#儘早執行操作-DOMContentLoaded",[0,0.037,4,0.313,5,0.248,13,0.341,40,0.41,150,0.462,151,0.526,161,1.229,267,4.102,310,2.942,812,4.761,1657,8.009,1728,7.641,1729,7.641,1730,7.641,1731,7.641]],["title/performance.html#事件節流",[1692,4.956]],["body/performance.html#事件節流",[0,0.038,4,0.285,5,0.226,6,1.018,13,0.311,25,0.944,40,0.374,150,0.421,151,0.479,152,0.636,153,0.704,154,0.864,155,1.183,161,1.163,175,1.151,250,3.472,254,2.144,267,3.739,268,4.88,672,7.069,1658,6.239,1660,6.239,1662,8.163,1663,6.239,1664,6.239,1665,4.198,1666,6.239,1667,6.239,1732,6.966,1733,6.966,1734,6.966,1735,6.966,1736,6.966,1737,6.966,1738,6.966,1739,6.966,1740,6.966,1741,6.966,1742,8.461,1743,6.966,1744,6.966]],["title/url.html",[67,3.573]],["body/url.html",[0,0.034,184,6.976,318,5.722,1745,7.788,1746,7.788,1747,7.788,1748,7.788,1749,9.041,1750,9.041,1751,7.788,1752,7.788,1753,5.456,1754,7.788,1755,7.788,1756,7.788,1757,7.788,1758,6.441,1759,7.788]],["title/this.html",[]],["body/this.html",[0,0.038,4,0.39,5,0.312,6,1.184,8,0.889,13,0.409,18,0.798,23,0.613,25,1.119,35,1.969,40,0.479,41,0.761,88,0.785,91,1.08,150,0.535,151,0.598,152,0.785,153,0.847,154,1.066,155,1.164,161,1.31,167,1.331,175,0.93,176,0.877,177,0.951,178,1.004,179,0.886,180,0.925,181,0.98,182,1.418,183,0.613,192,1.5,246,1.599,249,1.883,250,1.634,254,2.111,306,1.205,308,2.031,310,1.262,311,1.273,314,2.16,316,1.528,320,2.031,341,1.066,344,3.017,345,1.976,347,2.543,350,2.8,356,2.294,362,1.562,369,3.021,372,3.635,396,0.719,407,0.719,410,2.751,457,0.684,461,0.696,482,1.257,525,0.623,540,3.03,549,0.882,552,0.987,590,0.613,602,1.437,660,3.885,704,1.066,718,0.864,726,1.249,727,0.882,765,1.976,776,3.047,783,1.715,794,1.199,810,2.851,811,2.572,814,5.949,817,1.5,833,1.165,834,1.599,891,3.982,917,1.42,1612,1.354,1614,2.409,1616,1.354,1760,1.165,1761,1.732,1762,3.823,1763,4.365,1764,1.732,1765,1.732,1766,3.53,1767,2.936,1768,1.732,1769,1.732,1770,2.936,1771,4.503,1772,2.936,1773,1.933,1774,1.732,1775,1.732,1776,5.041,1777,1.732,1778,1.732,1779,5.837,1780,4.503,1781,4.503,1782,5.041,1783,2.936,1784,2.936,1785,2.936,1786,2.936,1787,4.654,1788,1.42,1789,1.933,1790,1.298,1791,3.136,1792,1.5,1793,2.936,1794,1.732,1795,1.732,1796,1.933,1797,1.732,1798,2.936,1799,2.936,1800,1.732,1801,3.823,1802,1.732,1803,1.732,1804,1.933,1805,1.732,1806,1.732,1807,1.732,1808,1.732,1809,1.933,1810,1.732,1811,1.933,1812,1.732,1813,2.936,1814,2.772,1815,1.933,1816,3.133,1817,1.129,1818,1.5,1819,1.933,1820,3.278,1821,1.933,1822,1.933,1823,1.933,1824,1.933,1825,1.732,1826,1.732,1827,1.732,1828,1.732,1829,1.732,1830,1.732,1831,1.732]],["title/this.html#物件的方法調用-As-an-object-method",[482,0.979,1760,2.003,1832,3.323]],["body/this.html#物件的方法調用-As-an-object-method",[0,0.038,4,0.34,5,0.27,6,1.151,13,0.372,18,0.721,25,1.128,40,0.447,91,1.434,150,0.503,151,0.572,152,0.76,153,0.841,154,0.926,155,1.268,161,1.213,175,1.234,176,1.174,177,1.274,178,1.345,249,1.756,316,2.664,344,3.07,350,2.456,549,2.609,718,2.556,814,7.068,891,4.247,1421,5.015,1761,5.12,1762,6.691,1763,6.454,1764,5.12,1765,5.12,1766,4.727,1833,5.716,1834,5.716,1835,6.113,1836,6.178,1837,5.716,1838,6.178,1839,7.47,1840,7.47,1841,5.12,1842,5.716,1843,5.716,1844,5.716]],["title/this.html#簡易呼叫",[1298,4.956]],["body/this.html#簡易呼叫",[0,0.038,4,0.372,5,0.295,6,1.193,8,1.096,13,0.386,18,0.802,23,1.38,25,1.127,35,2.785,40,0.464,91,0.835,150,0.523,151,0.595,152,0.79,153,0.874,154,0.976,155,1.052,161,1.223,167,2.517,175,0.718,249,1.878,311,1.432,320,1.445,344,2.8,350,2.663,356,2.828,362,2.209,369,3.327,372,4.663,410,3.492,552,2.22,765,3.735,891,4.245,1325,3.597,1326,3.597,1421,2.92,1616,3.047,1766,5.125,1767,5.551,1768,3.895,1769,3.895,1770,5.551,1771,7.048,1772,5.551,1774,3.895,1775,3.895,1776,7.45,1777,3.895,1835,5.304,1841,6.466,1845,8.646,1846,4.349,1847,7.219,1848,6.197,1849,4.349,1850,4.349,1851,4.349,1852,4.349,1853,4.349,1854,6.197]],["title/this.html#立即函式：",[1855,5.533]],["body/this.html#立即函式：",[0,0.038,4,0.361,5,0.286,6,1.145,13,0.394,18,0.765,25,0.879,40,0.474,150,0.534,151,0.557,152,0.74,153,0.656,154,0.805,161,1.309,249,1.863,344,3.064,814,4.545,891,3.311,1421,5.438,1614,5.951,1763,5.032,1835,6.488,1836,6.698,1838,5.365]],["title/this.html#Closure",[341,3.051]],["body/this.html#Closure",[0,0.038,4,0.302,5,0.24,6,1.188,13,0.33,18,0.64,25,1.002,40,0.397,91,1.08,150,0.447,151,0.509,152,0.675,153,0.747,154,1.087,155,1.255,161,1.252,175,0.929,176,1.156,177,1.253,178,1.323,179,1.52,180,1.587,181,1.681,182,2.328,249,1.56,254,2.934,311,1.273,316,2.622,344,2.804,396,2.093,461,2.024,660,4.935,1421,3.777,1778,5.039,1779,8.535,1780,7.854,1781,7.854,1782,8.158,1783,6.621,1784,6.621,1785,6.621,1786,6.621,1787,6.828,1835,5.431,1856,5.626]],["title/this.html#Callback",[776,2.758]],["body/this.html#Callback",[0,0.038,4,0.378,5,0.3,6,0.974,13,0.413,18,0.702,40,0.435,150,0.392,151,0.446,152,0.593,161,1.309,246,5.365,249,1.709,254,1.997,308,2.933,311,1.117,314,3.48,660,4.507,726,4.19,776,4.609,783,3.394,817,5.032,917,4.767,1141,3.483,1787,6.698,1788,4.767,1790,4.356,1791,5.951,1792,5.032,1793,7.254,1794,5.811,1795,5.811,1857,6.488,1858,6.488,1859,6.488,1860,6.488,1861,6.488,1862,6.488,1863,6.488,1864,6.488,1865,6.488,1866,6.488,1867,6.488]],["title/this.html#bind-apply-call",[540,2.003,810,1.885,811,2.003]],["body/this.html#bind-apply-call",[0,0.038,4,0.376,5,0.308,6,1.04,8,1.023,13,0.374,18,0.768,25,1.02,40,0.43,41,1.341,88,1.604,91,0.758,119,2.767,150,0.484,151,0.551,152,0.687,153,0.761,154,1.072,155,0.982,161,1.188,175,0.652,176,0.811,177,0.88,178,0.929,179,1.067,180,1.114,181,1.18,182,1.114,183,1.253,192,3.064,249,1.69,250,2.881,306,2.461,308,1.92,310,2.225,311,0.995,314,2.484,320,2.499,344,2.953,345,3.484,347,4.484,350,3.233,457,1.398,482,1.702,525,1.272,540,4.12,590,1.253,602,2.533,704,2.178,727,1.802,776,1.968,783,2.066,794,2.115,810,3.278,811,3.484,814,4.79,891,3.49,1004,3.407,1124,2.066,1198,2.767,1272,2.307,1278,2.461,1421,5.052,1612,2.767,1763,3.064,1791,2.902,1797,3.538,1798,5.177,1799,5.177,1800,3.538,1801,6.124,1802,3.538,1803,3.538,1805,3.538,1806,3.538,1807,3.538,1808,3.538,1810,3.538,1812,3.538,1813,5.177,1814,4.149,1816,4.26,1817,2.307,1818,3.064,1825,3.538,1826,3.538,1827,3.538,1828,3.538,1829,3.538,1830,3.538,1831,3.538,1835,4.247,1836,4.78,1838,5.654,1868,3.949,1869,3.949,1870,3.538,1871,3.949,1872,3.949,1873,3.538,1874,3.538,1875,3.949,1876,3.949,1877,3.949,1878,3.538,1879,3.949,1880,5.78,1881,5.78,1882,3.949,1883,3.949,1884,3.949,1885,3.949,1886,3.949,1887,3.949,1888,3.949,1889,3.949,1890,3.949,1891,5.303,1892,3.949,1893,3.949,1894,3.949,1895,3.949,1896,3.949,1897,3.949,1898,3.949,1899,3.949,1900,3.949,1901,3.949,1902,4.78,1903,3.949,1904,5.78,1905,3.949,1906,3.949,1907,3.949,1908,3.949,1909,3.949,1910,3.949,1911,3.949,1912,3.949,1913,3.949,1914,3.949,1915,3.949,1916,3.949]],["title/math.html",[0,0.02]],["body/math.html",[0,0.038,4,0.406,5,0.287,6,0.906,8,1.641,13,0.292,18,0.567,21,1.979,23,1.492,35,1.515,40,0.352,150,0.396,151,0.45,152,0.43,153,0.475,175,0.777,254,2.016,296,3.037,311,0.81,362,1.202,407,1.749,458,2.593,525,2.109,582,2.344,1485,3.037,1524,2.93,1580,2.834,1661,2.93,1665,2.834,1760,2.834,1917,3.648,1918,4.865,1919,4.587,1920,3.648,1921,3.648,1922,3.648,1923,3.648,1924,3.648,1925,4.587,1926,4.587,1927,2.834,1928,3.295,1929,3.295,1930,3.295,1931,3.295,1932,5.863,1933,5.812,1934,5.161,1935,3.037,1936,4.212,1937,4.865,1938,4.229,1939,4.212,1940,4.212,1941,3.037,1942,4.212,1943,6.283,1944,4.229,1945,5.727,1946,5.261,1947,4.229,1948,4.229,1949,4.229,1950,3.037,1951,4.212,1952,4.212,1953,3.037,1954,3.037,1955,3.037,1956,3.037,1957,3.037,1958,3.037,1959,3.037,1960,3.037,1961,3.037,1962,3.037,1963,3.037]],["title/math.html#浮點數運算的坑",[1964,4.956]],["body/math.html#浮點數運算的坑",[0,0.038,4,0.403,5,0.287,6,0.904,8,1.639,13,0.291,18,0.565,21,1.974,23,1.484,35,1.507,40,0.351,150,0.394,151,0.449,152,0.427,153,0.473,175,0.773,254,2.009,296,3.022,302,3.022,311,0.806,362,1.196,458,2.58,525,1.507,582,2.332,1485,3.022,1524,2.916,1580,2.82,1600,2.733,1661,2.916,1665,2.82,1760,2.82,1917,3.63,1918,4.852,1919,4.571,1920,3.63,1921,3.63,1922,3.63,1923,3.63,1924,3.63,1925,3.278,1926,4.571,1927,2.82,1928,3.278,1929,3.278,1930,3.278,1931,3.278,1932,5.807,1933,5.807,1934,4.899,1935,3.022,1937,3.022,1938,4.214,1941,3.022,1943,6.278,1944,3.022,1945,5.718,1946,5.249,1947,4.214,1948,4.214,1949,4.214,1950,3.022,1953,3.022,1954,3.022,1955,3.022,1956,3.022,1957,3.022,1958,3.022,1959,3.022,1960,3.022,1961,3.022,1962,3.022,1963,3.022,1965,4.191,1966,4.191,1967,4.191,1968,4.191,1969,4.191,1970,4.191,1971,4.191,1972,4.191,1973,4.191,1974,3.63,1975,3.63,1976,3.63,1977,3.278,1978,3.87,1979,3.87,1980,3.87,1981,3.278,1982,3.278,1983,3.278,1984,3.278,1985,3.278,1986,3.278,1987,3.278,1988,3.278,1989,3.278,1990,3.278,1991,3.278,1992,3.278,1993,6.202,1994,6.202,1995,6.202,1996,6.202,1997,3.278,1998,3.278,1999,3.278,2000,3.278,2001,3.278,2002,3.278,2003,3.278,2004,3.278,2005,3.278,2006,3.278,2007,3.278,2008,3.278]],["title/math.html#科學符號處理",[1974,4.292]],["body/math.html#科學符號處理",[0,0.037,4,0.406,5,0.286,8,1.676,13,0.229,21,1.826,23,1.627,40,0.275,150,0.31,151,0.353,152,0.468,153,0.518,296,3.311,302,3.311,311,0.883,1485,3.311,1524,3.195,1580,3.09,1600,2.995,1661,3.195,1665,3.09,1760,3.09,1918,3.311,1925,3.592,1926,4.868,1927,3.09,1928,3.592,1929,3.592,1930,3.592,1931,3.592,1932,5.903,1933,5.903,1934,5.092,1935,3.311,1937,3.311,1938,4.488,1941,3.311,1943,6.374,1944,3.311,1945,5.88,1946,5.457,1947,4.488,1948,4.488,1949,4.488,1950,3.311,1953,3.311,1954,3.311,1955,3.311,1956,3.311,1957,3.311,1958,3.311,1959,3.311,1960,3.311,1961,3.311,1962,3.311,1963,3.311,1975,3.977,1976,3.977,1977,3.592,1978,4.24,1979,4.24,1980,4.24,1981,3.592,1982,3.592,1983,3.592,1984,3.592,1985,3.592,1986,3.592,1987,3.592,1988,3.592,1989,3.592,1990,3.592,1991,3.592,1992,3.592,1993,6.378,1994,6.378,1995,6.378,1996,6.378,1997,3.592,1998,3.592,1999,3.592,2000,3.592,2001,3.592,2002,3.592,2003,3.592,2004,3.592,2005,3.592,2006,3.592,2007,3.592,2008,3.592]],["title/math.html#why-0-1-0-2-0-3",[0,0.014,1932,1.431,1933,1.431,1934,1.431]],["body/math.html#why-0-1-0-2-0-3",[0,0.037,4,0.408,5,0.281,8,1.699,21,1.903,23,1.73,302,3.522,1524,3.398,1580,3.286,1600,3.185,1665,3.286,1918,3.522,1932,5.917,1933,5.917,1934,4.9,1935,3.522,1937,3.522,1938,4.677,1941,3.522,1943,6.436,1944,3.522,1945,5.985,1946,5.594,1947,4.677,1948,4.677,1949,4.677,1950,3.522,1953,3.522,1954,3.522,1955,3.522,1956,3.522,1957,3.522,1958,3.522,1959,3.522,1960,3.522,1961,3.522,1962,3.522,1963,3.522,1977,3.82,1978,4.509,1979,4.509,1980,4.509,1981,3.82,1982,3.82,1983,3.82,1984,3.82,1985,3.82,1986,3.82,1987,3.82,1988,3.82,1989,3.82,1990,3.82,1991,3.82,1992,3.82,1993,6.493,1994,6.493,1995,6.493,1996,6.493,1997,3.82,1998,3.82,1999,3.82,2000,3.82,2001,3.82,2002,3.82,2003,3.82,2004,3.82,2005,3.82,2006,3.82,2007,3.82,2008,3.82]],["title/variable.html",[2009,5.533]],["body/variable.html",[0,0.038,4,0.401,5,0.323,6,1.129,13,0.409,18,0.874,21,1.018,25,1.164,40,0.491,150,0.544,151,0.606,152,0.785,153,0.868,154,1.134,155,1.266,161,1.29,173,2.358,175,0.64,249,2,254,1.193,310,3.199,320,2.927,344,2.644,346,3.085,356,3.792,369,3.059,372,3.681,410,2.12,457,3.04,535,2.714,537,4.828,546,1.977,549,1.768,552,4.241,558,3.232,563,2.358,661,3.293,692,3.47,718,1.732,1610,3.005,1614,4.187,1616,3.993,1623,3.204,2010,6.761,2011,5.699,2012,6.761,2013,3.874,2014,6.761,2015,3.874,2016,3.47,2017,3.47,2018,3.47,2019,3.47,2020,3.47,2021,3.47,2022,3.47,2023,3.47,2024,5.105,2025,4.421,2026,3.47,2027,3.47]],["title/variable.html#變數的作用域在函式內",[2028,5.533]],["body/variable.html#變數的作用域在函式內",[0,0.038,4,0.365,5,0.302,6,1.153,13,0.367,18,0.808,25,1.113,40,0.441,150,0.497,151,0.565,152,0.75,153,0.831,154,1.019,155,1.395,161,1.282,175,1.097,320,2.206,369,4.411,372,5.306,410,3.057,552,4.194,1610,5.15,1616,5.756,2016,5.947,2017,5.947,2018,5.947,2019,5.947,2020,5.947,2021,5.947,2022,5.947,2023,5.947]],["title/variable.html#Hoisting",[535,3.876]],["body/variable.html#Hoisting",[0,0.038,4,0.405,5,0.323,6,1.041,13,0.402,18,0.863,25,1.1,40,0.484,150,0.523,151,0.558,152,0.741,153,0.82,154,0.896,161,1.273,249,1.712,320,2.991,344,2.223,356,4.225,390,2.29,457,3.344,537,2.916,546,2.772,549,2.479,552,4.414,558,4.096,718,2.428,994,3.366,1004,2.707,1614,5.307,1891,4.213,2024,6.469,2025,5.603,2029,5.432,2030,5.432,2031,5.432,2032,5.432,2033,5.432,2034,5.432]],["title/variable.html#動態型別",[1069,3.448]],["body/variable.html#動態型別",[0,0.037,4,0.297,5,0.281,6,0.872,13,0.324,18,0.832,21,1.905,40,0.389,55,3.998,150,0.438,151,0.499,154,1.075,173,3.586,249,2.028,254,2.232,346,4.232,563,3.586,1004,3.614,1623,5.996,2026,6.494,2027,6.494,2035,8.668]],["title/F2E/GraphQL.html",[2036,4.956]],["body/F2E/GraphQL.html",[0,0.038,56,6.351,57,5.834,88,2.795,237,6.515,295,4.019,545,5.424,929,4.62,1497,6.515,2036,8.82,2037,6.881,2038,6.881,2039,6.881,2040,6.881,2041,6.881,2042,5.691,2043,6.881,2044,7.032,2045,6.881,2046,6.163,2047,6.163]],["title/F2E/GraphQL.html#References",[88,2.247]],["body/F2E/GraphQL.html#References",[2046,7.381,2047,7.381]],["title/F2E/cookie.html",[2048,4.292]],["body/F2E/cookie.html",[0,0.038,59,3.494,88,2.429,188,5.709,1497,5.967,2048,8.108,2049,5.982,2050,5.982,2051,5.982,2052,5.982,2053,7.693,2054,5.358,2055,5.358,2056,5.358,2057,5.358,2058,5.982,2059,5.358,2060,5.982,2061,5.982,2062,7.617,2063,7.693,2064,5.982,2065,5.982,2066,5.982,2067,5.982,2068,5.982,2069,5.982,2070,5.982,2071,5.358,2072,8.1,2073,5.982,2074,5.982,2075,5.982,2076,5.982,2077,5.982,2078,5.982,2079,5.982,2080,5.982,2081,5.982,2082,5.982,2083,5.982,2084,5.982,2085,5.982,2086,5.982,2087,5.982,2088,5.358,2089,5.982,2090,5.982,2091,5.982,2092,5.982,2093,5.982]],["title/F2E/cookie.html#什麼是-Cookie？",[2094,4.152,2095,4.152]],["body/F2E/cookie.html#什麼是-Cookie？",[2048,7.495,2096,8.008,2097,8.008,2098,8.008,2099,7.173,2100,8.008,2101,8.008,2102,8.008,2103,8.008,2104,8.008]],["title/F2E/cookie.html#第一方Cookie和第三方Cookie區別",[2105,4.956]],["body/F2E/cookie.html#第一方Cookie和第三方Cookie區別",[88,2.553,119,4.404,123,5.631,146,5.199,188,4.221,339,3.701,2048,7.469,2054,5.631,2055,5.631,2056,5.631,2057,5.631,2059,5.631,2062,7.112,2071,5.631,2072,7.561,2088,5.631,2099,5.631,2105,5.631,2106,6.286,2107,6.286,2108,6.286,2109,6.286,2110,6.286,2111,6.286,2112,6.286,2113,6.286,2114,6.286,2115,6.286,2116,6.286,2117,6.286,2118,6.286,2119,6.286,2120,6.286,2121,6.286,2122,6.286,2123,6.286,2124,6.286,2125,6.286,2126,6.286,2127,6.286,2128,6.286,2129,6.286,2130,6.286,2131,6.286,2132,6.286,2133,6.286,2134,6.286,2135,6.286,2136,6.286,2137,6.286,2138,6.286,2139,6.286,2140,6.286,2141,6.286,2142,6.286,2143,6.286,2144,6.286,2145,6.286,2146,6.286,2147,6.286,2148,6.286,2149,6.286,2150,6.286,2151,6.286,2152,6.286,2153,6.286,2154,6.286,2155,6.286,2156,6.286,2157,6.286,2158,6.286,2159,6.286,2160,6.286,2161,6.286,2162,6.286,2163,6.286,2164,6.286,2165,6.286,2166,6.286,2167,6.286,2168,6.286,2169,6.286,2170,6.286,2171,6.286,2172,6.286,2173,6.286,2174,6.286,2175,6.286,2176,6.286,2177,6.286,2178,6.286,2179,6.286,2180,6.286,2181,6.286,2182,6.286,2183,6.286,2184,6.286,2185,6.286,2186,6.286]],["title/F2E/header.html",[2187,3.876]],["body/F2E/header.html",[0,0.037,4,0.301,5,0.239,13,0.329,59,5.11,67,4.756,88,4.062,350,4.011,2188,7.363,2189,7.363,2190,7.363,2191,7.363,2192,8.748,2193,7.363,2194,7.363,2195,8.748,2196,7.363,2197,7.363,2198,7.363]],["title/api/promise.html",[]],["body/api/promise.html",[0,0.038,4,0.352,5,0.279,8,0.952,13,0.385,18,0.816,25,0.973,40,0.434,41,1.249,91,1.033,149,3.953,150,0.488,151,0.494,152,0.656,153,0.726,154,0.89,155,0.914,157,2.312,175,0.889,176,1.105,177,1.199,178,1.266,179,1.454,180,1.517,181,1.608,249,1.135,251,5.443,253,4.472,256,5.369,311,1.39,525,2.312,658,3.418,961,5.934,2199,4.819,2200,4.819,2201,4.819,2202,5.935,2203,5.935,2204,6.199,2205,4.819,2206,4.819,2207,4.819,2208,7.125,2209,7.125,2210,5.935,2211,5.38,2212,3.953,2213,4.449]],["title/api/promise.html#Promise",[251,2.97]],["body/api/promise.html#Promise",[0,0.037,4,0.329,5,0.26,13,0.359,18,0.696,25,0.867,40,0.431,41,1.485,149,4.702,150,0.485,151,0.44,152,0.585,153,0.647,154,0.794,157,2.587,251,5.329,253,5.004,256,5.468,302,4.133,525,2.587,658,3.048,961,6.448,1223,3.857,1690,5.732,1870,5.732,2199,5.732,2200,5.732,2201,5.732,2202,5.293,2203,6.641,2204,5.892,2205,5.732,2206,5.732,2207,5.732,2208,5.293,2209,5.293,2210,5.293,2214,6.4,2215,6.4,2216,6.4,2217,6.4,2218,6.4,2219,6.4,2220,6.4,2221,6.4,2222,6.4,2223,6.4,2224,6.4,2225,6.4,2226,6.4,2227,6.4,2228,6.4,2229,6.4,2230,6.4,2231,6.4,2232,6.4,2233,6.4,2234,6.4,2235,6.4,2236,5.732,2237,6.4,2238,6.4,2239,6.4,2240,6.4,2241,6.4]],["title/api/promise.html#鏈接",[2242,5.533]],["body/api/promise.html#鏈接",[0,0.038,4,0.334,5,0.265,8,1.164,13,0.365,18,0.828,25,0.891,40,0.353,91,1.263,150,0.398,151,0.453,152,0.601,153,0.665,154,0.816,155,1.117,175,1.087,176,1.351,177,1.465,178,1.548,179,1.778,180,1.855,181,1.966,249,1.388,251,5.301,311,1.53,658,3.133,2204,5.966,2208,7.348,2209,7.348,2210,5.44,2212,4.833,2236,5.892,2243,6.578,2244,6.578,2245,6.578,2246,6.578,2247,6.578,2248,6.578,2249,6.578,2250,6.578,2251,6.578,2252,6.578,2253,6.578,2254,6.578,2255,6.578,2256,6.578]],["title/F2E/token.html",[526,4.065]],["body/F2E/token.html",[0,0.037,58,7.984,362,1.942,486,4.915,526,6.549,2072,6.285,2187,6.627,2257,8.913,2258,7.822,2259,7.822]],["title/F2E/token.html#provisional-headers-are-shown",[2187,2.328,2258,2.748,2259,2.748]],["body/F2E/token.html#provisional-headers-are-shown",[2187,6.458,2258,6.66,2259,6.66,2260,8.053,2261,8.053,2262,8.053,2263,8.053,2264,8.053,2265,8.053]],["title/array/array_method.html",[308,1.379,1760,2.503]],["body/array/array_method.html",[0,0.038,4,0.38,5,0.312,13,0.415,18,0.63,40,0.466,41,2.015,150,0.561,151,0.639,153,0.878,157,2.341,630,3.731,909,7.18,1650,5.607,2266,7.269,2267,7.269]],["title/array/map.html",[]],["body/array/map.html",[0,0.038,4,0.364,5,0.288,6,0.791,8,1.164,13,0.365,18,0.57,25,0.891,40,0.439,41,1.992,48,3.73,91,0.909,150,0.457,151,0.52,152,0.69,153,0.665,154,0.587,155,0.804,161,0.904,175,0.782,176,0.972,177,1.055,178,1.547,179,1.279,180,1.855,181,1.415,182,1.335,183,1.502,251,2.541,308,1.572,311,1.478,314,2.034,350,2.827,362,1.681,409,3.915,410,3.457,411,3.204,461,1.703,590,1.502,591,1.572,592,1.649,593,1.732,594,1.855,595,1.922,596,1.922,597,1.958,598,1.958,599,2.577,600,1.958,601,1.958,620,1.958,621,1.888,622,1.958,623,2.034,624,2.034,625,1.958,626,2.034,627,2.074,628,2.074,629,2.074,630,2.034,631,2.074,794,1.732,1814,3.627,1927,3.964,2204,3.178,2212,3.478,2268,3.672,2269,3.672,2270,3.178,2271,3.317,2272,2.685,2273,3.178,2274,3.278,2275,3.672,2276,3.672,2277,3.672,2278,3.178,2279,3.672,2280,4.24,2281,3.672,2282,4.24,2283,5.892,2284,4.24,2285,4.24,2286,4.24,2287,4.24,2288,4.24,2289,4.24,2290,4.24,2291,4.24,2292,6.771,2293,4.24,2294,4.24,2295,4.24,2296,4.24,2297,5.864,2298,4.24,2299,4.24,2300,5.892,2301,4.24,2302,7.959,2303,5.892,2304,4.24,2305,4.24,2306,7.689,2307,4.24,2308,4.24,2309,3.672,2310,5.892,2311,4.24,2312,4.24,2313,4.24]],["title/array/map.html#map",[1814,3.051]],["body/array/map.html#map",[0,0.038,4,0.361,5,0.286,6,0.781,8,1.148,13,0.362,18,0.562,25,0.879,40,0.435,41,1.978,48,3.679,91,0.891,150,0.452,151,0.515,152,0.683,153,0.656,154,0.576,155,0.788,161,0.892,175,0.767,176,0.953,177,1.034,178,1.526,179,1.254,180,1.83,181,1.387,182,1.309,183,1.472,251,2.491,308,1.542,311,1.467,314,1.994,350,2.788,409,3.838,410,3.372,411,3.16,461,1.67,590,1.472,591,1.542,592,1.616,593,1.698,594,1.818,595,1.885,596,1.885,597,1.92,598,1.92,599,2.542,600,1.92,601,1.92,620,1.92,621,1.851,622,1.92,623,1.994,624,1.994,625,1.92,626,1.994,627,2.034,628,2.034,629,2.034,630,1.994,631,2.034,794,1.698,1814,2.559,1927,3.91,2204,3.116,2212,3.41,2268,3.6,2269,3.6,2270,3.116,2271,3.251,2272,2.632,2273,3.116,2274,3.233,2275,3.6,2276,3.6,2277,3.6,2278,3.116,2279,3.6,2280,4.157,2281,3.6,2282,4.157,2283,5.811,2284,4.157,2285,4.157,2286,4.157,2287,4.157,2288,4.157,2289,4.157,2290,4.157,2291,4.157,2292,6.7,2293,4.157,2294,4.157,2295,4.157,2296,4.157,2297,5.032,2298,4.157,2299,4.157,2300,5.811,2301,4.157,2302,7.633,2303,5.811,2304,4.157,2305,4.157,2306,7.633,2307,4.157,2308,4.157,2309,3.6,2310,5.811,2311,4.157,2312,4.157,2313,4.157,2314,4.157,2315,4.157,2316,4.157,2317,4.641,2318,4.641,2319,4.641]],["title/array/array_merge.html",[308,1.379,2320,4.152]],["body/array/array_merge.html",[0,0.038,4,0.406,5,0.324,6,1.106,13,0.411,18,0.817,35,3.169,40,0.494,150,0.506,151,0.576,152,0.53,153,0.586,314,2.491,362,2.453,407,2.157,457,2.052,582,2.89,783,4.383,794,2.121,1790,3.893,1817,4.894,2270,3.893,2272,3.288,2273,3.893,2321,5.798,2322,4.26,2323,7.539,2324,5.798,2325,5.798,2326,5.798,2327,7.539,2328,7.539,2329,5.798,2330,5.798,2331,3.613,2332,4.062]],["title/array/array_insert.html",[308,1.379,556,2.426]],["body/array/array_insert.html",[0,0.038,4,0.417,5,0.332,8,1.559,13,0.453,18,0.805,40,0.531,41,1.897,150,0.603,151,0.663,152,0.465,153,0.515,167,1.355,255,1.663,308,1.693,314,1.434,410,1.895,411,2.482,556,1.949,783,1.745,794,3.485,795,1.892,1661,3.175,1817,5.044,1818,2.588,2274,2.539,2278,2.24,2322,4.541,2333,3.336,2334,3.336,2335,2.988,2336,2.988,2337,2.988,2338,4.795,2339,2.988,2340,4.564,2341,4.564,2342,2.988,2343,2.759,2344,2.988,2345,5.536,2346,3.336,2347,3.336,2348,3.336,2349,4.564,2350,4.564,2351,4.564,2352,2.988,2353,3.743,2354,2.988,2355,2.759,2356,4.214,2357,2.988,2358,2.988,2359,2.988,2360,2.988,2361,4.564,2362,4.564,2363,3.336,2364,2.988,2365,2.988,2366,3.336,2367,2.988,2368,2.988,2369,2.155,2370,2.988,2371,2.988,2372,2.988,2373,2.988,2374,2.988,2375,2.988,2376,3.336]],["title/array/array_insert.html#把數據插入陣列尾部",[2377,5.533]],["body/array/array_insert.html#把數據插入陣列尾部",[0,0.038,4,0.414,5,0.328,13,0.452,18,0.781,40,0.527,150,0.593,151,0.675,445,5.988,794,3.546,795,3.428,1300,5.691,1817,5.264,2322,4.442,2335,5.415,2336,5.415,2337,5.415,2338,4.689,2378,6.045,2379,4.999]],["title/array/array_insert.html#把數據插入陣列頭部",[2380,4.956]],["body/array/array_insert.html#把數據插入陣列頭部",[0,0.038,4,0.411,5,0.325,8,1.561,13,0.448,18,0.764,40,0.521,150,0.586,151,0.607,445,6.18,794,3.479,1300,5.942,1817,5.153,2322,4.756,2338,5.021,2339,5.798,2340,7.244,2379,5.353]],["title/array/array_insert.html#把數據插入陣列指定位置",[2381,5.533]],["body/array/array_insert.html#把數據插入陣列指定位置",[0,0.038,4,0.386,5,0.319,8,1.482,13,0.421,18,0.784,40,0.45,41,1.589,150,0.506,314,2.943,445,4.798,556,4,783,3.583,1300,5.031,1818,5.312,2341,7.501,2342,6.134,2343,5.663,2344,6.134,2345,7.501,2349,7.501,2350,7.501,2351,6.134,2382,6.848,2383,6.848,2384,6.848,2385,6.848,2386,6.848,2387,6.848]],["title/array/array_insert.html#拼接兩個陣列",[2388,5.533]],["body/array/array_insert.html#拼接兩個陣列",[0,0.038,4,0.416,5,0.329,8,1.655,13,0.437,18,0.716,40,0.503,150,0.565,445,5.79,794,3.515,1300,4.924,1817,4.827,2322,4.924,2338,5.199,2352,6.003,2379,5.543]],["title/array/array_insert.html#fill",[2353,4.065]],["body/array/array_insert.html#fill",[0,0.038,4,0.364,5,0.316,8,1.164,13,0.397,18,0.708,40,0.499,41,2.218,150,0.597,151,0.679,152,0.601,153,0.665,308,2.185,411,3.979,2274,4.071,2278,4.416,2353,4.833,2354,5.892,2355,5.44,2356,6.756,2357,5.892,2358,5.892,2359,5.892,2360,5.892,2361,7.317,2362,7.317,2364,5.892,2365,5.892,2367,5.892,2368,5.892,2389,6.578,2390,6.578,2391,6.578]],["title/array/array_insert.html#example",[2369,3.573]],["body/array/array_insert.html#example",[0,0.036,4,0.312,5,0.247,13,0.34,40,0.409,41,1.769,150,0.461,151,0.524,152,0.696,153,0.77,167,3.095,255,3.798,410,3.321,1661,5.563,2370,6.826,2371,6.826,2372,6.826,2373,6.826,2374,6.826,2375,6.826,2380,6.826,2392,7.621,2393,7.621]],["title/array/good_part.html",[0,0.015,407,1.545]],["body/array/good_part.html",[0,0.036,5,0.26,525,2.587,704,4.428,2394,8.031,2395,8.031,2396,8.031]],["title/array/object_to_array.html",[308,1.379,482,1.223]],["body/array/object_to_array.html",[0,0.036,5,0.252,41,1.802,308,2.58,410,2.889,482,2.659,694,5.83,794,2.841,2397,7.767,2398,7.767,2399,7.767,2400,7.767,2401,7.767,2402,7.767,2403,7.767,2404,7.767,2405,7.767]],["title/array/splice.html",[308,1.379,2343,3.434]],["body/array/splice.html",[0,0.038,4,0.392,5,0.318,8,1.478,13,0.434,18,0.767,25,1.299,40,0.515,41,1.743,150,0.579,151,0.659,152,0.875,153,0.969,154,0.715,155,0.979,175,0.952,311,1.293,844,5.395,1650,5.395,2406,5.162,2407,6.726,2408,5.162,2409,5.162,2410,5.162,2411,5.162,2412,7.928]],["title/array/splice.html#分割指定长度的元素数组",[2413,5.533]],["body/array/splice.html#分割指定长度的元素数组",[0,0.038,4,0.392,5,0.318,8,1.474,13,0.434,18,0.765,25,1.297,40,0.514,41,1.736,150,0.578,151,0.658,152,0.874,153,0.968,154,0.71,155,0.973,175,0.946,311,1.288,844,5.379,1650,5.379,2406,5.13,2407,6.7,2408,5.13,2409,5.13,2410,5.13,2411,5.13,2412,7.909]],["title/array/array_methods.html",[308,1.379,1760,2.503]],["body/array/array_methods.html",[0,0.038,4,0.405,5,0.318,6,1.125,8,0.832,13,0.436,18,0.788,21,1.979,25,0.637,40,0.502,41,1.519,91,0.577,150,0.55,151,0.589,152,0.744,153,0.762,154,0.718,155,0.511,161,1.177,173,1.244,175,0.497,176,0.618,177,0.67,178,0.708,179,0.813,180,0.848,181,0.899,182,0.848,183,0.954,200,2.019,254,1.448,308,1.562,309,2.886,311,1.474,313,2.667,314,3.053,319,4.491,320,0.999,361,3.157,362,1.925,373,2.333,411,4.171,525,1.515,562,2.869,590,0.954,591,0.999,592,1.047,670,2.21,702,2.107,724,2.019,725,4.043,786,3.425,794,3.244,913,3.037,926,2.21,1788,3.455,1790,3.157,1791,3.455,1814,4.34,1816,1.874,1817,1.757,2268,2.333,2269,2.333,2270,3.887,2271,3.294,2272,4.464,2273,3.887,2274,4.268,2275,2.333,2276,2.333,2277,2.333,2278,2.019,2331,3.608,2332,3.294,2369,1.942,2414,2.694,2415,2.694,2416,2.694,2417,2.694,2418,2.694,2419,2.694,2420,2.694,2421,2.694,2422,2.694,2423,2.694,2424,2.694,2425,2.694,2426,2.694,2427,3.648,2428,2.694,2429,2.694,2430,2.694,2431,3.648,2432,2.694,2433,2.694,2434,2.694,2435,2.694,2436,4.212,2437,2.694,2438,4.212,2439,2.694,2440,2.694,2441,2.333,2442,2.694,2443,2.694,2444,2.694,2445,2.487,2446,4.788,2447,3.007,2448,4.788,2449,4.788,2450,2.487,2451,3.007,2452,3.007,2453,3.007,2454,2.487,2455,2.487,2456,2.487,2457,3.007,2458,2.487,2459,2.487,2460,2.487,2461,2.487,2462,2.487,2463,2.487,2464,2.487,2465,3.007,2466,2.487,2467,2.487,2468,2.487]],["title/array/array_methods.html#Array",[308,1.838]],["body/array/array_methods.html#Array",[1814,4.531,2331,5.12,2469,8.217]],["title/array/array_methods.html#forEach",[725,2.97]],["body/array/array_methods.html#forEach",[0,0.037,4,0.394,5,0.312,6,0.879,8,1.293,13,0.416,18,0.633,25,0.99,40,0.393,150,0.442,151,0.503,152,0.667,153,0.739,161,1.005,411,4.531,794,2.673,1790,4.906,2272,4.144,2274,4.637,2414,6.545,2415,6.545,2416,6.545,2470,7.307]],["title/array/array_methods.html#map",[1814,3.051]],["body/array/array_methods.html#map",[0,0.037,4,0.358,5,0.284,6,1.053,13,0.391,18,0.638,40,0.396,150,0.445,151,0.507,152,0.673,161,1.012,311,1.268,314,3.164,411,3.586,794,2.694,2268,5.712,2269,5.712,2270,4.944,2271,5.159,2272,4.176,2273,4.944,2274,3.67,2275,5.712,2276,5.712,2277,5.712,2314,6.595,2315,6.595,2316,6.595]],["title/array/array_methods.html#filter",[2331,3.448]],["body/array/array_methods.html#filter",[0,0.037,4,0.381,5,0.283,6,1.049,13,0.416,18,0.635,21,1.925,40,0.394,150,0.443,151,0.504,152,0.669,153,0.741,161,1.007,311,1.261,314,3.148,411,3.568,794,2.68,2270,4.918,2272,4.154,2273,4.918,2274,3.651,2332,5.132,2417,6.561,2418,6.561,2471,7.325]],["title/array/array_methods.html#find",[670,4.065]],["body/array/array_methods.html#find",[0,0.037,4,0.383,5,0.303,6,1.057,13,0.393,18,0.643,40,0.399,150,0.449,151,0.511,161,1.02,311,1.278,314,3.189,320,2.465,411,3.615,794,2.715,2272,4.209,2274,3.699,2419,6.647,2420,6.647,2421,6.647,2422,6.647,2423,6.647,2472,7.421]],["title/array/array_methods.html#sort",[2424,4.956]],["body/array/array_methods.html#sort",[0,0.037,4,0.379,5,0.3,6,1.041,13,0.414,18,0.627,40,0.498,150,0.56,151,0.498,152,0.661,161,0.994,311,1.49,361,4.856,362,2.212,411,3.522,794,2.646,2270,4.856,2273,4.856,2274,3.604,2425,6.478,2426,6.478,2427,5.61,2473,7.232,2474,7.232,2475,7.232]],["title/array/array_methods.html#every",[]],["body/array/array_methods.html#every",[0,0.037,4,0.356,5,0.282,6,1.048,13,0.389,18,0.633,21,2.288,40,0.468,150,0.442,151,0.503,152,0.667,153,0.739,161,1.005,311,1.258,313,4.144,314,3.14,411,3.559,794,2.673,2272,4.144,2274,3.642,2428,6.545,2429,6.545,2430,6.545,2431,5.668,2476,6.545,2477,7.307]],["title/array/array_methods.html#some",[]],["body/array/array_methods.html#some",[0,0.037,4,0.381,5,0.282,6,1.048,13,0.389,18,0.633,21,2.288,40,0.393,150,0.442,151,0.503,152,0.667,153,0.739,161,1.005,311,1.258,313,4.144,314,3.14,411,3.559,794,2.673,2272,4.144,2274,3.642,2431,5.668,2432,6.545,2433,6.545,2434,6.545,2476,6.545,2478,7.307]],["title/array/array_methods.html#reduce",[319,4.292]],["body/array/array_methods.html#reduce",[0,0.038,4,0.38,5,0.296,6,0.954,8,0.783,13,0.408,18,0.775,21,1.162,25,0.599,40,0.48,41,1.84,55,2.439,91,0.849,150,0.506,151,0.501,152,0.404,153,0.634,154,0.904,155,0.751,161,1.002,173,1.83,175,0.731,176,0.909,177,0.986,178,1.041,179,1.195,180,1.248,181,1.322,182,1.248,183,1.403,200,2.97,254,1.362,308,1.469,309,3.632,311,1.255,319,4.865,339,2.062,361,2.97,362,1.603,373,3.431,411,2.155,525,2.02,562,3.475,590,1.403,591,1.469,592,1.541,702,3.099,724,2.97,725,4.494,786,4.148,794,3.062,913,2.857,926,3.25,1600,2.584,1788,3.25,1790,2.97,1791,4.608,1814,4.616,1816,2.757,1817,2.584,2271,3.099,2272,2.509,2274,2.205,2278,2.97,2331,2.757,2332,3.099,2369,2.857,2427,3.431,2435,3.962,2436,5.618,2437,3.962,2438,5.618,2439,3.962,2440,3.962,2441,3.431,2442,3.962,2443,3.962,2444,3.962,2445,3.658,2446,6.027,2448,6.027,2449,3.658,2450,3.658,2454,3.658,2455,3.658,2456,3.658,2458,3.658,2459,3.658,2460,3.658,2461,3.658,2462,3.658,2463,3.658,2464,3.658,2466,3.658,2467,3.658,2468,3.658,2479,4.424,2480,5.618,2481,3.962,2482,5.618,2483,3.962,2484,3.962,2485,3.962,2486,3.962,2487,3.962,2488,3.962,2489,3.962,2490,3.962,2491,3.962,2492,3.962,2493,3.962,2494,3.962,2495,3.962,2496,3.962,2497,3.962,2498,3.962,2499,3.962,2500,3.962,2501,3.962,2502,3.962,2503,3.962,2504,3.962,2505,3.962,2506,3.962]],["title/array/array_methods.html#examples",[2369,3.573]],["body/array/array_methods.html#examples",[0,0.038,4,0.361,5,0.274,6,0.836,8,0.907,13,0.377,18,0.765,21,1.347,25,0.695,40,0.454,41,1.613,91,0.984,150,0.511,151,0.478,152,0.468,153,0.703,154,0.862,155,0.871,161,1.084,175,0.847,176,1.053,177,1.142,178,1.206,179,1.386,180,1.446,181,1.532,182,1.446,183,1.627,200,3.443,254,1.578,309,3.928,311,1.196,339,2.39,361,3.443,373,3.977,562,3.702,590,1.627,591,1.703,592,1.786,725,4.74,786,4.42,794,3.091,913,3.311,1600,2.995,1788,3.767,1790,3.443,1814,4.869,1816,3.195,1817,2.995,2271,3.592,2272,2.908,2331,3.195,2332,3.592,2427,3.977,2445,4.24,2446,6.518,2448,6.518,2449,4.24,2450,4.24,2454,4.24,2455,4.24,2456,4.24,2458,4.24,2459,4.24,2460,4.24,2461,4.24,2462,4.24,2463,4.24,2464,4.24,2466,4.24,2467,4.24,2468,4.24,2480,6.224,2481,4.593,2482,6.224,2483,4.593,2484,4.593,2485,4.593,2486,4.593,2487,4.593,2488,4.593,2489,4.593,2490,4.593,2491,4.593,2492,4.593,2493,4.593,2494,4.593,2495,4.593,2496,4.593,2497,4.593,2498,4.593,2499,4.593,2500,4.593,2501,4.593,2502,4.593,2503,4.593,2504,4.593,2505,4.593,2506,4.593]],["title/cases/arr.html",[308,1.838]],["body/cases/arr.html",[0,0.038,4,0.412,5,0.326,8,1.336,13,0.421,18,0.654,25,0.787,40,0.406,41,1.752,91,1.115,150,0.351,151,0.4,152,0.531,153,0.848,154,1.04,155,0.987,175,0.96,176,1.193,177,1.682,308,3.133,311,1.3,525,1.871,563,2.404,591,2.508,596,2.36,599,2.958,602,2.546,621,2.317,1814,4.624,1816,5.734,1919,4.071,2507,4.805,2508,5.81,2509,5.81,2510,5.81,2511,8.386,2512,5.81,2513,5.81,2514,5.81,2515,7.549,2516,5.81,2517,5.81,2518,5.81,2519,5.81]],["title/cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組",[2520,5.533]],["body/cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組",[0,0.038,4,0.388,5,0.295,8,1.229,13,0.31,40,0.373,563,2.875,602,3.045,1004,4.721,1814,5.02,1816,6.048,1891,7.347,1902,7.833,1919,4.868,2521,6.224,2522,6.224,2523,6.949,2524,6.949,2525,6.949,2526,6.224,2527,6.224,2528,6.224,2529,6.949]],["title/array/filter.html",[308,1.379,2331,2.587]],["body/array/filter.html",[0,0.038,4,0.405,5,0.321,6,0.756,8,1.405,13,0.389,18,0.545,21,2.086,40,0.338,41,1.459,150,0.38,151,0.433,154,0.985,161,0.864,311,1.082,313,3.565,320,2.088,350,3.412,602,2.755,621,2.507,776,3.957,794,2.905,1814,3.466,1816,5.697,2331,5.424,2332,4.404,2431,4.876,2530,6.286,2531,6.286,2532,6.286,2533,6.286,2534,6.286,2535,6.286,2536,6.286,2537,6.286,2538,5.631,2539,6.286,2540,6.286,2541,6.286]],["title/array/filter.html#‘1’-‘2’-‘3’-filter-parseInt",[0,0.01,2521,2.481,2522,2.481,2542,2.77]],["body/array/filter.html#‘1’-‘2’-‘3’-filter-parseInt",[0,0.037,4,0.39,5,0.309,8,1.257,13,0.317,21,2.25,602,3.114,776,4.268,1004,4.268,1816,5.947,1891,6.643,1902,5.876,2331,4.428,2526,6.364,2527,6.364,2528,6.364,2538,6.364,2543,7.105,2544,7.105,2545,7.105,2546,7.105,2547,7.105,2548,8.564,2549,7.105,2550,7.105,2551,7.105,2552,7.105,2553,7.105,2554,7.105,2555,7.105,2556,7.105]],["title/cases/delay.html",[2557,4.956]],["body/cases/delay.html",[0,0.038,4,0.267,5,0.264,13,0.292,18,0.705,21,1.716,25,0.885,40,0.351,41,2.213,48,3.705,51,5.402,91,1.254,150,0.395,151,0.449,152,0.597,153,0.66,154,0.81,155,1.109,157,2.986,170,5.461,175,1.079,176,1.342,177,1.455,178,1.537,251,4.366,253,5.519,255,3.256,256,5.519,292,5.067,396,2.43,397,4.366,658,3.112,718,2.921,737,4.386,2204,4.386,2213,5.402,2557,7.934,2558,8.134,2559,5.851,2560,8.134,2561,6.533,2562,7.286,2563,6.533,2564,8.134,2565,8.134,2566,6.533]],["title/array/fill.html",[308,1.379,2353,3.051]],["body/array/fill.html",[0,0.038,4,0.393,5,0.319,8,1.568,13,0.374,18,0.768,25,0.784,40,0.494,41,1.747,91,1.111,150,0.588,151,0.66,152,0.529,153,0.585,154,0.718,155,0.983,161,0.796,164,5.215,167,4.186,175,1.244,308,1.922,311,0.996,411,4.077,482,1.704,483,2.536,891,3.843,2274,4.172,2278,3.885,2353,6.513,2355,6.922,2356,6.922,2567,5.786,2568,5.786,2569,5.786,2570,5.786,2571,8.37,2572,6.922,2573,5.786,2574,5.786,2575,5.786]],["title/cases/if.html",[]],["body/cases/if.html",[0,0.038,4,0.34,5,0.269,6,0.814,8,1.471,13,0.371,18,0.72,21,2.184,23,2.147,25,0.917,40,0.447,41,1.57,91,1.299,150,0.502,151,0.572,152,0.618,153,0.684,154,0.839,155,1.149,167,2.748,175,1.118,176,1.39,177,1.507,178,1.592,192,6.448,249,1.754,313,5.463,362,2.124,407,2.517,2213,5.596,2576,5.596,2577,6.766,2578,6.766,2579,6.766,2580,6.766,2581,8.313,2582,8.313]],["title/cases/replace.html",[49,4.576]],["body/cases/replace.html",[0,0.037,4,0.296,5,0.28,6,1.041,13,0.323,18,0.627,21,1.9,23,2.294,38,5.314,40,0.389,47,4.856,150,0.437,151,0.498,152,0.661,153,0.731,161,0.994,350,3.108,716,5.981,727,3.95,2583,7.232,2584,8.655,2585,7.232,2586,6.478,2587,7.752,2588,7.752,2589,8.655,2590,7.232,2591,7.232]],["title/cases/str.html",[0,0.015,173,1.718]],["body/cases/str.html",[0,0.038,4,0.368,5,0.304,6,1.083,8,1.197,13,0.402,18,0.78,40,0.447,41,1.57,67,5.811,150,0.409,161,0.93,220,5.596,249,1.428,311,1.165,345,5.656,347,6.448,716,6.875,2586,6.061,2592,6.766,2593,8.313,2594,6.766,2595,6.766,2596,6.766,2597,6.766,2598,6.766,2599,6.766,2600,6.766,2601,6.766,2602,6.061,2603,8.313,2604,6.061,2605,6.061]],["title/cases/str.html#url",[67,3.573]],["body/cases/str.html#url",[0,0.037,4,0.317,5,0.251,6,0.932,13,0.346,18,0.671,41,1.797,55,4.271,67,5.821,220,6.406,390,3.799,2602,6.938,2604,6.938,2605,6.938,2606,9.013]],["title/function/factory​_factory.html",[161,0.571,2607,3.434]],["body/function/factory​_factory.html",[0,0.038,4,0.37,5,0.293,13,0.416,25,1.17,40,0.485,41,1.744,83,3.257,91,1.31,150,0.546,151,0.621,152,0.825,153,0.873,154,1.036,155,1.419,157,1.269,161,1.307,175,1.321,176,1.402,177,0.877,251,4.294,253,3.595,256,2.454,295,5.172,311,1.602,313,3.271,397,2.114,486,2.172,525,1.858,703,2.644,782,2.061,884,null,948,2.894,971,3.726,1486,3.055,2607,4.771,2608,6.114,2609,6.731,2610,3.938,2611,3.938,2612,5.768,2613,6.826,2614,5.167,2615,5.768,2616,3.938,2617,6.731,2618,3.528,2619,3.528,2620,7.164,2621,3.528,2622,3.528,2623,3.528,2624,3.055,2625,3.257,2626,5.167,2627,3.528,2628,3.528,2629,5.167,2630,3.528,2631,3.528,2632,3.528,2633,3.528,2634,7.734,2635,7.931,2636,5.167,2637,5.768,2638,6.114,2639,5.167,2640,3.528,2641,3.528,2642,3.528,2643,3.528,2644,3.528,2645,3.938,2646,3.528,2647,3.528,2648,3.528,2649,3.528,2650,3.528,2651,3.938,2652,5.167,2653,4.771,2654,3.528,2655,4.475,2656,3.528,2657,5.167,2658,3.528]],["title/function/factory​_factory.html#組合的工廠函數",[2659,5.533]],["body/function/factory​_factory.html#組合的工廠函數",[0,0.038,4,0.357,5,0.283,13,0.39,25,1.182,40,0.469,41,1.771,91,1.335,150,0.527,151,0.6,152,0.797,153,0.882,154,1.048,155,1.435,157,1.31,161,1.272,175,1.339,176,1.428,177,0.906,251,4.096,253,3.681,256,2.535,295,4.733,311,1.568,313,3.35,397,2.184,486,2.243,525,1.31,703,2.732,782,2.129,884,null,948,2.989,971,2.628,1486,3.156,2607,3.365,2608,5.291,2609,3.644,2614,3.644,2617,5.291,2618,3.644,2619,3.644,2620,6.835,2621,3.644,2622,3.644,2623,3.644,2624,3.156,2625,3.365,2626,5.291,2627,3.644,2628,3.644,2629,5.291,2630,3.644,2631,3.644,2632,3.644,2633,3.644,2634,7.812,2635,8.002,2636,5.291,2638,6.229,2639,5.291,2640,3.644,2641,3.644,2642,3.644,2643,3.644,2644,3.644,2646,3.644,2647,3.644,2648,3.644,2649,3.644,2650,3.644,2652,5.291,2653,4.885,2654,3.644,2655,4.582,2656,3.644,2657,5.291,2658,3.644,2660,4.068,2661,4.068,2662,4.068,2663,4.068,2664,4.068,2665,4.068,2666,4.068,2667,4.068,2668,4.068,2669,4.068,2670,4.068,2671,4.068,2672,4.068,2673,3.644,2674,4.068,2675,4.068,2676,5.907,2677,4.068,2678,4.068,2679,4.068,2680,4.068,2681,4.068,2682,4.068,2683,5.907,2684,5.907,2685,4.068,2686,4.068,2687,4.068,2688,4.068,2689,4.068,2690,4.068,2691,4.068,2692,4.068,2693,4.068,2694,4.068,2695,4.068,2696,4.068,2697,4.068,2698,4.068,2699,4.068,2700,4.068,2701,4.068,2702,4.068,2703,4.068,2704,4.068,2705,4.068]],["title/cases/math.html",[0,0.02]],["body/cases/math.html",[0,0.038,4,0.406,5,0.288,6,0.908,8,1.643,13,0.293,18,0.569,21,1.983,23,1.497,35,1.52,40,0.353,150,0.397,151,0.452,152,0.431,153,0.477,175,0.779,254,2.02,296,3.047,311,0.812,362,1.206,407,1.755,458,2.601,525,2.114,582,2.351,1485,3.047,1524,2.94,1580,2.844,1661,2.94,1665,2.844,1760,2.844,1917,3.66,1918,4.874,1919,4.598,1920,3.66,1921,3.66,1922,3.66,1923,3.66,1924,3.66,1925,4.598,1926,4.598,1927,2.844,1928,3.306,1929,3.306,1930,3.306,1931,3.306,1932,5.815,1933,5.815,1934,5.167,1935,3.047,1936,4.226,1937,3.047,1938,3.047,1939,4.226,1940,4.226,1941,3.047,1942,4.226,1943,6.287,1944,4.238,1945,5.733,1946,5.268,1947,4.238,1948,4.238,1949,4.238,1950,3.047,1951,4.226,1952,4.226,1953,3.047,1954,3.047,1955,3.047,1956,3.047,1957,3.047,1958,3.047,1959,3.047,1960,3.047,1961,3.047,1962,3.047,1963,3.047,2706,4.718,2707,4.718]],["title/cases/math.html#浮點數運算的坑",[1964,4.956]],["body/cases/math.html#浮點數運算的坑",[0,0.038,4,0.404,5,0.287,6,0.905,8,1.641,13,0.292,18,0.567,21,1.977,23,1.489,35,1.512,40,0.351,150,0.395,151,0.45,152,0.429,153,0.475,175,0.775,254,2.013,296,3.032,302,3.032,311,0.808,362,1.2,458,2.589,525,1.512,582,2.34,1485,3.032,1524,2.925,1580,2.829,1600,2.742,1661,2.925,1665,2.829,1760,2.829,1917,3.642,1918,4.861,1919,4.582,1920,3.642,1921,3.642,1922,3.642,1923,3.642,1924,3.642,1925,3.289,1926,4.582,1927,2.829,1928,3.289,1929,3.289,1930,3.289,1931,3.289,1932,5.81,1933,5.81,1934,4.906,1935,3.032,1937,3.032,1938,3.032,1941,3.032,1943,6.281,1944,3.032,1945,5.724,1946,5.257,1947,4.224,1948,4.224,1949,4.224,1950,3.032,1953,3.032,1954,3.032,1955,3.032,1956,3.032,1957,3.032,1958,3.032,1959,3.032,1960,3.032,1961,3.032,1962,3.032,1963,3.032,1965,4.205,1966,4.205,1967,4.205,1968,4.205,1969,4.205,1970,4.205,1971,4.205,1972,4.205,1973,4.205,1974,3.642,1975,3.642,1976,3.642,1977,3.289,1981,3.289,1982,3.289,1983,3.289,1984,3.289,1985,3.289,1986,3.289,1987,3.289,1988,3.289,1989,3.289,1990,3.289,1991,3.289,1992,3.289,1993,6.209,1994,6.209,1995,6.209,1996,6.209,1997,3.289,1998,3.289,1999,3.289,2000,3.289,2001,3.289,2002,3.289,2003,3.289,2004,3.289,2005,3.289,2006,3.289,2007,3.289,2008,3.289,2708,3.882,2709,3.882]],["title/cases/math.html#科學符號處理",[1974,4.292]],["body/cases/math.html#科學符號處理",[0,0.037,4,0.407,5,0.287,8,1.677,13,0.23,21,1.83,23,1.633,40,0.276,150,0.311,151,0.354,152,0.47,153,0.52,296,3.323,302,3.323,311,0.886,1485,3.323,1524,3.207,1580,3.101,1600,3.006,1661,3.207,1665,3.101,1760,3.101,1918,3.323,1925,3.605,1926,4.88,1927,3.101,1928,3.605,1929,3.605,1930,3.605,1931,3.605,1932,5.907,1933,5.907,1934,5.1,1935,3.323,1937,3.323,1938,3.323,1941,3.323,1943,6.378,1944,3.323,1945,5.886,1946,5.465,1947,4.499,1948,4.499,1949,4.499,1950,3.323,1953,3.323,1954,3.323,1955,3.323,1956,3.323,1957,3.323,1958,3.323,1959,3.323,1960,3.323,1961,3.323,1962,3.323,1963,3.323,1975,3.992,1976,3.992,1977,3.605,1981,3.605,1982,3.605,1983,3.605,1984,3.605,1985,3.605,1986,3.605,1987,3.605,1988,3.605,1989,3.605,1990,3.605,1991,3.605,1992,3.605,1993,6.385,1994,6.385,1995,6.385,1996,6.385,1997,3.605,1998,3.605,1999,3.605,2000,3.605,2001,3.605,2002,3.605,2003,3.605,2004,3.605,2005,3.605,2006,3.605,2007,3.605,2008,3.605,2708,4.256,2709,4.256]],["title/cases/math.html#why-0-1-0-2-0-3",[0,0.014,1932,1.431,1933,1.431,1934,1.431]],["body/cases/math.html#why-0-1-0-2-0-3",[0,0.037,4,0.408,5,0.281,8,1.701,21,1.907,23,1.736,302,3.535,1524,3.411,1580,3.299,1600,3.197,1665,3.299,1918,3.535,1932,5.921,1933,5.921,1934,4.909,1935,3.535,1937,3.535,1938,3.535,1941,3.535,1943,6.439,1944,3.535,1945,5.992,1946,5.603,1947,4.689,1948,4.689,1949,4.689,1950,3.535,1953,3.535,1954,3.535,1955,3.535,1956,3.535,1957,3.535,1958,3.535,1959,3.535,1960,3.535,1961,3.535,1962,3.535,1963,3.535,1977,3.835,1981,3.835,1982,3.835,1983,3.835,1984,3.835,1985,3.835,1986,3.835,1987,3.835,1988,3.835,1989,3.835,1990,3.835,1991,3.835,1992,3.835,1993,6.5,1994,6.5,1995,6.5,1996,6.5,1997,3.835,1998,3.835,1999,3.835,2000,3.835,2001,3.835,2002,3.835,2003,3.835,2004,3.835,2005,3.835,2006,3.835,2007,3.835,2008,3.835,2708,4.527,2709,4.527]],["title/global/date.html",[397,2.97]],["body/global/date.html",[0,0.038,4,0.319,5,0.253,6,1.125,8,1.52,13,0.384,18,0.676,24,4.281,40,0.419,41,1.81,150,0.471,151,0.42,152,0.712,154,0.967,155,1.324,157,3.129,175,1.009,179,2.321,180,1.723,397,5.332,592,2.128,593,2.235,860,4.489,862,4.489,864,4.489,866,5.73,2710,9.048,2711,6.11,2712,9.048,2713,6.11,2714,6.11,2715,5.473,2716,5.473,2717,5.473,2718,5.473,2719,5.473,2720,5.473,2721,6.049,2722,6.049,2723,6.985,2724,5.473,2725,5.473,2726,5.473]],["title/global/date.html#Date-prototype-toISOString",[2715,4.956]],["body/global/date.html#Date-prototype-toISOString",[0,0.037,4,0.292,5,0.231,8,1.52,13,0.319,18,0.744,24,5.003,40,0.384,41,1.993,150,0.432,151,0.491,152,0.785,154,1.065,157,2.767,180,2.014,397,4.611,593,2.612,860,5.247,862,5.247,864,5.247,866,5.247,2716,6.396,2717,6.396,2718,6.396,2719,6.396,2720,6.396,2721,6.663,2722,6.663,2723,7.694,2724,6.396,2725,6.396,2726,6.396,2727,7.141,2728,7.141]],["title/global/promise.html",[251,2.97]],["body/global/promise.html",[0,0.038,4,0.31,5,0.272,6,0.829,8,1.032,13,0.375,18,0.752,25,0.933,34,1.905,35,2.592,40,0.407,41,2.013,88,1.624,91,0.768,150,0.457,151,0.474,152,0.629,153,0.696,154,0.496,155,0.679,157,2.438,161,1.041,164,2.492,175,0.661,176,0.822,177,0.891,178,0.941,179,1.081,180,1.128,181,1.195,182,1.128,183,1.269,249,0.844,250,4.188,251,5.197,253,5.406,254,1.796,255,2.908,256,5.015,258,3.582,311,1.185,313,3.905,362,2.057,410,1.488,461,1.439,525,1.288,552,2.978,590,1.269,591,1.329,592,1.393,593,1.463,594,1.567,595,1.624,596,1.624,597,1.655,598,1.655,599,1.567,600,1.655,601,1.655,620,1.655,621,1.595,622,1.655,623,1.719,624,1.719,625,1.655,626,1.719,643,1.993,718,1.788,776,4.432,913,2.583,917,2.939,961,2.939,1610,3.102,2202,4.825,2203,3.308,2204,5.082,2212,2.939,2274,1.993,2369,2.583,2559,3.582,2587,3.582,2588,5.225,2729,4,2730,4,2731,4,2732,4,2733,4,2734,5.834,2735,5.834,2736,4,2737,4,2738,4,2739,4,2740,8.403,2741,4,2742,4,2743,4,2744,4,2745,4,2746,4,2747,5.834,2748,5.834,2749,4,2750,4,2751,4,2752,4,2753,4,2754,4,2755,4,2756,4,2757,4,2758,4,2759,4,2760,4,2761,4,2762,4]],["title/global/function.html",[]],["body/global/function.html",[0,0.038,4,0.34,5,0.309,6,0.594,13,0.389,18,0.755,25,1.048,40,0.447,88,2.006,91,0.948,150,0.503,151,0.572,152,0.706,153,0.782,154,0.84,155,1.15,157,1.591,161,1.198,175,0.816,176,1.015,177,1.101,178,1.162,249,1.839,250,4.146,306,4.221,308,1.641,320,2.25,344,2.838,345,4.083,396,3.095,482,1.455,540,5.014,782,2.584,810,5.324,811,5.253,818,5.997,842,4.746,871,5.255,884,null,1612,3.461,2624,3.832,2763,6.774,2764,4.425,2765,4.425,2766,4.425,2767,4.425,2768,4.425,2769,4.425,2770,7.451,2771,7.807,2772,7.807,2773,4.425,2774,4.425,2775,4.425,2776,4.425,2777,4.425,2778,4.94,2779,6.068,2780,4.425]],["title/global/function.html#call、apply、bind",[2781,4.956]],["body/global/function.html#call、apply、bind",[308,2.653,482,2.352,810,4.528,811,4.813,1878,7.152,2764,7.152,2765,7.152,2766,7.152,2782,7.985,2783,7.985,2784,7.985,2785,7.985,2786,7.985]],["title/global/function.html#為什麼我們需要-apply-bind-call-？",[0,0.011,540,1.113,810,1.048,811,1.113,2787,1.847,2788,1.847]],["body/global/function.html#為什麼我們需要-apply-bind-call-？",[320,2.675,782,4.213,2767,7.213,2789,8.053,2790,8.053,2791,8.053,2792,8.053,2793,8.053,2794,8.053,2795,8.053]],["title/global/function.html#cab-call-apply-vs-bind",[0,0.016,540,0.835,810,0.786,811,0.835,1612,0.971,2768,1.241]],["body/global/function.html#cab-call-apply-vs-bind",[119,5.427,306,4.826,540,5.432,810,5.111,811,5.432,1057,5.94,1444,6.008,1873,6.938,1874,6.938,2796,7.745,2797,7.745,2798,7.745,2799,6.406,2800,7.745,2801,7.745,2802,7.745,2803,7.745,2804,7.745,2805,7.745]],["title/global/function.html#bind",[810,3.138]],["body/global/function.html#bind",[0,0.038,4,0.354,5,0.292,6,0.654,13,0.386,18,0.78,25,1.1,40,0.465,91,1.043,150,0.523,151,0.595,152,0.741,153,0.82,154,0.896,155,1.226,157,1.75,161,1.189,175,0.897,176,1.116,177,1.21,178,1.278,249,1.9,250,4.31,306,3.385,320,1.804,344,2.908,345,3.274,390,2.29,396,3.217,810,3.08,818,5.603,842,5.06,871,4.213,884,null,1400,4.865,1444,4.213,2624,4.213,2769,4.865,2770,7.746,2771,8.065,2772,8.065,2773,4.865,2774,4.865,2775,4.865,2776,4.865,2777,4.865,2779,4.865,2780,4.865,2799,6.711,2806,8.648,2807,8.648,2808,5.432,2809,5.432,2810,5.432,2811,5.432,2812,5.432,2813,5.432,2814,5.432,2815,5.432,2816,5.432]],["title/global/function.html#References",[88,2.247]],["body/global/function.html#References",[13,0.365,2781,7.317,2799,6.756,2817,8.169,2818,8.169]],["title/object/object​_keys.html",[2819,4.956]],["body/object/object​_keys.html",[0,0.038,4,0.393,5,0.299,6,1.011,8,1.487,13,0.338,18,0.844,25,1.026,35,2.707,40,0.407,41,1.95,48,3.308,59,3.408,91,1.12,95,6.174,150,0.457,151,0.521,152,0.812,153,0.765,154,0.939,155,0.991,170,5.642,175,0.964,176,1.198,177,1.3,178,1.372,179,1.577,249,1.773,254,2.33,295,4.908,362,2.147,482,2.781,694,3.768,794,2.134,891,2.978,2819,5.225,2820,5.834,2821,5.834,2822,5.834,2823,5.834,2824,5.834,2825,5.834,2826,5.834,2827,5.834,2828,5.834,2829,5.834,2830,7.57,2831,5.834,2832,5.834,2833,5.834,2834,5.834]],["title/operators/delete.html",[]],["body/operators/delete.html",[0,0.036,4,0.32,5,0.31,13,0.349,40,0.42,161,1.074,311,1.344,350,4.229,661,4.658]],["title/operators/delete.html#delete",[661,2.695]],["body/operators/delete.html#delete",[0,0.036,4,0.32,5,0.31,13,0.349,40,0.42,161,1.074,311,1.344,350,4.11,661,3.804,2835,7.809,2836,7.809,2837,7.809]],["title/http/caching.html",[0,0.015,59,2.426]],["body/http/caching.html",[0,0.038,4,0.286,5,0.193,6,0.715,13,0.363,15,3.676,21,1.562,23,1.886,25,0.805,38,6.229,40,0.319,41,1.778,48,3.371,59,4.75,88,1.667,91,0.788,150,0.359,151,0.409,152,0.543,153,0.601,154,1.008,155,1.009,164,2.557,169,3.472,175,0.678,176,0.843,244,7.665,397,2.203,403,4.685,541,2.875,745,3.394,806,4.367,929,3.991,1470,3.839,1753,4.164,2044,7.666,2187,5.697,2297,6.307,2838,3.676,2839,3.676,2840,7.594,2841,7.832,2842,3.676,2843,5.943,2844,4.104,2845,3.676,2846,4.104,2847,4.104,2848,4.104,2849,6.336,2850,6.725,2851,4.916,2852,4.916,2853,4.916,2854,4.916,2855,5.324,2856,4.916,2857,5.944,2858,4.916,2859,8.5,2860,7.594,2861,7.283,2862,8.021,2863,5.324,2864,7.283,2865,4.104,2866,3.676,2867,3.676]],["title/http/caching.html#強緩存",[2868,5.533]],["body/http/caching.html#強緩存",[0,0.037,4,0.225,5,0.178,6,0.662,13,0.388,23,2.312,25,0.746,40,0.296,41,1.691,48,3.122,59,4.257,146,4.553,150,0.333,151,0.379,152,0.503,153,0.557,154,1.013,155,0.935,164,3.431,169,4.257,244,7.839,339,2.566,403,4.274,421,4.553,541,3.857,745,4.553,806,5.354,929,3.696,1057,3.431,1131,2.955,1470,3.556,1600,4.257,1753,3.857,2044,7.823,2187,6.336,2838,4.931,2839,4.931,2840,8.101,2841,8.101,2842,4.931,2843,5.653,2845,4.931,2849,6.027,2850,4.553,2851,4.553,2852,4.553,2853,4.553,2854,4.553,2855,4.931,2856,4.553,2858,4.553,2869,5.506,2870,5.506,2871,5.506,2872,5.506,2873,5.506,2874,5.506,2875,5.506,2876,5.506,2877,5.506,2878,5.506,2879,5.506,2880,5.506,2881,5.506,2882,5.506,2883,5.506,2884,5.506,2885,5.506,2886,5.506,2887,5.506,2888,5.506,2889,5.506,2890,5.506,2891,5.506,2892,5.506,2893,5.506,2894,5.506,2895,4.931,2896,5.506,2897,5.506,2898,4.931,2899,7.288,2900,4.931,2901,4.931,2902,4.931,2903,5.506,2904,5.506,2905,4.931,2906,5.506,2907,5.506,2908,5.506,2909,5.506,2910,5.506,2911,5.506,2912,5.506,2913,5.506,2914,5.506,2915,5.506,2916,5.506,2917,5.506,2918,5.506,2919,5.506,2920,5.506,2921,5.506]],["title/http/caching.html#協商緩存",[2922,5.533]],["body/http/caching.html#協商緩存",[0,0.037,4,0.228,5,0.181,6,0.672,13,0.249,21,1.932,25,0.756,38,6.854,40,0.3,41,1.707,48,3.165,91,1.071,150,0.337,151,0.384,152,0.51,153,0.564,154,0.692,155,0.948,175,0.922,176,1.146,403,4.303,929,3.747,1470,3.605,1600,3.26,1753,3.91,2297,6.781,2673,6.587,2849,6.082,2850,6.801,2851,4.616,2852,4.616,2853,4.616,2854,4.616,2856,4.616,2858,4.616,2859,8.957,2860,8.356,2861,8.137,2862,8.356,2863,6.587,2864,8.137,2866,4.999,2867,4.999,2895,4.999,2898,4.999,2900,4.999,2901,4.999,2902,4.999,2905,4.999,2923,5.581,2924,5.581,2925,5.581,2926,5.581,2927,5.581,2928,5.581,2929,5.581,2930,5.581,2931,5.581,2932,5.581,2933,5.581,2934,5.581,2935,5.581,2936,5.581,2937,5.581,2938,5.581,2939,5.581,2940,5.581,2941,5.581,2942,5.581,2943,5.581,2944,5.581,2945,5.581,2946,5.581,2947,5.581,2948,5.581,2949,5.581,2950,5.581,2951,5.581,2952,5.581,2953,7.354,2954,5.581,2955,7.354,2956,5.581,2957,5.581,2958,5.581,2959,5.581,2960,5.581,2961,5.581,2962,5.581,2963,5.581,2964,7.354,2965,5.581]],["title/http/caching.html#References",[88,2.247]],["body/http/caching.html#References",[59,5.428,2044,6.337,2966,8.169,2967,8.169]],["title/object/assign.html",[482,1.223,483,1.82]],["body/object/assign.html",[0,0.038,4,0.404,5,0.327,6,1.198,13,0.437,18,0.775,35,3.107,40,0.41,150,0.462,151,0.526,152,0.541,362,2.422,454,3.264,480,5.927,482,2.492,483,3.348,891,4.564,892,5.13,2968,5.919,2969,6.998,2970,7.395,2971,7.395,2972,5.302,2973,5.302,2974,5.919]],["title/object/assign.html#合併物件",[2975,5.533]],["body/object/assign.html#合併物件",[0,0.038,4,0.39,5,0.309,6,1.147,13,0.426,18,0.741,35,2.958,40,0.381,150,0.428,151,0.488,152,0.647,362,2.346,482,2.087,891,3.618,892,4.759,2969,5.861,2970,7.071,2971,7.071,2972,6.348,2973,6.348,2976,7.087]],["title/object/assign.html#有相同屬性時合併物件區段",[2977,5.533]],["body/object/assign.html#有相同屬性時合併物件區段",[0,0.038,4,0.39,5,0.316,6,1.146,13,0.41,18,0.612,35,3.069,40,0.38,150,0.427,151,0.486,362,2.344,482,2.082,483,3.098,891,3.609,892,4.747,2969,7.061,2970,7.061,2971,7.061,2978,7.07]],["title/glossary/hoisting.html",[2979,4.152,2980,4.152]],["body/glossary/hoisting.html",[0,0.038,4,0.391,5,0.314,6,1.132,13,0.427,18,0.839,25,1.164,35,3.03,40,0.481,150,0.541,151,0.616,152,0.818,153,0.905,154,0.662,161,1.331,249,1.127,316,2.489,320,2.372,344,3.036,346,3.259,457,2.528,525,1.72,548,3.327,582,3.559,699,7.206,767,5.017,782,2.794,2981,7.141,2982,7.141,2983,7.141,2984,7.141,2985,5.34,2986,5.34,2987,5.34,2988,5.34]],["title/object/create.html",[868,4.292]],["body/object/create.html",[0,0.038,4,0.309,5,0.298,6,0.7,8,1.337,13,0.26,18,0.77,21,1.986,25,0.789,40,0.313,91,1.118,150,0.352,151,0.401,152,0.532,153,0.589,154,0.722,155,0.989,157,1.875,161,1.154,175,0.962,176,1.196,177,1.297,178,1.37,179,1.573,180,1.642,181,1.74,182,1.642,183,1.847,202,5.215,249,1.595,320,1.934,350,4.055,351,6.892,411,2.836,482,2.227,540,3.509,590,1.847,591,1.934,592,2.028,593,2.13,594,2.281,595,2.364,703,3.909,794,2.13,868,6.512,878,6.771,884,null,971,3.76,1817,3.401,2625,4.815,2653,6.252,2989,9.437,2990,5.822,2991,4.516,2992,9.437,2993,5.822,2994,5.822,2995,5.822,2996,5.822,2997,9.208,2998,6.252,2999,5.822]],["title/operators/destructuring_assignment.html",[]],["body/operators/destructuring_assignment.html",[0,0.038,4,0.307,5,0.243,13,0.335,18,0.859,24,4.566,25,0.633,35,3.102,40,0.403,41,1.742,56,5.259,91,0.897,150,0.549,151,0.588,152,0.808,153,0.659,154,1.194,155,0.793,175,0.772,176,0.96,177,1.041,178,1.099,179,1.262,180,1.317,181,1.396,182,2.716,183,1.482,311,0.804,362,2.461,397,4.36,457,3.024,458,4.71,461,3.074,482,1.92,483,2.047,590,1.482,591,1.552,625,3.36,635,2.801,891,2.384,2279,3.624,2281,3.624,2721,5.055,2722,5.055,3000,4.184,3001,5.838,3002,4.184,3003,4.184,3004,4.184,3005,6.723,3006,5.838,3007,5.838,3008,7.275,3009,7.275,3010,4.184,3011,4.184,3012,4.184,3013,4.184,3014,4.184,3015,6.517,3016,4.184,3017,4.184]],["title/operators/destructuring_assignment.html#Destructuring-assignment",[483,1.82,3000,3.719]],["body/operators/destructuring_assignment.html#Destructuring-assignment",[0,0.038,4,0.304,5,0.241,13,0.332,18,0.857,24,4.514,25,0.623,35,3.093,40,0.4,41,1.727,56,5.213,91,0.882,150,0.546,151,0.584,152,0.804,153,0.651,154,1.191,155,0.78,175,0.759,176,0.944,177,1.024,178,1.081,179,1.242,180,1.296,181,1.374,182,2.708,183,1.458,311,0.791,362,2.453,397,4.329,457,3.006,458,4.682,461,3.055,482,1.898,590,1.458,591,1.527,625,3.336,635,2.769,891,2.346,2279,3.565,2281,3.565,2721,4.998,2722,4.998,3001,5.771,3002,4.116,3003,4.116,3004,4.116,3005,6.664,3006,5.771,3007,5.771,3008,7.223,3009,7.223,3010,4.116,3011,4.116,3012,4.116,3013,4.116,3014,4.116,3016,4.116,3017,4.116,3018,6.443]],["title/operators/function.html",[]],["body/operators/function.html",[0,0.038,4,0.365,5,0.289,6,1.072,13,0.398,18,0.574,40,0.441,150,0.496,151,0.456,161,1.385,249,1.398,316,3.087,344,2.526,403,3.466,525,2.134,535,4.641,551,5.757,1616,4.641,2025,7.814,3019,6.624,3020,6.624,3021,6.624,3022,7.349,3023,5.478,3024,7.984]],["title/operators/function.html#函數表達式",[3025,4.956]],["body/operators/function.html#函數表達式",[0,0.038,4,0.362,5,0.287,6,1.065,13,0.395,18,0.565,40,0.436,150,0.491,151,0.448,161,1.355,249,1.375,316,3.038,344,2.5,403,3.41,535,4.566,551,5.715,2025,7.793,3022,7.275,3023,5.39,3024,7.926,3025,7.275,3026,6.518,3027,6.518,3028,6.518,3029,6.518,3030,6.518,3031,5.838,3032,6.518,3033,6.518,3034,6.518,3035,6.518]],["title/operators/typeof.html",[]],["body/operators/typeof.html",[0,0.038,4,0.333,5,0.309,6,0.788,13,0.364,23,2.077,40,0.438,47,6.694,150,0.492,157,2.109,161,1.276,167,3.601,200,5.469,311,1.402,346,4.355,407,3.03,482,2.399,492,5.985,526,4.811,538,5.076,546,3.342,547,4.08,549,2.988,563,2.709,2998,6.736,3036,7.942,3037,5.865,3038,6.548,3039,5.865,3040,5.865,3041,5.865,3042,5.865,3043,5.865,3044,5.079,3045,5.865]],["title/operators/typeof.html#typeof",[346,2.525]],["body/operators/typeof.html#typeof",[0,0.037,4,0.35,5,0.277,6,0.853,13,0.382,40,0.459,47,6.793,150,0.517,161,1.263,200,4.759,311,1.472,346,4.191,492,6.282,538,4.416,546,3.618,549,3.235,563,2.932,3031,6.348,3036,8.225,3037,6.348,3046,7.087,3047,7.087,3048,7.087,3049,7.087,3050,7.087,3051,7.087]],["title/operators/typeof.html#null",[167,2.247]],["body/operators/typeof.html#null",[0,0.036,5,0.287,23,2.386,167,3.597,200,5.049,346,3.432,407,2.797,482,2.215,526,5.525,538,4.686,547,4.686,2998,7.325,3039,6.735,3040,6.735,3041,6.735,3042,6.735,3043,6.735,3044,5.833,3045,6.735,3052,7.52,3053,7.52,3054,7.52,3055,7.52,3056,7.52,3057,7.52,3058,7.52,3059,7.52]],["title/statements/block.html",[0,0.02]],["body/statements/block.html",[0,0.038,4,0.399,5,0.318,6,1.152,13,0.408,18,0.829,23,2.411,25,0.898,40,0.491,41,1.11,91,0.918,150,0.552,151,0.593,152,0.749,153,0.67,154,0.821,155,1.125,161,1.185,175,0.79,176,0.982,177,1.065,178,1.125,179,1.292,249,1.731,311,0.823,320,2.725,344,1.472,346,4.068,350,3.525,362,1.942,411,2.329,457,2.904,458,3.652,492,4.867,535,5.325,546,2.441,549,2.182,552,5.076,806,3.513,1565,3.954,3023,3.954,3060,4.782,3061,8.615,3062,6.624,3063,6.624,3064,4.782,3065,4.782,3066,4.782]],["title/operators/precedence.html",[]],["body/operators/precedence.html",[0,0.038,4,0.406,5,0.312,6,1.049,13,0.366,18,0.755,21,1.455,25,0.75,29,5.5,40,0.393,91,1.063,150,0.442,151,0.503,152,0.506,153,0.56,154,0.687,155,0.94,175,0.915,176,1.137,177,1.234,178,1.303,179,1.497,180,1.562,181,1.655,182,1.562,183,1.757,249,1.169,320,2.43,350,3.745,362,2.227,410,3.048,461,1.993,590,1.757,591,1.84,592,1.929,593,2.026,594,2.17,595,2.249,596,2.249,597,2.291,598,2.291,599,2.17,600,2.291,601,2.291,620,2.291,621,2.209,622,2.291,3067,8.192,3068,4.96,3069,7.338,3070,6.553,3071,5.538,3072,8.887,3073,7.806,3074,4.96,3075,4.96,3076,4.96,3077,4.96,3078,5.538,3079,5.538]],["title/operators/precedence.html#運算子優先序",[1090,3.232]],["body/operators/precedence.html#運算子優先序",[0,0.038,4,0.298,5,0.236,6,0.877,13,0.326,18,0.753,21,1.915,29,6.239,249,1.538,410,3.457,3068,6.528,3069,8.324,3070,7.788,3080,9.624,3081,7.288,3082,7.288,3083,9.293]],["title/operators/precedence.html#運算符比-運算符高",[0,0.012,3084,2.977,3085,3.323]],["body/operators/precedence.html#運算符比-運算符高",[0,0.038,4,0.408,5,0.313,6,1.019,13,0.342,18,0.663,25,0.804,40,0.411,91,1.139,150,0.462,151,0.526,152,0.542,153,0.6,154,0.736,155,1.007,175,0.98,176,1.218,177,1.321,178,1.395,179,1.603,180,1.673,181,1.773,182,1.673,183,1.882,320,2.542,329,5.313,350,3.639,362,2.287,461,2.134,590,1.882,591,1.97,592,2.066,593,2.17,594,2.324,595,2.409,596,2.409,597,2.454,598,2.454,599,2.324,600,2.454,601,2.454,620,2.454,621,2.366,622,2.454,3072,8.984,3073,7.586,3074,5.313,3075,5.313,3076,5.313,3077,5.313,3084,5.313,3086,5.931,3087,5.931,3088,5.931,3089,5.931,3090,5.931,3091,5.931,3092,5.931,3093,5.931]],["title/statements/let.html",[]],["body/statements/let.html",[0,0.037,4,0.369,5,0.292,6,0.932,13,0.346,18,0.671,21,2.035,40,0.416,150,0.468,243,6.406,457,2.742,546,3.953,3094,6.938,3095,6.938]],["title/statements/let.html#let",[]],["body/statements/let.html#let",[0,0.037,4,0.368,5,0.291,6,0.927,13,0.344,18,0.667,21,2.024,40,0.414,150,0.466,243,6.371,457,2.727,546,3.932,3094,6.9,3095,6.9,3096,7.703,3097,7.703,3098,7.703,3099,7.703]],["title/statements/AsyncFunction.html",[3100,4.956]],["body/statements/AsyncFunction.html",[0,0.038,4,0.294,5,0.3,8,1.273,13,0.321,18,0.801,40,0.387,150,0.435,151,0.495,152,0.657,153,0.727,154,1.146,155,1.222,161,0.989,249,1.518,292,6.693,356,3.938,457,2.547,1612,5.041,2562,7.729,3100,6.445,3101,7.195,3102,7.195]],["title/statements/if...else.html",[]],["body/statements/if...else.html",[0,0.038,4,0.394,5,0.312,13,0.355,18,0.817,25,0.854,40,0.427,91,1.209,150,0.481,151,0.547,152,0.726,153,0.804,154,0.781,155,1.07,170,6.335,175,1.041,176,1.294,177,1.404,178,1.482,179,1.703,180,1.777,249,1.931,295,5.628,396,2.344,891,4.447,892,4.23,913,5.627,3103,6.3,3104,6.3,3105,7.804,3106,6.3,3107,7.122,3108,7.951,3109,6.3,3110,6.3,3111,6.3,3112,6.3,3113,6.3,3114,5.643]],["title/statements/if...else.html#if…else",[3115,5.533]],["body/statements/if...else.html#if…else",[]],["title/statements/if...else.html#條件組合的問題",[3116,5.533]],["body/statements/if...else.html#條件組合的問題",[0,0.038,4,0.393,5,0.311,13,0.353,18,0.815,25,0.844,40,0.424,91,1.196,150,0.477,151,0.543,152,0.721,153,0.798,154,0.773,155,1.058,170,6.314,175,1.029,176,1.28,177,1.388,178,1.466,179,1.684,180,1.757,249,1.923,295,5.612,396,2.318,891,4.424,892,4.184,913,4.024,3105,5.581,3107,5.581,3114,5.581,3117,6.231,3118,6.231,3119,7.896,3120,7.896,3121,6.231,3122,7.896,3123,7.896,3124,7.896,3125,6.231,3126,6.231,3127,6.231,3128,6.231,3129,6.231,3130,6.231,3131,6.231,3132,6.231,3133,6.231,3134,6.231,3135,6.231]],["title/statements/for.html",[]],["body/statements/for.html",[0,0.038,4,0.368,5,0.291,8,1.363,13,0.425,18,0.778,25,1.044,40,0.414,150,0.575,151,0.53,152,0.869,153,0.779,154,0.955,155,1.308,175,0.99,308,1.991,345,3.613,394,4.478,410,3.342,552,4.585,694,5.497,704,3.305,934,4.957,1792,7.378,3136,5.994,3137,5.994,3138,8.984,3139,7.624,3140,8.047,3141,5.369,3142,5.994,3143,5.369]],["title/statements/for.html#for…of與for…in的差別",[3144,5.533]],["body/statements/for.html#for…of與for…in的差別",[0,0.038,4,0.366,5,0.29,8,1.35,13,0.423,18,0.774,25,1.034,40,0.41,119,4.138,150,0.573,151,0.525,152,0.865,153,0.771,154,0.946,155,1.296,175,0.976,339,2.753,394,4.453,425,5.291,552,3.895,704,3.257,1012,3.171,1133,4.096,1198,4.138,1792,7.349,3139,7.571,3140,8.002,3141,5.291,3143,5.291,3145,5.907,3146,8.453,3147,5.907,3148,5.907,3149,5.907,3150,5.907,3151,5.907,3152,5.907,3153,5.907,3154,5.907,3155,5.907,3156,5.907,3157,5.907,3158,5.907,3159,5.907,3160,5.907,3161,5.907,3162,5.907,3163,5.907,3164,5.907,3165,5.907,3166,5.907,3167,7.631,3168,5.907,3169,5.907,3170,5.907,3171,5.907,3172,5.907,3173,5.907]],["title/string/split.html",[]],["body/string/split.html",[0,0.037,4,0.3,5,0.319,8,1.299,13,0.328,18,0.636,25,0.995,40,0.395,150,0.444,151,0.505,152,0.671,153,0.743,154,0.911,161,1.01,191,6.12,311,1.264,727,3.352,2572,6.074,3174,6.578,3175,7.344,3176,7.344,3177,6.578,3178,8.642,3179,6.578,3180,6.578]],["title/string/split.html#split",[191,3.876]],["body/string/split.html#split",[0,0.037,4,0.298,5,0.312,8,1.289,13,0.326,18,0.631,25,0.988,40,0.391,150,0.44,151,0.501,152,0.666,153,0.737,154,0.904,161,1.002,191,5.106,311,1.255,727,3.326,1004,3.632,2572,6.027,3174,6.528,3177,6.528,3178,8.62,3179,6.528,3180,6.528,3181,7.288,3182,7.288,3183,7.288,3184,7.288,3185,6.528]],["title/swagger/to-html.html",[1634,2.909,3186,2.587]],["body/swagger/to-html.html",[0,0.027,88,3.805,164,4.63,167,2.303,169,5.818,170,5.565,171,6.051,173,4.007,188,5.565,237,7.817,254,1.746,308,1.884,311,0.976,314,2.437,344,2.288,350,3.562,454,4.57,718,3.706,833,4.478,931,6.429,971,3.662,1470,6.433,1634,3.973,1650,3.662,1753,5.807,1758,7.749,1927,4.995,2042,4.69,2274,2.826,2507,4.69,2655,4.399,2843,4.399,2991,4.399,3044,6.429,3186,4.63,3187,5.079,3188,5.079,3189,4.69,3190,4.69,3191,4.69,3192,6.41,3193,5.079,3194,8.392,3195,7.878,3196,5.079,3197,7.424,3198,6.656,3199,5.079,3200,6.656,3201,6.656,3202,6.429,3203,6.145,3204,5.079,3205,4.69,3206,4.69,3207,5.079,3208,5.079,3209,5.079,3210,5.079]],["title/swagger/to-html.html#Swagger-to-HTML",[1634,2.909,3186,2.587]],["body/swagger/to-html.html#Swagger-to-HTML",[0,0.027,88,3.809,164,4.642,167,2.312,169,5.822,170,5.576,171,6.058,173,4.01,188,5.576,237,7.821,254,1.753,308,1.891,311,0.98,314,2.446,344,2.294,350,3.568,454,4.579,718,3.713,833,4.49,931,6.442,971,3.677,1470,6.437,1650,3.677,1753,5.818,1758,7.757,1927,5.005,2042,4.708,2274,2.838,2507,4.708,2655,4.416,2843,4.416,2991,4.416,3044,6.442,3186,3.548,3187,5.1,3188,5.1,3189,4.708,3190,4.708,3191,4.708,3192,6.416,3193,5.1,3194,8.402,3195,7.891,3196,5.1,3197,7.438,3198,6.673,3199,5.1,3200,6.673,3201,6.673,3202,6.442,3203,6.161,3204,5.1,3205,4.708,3206,4.708,3207,5.1,3208,5.1,3209,5.1,3210,5.1]],["title/swagger/to-html.html#undefined",[3186,2.587,3189,3.434]],["body/swagger/to-html.html#undefined",[3190,6.815,3191,6.815]],["title/swagger/to-html.html#List-all-pets",[1650,2.682,3192,2.788]],["body/swagger/to-html.html#List-all-pets",[3192,5.549]],["title/swagger/to-html.html#Create-a-pet",[971,2.682,3192,2.788]],["body/swagger/to-html.html#Create-a-pet",[3192,5.533,3203,6.815]],["title/swagger/to-html.html#Info-for-a-specific-pet",[2991,2.578,3192,2.231,3205,2.748]],["body/swagger/to-html.html#Info-for-a-specific-pet",[3206,6.835]],["title/swagger/ui.html",[3186,2.587,3211,3.434]],["body/swagger/ui.html",[0,0.037,5,0.303,161,1.205,288,6.438,311,1.271,2441,5.727,3186,5.46,3202,5.727,3211,6.105,3212,6.613,3213,6.613,3214,6.613,3215,6.613,3216,6.613,3217,7.848,3218,6.613,3219,6.613,3220,6.613,3221,6.613,3222,6.613,3223,6.613,3224,6.613,3225,6.613,3226,6.613,3227,6.613,3228,6.613,3229,6.613]],["title/swagger/ui.html#Swagger-UI",[3186,2.587,3211,3.434]],["body/swagger/ui.html#Swagger-UI",[0,0.037,5,0.303,161,1.208,288,6.458,311,1.278,2441,5.757,3186,4.624,3202,5.757,3212,6.647,3213,6.647,3214,6.647,3215,6.647,3216,6.647,3217,7.872,3218,6.647,3219,6.647,3220,6.647,3221,6.647,3222,6.647,3223,6.647,3224,6.647,3225,6.647,3226,6.647,3227,6.647,3228,6.647,3229,6.647]],["title/string/queue.html",[3230,4.292]],["body/string/queue.html",[0,0.038,4,0.319,5,0.278,6,0.734,8,1.262,13,0.348,18,0.618,25,0.967,29,4.098,34,3.398,40,0.383,41,0.988,57,2.566,88,1.729,91,1.37,150,0.431,151,0.491,152,0.652,153,0.721,154,0.885,155,1.211,161,1.336,175,1.179,176,1.465,177,1.59,178,1.436,179,1.649,180,1.721,181,1.824,182,1.721,183,1.936,191,2.983,311,1.557,314,3.349,350,2.623,404,2.348,407,1.584,543,4.856,583,2.173,590,1.351,591,1.414,592,1.483,844,2.75,2309,3.303,2369,5.545,2576,6.822,3230,5.534,3231,3.814,3232,4.735,3233,3.814,3234,4.735,3235,3.814,3236,5.467,3237,3.814,3238,3.814,3239,5.048,3240,5.467,3241,5.467,3242,5.467,3243,3.814,3244,3.814,3245,4.258,3246,4.258,3247,4.258,3248,4.258,3249,4.258,3250,5.9,3251,3.521,3252,3.521,3253,3.521,3254,3.521,3255,3.521,3256,3.521,3257,6.391,3258,6.391,3259,3.814,3260,6.98,3261,5.467,3262,3.814,3263,6.98,3264,5.467,3265,3.814,3266,3.814,3267,3.814,3268,3.814,3269,3.814,3270,3.814,3271,3.814]],["title/string/queue.html#數據結構：隊列（Queue）",[3272,5.533]],["body/string/queue.html#數據結構：隊列（Queue）",[0,0.038,4,0.26,5,0.206,8,1.413,13,0.283,25,0.86,34,3.021,40,0.341,91,1.218,150,0.383,151,0.436,152,0.579,153,0.641,154,0.787,155,1.077,161,1.347,175,1.048,176,1.303,177,1.413,178,1.492,179,1.714,180,1.789,181,1.896,182,1.789,183,2.012,311,1.579,314,3.755,844,4.096,3230,4.92,3231,5.681,3232,4.92,3233,5.681,3234,4.92,3235,5.681,3236,7.152,3237,5.681,3238,5.681,3239,5.245,3240,5.681,3273,6.343,3274,6.343,3275,6.343,3276,6.343,3277,6.343,3278,6.343,3279,6.343,3280,6.343]],["title/string/queue.html#時間複雜度",[3281,5.533]],["body/string/queue.html#時間複雜度",[0,0.038,4,0.272,5,0.215,13,0.297,25,0.9,34,3.914,40,0.357,91,1.275,150,0.401,151,0.457,152,0.606,153,0.671,154,0.823,155,1.127,161,1.317,175,1.097,176,1.364,177,1.479,311,1.414,314,2.853,3232,5.15,3234,5.15,3239,5.491,3241,7.359,3242,7.359,3243,5.947,3244,5.947,3250,6.795,3251,5.491,3252,5.491,3253,5.491,3254,5.491,3255,5.491,3256,5.491,3282,6.64,3283,6.64,3284,6.64,3285,6.64,3286,6.64,3287,6.64,3288,6.64,3289,6.64,3290,6.64,3291,6.64,3292,6.64,3293,6.64,3294,6.64,3295,6.64,3296,6.64,3297,5.947,3298,5.947]],["title/string/queue.html#雙端隊列（Deque）",[3297,4.956]],["body/string/queue.html#雙端隊列（Deque）",[0,0.038,4,0.287,5,0.227,13,0.313,25,0.951,34,4.048,40,0.377,91,1.347,150,0.424,151,0.483,152,0.641,153,0.709,154,0.87,155,1.192,161,1.338,175,1.159,176,1.441,177,1.563,311,1.463,314,3.015,3232,5.443,3234,5.443,3250,7.029,3251,5.803,3252,5.803,3253,5.803,3254,5.803,3255,5.803,3256,5.803,3298,6.285]],["title/string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞",[3299,5.533]],["body/string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞",[0,0.038,4,0.302,5,0.267,6,0.888,8,0.993,13,0.33,18,0.715,25,0.761,29,4.957,40,0.302,41,1.303,55,4.071,57,3.384,91,1.078,150,0.339,151,0.386,152,0.513,153,0.568,154,0.696,155,0.953,161,1.015,175,0.927,176,1.153,177,1.251,178,1.321,179,1.517,180,1.583,181,1.678,182,1.583,183,1.781,191,3.934,311,1.271,390,4.295,407,2.089,543,5.46,583,2.866,590,1.781,591,1.865,592,1.956,2309,4.355,2369,5.659,2576,7.527,3185,5.029,3230,4.355,3257,7.388,3258,7.388,3259,5.029,3260,7.848,3261,6.612,3262,5.029,3263,7.848,3264,6.612,3265,5.029,3266,5.029,3267,5.029,3268,5.029,3269,5.029,3270,5.029,3271,5.029,3300,5.614,3301,5.614,3302,5.614,3303,5.614,3304,5.614,3305,5.614,3306,7.382,3307,5.614,3308,5.614,3309,5.614,3310,5.614,3311,5.614,3312,5.614,3313,5.614,3314,5.614]],["title/string/queue.html#References",[88,2.247]],["body/string/queue.html#References",[3315,8.265]]],"invertedIndex":[["",{"_index":0,"title":{"RegExp.html":{},"arrowFunction.html":{},"core.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"math.html":{},"math.html#why-0-1-0-2-0-3":{},"array/good_part.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/str.html":{},"cases/math.html":{},"cases/math.html#why-0-1-0-2-0-3":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"global/function.html#cab-call-apply-vs-bind":{},"http/caching.html":{},"statements/block.html":{},"operators/precedence.html#運算符比-運算符高":{}},"body":{"RegExp.html":{},"RegExp.html#match":{},"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{},"ajax.html":{},"event.html":{},"event.html#代理":{},"es6.html":{},"es6.html#Module-的加载实现":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#ES6-Airbnb":{},"core.html#箭頭函數":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{},"index.html#More-Informations":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"scope.html":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"url.html":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"F2E/GraphQL.html":{},"F2E/cookie.html":{},"F2E/header.html":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"F2E/token.html":{},"array/array_method.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_merge.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"array/good_part.html":{},"array/object_to_array.html":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/delay.html":{},"array/fill.html":{},"cases/if.html":{},"cases/replace.html":{},"cases/str.html":{},"cases/str.html#url":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"object/object​_keys.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"glossary/hoisting.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/typeof.html#null":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"statements/let.html":{},"statements/let.html#let":{},"statements/AsyncFunction.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/split.html":{},"string/split.html#split":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["0",{"_index":8,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{},"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#Let":{},"core.html#箭頭函數":{},"num.html":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"performance.html":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"this.html":{},"this.html#簡易呼叫":{},"this.html#bind-apply-call":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"array/fill.html":{},"cases/if.html":{},"cases/str.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"global/promise.html":{},"object/object​_keys.html":{},"object/create.html":{},"statements/AsyncFunction.html":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/split.html":{},"string/split.html#split":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["0&#x4e5f;&#x662f;&#x6700;&#x5f8c;&#x57f7;&#x884c",{"_index":1029,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["0)&#xff1a;radix&#x7684;&#x503c;&#x70ba;0&#xff0c;&#x5224;&#x65b7;&#x5b57;&#x7b26;&#x4e32;&#x767c;&#x73fe;&#x4ecb;&#x65bc;1~9&#xff0c;&#x7528;10&#x9032;&#x5236;&#x8f49;&#x63db;&#xff0c;&#x7d50;&#x679c;&#x70ba;1&#xff0c;&#x6240;&#x4ee5;callback&#x7684;&#x7d50;&#x679c;&#x7b49;&#x50f9;&#x65bc;true&#xff0c;&#x8fd4;&#x56de;&#x5143;&#x7d20;&#x2019;1&#x2019;&#x3002",{"_index":2550,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["0)：radix的值為0，判斷字符串發現介於1~9，用10進制轉換，結果為1，所以callback的結果等價於true，返回元素’1",{"_index":2532,"title":{},"body":{"array/filter.html":{}}}],["0,1,2",{"_index":1773,"title":{},"body":{"this.html":{}}}],["0,1,2,3,4",{"_index":400,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{}}}],["0.00011",{"_index":1942,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["0.000110",{"_index":1950,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.009",{"_index":1924,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["0.009000000000000001",{"_index":1923,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["0.1",{"_index":1932,"title":{"math.html#why-0-1-0-2-0-3":{},"cases/math.html#why-0-1-0-2-0-3":{}},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.1.tostring(2",{"_index":1941,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.1的二進制格式是：0.0001100011",{"_index":1951,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["0.2",{"_index":1933,"title":{"math.html#why-0-1-0-2-0-3":{},"cases/math.html#why-0-1-0-2-0-3":{}},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.2).tofixed(10",{"_index":1954,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.2).toprecision(10",{"_index":1953,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.3",{"_index":1934,"title":{"math.html#why-0-1-0-2-0-3":{},"cases/math.html#why-0-1-0-2-0-3":{}},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.30000000000000004",{"_index":1935,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.4",{"_index":1945,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.6",{"_index":1948,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.8",{"_index":1946,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.9",{"_index":1922,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["0.999",{"_index":1533,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["00010",{"_index":384,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["0011",{"_index":1943,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["007",{"_index":1527,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["01",{"_index":1944,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["01&#x201d",{"_index":1991,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["02",{"_index":1580,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["03",{"_index":1963,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["03:24:00",{"_index":2713,"title":{},"body":{"global/date.html":{}}}],["05",{"_index":2722,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["0x",{"_index":604,"title":{},"body":{"core.html":{}}}],["0x&#x662f;&#x6307;&#x5341;&#x516d;&#x9032;&#x5236;&#x6578",{"_index":1110,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["0x01",{"_index":671,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["0x02",{"_index":680,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["0x11",{"_index":603,"title":{},"body":{"core.html":{}}}],["1",{"_index":5,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{},"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{},"ajax.html":{},"event.html":{},"event.html#代理":{},"es6.html":{},"es6.html#Module-的加载实现":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"index.html":{},"index.html#Getting-Started":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"scope.html":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"F2E/header.html":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_method.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_merge.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"array/good_part.html":{},"array/object_to_array.html":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/delay.html":{},"array/fill.html":{},"cases/if.html":{},"cases/replace.html":{},"cases/str.html":{},"cases/str.html#url":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"object/object​_keys.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"glossary/hoisting.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/typeof.html#null":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"statements/let.html":{},"statements/let.html#let":{},"statements/AsyncFunction.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/split.html":{},"string/split.html#split":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["1&#x662f;&#x6574;&#x578b",{"_index":3056,"title":{},"body":{"operators/typeof.html#null":{}}}],["1&#xff0c;&#x53ea;&#x662f;&#x8a08;&#x7b97;&#x548c;&#x8ce6;&#x503c;&#x7684;&#x9806;&#x5e8f;&#x4e0d;&#x4e00;&#x6a23;&#x3002",{"_index":1605,"title":{},"body":{"operators.html#Increment":{}}}],["1','2','3",{"_index":1815,"title":{},"body":{"this.html":{}}}],["1(function",{"_index":557,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["1)&#xff1a;radix&#x7684;&#x503c;&#x70ba;1&#xff0c;&#x5982;&#x679c;&#x8a72;&#x53c3;&#x6578;&#x5c0f;&#x65bc",{"_index":2552,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["1)：radix的值為1",{"_index":2534,"title":{},"body":{"array/filter.html":{}}}],["1,2,3",{"_index":2325,"title":{},"body":{"array/array_merge.html":{}}}],["1,2,3,4",{"_index":2359,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["1,2,3,4,5,6",{"_index":2324,"title":{},"body":{"array/array_merge.html":{}}}],["1.&#x5728;&#x9810;&#x71b1;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;vip&#x7528;&#x6236;&#x8d08;&#x9001",{"_index":3118,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["1.0",{"_index":3041,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["1.0.0",{"_index":3191,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#undefined":{}}}],["1.0.name",{"_index":3040,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["1.1",{"_index":81,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["1.2",{"_index":1949,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["1.4",{"_index":1921,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["1.4000000000000001",{"_index":1917,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["1.6",{"_index":1947,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["1.name",{"_index":3042,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["1.在預熱中參與活動，vip",{"_index":3104,"title":{},"body":{"statements/if...else.html":{}}}],["10",{"_index":154,"title":{},"body":{"ajax.html":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"asynchronous.html":{},"asynchronous.html#異步":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"scope.html":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"array/filter.html":{},"cases/delay.html":{},"array/fill.html":{},"cases/if.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"glossary/hoisting.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/AsyncFunction.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/split.html":{},"string/split.html#split":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["100",{"_index":254,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"performance.html":{},"performance.html#事件節流":{},"this.html":{},"this.html#Closure":{},"this.html#Callback":{},"math.html":{},"math.html#浮點數運算的坑":{},"variable.html":{},"variable.html#動態型別":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"global/promise.html":{},"object/object​_keys.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["1000",{"_index":396,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#const":{},"this.html":{},"this.html#Closure":{},"cases/delay.html":{},"global/function.html":{},"global/function.html#bind":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["10000",{"_index":385,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["100m",{"_index":2729,"title":{},"body":{"global/promise.html":{}}}],["11",{"_index":155,"title":{},"body":{"ajax.html":{},"closures.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"performance.html":{},"performance.html#事件節流":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"cases/delay.html":{},"array/fill.html":{},"cases/if.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/date.html":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/AsyncFunction.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["11&#x8868;&#x793a;2+1=3",{"_index":1912,"title":{},"body":{"this.html#bind-apply-call":{}}}],["11*11",{"_index":577,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["110",{"_index":1783,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["1100",{"_index":789,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["11中包含了兩個1,數字20中不包含1,數字1到21中共包含了13個1",{"_index":3176,"title":{},"body":{"string/split.html":{}}}],["11表示2+1=3",{"_index":1824,"title":{},"body":{"this.html":{}}}],["12",{"_index":175,"title":{},"body":{"ajax.html":{},"closures.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"performance.html":{},"performance.html#事件節流":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"math.html":{},"math.html#浮點數運算的坑":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"cases/delay.html":{},"array/fill.html":{},"cases/if.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"global/date.html":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#協商緩存":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["120",{"_index":1784,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["121",{"_index":578,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["122",{"_index":1577,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["123",{"_index":492,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/block.html":{}}}],["12345",{"_index":84,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["125",{"_index":918,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["13",{"_index":91,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{},"ajax.html":{},"closures.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"cases/delay.html":{},"array/fill.html":{},"cases/if.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#協商緩存":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["1337",{"_index":2735,"title":{},"body":{"global/promise.html":{}}}],["13t04:00:00.000z",{"_index":3016,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["14",{"_index":176,"title":{},"body":{"ajax.html":{},"closures.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"cases/delay.html":{},"cases/if.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#協商緩存":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["140",{"_index":2571,"title":{},"body":{"array/fill.html":{}}}],["141.449997",{"_index":3017,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["142.970001",{"_index":3014,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["14t04:00:00.000z",{"_index":3013,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["15",{"_index":177,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"operators.html":{},"operators.html#Increment":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"cases/delay.html":{},"cases/if.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"object/object​_keys.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["150",{"_index":1788,"title":{},"body":{"this.html":{},"this.html#Callback":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["16",{"_index":178,"title":{},"body":{"ajax.html":{},"closures.html":{},"closures.html#傳多個函數":{},"asynchronous.html":{},"asynchronous.html#異步":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"operators.html":{},"operators.html#Increment":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/delay.html":{},"cases/if.html":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"object/object​_keys.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["16+1",{"_index":605,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["17",{"_index":179,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"this.html":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"global/date.html":{},"global/promise.html":{},"object/object​_keys.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["17t03:24:00",{"_index":2714,"title":{},"body":{"global/date.html":{}}}],["18",{"_index":180,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"this.html":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"global/promise.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["180",{"_index":3179,"title":{},"body":{"string/split.html":{},"string/split.html#split":{}}}],["19",{"_index":181,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"this.html":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"global/promise.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["1995",{"_index":2712,"title":{},"body":{"global/date.html":{}}}],["1:200",{"_index":2568,"title":{},"body":{"array/fill.html":{}}}],["1xx",{"_index":72,"title":{},"body":{"RESTfulAPI.html":{}}}],["1xx&#xff1a;&#x76f8;&#x95dc;&#x4fe1;&#x606f",{"_index":127,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["1到400之間所有數字中包含的1的個數，比如數字1中包含了一個1",{"_index":3175,"title":{},"body":{"string/split.html":{}}}],["2",{"_index":4,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{},"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{},"ajax.html":{},"event.html":{},"event.html#代理":{},"es6.html":{},"es6.html#Module-的加载实现":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"scope.html":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"F2E/header.html":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_method.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_merge.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/delay.html":{},"array/fill.html":{},"cases/if.html":{},"cases/replace.html":{},"cases/str.html":{},"cases/str.html#url":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"object/object​_keys.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"glossary/hoisting.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"statements/let.html":{},"statements/let.html#let":{},"statements/AsyncFunction.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/split.html":{},"string/split.html#split":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["2&#x5b9a;&#x7fa9;&#x4e00;&#x6bb5;&#x51fd;&#x5f0f;&#x4e26;&#x8ce6;&#x4e88;&#x5230;&#x53c3;&#x6578;&#x4e0a",{"_index":1251,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["2.&#x5728;&#x9032;&#x884c;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;vip&#x7528;&#x6236;&#x8d08;&#x9001",{"_index":3121,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["2.在進行中參與活動，vip",{"_index":3106,"title":{},"body":{"statements/if...else.html":{}}}],["20",{"_index":182,"title":{},"body":{"ajax.html":{},"closures.html":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"this.html":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"array/map.html":{},"array/map.html#map":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"global/promise.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["200",{"_index":164,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#函式工廠":{},"array/fill.html":{},"global/promise.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["201",{"_index":3204,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["2019年j",{"_index":2,"title":{},"body":{"RegExp.html":{}}}],["2020",{"_index":2721,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["21",{"_index":183,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"this.html":{},"this.html#bind-apply-call":{},"array/map.html":{},"array/map.html#map":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"global/promise.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["22",{"_index":590,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#bind-apply-call":{},"array/map.html":{},"array/map.html#map":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"global/promise.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["23",{"_index":591,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"array/map.html":{},"array/map.html#map":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"global/promise.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["24",{"_index":592,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"array/map.html":{},"array/map.html#map":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"global/date.html":{},"global/promise.html":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["25",{"_index":593,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"array/map.html":{},"array/map.html#map":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"global/promise.html":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["250",{"_index":917,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"this.html":{},"this.html#Callback":{},"global/promise.html":{}}}],["26",{"_index":594,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["27",{"_index":595,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["28",{"_index":596,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"cases/arr.html":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["29",{"_index":597,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["2:140",{"_index":2569,"title":{},"body":{"array/fill.html":{}}}],["2xx",{"_index":73,"title":{},"body":{"RESTfulAPI.html":{}}}],["2xx&#xff1a;&#x64cd;&#x4f5c;&#x6210;&#x529f",{"_index":128,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["2不會存在nan",{"_index":1822,"title":{},"body":{"this.html":{}}}],["3",{"_index":13,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{},"ajax.html":{},"event.html":{},"event.html#代理":{},"es6.html":{},"es6.html#Module-的加载实现":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"scope.html":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"F2E/header.html":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_method.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_merge.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/delay.html":{},"array/fill.html":{},"cases/if.html":{},"cases/replace.html":{},"cases/str.html":{},"cases/str.html#url":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"global/function.html#References":{},"object/object​_keys.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"glossary/hoisting.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"statements/let.html":{},"statements/let.html#let":{},"statements/AsyncFunction.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/split.html":{},"string/split.html#split":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["3&#x8ce6;&#x4e88;&#x81f3;b&#x7684",{"_index":1093,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["30",{"_index":461,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"this.html":{},"this.html#Closure":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["300",{"_index":913,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"global/promise.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["3000",{"_index":541,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"http/caching.html":{},"http/caching.html#強緩存":{}}}],["3001",{"_index":2866,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["301狀態碼（永久重定向）和302狀態碼（暫時重定向，307也是這個含義），因為它們可以由應用級別返回，瀏覽器會直接跳轉，api",{"_index":77,"title":{},"body":{"RESTfulAPI.html":{}}}],["303",{"_index":78,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["304",{"_index":2861,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["31",{"_index":598,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["32",{"_index":599,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"array/map.html":{},"array/map.html#map":{},"cases/arr.html":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["33",{"_index":600,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["34",{"_index":601,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["35",{"_index":620,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["36",{"_index":621,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"cases/arr.html":{},"array/filter.html":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["36&#xff0c;&#x5247",{"_index":2527,"title":{},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["37",{"_index":622,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["38",{"_index":623,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{}}}],["39",{"_index":624,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{}}}],["39;1&#39",{"_index":2539,"title":{},"body":{"array/filter.html":{}}}],["39;2&#39",{"_index":2540,"title":{},"body":{"array/filter.html":{}}}],["39;3&#39;].filter(parseint",{"_index":2541,"title":{},"body":{"array/filter.html":{}}}],["39;jacob&#39",{"_index":536,"title":{},"body":{"core.html":{}}}],["39;msg&#39",{"_index":3071,"title":{},"body":{"operators/precedence.html":{}}}],["39;use",{"_index":1619,"title":{},"body":{"scope.html":{}}}],["3xx",{"_index":74,"title":{},"body":{"RESTfulAPI.html":{}}}],["3xx&#xff1a;&#x91cd;&#x5b9a;&#x5411",{"_index":129,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["3’].filter(parseint",{"_index":2530,"title":{},"body":{"array/filter.html":{}}}],["3’].map(parseint",{"_index":2518,"title":{},"body":{"cases/arr.html":{}}}],["3”，它並不是基礎基數2的一個有效數字。所以這個子字符串將被解析為空。如果子字符串被解析成空了，函數將返回為nan",{"_index":2519,"title":{},"body":{"cases/arr.html":{}}}],["3賦予至b",{"_index":570,"title":{},"body":{"core.html":{}}}],["4",{"_index":40,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{},"ajax.html":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"scope.html":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_method.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_merge.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"array/filter.html":{},"cases/delay.html":{},"array/fill.html":{},"cases/if.html":{},"cases/replace.html":{},"cases/str.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"object/object​_keys.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"glossary/hoisting.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/let.html":{},"statements/let.html#let":{},"statements/AsyncFunction.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/split.html":{},"string/split.html#split":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["4(finish",{"_index":3003,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["40",{"_index":625,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["400",{"_index":2572,"title":{},"body":{"array/fill.html":{},"string/split.html":{},"string/split.html#split":{}}}],["404",{"_index":2826,"title":{},"body":{"object/object​_keys.html":{}}}],["41",{"_index":626,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{}}}],["42",{"_index":627,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{}}}],["43",{"_index":628,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{}}}],["44",{"_index":629,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{}}}],["45",{"_index":630,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/array_method.html":{},"array/map.html":{},"array/map.html#map":{}}}],["46",{"_index":631,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{}}}],["47",{"_index":632,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["48",{"_index":633,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["49",{"_index":634,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["4xx",{"_index":75,"title":{},"body":{"RESTfulAPI.html":{}}}],["4xx&#xff1a;&#x5ba2;&#x6236;&#x7aef;&#x932f;&#x8aa4",{"_index":130,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["5",{"_index":150,"title":{},"body":{"ajax.html":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"scope.html":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_method.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_merge.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"array/filter.html":{},"cases/delay.html":{},"array/fill.html":{},"cases/if.html":{},"cases/replace.html":{},"cases/str.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"glossary/hoisting.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/let.html":{},"statements/let.html#let":{},"statements/AsyncFunction.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/split.html":{},"string/split.html#split":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["5&#xff1b",{"_index":424,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["5,5,5,5,5",{"_index":395,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{}}}],["50",{"_index":635,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#箭頭函數":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["500",{"_index":643,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#函式工廠":{},"core.html#const":{},"global/promise.html":{}}}],["51",{"_index":636,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["52",{"_index":637,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["52位有效數字，從第53",{"_index":1940,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["53",{"_index":638,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["53位開始)。當然，代價就是，0.1在計算機內部根本就不是精確的0.1，而是一個有舍入誤差的0.1。當代碼被編譯或解釋後，0.1",{"_index":1952,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["54",{"_index":639,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["55",{"_index":640,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["550",{"_index":2464,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["56",{"_index":641,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["5:400",{"_index":2570,"title":{},"body":{"array/fill.html":{}}}],["5xx",{"_index":76,"title":{},"body":{"RESTfulAPI.html":{}}}],["5xx&#xff1a;&#x670d;&#x52d9;&#x5668;&#x932f;&#x8aa4",{"_index":131,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["6",{"_index":151,"title":{"es6.html":{}},"body":{"ajax.html":{},"event.html":{},"event.html#代理":{},"es6.html":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"scope.html":{},"performance.html":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_method.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_merge.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"array/filter.html":{},"cases/delay.html":{},"array/fill.html":{},"cases/if.html":{},"cases/replace.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"glossary/hoisting.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/AsyncFunction.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/split.html":{},"string/split.html#split":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["600",{"_index":800,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["7",{"_index":152,"title":{},"body":{"ajax.html":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"scope.html":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"array/array_merge.html":{},"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"cases/delay.html":{},"array/fill.html":{},"cases/if.html":{},"cases/replace.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/assign.html":{},"object/assign.html#合併物件":{},"glossary/hoisting.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/AsyncFunction.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/split.html":{},"string/split.html#split":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["700",{"_index":3105,"title":{},"body":{"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["754",{"_index":1937,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["754&#x6a19;&#x6e96;&#x4e2d",{"_index":1979,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{}}}],["754&#x6a19;&#x6e96;&#x4e2d;&#x7684;&#x6d6e;&#x9ede;&#x6578;&#x4e26;&#x4e0d;&#x80fd;&#x7cbe;&#x78ba;&#x5730;&#x8868;&#x9054;&#x5c0f;&#x6578;&#xff08;&#x6bd4;&#x5982;&#x8aaa;0.1&#xff09;&#xff0c",{"_index":2709,"title":{},"body":{"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["754&#x6a19;&#x6e96;&#x6240;&#x7522;&#x751f;&#x7684;&#x5fc5;&#x7136;&#x7d50;&#x679c;&#x3002",{"_index":1978,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{}}}],["754&#x6a19;&#x6e96;&#x6240;&#x7522;&#x751f;&#x7684;&#x5fc5;&#x7136;&#x7d50;&#x679c;&#x3002;iee",{"_index":2708,"title":{},"body":{"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["754標準中的浮點數並不能精確地表達小數（比如說0.1",{"_index":2707,"title":{},"body":{"cases/math.html":{}}}],["754標準所產生的必然結果。ieee",{"_index":2706,"title":{},"body":{"cases/math.html":{}}}],["8",{"_index":153,"title":{},"body":{"ajax.html":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"scope.html":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_method.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_merge.html":{},"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#filter":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"cases/delay.html":{},"array/fill.html":{},"cases/if.html":{},"cases/replace.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"glossary/hoisting.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/AsyncFunction.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/split.html":{},"string/split.html#split":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["80",{"_index":210,"title":{},"body":{"ajax.html":{}}}],["800",{"_index":3107,"title":{},"body":{"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["81",{"_index":581,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["8601",{"_index":2717,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["9",{"_index":25,"title":{},"body":{"RegExp.html":{},"ajax.html":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"scope.html":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"cases/delay.html":{},"array/fill.html":{},"cases/if.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"glossary/hoisting.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/split.html":{},"string/split.html#split":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["9*9",{"_index":580,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["999",{"_index":1536,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["999.999",{"_index":1537,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["9]1,2",{"_index":11,"title":{},"body":{"RegExp.html":{}}}],["9]1,2$)|(^[0",{"_index":9,"title":{},"body":{"RegExp.html":{}}}],["9]1,2[\\.]1[0",{"_index":10,"title":{},"body":{"RegExp.html":{}}}],["9_",{"_index":28,"title":{},"body":{"RegExp.html":{}}}],["__proto__",{"_index":608,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{},"core.html#new":{}}}],["a&#x201d",{"_index":3304,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["a&#x662f;&#x6536",{"_index":1092,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["a(&#x5177;&#x6709",{"_index":2667,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["a(&#x662f",{"_index":2669,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["a*a",{"_index":579,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["a*b",{"_index":586,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["a+b",{"_index":588,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["a,&#x6b64;&#x6642;a&#x548c;b&#x6307;&#x5411;&#x540c;&#x4e00;&#x500b;&#x5c0d;&#x8c61;&#x3002",{"_index":3086,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["a,b",{"_index":361,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{},"core.html":{},"array/array_methods.html":{},"array/array_methods.html#sort":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["a,b&#x4f7f;&#x7528;&#x540c;&#x500b;&#x53c3;&#x8003;&#x4f4d;&#x5740",{"_index":1122,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["a,此時a和b",{"_index":3078,"title":{},"body":{"operators/precedence.html":{}}}],["a.__proto__.getlast",{"_index":729,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["a.concat(b",{"_index":2323,"title":{},"body":{"array/array_merge.html":{}}}],["a.foreach",{"_index":726,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{},"this.html":{},"this.html#Callback":{}}}],["a.getlast",{"_index":731,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["a.length",{"_index":724,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["a.pric",{"_index":2460,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["a.tostr",{"_index":732,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["a.x",{"_index":3073,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["a.x&#x5df2;&#x7d93;&#x57f7;&#x884c;&#x904e;&#x4e86;,&#x6b64;&#x6642;&#x5c0d;&#x8c61;&#x7684;x&#x5c6c;&#x6027;&#x8ce6;&#x503c;&#x70ba;a,&#x6b64;&#x6642",{"_index":3092,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["a.x已經執行過了,此時對象的x屬性賦值為a",{"_index":3079,"title":{},"body":{"operators/precedence.html":{}}}],["a1",{"_index":263,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["a2",{"_index":264,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["a3",{"_index":265,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["a4",{"_index":266,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["a===b",{"_index":610,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["aahkvsbd5f40g8sufov1i9ehag",{"_index":2027,"title":{},"body":{"variable.html":{},"variable.html#動態型別":{}}}],["aailvqn7gcen3zeexnluhuzmag",{"_index":1622,"title":{},"body":{"scope.html":{}}}],["ab",{"_index":585,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["ab2",{"_index":1582,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["abc.png",{"_index":1639,"title":{},"body":{"performance.html":{}}}],["acc",{"_index":975,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["access",{"_index":243,"title":{},"body":{"ajax.html":{},"statements/let.html":{},"statements/let.html#let":{}}}],["accumul",{"_index":2436,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["achorad",{"_index":217,"title":{},"body":{"ajax.html":{}}}],["ad",{"_index":1573,"title":{"operators.html#Adding-Strings-and-Numbers":{}},"body":{"operators.html":{}}}],["add",{"_index":358,"title":{},"body":{"closures.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["add10",{"_index":353,"title":{},"body":{"closures.html":{}}}],["add5",{"_index":352,"title":{},"body":{"closures.html":{}}}],["add_transactionhash",{"_index":2306,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["addeventlisten",{"_index":1657,"title":{},"body":{"performance.html":{},"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["addf1",{"_index":360,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["addf1(x,i",{"_index":367,"title":{},"body":{"closures.html":{}}}],["addfirst",{"_index":3251,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["addlast",{"_index":3254,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["addr",{"_index":2194,"title":{},"body":{"F2E/header.html":{}}}],["adobe.com",{"_index":2055,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["afunc",{"_index":1564,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["ag",{"_index":2844,"title":{},"body":{"http/caching.html":{}}}],["age&#xff1a;&#x55ae;&#x4f4d;&#x662f;&#x79d2;&#xff0c;&#x7de9;&#x5b58;&#x6642;&#x9593;&#x8a08;&#x7b97;&#x7684;&#x65b9;&#x5f0f;&#x662f;&#x8ddd;&#x96e2;&#x767c;&#x8d77;&#x7684;&#x6642;&#x9593;&#x7684;&#x79d2;&#x6578;&#xff0c;&#x8d85;&#x904e;&#x9593;&#x9694;&#x7684;&#x79d2;&#x6578;&#x7de9;&#x5b58;&#x5931;&#x6548",{"_index":2886,"title":{},"body":{"http/caching.html#強緩存":{}}}],["age=00",{"_index":2865,"title":{},"body":{"http/caching.html":{}}}],["age=00&apo",{"_index":2954,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["age=10",{"_index":2855,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["age=10&apo",{"_index":2903,"title":{},"body":{"http/caching.html#強緩存":{}}}],["ahdaa/blog1/test.html?id=ad&amp;val1=02&amp;val2=22#achorad",{"_index":213,"title":{},"body":{"ajax.html":{}}}],["airbnb",{"_index":952,"title":{"core.html#ES6-Airbnb":{}},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["ajax",{"_index":149,"title":{"ajax.html":{}},"body":{"ajax.html":{},"core.html":{},"api/promise.html":{},"api/promise.html#Promise":{}}}],["ajax讀json",{"_index":736,"title":{},"body":{"core.html":{}}}],["alert(target.innerhtml",{"_index":274,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["alert(x",{"_index":3060,"title":{},"body":{"statements/block.html":{}}}],["alert(xhr.responsetext",{"_index":165,"title":{},"body":{"ajax.html":{}}}],["all([p1",{"_index":2737,"title":{},"body":{"global/promise.html":{}}}],["all(hashlist.map",{"_index":2296,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["allow",{"_index":245,"title":{},"body":{"ajax.html":{}}}],["am&apo",{"_index":2807,"title":{},"body":{"global/function.html#bind":{}}}],["amp",{"_index":192,"title":{},"body":{"ajax.html":{},"this.html":{},"this.html#bind-apply-call":{},"cases/if.html":{}}}],["amp;&amp",{"_index":583,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["amp;typ",{"_index":3114,"title":{},"body":{"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["an",{"_index":2309,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["an_obj",{"_index":2823,"title":{},"body":{"object/object​_keys.html":{}}}],["anchorscrolldecorator($deleg",{"_index":3221,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["anchorscrool",{"_index":3225,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["angular",{"_index":2441,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["angular.bootstrap(document.getelementbyid('swagg",{"_index":3228,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["anim",{"_index":869,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["animal.cal",{"_index":879,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["animal.prototype.mov",{"_index":877,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["ans.map",{"_index":2311,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["ansarr",{"_index":2746,"title":{},"body":{"global/promise.html":{}}}],["ansarr.push(p",{"_index":2750,"title":{},"body":{"global/promise.html":{}}}],["anyon",{"_index":2402,"title":{},"body":{"array/object_to_array.html":{}}}],["anyth",{"_index":3223,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["api",{"_index":57,"title":{"RESTfulAPI.html":{}},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{},"RESTfulAPI.html#References":{},"ajax.html":{},"asynchronous.html":{},"asynchronous.html#setTimeout":{},"F2E/GraphQL.html":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["api.github.com",{"_index":87,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["apo",{"_index":390,"title":{},"body":{"closures.html#傳多個函數":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#繼承":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"variable.html#Hoisting":{},"cases/str.html#url":{},"global/function.html#bind":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["apollo",{"_index":2043,"title":{},"body":{"F2E/GraphQL.html":{}}}],["apos;#app&apo",{"_index":1399,"title":{},"body":{"core.html#屬性特徵":{}}}],["apos;#object&apo",{"_index":1379,"title":{},"body":{"core.html#屬性特徵":{}}}],["apos;$&apo",{"_index":1155,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;&#x4f60;&#x597d;&apo",{"_index":1273,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["apos;&#x5168;&#x57df;&apo",{"_index":1835,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{}}}],["apos;&#x5168;&#x57df;2&apo",{"_index":1879,"title":{},"body":{"this.html#bind-apply-call":{}}}],["apos;&#x5177;&#x540d;&#x51fd;&#x5f0f;&apo",{"_index":1237,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;&#x51fd;&#x5f0f;&#x7684;&apo",{"_index":1842,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["apos;&#x51fd;&#x5f0f;&#x8868;&#x9054;&#x5f0f;&apo",{"_index":1238,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;&#x51fd;&#x5f0f;&#x9673;&#x8ff0;&#x5f0f;&apo",{"_index":1236,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;&#x52d5;&#x7269;&#x754c;&apo",{"_index":1360,"title":{},"body":{"core.html#繼承":{}}}],["apos;&#x533f;&#x540d;&#x51fd;&#x5f0f;&apo",{"_index":1239,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;&#x5340;&#x57df;&apo",{"_index":1836,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{},"this.html#立即函式：":{},"this.html#bind-apply-call":{}}}],["apos;&#x53c3;&#x6578;&#x5728;&#x9019;&apo",{"_index":1265,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["apos;&#x547c;&#x53eb;&apo",{"_index":1880,"title":{},"body":{"this.html#bind-apply-call":{}}}],["apos;&#x57f7;&#x884c;&#x51fd;&#x5f0f;&apo",{"_index":1250,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;&#x5c0f;&apo",{"_index":1337,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;&#x60a0;&#x904a;&#x5361;&apo",{"_index":1856,"title":{},"body":{"this.html#Closure":{}}}],["apos;&#x6253;&#x7d66",{"_index":2031,"title":{},"body":{"variable.html#Hoisting":{}}}],["apos;&#x666e;&#x901a;&#x7528;&#x6236;&#x5728;&#x9032;&#x884c;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;&#x8d08;&#x9001;300&#x7a4d;&#x5206;&apo",{"_index":3124,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;&#x666e;&#x901a;&#x7528;&#x6236;&#x5728;&#x9032;&#x884c;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;&#x8d08;&#x9001;800&#x7a4d;&#x5206;&apo",{"_index":3133,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;&#x666e;&#x901a;&#x7528;&#x6236;&#x5728;&#x9810;&#x552e;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;&#x8d08;&#x9001;700&#x7a4d;&#x5206;&apo",{"_index":3122,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;&#x68d5;&#x8272;&apo",{"_index":1336,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;&#x6bd4;&#x6bd4;&apo",{"_index":1335,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;&#x6c92;&#x6709;fna&#x4e5f;&#x53ef;&#x4ee5;&#x57f7;&#x884c;&apo",{"_index":1258,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["apos;&#x7269;&#x4ef6;&#x7684;&apo",{"_index":1841,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{}}}],["apos;&#x72ac;&#x79d1;&apo",{"_index":1363,"title":{},"body":{"core.html#繼承":{}}}],["apos;&#x72d7;&apo",{"_index":1354,"title":{},"body":{"core.html#繼承":{}}}],["apos;&#x7acb;&#x5373;&#x51fd;&#x5f0f;&apo",{"_index":1257,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["apos;&#x7db2;&#x8ecd;&apo",{"_index":1426,"title":{},"body":{"core.html#const":{}}}],["apos;&#x8c93;&#x79d1;&apo",{"_index":1361,"title":{},"body":{"core.html#繼承":{}}}],["apos;&#x8cd3;&#x5915;&#x6cd5;&#x5c3c;&#x4e9e;&#x5dde;&#x662f;&#x7f8e;&#x570b;&#x7684;&#x5dde;&#x4efd;&#x4e4b;&#x4e00;&#xff0c;&#x6b63;&#x5f0f;&#x540d;&#x7a31;&#x70ba;&#x300c;&#x8cd3;&#x5915;&#x6cd5;&#x5c3c;&#x4e9e;&#x90a6;&#x300d;(commonwealth",{"_index":52,"title":{},"body":{"RegExp.html#match":{}}}],["apos;&#x9019;&#x88e1;&#x662f;&#x5177;&#x540d;&#x51fd;&#x5f0f;&apo",{"_index":1259,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["apos;&#x9ee8;&#x5de5;&apo",{"_index":1425,"title":{},"body":{"core.html#const":{}}}],["apos;&apo",{"_index":55,"title":{},"body":{"RegExp.html#match":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"variable.html#動態型別":{},"array/array_methods.html#reduce":{},"cases/str.html#url":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["apos;(1",{"_index":2806,"title":{},"body":{"global/function.html#bind":{}}}],["apos;)&apo",{"_index":54,"title":{},"body":{"RegExp.html#match":{}}}],["apos;,&apo",{"_index":1845,"title":{},"body":{"this.html#簡易呼叫":{}}}],["apos;./index.js&apo",{"_index":305,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["apos;/&apo",{"_index":1349,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;/b&apo",{"_index":2316,"title":{},"body":{"array/map.html#map":{},"array/array_methods.html#map":{}}}],["apos;/public&apo",{"_index":2905,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["apos;0x11&apo",{"_index":1109,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["apos;1&apo",{"_index":1004,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"this.html#bind-apply-call":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"string/split.html#split":{}}}],["apos;1&apos;,&apos;2&apos;,&apos;3&apo",{"_index":1899,"title":{},"body":{"this.html#bind-apply-call":{}}}],["apos;10&apo",{"_index":2035,"title":{},"body":{"variable.html#動態型別":{}}}],["apos;100&apo",{"_index":2485,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;150&apo",{"_index":2483,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;2&apo",{"_index":1891,"title":{},"body":{"this.html#bind-apply-call":{},"variable.html#Hoisting":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["apos;3&apo",{"_index":1902,"title":{},"body":{"this.html#bind-apply-call":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["apos;3&apos;].filter(parseint",{"_index":2556,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["apos;300&apo",{"_index":2489,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;4&apo",{"_index":1278,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"this.html#bind-apply-call":{}}}],["apos;5&apo",{"_index":1896,"title":{},"body":{"this.html#bind-apply-call":{}}}],["apos;7",{"_index":2486,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;a&apo",{"_index":286,"title":{},"body":{"event.html#代理":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#屬性特徵":{}}}],["apos;abc.png&apo",{"_index":1701,"title":{},"body":{"performance.html#懶加載":{}}}],["apos;april&apo",{"_index":2385,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["apos;b&apo",{"_index":2315,"title":{},"body":{"array/map.html#map":{},"array/array_methods.html#map":{}}}],["apos;bar&apo",{"_index":3035,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["apos;barking&apo",{"_index":1343,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;bcde&apo",{"_index":1348,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;cach",{"_index":2900,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["apos;cal",{"_index":1151,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;callfamily&apo",{"_index":1154,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;chen&apo",{"_index":1186,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["apos;chihuahua&apo",{"_index":1367,"title":{},"body":{"core.html#繼承":{}}}],["apos;claire&apo",{"_index":1169,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["apos;click&apo",{"_index":283,"title":{},"body":{"event.html#代理":{},"core.html#箭頭函數":{}}}],["apos;corgi&apo",{"_index":2808,"title":{},"body":{"global/function.html#bind":{}}}],["apos;dad&apo",{"_index":1146,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["apos;data",{"_index":1703,"title":{},"body":{"performance.html#懶加載":{}}}],["apos;deep&apo",{"_index":1195,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["apos;dessert&apo",{"_index":2665,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["apos;dev&apo",{"_index":1168,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["apos;div1&apo",{"_index":282,"title":{},"body":{"event.html#代理":{}}}],["apos;domcontentloaded&apo",{"_index":1730,"title":{},"body":{"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["apos;done&apo",{"_index":2256,"title":{},"body":{"api/promise.html#鏈接":{}}}],["apos;exec",{"_index":1243,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;express&apo",{"_index":2898,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["apos;falsy&apo",{"_index":1126,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["apos;feb&apo",{"_index":2387,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["apos;first&apo",{"_index":1427,"title":{},"body":{"core.html#const":{}}}],["apos;fn&apo",{"_index":1854,"title":{},"body":{"this.html#簡易呼叫":{}}}],["apos;from",{"_index":1975,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["apos;fun&apo",{"_index":1177,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["apos;function&apo",{"_index":522,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["apos;global&apo",{"_index":1847,"title":{},"body":{"this.html#簡易呼叫":{}}}],["apos;hash&apo",{"_index":2319,"title":{},"body":{"array/map.html#map":{}}}],["apos;hello",{"_index":1400,"title":{},"body":{"core.html#屬性特徵":{},"global/function.html#bind":{}}}],["apos;hello&apo",{"_index":1012,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"statements/for.html#for…of與for…in的差別":{}}}],["apos;hsu&apo",{"_index":1144,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{},"core.html#Let":{}}}],["apos;http://3000&apo",{"_index":2606,"title":{},"body":{"cases/str.html#url":{}}}],["apos;i",{"_index":1152,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;i&apo",{"_index":1281,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["apos;iife&apo",{"_index":1256,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["apos;img1&apo",{"_index":1702,"title":{},"body":{"performance.html#懶加載":{}}}],["apos;jacob&apo",{"_index":994,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"core.html#Let":{},"variable.html#Hoisting":{}}}],["apos;jan&apo",{"_index":2383,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["apos;jessica&apo",{"_index":1317,"title":{},"body":{"core.html#this":{}}}],["apos;jsfood.com/&apo",{"_index":2689,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["apos;june&apo",{"_index":2386,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["apos;keyup&apo",{"_index":1740,"title":{},"body":{"performance.html#事件節流":{}}}],["apos;lastest&apo",{"_index":1395,"title":{},"body":{"core.html#屬性特徵":{}}}],["apos;liao&apo",{"_index":1194,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["apos;list&apo",{"_index":1721,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["apos;load&apo",{"_index":1728,"title":{},"body":{"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["apos;local&apo",{"_index":1848,"title":{},"body":{"this.html#簡易呼叫":{}}}],["apos;march&apo",{"_index":2384,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["apos;max",{"_index":2902,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["apos;meal&apo",{"_index":2684,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["apos;mi",{"_index":1149,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;mom&apo",{"_index":1184,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["apos;mon&apo",{"_index":1145,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;money&apo",{"_index":1156,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;movie&apo",{"_index":2482,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;msg&apo",{"_index":3080,"title":{},"body":{"operators/precedence.html#運算子優先序":{}}}],["apos;music&apo",{"_index":2488,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;myname&apo",{"_index":1175,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["apos;name&apo",{"_index":1153,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;no",{"_index":2957,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["apos;order&apo",{"_index":2699,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["apos;others&apo",{"_index":1147,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;p&apo",{"_index":1448,"title":{},"body":{"core.html#箭頭函數":{},"performance.html#DOM-查詢做緩存":{}}}],["apos;pragma&apo",{"_index":2956,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["apos;reduce&apo",{"_index":326,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["apos;save&apo",{"_index":1393,"title":{},"body":{"core.html#屬性特徵":{}}}],["apos;second&apo",{"_index":1431,"title":{},"body":{"core.html#const":{}}}],["apos;select_title&apo",{"_index":2393,"title":{},"body":{"array/array_insert.html#example":{}}}],["apos;settimeout&apo",{"_index":414,"title":{},"body":{"asynchronous.html#異步":{}}}],["apos;small&apo",{"_index":1364,"title":{},"body":{"core.html#繼承":{}}}],["apos;someon",{"_index":1025,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["apos;someone&apo",{"_index":1185,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["apos;status=1&amp;type=1&apo",{"_index":3129,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;status=1&amp;type=2&apo",{"_index":3130,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;status=2&amp;type=1&apo",{"_index":3131,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;status=2&amp;type=2&apo",{"_index":3132,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;str&apo",{"_index":1200,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{}}}],["apos;stranger&apo",{"_index":1187,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["apos;text&apo",{"_index":1739,"title":{},"body":{"performance.html#事件節流":{}}}],["apos;th",{"_index":2480,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;timestampiso&apo",{"_index":2317,"title":{},"body":{"array/map.html#map":{}}}],["apos;trifle&apo",{"_index":2679,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["apos;truthy&apo",{"_index":1125,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["apos;undefined&apo",{"_index":523,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["apos;us",{"_index":1325,"title":{},"body":{"core.html#this":{},"core.html#屬性特徵":{},"this.html#簡易呼叫":{}}}],["apos;value&apo",{"_index":2318,"title":{},"body":{"array/map.html#map":{}}}],["apos;vip&#x7528;&#x6236;&#x5728;&#x9032;&#x884c;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;&#x8d08;&#x9001;800&#x7a4d;&#x5206;&apo",{"_index":3125,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;vip&#x7528;&#x6236;&#x5728;&#x9810;&#x552e;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;&#x8d08;&#x9001;1000&#x7a4d;&#x5206;&apo",{"_index":3123,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;watch&apo",{"_index":1837,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["apos;wating...&apo",{"_index":2391,"title":{},"body":{"array/array_insert.html#fill":{}}}],["apos;wating...&apos;,&apos;wating...&apo",{"_index":2390,"title":{},"body":{"array/array_insert.html#fill":{}}}],["apos;welsh",{"_index":1358,"title":{},"body":{"core.html#繼承":{}}}],["app",{"_index":929,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"F2E/GraphQL.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["app._data.obj",{"_index":940,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["app.listen",{"_index":2858,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["app.obj",{"_index":939,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["app.use(express.static((__dirnam",{"_index":2856,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["appli",{"_index":811,"title":{"this.html#bind-apply-call":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"global/function.html#cab-call-apply-vs-bind":{}},"body":{"core.html":{},"core.html#this":{},"this.html":{},"this.html#bind-apply-call":{},"global/function.html":{},"global/function.html#call、apply、bind":{},"global/function.html#cab-call-apply-vs-bind":{}}}],["apppli",{"_index":822,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["app一樣，百貨公司的餐飲店家們開發出一款點餐app",{"_index":2038,"title":{},"body":{"F2E/GraphQL.html":{}}}],["april",{"_index":2347,"title":{},"body":{"array/array_insert.html":{}}}],["arg",{"_index":948,"title":{},"body":{"core.html":{},"core.html#const":{},"core.html#箭頭函數":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["arg1",{"_index":1798,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["arg2",{"_index":1799,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["argument",{"_index":782,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#箭頭函數":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"glossary/hoisting.html":{}}}],["arguments.foreach",{"_index":784,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["ari",{"_index":189,"title":{},"body":{"ajax.html":{}}}],["arr",{"_index":794,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"this.html":{},"this.html#bind-apply-call":{},"array/map.html":{},"array/map.html#map":{},"array/array_merge.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#拼接兩個陣列":{},"array/object_to_array.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/filter.html":{},"object/object​_keys.html":{},"object/create.html":{}}}],["arr.concat",{"_index":2337,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{}}}],["arr.everi",{"_index":2430,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#every":{}}}],["arr.filt",{"_index":2332,"title":{},"body":{"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#filter":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/filter.html":{}}}],["arr.find",{"_index":2422,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#find":{}}}],["arr.foreach",{"_index":1790,"title":{},"body":{"this.html":{},"this.html#Callback":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["arr.lastindexof(item",{"_index":2328,"title":{},"body":{"array/array_merge.html":{}}}],["arr.map",{"_index":2271,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"array/array_methods.html":{},"array/array_methods.html#map":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["arr.push",{"_index":795,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{}}}],["arr.reduc",{"_index":2442,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["arr.som",{"_index":2434,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#some":{}}}],["arr.sort",{"_index":2427,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#sort":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["arr.splice(index",{"_index":2329,"title":{},"body":{"array/array_merge.html":{}}}],["arr.unshift",{"_index":2340,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列頭部":{}}}],["arr1",{"_index":2466,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["arr2",{"_index":2270,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#sort":{}}}],["arr[arr.length",{"_index":2335,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{}}}],["array",{"_index":308,"title":{"array/array_method.html":{},"array/array_merge.html":{},"array/array_insert.html":{},"array/object_to_array.html":{},"array/splice.html":{},"array/array_methods.html":{},"array/array_methods.html#Array":{},"cases/arr.html":{},"array/filter.html":{},"array/fill.html":{}},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"num.html":{},"num.html#補數字":{},"this.html":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"array/map.html":{},"array/map.html#map":{},"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/object_to_array.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"cases/arr.html":{},"array/fill.html":{},"global/function.html":{},"global/function.html#call、apply、bind":{},"statements/for.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["array&#xff0c;&#x5176;&#x4e2d",{"_index":3148,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["array.from",{"_index":973,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["array.includes(item",{"_index":2395,"title":{},"body":{"array/good_part.html":{}}}],["array.indexof(item",{"_index":2396,"title":{},"body":{"array/good_part.html":{}}}],["array.join",{"_index":2602,"title":{},"body":{"cases/str.html":{},"cases/str.html#url":{}}}],["array.prototype.concat",{"_index":2322,"title":{},"body":{"array/array_merge.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#拼接兩個陣列":{}}}],["array.prototype.everi",{"_index":2428,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#every":{}}}],["array.prototype.fil",{"_index":2354,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["array.prototype.filt",{"_index":2417,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#filter":{}}}],["array.prototype.find",{"_index":2419,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#find":{}}}],["array.prototype.foreach",{"_index":2414,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#forEach":{}}}],["array.prototype.map",{"_index":2268,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"array/array_methods.html":{},"array/array_methods.html#map":{}}}],["array.prototype.push",{"_index":2336,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{}}}],["array.prototype.reduc",{"_index":2435,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["array.prototype.som",{"_index":2432,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#some":{}}}],["array.prototype.sort",{"_index":2425,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#sort":{}}}],["array.prototype.splic",{"_index":2341,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["array.prototype.unshift",{"_index":2339,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列頭部":{}}}],["array.reduc",{"_index":312,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#箭頭函數":{}}}],["array1",{"_index":2278,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/fill.html":{}}}],["array1.map",{"_index":2280,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["arrfilt",{"_index":2454,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["arrfn",{"_index":963,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["arrfnr",{"_index":965,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["arrfunc",{"_index":793,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["arrow",{"_index":306,"title":{"arrowFunction.html#Arrow-Function":{}},"body":{"arrowFunction.html":{},"core.html":{},"core.html#ES6-Airbnb":{},"this.html":{},"this.html#bind-apply-call":{},"global/function.html":{},"global/function.html#cab-call-apply-vs-bind":{},"global/function.html#bind":{}}}],["arrsortpric",{"_index":2458,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["articl",{"_index":66,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["article/2",{"_index":69,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["articles/2",{"_index":68,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["ary[i].split",{"_index":196,"title":{},"body":{"ajax.html":{}}}],["asi",{"_index":553,"title":{"core.html#ASI-自動分號插入":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["assign",{"_index":483,"title":{"object/assign.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}},"body":{"copy.html":{},"copy.html#Object-assign":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#屬性特徵":{},"array/fill.html":{},"object/assign.html":{},"object/assign.html#有相同屬性時合併物件區段":{},"operators/destructuring_assignment.html":{}}}],["assign(o1",{"_index":2972,"title":{},"body":{"object/assign.html":{},"object/assign.html#合併物件":{}}}],["ast(abstract",{"_index":527,"title":{},"body":{"core.html":{}}}],["async",{"_index":292,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{},"cases/delay.html":{},"statements/AsyncFunction.html":{}}}],["async/await",{"_index":2760,"title":{},"body":{"global/promise.html":{}}}],["asyncfunct",{"_index":3100,"title":{"statements/AsyncFunction.html":{}},"body":{"statements/AsyncFunction.html":{}}}],["asynchron",{"_index":392,"title":{"asynchronous.html":{}},"body":{}}],["authors/12/categories/2",{"_index":70,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["authors/12?categories=2",{"_index":71,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["automat",{"_index":554,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["averag",{"_index":972,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["await",{"_index":2562,"title":{},"body":{"cases/delay.html":{},"statements/AsyncFunction.html":{}}}],["azqd8pdvbl5uk5mfq_ejlxmkag",{"_index":1829,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["a下的網頁，然後可能瀏覽了不論那個域名下的頁面，最後在域名b下的網頁完成註冊的情況。廣告可以在域名a下的網頁被跟蹤到，而註冊可以在域名b",{"_index":2067,"title":{},"body":{"F2E/cookie.html":{}}}],["a網站底下若有需要去access",{"_index":232,"title":{},"body":{"ajax.html":{}}}],["a網站是b",{"_index":241,"title":{},"body":{"ajax.html":{}}}],["b",{"_index":362,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Adding-Strings-and-Numbers":{},"scope.html":{},"this.html":{},"this.html#簡易呼叫":{},"math.html":{},"math.html#浮點數運算的坑":{},"F2E/token.html":{},"array/map.html":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#sort":{},"array/array_methods.html#reduce":{},"cases/if.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"global/promise.html":{},"object/object​_keys.html":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["b&#x53d6;&#x5f97;&#x7684;&#x662f;a&#x7684;&#x53c3;&#x8003;&#x4f4d;&#x5740",{"_index":1121,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["b,c",{"_index":371,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["b.a",{"_index":573,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["b.a&#x6c92;&#x6709;&#x95dc;&#x9023;&#x6027",{"_index":1098,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["b.length",{"_index":2443,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["b.n",{"_index":3075,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["b.person",{"_index":772,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["b.price",{"_index":2459,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["b.x",{"_index":3077,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["b1/b",{"_index":2275,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"array/array_methods.html":{},"array/array_methods.html#map":{}}}],["b2/b",{"_index":2276,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"array/array_methods.html":{},"array/array_methods.html#map":{}}}],["b3/b",{"_index":2277,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"array/array_methods.html":{},"array/array_methods.html#map":{}}}],["b[b.length",{"_index":730,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["babelj",{"_index":3102,"title":{},"body":{"statements/AsyncFunction.html":{}}}],["bad",{"_index":2776,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["bar",{"_index":1616,"title":{},"body":{"scope.html":{},"this.html":{},"this.html#簡易呼叫":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"operators/function.html":{}}}],["bark",{"_index":849,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["barking&apo",{"_index":1355,"title":{},"body":{"core.html#繼承":{}}}],["base",{"_index":1780,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["bcde",{"_index":852,"title":{},"body":{"core.html":{}}}],["be",{"_index":894,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["beauti",{"_index":533,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["befor",{"_index":3094,"title":{},"body":{"statements/let.html":{},"statements/let.html#let":{}}}],["behaviour",{"_index":3226,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["best",{"_index":92,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["between",{"_index":1552,"title":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}},"body":{"operators.html":{}}}],["bfunc",{"_index":1566,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["bibi",{"_index":845,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["bibi.__proto__",{"_index":851,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["bind",{"_index":810,"title":{"this.html#bind-apply-call":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"global/function.html#cab-call-apply-vs-bind":{},"global/function.html#bind":{}},"body":{"core.html":{},"core.html#this":{},"this.html":{},"this.html#bind-apply-call":{},"global/function.html":{},"global/function.html#call、apply、bind":{},"global/function.html#cab-call-apply-vs-bind":{},"global/function.html#bind":{}}}],["bind&#x7684;&#x61c9;&#x7528;&#x5834;&#x666f",{"_index":1884,"title":{},"body":{"this.html#bind-apply-call":{}}}],["bind(thi",{"_index":2780,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["binding&#x5927;&#x6cd5",{"_index":2815,"title":{},"body":{"global/function.html#bind":{}}}],["birthday",{"_index":2710,"title":{},"body":{"global/date.html":{}}}],["blog.xuite.net",{"_index":206,"title":{},"body":{"ajax.html":{}}}],["blog.xuite.net:80",{"_index":208,"title":{},"body":{"ajax.html":{}}}],["bodi",{"_index":474,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{}}}],["boo",{"_index":2773,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["boo.laterhello",{"_index":2775,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["boo.sayhello",{"_index":2774,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["boolean",{"_index":618,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["boolean(fals",{"_index":615,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["boolean{fals",{"_index":616,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["bootstrap",{"_index":1468,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["bowl",{"_index":2619,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["browser",{"_index":1499,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["btn",{"_index":839,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["busi",{"_index":2039,"title":{},"body":{"F2E/GraphQL.html":{}}}],["button",{"_index":836,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["b取得的是a",{"_index":609,"title":{},"body":{"core.html":{}}}],["b網站就可以在http",{"_index":242,"title":{},"body":{"ajax.html":{}}}],["b網站的http",{"_index":234,"title":{},"body":{"ajax.html":{}}}],["b網站的resourc",{"_index":233,"title":{},"body":{"ajax.html":{}}}],["b網站的web",{"_index":239,"title":{},"body":{"ajax.html":{}}}],["c",{"_index":35,"title":{},"body":{"RegExp.html":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#屬性特徵":{},"this.html":{},"this.html#簡易呼叫":{},"math.html":{},"math.html#浮點數運算的坑":{},"array/array_merge.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"global/promise.html":{},"object/object​_keys.html":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"glossary/hoisting.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["c(2)時會拋出typeerror",{"_index":2986,"title":{},"body":{"glossary/hoisting.html":{}}}],["cab",{"_index":2768,"title":{"global/function.html#cab-call-apply-vs-bind":{}},"body":{"global/function.html":{}}}],["cach",{"_index":2044,"title":{},"body":{"F2E/GraphQL.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#References":{}}}],["cache&apo",{"_index":2958,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["cachelist",{"_index":2407,"title":{},"body":{"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{}}}],["cachelist.push",{"_index":2410,"title":{},"body":{"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{}}}],["calcul",{"_index":307,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{}}}],["calculate.sum",{"_index":321,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{}}}],["call",{"_index":540,"title":{"this.html#bind-apply-call":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"global/function.html#cab-call-apply-vs-bind":{}},"body":{"core.html":{},"core.html#this":{},"this.html":{},"this.html#bind-apply-call":{},"global/function.html":{},"global/function.html#cab-call-apply-vs-bind":{},"object/create.html":{}}}],["call&#x3001;apply&#x3001;bind",{"_index":2781,"title":{"global/function.html#call、apply、bind":{}},"body":{"global/function.html#References":{}}}],["call&#x7684;thi",{"_index":1304,"title":{},"body":{"core.html#this":{}}}],["call&apo",{"_index":1026,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["callarg",{"_index":781,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["callback",{"_index":776,"title":{"this.html#Callback":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"this.html":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"global/promise.html":{}}}],["callback(ansarr",{"_index":2751,"title":{},"body":{"global/promise.html":{}}}],["callback(money",{"_index":817,"title":{},"body":{"core.html":{},"core.html#this":{},"this.html":{},"this.html#Callback":{}}}],["callfamili",{"_index":652,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["callfn",{"_index":687,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#this":{}}}],["callnam",{"_index":814,"title":{},"body":{"core.html":{},"core.html#this":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#立即函式：":{},"this.html#bind-apply-call":{}}}],["callname.cal",{"_index":1802,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["callname.call(obj",{"_index":1803,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["callnamearrow",{"_index":1810,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["callsomefn",{"_index":761,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["callsomeon",{"_index":1614,"title":{},"body":{"scope.html":{},"this.html":{},"this.html#立即函式：":{},"variable.html":{},"variable.html#Hoisting":{}}}],["call、apply、bind",{"_index":2763,"title":{},"body":{"global/function.html":{}}}],["call的thi",{"_index":815,"title":{},"body":{"core.html":{}}}],["camelcasetyper",{"_index":2830,"title":{},"body":{"object/object​_keys.html":{}}}],["cash",{"_index":642,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["cat",{"_index":870,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["cat'",{"_index":2982,"title":{},"body":{"glossary/hoisting.html":{}}}],["catalog",{"_index":2448,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["catalog:&apos;music&apo",{"_index":2490,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["catalog:'mus",{"_index":2457,"title":{},"body":{"array/array_methods.html":{}}}],["catch",{"_index":2204,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"cases/delay.html":{},"global/promise.html":{}}}],["catch(onreject",{"_index":2205,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{}}}],["catch(reject",{"_index":2640,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["catnam",{"_index":2981,"title":{},"body":{"glossary/hoisting.html":{}}}],["cbfn",{"_index":777,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["cdn",{"_index":223,"title":{},"body":{"ajax.html":{},"performance.html":{},"performance.html#優化原則和方向":{}}}],["ceil(numb",{"_index":1521,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["cfunc",{"_index":1567,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["ch.md#%e4%b8%ba%e4%bb%80%e4%b9%88",{"_index":1962,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["chang",{"_index":672,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"performance.html":{},"performance.html#事件節流":{}}}],["char",{"_index":3263,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["check",{"_index":956,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["checkscop",{"_index":1613,"title":{},"body":{"scope.html":{}}}],["chen",{"_index":699,"title":{},"body":{"core.html":{},"glossary/hoisting.html":{}}}],["chihuahua",{"_index":885,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["chihuahua.bark",{"_index":887,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["chihuahua.famili",{"_index":889,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["chihuahua.mov",{"_index":888,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["chrome",{"_index":806,"title":{},"body":{"core.html":{},"core.html#this":{},"http/caching.html":{},"http/caching.html#強緩存":{},"statements/block.html":{}}}],["clair",{"_index":679,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["class",{"_index":2624,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#bind":{}}}],["class1",{"_index":2017,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["clean",{"_index":1626,"title":{},"body":{"performance.html":{}}}],["clear",{"_index":3238,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["cleartimeout(timeoutid",{"_index":1664,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["cli",{"_index":1484,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["click",{"_index":270,"title":{},"body":{"event.html":{},"core.html":{}}}],["client端與server端可以作一種對話，並將兩端建立關連，保持伺服器與client可以持續的與serv",{"_index":2074,"title":{},"body":{"F2E/cookie.html":{}}}],["clone",{"_index":1487,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["close",{"_index":3008,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["closur",{"_index":341,"title":{"closures.html":{},"core.html#閉包-Closure":{},"this.html#Closure":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"this.html":{}}}],["code",{"_index":171,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#ES6-Airbnb":{},"performance.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["coin",{"_index":756,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["color",{"_index":843,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["colour",{"_index":2610,"title":{},"body":{"function/factory​_factory.html":{}}}],["commonwealth",{"_index":43,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["compani",{"_index":674,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["comparison",{"_index":1559,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["concat",{"_index":2321,"title":{},"body":{"array/array_merge.html":{}}}],["concat(arr",{"_index":2352,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#拼接兩個陣列":{}}}],["conditiona",{"_index":2581,"title":{},"body":{"cases/if.html":{}}}],["conditionb",{"_index":2582,"title":{},"body":{"cases/if.html":{}}}],["config",{"_index":3215,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["configur",{"_index":897,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["consol",{"_index":18,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{},"ajax.html":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"scope.html":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"math.html":{},"math.html#浮點數運算的坑":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_method.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_merge.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"array/filter.html":{},"cases/delay.html":{},"array/fill.html":{},"cases/if.html":{},"cases/replace.html":{},"cases/str.html":{},"cases/str.html#url":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"object/object​_keys.html":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"glossary/hoisting.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"statements/let.html":{},"statements/let.html#let":{},"statements/AsyncFunction.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"string/split.html":{},"string/split.html#split":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["console.dir(object",{"_index":841,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["console.dir(thi",{"_index":840,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["console.log",{"_index":787,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["console.log(&apos;3&apo",{"_index":1892,"title":{},"body":{"this.html#bind-apply-call":{}}}],["console.log(&apos;6&apo",{"_index":1897,"title":{},"body":{"this.html#bind-apply-call":{}}}],["console.log(&apos;i&apo",{"_index":1284,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["console.log('3",{"_index":1809,"title":{},"body":{"this.html":{}}}],["console.log('6",{"_index":1811,"title":{},"body":{"this.html":{}}}],["console.log('i",{"_index":797,"title":{},"body":{"core.html":{}}}],["console.log(1++\"2\"+\"2",{"_index":1578,"title":{},"body":{"operators.html":{}}}],["console.log(1++2+2",{"_index":1608,"title":{},"body":{"operators.html#Adding-Strings-and-Numbers":{}}}],["console.log(11",{"_index":569,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["console.log(123",{"_index":566,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["console.log(32",{"_index":568,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["console.log(321",{"_index":567,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["console.log(a",{"_index":548,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"glossary/hoisting.html":{}}}],["console.log(ari",{"_index":193,"title":{},"body":{"ajax.html":{}}}],["console.log(c",{"_index":2984,"title":{},"body":{"glossary/hoisting.html":{}}}],["console.log(famili",{"_index":708,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["console.log(i,v",{"_index":2284,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["console.log(j)的時候顯示的就是每次循環時的i",{"_index":406,"title":{},"body":{"asynchronous.html":{}}}],["console.log(new",{"_index":614,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["console.log(obj",{"_index":3011,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["console.log(thi",{"_index":838,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["const",{"_index":41,"title":{"core.html#const":{}},"body":{"RegExp.html":{},"RegExp.html#match":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#屬性特徵":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"this.html":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#Promise":{},"array/array_method.html":{},"array/map.html":{},"array/map.html#map":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"array/object_to_array.html":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"array/filter.html":{},"cases/delay.html":{},"array/fill.html":{},"cases/if.html":{},"cases/str.html":{},"cases/str.html#url":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"global/promise.html":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["constructor",{"_index":884,"title":{},"body":{"core.html":{},"core.html#繼承":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{}}}],["contain",{"_index":1469,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["content",{"_index":1475,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["control",{"_index":244,"title":{},"body":{"ajax.html":{},"http/caching.html":{},"http/caching.html#強緩存":{}}}],["control&#x3002",{"_index":2916,"title":{},"body":{"http/caching.html#強緩存":{}}}],["control&apo",{"_index":2901,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["convers",{"_index":560,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["cooki",{"_index":2048,"title":{"F2E/cookie.html":{}},"body":{"F2E/cookie.html":{},"F2E/cookie.html#什麼是-Cookie？":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x3002",{"_index":2119,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x5982;&#x679c;&#x60a8;&#x5728",{"_index":2107,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x5982;&#x679c;&#x60a8;&#x9020;&#x8a2a",{"_index":2115,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x53ef;&#x4ee5;&#x7528;&#x4f86;&#x63d0;&#x5347;&#x7528;&#x6236;&#x9ad4;&#x9a57;&#xff0c;&#x6bd4;&#x5982;&#x7db2;&#x7ad9;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;cookie&#x4f86;&#x8a18;&#x9304;&#x7528;&#x6236;&#x7684;&#x767b;&#x9304;&#x72c0;&#x614b;&#xff0c;&#x7528;&#x6236;&#x53ea;&#x8981;&#x767b;&#x9304;&#x4e00;&#x6b21;&#x5c31;&#x53ef;&#x4ee5;&#x4e0d;&#x7528;&#x767b;&#x9304;&#x4e86;&#xff0c;&#x8cfc;&#x7269;&#x7db2;&#x7ad9;&#x901a;&#x904e;cookie&#x4f86;&#x4fdd;&#x5b58;&#x8cfc;&#x7269;&#x8eca;&#x4e2d;&#x7684;&#x5546;&#x54c1;&#x7b49;&#x3002;&#x540c;&#x6642;&#x5f88;&#x591a;&#x7684;&#x7db2;&#x7ad9;&#x5206;&#x6790;&#x90fd;&#x662f;&#x4f9d;&#x9760;cookie&#x4f86;&#x5b8c;&#x6210;&#x7684;&#x3002",{"_index":2104,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["cookie&#x5c31;&#x50cf",{"_index":2147,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x662f;&#x4e00;&#x5f35;&#x9818;&#x9910;&#x7684;&#x865f;&#x78bc;&#x724c;&#xff0c;&#x800c;session&#x53ef;&#x4ee5;&#x662f;&#x4e00;&#x5f35;&#x6578;&#x4f4d;&#x6703;&#x54e1;&#x5361",{"_index":2156,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x662f;&#x5fc5;&#x9808;&#x7684;&#xff0c;&#x96e2;&#x958b;cookie&#x6211;&#x5011;&#x4ec0;&#x9ebc;&#x4e5f;&#x5206;&#x6790;&#x4e0d;&#x4e86;&#x3002",{"_index":2120,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#xff0c",{"_index":2101,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["cookie&#xff1a",{"_index":2098,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["cookie&#xff1f",{"_index":2095,"title":{"F2E/cookie.html#什麼是-Cookie？":{}},"body":{}}],["cookies&#xff08;third",{"_index":2144,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookies&#xff09;&#x6703;&#x6d29;&#x6f0f;&#x7db2;&#x9801;&#x700f;&#x89bd;&#x7684;&#x96b1;&#x79c1",{"_index":2145,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookies（third",{"_index":2070,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie可以用來提升用戶體驗，比如網站可以使用cookie來記錄用戶的登錄狀態，用戶只要登錄一次就可以不用登錄了，購物網站通過cookie來保存購物車中的商品等。同時很多的網站分析都是依靠cooki",{"_index":2052,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie和session得結合，到底還會不會有被竄改的問題，這個時候就要靠”簽章”來驗證資料的真實性，在我使用cooki",{"_index":2087,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie和第三方cooki",{"_index":2053,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie是一張領餐的號碼牌，而sess",{"_index":2075,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie是必須的，離開cooki",{"_index":2058,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie與session彼此之間是可以互換的(指的是你可以把資料存放在session或是cookie，並不是指session可以被放在client端當cookie使用)。但是cookie在最單純的情況裡，是有安全性的問題(資料在client端)。所以考量到這點，大部分都會選擇session。但是正如cookie是一個外加的功能，session也不屬於http",{"_index":2089,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie，會為域名a建立一個cookie，為域名b再建立一個cooki",{"_index":2068,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie，那這個cooki",{"_index":2065,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie，那麼無論多少個域，都只有一個cookie，一個屬於第三方域的cookie，網站下所有域都能共享這個cooki",{"_index":2069,"title":{},"body":{"F2E/cookie.html":{}}}],["copi",{"_index":454,"title":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"object/assign.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["cor",{"_index":230,"title":{},"body":{"ajax.html":{}}}],["corgi",{"_index":871,"title":{},"body":{"core.html":{},"core.html#繼承":{},"global/function.html":{},"global/function.html#bind":{}}}],["corgi&apo",{"_index":1359,"title":{},"body":{"core.html#繼承":{}}}],["corgi.nam",{"_index":873,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["cors是一個w3c標準，全稱是”跨域資源共享”（cross",{"_index":224,"title":{},"body":{"ajax.html":{}}}],["cors需要瀏覽器和服務器同時支持。實現cors通信的關鍵是服務器。只要服務器實現了cor",{"_index":229,"title":{},"body":{"ajax.html":{}}}],["count",{"_index":3178,"title":{},"body":{"string/split.html":{},"string/split.html#split":{}}}],["cours",{"_index":2638,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["cpu",{"_index":1627,"title":{},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["cream",{"_index":2628,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["creat",{"_index":971,"title":{"swagger/to-html.html#Create-a-pet":{}},"body":{"core.html":{},"core.html#箭頭函數":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"object/create.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["create(animal.prototyp",{"_index":882,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["create(dog",{"_index":872,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["create(shape.prototyp",{"_index":2995,"title":{},"body":{"object/create.html":{}}}],["createalmond",{"_index":2633,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createcream",{"_index":2632,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createcustard",{"_index":2631,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createdessert",{"_index":2618,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createdocumentfrag",{"_index":1647,"title":{"performance.html#合併-DOM-插入-createDocumentFragment":{}},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["createel",{"_index":1653,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["createicecream",{"_index":2614,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createjelli",{"_index":2608,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createm",{"_index":2642,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createmeal(json",{"_index":2641,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createord",{"_index":2656,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createtrifl",{"_index":2630,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["crud",{"_index":60,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["css",{"_index":1629,"title":{},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["curl",{"_index":3197,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["currentvalu",{"_index":1791,"title":{},"body":{"this.html":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["custard",{"_index":2627,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["c已經被賦值為1",{"_index":2985,"title":{},"body":{"glossary/hoisting.html":{}}}],["c為o3.c的值，最後一個出現的屬性c",{"_index":2974,"title":{},"body":{"object/assign.html":{}}}],["d",{"_index":24,"title":{},"body":{"RegExp.html":{},"closures.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["d.setdate(d.getd",{"_index":2724,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["d.toisostring().substr",{"_index":2718,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["dad",{"_index":649,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["dark",{"_index":2450,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["data",{"_index":255,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"performance.html":{},"performance.html#懶加載":{},"array/array_insert.html":{},"array/array_insert.html#example":{},"cases/delay.html":{},"global/promise.html":{}}}],["data.id",{"_index":2373,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["data.nam",{"_index":2374,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["database&#x3001;&#x8a18;&#x61b6;&#x9ad4;&#x6216;&#x662f;&#x5229;&#x7528;&#x6a94;&#x6848;&#x4ea4;&#x63db;&#x7684;&#x65b9;&#x5f0f;&#xff0c;&#x4f86;&#x628a;&#x4f60;&#x7684;&#x9ede;&#x9910;&#x8cc7;&#x8a0a;&#x4f5c;&#x5132;&#x5b58;&#xff0c;&#x800c;&#x7576;&#x4f60;&#x53bb;&#x9818;&#x98f2;&#x6599;&#x6642;&#xff0c;&#x5e97;&#x54e1;&#x6703;&#x8f38;&#x5165;&#x4f60;&#x7684;&#x865f;&#x78bc;&#xff0c;&#x4e26;&#x5728;&#x53eb;&#x51fa;&#x4f60;&#x9ede;&#x7684;&#x5167;&#x5bb9;&#x3002;&#x4f46;&#x5982;&#x679c;&#x662f;&#x5927;&#x578b;&#x7db2;&#x7ad9;&#x4e0a;&#xff0c;&#x5982;&#x679c;&#x6709;&#x8ca0;&#x8f09;&#x5e73;&#x8861;&#x7684;&#x6a5f;&#x5236;&#xff0c;&#x4f60;&#x600e;&#x9ebc;&#x80fd;&#x78ba;&#x5b9a;&#x4f60;&#x7576;&#x521d;&#x8f38;&#x5165;&#x548c;&#x6700;&#x5f8c;&#x53d6;&#x9910;&#x7684;server&#x662f;&#x540c;&#x4e00;&#x53f0;&#x5462;&#xff0c;&#x800c;&#x9019;&#x6a23;&#x4f5c;&#x7576;&#x4f60;&#x8cc7;&#x6599;&#x91cf;&#x5927;&#x6642;&#xff0c;&#x4e5f;&#x6703;&#x6709;&#x6548;&#x80fd;&#x5f71;&#x97ff;&#x7684;&#x554f;&#x984c;&#xff0c;&#x9019;&#x6642;&#x5019;cookie&#x5c31;&#x51fa;&#x5834;&#x4e86;&#x3002",{"_index":2169,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["database、記憶體或是利用檔案交換的方式，來把你的點餐資訊作儲存，而當你去領飲料時，店員會輸入你的號碼，並在叫出你點的內容。但如果是大型網站上，如果有負載平衡的機制，你怎麼能確定你當初輸入和最後取餐的server是同一台呢，而這樣作當你資料量大時，也會有效能影響的問題，這時候cooki",{"_index":2081,"title":{},"body":{"F2E/cookie.html":{}}}],["dataopts.map",{"_index":2372,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["date",{"_index":397,"title":{"global/date.html":{}},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#this":{},"core.html#new":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"http/caching.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["date.prototype.toisostr",{"_index":2715,"title":{"global/date.html#Date-prototype-toISOString":{}},"body":{"global/date.html":{}}}],["dd",{"_index":860,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["debugg",{"_index":3023,"title":{},"body":{"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/block.html":{}}}],["decemb",{"_index":2711,"title":{},"body":{"global/date.html":{}}}],["decim",{"_index":1523,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["decimal.substr(decimal.indexof",{"_index":1526,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["decimal.tofixed(length",{"_index":1525,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["declar",{"_index":357,"title":{},"body":{"closures.html":{}}}],["decreas",{"_index":802,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["deep",{"_index":469,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["default",{"_index":3202,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["defer",{"_index":291,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{}}}],["defin",{"_index":549,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"scope.html":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"variable.html":{},"variable.html#Hoisting":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/block.html":{}}}],["defind",{"_index":667,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["defineproperti",{"_index":923,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["defineproperty(b",{"_index":571,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["defineproperty(obj",{"_index":895,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["defineproperty(wallet",{"_index":920,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["delay",{"_index":2557,"title":{"cases/delay.html":{}},"body":{"cases/delay.html":{}}}],["deleg",{"_index":3220,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["delet",{"_index":661,"title":{"operators/delete.html#delete":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"variable.html":{},"operators/delete.html":{},"operators/delete.html#delete":{}}}],["delete&#x53ea;&#x80fd;&#x64cd;&#x4f5c;&#x5c0d;&#x8c61;&#x7684;&#x5c6c;&#x6027",{"_index":2836,"title":{},"body":{"operators/delete.html#delete":{}}}],["delete&#xff1a;&#x522a;&#x9664;&#xff08;delete&#xff09",{"_index":107,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["delete：刪除（delet",{"_index":65,"title":{},"body":{"RESTfulAPI.html":{}}}],["depend",{"_index":1495,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["dequ",{"_index":3250,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["dequeu",{"_index":3233,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["design",{"_index":90,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["dessert",{"_index":2617,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["dessert&#xff08;&#x751c;&#x9ede;&#xff09;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#xff0c;&#x901a;&#x904e;&#x524d;&#x9762;&#x7684",{"_index":2662,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["dessert.appli",{"_index":2621,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["dessert.prototyp",{"_index":2623,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["destructur",{"_index":3000,"title":{"operators/destructuring_assignment.html#Destructuring-assignment":{}},"body":{"operators/destructuring_assignment.html":{}}}],["dev",{"_index":676,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["devtool",{"_index":807,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#const":{}}}],["differ",{"_index":1551,"title":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}},"body":{"operators.html":{}}}],["dir",{"_index":853,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["dir(callfn",{"_index":689,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["directori",{"_index":1493,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["disk",{"_index":2838,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["div",{"_index":260,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["div1",{"_index":261,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["div1.addeventlisten",{"_index":269,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["do",{"_index":3222,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["dobyord",{"_index":2741,"title":{},"body":{"global/promise.html":{}}}],["dobyorder(task",{"_index":2755,"title":{},"body":{"global/promise.html":{}}}],["doc",{"_index":1462,"title":{"index.html":{},"index.html#hexo-theme-doc-seed":{}},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{}}}],["document",{"_index":267,"title":{},"body":{"event.html":{},"event.html#代理":{},"core.html":{},"core.html#箭頭函數":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{},"index.html#More-Informations":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{}}}],["documentfrag",{"_index":1631,"title":{},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["dog",{"_index":842,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"global/function.html":{},"global/function.html#bind":{}}}],["dog.prototyp",{"_index":881,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["dog.prototype.bark",{"_index":848,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{}}}],["dog.prototype.constructor",{"_index":883,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["dom",{"_index":812,"title":{"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}},"body":{"core.html":{},"core.html#this":{},"performance.html":{},"performance.html#優化原則和方向":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["dom&#x3002",{"_index":1720,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["dom&#x4e8b;&#x4ef6;&#x8655;&#x7406;&#x5668",{"_index":1301,"title":{},"body":{"core.html#this":{}}}],["domcontentload",{"_index":1632,"title":{"performance.html#儘早執行操作-DOMContentLoaded":{}},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["done",{"_index":2213,"title":{},"body":{"api/promise.html":{},"cases/delay.html":{},"cases/if.html":{}}}],["download",{"_index":3187,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["dummi",{"_index":1474,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["e",{"_index":34,"title":{},"body":{"RegExp.html":{},"event.html":{},"event.html#代理":{},"closures.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"global/promise.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["e.target",{"_index":272,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["easycard",{"_index":1779,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["ecm",{"_index":32,"title":{},"body":{"RegExp.html":{}}}],["ecmascript",{"_index":287,"title":{"es6.html":{}},"body":{"es6.html":{}}}],["edg",{"_index":3065,"title":{},"body":{"statements/block.html":{}}}],["el",{"_index":930,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{}}}],["ele.addeventlisten",{"_index":962,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["element",{"_index":2462,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["element.pric",{"_index":2463,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["email",{"_index":12,"title":{},"body":{"RegExp.html":{}}}],["empti",{"_index":721,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["emptyobject",{"_index":928,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["endpoint",{"_index":2045,"title":{},"body":{"F2E/GraphQL.html":{}}}],["enforc",{"_index":958,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["enqueu",{"_index":3231,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["enumer",{"_index":896,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["epirus\\src\\utils\\api\\queries.t",{"_index":2287,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["equal",{"_index":611,"title":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["erdong",{"_index":2987,"title":{},"body":{"glossary/hoisting.html":{}}}],["error",{"_index":718,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#this":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"scope.html":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"variable.html":{},"variable.html#Hoisting":{},"cases/delay.html":{},"global/promise.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["es5",{"_index":934,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"statements/for.html":{}}}],["es5中新增的一個方法，可以改變函數內部的thi",{"_index":1804,"title":{},"body":{"this.html":{}}}],["es6",{"_index":704,"title":{"core.html#ES6-Airbnb":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#ES6-Airbnb":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"this.html":{},"this.html#bind-apply-call":{},"array/good_part.html":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["eslint",{"_index":954,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["esprima.org",{"_index":530,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["etag",{"_index":2850,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["etag/if",{"_index":2863,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["event",{"_index":258,"title":{"event.html":{}},"body":{"global/promise.html":{}}}],["ex",{"_index":202,"title":{},"body":{"ajax.html":{},"object/create.html":{}}}],["exampl",{"_index":2369,"title":{"array/array_insert.html#example":{},"array/array_methods.html#examples":{}},"body":{"array/array_insert.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"global/promise.html":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["example&#x201d",{"_index":3302,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["examplevalu",{"_index":2511,"title":{},"body":{"cases/arr.html":{}}}],["examplevalues.reduc",{"_index":2514,"title":{},"body":{"cases/arr.html":{}}}],["exec",{"_index":757,"title":{},"body":{"core.html":{}}}],["expect",{"_index":2274,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/fill.html":{},"global/promise.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["expir",{"_index":2840,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["explicit",{"_index":559,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#屬性特徵":{}}}],["exponenti",{"_index":1925,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["exponential&apo",{"_index":1976,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["export",{"_index":1511,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["express",{"_index":403,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["expression&#xff09;&#x975e;&#x5e38;&#x985e;&#x4f3c;&#x65bc;&#x51fd;&#x6578;&#x8072;&#x660e;&#xff08;funct",{"_index":3027,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["expression&#xff0c;&#x7e2e;&#x5beb;&#xff1a;iife&#xff09",{"_index":1255,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["expressionfn",{"_index":748,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["expression）非常類似於函數聲明（funct",{"_index":3019,"title":{},"body":{"operators/function.html":{}}}],["expression，縮寫：iif",{"_index":764,"title":{},"body":{"core.html":{}}}],["extend",{"_index":703,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"object/create.html":{}}}],["f",{"_index":3036,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#typeof":{}}}],["f1",{"_index":375,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f1(b,c",{"_index":376,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f1,f2",{"_index":379,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f2",{"_index":382,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f2(b",{"_index":380,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f3",{"_index":383,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f3(b,c",{"_index":381,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["factor",{"_index":1514,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["factori",{"_index":2607,"title":{"function/factory​_factory.html":{}},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["factory(...arg",{"_index":2654,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["fail",{"_index":658,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#箭頭函數":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"cases/delay.html":{}}}],["fals",{"_index":23,"title":{},"body":{"RegExp.html":{},"ajax.html":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#屬性特徵":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"this.html":{},"this.html#簡易呼叫":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/if.html":{},"cases/replace.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"http/caching.html":{},"http/caching.html#強緩存":{},"operators/typeof.html":{},"operators/typeof.html#null":{},"statements/block.html":{}}}],["falseyvalu",{"_index":2513,"title":{},"body":{"cases/arr.html":{}}}],["falsi",{"_index":619,"title":{},"body":{"core.html":{}}}],["famili",{"_index":645,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#this":{},"core.html#繼承":{}}}],["family&apo",{"_index":1150,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["family.callfamili",{"_index":659,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["family.callnam",{"_index":821,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["family.json",{"_index":743,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["family.oth",{"_index":662,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["family[familymethod[i",{"_index":666,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["family[key",{"_index":696,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["familymethod",{"_index":663,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["familymethod.length;i",{"_index":664,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["father",{"_index":690,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["featur",{"_index":1479,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["feb",{"_index":2351,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["fetch(menuurl",{"_index":2636,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["fetchdata3",{"_index":2298,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["file",{"_index":1472,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["fill",{"_index":2353,"title":{"array/array_insert.html#fill":{},"array/fill.html":{}},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/fill.html":{}}}],["filter",{"_index":2331,"title":{"array/array_methods.html#filter":{},"array/filter.html":{}},"body":{"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#Array":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["final",{"_index":2212,"title":{},"body":{"api/promise.html":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{}}}],["find",{"_index":670,"title":{"array/array_methods.html#find":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#ES6-Airbnb":{},"array/array_methods.html":{}}}],["firefox",{"_index":3064,"title":{},"body":{"statements/block.html":{}}}],["first",{"_index":949,"title":{},"body":{"core.html":{},"core.html#const":{},"index.html":{},"index.html#Getting-Started":{}}}],["firstregexp",{"_index":14,"title":{},"body":{"RegExp.html":{}}}],["flavour",{"_index":2615,"title":{},"body":{"function/factory​_factory.html":{}}}],["floor(numb",{"_index":1519,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["fn",{"_index":356,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#this":{},"scope.html":{},"this.html":{},"this.html#簡易呼叫":{},"variable.html":{},"variable.html#Hoisting":{},"statements/AsyncFunction.html":{}}}],["fn.apply(team",{"_index":826,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["fn.bind(team",{"_index":828,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["fn.call",{"_index":829,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["fn.call(team",{"_index":825,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["fn1",{"_index":1609,"title":{},"body":{"scope.html":{}}}],["fn2",{"_index":827,"title":{},"body":{"core.html":{},"core.html#this":{},"scope.html":{}}}],["fna",{"_index":765,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"this.html":{},"this.html#簡易呼叫":{}}}],["fna.bind",{"_index":1772,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["fnb",{"_index":1771,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["foo",{"_index":552,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"scope.html":{},"this.html":{},"this.html#簡易呼叫":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"global/promise.html":{},"statements/block.html":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["foo&#xff0c;&#x53ef;&#x770b;&#x5230",{"_index":3169,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["foo.bar",{"_index":1776,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["for&#x2026;in",{"_index":3146,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["for&#x2026;of",{"_index":3145,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["for&#x2026;of&#x8207;for&#x2026;in&#x7684;&#x5dee;&#x5225",{"_index":3144,"title":{"statements/for.html#for…of與for…in的差別":{}},"body":{}}],["for...in",{"_index":3139,"title":{},"body":{"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["for...of",{"_index":3140,"title":{},"body":{"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["foreach",{"_index":725,"title":{"array/array_methods.html#forEach":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["format",{"_index":2720,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["forward",{"_index":2195,"title":{},"body":{"F2E/header.html":{}}}],["for…in",{"_index":3138,"title":{},"body":{"statements/for.html":{}}}],["for…of",{"_index":3137,"title":{},"body":{"statements/for.html":{}}}],["for…of與for…in",{"_index":3136,"title":{},"body":{"statements/for.html":{}}}],["for迴圈的時間複雜度為o(n2",{"_index":3245,"title":{},"body":{"string/queue.html":{}}}],["for（xff",{"_index":2197,"title":{},"body":{"F2E/header.html":{}}}],["found",{"_index":2421,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#find":{}}}],["frag",{"_index":1652,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["frag.appendchild(li",{"_index":1655,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["fragment",{"_index":1648,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["freez",{"_index":901,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["freeze(person",{"_index":945,"title":{},"body":{"core.html":{},"core.html#const":{}}}],["friday",{"_index":2650,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["fromexponenti",{"_index":1929,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["fromexponential(valu",{"_index":1931,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["fromtoarr",{"_index":2290,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["fromtoarr.push",{"_index":2294,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["fromtoarr[i].transactionhash",{"_index":2307,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["front",{"_index":3237,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["fulfil",{"_index":2203,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{},"global/promise.html":{}}}],["fulfilled/reject",{"_index":2731,"title":{},"body":{"global/promise.html":{}}}],["fun",{"_index":491,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{}}}],["func",{"_index":1813,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["func.appli",{"_index":1800,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["func.cal",{"_index":1797,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["funcb",{"_index":778,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["funcb(cbfn",{"_index":779,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["function",{"_index":161,"title":{"arrowFunction.html#Arrow-Function":{},"core.html#function":{},"function/factory​_factory.html":{}},"body":{"ajax.html":{},"event.html":{},"event.html#代理":{},"arrowFunction.html":{},"closures.html":{},"closures.html#傳多個函數":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#Increment":{},"scope.html":{},"performance.html":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"array/map.html":{},"array/map.html#map":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/filter.html":{},"array/fill.html":{},"cases/replace.html":{},"cases/str.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"operators/delete.html":{},"operators/delete.html#delete":{},"glossary/hoisting.html":{},"object/create.html":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/block.html":{},"statements/AsyncFunction.html":{},"string/split.html":{},"string/split.html#split":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["function#bind",{"_index":2777,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["function&#x662f;&#x7269;&#x4ef6",{"_index":1174,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["function&#xff0c;&#x4ee5;&#x6b64;&#x70ba;&#x57fa;&#x6e96;&#x7522;&#x751f;&#x4e00;&#x500b;&#x4f5c;&#x7528;&#x57df",{"_index":1890,"title":{},"body":{"this.html#bind-apply-call":{}}}],["function($provid",{"_index":3218,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["function(pric",{"_index":792,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#屬性特徵":{}}}],["function.nam",{"_index":3045,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["function.prototype.appli",{"_index":2765,"title":{},"body":{"global/function.html":{},"global/function.html#call、apply、bind":{}}}],["function.prototype.bind",{"_index":2766,"title":{},"body":{"global/function.html":{},"global/function.html#call、apply、bind":{}}}],["function.prototype.cal",{"_index":2764,"title":{},"body":{"global/function.html":{},"global/function.html#call、apply、bind":{}}}],["function1",{"_index":2019,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["function_express",{"_index":3037,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#typeof":{}}}],["functionc",{"_index":750,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["functiond",{"_index":751,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["functions&#xff09;&#x3002",{"_index":3030,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["function沒辦法轉成json",{"_index":490,"title":{},"body":{"copy.html":{}}}],["functoind",{"_index":753,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["g",{"_index":47,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{},"index.html":{},"index.html#Getting-Started":{},"cases/replace.html":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{}}}],["get",{"_index":1480,"title":{"index.html#Getting-Started":{}},"body":{"index.html":{}}}],["get&#xff1a;&#x8b80;&#x53d6;&#xff08;read&#xff09",{"_index":104,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["getcount",{"_index":3177,"title":{},"body":{"string/split.html":{},"string/split.html#split":{}}}],["getdat",{"_index":861,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["getdata",{"_index":737,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"cases/delay.html":{}}}],["getdata(data",{"_index":2563,"title":{},"body":{"cases/delay.html":{}}}],["getelementbyid",{"_index":268,"title":{},"body":{"event.html":{},"event.html#代理":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{}}}],["getelementsbytagnam",{"_index":1643,"title":{},"body":{"performance.html":{},"performance.html#DOM-查詢做緩存":{}}}],["getfullyear",{"_index":865,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["getmeal",{"_index":2634,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["getmonth",{"_index":863,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["getnam",{"_index":1767,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["getobj",{"_index":2827,"title":{},"body":{"object/object​_keys.html":{}}}],["getobj[typ",{"_index":2831,"title":{},"body":{"object/object​_keys.html":{}}}],["getownpropertydescriptor(wallet",{"_index":922,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["getpricevalue(order.itempric",{"_index":1928,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["getpricevalue(valu",{"_index":1930,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["getr",{"_index":2560,"title":{},"body":{"cases/delay.html":{}}}],["getter",{"_index":906,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["getter/sett",{"_index":933,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["gettim",{"_index":2565,"title":{},"body":{"cases/delay.html":{}}}],["getweeksm",{"_index":2644,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["get|post|put|delet",{"_index":2600,"title":{},"body":{"cases/str.html":{}}}],["get傳遞之網址列資訊(queri",{"_index":172,"title":{},"body":{"ajax.html":{}}}],["get：讀取（read",{"_index":62,"title":{},"body":{"RESTfulAPI.html":{}}}],["git",{"_index":1489,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["github",{"_index":86,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["givememoney",{"_index":754,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["givememoney&apo",{"_index":1244,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["givemoremoney",{"_index":755,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["givemoremoney(num",{"_index":759,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["givetimestamp",{"_index":2652,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["global",{"_index":369,"title":{},"body":{"closures.html":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"scope.html":{},"this.html":{},"this.html#簡易呼叫":{},"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["global.person",{"_index":774,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["globalloc",{"_index":1618,"title":{},"body":{"scope.html":{}}}],["go",{"_index":1494,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["godfath",{"_index":2447,"title":{},"body":{"array/array_methods.html":{}}}],["godfather&apo",{"_index":2481,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["good",{"_index":2576,"title":{},"body":{"cases/if.html":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["goodby",{"_index":348,"title":{},"body":{"closures.html":{}}}],["gpu",{"_index":1628,"title":{},"body":{"performance.html":{}}}],["graph",{"_index":2041,"title":{},"body":{"F2E/GraphQL.html":{}}}],["graphql",{"_index":2036,"title":{"F2E/GraphQL.html":{}},"body":{"F2E/GraphQL.html":{}}}],["groot",{"_index":653,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["hand",{"_index":544,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["happi",{"_index":96,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["hash",{"_index":2297,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["hash&#x78bc;&#x6703;&#x96a8;&#x4e4b;&#x6539;&#x8b8a;&#xff0c;&#x901a;&#x904e;&#x8acb;&#x6c42;&#x982d;&#x4e2d;&#x7684",{"_index":2933,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["hashlist",{"_index":2289,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["hashlist.push(v.transactionhash",{"_index":2295,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["hashtag",{"_index":1755,"title":{},"body":{"url.html":{}}}],["hateoa",{"_index":85,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["hateoas&#x3002",{"_index":144,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["header",{"_index":2187,"title":{"F2E/header.html":{},"F2E/token.html#provisional-headers-are-shown":{}},"body":{"F2E/token.html":{},"F2E/token.html#provisional-headers-are-shown":{},"http/caching.html":{},"http/caching.html#強緩存":{}}}],["hello",{"_index":345,"title":{},"body":{"closures.html":{},"core.html":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#bind-apply-call":{},"cases/str.html":{},"global/function.html":{},"global/function.html#bind":{},"statements/for.html":{}}}],["hello5",{"_index":1575,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["here",{"_index":2743,"title":{},"body":{"global/promise.html":{}}}],["hexo",{"_index":1460,"title":{"index.html":{},"index.html#hexo-theme-doc-seed":{}},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{}}}],["hi",{"_index":2772,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["hoist",{"_index":535,"title":{"variable.html#Hoisting":{}},"body":{"core.html":{},"variable.html":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/block.html":{}}}],["hoisting](https://developer.mozilla.org/zh",{"_index":2979,"title":{"glossary/hoisting.html":{}},"body":{}}],["host",{"_index":212,"title":{},"body":{"ajax.html":{}}}],["hostnam",{"_index":1749,"title":{},"body":{"url.html":{}}}],["href",{"_index":262,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["href=xxx",{"_index":221,"title":{},"body":{"ajax.html":{}}}],["hsu",{"_index":646,"title":{},"body":{"core.html":{}}}],["html",{"_index":1634,"title":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}},"body":{"performance.html":{},"performance.html#優化原則和方向":{},"performance.html#懶加載":{},"swagger/to-html.html":{}}}],["http",{"_index":59,"title":{"http/caching.html":{}},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{},"RESTfulAPI.html#狀態碼":{},"ajax.html":{},"F2E/cookie.html":{},"F2E/header.html":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#References":{}}}],["http/1.1",{"_index":2842,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["http://3000",{"_index":2603,"title":{},"body":{"cases/str.html":{}}}],["http://blog.xuite.net/ahdaa/blog1/test.html?id=ad&amp;val1=02&amp;val2=22#achorad",{"_index":203,"title":{},"body":{"ajax.html":{}}}],["http://example.com/?userid=jacob.hsu",{"_index":185,"title":{},"body":{"ajax.html":{}}}],["http://localhost:4000",{"_index":1500,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["http://ourjs.com/detail/54695381bc3f9b154e000046",{"_index":1956,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["http://petstore.swagger.io/v1/pet",{"_index":3198,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["http://petstore.swagger.io/v1/pets/{petid",{"_index":3209,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["http://www.dengzhr.com/js/1069",{"_index":1807,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["http://www.foo.com",{"_index":236,"title":{},"body":{"ajax.html":{}}}],["http://www.jstips.co/zh_tw/javascript/whi",{"_index":1558,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["http://www.ruanyifeng.com/blog/2018/10/rest",{"_index":97,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["https://${window.location.host",{"_index":1759,"title":{},"body":{"url.html":{}}}],["https://30secondsofinterviews.org",{"_index":1560,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["https://blog.florimondmanca.com/rest",{"_index":89,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["https://developer.mozilla.org/en",{"_index":342,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["https://developer.mozilla.org/zh",{"_index":246,"title":{},"body":{"ajax.html":{},"this.html":{},"this.html#Callback":{}}}],["https://github.com/airbnb/javascript",{"_index":953,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["https://github.com/interviewmap/c",{"_index":1958,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["https://github.com/vuejs/vue/blob/dev/dist/vue.j",{"_index":927,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["https://github.com/zalando",{"_index":1490,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["https://graphql.cn/learn",{"_index":2046,"title":{},"body":{"F2E/GraphQL.html":{},"F2E/GraphQL.html#References":{}}}],["https://hacpai.com/article/1546570870626?r=vanessa",{"_index":1561,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["https://hacpai.com/article/1546665384680?r=vanessa",{"_index":1572,"title":{},"body":{"operators.html":{},"operators.html#Increment":{},"operators.html#references":{}}}],["https://hacpai.com/article/1547790109416?r=vanessa",{"_index":2468,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["https://is.gd/0iywu2",{"_index":1666,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["https://ithelp.ithome.com.tw/articles/10190254",{"_index":201,"title":{},"body":{"ajax.html":{}}}],["https://ithelp.ithome.com.tw/articles/10200678",{"_index":2047,"title":{},"body":{"F2E/GraphQL.html":{},"F2E/GraphQL.html#References":{}}}],["https://jsbin.com/cejijipevo/edit?js,consol",{"_index":481,"title":{},"body":{"copy.html":{},"copy.html#Object-assign":{}}}],["https://jsbin.com/gaceyen/edit?js,consol",{"_index":2426,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#sort":{}}}],["https://jsbin.com/guqetaviho/edit?js,consol",{"_index":1555,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["https://jsbin.com/hajohit/edit?html,js,output",{"_index":259,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["https://jsbin.com/hipiruzoru/edit?js,consol",{"_index":248,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{}}}],["https://jsbin.com/honidujame/edit?js,consol",{"_index":393,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#異步":{}}}],["https://jsbin.com/hupumaxoru/edit?js,consol",{"_index":1576,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["https://jsbin.com/janoyunemu/edit?js,consol",{"_index":2510,"title":{},"body":{"cases/arr.html":{}}}],["https://jsbin.com/katifugevu/edit?js,console,output",{"_index":174,"title":{},"body":{"ajax.html":{}}}],["https://jsbin.com/keholuroba/edit?js,consol",{"_index":459,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{}}}],["https://jsbin.com/kofawafune/edit?js,consol",{"_index":487,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{}}}],["https://jsbin.com/lokejiveha/edit?js,consol",{"_index":456,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{}}}],["https://jsbin.com/lufavuf/1/edit?js,consol",{"_index":2330,"title":{},"body":{"array/array_merge.html":{}}}],["https://jsbin.com/nefobuh/edit?js,consol",{"_index":2429,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#every":{}}}],["https://jsbin.com/nidizam/edit?js,consol",{"_index":2326,"title":{},"body":{"array/array_merge.html":{}}}],["https://jsbin.com/pupasabapa/edit?js,consol",{"_index":1805,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["https://jsbin.com/qapevom/edit?js,consol",{"_index":2420,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#find":{}}}],["https://jsbin.com/razufufago/edit?js,consol",{"_index":2439,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["https://jsbin.com/samaxubazo/edit?js,consol",{"_index":1563,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["https://jsbin.com/sidixofelo/edit?js,consol",{"_index":2825,"title":{},"body":{"object/object​_keys.html":{}}}],["https://jsbin.com/tagalenuje/edit?js,consol",{"_index":1778,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["https://jsbin.com/venezeyonu/edit?js,consol",{"_index":473,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["https://jsbin.com/vihonezita/edit?js,consol",{"_index":1765,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{}}}],["https://jsbin.com/viziyewore/edit?js,consol",{"_index":1761,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{}}}],["https://jsbin.com/wurocegika/edit?js,consol",{"_index":2820,"title":{},"body":{"object/object​_keys.html":{}}}],["https://jsbin.com/wuxiqeciko/edit?js,consol",{"_index":1808,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["https://jsbin.com/xeqevarisa/1/edit?js,consol",{"_index":470,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["https://jsbin.com/xevunu/edit?js,consol",{"_index":2269,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"array/array_methods.html":{},"array/array_methods.html#map":{}}}],["https://jsbin.com/xoninaz/1/edit?js,consol",{"_index":2418,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#filter":{}}}],["https://jsbin.com/xoninaz/edit?js,consol",{"_index":2415,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#forEach":{}}}],["https://jsbin.com/yapugucezi/edit?js,consol",{"_index":2445,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["https://jsbin.com/yeleboz/edit?js,consol",{"_index":2433,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#some":{}}}],["https://jsbin.com/yijuyebixu/edit?js,consol",{"_index":378,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["https://jsbin.com/zosebomeko/edit?js,console,output",{"_index":2739,"title":{},"body":{"global/promise.html":{}}}],["https://juejin.im/post/5dbff8735188252ddb2fd25",{"_index":2538,"title":{},"body":{"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["https://paper.dropbox.com/doc/j",{"_index":1621,"title":{},"body":{"scope.html":{}}}],["https://paper.dropbox.com/doc/javascript",{"_index":2026,"title":{},"body":{"variable.html":{},"variable.html#動態型別":{}}}],["https://paper.dropbox.com/doc/jsjavascript",{"_index":1828,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["https://segmentfault.com/a/1190000012175422",{"_index":1957,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["https://tylermcginnis.com/arrow",{"_index":359,"title":{},"body":{"closures.html":{}}}],["https://wcc723.github.io/javascript/2017/12/15/javascript",{"_index":1624,"title":{},"body":{"scope.html":{}}}],["https://wcc723.github.io/javascript/2017/12/21/javascript",{"_index":1831,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["https://wcc723.github.io/javascript/2019/03/18/j",{"_index":1827,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["https://www.jianshu.com/p/8f839f558319",{"_index":1667,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["https://www.sitepoint.com/factori",{"_index":2658,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["https://www.w3schools.com/js/js_operators.asp",{"_index":1571,"title":{},"body":{"operators.html":{},"operators.html#Increment":{},"operators.html#references":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["https://www.youtube.com/watch?v=wiommcfayvi",{"_index":955,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["https://zh.wikipedia.org/wiki",{"_index":644,"title":{},"body":{"core.html":{}}}],["http代理或負載均衡方式連接到web伺服器的用戶端最原始的ip位址的http",{"_index":2198,"title":{},"body":{"F2E/header.html":{}}}],["http的無狀態(stateless",{"_index":2050,"title":{},"body":{"F2E/cookie.html":{}}}],["http的無狀態性的「額外手段」之一，讓伺服器可以設定或讀取cookies中所包含資訊，藉此來維護我們在使用服務時，可以在背景完成向伺服器發送請求，接著伺服器就匯回傳包含登入憑據（使用者名稱加密碼的某種加密形式）的cookie文檔，到使用者的硬碟(或記憶體上)，在之後登入時，只要cookie尚未到期，瀏覽器會傳送該cooki",{"_index":2051,"title":{},"body":{"F2E/cookie.html":{}}}],["i++)&#x3000;&#x3000;for",{"_index":3284,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["i++)&#x3000;&#x3000;x",{"_index":3283,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["i=1",{"_index":3241,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{}}}],["i=ary.length",{"_index":195,"title":{},"body":{"ajax.html":{}}}],["i=n",{"_index":3242,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{}}}],["icecream",{"_index":2613,"title":{},"body":{"function/factory​_factory.html":{}}}],["icecream&#xff08;&#x51b0;&#x6dc7;&#x6dcb;&#xff09;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#x4f86;&#x5b9a;&#x7fa9;&#x3002",{"_index":2664,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["id",{"_index":188,"title":{},"body":{"ajax.html":{},"event.html":{},"event.html#代理":{},"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["id&#x3002",{"_index":2158,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#x4e5f;&#x6d88;&#x5931;&#x4e86;&#xff0c;&#x4f46;&#x53ea;&#x8981;&#x628a;&#x539f;&#x4f86;&#x7684;sess",{"_index":2175,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#x518d;&#x767c;&#x9001;&#x7d66;server&#xff0c;&#x90a3;&#x9084;&#x662f;&#x80fd;&#x5920;&#x627e;&#x5230;&#x539f;&#x4f86;&#x7684;sess",{"_index":2176,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#x7684;&#x65b9;&#x5f0f;&#x4e5f;&#x53ef;&#x4ee5;&#x63a1;&#x7528;cooki",{"_index":2171,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#xff0c;&#x4e26;&#x5728;&#x672c;&#x6b21;&#x97ff;&#x61c9;&#x4e2d;&#x8fd4;&#x56de;&#x7d66;&#x5ba2;&#x6236;&#x7aef;&#x4fdd;&#x5b58;&#x3002",{"_index":2164,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#xff0c;&#x5c31;&#x8868;&#x793a;&#x9019;&#x500b;&#x5ba2;&#x6236;&#x662f;&#x8001;&#x53f8;&#x6a5f;&#x5566;&#xff0c;&#x7576;&#x7136;&#x4f3a;&#x670d;&#x5668;&#x7aef;&#x4ee5;&#x524d;&#x5c31;&#x70ba;&#x4e86;&#x9019;&#x500b;&#x5ba2;&#x6236;&#x7aef;&#x5275;&#x5efa;&#x904e;session&#xff0c;&#x670d;&#x52d9;&#x5668;&#x5c31;&#x6309;&#x7167;sess",{"_index":2161,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#xff0c;&#x628a;&#x9019;&#x500b;session&#x627e;&#x51fa;&#x4f86;&#x4f7f;&#x7528;&#x3002;&#x4f46;&#x5982;&#x679c;&#x5ba2;&#x6236;&#x7aef;&#x8acb;&#x6c42;&#x4e0d;&#x5305;&#x542b;sess",{"_index":2162,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#xff0c;&#x7576;&#x7136;&#x5982;&#x679c;&#x5df2;&#x5305;&#x542b;&#x4e00;&#x500b;sess",{"_index":2160,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#xff0c;&#xff0c;&#x5247;&#x8868;&#x793a;&#x4ed6;&#x662f;&#x65b0;&#x81c9;&#x5b54;&#xff0c;&#x90a3;&#x4f3a;&#x670d;&#x5668;&#x7aef;&#x5c31;&#x70ba;&#x6b64;&#x5ba2;&#x6236;&#x7aef;&#x5275;&#x5efa;&#x4e00;&#x500b;session&#xff0c;&#x4e26;&#x751f;&#x6210;&#x4e00;&#x500b;sess",{"_index":2163,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id=ad&amp;val1=02&amp;val2=22#achorad",{"_index":215,"title":{},"body":{"ajax.html":{}}}],["id也消失了，但只要把原來的sess",{"_index":2085,"title":{},"body":{"F2E/cookie.html":{}}}],["id再發送給server，那還是能夠找到原來的sess",{"_index":2086,"title":{},"body":{"F2E/cookie.html":{}}}],["id的方式也可以採用cooki",{"_index":2082,"title":{},"body":{"F2E/cookie.html":{}}}],["id，就表示這個客戶是老司機啦，當然伺服器端以前就為了這個客戶端創建過session，服務器就按照sess",{"_index":2078,"title":{},"body":{"F2E/cookie.html":{}}}],["id，把這個session找出來使用。但如果客戶端請求不包含sess",{"_index":2079,"title":{},"body":{"F2E/cookie.html":{}}}],["id，當然如果已包含一個sess",{"_index":2077,"title":{},"body":{"F2E/cookie.html":{}}}],["id，，則表示他是新臉孔，那伺服器端就為此客戶端創建一個session，並生成一個sess",{"_index":2080,"title":{},"body":{"F2E/cookie.html":{}}}],["ie8",{"_index":936,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["ieee",{"_index":1938,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["if&#x2026;els",{"_index":3115,"title":{"statements/if...else.html#if…else":{}},"body":{}}],["if(a",{"_index":565,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["if…els",{"_index":3103,"title":{},"body":{"statements/if...else.html":{}}}],["if中的console.log(nam",{"_index":2988,"title":{},"body":{"glossary/hoisting.html":{}}}],["iif",{"_index":762,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["iife&#x3001;closure&#x3001;callback",{"_index":1865,"title":{},"body":{"this.html#Callback":{}}}],["iife&#xff08;immedi",{"_index":441,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["iife、closure、callback",{"_index":1796,"title":{},"body":{"this.html":{}}}],["iife（immedi",{"_index":401,"title":{},"body":{"asynchronous.html":{}}}],["img",{"_index":218,"title":{},"body":{"ajax.html":{},"performance.html":{},"performance.html#懶加載":{}}}],["img1",{"_index":1637,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["img1.getattribut",{"_index":1642,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["img1.src",{"_index":1641,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["immedi",{"_index":763,"title":{},"body":{"core.html":{}}}],["immut",{"_index":2333,"title":{},"body":{"array/array_insert.html":{}}}],["implement",{"_index":2742,"title":{},"body":{"global/promise.html":{}}}],["implicit",{"_index":561,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["import",{"_index":296,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["in&#x53ea;&#x80fd;&#x505a;&#x7b2c;&#x4e00;&#x5c64;&#x7684;&#x8907;&#x88fd",{"_index":1188,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["increas",{"_index":801,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["increment",{"_index":1562,"title":{"operators.html#Increment":{}},"body":{"operators.html":{}}}],["incubator/hexo",{"_index":1491,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["index",{"_index":783,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"this.html":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"array/array_merge.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["index,array",{"_index":1794,"title":{},"body":{"this.html":{},"this.html#Callback":{}}}],["index.j",{"_index":297,"title":{},"body":{"es6.html":{}}}],["inewarray.length;i",{"_index":722,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["info",{"_index":2991,"title":{"swagger/to-html.html#Info-for-a-specific-pet":{}},"body":{"object/create.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["inform",{"_index":1504,"title":{"index.html#More-Informations":{}},"body":{"index.html":{},"index.html#More-Informations":{}}}],["ingredi",{"_index":2657,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["initi",{"_index":3095,"title":{},"body":{"statements/let.html":{},"statements/let.html#let":{}}}],["initv",{"_index":799,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["inner",{"_index":3062,"title":{},"body":{"statements/block.html":{}}}],["insert",{"_index":556,"title":{"array/array_insert.html":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["insidefn",{"_index":365,"title":{},"body":{"closures.html":{}}}],["instal",{"_index":1483,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["instanc",{"_index":2653,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"object/create.html":{}}}],["instanceof",{"_index":2998,"title":{},"body":{"object/create.html":{},"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["int32",{"_index":3195,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["int64",{"_index":3200,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["integ",{"_index":3194,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["interest",{"_index":2403,"title":{},"body":{"array/object_to_array.html":{}}}],["interview",{"_index":1959,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["invalid",{"_index":547,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["invok",{"_index":402,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["ip",{"_index":2192,"title":{},"body":{"F2E/header.html":{}}}],["isempti",{"_index":3235,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["iso",{"_index":2716,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["item",{"_index":314,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"this.html":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"array/map.html":{},"array/map.html#map":{},"array/array_merge.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_methods.html":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["item,index",{"_index":2272,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["item.catalog",{"_index":2455,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["items.length",{"_index":3236,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["items.pop",{"_index":3256,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["items.push(",{"_index":3232,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["items.shift",{"_index":3234,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["items.splice(items.length",{"_index":2342,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["items.unshift(",{"_index":3252,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["iter",{"_index":1792,"title":{},"body":{"this.html":{},"this.html#Callback":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["iterable.foo",{"_index":3143,"title":{},"body":{"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["j",{"_index":404,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"string/queue.html":{}}}],["j++)&#x3000;&#x3000;x",{"_index":3285,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["j=1",{"_index":3243,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{}}}],["j=n",{"_index":3244,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{}}}],["jacob",{"_index":537,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{},"core.html#Let":{},"variable.html":{},"variable.html#Hoisting":{}}}],["jacob&#x4f60;&#x597d;1",{"_index":1275,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["jacob.hsu",{"_index":199,"title":{},"body":{"ajax.html":{}}}],["jacob.hsu.tw",{"_index":22,"title":{},"body":{"RegExp.html":{}}}],["jacob.hsu.tw@gmail.com",{"_index":20,"title":{},"body":{"RegExp.html":{}}}],["jacob1",{"_index":2011,"title":{},"body":{"variable.html":{}}}],["jacob2",{"_index":2013,"title":{},"body":{"variable.html":{}}}],["jacob3",{"_index":2015,"title":{},"body":{"variable.html":{}}}],["jacob你好1",{"_index":780,"title":{},"body":{"core.html":{}}}],["jan",{"_index":2345,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["javascript",{"_index":525,"title":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#屬性特徵":{},"num.html":{},"num.html#補數字":{},"performance.html":{},"this.html":{},"this.html#bind-apply-call":{},"math.html":{},"math.html#浮點數運算的坑":{},"api/promise.html":{},"api/promise.html#Promise":{},"array/good_part.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"cases/arr.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"global/promise.html":{},"glossary/hoisting.html":{},"operators/function.html":{}}}],["javascript&#x4e2d;&#x7684;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x6c92;&#x6709;&#x63d0;&#x5347;,&#x4e0d;&#x50cf;&#x51fd;&#x6578;&#x8072;&#x660e;,&#x4f60;&#x5728;&#x5b9a;&#x7fa9;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x4e4b;&#x524d;&#x4e0d;&#x80fd;&#x4f7f;&#x7528;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f",{"_index":3034,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["javascript&#x4e2d;&#x7684;&#x5c0f;&#x6578;&#x63a1;&#x7528;&#x7684;&#x662f;&#x96d9;&#x7cbe;&#x5ea6;(64&#x4f4d;)&#x8868;&#x793a;&#x7684;&#xff0c;&#x7531;&#x4e09;&#x90e8;&#x5206;&#x7d44;&#x6210;&#xff1a;&#x3000;&#x7b26",{"_index":1981,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["javascript中的小數採用的是雙精度(64",{"_index":1939,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["javascript構建的應用程序的複雜性比語言發展的速度還要快。這種情況迫使開發人員使用javascript",{"_index":2394,"title":{},"body":{"array/good_part.html":{}}}],["javascript遵循iee",{"_index":1936,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["jelli",{"_index":2609,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["jelly&#xff08;&#x679c;&#x51cd;&#xff09;&#x548c",{"_index":2663,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["jessica",{"_index":830,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["join",{"_index":2604,"title":{},"body":{"cases/str.html":{},"cases/str.html#url":{}}}],["jqueri",{"_index":702,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["jquery.extend",{"_index":706,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["js",{"_index":407,"title":{"array/good_part.html":{}},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"scope.html":{},"performance.html":{},"performance.html#優化原則和方向":{},"this.html":{},"math.html":{},"array/array_merge.html":{},"cases/if.html":{},"cases/math.html":{},"operators/typeof.html":{},"operators/typeof.html#null":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["js&#x5169;&#x7a2e;&#x578b;&#x5225",{"_index":1171,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["js&#x5c6c;&#x65bc;&#x975c;&#x614b;&#x4f5c;&#x7528;&#x57df",{"_index":989,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["js&#x662f;&#x55ae;&#x57f7;&#x884c;&#x5e8f",{"_index":1018,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["js&#x6c92;&#x6709;&#x6574;&#x578b;&#x53ea;&#x6709;&#x5c0d;&#x8c61",{"_index":3058,"title":{},"body":{"operators/typeof.html#null":{}}}],["js&#x8a9e;&#x8a00;&#x4e2d;&#x51fd;&#x5f0f;&#x7684;&#x8a2d;&#x8a08;&#xff0c;&#x5fc5;&#x6709;&#x56de;&#x50b3;&#x503c;&#xff0c;&#x6c92;&#x5beb;&#x76f8;&#x7576;&#x65bc;&#x56de;&#x50b3",{"_index":1898,"title":{},"body":{"this.html#bind-apply-call":{}}}],["jsfood.com",{"_index":2645,"title":{},"body":{"function/factory​_factory.html":{}}}],["json",{"_index":486,"title":{"copy.html#轉成-JSON-再轉回來":{},"core.html#JSON":{}},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"F2E/token.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["json&#x6240;&#x6709;&#x7684;&#x5c6c;&#x6027;&#x4e00;&#x5b9a;&#x90fd;&#x662f;&#x5b57;&#x4e32;&#x7684;&#x5f62;&#x5f0f",{"_index":1218,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["json.pars",{"_index":735,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["json.stringify(famili",{"_index":709,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["json是javascript的一個子集，但json",{"_index":733,"title":{},"body":{"core.html":{}}}],["json，這對於在會話之間持久化，通過http或websocket",{"_index":2651,"title":{},"body":{"function/factory​_factory.html":{}}}],["js正则表达式，限1",{"_index":3,"title":{},"body":{"RegExp.html":{}}}],["june",{"_index":2348,"title":{},"body":{"array/array_insert.html":{}}}],["jwt",{"_index":2257,"title":{},"body":{"F2E/token.html":{}}}],["k98zbcemd1ig9dzyynrul",{"_index":1623,"title":{},"body":{"scope.html":{},"variable.html":{},"variable.html#動態型別":{}}}],["key",{"_index":694,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#ES6-Airbnb":{},"array/object_to_array.html":{},"object/object​_keys.html":{},"statements/for.html":{}}}],["key)，for…of",{"_index":3142,"title":{},"body":{"statements/for.html":{}}}],["keydown",{"_index":1659,"title":{},"body":{"performance.html":{}}}],["keydown&#xff1a;&#x6309;&#x4e0b;&#x9375;&#x76e4;&#x9375",{"_index":1736,"title":{},"body":{"performance.html#事件節流":{}}}],["keys(an_obj",{"_index":2824,"title":{},"body":{"object/object​_keys.html":{}}}],["keys(arr",{"_index":2821,"title":{},"body":{"object/object​_keys.html":{}}}],["keys(obj",{"_index":2822,"title":{},"body":{"object/object​_keys.html":{}}}],["keys(obj).map",{"_index":2404,"title":{},"body":{"array/object_to_array.html":{}}}],["keys(types).foreach",{"_index":2828,"title":{},"body":{"object/object​_keys.html":{}}}],["keyup",{"_index":1658,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["keyup&#xff1a;&#x91cb;&#x653e;&#x9375;&#x76e4;&#x9375",{"_index":1737,"title":{},"body":{"performance.html#事件節流":{}}}],["kingdom",{"_index":876,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["knight",{"_index":2451,"title":{},"body":{"array/array_methods.html":{}}}],["knight&apo",{"_index":2484,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["knowledg",{"_index":1960,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["last",{"_index":2862,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["lastest",{"_index":924,"title":{},"body":{"core.html":{}}}],["lastindex",{"_index":2327,"title":{},"body":{"array/array_merge.html":{}}}],["lastmodifi",{"_index":2851,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["laterhello",{"_index":2770,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["layer",{"_index":2626,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["left",{"_index":543,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["length",{"_index":727,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"num.html":{},"num.html#補數字":{},"performance.html":{},"performance.html#DOM-查詢做緩存":{},"this.html":{},"this.html#bind-apply-call":{},"cases/replace.html":{},"string/split.html":{},"string/split.html#split":{}}}],["length).join",{"_index":1530,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["let&#x4f5c;&#x7528;&#x57df;&#x53ea;&#x5728;for",{"_index":1285,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["let&#x7684;&#x4f5c;&#x7528;&#x57df;&#x5247;&#x662f;&#x5728;&#x5340;&#x584a;(block",{"_index":1420,"title":{},"body":{"core.html#Let":{}}}],["let作用域只在for",{"_index":798,"title":{},"body":{"core.html":{}}}],["let的作用域則是在區塊(block",{"_index":942,"title":{},"body":{"core.html":{}}}],["lexic",{"_index":534,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["lh",{"_index":542,"title":{"core.html#LHS":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["lhs)&#xff0c;&#x5be6;&#x969b;&#x4e0a;&#x5728;&#x6b64;&#x5c31;&#x7121;&#x6cd5;&#x7e7c;&#x7e8c;&#x57f7;&#x884c",{"_index":1031,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["li",{"_index":1651,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["li.innerhtml",{"_index":1654,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["liao",{"_index":713,"title":{},"body":{"core.html":{}}}],["limit",{"_index":3193,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["link",{"_index":220,"title":{},"body":{"ajax.html":{},"cases/str.html":{},"cases/str.html#url":{}}}],["list",{"_index":1650,"title":{"swagger/to-html.html#List-all-pets":{}},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"array/array_method.html":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["listchunk",{"_index":2406,"title":{},"body":{"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{}}}],["listnod",{"_index":1649,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["listnode.appendchild(frag",{"_index":1656,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["load",{"_index":741,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"performance.html":{}}}],["local",{"_index":372,"title":{},"body":{"closures.html":{},"index.html":{},"index.html#Getting-Started":{},"scope.html":{},"this.html":{},"this.html#簡易呼叫":{},"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["locat",{"_index":82,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["location.hash",{"_index":216,"title":{},"body":{"ajax.html":{}}}],["location.host",{"_index":207,"title":{},"body":{"ajax.html":{}}}],["location.hostnam",{"_index":205,"title":{},"body":{"ajax.html":{}}}],["location.href",{"_index":184,"title":{},"body":{"ajax.html":{},"url.html":{}}}],["location.pathnam",{"_index":211,"title":{},"body":{"ajax.html":{}}}],["location.port",{"_index":209,"title":{},"body":{"ajax.html":{}}}],["location.protocol",{"_index":204,"title":{},"body":{"ajax.html":{}}}],["location.search",{"_index":214,"title":{},"body":{"ajax.html":{}}}],["locationprovid",{"_index":3217,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["locationprovider.hashprefix",{"_index":3227,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["lodash",{"_index":2398,"title":{},"body":{"array/object_to_array.html":{}}}],["log",{"_index":249,"title":{},"body":{"ajax.html":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"num.html":{},"num.html#補數字":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"scope.html":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"api/promise.html":{},"api/promise.html#鏈接":{},"cases/if.html":{},"cases/str.html":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"object/object​_keys.html":{},"glossary/hoisting.html":{},"object/create.html":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"statements/AsyncFunction.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["log((",{"_index":3068,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{}}}],["log(++a",{"_index":3101,"title":{},"body":{"statements/AsyncFunction.html":{}}}],["log(++a*a",{"_index":576,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["log(a",{"_index":457,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"operators.html":{},"operators.html#Increment":{},"this.html":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#Hoisting":{},"array/array_merge.html":{},"glossary/hoisting.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/block.html":{},"statements/let.html":{},"statements/let.html#let":{},"statements/AsyncFunction.html":{}}}],["log(a.lastest",{"_index":925,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["log(a.n",{"_index":3074,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["log(a.x",{"_index":3076,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["log(a===b",{"_index":1557,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["log(a==b",{"_index":1556,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["log(add10",{"_index":355,"title":{},"body":{"closures.html":{}}}],["log(add5",{"_index":354,"title":{},"body":{"closures.html":{}}}],["log(addf1",{"_index":363,"title":{},"body":{"closures.html":{}}}],["log(an",{"_index":3268,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["log(app",{"_index":932,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["log(arg",{"_index":950,"title":{},"body":{"core.html":{},"core.html#const":{},"core.html#箭頭函數":{}}}],["log(arr",{"_index":1817,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{},"array/array_merge.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"object/create.html":{}}}],["log(arr1",{"_index":2467,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["log(arr2",{"_index":2273,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#sort":{}}}],["log(array1.fil",{"_index":2356,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/fill.html":{}}}],["log(array1.reduce(reduc",{"_index":2437,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["log(arrfilt",{"_index":2456,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["log(arrfn",{"_index":964,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(arrfnr",{"_index":966,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(arrsortpric",{"_index":2461,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["log(averag",{"_index":979,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(b",{"_index":458,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"core.html":{},"core.html#this":{},"core.html#new":{},"scope.html":{},"math.html":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/block.html":{}}}],["log(b.a",{"_index":574,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["log(b.lasttext",{"_index":855,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(bfunc",{"_index":1569,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["log(bibi",{"_index":846,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(c",{"_index":582,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"math.html":{},"math.html#浮點數運算的坑":{},"array/array_merge.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"glossary/hoisting.html":{}}}],["log(c.person",{"_index":773,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["log(callfn",{"_index":688,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["log(cfunc",{"_index":1570,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["log(chihuahua",{"_index":886,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["log(class1.value2",{"_index":2022,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["log(class1.value3",{"_index":2023,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["log(copi",{"_index":2968,"title":{},"body":{"object/assign.html":{}}}],["log(corgi",{"_index":875,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["log(dat",{"_index":858,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(data",{"_index":738,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["log(date.getfulld",{"_index":867,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(dog.prototyp",{"_index":850,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(error",{"_index":2566,"title":{},"body":{"cases/delay.html":{}}}],["log(expressionfn",{"_index":749,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["log(fail",{"_index":2210,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{}}}],["log(falseyvalu",{"_index":2517,"title":{},"body":{"cases/arr.html":{}}}],["log(famili",{"_index":655,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["log(family.nam",{"_index":654,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["log(family[a",{"_index":656,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["log(familymethod[i",{"_index":665,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["log(firstregexp.test",{"_index":19,"title":{},"body":{"RegExp.html":{}}}],["log(fn",{"_index":374,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["log(fns(addf1",{"_index":377,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["log(fns(f1,f2,f3",{"_index":386,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["log(foo+bar",{"_index":1617,"title":{},"body":{"scope.html":{}}}],["log(foo.bar",{"_index":1775,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["log(found",{"_index":2423,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#find":{}}}],["log(functionc",{"_index":752,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["log(getcount",{"_index":3180,"title":{},"body":{"string/split.html":{},"string/split.html#split":{}}}],["log(getnam",{"_index":1769,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["log(getobj",{"_index":2832,"title":{},"body":{"object/object​_keys.html":{}}}],["log(givememoney",{"_index":760,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["log(i",{"_index":394,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#Let":{},"operators.html":{},"operators.html#Increment":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["log(id",{"_index":198,"title":{},"body":{"ajax.html":{}}}],["log(iif",{"_index":766,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["log(item",{"_index":1818,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["log(item,index",{"_index":2416,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#forEach":{}}}],["log(j",{"_index":796,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["log(key",{"_index":695,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["log(link",{"_index":2605,"title":{},"body":{"cases/str.html":{},"cases/str.html#url":{}}}],["log(listchunk",{"_index":2412,"title":{},"body":{"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{}}}],["log(longest",{"_index":2444,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["log(map1",{"_index":2281,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["log(mingmoney",{"_index":791,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{}}}],["log(mingmoney.valu",{"_index":805,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["log(month",{"_index":2350,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["log(mynam",{"_index":2024,"title":{},"body":{"variable.html":{},"variable.html#Hoisting":{}}}],["log(nam",{"_index":767,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#Let":{},"glossary/hoisting.html":{}}}],["log(newarray",{"_index":717,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["log(newarray[i",{"_index":723,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["log(newstr",{"_index":683,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["log(newstr2",{"_index":686,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["log(num",{"_index":564,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["log(num.secondpow",{"_index":857,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(numfn",{"_index":968,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(numfunct",{"_index":970,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(o1",{"_index":2973,"title":{},"body":{"object/assign.html":{},"object/assign.html#合併物件":{}}}],["log(obj",{"_index":892,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["log(obj1",{"_index":464,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{}}}],["log(obj1.bodi",{"_index":477,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{}}}],["log(obj2",{"_index":465,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{}}}],["log(paramet",{"_index":770,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["log(person",{"_index":775,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["log(pick",{"_index":3006,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["log(queu",{"_index":3266,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["log(r",{"_index":51,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{},"cases/delay.html":{}}}],["log(replacestr",{"_index":2601,"title":{},"body":{"cases/str.html":{}}}],["log(rest",{"_index":3001,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["log(result",{"_index":2431,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/filter.html":{}}}],["log(retarr",{"_index":2591,"title":{},"body":{"cases/replace.html":{}}}],["log(self.mynam",{"_index":820,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["log(sevendaysago",{"_index":2726,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["log(statementfn",{"_index":747,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["log(success",{"_index":2209,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{}}}],["log(sum",{"_index":373,"title":{},"body":{"closures.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["log(today",{"_index":2719,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["log(tot",{"_index":977,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(translate(obj",{"_index":2575,"title":{},"body":{"array/fill.html":{}}}],["log(truthyvalu",{"_index":2516,"title":{},"body":{"cases/arr.html":{}}}],["log(typ",{"_index":2829,"title":{},"body":{"object/object​_keys.html":{}}}],["log(uniquelist",{"_index":2267,"title":{},"body":{"array/array_method.html":{}}}],["log(valu",{"_index":1610,"title":{},"body":{"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"global/promise.html":{}}}],["log(value1",{"_index":2021,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["log(wallet",{"_index":921,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["log(wallet.sav",{"_index":916,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["log(whereparamet",{"_index":771,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["log(word",{"_index":3265,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["log(x",{"_index":1565,"title":{},"body":{"operators.html":{},"operators.html#Increment":{},"statements/block.html":{}}}],["log).catch",{"_index":2730,"title":{},"body":{"global/promise.html":{}}}],["log.bind",{"_index":2756,"title":{},"body":{"global/promise.html":{}}}],["logic",{"_index":584,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["longest",{"_index":2438,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["look",{"_index":1482,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["loop",{"_index":2508,"title":{},"body":{"cases/arr.html":{}}}],["loot",{"_index":2757,"title":{},"body":{"global/promise.html":{}}}],["lowercas",{"_index":2593,"title":{},"body":{"cases/str.html":{}}}],["m",{"_index":36,"title":{},"body":{"RegExp.html":{}}}],["main",{"_index":1478,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["make",{"_index":94,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["makeadd",{"_index":349,"title":{},"body":{"closures.html":{}}}],["mani",{"_index":3196,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["map",{"_index":1814,"title":{"array/map.html#map":{},"array/array_methods.html#map":{}},"body":{"this.html":{},"this.html#bind-apply-call":{},"array/map.html":{},"array/map.html#map":{},"array/array_methods.html":{},"array/array_methods.html#Array":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"array/filter.html":{}}}],["map()&#x3001;filter()&#x3001;reduc",{"_index":2505,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["map()、filter()、reduc",{"_index":2465,"title":{},"body":{"array/array_methods.html":{}}}],["map/blob/master/js/j",{"_index":1961,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["map1",{"_index":2279,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["march",{"_index":2346,"title":{},"body":{"array/array_insert.html":{}}}],["match",{"_index":38,"title":{"RegExp.html#match":{}},"body":{"RegExp.html":{},"cases/replace.html":{},"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["math",{"_index":1515,"title":{},"body":{"num.html":{},"num.html#取值":{},"num.html#補數字":{}}}],["math.ceil",{"_index":1510,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["math.floor",{"_index":1509,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["math.j",{"_index":1955,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["math.pow",{"_index":1507,"title":{},"body":{"num.html":{}}}],["math.pow()&#x50b3;&#x56de;&#x6307;&#x5b9a;&#x4e58;&#x51aa;&#x6578;&#x7684;&#x57fa;&#x5e95;&#x904b;&#x7b97;&#x5f0f;&#x503c",{"_index":1539,"title":{},"body":{"num.html#取值":{}}}],["math.round",{"_index":1508,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["max",{"_index":2843,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["md5",{"_index":1630,"title":{},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["mdn",{"_index":832,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["meal",{"_index":2637,"title":{},"body":{"function/factory​_factory.html":{}}}],["member",{"_index":647,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["memori",{"_index":2839,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["menuurl",{"_index":2635,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["merg",{"_index":2320,"title":{"array/array_merge.html":{}},"body":{}}],["messag",{"_index":931,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["method",{"_index":1760,"title":{"this.html#物件的方法調用-As-an-object-method":{},"array/array_method.html":{},"array/array_methods.html":{}},"body":{"this.html":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["mingeasycard",{"_index":1782,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["mingmoney",{"_index":790,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{}}}],["mingmoney.decreas",{"_index":804,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["mingmoney.increas",{"_index":803,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["mm",{"_index":862,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["model",{"_index":2040,"title":{},"body":{"F2E/GraphQL.html":{}}}],["modern",{"_index":2399,"title":{},"body":{"array/object_to_array.html":{}}}],["modifi",{"_index":2859,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["modified/if",{"_index":2864,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["modul",{"_index":288,"title":{"es6.html#Module-的加载实现":{}},"body":{"es6.html":{},"es6.html#Module-的加载实现":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["module('swagg",{"_index":3212,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["mom",{"_index":692,"title":{},"body":{"core.html":{},"variable.html":{}}}],["mon",{"_index":648,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["monday",{"_index":2646,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["money",{"_index":660,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#const":{},"this.html":{},"this.html#Closure":{},"this.html#Callback":{}}}],["month",{"_index":2344,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["monther",{"_index":691,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["months.splic",{"_index":2349,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["more",{"_index":1503,"title":{"index.html#More-Informations":{}},"body":{"index.html":{},"index.html#More-Informations":{}}}],["move",{"_index":878,"title":{},"body":{"core.html":{},"object/create.html":{}}}],["move&apo",{"_index":1362,"title":{},"body":{"core.html#繼承":{}}}],["movi",{"_index":2449,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["mozilla",{"_index":1554,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["ms",{"_index":2558,"title":{},"body":{"cases/delay.html":{}}}],["msg",{"_index":3067,"title":{},"body":{"operators/precedence.html":{}}}],["music",{"_index":2453,"title":{},"body":{"array/array_methods.html":{}}}],["mutationobserver,promise.then",{"_index":2759,"title":{},"body":{"global/promise.html":{}}}],["mycb",{"_index":816,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["myeasycard",{"_index":1787,"title":{},"body":{"this.html":{},"this.html#Closure":{},"this.html#Callback":{}}}],["myfamili",{"_index":651,"title":{},"body":{"core.html":{}}}],["myfamily&apo",{"_index":1148,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["myfirstpromis",{"_index":2732,"title":{},"body":{"global/promise.html":{}}}],["myfirstpromise.then",{"_index":2733,"title":{},"body":{"global/promise.html":{}}}],["myfunct",{"_index":3022,"title":{},"body":{"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["mynam",{"_index":558,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#this":{},"variable.html":{},"variable.html#Hoisting":{}}}],["n",{"_index":3072,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["nam",{"_index":606,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["name",{"_index":344,"title":{},"body":{"closures.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#Let":{},"core.html#const":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#Hoisting":{},"global/function.html":{},"global/function.html#bind":{},"glossary/hoisting.html":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/block.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["name&#x4e0d;&#x5c6c;&#x65bc;&#x9663;&#x5217;&#x88e1;&#x9762;&#x7684;&#x9577;&#x5ea6",{"_index":1204,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["name&#x653e;&#x5165;&#x8a18;&#x61b6;&#x9ad4",{"_index":996,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["name&#xff09;&#xff0c;&#x5728;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x4e2d;&#x53ef;&#x7701;&#x7565;&#x5b83;&#xff0c;&#x5f9e;&#x800c;&#x5275;&#x5efa;&#x533f;&#x540d;&#x51fd;&#x6578;&#xff08;anonym",{"_index":3029,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["name&apos;",{"_index":1163,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["name'",{"_index":673,"title":{},"body":{"core.html":{}}}],["name1",{"_index":2010,"title":{},"body":{"variable.html":{}}}],["name2",{"_index":2012,"title":{},"body":{"variable.html":{}}}],["name3",{"_index":2014,"title":{},"body":{"variable.html":{}}}],["name），在函數表達式中可省略它，從而創建匿名函數（anonym",{"_index":3021,"title":{},"body":{"operators/function.html":{}}}],["nan",{"_index":602,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#bind-apply-call":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["nan&#x3001",{"_index":1599,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["nan&#xff0c;&#x7d50;&#x679c;&#x4e0d;&#x7b49;&#x50f9;&#x65bc;true&#xff0c;&#x4e0d;&#x8fd4;&#x56de;&#x3002",{"_index":2553,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["nan2",{"_index":1581,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["nan，結果不等價於tru",{"_index":2535,"title":{},"body":{"array/filter.html":{}}}],["nativ",{"_index":2400,"title":{},"body":{"array/object_to_array.html":{}}}],["nest",{"_index":2579,"title":{},"body":{"cases/if.html":{}}}],["network",{"_index":745,"title":{},"body":{"core.html":{},"http/caching.html":{},"http/caching.html#強緩存":{}}}],["new",{"_index":157,"title":{"core.html#new":{}},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"api/promise.html":{},"api/promise.html#Promise":{},"array/array_method.html":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{},"operators/typeof.html":{}}}],["new&#x51fa;&#x4f86;&#x7684",{"_index":3055,"title":{},"body":{"operators/typeof.html#null":{}}}],["newarray",{"_index":715,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["newarray.nam",{"_index":720,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["newarray.push",{"_index":719,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["newfamili",{"_index":693,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily.member.oth",{"_index":700,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily.nam",{"_index":698,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily2",{"_index":705,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily3",{"_index":707,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily4",{"_index":711,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily4.member.oth",{"_index":714,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily4.nam",{"_index":712,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily[key",{"_index":697,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfunc",{"_index":1568,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["newstr",{"_index":681,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["newstr.nam",{"_index":682,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["newstr2",{"_index":684,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["newstr2.nam",{"_index":685,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["nginx",{"_index":2191,"title":{},"body":{"F2E/header.html":{}}}],["ngsanit",{"_index":3213,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["none",{"_index":2860,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["note",{"_index":1795,"title":{},"body":{"this.html":{},"this.html#Callback":{}}}],["noth",{"_index":3070,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{}}}],["nothoist",{"_index":3024,"title":{},"body":{"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["now",{"_index":1486,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["npm",{"_index":1485,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["null",{"_index":167,"title":{"operators/typeof.html#null":{}},"body":{"ajax.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#this":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"this.html":{},"this.html#簡易呼叫":{},"array/array_insert.html":{},"array/array_insert.html#example":{},"array/fill.html":{},"cases/if.html":{},"operators/typeof.html":{},"operators/typeof.html#null":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["null,0,1,2",{"_index":1774,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["null不是object",{"_index":3038,"title":{},"body":{"operators/typeof.html":{}}}],["num",{"_index":562,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#this":{},"core.html#new":{},"core.html#箭頭函數":{},"num.html":{},"num.html#補數字":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["num).slic",{"_index":1531,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["num,coin",{"_index":758,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["number",{"_index":563,"title":{"num.html":{},"operators.html#Adding-Strings-and-Numbers":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#this":{},"core.html#new":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"variable.html":{},"variable.html#動態型別":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{}}}],["number([10",{"_index":607,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["number1",{"_index":831,"title":{},"body":{"core.html":{}}}],["number{1",{"_index":1319,"title":{},"body":{"core.html#this":{}}}],["numfn",{"_index":967,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["numfunct",{"_index":969,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["nums.length",{"_index":978,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["nums.reduc",{"_index":974,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["o(1",{"_index":3240,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["o(1)&#xff1c;o(log2n)&#xff1c;o(n)&#xff1c;o(nlog2n)&#xff1c;o(n2)&#xff1c;o(n3)&#xff1c;&#x2026;&#xff1c;o(2n)&#xff1c;o(n",{"_index":3292,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["o(1)＜o(log2n)＜o(n)＜o(nlog2n)＜o(n2)＜o(n3)＜…＜o(2n)＜o(n",{"_index":3247,"title":{},"body":{"string/queue.html":{}}}],["o(2n)&#x548c;o(n!)&#x7a31;&#x70ba",{"_index":3295,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["o(2n)和o(n",{"_index":3249,"title":{},"body":{"string/queue.html":{}}}],["o(log2n)&#x3001;o(n)&#x3001;o(nlog2n)&#x3001;o(n2)&#x548c;o(n3)&#x7a31;&#x70ba",{"_index":3293,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["o(log2n)、o(n)、o(nlog2n)、o(n2)和o(n3",{"_index":3248,"title":{},"body":{"string/queue.html":{}}}],["o(n",{"_index":3239,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{}}}],["o(n+n2)=o(n2",{"_index":3246,"title":{},"body":{"string/queue.html":{}}}],["o1",{"_index":2969,"title":{},"body":{"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{}}}],["o2",{"_index":2970,"title":{},"body":{"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{}}}],["o3",{"_index":2971,"title":{},"body":{"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{}}}],["obj",{"_index":891,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#bind-apply-call":{},"array/fill.html":{},"object/object​_keys.html":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["obj).slic",{"_index":2574,"title":{},"body":{"array/fill.html":{}}}],["obj.a",{"_index":898,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["obj.callnam",{"_index":1763,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#立即函式：":{},"this.html#bind-apply-call":{}}}],["obj.callnamearrow",{"_index":1812,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["obj.fn",{"_index":1770,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["obj.getnam",{"_index":1768,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["obj.watch.callnam",{"_index":1764,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{}}}],["obj.x",{"_index":1766,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{}}}],["obj1",{"_index":460,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj1.a",{"_index":471,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["obj1.b",{"_index":468,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["obj1.bodi",{"_index":475,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["obj1.c",{"_index":472,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["obj1.fun",{"_index":493,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj1叫做obj2",{"_index":466,"title":{},"body":{"copy.html":{}}}],["obj1跟obj2",{"_index":479,"title":{},"body":{"copy.html":{}}}],["obj2",{"_index":462,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj2.b",{"_index":463,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{}}}],["obj2.bodi",{"_index":478,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj2.body.a",{"_index":476,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj2.b也不會影響obj1",{"_index":485,"title":{},"body":{"copy.html":{}}}],["obj2.b改成100",{"_index":467,"title":{},"body":{"copy.html":{}}}],["obj2.fun",{"_index":494,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj2會長得跟obj1",{"_index":484,"title":{},"body":{"copy.html":{}}}],["obj[key",{"_index":2405,"title":{},"body":{"array/object_to_array.html":{}}}],["object",{"_index":482,"title":{"this.html#物件的方法調用-As-an-object-method":{},"array/object_to_array.html":{},"object/assign.html":{}},"body":{"copy.html":{},"copy.html#Object-assign":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"this.html":{},"this.html#bind-apply-call":{},"array/object_to_array.html":{},"array/fill.html":{},"global/function.html":{},"global/function.html#call、apply、bind":{},"object/object​_keys.html":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["object.assign",{"_index":480,"title":{"copy.html#Object-assign":{}},"body":{"copy.html":{},"copy.html#Object-assign":{},"object/assign.html":{}}}],["object.cr",{"_index":868,"title":{"object/create.html":{}},"body":{"core.html":{},"core.html#繼承":{},"object/create.html":{}}}],["object.defineproperti",{"_index":893,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["object.defineproperty(&#x7269;&#x4ef6",{"_index":1378,"title":{},"body":{"core.html#屬性特徵":{}}}],["object.fn",{"_index":809,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["object.freez",{"_index":904,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["object.getownpropertydescriptor",{"_index":919,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["object.i",{"_index":1553,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["object.key",{"_index":3141,"title":{},"body":{"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["object.preventextens",{"_index":902,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["object.prototype.nam",{"_index":3039,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["object.s",{"_index":903,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["object​.key",{"_index":2819,"title":{"object/object​_keys.html":{}},"body":{"object/object​_keys.html":{}}}],["ok",{"_index":657,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["omtrdc.com",{"_index":2057,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["on",{"_index":2507,"title":{},"body":{"cases/arr.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["onclick",{"_index":837,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["open",{"_index":1498,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["oper",{"_index":1550,"title":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["operators/operator_preced",{"_index":575,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["opt",{"_index":2371,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["option",{"_index":2849,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["opts.unshift",{"_index":2375,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["order",{"_index":83,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{},"function/factory​_factory.html":{}}}],["oreq",{"_index":739,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["oreq.addeventlisten",{"_index":740,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["oreq.open",{"_index":742,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["oreq.send",{"_index":744,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["origin",{"_index":225,"title":{},"body":{"ajax.html":{}}}],["other",{"_index":650,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["outer",{"_index":3063,"title":{},"body":{"statements/block.html":{}}}],["output",{"_index":411,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"array/map.html":{},"array/map.html#map":{},"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/fill.html":{},"object/create.html":{},"statements/block.html":{}}}],["output(i",{"_index":412,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{}}}],["p",{"_index":961,"title":{},"body":{"core.html":{},"performance.html":{},"api/promise.html":{},"api/promise.html#Promise":{},"global/promise.html":{}}}],["p.catch",{"_index":2200,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{}}}],["p.final",{"_index":2201,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{}}}],["p.then",{"_index":2199,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{}}}],["p1",{"_index":2587,"title":{},"body":{"cases/replace.html":{},"global/promise.html":{}}}],["p1.length",{"_index":2590,"title":{},"body":{"cases/replace.html":{}}}],["p2",{"_index":2588,"title":{},"body":{"cases/replace.html":{},"global/promise.html":{}}}],["p3",{"_index":2736,"title":{},"body":{"global/promise.html":{}}}],["p3]).then",{"_index":2738,"title":{},"body":{"global/promise.html":{}}}],["pa",{"_index":42,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["pa.match",{"_index":46,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["pa_u",{"_index":45,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["padding3",{"_index":1522,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["padding4",{"_index":1528,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["paddingint",{"_index":1534,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["paddingpoint",{"_index":1532,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["page",{"_index":3199,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["para1",{"_index":823,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["para2",{"_index":824,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["param",{"_index":2025,"title":{},"body":{"variable.html":{},"variable.html#Hoisting":{},"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["paramet",{"_index":769,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["pars",{"_index":488,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["parsefloat",{"_index":1919,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["parsefloat(1.4000000000000001.toprecision(12",{"_index":1920,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["parseint",{"_index":1816,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["parseint(&#x2018;1&#x2019",{"_index":2549,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["parseint(&#x2018;2&#x2019",{"_index":2551,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["parseint(&#x2018;3&#x2019",{"_index":2554,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["parseint(&apos;1&apo",{"_index":1903,"title":{},"body":{"this.html#bind-apply-call":{}}}],["parseint(&apos;11&apo",{"_index":1910,"title":{},"body":{"this.html#bind-apply-call":{}}}],["parseint(&apos;2&apo",{"_index":1904,"title":{},"body":{"this.html#bind-apply-call":{}}}],["parseint(&apos;3&apo",{"_index":1905,"title":{},"body":{"this.html#bind-apply-call":{}}}],["parseint('1",{"_index":1819,"title":{},"body":{"this.html":{}}}],["parseint('11",{"_index":1823,"title":{},"body":{"this.html":{}}}],["parseint('2",{"_index":1820,"title":{},"body":{"this.html":{}}}],["parseint('3",{"_index":1821,"title":{},"body":{"this.html":{}}}],["parseint(item",{"_index":1825,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["parseint(‘1",{"_index":2531,"title":{},"body":{"array/filter.html":{}}}],["parseint(‘2",{"_index":2533,"title":{},"body":{"array/filter.html":{}}}],["parseint(‘3",{"_index":2536,"title":{},"body":{"array/filter.html":{}}}],["parser",{"_index":531,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["parti",{"_index":2071,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["particip",{"_index":2360,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["pass",{"_index":409,"title":{},"body":{"asynchronous.html":{},"array/map.html":{},"array/map.html#map":{}}}],["passfn",{"_index":364,"title":{},"body":{"closures.html":{}}}],["passfn(addf1",{"_index":368,"title":{},"body":{"closures.html":{}}}],["patch&#xff1a;&#x66f4;&#x65b0;&#xff08;update&#xff09;&#xff0c;&#x901a;&#x5e38;&#x662f;&#x90e8;&#x5206;&#x66f4;&#x65b0",{"_index":106,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["patch：更新（upd",{"_index":64,"title":{},"body":{"RESTfulAPI.html":{}}}],["path",{"_index":1753,"title":{},"body":{"url.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["path/to/mymodule.j",{"_index":290,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{}}}],["pattern",{"_index":2578,"title":{},"body":{"cases/if.html":{}}}],["pend",{"_index":2202,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{},"global/promise.html":{}}}],["pending&#xff0c",{"_index":2232,"title":{},"body":{"api/promise.html#Promise":{}}}],["pennsylvania",{"_index":44,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["pennsylvania)&apo",{"_index":53,"title":{},"body":{"RegExp.html#match":{}}}],["perform",{"_index":1625,"title":{"performance.html":{}},"body":{}}],["person",{"_index":668,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#const":{},"scope.html":{}}}],["person.callsomeon",{"_index":1615,"title":{},"body":{"scope.html":{}}}],["person.money",{"_index":946,"title":{},"body":{"core.html":{},"core.html#const":{}}}],["person.nam",{"_index":944,"title":{},"body":{"core.html":{},"core.html#const":{}}}],["person2",{"_index":669,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["pet",{"_index":3192,"title":{"swagger/to-html.html#List-all-pets":{},"swagger/to-html.html#Create-a-pet":{},"swagger/to-html.html#Info-for-a-specific-pet":{}},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#List-all-pets":{},"swagger/to-html.html#Create-a-pet":{}}}],["petid",{"_index":3207,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["pets/{petid",{"_index":3206,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#Info-for-a-specific-pet":{}}}],["petstor",{"_index":3189,"title":{"swagger/to-html.html#undefined":{}},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["pick",{"_index":3005,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["picked(obj",{"_index":3012,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["pleas",{"_index":1505,"title":{},"body":{"index.html":{},"index.html#More-Informations":{}}}],["plist",{"_index":1644,"title":{},"body":{"performance.html":{},"performance.html#DOM-查詢做緩存":{}}}],["plist.length",{"_index":1645,"title":{},"body":{"performance.html":{},"performance.html#DOM-查詢做緩存":{}}}],["plu",{"_index":1473,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["plugin",{"_index":2060,"title":{},"body":{"F2E/cookie.html":{}}}],["plugins)&#x3002",{"_index":2125,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["polyfil",{"_index":890,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["port",{"_index":1750,"title":{},"body":{"url.html":{}}}],["posit",{"_index":2355,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/fill.html":{}}}],["post",{"_index":3203,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#Create-a-pet":{}}}],["post&#xff1a;&#x65b0;&#x5efa;&#xff08;create&#xff09",{"_index":103,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["postethgetfilterlogsr",{"_index":2288,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["postethgetfilterlogsres.map",{"_index":2291,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["postfix",{"_index":1579,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["post：新建（creat",{"_index":61,"title":{},"body":{"RESTfulAPI.html":{}}}],["pow",{"_index":1516,"title":{},"body":{"num.html":{},"num.html#取值":{},"num.html#補數字":{}}}],["practic",{"_index":93,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["practices.html",{"_index":98,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["pragma",{"_index":2841,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["precis",{"_index":1513,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["precisionceil",{"_index":1520,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["precisionfloor",{"_index":1518,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["precisionround",{"_index":1512,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["prevent",{"_index":3224,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["preventextens",{"_index":899,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["preview",{"_index":1496,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["preview.jpg",{"_index":1638,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["preview.png是預覽圖片，比較小，加載很快，而且很多圖片都共用這個preview.png，加載一次即可。待頁面下拉，圖片顯示出來時，再去替換src",{"_index":1635,"title":{},"body":{"performance.html":{}}}],["price",{"_index":786,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#屬性特徵":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["primit",{"_index":408,"title":{},"body":{"asynchronous.html":{}}}],["private&#xff1a;&#x5c08;&#x7528;&#x65bc;&#x500b;&#x4eba;&#x7684;&#x7de9;&#x5b58;&#xff0c;&#x4e2d;&#x9593;&#x4ee3;&#x7406;&#x3001;cdn",{"_index":2889,"title":{},"body":{"http/caching.html#強緩存":{}}}],["private：專用於個人的緩存，中間代理、cdn",{"_index":2846,"title":{},"body":{"http/caching.html":{}}}],["problem",{"_index":957,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["produc",{"_index":532,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["product",{"_index":2446,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["program",{"_index":2577,"title":{},"body":{"cases/if.html":{}}}],["project",{"_index":1464,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["promis",{"_index":251,"title":{"api/promise.html#Promise":{},"global/promise.html":{}},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{}}}],["promise.al",{"_index":2643,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["promise.catch(onreject",{"_index":2207,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{}}}],["promise.rac",{"_index":2761,"title":{},"body":{"global/promise.html":{}}}],["promise.then",{"_index":257,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{}}}],["promise.then(onfulfil",{"_index":2206,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{}}}],["promise​.al",{"_index":2734,"title":{},"body":{"global/promise.html":{}}}],["propagating_right_shift",{"_index":388,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["properti",{"_index":318,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#屬性特徵":{},"url.html":{}}}],["propos",{"_index":3004,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["props.task",{"_index":2358,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["proto",{"_index":617,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["protocol",{"_index":1747,"title":{},"body":{"url.html":{}}}],["prototyp",{"_index":847,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{}}}],["prototype.getfulld",{"_index":859,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["prototype.lasttext",{"_index":854,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["prototype.push.bind(a",{"_index":1806,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["prototype.secondpow",{"_index":856,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["provid",{"_index":3216,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["provide.decorator('$anchorscrol",{"_index":3219,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["provision",{"_index":2258,"title":{"F2E/token.html#provisional-headers-are-shown":{}},"body":{"F2E/token.html":{},"F2E/token.html#provisional-headers-are-shown":{}}}],["proxysett",{"_index":937,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["ps",{"_index":2767,"title":{},"body":{"global/function.html":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["public",{"_index":2857,"title":{},"body":{"http/caching.html":{}}}],["public&#xff1a;&#x97ff;&#x61c9;&#x53ef;&#x4ee5;&#x88ab;&#x4e2d;&#x9593;&#x4ee3;&#x7406;&#x3001;cdn",{"_index":2891,"title":{},"body":{"http/caching.html#強緩存":{}}}],["public：響應可以被中間代理、cdn",{"_index":2847,"title":{},"body":{"http/caching.html":{}}}],["push(examplevalu",{"_index":2515,"title":{},"body":{"cases/arr.html":{}}}],["push、pop、shift、unshift、reserve、sort、splic",{"_index":2334,"title":{},"body":{"array/array_insert.html":{}}}],["put",{"_index":2598,"title":{},"body":{"cases/str.html":{}}}],["put&#xff1a;&#x66f4;&#x65b0;&#xff08;update&#xff09",{"_index":105,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["put：更新（upd",{"_index":63,"title":{},"body":{"RESTfulAPI.html":{}}}],["qa",{"_index":678,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["queri",{"_index":2042,"title":{},"body":{"F2E/GraphQL.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["queryselector",{"_index":960,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["querystr",{"_index":186,"title":{},"body":{"ajax.html":{}}}],["queue",{"_index":3230,"title":{"string/queue.html":{}},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["queue.join",{"_index":3267,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["queue.unshift(word",{"_index":3264,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["queuer",{"_index":2362,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["queuers).fil",{"_index":2365,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["quickli",{"_index":1467,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["quotes.map",{"_index":3010,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["r\\t\\n\\f",{"_index":30,"title":{},"body":{"RegExp.html":{}}}],["raact",{"_index":2440,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["radix",{"_index":1826,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["radix&#x7684;&#x503c;&#x70ba;2&#xff0c;&#x9019;&#x5c31;&#x610f;&#x5473;&#x8457;&#x5b57;&#x7b26;&#x4e32;&#x5c07;&#x88ab;&#x89e3;&#x6790;&#x6210;&#x5b57;&#x7bc0;&#x6578;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x50c5;&#x50c5;&#x5305;&#x542b;&#x6578;&#x503c;0&#x548c;1&#x3002;parseint&#x7684;&#x898f;&#x7bc4;&#x6307;&#x51fa;&#xff0c;&#x5b83;&#x50c5;&#x5617;&#x8a66;&#x5206;&#x6790;&#x7b2c;&#x4e00;&#x500b;&#x5b57;&#x7b26;&#x7684;&#x5de6;&#x5074;&#x3002;&#x9019;&#x500b;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x7b2c;&#x4e00;&#x500b;&#x5b57;&#x7b26;&#x662f;&#x201c;3&#x201d;&#xff0c;&#x5b83;&#x4e26;&#x4e0d;&#x662f;&#x57fa;&#x790e;&#x57fa;&#x6578;2&#x7684;&#x4e00;&#x500b;&#x6709;&#x6548;&#x6578;&#x5b57;&#x3002;&#x6240;&#x4ee5;&#x9019;&#x500b;&#x5b50;&#x5b57;&#x7b26;&#x4e32;&#x5c07;&#x88ab;&#x89e3;&#x6790;&#x70ba;&#x7a7a;&#x3002;&#x5982;&#x679c;&#x5b50;&#x5b57;&#x7b26;&#x4e32;&#x88ab;&#x89e3;&#x6790;&#x6210;&#x7a7a;&#x4e86;&#xff0c;&#x51fd;&#x6578;&#x5c07;&#x8fd4;&#x56de;&#x70ba;nan&#x3002",{"_index":2555,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["radix的值為2，這就意味著字符串將被解析成字節數，也就是僅僅包含數值0和1。parseint的規範指出，它僅嘗試分析第一個字符的左側。這個字符串的第一個字符是“3”，它並不是基礎基數2的一個有效數字。所以這個子字符串將被解析為空。如果子字符串被解析成空了，函數將返回為nan",{"_index":2537,"title":{},"body":{"array/filter.html":{}}}],["rail",{"_index":2091,"title":{},"body":{"F2E/cookie.html":{}}}],["rails&#x4f86;&#x8aaa;&#xff0c",{"_index":2181,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["rd",{"_index":677,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["re",{"_index":48,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{},"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"array/map.html":{},"array/map.html#map":{},"cases/delay.html":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["react",{"_index":2285,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["reactivesett",{"_index":938,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["read",{"_index":317,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#屬性特徵":{}}}],["real",{"_index":2196,"title":{},"body":{"F2E/header.html":{}}}],["realsrc",{"_index":1636,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["realsrc&apo",{"_index":1704,"title":{},"body":{"performance.html#懶加載":{}}}],["rect",{"_index":2997,"title":{},"body":{"object/create.html":{}}}],["rect.mov",{"_index":2999,"title":{},"body":{"object/create.html":{}}}],["rectangl",{"_index":2992,"title":{},"body":{"object/create.html":{}}}],["rectangle.prototyp",{"_index":2994,"title":{},"body":{"object/create.html":{}}}],["rectangle.prototype.constructor",{"_index":2996,"title":{},"body":{"object/create.html":{}}}],["red",{"_index":2611,"title":{},"body":{"function/factory​_factory.html":{}}}],["reduc",{"_index":319,"title":{"array/array_methods.html#reduce":{}},"body":{"arrowFunction.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["ref",{"_index":200,"title":{},"body":{"ajax.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/typeof.html#null":{}}}],["refer",{"_index":88,"title":{"RESTfulAPI.html#References":{},"operators.html#references":{},"F2E/GraphQL.html#References":{},"global/function.html#References":{},"http/caching.html#References":{},"string/queue.html#References":{}},"body":{"RESTfulAPI.html":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"operators.html":{},"operators.html#Increment":{},"scope.html":{},"this.html":{},"this.html#bind-apply-call":{},"F2E/GraphQL.html":{},"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"F2E/header.html":{},"global/promise.html":{},"global/function.html":{},"http/caching.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"string/queue.html":{}}}],["referenceerror",{"_index":546,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#箭頭函數":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"scope.html":{},"variable.html":{},"variable.html#Hoisting":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/block.html":{},"statements/let.html":{},"statements/let.html#let":{}}}],["referr",{"_index":2188,"title":{},"body":{"F2E/header.html":{}}}],["reg1",{"_index":7,"title":{},"body":{"RegExp.html":{}}}],["regexp",{"_index":1,"title":{"RegExp.html":{}},"body":{}}],["reject",{"_index":256,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"api/promise.html":{},"api/promise.html#Promise":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{}}}],["reject&#xff0c;&#x6240;&#x4ee5;&#x6b64;&#x6bb5;&#x4e0d;&#x57f7;&#x884c",{"_index":2255,"title":{},"body":{"api/promise.html#鏈接":{}}}],["remot",{"_index":2193,"title":{},"body":{"F2E/header.html":{}}}],["removefirst",{"_index":3253,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["removelast",{"_index":3255,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["replac",{"_index":49,"title":{"cases/replace.html":{}},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["replacestr",{"_index":2599,"title":{},"body":{"cases/str.html":{}}}],["repositori",{"_index":1488,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["request",{"_index":237,"title":{},"body":{"ajax.html":{},"F2E/GraphQL.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["request的head",{"_index":235,"title":{},"body":{"ajax.html":{}}}],["request）的頭信息裡面，設計了一個refer",{"_index":2189,"title":{},"body":{"F2E/header.html":{}}}],["requir",{"_index":1470,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["res.map",{"_index":2282,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["res.set",{"_index":2854,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["resan",{"_index":2310,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["resolv",{"_index":253,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"api/promise.html":{},"api/promise.html#Promise":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{}}}],["resolve,reject",{"_index":252,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{}}}],["resourc",{"_index":226,"title":{},"body":{"ajax.html":{}}}],["respons",{"_index":169,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"http/caching.html":{},"http/caching.html#強緩存":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["rest",{"_index":56,"title":{"RESTfulAPI.html":{}},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{},"F2E/GraphQL.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["result",{"_index":313,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"index.html":{},"index.html#Getting-Started":{},"array/array_methods.html":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/filter.html":{},"cases/if.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{}}}],["result.json",{"_index":2639,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["retarr",{"_index":2585,"title":{},"body":{"cases/replace.html":{}}}],["retarr.push",{"_index":2589,"title":{},"body":{"cases/replace.html":{}}}],["retriev",{"_index":3208,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["return",{"_index":311,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#Increment":{},"scope.html":{},"this.html":{},"this.html#簡易呼叫":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/array_methods.html":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"array/filter.html":{},"array/fill.html":{},"cases/str.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"global/promise.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/block.html":{},"string/split.html":{},"string/split.html#split":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["revalid",{"_index":2848,"title":{},"body":{"http/caching.html":{}}}],["revalidate&#xff1a;&#x5728;&#x7de9;&#x5b58;&#x904e;&#x671f;&#x524d;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#xff0c;&#x904e;&#x671f;&#x5f8c;&#x5fc5;&#x9808;&#x5411;&#x670d;&#x52d9;&#x5668;&#x9a57;&#x8b49",{"_index":2893,"title":{},"body":{"http/caching.html#強緩存":{}}}],["reverse().join",{"_index":3271,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["reverseword",{"_index":3257,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["rh",{"_index":550,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["right",{"_index":3258,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["ring",{"_index":2452,"title":{},"body":{"array/array_methods.html":{}}}],["rings&apo",{"_index":2487,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["round(numb",{"_index":1517,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["rout",{"_index":2037,"title":{},"body":{"F2E/GraphQL.html":{}}}],["rrefer",{"_index":1665,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["run",{"_index":1502,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["s",{"_index":29,"title":{},"body":{"RegExp.html":{},"index.html":{},"index.html#Getting-Started":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["s+/g",{"_index":3270,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["s.charat(left",{"_index":3261,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["s.charat(right",{"_index":3262,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["s.length",{"_index":3259,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["s.trim().replac",{"_index":3269,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["safari",{"_index":3066,"title":{},"body":{"statements/block.html":{}}}],["sampl",{"_index":1758,"title":{},"body":{"url.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["save",{"_index":911,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["save(pric",{"_index":910,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["sayhello",{"_index":2769,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["schema",{"_index":3188,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["scoop",{"_index":2612,"title":{},"body":{"function/factory​_factory.html":{}}}],["scope",{"_index":370,"title":{"scope.html":{}},"body":{"closures.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"scope.html":{}}}],["script",{"_index":222,"title":{},"body":{"ajax.html":{},"es6.html":{},"es6.html#Module-的加载实现":{},"performance.html":{},"performance.html#懶加載":{}}}],["script標籤,settimeout,setinterval,setimmediate,requestanimationfram",{"_index":2758,"title":{},"body":{"global/promise.html":{}}}],["seal",{"_index":900,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["sec",{"_index":2771,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["second",{"_index":951,"title":{},"body":{"core.html":{}}}],["see",{"_index":79,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{},"index.html":{},"index.html#Getting-Started":{}}}],["seed",{"_index":1463,"title":{"index.html":{},"index.html#hexo-theme-doc-seed":{}},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{}}}],["seed.git",{"_index":1492,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["select_titl",{"_index":2376,"title":{},"body":{"array/array_insert.html":{}}}],["self",{"_index":818,"title":{},"body":{"core.html":{},"core.html#this":{},"global/function.html":{},"global/function.html#bind":{}}}],["self.nam",{"_index":2779,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["semicolon",{"_index":555,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["server",{"_index":1497,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{},"F2E/GraphQL.html":{},"F2E/cookie.html":{}}}],["server&#x7aef",{"_index":2167,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["server收到了這個request",{"_index":240,"title":{},"body":{"ajax.html":{}}}],["session",{"_index":2072,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"F2E/token.html":{}}}],["session&#x53c8;&#x662f;&#x4ec0;&#x9ebc;&#x5462",{"_index":2146,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["session&#x6709;&#x9ede;&#x985e;&#x4f3c;&#x6703;&#x8a71;&#x7684;&#x6982;&#x5ff5;&#xff0c;session&#x6a5f;&#x5236;&#x662f;&#x4e00;&#x7a2e;&#x670d;&#x52d9;&#x5668;&#x7aef;&#x7684;&#x6a5f;&#x5236;&#x3002",{"_index":2150,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["session並不是一個很明確實體的機制，算是一個概念，只要符合概念所實作出來的功能都可以被叫做sess",{"_index":2093,"title":{},"body":{"F2E/cookie.html":{}}}],["session也會消失的錯覺，但本質上並非如此，就像會員卡，除非你主動提出銷卡，否則店家不會刪除顧客資料，這件事情對session來說也如出一轍，除非通知server刪除session，否則serv",{"_index":2083,"title":{},"body":{"F2E/cookie.html":{}}}],["session實現方式是由cooki",{"_index":2092,"title":{},"body":{"F2E/cookie.html":{}}}],["session有點類似會話的概念，sess",{"_index":2073,"title":{},"body":{"F2E/cookie.html":{}}}],["session機制都使用會話cookie來保存sess",{"_index":2084,"title":{},"body":{"F2E/cookie.html":{}}}],["session的時候，服務器首先檢查這個客戶端的請求裡是否有包含了sess",{"_index":2076,"title":{},"body":{"F2E/cookie.html":{}}}],["session的機制都被框架所實現了，以rubi",{"_index":2090,"title":{},"body":{"F2E/cookie.html":{}}}],["set",{"_index":909,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"array/array_method.html":{}}}],["sethead",{"_index":2852,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["setinterv",{"_index":399,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{}}}],["setter",{"_index":905,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["setter改變tot",{"_index":915,"title":{},"body":{"core.html":{}}}],["settimeout",{"_index":250,"title":{"asynchronous.html#setTimeout":{}},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#this":{},"performance.html":{},"performance.html#事件節流":{},"this.html":{},"this.html#bind-apply-call":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{}}}],["settimeout()&#x3002",{"_index":430,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["settimeout()內部回調運行的時候，主進程已經運行完畢了，此時i=5，所以輸出5",{"_index":398,"title":{},"body":{"asynchronous.html":{}}}],["settimeout(resolv",{"_index":2559,"title":{},"body":{"cases/delay.html":{},"global/promise.html":{}}}],["settimeout包裝成promise、等待所有settimout的callback",{"_index":2762,"title":{},"body":{"global/promise.html":{}}}],["sevendaysago",{"_index":2723,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["sevendaysago).toisostring().substr",{"_index":2725,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["shallow",{"_index":455,"title":{},"body":{"copy.html":{}}}],["shape",{"_index":2989,"title":{},"body":{"object/create.html":{}}}],["shape.cal",{"_index":2993,"title":{},"body":{"object/create.html":{}}}],["shape.prototype.mov",{"_index":2990,"title":{},"body":{"object/create.html":{}}}],["share",{"_index":227,"title":{},"body":{"ajax.html":{}}}],["shim",{"_index":935,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["show",{"_index":1476,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["shown",{"_index":2259,"title":{"F2E/token.html#provisional-headers-are-shown":{}},"body":{"F2E/token.html":{},"F2E/token.html#provisional-headers-are-shown":{}}}],["shown&#x7684;&#x8fc7;&#x7a0b",{"_index":2261,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["side",{"_index":545,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"F2E/GraphQL.html":{}}}],["signedcooki",{"_index":2088,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["simpl",{"_index":813,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["size",{"_index":844,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["skeleton",{"_index":1465,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["slice",{"_index":1535,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["slice和substr",{"_index":1529,"title":{},"body":{"num.html":{}}}],["small",{"_index":880,"title":{},"body":{"core.html":{}}}],["social",{"_index":2059,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["solut",{"_index":2401,"title":{},"body":{"array/object_to_array.html":{}}}],["someon",{"_index":539,"title":{},"body":{"core.html":{}}}],["someth",{"_index":3069,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{}}}],["son",{"_index":734,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["sort",{"_index":2424,"title":{"array/array_methods.html#sort":{}},"body":{"array/array_methods.html":{}}}],["sourc",{"_index":808,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["span",{"_index":1926,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["specif",{"_index":3205,"title":{"swagger/to-html.html#Info-for-a-specific-pet":{}},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["splice",{"_index":2343,"title":{"array/splice.html":{}},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["split",{"_index":191,"title":{"string/split.html#split":{}},"body":{"ajax.html":{},"string/split.html":{},"string/split.html#split":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["spread",{"_index":2338,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#拼接兩個陣列":{}}}],["src",{"_index":289,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{},"performance.html":{},"performance.html#懶加載":{}}}],["src=./foo.js/script",{"_index":294,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{}}}],["src=xxx",{"_index":219,"title":{},"body":{"ajax.html":{}}}],["ssr",{"_index":1633,"title":{},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["stage",{"_index":3002,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["start",{"_index":1481,"title":{"index.html#Getting-Started":{}},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["stat",{"_index":2853,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["stateless",{"_index":2049,"title":{},"body":{"F2E/cookie.html":{}}}],["statement",{"_index":551,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["statement&#xff09;&#xff08;&#x8a73;&#x60c5;&#x67e5;&#x770b;&#x51fd;&#x6578;&#x8072;&#x660e;&#xff09;&#xff0c;&#x4e26;&#x4e14;&#x5169;&#x8005;&#x64c1;&#x6709;&#x5e7e;&#x4e4e;&#x76f8;&#x540c;&#x7684;&#x8a9e;&#x6cd5;&#x3002;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x8207;&#x51fd;&#x6578;&#x8072;&#x660e;&#x7684;&#x6700;&#x4e3b;&#x8981;&#x5340;&#x5225;&#x662f;&#x51fd;&#x6578;&#x540d;&#x7a31;&#xff08;funct",{"_index":3028,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["statementfn",{"_index":746,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["statement）（詳情查看函數聲明），並且兩者擁有幾乎相同的語法。函數表達式與函數聲明的最主要區別是函數名稱（funct",{"_index":3020,"title":{},"body":{"operators/function.html":{}}}],["statu",{"_index":170,"title":{},"body":{"ajax.html":{},"cases/delay.html":{},"object/object​_keys.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["status=1&amp;type=1",{"_index":3110,"title":{},"body":{"statements/if...else.html":{}}}],["status=1&amp;type=2",{"_index":3111,"title":{},"body":{"statements/if...else.html":{}}}],["status=2&amp;type=1",{"_index":3112,"title":{},"body":{"statements/if...else.html":{}}}],["status=2&amp;type=2",{"_index":3113,"title":{},"body":{"statements/if...else.html":{}}}],["statusr",{"_index":2833,"title":{},"body":{"object/object​_keys.html":{}}}],["store",{"_index":2845,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["storemoney",{"_index":785,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{}}}],["storemoney()(100",{"_index":788,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["str",{"_index":716,"title":{},"body":{"core.html":{},"cases/replace.html":{},"cases/str.html":{}}}],["str.charat",{"_index":2594,"title":{},"body":{"cases/str.html":{}}}],["str.replac",{"_index":2586,"title":{},"body":{"cases/replace.html":{},"cases/str.html":{}}}],["str.slice",{"_index":2596,"title":{},"body":{"cases/str.html":{}}}],["stranger",{"_index":701,"title":{},"body":{"core.html":{}}}],["strict",{"_index":834,"title":{},"body":{"core.html":{},"scope.html":{},"this.html":{}}}],["strict&#39",{"_index":1620,"title":{},"body":{"scope.html":{}}}],["strict&apo",{"_index":1326,"title":{},"body":{"core.html#this":{},"core.html#屬性特徵":{},"this.html#簡易呼叫":{}}}],["string",{"_index":173,"title":{"operators.html#Adding-Strings-and-Numbers":{},"cases/str.html":{}},"body":{"ajax.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#this":{},"core.html#new":{},"operators.html":{},"variable.html":{},"variable.html#動態型別":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["string&#x578b;&#x5225;&#x76f8;&#x52a0",{"_index":1100,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["string.prototype.match",{"_index":39,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["string.prototype.replac",{"_index":2583,"title":{},"body":{"cases/replace.html":{}}}],["string.prototype.split",{"_index":3174,"title":{},"body":{"string/split.html":{},"string/split.html#split":{}}}],["stringify(famili",{"_index":710,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["stringify(obj1",{"_index":489,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{}}}],["string​.prototype​.replac",{"_index":2597,"title":{},"body":{"cases/str.html":{}}}],["string​.prototype​.tolower​cas",{"_index":2592,"title":{},"body":{"cases/str.html":{}}}],["structur",{"_index":1471,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["style",{"_index":959,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["substr",{"_index":50,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["success",{"_index":2208,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{}}}],["sum",{"_index":309,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["sum(a,b",{"_index":587,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["super",{"_index":2625,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"object/create.html":{}}}],["swagger",{"_index":3186,"title":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#undefined":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["swaggerui",{"_index":3214,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["symbol",{"_index":3009,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["syntax",{"_index":528,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#ES6-Airbnb":{}}}],["syntaxerror",{"_index":3043,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["t",{"_index":2747,"title":{},"body":{"global/promise.html":{}}}],["t.then",{"_index":2749,"title":{},"body":{"global/promise.html":{}}}],["tabl",{"_index":612,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["tag",{"_index":3201,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["tag/if",{"_index":2867,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["target",{"_index":271,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["target.nodenam",{"_index":273,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["task",{"_index":2740,"title":{},"body":{"global/promise.html":{}}}],["task(resolv",{"_index":2745,"title":{},"body":{"global/promise.html":{}}}],["tasks.length",{"_index":2748,"title":{},"body":{"global/promise.html":{}}}],["tasks.map",{"_index":2744,"title":{},"body":{"global/promise.html":{}}}],["tasks[1",{"_index":2753,"title":{},"body":{"global/promise.html":{}}}],["tasks[2",{"_index":2754,"title":{},"body":{"global/promise.html":{}}}],["tasks[i",{"_index":2752,"title":{},"body":{"global/promise.html":{}}}],["tasksarr",{"_index":2357,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["tasksarr.concat(waitingarr",{"_index":2368,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["tasksarr.length",{"_index":2361,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["tdz",{"_index":947,"title":{},"body":{"core.html":{},"core.html#const":{}}}],["team",{"_index":675,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#this":{}}}],["ternari",{"_index":2580,"title":{},"body":{"cases/if.html":{}}}],["test",{"_index":3061,"title":{},"body":{"statements/block.html":{}}}],["text",{"_index":1661,"title":{},"body":{"performance.html":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"array/array_insert.html":{},"array/array_insert.html#example":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["text/javascript",{"_index":1640,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["textarea",{"_index":1660,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["textarea.addeventlisten",{"_index":1663,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["theme",{"_index":1461,"title":{"index.html":{},"index.html#hexo-theme-doc-seed":{}},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{}}}],["then&#x3001;catch",{"_index":2244,"title":{},"body":{"api/promise.html#鏈接":{}}}],["then、catch",{"_index":2211,"title":{},"body":{"api/promise.html":{}}}],["this&#x300d",{"_index":1888,"title":{},"body":{"this.html#bind-apply-call":{}}}],["this&#x6240;&#x6307;&#x5411;&#x7684;window&#x6703;&#x8b8a;undefin",{"_index":1328,"title":{},"body":{"core.html#this":{}}}],["this(指向class",{"_index":2778,"title":{},"body":{"global/function.html":{}}}],["this.array",{"_index":322,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{}}}],["this.nam",{"_index":1801,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["this.valu",{"_index":1777,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["thisarg",{"_index":1793,"title":{},"body":{"this.html":{},"this.html#Callback":{}}}],["this所指向的window會變undefin",{"_index":835,"title":{},"body":{"core.html":{}}}],["throw",{"_index":315,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{}}}],["thursday",{"_index":2649,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["tigger",{"_index":2983,"title":{},"body":{"glossary/hoisting.html":{}}}],["time",{"_index":2655,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["timeoutid",{"_index":1662,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["timer函數包裹了起來，並用j捕獲了每次循環時的i",{"_index":405,"title":{},"body":{"asynchronous.html":{}}}],["timestamp",{"_index":2564,"title":{},"body":{"cases/delay.html":{}}}],["timestampiso",{"_index":2302,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["tmp",{"_index":2408,"title":{},"body":{"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{}}}],["tmp.length",{"_index":2409,"title":{},"body":{"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{}}}],["tmp.splice",{"_index":2411,"title":{},"body":{"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{}}}],["today",{"_index":866,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["todo",{"_index":1646,"title":{},"body":{"performance.html":{},"performance.html#DOM-查詢做緩存":{}}}],["tofix",{"_index":1524,"title":{},"body":{"num.html":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["tofixed&#x6307;&#x5b9a;&#x4fdd;&#x7559;&#x5e7e;&#x4f4d;&#x5c0f;&#x6578",{"_index":1547,"title":{},"body":{"num.html#補數字":{}}}],["token",{"_index":526,"title":{"F2E/token.html":{}},"body":{"core.html":{},"F2E/token.html":{},"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["tolowercas",{"_index":2595,"title":{},"body":{"cases/str.html":{}}}],["top",{"_index":2629,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["toprecis",{"_index":1918,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["tostr",{"_index":728,"title":{},"body":{"core.html":{}}}],["total",{"_index":908,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{}}}],["totalarr",{"_index":2367,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["transact",{"_index":2299,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["transactionhash",{"_index":2292,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["transactionsarr",{"_index":2300,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["transactionsarr.push",{"_index":2308,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["transform",{"_index":2397,"title":{},"body":{"array/object_to_array.html":{}}}],["translat",{"_index":2573,"title":{},"body":{"array/fill.html":{}}}],["tree",{"_index":529,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["tri",{"_index":2561,"title":{},"body":{"cases/delay.html":{}}}],["trifl",{"_index":2620,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["trifle.prototyp",{"_index":2622,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["true",{"_index":21,"title":{},"body":{"RegExp.html":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"variable.html":{},"variable.html#動態型別":{},"array/array_methods.html":{},"array/array_methods.html#filter":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/delay.html":{},"cases/if.html":{},"cases/replace.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"http/caching.html":{},"http/caching.html#協商緩存":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"statements/let.html":{},"statements/let.html#let":{}}}],["true&#xff0c;&#x56e0;&#x70ba;&#x7269;&#x4ef6;&#x7684;&#x8a18;&#x61b6;&#x9ad4;&#x5df2;&#x7d93;&#x5b58;&#x5728;&#x4e86",{"_index":1088,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["truthi",{"_index":613,"title":{"core.html#Truthy":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["truthy&#xff08;&#x771f;&#x503c;&#xff09",{"_index":1123,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["truthyvalu",{"_index":2512,"title":{},"body":{"cases/arr.html":{}}}],["ts",{"_index":2286,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["tuesday",{"_index":2647,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["ture",{"_index":589,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["tw/docs/glossary/hoist",{"_index":2980,"title":{"glossary/hoisting.html":{}},"body":{}}],["tw/docs/http/access_control_cor",{"_index":247,"title":{},"body":{"ajax.html":{}}}],["tw/docs/web/javascript/reference/global_objects/array/foreach",{"_index":1789,"title":{},"body":{"this.html":{}}}],["tw/docs/web/javascript/reference/global_objects/array/foreach#&#x8a9e;&#x6cd5",{"_index":1857,"title":{},"body":{"this.html#Callback":{}}}],["two",{"_index":2509,"title":{},"body":{"cases/arr.html":{}}}],["type",{"_index":295,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{},"asynchronous.html":{},"performance.html":{},"performance.html#懶加載":{},"F2E/GraphQL.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"object/object​_keys.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["type&#xff09;&#x7684;&#x53c3;&#x6578;&#x50b3;&#x905e;&#x662f",{"_index":448,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["type=modul",{"_index":293,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{}}}],["typeerror",{"_index":316,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#屬性特徵":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#Closure":{},"glossary/hoisting.html":{},"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["typeof",{"_index":346,"title":{"operators/typeof.html#typeof":{}},"body":{"closures.html":{},"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"variable.html":{},"variable.html#動態型別":{},"glossary/hoisting.html":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/typeof.html#null":{},"statements/block.html":{}}}],["ui",{"_index":3211,"title":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}},"body":{"swagger/ui.html":{}}}],["uncaught",{"_index":538,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#箭頭函數":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/typeof.html#null":{}}}],["undefin",{"_index":320,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"copy.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#this":{},"core.html#繼承":{},"core.html#箭頭函數":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"scope.html":{},"this.html":{},"this.html#簡易呼叫":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"array/array_methods.html":{},"array/array_methods.html#find":{},"array/filter.html":{},"global/function.html":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"global/function.html#bind":{},"glossary/hoisting.html":{},"object/create.html":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["unexpect",{"_index":3044,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["uniquelist",{"_index":2266,"title":{},"body":{"array/array_method.html":{}}}],["unshift",{"_index":2370,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["until",{"_index":2567,"title":{},"body":{"array/fill.html":{}}}],["unwrap",{"_index":3007,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["up",{"_index":1501,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["updat",{"_index":1781,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["url",{"_index":67,"title":{"url.html":{},"cases/str.html#url":{}},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{},"ajax.html":{},"F2E/header.html":{},"cases/str.html":{},"cases/str.html#url":{}}}],["url&#x3002;&#x5b83;&#x8207;302&#x548c;307&#x7684;&#x542b;&#x7fa9;&#x4e00;&#x6a23;&#xff0c;&#x4e5f;&#x662f;&#x201d;&#x66ab;&#x6642;&#x91cd;&#x5b9a;&#x5411;&#x201d;&#xff0c;&#x5340;&#x5225;&#x5728;&#x65bc;302&#x548c;307&#x7528;&#x65bc;get&#x8acb;&#x6c42;&#xff0c;&#x800c;303&#x7528;&#x65bc;post&#x3001;put&#x548c;delete&#x8acb;&#x6c42;&#x3002;&#x6536;&#x5230;303&#x4ee5;&#x5f8c;&#xff0c;&#x700f;&#x89bd;&#x5668;&#x4e0d;&#x6703;&#x81ea;&#x52d5;&#x8df3;&#x8f49;&#xff0c;&#x800c;&#x6703;&#x8b93;&#x7528;&#x6236;&#x81ea;&#x5df1;&#x6c7a;&#x5b9a;&#x4e0b;&#x4e00;&#x6b65;&#x600e;&#x9ebc;&#x8fa6;&#x3002",{"_index":136,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["url&#x3002;&#x9019;&#x7a2e;&#x65b9;&#x6cd5;&#x53eb;&#x505a",{"_index":143,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["url&#xff0c;&#x5c31;&#x53ef;&#x4ee5;&#x767c;&#x73fe;&#x5176;&#x4ed6;&#x7684",{"_index":142,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["url&#xff0c;&#x6bd4;&#x5982",{"_index":117,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["url&#xff0c;&#x6bd4;&#x5982;&#x7372;&#x53d6;&#x67d0;&#x500b;&#x4f5c;&#x8005;&#x7684;&#x67d0;&#x4e00;&#x985e;&#x6587;&#x7ae0;&#x3002",{"_index":122,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["url.indexof",{"_index":187,"title":{},"body":{"ajax.html":{}}}],["url.split",{"_index":190,"title":{},"body":{"ajax.html":{}}}],["url。一是功能url，即有的url",{"_index":2190,"title":{},"body":{"F2E/header.html":{}}}],["url。它與302和307的含義一樣，也是”暫時重定向”，區別在於302和307用於get請求，而303用於post、put和delete請求。收到303",{"_index":80,"title":{},"body":{"RESTfulAPI.html":{}}}],["us",{"_index":833,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"scope.html":{},"this.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["us/docs/web/javascript/closur",{"_index":343,"title":{},"body":{"closures.html":{}}}],["us/docs/web/javascript/reference/operators/bitwise_operators#%3e%3e_(sign",{"_index":387,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["usag",{"_index":1477,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["user",{"_index":95,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{},"index.html":{},"index.html#More-Informations":{},"object/object​_keys.html":{}}}],["userid",{"_index":197,"title":{},"body":{"ajax.html":{}}}],["userid=jacob.hsu",{"_index":194,"title":{},"body":{"ajax.html":{}}}],["usersr",{"_index":2834,"title":{},"body":{"object/object​_keys.html":{}}}],["v",{"_index":1927,"title":{},"body":{"math.html":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"array/map.html":{},"array/map.html#map":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["v,i",{"_index":2283,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["v.add_transactionhash",{"_index":2313,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["v.functionmeta.param",{"_index":2305,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["v.functionmeta.params.length",{"_index":2304,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["v.timestampiso",{"_index":2303,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["v.transactionhash",{"_index":2293,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["v.valu",{"_index":2312,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["val",{"_index":976,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["valid",{"_index":3210,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["valu",{"_index":410,"title":{},"body":{"asynchronous.html":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#函式工廠":{},"core.html#屬性特徵":{},"scope.html":{},"this.html":{},"this.html#簡易呼叫":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"array/map.html":{},"array/map.html#map":{},"array/array_insert.html":{},"array/array_insert.html#example":{},"array/object_to_array.html":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"statements/for.html":{}}}],["value&#xff09",{"_index":450,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["value1",{"_index":2016,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["value2",{"_index":2018,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["value3",{"_index":2020,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["value=1",{"_index":1611,"title":{},"body":{"scope.html":{}}}],["values.map",{"_index":2301,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["vanilla",{"_index":2616,"title":{},"body":{"function/factory​_factory.html":{}}}],["var",{"_index":6,"title":{},"body":{"RegExp.html":{},"ajax.html":{},"event.html":{},"event.html#代理":{},"closures.html":{},"asynchronous.html":{},"asynchronous.html#setTimeout":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"num.html":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Adding-Strings-and-Numbers":{},"scope.html":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"math.html":{},"math.html#浮點數運算的坑":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"array/map.html":{},"array/map.html#map":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/filter.html":{},"cases/if.html":{},"cases/replace.html":{},"cases/str.html":{},"cases/str.html#url":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"global/date.html":{},"global/promise.html":{},"global/function.html":{},"global/function.html#bind":{},"object/object​_keys.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"glossary/hoisting.html":{},"object/create.html":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"statements/let.html":{},"statements/let.html#let":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["var&#x7684;&#x4f5c;&#x7528;&#x57df;&#x5728;&#x51fd;&#x6578;(funct",{"_index":1418,"title":{},"body":{"core.html#Let":{}}}],["variabl",{"_index":2009,"title":{"variable.html":{}},"body":{}}],["var的作用域在函數(funct",{"_index":941,"title":{},"body":{"core.html":{}}}],["version",{"_index":3190,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#undefined":{}}}],["vip用戶在進行中參與活動，贈送800",{"_index":3109,"title":{},"body":{"statements/if...else.html":{}}}],["vip用戶在預售中參與活動，贈送1000",{"_index":3108,"title":{},"body":{"statements/if...else.html":{}}}],["visit",{"_index":1506,"title":{},"body":{"index.html":{},"index.html#More-Informations":{}}}],["vm",{"_index":819,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["vs",{"_index":1612,"title":{"global/function.html#cab-call-apply-vs-bind":{}},"body":{"scope.html":{},"this.html":{},"this.html#bind-apply-call":{},"global/function.html":{},"statements/AsyncFunction.html":{}}}],["vti",{"_index":3015,"title":{},"body":{"operators/destructuring_assignment.html":{}}}],["vue",{"_index":926,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["vue!&apo",{"_index":1401,"title":{},"body":{"core.html#屬性特徵":{}}}],["w",{"_index":15,"title":{},"body":{"RegExp.html":{},"http/caching.html":{}}}],["w+)*@\\w",{"_index":16,"title":{},"body":{"RegExp.html":{}}}],["w+)*\\.\\w",{"_index":17,"title":{},"body":{"RegExp.html":{}}}],["waitingarr",{"_index":2364,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["wallet",{"_index":907,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["wallet.sav",{"_index":914,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["wallet.tot",{"_index":912,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["watch",{"_index":1762,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{}}}],["wate",{"_index":2366,"title":{},"body":{"array/array_insert.html":{}}}],["wating...','w",{"_index":2363,"title":{},"body":{"array/array_insert.html":{}}}],["web",{"_index":58,"title":{},"body":{"RESTfulAPI.html":{},"F2E/token.html":{}}}],["websit",{"_index":1466,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{},"index.html#More-Informations":{}}}],["wednesday",{"_index":2648,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["welcom",{"_index":33,"title":{},"body":{"RegExp.html":{}}}],["welsh",{"_index":874,"title":{},"body":{"core.html":{}}}],["whereparamet",{"_index":768,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["window",{"_index":310,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#箭頭函數":{},"performance.html":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"this.html":{},"this.html#bind-apply-call":{},"variable.html":{}}}],["window.array",{"_index":323,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{}}}],["window.i",{"_index":943,"title":{},"body":{"core.html":{},"core.html#Let":{}}}],["window.location.hash",{"_index":1754,"title":{},"body":{"url.html":{}}}],["window.location.host",{"_index":1748,"title":{},"body":{"url.html":{}}}],["window.location.hostnam",{"_index":1751,"title":{},"body":{"url.html":{}}}],["window.location.href",{"_index":1745,"title":{},"body":{"url.html":{}}}],["window.location.pathnam",{"_index":1752,"title":{},"body":{"url.html":{}}}],["window.location.port",{"_index":1756,"title":{},"body":{"url.html":{}}}],["window.location.protocol",{"_index":1746,"title":{},"body":{"url.html":{}}}],["window.location.search",{"_index":1757,"title":{},"body":{"url.html":{}}}],["word",{"_index":3260,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["workflow",{"_index":231,"title":{},"body":{"ajax.html":{}}}],["world",{"_index":347,"title":{},"body":{"closures.html":{},"this.html":{},"this.html#bind-apply-call":{},"cases/str.html":{}}}],["wrap",{"_index":3229,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["writabl",{"_index":572,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#屬性特徵":{}}}],["www.a.com",{"_index":2062,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.a.com&#x9019;&#x500b;&#x7db2;&#x7ad9;&#x88ab;&#x8a2d;&#x7f6e;&#x4e86;&#x4e00;&#x500b;www.b.com&#x9019;&#x500b;&#x57df;&#x4e0b;&#x7684;cookie&#xff0c;&#x6240;&#x4ee5;&#x53eb;&#x7b2c;&#x4e09;&#x65b9;cookie&#x3002",{"_index":2137,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.a.com&#x9019;&#x500b;&#x7db2;&#x7ad9;&#xff0c;&#x7db2;&#x9801;&#x88e1;&#x6709;&#x7528;&#x5230",{"_index":2130,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.a.com&#x9019;&#x500b;&#x7db2;&#x7ad9;&#xff0c;&#x9019;&#x500b;&#x7db2;&#x7ad9;&#x8a2d;&#x7f6e;&#x4e86;&#x4e00;&#x500b;cookie&#xff0c;&#x9019;&#x500b;cookie&#x4e5f;&#x53ea;&#x80fd;&#x88ab",{"_index":2127,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.a.com這個網站被設置了一個www.b.com這個域下的cookie，所以叫第三方cooki",{"_index":2066,"title":{},"body":{"F2E/cookie.html":{}}}],["www.a.com這個網站，這個網站設置了一個cookie，這個cooki",{"_index":2061,"title":{},"body":{"F2E/cookie.html":{}}}],["www.adobe.com",{"_index":2056,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.adobe.com/tw",{"_index":2054,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.b.com",{"_index":2063,"title":{},"body":{"F2E/cookie.html":{}}}],["www.b.com&#x7db2;&#x7ad9;&#x7684;&#x4e00;&#x5f35;&#x5716;&#x7247;&#xff0c;&#x700f;&#x89bd;&#x5668;&#x5728",{"_index":2131,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.b.com&#x8acb;&#x6c42;&#x5716;&#x7247;&#x7684;&#x6642;&#x5019;&#xff0c;www.b.com",{"_index":2132,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.b.com&#x9019;&#x500b;&#x57df;&#x8a2a;&#x554f;&#xff0c;&#x53cd;&#x800c;&#x4e0d;&#x80fd;&#x88ab",{"_index":2134,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.b.com請求圖片的時候，www.b.com",{"_index":2064,"title":{},"body":{"F2E/cookie.html":{}}}],["www.foo.com的resourc",{"_index":238,"title":{},"body":{"ajax.html":{}}}],["w”、”l”、”o",{"_index":37,"title":{},"body":{"RegExp.html":{}}}],["x",{"_index":350,"title":{},"body":{"closures.html":{},"operators.html":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#bind-apply-call":{},"F2E/header.html":{},"array/map.html":{},"array/map.html#map":{},"array/filter.html":{},"cases/replace.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"object/create.html":{},"statements/block.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"string/queue.html":{}}}],["x,i",{"_index":366,"title":{},"body":{"closures.html":{}}}],["x2014",{"_index":2799,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{},"global/function.html#bind":{},"global/function.html#References":{}}}],["x2018;&#x56de;&#x50b3;&#x7d50;&#x679c;&#x2019",{"_index":1094,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x2018;1&#x2019",{"_index":2521,"title":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x2018;2&#x2019",{"_index":2522,"title":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x2018;3&#x2019;].filter(parseint",{"_index":2542,"title":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}},"body":{}}],["x2018;3&#x2019;].map(parseint)&#x7684;&#x8f38;&#x51fa;&#x7d50;&#x679c;&#x662f;&#x4ec0;&#x9ebc;&#xff1f",{"_index":2523,"title":{},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x2018;a&#x2019",{"_index":3097,"title":{},"body":{"statements/let.html#let":{}}}],["x2018;vti&#x2019",{"_index":3018,"title":{},"body":{"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["x201c;&#x4e0d;&#x6703;&#x201d",{"_index":1053,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x201c;0.00011",{"_index":1990,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x201c;a",{"_index":3301,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x201c;exampl",{"_index":3303,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x201c;function&#x201d",{"_index":3059,"title":{},"body":{"operators/typeof.html#null":{}}}],["x201c;object&#x201d",{"_index":3052,"title":{},"body":{"operators/typeof.html#null":{}}}],["x201c;w/&#x201c",{"_index":2938,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x2026",{"_index":3083,"title":{},"body":{"operators/precedence.html#運算子優先序":{}}}],["x2192",{"_index":1995,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x276f",{"_index":1441,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x3000;&#x9a57;&#x8b49;&#x5354;&#x5546;&#x7de9;&#x5b58",{"_index":2951,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x3000;&#x9a57;&#x8b49;&#x5f37;&#x7de9;&#x5b58",{"_index":2894,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x3000;vue",{"_index":1396,"title":{},"body":{"core.html#屬性特徵":{}}}],["x3001",{"_index":1057,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"global/function.html#cab-call-apply-vs-bind":{},"http/caching.html#強緩存":{}}}],["x3001;undefin",{"_index":1322,"title":{},"body":{"core.html#this":{}}}],["x3002",{"_index":119,"title":{},"body":{"RESTfulAPI.html#動詞":{},"arrowFunction.html#Arrow-Function":{},"this.html#bind-apply-call":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"global/function.html#cab-call-apply-vs-bind":{},"statements/for.html#for…of與for…in的差別":{}}}],["x3002;&#xff08",{"_index":2792,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x3002;object.defineproperti",{"_index":1409,"title":{},"body":{"core.html#屬性特徵":{}}}],["x300c;&#x4fdd;&#x6301;&#x72c0;&#x614b;&#x300d;&#xff0c;&#x5247;&#x662f;&#x6307;&#x901a;&#x4fe1;&#x4ea4;&#x8ac7;&#x7684;&#x5176;&#x4e2d;&#x4e00;&#x65b9;&#xff0c;&#x53ef;&#x4ee5;&#x6240;&#x6709;&#x7684;&#x6d88;&#x606f;&#x4f5c;&#x95dc;&#x806f;&#xff0c;&#x5c31;&#x50cf;&#x662f;&#x5df7;&#x53e3;&#x7684;&#x65e9;&#x9910;&#x5e97;&#x963f;&#x59e8;&#xff0c;&#x9084;&#x8a18;&#x5f97;&#x4f60;&#x6700;&#x611b;&#x5403;&#x7684;&#x706b;&#x817f;&#x86cb;&#x4e0d;&#x559c;&#x6b61;&#x6709;&#x7f8e;&#x4e43;&#x6ecb;&#x3002",{"_index":2154,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x300c;&#x7bad;&#x982d;&#x51fd;&#x5f0f;&#x6c92;&#x6709;&#x81ea;&#x5df1;&#x7684",{"_index":1887,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x300c;&#x7d81;&#x5b9a;this&#x7684;&#x51fd;&#x6578;&#x300d",{"_index":1875,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x300c;&#x9762;&#x5411;&#x3001;&#x9023;&#x63a5;&#x300d;&#x8868;&#x662f;&#x5ba2;&#x6236;&#x7aef;&#x548c;server&#x7aef;&#x901a;&#x4fe1;&#x524d;&#x8981;&#x5148;&#x5efa;&#x7acb;&#x4e00;&#x500b;&#x901a;&#x4fe1;&#x7684;&#x6e20;&#x9053",{"_index":2153,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x300c;.&#x300d",{"_index":1233,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x39f;(1",{"_index":3289,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x4e00;&#x4e32",{"_index":2928,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x4e00;&#x4f46;&#x88ab;&#x7d81;&#x5b9a;&#xff0c;&#x5176;this&#x7121;&#x6cd5;&#x518d;&#x88ab;&#x4fee;&#x6539;&#x3002",{"_index":1876,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x4e00;&#x500b;&#x89e3;&#x6c7a;&#x65b9;&#x6cd5;&#x5c31;&#x662f;&#xff0c;&#x5728;&#x56de;&#x61c9;&#x4e2d;&#xff0c;&#x7d66;&#x51fa;&#x76f8;&#x95dc;&#x93c8;&#x63a5;&#xff0c;&#x4fbf;&#x65bc;&#x4e0b;&#x4e00;&#x6b65;&#x64cd;&#x4f5c;&#x3002;&#x9019;&#x6a23;&#x7684;&#x8a71;&#xff0c;&#x7528;&#x6236;&#x53ea;&#x8981;&#x8a18;&#x4f4f;&#x4e00;&#x500b",{"_index":141,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x4e00;&#x500b;&#x8cc7;&#x6e90;&#x7684;&#x6a19;&#x8b58",{"_index":2931,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x4e00;&#x6a23;&#x662f;&#x6703;&#x88ab;&#x5224;&#x5b9a",{"_index":1087,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x4e00;&#x6a23;&#x6709;&#x5275;&#x9020;&#x968e;&#x6bb5",{"_index":1432,"title":{},"body":{"core.html#const":{}}}],["x4e00;&#x6b21;&#x3002;&#x5982;&#x679c;&#x8981;&#x591a;&#x6b21;&#x8abf;&#x7528;&#xff0c;&#x8acb;&#x4f7f;&#x7528",{"_index":427,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x4e00;&#x81f4;&#xff0c;&#x4e0d;&#x4f7f;&#x7528;&#x5f37;&#x7de9;&#x5b58;&#xff0c;&#x9700;&#x8981;&#x8207;&#x670d;&#x52d9;&#x5668;&#x9a57;&#x8b49;&#x7de9;&#x5b58;&#x662f;&#x5426;&#x65b0;&#x9bae;&#xff0c;&#x5728",{"_index":2920,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e00;&#x958b;&#x59cb;&#x5148;&#x7d66;&#x70ba",{"_index":1698,"title":{},"body":{"performance.html#懶加載":{}}}],["x4e09;&#x500b;&#x7b49;&#x865f",{"_index":1583,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x4e0a;&#x5217;&#x7684;&#x4e09;&#x7a2e;&#x72c0;&#x614b;&#x6bcf;&#x6b21;&#x57f7;&#x884c;&#x5fc5;&#x5b9a;&#x6703;&#x7d93;&#x904",{"_index":2231,"title":{},"body":{"api/promise.html#Promise":{}}}],["x4e0a;&#x9762;&#x4ee3;&#x7801;&#x4e2d;&#xff0c",{"_index":300,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["x4e0a;&#xff0c;&#x5982",{"_index":2168,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4e0b;&#x62c9;&#x9078;&#x55ae;&#x88dc;&#x6a19;&#x984c;&#x3000;&#x3000;&#x3000;&#x3000",{"_index":2392,"title":{},"body":{"array/array_insert.html#example":{}}}],["x4e0b;&#x9762;&#x662f;&#x4e00;&#x500b;&#x4f8b;&#x5b50;&#x3002",{"_index":137,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x4e0b;&#x9762;&#x662f;&#x8868;&#x9054;&#x5f0f",{"_index":1849,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x4e0d;&#x4ee5;&#x5efa;&#x69cb;&#x5f0f;&#x65b9;&#x5f0f;&#x5448;&#x73f",{"_index":1331,"title":{},"body":{"core.html#this":{}}}],["x4e0d;&#x5229;&#x65bc;&#x64f4;&#x5c55;&#xff0c;&#x8a9e;&#x7fa9;&#x4e5f;&#x4e0d;&#x660e;&#x78ba",{"_index":124,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x4e0d;&#x5e94;&#x8be5;&#x7528;&#x4e8e;&#x8fed;&#x4ee3;&#x4e00;&#x4e2a",{"_index":3147,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x4e0d;&#x5efa;&#x8b70;&#x8abf;&#x7528;thi",{"_index":1299,"title":{},"body":{"core.html#this":{}}}],["x4e0d;&#x652f;&#x6301",{"_index":1412,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4e0d;&#x662f;&#x5be6;&#x9ad4;&#x5c6c;&#x6027",{"_index":1205,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x4e0d;&#x662f;&#x6240;&#x6709;&#x533f;&#x540d;&#x51fd;&#x5f0f",{"_index":1240,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x4e0d;&#x662f;&#x7d14;&#x503c",{"_index":1172,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x4e0d;&#x662f;&#x7d14;&#x9663;&#x5217",{"_index":1277,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["x4e0d;&#x6703;&#x56de;&#x50b3;&#x7d50;&#x679c",{"_index":1041,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{}}}],["x4e0d;&#x6703;&#x6539;&#x8b8a",{"_index":988,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x4e0d;&#x6703;&#x8f49;&#x6578;&#x5b57;&#x578b;&#x5225",{"_index":1111,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x4e0d;&#x7b49;&#x65bc;0.3",{"_index":2003,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x4e0d;&#x7ba1;&#x5982;&#x4f55;&#x8abf;&#x6574;&#x79d2;&#x6578",{"_index":1027,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x4e0d;&#x80fd;&#x64cd;&#x4f5c;&#x8b8a;&#x91cf",{"_index":2837,"title":{},"body":{"operators/delete.html#delete":{}}}],["x4e0d;&#x80fd;&#x76f4;&#x63a5;&#x56de;&#x50b3;&#x7269;&#x4ef6;&#x5be6;&#x5b57",{"_index":1451,"title":{},"body":{"core.html#箭頭函數":{}}}],["x4e0d;&#x80fd;&#x8b8a;&#x52d5",{"_index":3046,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x4e0d;&#x80fd;&#x8fed;&#x4ee3;&#x7269;&#x4ef6;&#xff0c;&#x9700;&#x8981;&#x900f;&#x904e;&#x548c",{"_index":3161,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x4e0d;&#x8981;&#x76f8;&#x4fe1;js&#x7684;&#x8a08;&#x7b97",{"_index":2007,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x4e0d;&#x898b;&#x4e86",{"_index":3081,"title":{},"body":{"operators/precedence.html#運算子優先序":{}}}],["x4e0d;&#x8a8d;&#x70ba",{"_index":1596,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x4e0d;&#x8fd4;&#x56d",{"_index":2548,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x4e0d;&#x904e;&#x73fe;&#x5728;&#x505a;&#x7db2;&#x7ad9;&#x6211;&#x5011;&#x90fd;&#x6d41;&#x884c;&#x4f7f;&#x7528;&#x6846;&#x67b6;&#xff0c;session&#x7684;&#x6a5f;&#x5236;&#x90fd;&#x88ab;&#x6846;&#x67b6;&#x6240;&#x5be6;&#x73fe;&#x4e86;&#xff0c;&#x4ee5;rubi",{"_index":2180,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4e0d;&#x9700;&#x8981;&#x540d;&#x7a31",{"_index":1249,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x4e0d;&#x9700;&#x8981;&#x767c;&#x9001;&#x8acb;&#x6c42;&#x5230;&#x670d;&#x52d9;&#x7aef;&#xff0c;&#x76f4;&#x63a5;&#x8b80;&#x53d6;&#x700f;&#x89bd;&#x5668;&#x672c;&#x5730;&#x7de9;&#x5b58;&#xff0c;&#x5728",{"_index":2869,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e14",{"_index":2116,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4e14;&#x7121;&#x6cd5;&#x8abf;&#x6574;&#x503c",{"_index":1389,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4e26;&#x4e0d;&#x6703;&#x76f4;&#x63a5;&#x986f;&#x793a",{"_index":1034,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x4e26;&#x4e14;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":2235,"title":{},"body":{"api/promise.html#Promise":{}}}],["x4e26;&#x4e14;&#x5728;&#x5f8c;&#x9762;&#x52a0;&#x5165",{"_index":1046,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{}}}],["x4e26;&#x52a0;&#x8f09;&#x700f;&#x89bd;&#x5668;&#x7de9;&#x5b58;&#x3002",{"_index":2942,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x4e26;&#x975e;&#x6240;&#x6709;&#x5de5;&#x5ee0;&#x90fd;&#x6703;&#x7acb;&#x5373;&#x8fd4;&#x56de;&#x6578;&#x64da;&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x6709;&#x4e9b;&#x5fc5;&#x9808;&#x5148;&#x7372;&#x53d6;&#x6578;&#x64da;&#x3002",{"_index":2681,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4e2d",{"_index":1230,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x4e2d;&#x4e00;&#x4e2a;&#x65e0;&#x6cd5",{"_index":1410,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4e2d;&#x4e86",{"_index":1715,"title":{},"body":{"performance.html#DOM-查詢做緩存":{}}}],["x4e2d;&#x57fa;&#x672c;&#x985e;&#x578b;&#xff08;primit",{"_index":447,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x4e2d;&#x62ec;&#x5f27;(&#x53ef;&#x7528;&#x8b8a;&#x6578;&#x65b9;&#x5f0f",{"_index":1142,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x4e2d;&#x65b0;&#x589e;&#x7684;&#x5c6c;&#x6027;&#xff0c;&#x5728;&#x8acb;&#x6c42;&#x982d;&#x548c;&#x97ff;&#x61c9;&#x982d;&#x4e2d;&#x90fd;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#xff0c;&#x5e38;&#x7528;&#x7684;&#x5c6c;&#x6027;&#x503c;&#x5982;&#x6709;&#xff1a",{"_index":2885,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e2d;&#x6dfb;&#x52a0",{"_index":2907,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e2d;&#x7684",{"_index":2919,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x500b;&#x5143;&#x7d20;&#x4f5c;&#x70ba;&#x53c3;&#x6578;&#xff0c;&#x5e36;&#x9032;&#x672c",{"_index":1860,"title":{},"body":{"this.html#Callback":{}}}],["x4e2d;&#x81ea;&#x5b9a;&#x7fa9;&#x7684;&#x5c6c;&#x6027;&#xff0c;&#x90fd;&#x61c9;&#x8a72;&#x7528",{"_index":1708,"title":{},"body":{"performance.html#懶加載":{}}}],["x4e2d;&#x986f;&#x793a;&#x7684",{"_index":2870,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e2d;&#xff0c;&#x4f7f;&#x7528;&#x7b2c;&#x4e00;&#x65b9",{"_index":2108,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4e2d;&#xff0c;&#x5f37;&#x7de9;&#x5b58;&#x53c8;&#x5206;&#x70ba",{"_index":2873,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e2d;&#xff0c;&#x6700;&#x5f8c;&#x4e00;&#x6b21;&#x6027;&#x63d2;&#x5165;&#x5230",{"_index":1725,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x4e2d;&#xff0c;&#x6e1b;&#x5c11;&#x700f;&#x89bd;&#x5668;&#x4f7f;&#x7528",{"_index":1694,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x4e3a;&#x6570;&#x7ec4;&#x4e2d;&#x7684;&#x6bcf;&#x4e2a;&#x5143;&#x7d20;&#x8c03;&#x7528;&#x4e00;&#x6b21",{"_index":2543,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x4e4b;&#x4e2d;&#x7684;&#x90a3;&#x500b;&#x5143;&#x7d20;&#x3002",{"_index":1863,"title":{},"body":{"this.html#Callback":{}}}],["x4e5f;&#x662f;&#x4e00;&#x500b;&#x7269;&#x4ef6;&#x7684;&#x5c6c;&#x6027",{"_index":1208,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x4e5f;&#x662f;&#x7269;&#x4ef6;&#x7684;&#x4e00;&#x7a2e;&#xff0c;&#x53ea;&#x662f;&#x5b83;&#x662f;&#x64c1;&#x6709;&#x7a0b;&#x5f0f;&#x5340;&#x584a;&#x7684;&#x80fd;&#x529b;&#x7269;&#x4ef6;&#x800c;&#x5df2",{"_index":1232,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x4e5f;&#x662f;&#xff09",{"_index":2793,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x4e5f;&#x7121;&#x6cd5;&#x914d;&#x7f6e;&#x7279;&#x5fb5",{"_index":1386,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4e5f;&#x8f38;&#x51fa;&#x3002",{"_index":3171,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x4e8b;&#x4ef6",{"_index":1742,"title":{},"body":{"performance.html#事件節流":{}}}],["x4e8b;&#x4ef6;&#x4f47;&#x5217",{"_index":1021,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x4e8b;&#x4ef6;&#x7bc0;&#x6d41",{"_index":1692,"title":{"performance.html#事件節流":{}},"body":{"performance.html#優化原則和方向":{}}}],["x4e8b;&#x4ef6;&#xff0c;&#x901a;&#x904",{"_index":1733,"title":{},"body":{"performance.html#事件節流":{}}}],["x4e8c;&#x9032;&#x4f4d",{"_index":1998,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x4e94;&#x5206;&#x9418;&#x6982;&#x8ff0;&#x7db2;&#x8def;&#x754c;&#x7684;&#x8a18;&#x61b6;&#x5927;&#x795",{"_index":2186,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4ec0;&#x9ebc;&#x662f",{"_index":2094,"title":{"F2E/cookie.html#什麼是-Cookie？":{}},"body":{}}],["x4ec0;&#x9ebc;&#x6642;&#x5019;&#x4e0d;&#x4f7f;&#x7528;&#x7bad;&#x982d;&#x51fd;&#x6578",{"_index":324,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x4ed6;&#x5011;&#x90fd;&#x6703;&#x4f7f;&#x8b8a;&#x91cf;&#x589e;&#x52a0",{"_index":1604,"title":{},"body":{"operators.html#Increment":{}}}],["x4ed6;&#x7684;this&#x6307;&#x5411;&#x5916;&#x5c64",{"_index":1447,"title":{},"body":{"core.html#箭頭函數":{}}}],["x4ee3;&#x7406",{"_index":275,"title":{"event.html#代理":{}},"body":{}}],["x4ee3;&#x78bc;&#x58d3;&#x7e2e;&#x5408;&#x4f75;&#x3001;css",{"_index":1677,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x4ee3;&#x78bc;&#x58d3;&#x7e2e;&#x5408;&#x4f75;&#xff09",{"_index":1678,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x4ee3;&#x78bc;&#x751f;&#x6210",{"_index":983,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x4ee3;&#x8868;&#x76ee;&#x524d;&#x88ab;&#x8655;&#x7406;&#x4e2d;&#x7684",{"_index":1862,"title":{},"body":{"this.html#Callback":{}}}],["x4ee3;&#x8868;&#x8457",{"_index":1015,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x4ee5;&#x53ca;&#x66f4;&#x4f4e;&#x7248;&#x672c;&#x6d4f;&#x89c8;&#x5668;&#x7684;&#x539f;&#x56e0;&#x3002",{"_index":1413,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4f46;&#x4ed6;&#x5011;&#x6703;&#x5171;&#x7528;&#x540c;&#x4e00;&#x500b",{"_index":510,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x4f46;&#x5176;&#x5be6;&#x662f",{"_index":1032,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x4f46;&#x537b;&#x4e0d;&#x5c0f;&#x5fc3;&#x6539;&#x5230;obj1.b",{"_index":501,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x4f46;&#x53ea;&#x6709;&#x53ef;&#x4ee5;&#x8f49;&#x6210;json&#x683c;&#x5f0f;&#x7684;&#x7269;&#x4ef6;&#x624d;&#x53ef;&#x4ee5;&#x9019;&#x6a23;&#x7528",{"_index":520,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["x4f46;&#x5927;&#x5bb6;&#x90fd;&#x6703;&#x64d4;&#x5fc3;&#xff0c;cookie&#x548c;session&#x5f97;&#x7d50;&#x5408;&#xff0c;&#x5230;&#x5e95;&#x9084;&#x6703;&#x4e0d;&#x6703;&#x6709;&#x88ab;&#x7ac4;&#x6539;&#x7684;&#x554f;&#x984c;&#xff0c;&#x9019;&#x500b;&#x6642;&#x5019;&#x5c31;&#x8981;&#x9760;&#x201d;&#x7c3d;&#x7ae0;&#x201d;&#x4f86;&#x9a57;&#x8b49;&#x8cc7;&#x6599;&#x7684;&#x771f;&#x5be6;&#x6027;&#xff0c;&#x5728;&#x6211;&#x4f7f;&#x7528;cookie&#x8acb;&#x6c42;&#x6642;&#xff0c;&#x53ef;&#x4ee5;&#x52a0;&#x4e00;&#x500b;&#x7c3d;&#x7ae0;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x5728;&#x6211;&#x50b3;&#x8f38;&#x7684;&#x8cc7;&#x6599;&#x5f8c;&#x9762;&#x52a0;&#x4e0a;&#x4e00;&#x500b;&#x5c0d;&#x61c9;&#x7684;&#x79d8;&#x5bc6;&#x5b57;&#x4e32;&#xff0c;&#x7576;&#x4f3a;&#x670d;&#x5668;&#x56de;&#x50b3;&#x6642;&#xff0c;&#x53ef;&#x4ee5;&#x56de;&#x61c9;&#x8a72;&#x5b57;&#x4e32;&#xff0c;&#x82e5;&#x662f;&#x5176;&#x4ed6;&#x4f7f;&#x7528;&#x8005;&#x5077;&#x5077;&#x4e32;&#x6539;&#x7684;&#x8a71;&#xff0c;&#x7531;&#x65bc;&#x4e32;&#x6539;&#x7684;&#x8cc7;&#x6599;&#x548c;&#x6211;&#x7684;&#x79d8;&#x5bc6;&#x5b57;&#x4e32;&#x7121;&#x6cd5;&#x76f8;&#x7b26;&#xff0c;&#x7576;&#x7136;&#x4e5f;&#x7121;&#x6cd5;&#x4f5c;&#x507d;&#x9020;&#xff0c;&#x9019;&#x5c31;&#x662f;&#x6240;&#x8b02;&#x7684",{"_index":2177,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4f46;&#x5f9e;&#x5275;&#x9020;&#x5230;&#x5be6;&#x969b;&#x5ba3;&#x544a;&#x7684;&#x968e;&#x6bb5;&#x6703;&#x51fa;&#x73fe;tdz",{"_index":1433,"title":{},"body":{"core.html#const":{}}}],["x4f46;&#x5f9e;&#x9019;&#x88e1;&#x53ef;&#x5f97;&#x77e5;&#xff0c;session&#x4e26;&#x4e0d;&#x662f;&#x4e00;&#x500b;&#x5f88;&#x660e;&#x78ba;&#x5be6;&#x9ad4;&#x7684;&#x6a5f;&#x5236;&#xff0c;&#x7b97;&#x662f;&#x4e00;&#x500b;&#x6982;&#x5ff5;&#xff0c;&#x53ea;&#x8981;&#x7b26;&#x5408;&#x6982;&#x5ff5;&#x6240;&#x5be6;&#x4f5c;&#x51fa;&#x4f86;&#x7684;&#x529f;&#x80fd;&#x90fd;&#x53ef;&#x4ee5;&#x88ab;&#x53eb;&#x505a;session&#x3002",{"_index":2184,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4f46;&#x662f;&#x539f;&#x59cb;&#x578b;&#x5225;&#x76e1;&#x91cf;&#x4e0d;&#x7528;&#x6b64;&#x65b9;&#x5f0f",{"_index":1078,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x4f46;&#x662f;&#x53ef;&#x4ee5;&#x8abf;&#x6574;&#x5c6c;&#x6027;&#x503c",{"_index":1387,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4f46;&#x662f;&#x5728;&#x6700;&#x521d;&#x7684",{"_index":2165,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4f46;&#x6df1;&#x62f7;&#x8c9d;&#x6703;&#x53e6;&#x5916;&#x5275;&#x9020;&#x4e00;&#x500b;&#x4e00;&#x6a21;&#x4e00;&#x6a23;&#x7684;&#x7269;&#x4ef6",{"_index":506,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x4f46;&#x7121;&#x7e7c;&#x627f;&#x52d5;&#x7269;&#x754c;&#x7684;&#x5efa;&#x69cb;&#x51fd;&#x5f0f",{"_index":1369,"title":{},"body":{"core.html#繼承":{}}}],["x4f46;&#x7269;&#x4ef6;&#x5c31;&#x4e0d;&#x540c;&#xff0c;&#x7269;&#x4ef6;&#x50b3;&#x7684;&#x662f",{"_index":497,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x4f46;&#x8a18;&#x4f4f;session&#x5c31;&#x50cf;&#x662f;&#x4f60;&#x7684;&#x6703;&#x54e1;&#x5361;&#x865f;&#xff0c;&#x4e0d;&#x898b;&#x4e5f;&#x8868;&#x793a;&#x4ecd;&#x7136;&#x6709;&#x8cc7;&#x6599;&#x88ab;&#x7aca;&#x53d6;&#x7684;&#x98a8;&#x96aa;&#x3002",{"_index":2178,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4f46;json&#x4e00;&#x5f8b;&#x7528;&#x96d9;&#x5f15;&#x865f",{"_index":1220,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x4f46;null&#x4e0d;&#x662f;object",{"_index":3054,"title":{},"body":{"operators/typeof.html#null":{}}}],["x4f46;target&#x53ef;&#x4ee5;&#x544a;&#x77e5;&#x9ede;&#x64ca;&#x5f9e;&#x54ea;&#x51fa;&#x767c;&#x7684",{"_index":285,"title":{},"body":{"event.html#代理":{}}}],["x4f5c;&#x70ba;&#x539f;&#x578b;&#x4f7f;&#x7528",{"_index":1357,"title":{},"body":{"core.html#繼承":{}}}],["x4f5c;&#x70ba;&#x547d;&#x540d;&#x7d04;&#x5b9a;&#x4f86;&#x986f;&#x793a;&#x9019;&#x4e9b;&#x5de5;&#x5ee0;&#x505a;&#x4e00;&#x4e9b;&#x7570;&#x6b65;&#x5de5;&#x4f5c;&#x548c;&#x8fd4;&#x56de;promise&#x3002",{"_index":2692,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f5c;&#x70ba;&#x7269;&#x4ef6;&#x65b9;&#x6cd5",{"_index":1295,"title":{},"body":{"core.html#this":{}}}],["x4f5c;&#x7528;&#x57df;&#x5c07;&#x4e0a;&#x4e0b;&#x6587;&#x7d81;&#x5b9a;&#x5230",{"_index":328,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x4f5c;&#x7528;&#x57df;&#x662f;&#x51fd;&#x6578;&#x8abf;&#x7528;&#x6642;&#x624d;&#x6c7a;&#x5b9a",{"_index":991,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x4f5c;&#x7528;&#x5b8c;&#x5168;&#x4e00;&#x6a23;&#xff0c;&#x53ea;&#x662f;&#x63a5;&#x53d7;&#x53c3;&#x6578;&#x7684;&#x65b9;&#x5f0f;&#x4e0d;&#x592a;&#x4e00;&#x6a23",{"_index":1877,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x4f5c;&#x958b;&#x59cb",{"_index":1061,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x4f7f;&#x7528",{"_index":1681,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x4f7f;&#x7528;&#x4e09;&#x5143;&#x904b;&#x7b97;&#x5b50",{"_index":1130,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x4f7f;&#x7528;&#x5305;&#x88f9;&#x7269;&#x4ef6;&#x8f49;&#x63db",{"_index":1113,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x4f7f;&#x7528;&#x7d66;&#x5b9a;&#x7684;this&#x53c3;&#x6578;&#x4ee5;&#x53ca;&#x5206;&#x5225;&#x7d66;&#x5b9a;&#x7684;&#x53c3;&#x6578;&#x4f86;&#x547c;&#x53eb;&#x67d0;&#x500b;&#x51fd;&#x6578",{"_index":1878,"title":{},"body":{"this.html#bind-apply-call":{},"global/function.html#call、apply、bind":{}}}],["x4f7f;&#x7528;&#x8907;&#x6578",{"_index":115,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x4f7f;&#x7528;&#x9019;&#x4e9b;&#x7c21;&#x55ae;&#x7684;&#x69cb;&#x5efa;&#x584a;&#x4f7f;&#x5f97;&#x6211;&#x5011;&#x7684;&#x4ee3;&#x78bc;&#x66f4;&#x52a0;&#x53cb;&#x597d;&#xff0c;&#x9019;&#x7d55;&#x5c0d;&#x662f;&#x6211;&#x5011;&#x61c9;&#x8a72;&#x95dc;&#x5fc3;&#x7684;&#x4e8b;&#x60c5;&#x3002",{"_index":2703,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f7f;&#x7528;javascript&#x5167;&#x7f6e;&#x7684;&#x51fd;&#x6578",{"_index":2005,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x4f86;&#x4fdd;&#x7559;&#x4e00;&#x5b9a;&#x7684;&#x7cbe;&#x5ea6;&#xff1a",{"_index":2006,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x4f86;&#x53d6;&#x5f97;&#x6210;&#x529f;&#x7684;&#x7d50;&#x679c;&#xff0c;&#x5931;&#x6557;&#x7684;&#x90e8;&#x5206;&#x4ea4;&#x7531",{"_index":2239,"title":{},"body":{"api/promise.html#Promise":{}}}],["x4f86;&#x5b9a;&#x7fa9;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#x3002",{"_index":2683,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f86;&#x5b9a;&#x7fa9;&#x65b9;&#x6cd5;&#x3002",{"_index":335,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x4f86;&#x76e3;&#x807d;&#x3002;&#x4f7f;&#x7528;&#x7bc0;&#x6d41;&#x3002",{"_index":1734,"title":{},"body":{"performance.html#事件節流":{}}}],["x4f86;&#x7acb;&#x5373;&#x57f7;&#x884c;&#x51fd;&#x5f0f",{"_index":1047,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{}}}],["x4f86;&#x81ea;&#x5728;&#x7db2;&#x9801;&#x4e0a;&#x5d4c;&#x5165;&#x5ee3;&#x544a;&#x6216;&#x5716;&#x7247;&#x7b49;&#x9805;&#x7684;&#x5176;&#x4ed6;&#x57df;&#x4f86;&#x6e90;&#x3002",{"_index":2103,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["x4f86;&#x8655;&#x7406",{"_index":2240,"title":{},"body":{"api/promise.html#Promise":{}}}],["x4f86;&#x8868;&#x793a;&#x3002;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#xff0c;&#x53ef;&#x4ee5;&#x7528;&#x7d44;&#x5408;&#x800c;&#x4e0d;&#x662f;&#x7e7c;&#x627f;&#x4f86;&#x5be6;&#x73fe;&#x3002",{"_index":2670,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f8b",{"_index":145,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x4f8b;&#x5982;&#x8981;&#x5728;&#x6587;&#x5b57;&#x6539;&#x8b8a;&#x6642;&#x89f8;&#x767c;&#x4e00;&#x500b",{"_index":1732,"title":{},"body":{"performance.html#事件節流":{}}}],["x4f8b;&#x5982;&#xff0c;&#x4f7f;&#x7528;&#x7e7c;&#x627f;&#x3002",{"_index":2671,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f8b;&#x5982;&#xff0c;&#x6211;&#x5011;&#x53ef;&#x4ee5;&#x5275;&#x5efa;&#x4e00;&#x500b",{"_index":2661,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f8b;:foreach",{"_index":1211,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x4f8b;:tostr",{"_index":1214,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x4f9d;&#x7136;&#x6307;&#x5411",{"_index":1895,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x4fdd;&#x5b58;&#x9019;&#x500b;session",{"_index":2170,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4fdd;&#x6301;&#x539f;&#x6709;&#x9663;&#x5217;&#x4e0d;&#x8b8a;&#x7684;&#x6b63;&#x78ba;&#x9078;&#x64c7",{"_index":2496,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x4fee;&#x6539;&#x65b0;&#x7269;&#x4ef6;&#x4e0d;&#x6703;&#x6539;&#x5230;&#x539f;&#x7269;&#x4ef6",{"_index":508,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x500b",{"_index":421,"title":{},"body":{"asynchronous.html#setTimeout":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"http/caching.html#強緩存":{}}}],["x500b;&#x5b9a;&#x6642;&#x5668;&#xff0c;&#x4e00;&#x822c;&#x60c5;&#x6cc1;&#x4e0b;&#xff0c;&#x9019;&#x4e9b;&#x5b9a;&#x6642;&#x5668;&#x90fd;&#x6703;&#x5728",{"_index":418,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x500b;&#x5c6c;&#x6027;&#xff0c;&#x4ee3;&#x78bc;&#x5982;&#x4e0b;&#xff1a",{"_index":2897,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x500b;&#x65b9;&#x6cd5",{"_index":2818,"title":{},"body":{"global/function.html#References":{}}}],["x500b;&#x982d;&#x90e8;&#x5c6c;&#x6027;&#x4e2d;&#x7684;&#x512a;&#x5148;&#x7d1a;&#x6700;&#x9ad8;&#x3002",{"_index":2921,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x501f;&#x7528;array&#x7684;&#x539f;&#x751f;&#x65b9;&#x6cd5",{"_index":1885,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x503c",{"_index":1374,"title":{},"body":{"core.html#屬性特徵":{}}}],["x503c;&#x5f8c;&#x7db4;&#x8b8a;&#x5316;&#x7684;&#x6642;&#x5019;&#xff0c;&#x624d;&#x6703;&#x771f;&#x6b63;&#x5730;&#x8acb;&#x6c42;&#x8cc7;&#x6e90;&#xff0c;&#x5426;&#x5247;&#x8fd4;&#x56d",{"_index":2941,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x503c;&#x88ab;&#x8907;&#x88fd;&#x4e86",{"_index":453,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x503c;&#x9032;&#x884c;&#x6bd4;&#x8f03;&#xff0c;&#x5982;&#x679c;&#x76f8;&#x7b49;&#x5247;&#x8868;&#x793a;&#x547d;&#x4e2d;&#x5354;&#x5546;&#x7de9;&#x5b58;&#x3002;etag",{"_index":2935,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x503c;(valu",{"_index":3158,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x505c;&#x4e0b;&#x624d;&#x89f8;&#x767c",{"_index":1743,"title":{},"body":{"performance.html#事件節流":{}}}],["x50b3;&#x503c;(call",{"_index":1179,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x50b3;&#x5165;&#x7684;&#x53c3;&#x6578;&#x51fd;&#x5f0f",{"_index":1247,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x50b3;&#x5165;&#x7684;&#x5b57;&#x4e32",{"_index":1228,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x50b3;&#x53c3;&#x8003;&#x7279;&#x6027;&#x6703;&#x6c92;&#x6709",{"_index":1193,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x50b3;&#x53c3;&#x8003;(call",{"_index":1182,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x50b3;&#x591a;&#x500b;&#x51fd;&#x6578",{"_index":389,"title":{"closures.html#傳多個函數":{}},"body":{}}],["x50b3;&#x7d14;&#x503c",{"_index":1318,"title":{},"body":{"core.html#this":{}}}],["x50b3;&#x905e;&#x8b8a;&#x6578",{"_index":1268,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x50cf;function&#x6c92;&#x8fa6;&#x6cd5;&#x8f49;&#x6210;json",{"_index":521,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["x5118;&#x65e9;&#x57f7;&#x884c;&#x64cd;&#x4f5c",{"_index":1727,"title":{"performance.html#儘早執行操作-DOMContentLoaded":{}},"body":{}}],["x5118;&#x65e9;&#x57f7;&#x884c;&#x64cd;&#x4f5c;&#xff08",{"_index":1691,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x5118;&#x7ba1;json&#x662f;javascript&#x7684;&#x4e00;&#x500b;&#x5b50;&#x96c6;&#xff0c;&#x4f46;json&#x662f;&#x7368;&#x7acb;&#x65bc;&#x8a9e;&#x8a00;&#x7684;&#x6587;&#x5b57;&#x683c;&#x5f0f",{"_index":1217,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x5118;&#x91cf;&#x4f7f;&#x7528;&#x5168;&#x7b49;&#x64cd;&#x4f5c;&#x7b26;&#x3002;&#x56e0;&#x70ba;&#x5176;&#x6c92;&#x6709;&#x96b1;&#x5f0f;&#x8f49;&#x63db;&#xff0c;&#x9019;&#x6a23;&#x7d50;&#x679c;&#x6703;&#x6bd4;&#x8f03;&#x5bb9;&#x6613;&#x9810;&#x6e2c;&#x3001;&#x8a08;&#x7b97;&#x4e5f;&#x6703;&#x6bd4;&#x8f03;&#x5feb",{"_index":1587,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x512a;&#x5148;&#x5e8f;&#x9ad8;&#x65bc",{"_index":3082,"title":{},"body":{"operators/precedence.html#運算子優先序":{}}}],["x512a;&#x5148;&#x8f09;&#x5165",{"_index":1002,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x512a;&#x5316;&#x539f;&#x5247;&#x548c;&#x65b9;&#x5411",{"_index":1668,"title":{"performance.html#優化原則和方向":{}},"body":{}}],["x512a;&#x5316;&#x7684;&#x65b9;&#x5411;&#x6709;&#x5169;&#x500b;&#xff1a",{"_index":1674,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x512a;&#x5316;&#x9801;&#x9762;&#x6e32;&#x67d3",{"_index":1683,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x5148;&#x5ba3;&#x544a;&#x8b8a;&#x6578",{"_index":997,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5148;&#x628a;&#x9019;&#x908a;&#x7684;this(&#x6307;&#x5411;class&#x5167;&#x90e8;)&#x5b58;&#x8d77;&#x4f86",{"_index":2812,"title":{},"body":{"global/function.html#bind":{}}}],["x5148;&#x653e;&#x5728",{"_index":1724,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x5148;&#x8ce6;&#x4e88;&#x547d;&#x540d;&#x7a7a;&#x9593",{"_index":1071,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x5168;&#x4ecb;&#x7d39",{"_index":2214,"title":{},"body":{"api/promise.html#Promise":{}}}],["x5168;&#x57df",{"_index":1421,"title":{},"body":{"core.html#Let":{},"core.html#箭頭函數":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{}}}],["x5168;&#x57df;,0,1,2",{"_index":1846,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x5169;&#x8005;&#x5b8c;&#x5168;&#x7121;&#x95dc",{"_index":1196,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x5171;&#x6709;&#x5169;&#x7a2e;&#x985e;&#x578b;&#x7684",{"_index":2097,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["x5176",{"_index":2800,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x5176;&#x4ed6;&#x7db2;&#x57df;&#x4e2d;&#x7684",{"_index":2114,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5177;&#x540d;&#x51fd;&#x5f0f;&#x80fd;&#x5920;&#x5728;&#x51fd;&#x5f0f;&#x5167;&#x88ab;&#x8abf;&#x7528",{"_index":1242,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x518d;&#x5c07;&#x968a;&#x5217;&#x8f49;&#x63db;&#x6210;&#x5b57;&#x7b26;&#x4e32;&#x8f38;&#x51fa;&#xff08;&#x5df2;&#x7a7a;&#x683c;&#x70ba;&#x5206;&#x9694;&#x7b26;&#xff09",{"_index":3313,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x518d;&#x8f49;&#x56de;&#x4f86",{"_index":518,"title":{"copy.html#轉成-JSON-再轉回來":{}},"body":{}}],["x51cd;&#x7d50",{"_index":1383,"title":{},"body":{"core.html#屬性特徵":{}}}],["x51e1;&#x662f;&#x4f7f;&#x7528",{"_index":1083,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x51fa;&#x4f86;&#x7684;&#x8cc7;&#x6599;&#x662f;&#x4e00;&#x500b;&#x7269;&#x4ef6;&#xff0c;&#x6240;&#x4ee5;&#x7269;&#x4ef6;&#x6703;&#x6709;&#x50b3;&#x53c3;&#x8003;&#x7279;&#x6027",{"_index":1224,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x51fa;&#x73fe;&#x5728",{"_index":2262,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["x51fa;&#x968a",{"_index":3274,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x51fd;&#x5f0f",{"_index":1181,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x51fd;&#x5f0f;&#x4e0a",{"_index":1345,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x51fd;&#x5f0f;&#x5c07;&#x6703;&#x628a",{"_index":1859,"title":{},"body":{"this.html#Callback":{}}}],["x51fd;&#x5f0f;&#x5de5;&#x5ee0",{"_index":1286,"title":{"core.html#函式工廠":{}},"body":{}}],["x51fd;&#x5f0f;&#x6703;&#x56de;&#x50b3;&#x5927;&#x65bc;&#x7b49;&#x65bc;&#x6240;&#x7d66;&#x6578;&#x5b57;&#x7684;&#x6700;&#x5c0f;&#x6574;&#x6578",{"_index":1542,"title":{},"body":{"num.html#取值":{}}}],["x51fd;&#x5f0f;&#x6703;&#x56de;&#x50b3;&#x7121;&#x689d;&#x4ef6;&#x6368;&#x53bb;&#x5f8c;&#x7684;&#x6700;&#x5927;&#x6574;&#x6578",{"_index":1541,"title":{},"body":{"num.html#取值":{}}}],["x51fd;&#x5f0f;&#x6703;&#x81ea;&#x52d5;&#x63d0;&#x5347",{"_index":2029,"title":{},"body":{"variable.html#Hoisting":{}}}],["x51fd;&#x5f0f;&#x672c;&#x8eab;&#x5c31;&#x662f;&#x4e00;&#x500b;&#x7269;&#x4ef6",{"_index":1338,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x51fd;&#x5f0f;&#x7269;&#x4ef6;&#x6709;&#x4e00;&#x500b;&#x7279;&#x5225;&#x7684;&#x5c6c;&#x6027",{"_index":1339,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x51fd;&#x5f0f;&#x7269;&#x4ef6;&#x7279;&#x6709;&#x7684;&#x5c6c;&#x6027",{"_index":1342,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x51fd;&#x5f0f;&#x8868;&#x9054;&#x5f0f",{"_index":1009,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x51fd;&#x5f0f;&#x88e1;&#xff0c;&#x6bcf;&#x500b;&#x5143;&#x7d20;&#x5404;&#x57f7;&#x884c;&#x4e00;&#x6b21;&#xff0c;&#x63a5;&#x6536;&#x4e09;&#x500b;&#x53c3;&#x6578;&#xff1a",{"_index":1861,"title":{},"body":{"this.html#Callback":{}}}],["x51fd;&#x5f0f;&#xff0c;&#x5247;&#x6703",{"_index":2247,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x51fd;&#x5f0f;&#xff0c;&#x5728;&#x4e0b;&#x4e00;&#x500b",{"_index":2251,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x51fd;&#x6570;&#xff0c;&#x5e76;&#x5229;&#x7528;&#x6240;&#x6709;&#x4f7f;&#x5f97",{"_index":2544,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x51fd;&#x6578",{"_index":3051,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x51fd;&#x6578;&#x539f;&#x578b;&#x6700;&#x5be6;&#x7528;&#x7684",{"_index":2817,"title":{},"body":{"global/function.html#References":{}}}],["x51fd;&#x6578;&#x56de;&#x50b3;&#x56db;&#x6368;&#x4e94;&#x5165;&#x5f8c;&#x7684;&#x8fd1;&#x4f3c;&#x503c",{"_index":1540,"title":{},"body":{"num.html#取值":{}}}],["x51fd;&#x6578;&#x662f;&#x7570;&#x6b65;&#x7684",{"_index":415,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x51fd;&#x6578;&#x8072;&#x660e",{"_index":3031,"title":{},"body":{"operators/function.html#函數表達式":{},"operators/typeof.html#typeof":{}}}],["x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f",{"_index":3025,"title":{"operators/function.html#函數表達式":{}},"body":{"operators/function.html#函數表達式":{}}}],["x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x63d0;&#x5347",{"_index":3033,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#xff08;function",{"_index":3026,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["x51fd;&#x6578;&#x9673;&#x8ff0;&#x5f0f",{"_index":1000,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x51fd;&#x6578;&#x9673;&#x8ff0;&#x5f0f;&#x6c92;&#x6709;&#x540d;&#x7a31;&#x7121;&#x6cd5;&#x57f7;&#x884c",{"_index":1246,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x5206;&#x5272;&#x6307;&#x5b9a;&#x957f;&#x5ea6;&#x7684;&#x5143;&#x7d20;&#x6570;&#x7ec4",{"_index":2413,"title":{"array/splice.html#分割指定长度的元素数组":{}},"body":{}}],["x5224;&#x65b7;&#x60a8;&#x662f;&#x4f7f;&#x7528;&#x7b2c;&#x4e00;&#x65b9;&#x9084;&#x662f;&#x7b2c;&#x4e09;&#x65b9",{"_index":2185,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5224;&#x65b7;&#x6240;&#x6709;&#x5143;&#x7d20;&#x662f;&#x5426;&#x90fd;&#x7b26;&#x5408;&#x689d;&#x4ef6",{"_index":2477,"title":{},"body":{"array/array_methods.html#every":{}}}],["x5224;&#x65b7;&#x662f;&#x5426;&#x81f3;&#x5c11;&#x4e00;&#x500b;&#x5143;&#x7d20;&#x7b26;&#x5408;&#x689d;&#x4ef6",{"_index":2478,"title":{},"body":{"array/array_methods.html#some":{}}}],["x5229;&#x7528",{"_index":445,"title":{},"body":{"asynchronous.html#setTimeout":{},"core.html#const":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{}}}],["x5229;&#x7528;&#x9663;&#x5217;&#x53ca;for&#x8ff4;&#x5708",{"_index":1157,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x5229;&#x7528;&#x9663;&#x5217;&#x9577;&#x5ea6;&#x9032;&#x884c;&#x8ce6;&#x503c",{"_index":2378,"title":{},"body":{"array/array_insert.html#把數據插入陣列尾部":{}}}],["x522a;&#x4e0d;&#x6389;x",{"_index":2835,"title":{},"body":{"operators/delete.html#delete":{}}}],["x5230;&#x76ee;&#x524d;&#x70ba;&#x6b62;&#xff0c;&#x6211;&#x5011;&#x9084;&#x6c92;&#x6709;&#x770b;&#x5230;&#x4efb;&#x4f55;&#x5de5;&#x5ee0;&#x7528;&#x65b9;&#x6cd5;&#x8fd4;&#x56de;&#x5c0d;&#x8c61;&#xff0c;&#x9019;&#x662f;&#x6545;&#x610f;&#x7684;&#x3002",{"_index":2693,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5247;&#x53ef;&#x4ee5;&#x53d6;&#x5f97;&#x7d50;&#x679c",{"_index":2252,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x5247;&#x6574;&#x500b;&#x6f14;&#x7b97;&#x6cd5;&#x7684;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x70ba;o(n+n2)=o(n2)&#x3002",{"_index":3288,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x5247;&#x662f;&#x4e00;&#x500b;&#x8a9e;&#x6cd5;&#xff0c;&#x5c08;&#x9580;&#x7528;&#x4f86;&#x8655;&#x7406;&#x975e;&#x540c;&#x6b65;&#x884c;&#x70ba;&#xff0c",{"_index":2217,"title":{},"body":{"api/promise.html#Promise":{}}}],["x5247;&#x662f;&#x8a72;&#x7269;&#x4ef6",{"_index":1840,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["x5247;&#x6703;&#x56de;&#x50b3;&#x4e00;&#x500b;&#x7d93;&#x904e;&#x5305;&#x88f9;&#x5f8c;&#x7684",{"_index":1871,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x524d;&#x65b9;&#x52a0;&#x5165;&#x5206;&#x865f",{"_index":1065,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x524d;&#x7aef;&#x8fdb;&#x9636;&#x7b97;&#x6cd5;&#xff1a;&#x4e00;&#x770b;&#x5c31;&#x61c2;&#x7684;&#x961f;&#x5217;&#x53ca;&#x914d;&#x5957;&#x7b97;&#x6cd5;&#x9898",{"_index":3315,"title":{},"body":{"string/queue.html#References":{}}}],["x524d;&#x7f6e;&#x905e;&#x589e;&#x662f;&#x5148;&#x8a08;&#x7b97;&#x5f8c;&#x8ce6;&#x503c;&#xff0c;&#x5982;&#xff1a",{"_index":1607,"title":{},"body":{"operators.html#Increment":{}}}],["x5275;&#x9020",{"_index":1428,"title":{},"body":{"core.html#const":{}}}],["x5275;&#x9020;&#x74b0;&#x5883",{"_index":995,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5275;&#x9020;&#x968e;&#x6bb5",{"_index":1006,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5275;&#x9020;&#x968e;&#x6bb5;&#x51fd;&#x5f0f;&#x512a;&#x5148",{"_index":1010,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5275;&#x9020;&#x968e;&#x6bb5;&#x51fd;&#x5f0f;&#x5df2;&#x53ef;&#x4ee5;&#x904b;&#x884c",{"_index":1003,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x52a0;&#x5206;&#x56de;&#x7b54",{"_index":1586,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x52a0;&#x62ec;&#x865f;&#x4fee;&#x6b63",{"_index":1453,"title":{},"body":{"core.html#箭頭函數":{}}}],["x52a0;&#x8f7d;&#x89c4;&#x5219",{"_index":304,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["x52a0;&#x9322;&#x5230;&#x8d85;&#x904e;100&#x5143;&#x624d;&#x505c;&#x6b62",{"_index":1245,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x52d5;&#x614b;&#x4f5c;&#x7528;&#x57df",{"_index":990,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x52d5;&#x614b;&#x578b;&#x5225",{"_index":1069,"title":{"core.html#動態型別":{},"variable.html#動態型別":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x52d5;&#x614b;&#x7684",{"_index":2791,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x52d5;&#x8a5e",{"_index":99,"title":{"RESTfulAPI.html#動詞":{}},"body":{"RESTfulAPI.html#動詞":{}}}],["x52d5;&#x8a5e;&#x901a;&#x5e38;&#x5c31;&#x662f;&#x4e94;&#x7a2",{"_index":100,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x533f;&#x540d;&#x51fd;&#x5f0f",{"_index":1044,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{}}}],["x533f;&#x540d;&#x51fd;&#x6578",{"_index":3032,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["x5340;&#x57df",{"_index":1838,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{},"this.html#立即函式：":{},"this.html#bind-apply-call":{}}}],["x5341;&#x9032;&#x4f4d",{"_index":1997,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5354;&#x5546;&#x7de9;&#x5b58",{"_index":2922,"title":{"http/caching.html#協商緩存":{}},"body":{}}],["x5373",{"_index":3093,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x5373;&#x53ef;&#x505a;&#x5230;&#x65b0;&#x589e;&#x5c6c;&#x6027;&#x8207;&#x503c;&#xff0c;&#x6240;&#x4ee5;funct",{"_index":1234,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x5373;&#x7b2c",{"_index":420,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x539f;&#x51fd;&#x6578",{"_index":1874,"title":{},"body":{"this.html#bind-apply-call":{},"global/function.html#cab-call-apply-vs-bind":{}}}],["x539f;&#x578b;&#x93c8;&#x4e0a;&#x65b0;&#x589e;&#x4e00;&#x500b;&#x5c64;&#x7d1a",{"_index":1352,"title":{},"body":{"core.html#繼承":{}}}],["x539f;&#x59cb;&#x578b;&#x5225",{"_index":1076,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x539f;&#x59cb;&#x578b;&#x5225;&#x53ca;&#x7269;&#x4ef6;&#x578b;&#x5225",{"_index":1075,"title":{"core.html#原始型別及物件型別":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x539f;&#x751f;ajax",{"_index":1227,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x539f;&#x751f;ajax&#x8b80;json",{"_index":1226,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x53bb;&#x4e0a;&#x5c64;&#x7d81;&#x5b9a",{"_index":281,"title":{},"body":{"event.html#代理":{}}}],["x53c3;&#x6578",{"_index":1272,"title":{"core.html#參數":{}},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"this.html#bind-apply-call":{}}}],["x53c3;&#x8003;&#x4e5f;&#x90fd;&#x4e0d;&#x4e00;&#x6a23",{"_index":1197,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x53c3;&#x8003;&#x540c;&#x4e00;&#x500b;&#x8a18;&#x61b6;&#x9ad4",{"_index":1117,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x53c3;&#x8003;&#x7269;&#x4ef6",{"_index":1164,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["x53c8;&#x6709;&#x5f37;&#x5f31;&#x6821;&#x9a57;&#x4e4b;&#x5206;&#xff0c;&#x5982;&#x679c",{"_index":2936,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x53ca",{"_index":2236,"title":{},"body":{"api/promise.html#Promise":{},"api/promise.html#鏈接":{}}}],["x53d6;&#x503c",{"_index":1538,"title":{"num.html#取值":{}},"body":{}}],["x53d6;&#x503c;undefin",{"_index":1203,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x53d6;&#x5c0f;&#x6578;&#x524d;&#x7684",{"_index":1996,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x53d6;&#x5f97;&#x6210;&#x529f;&#x6216;&#x5931;&#x6557;&#x7684;&#x7d50;&#x679c;&#x3002",{"_index":2237,"title":{},"body":{"api/promise.html#Promise":{}}}],["x53d6;&#x5f97;&#x7279;&#x5b9a;&#x503c;&#x7684;&#x65b9;&#x6cd5",{"_index":1390,"title":{},"body":{"core.html#屬性特徵":{}}}],["x53d6;&#x5f97;&#x9663;&#x5217;&#x6700;&#x5f8c;&#x4e00;&#x500b;&#x503c",{"_index":1394,"title":{},"body":{"core.html#屬性特徵":{}}}],["x53d6;&#x9910;&#x7684;&#x865f;&#x78bc;&#x724c;&#xff0c;&#x8a8d;&#x865f;&#x4e0d;&#x8a8d;&#x4eba",{"_index":2148,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x53e6;&#x4e00;&#x500b;&#x7279;&#x9ede;&#x5728;&#x65bc",{"_index":2243,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x53e6;&#x5916;&#xff0c;&#x9019;&#x88e1;&#x70ba;&#x4f55;&#x8981;&#x7528;data",{"_index":1705,"title":{},"body":{"performance.html#懶加載":{}}}],["x53ea;&#x57f7;&#x884c",{"_index":426,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x53ea;&#x6709;&#x4e00;&#x500b;&#x5c6c;&#x6027;&#x503c;&#xff0c;&#x5c31;&#x662f",{"_index":2917,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x53ea;&#x67e5;&#x8a62;&#x4e00;&#x500b",{"_index":1713,"title":{},"body":{"performance.html#DOM-查詢做緩存":{}}}],["x53ea;&#x80fd;&#x5728;&#x51fd;&#x6578;&#x5167;&#x4f7f;&#x7528",{"_index":3049,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x53ef;&#x4ee5;&#x4f5c;&#x70ba;&#x547c;&#x53eb",{"_index":1868,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":3126,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x53ef;&#x4ee5;&#x505a;&#x5230;&#x9664;&#x4e86;&#x88ab;&#x51cd;&#x7d50",{"_index":1423,"title":{},"body":{"core.html#const":{}}}],["x53ef;&#x4ee5;&#x505a;&#x5f88;&#x591a;&#x4e0d;&#x540c;&#x4e8b;&#x60c5",{"_index":1289,"title":{},"body":{"core.html#函式工廠":{}}}],["x53ef;&#x4ee5;&#x628a;&#x5176;&#x4ed6;&#x7269;&#x4ef6;&#x4f5c;&#x70ba;&#x539f;&#x578b;&#x4f7f;&#x7528",{"_index":1353,"title":{},"body":{"core.html#繼承":{}}}],["x53ef;&#x4ee5;&#x900f;&#x904e;&#x9ede;&#x904b;&#x7b97;&#x5b50;&#x4e0d;&#x65b7;&#x5411;&#x4e0a;&#x67e5;&#x627e;&#x53d6;&#x5f97;&#x65b9;&#x6cd5",{"_index":1210,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x53ef;&#x4ee5;&#x91cd;&#x65b0;&#x8ce6;&#x503c",{"_index":3048,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x53ef;&#x5229;&#x7528",{"_index":1020,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x53ef;&#x5426;&#x5beb;&#x5165",{"_index":1375,"title":{},"body":{"core.html#屬性特徵":{}}}],["x53ef;&#x5426;&#x88ab;&#x5217;&#x8209",{"_index":1377,"title":{},"body":{"core.html#屬性特徵":{}}}],["x53ef;&#x5426;&#x88ab;&#x522a;&#x9664",{"_index":1376,"title":{},"body":{"core.html#屬性特徵":{}}}],["x53ef;&#x7528;&#x5305;&#x88f9;&#x7269;&#x4ef6;&#x7684;&#x6240;&#x6709;&#x65b9;&#x6cd5",{"_index":1077,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x5408;&#x4f75",{"_index":1716,"title":{"performance.html#合併-DOM-插入-createDocumentFragment":{}},"body":{}}],["x5408;&#x4f75;&#x7269;&#x4ef6",{"_index":2975,"title":{"object/assign.html#合併物件":{}},"body":{}}],["x540c;&#x6642;&#x5b58;&#x5728;&#x7684;&#x6642;&#x5019;&#xff0c;pragma",{"_index":2914,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x540c;&#x6a23;&#x662f;&#x7269;&#x4ef6;&#x578b;&#x5225",{"_index":1119,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x540c;&#x6b65;&#x6982;&#x5ff5;&#x7684;&#x5148;&#x8dd1;&#x5b8c",{"_index":1023,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x540c;&#x6b65;/&#x975e;&#x540c;&#x6b65",{"_index":1017,"title":{"core.html#同步-非同步":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x547c;&#x53eb",{"_index":1881,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x548c",{"_index":1600,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["x548c;&#x524d;&#x7f6e;&#x905e;&#x589",{"_index":1602,"title":{},"body":{"operators.html#Increment":{}}}],["x548c;&#x7576;&#x524d;&#x6587;&#x4ef6;&#x7684",{"_index":2934,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x548c;gpu",{"_index":1672,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x54cd;&#x5e94;&#x5f0f;&#x6838;&#x5fc3;&#x5c31;&#x662f;&#xff0c;gett",{"_index":1415,"title":{},"body":{"core.html#屬性特徵":{}}}],["x554f;&#x984c",{"_index":1973,"title":{},"body":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x5584;&#x7528",{"_index":2008,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x55ae;&#x7d14;&#x8fed;&#x4ee3;&#x9663;&#x5217;&#x7684;&#x8a71;&#xff0c;for&#x2026;in",{"_index":3163,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x56b4;&#x683c;&#x6a21;&#x5f0f",{"_index":1324,"title":{},"body":{"core.html#this":{}}}],["x56b4;&#x683c;&#x6a21;&#x5f0f;&#x4e0b",{"_index":1329,"title":{},"body":{"core.html#this":{}}}],["x56b4;&#x683c;&#x76f8;&#x7b49",{"_index":1101,"title":{"core.html#嚴格相等-寬鬆相等":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x56de;&#x4f86;&#xff0c;&#x56de;&#x50b3;&#x7684;&#x662f;&#x7d81;&#x5b9a",{"_index":1872,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x56de;&#x50b3;&#x300c;key&#x300d",{"_index":3166,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x56de;&#x50b3;&#x300c;key&#x300d;&#xff0c;&#x4e14;&#x6703;&#x8b80;&#x53d6;&#x5230;&#x9663;&#x5217;&#x65b0;&#x589e;&#x7684;&#x5c6c;&#x6027;&#x540d;&#x7a31",{"_index":3173,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x56de;&#x50b3;&#x300c;value&#x300d",{"_index":3167,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x56de;&#x50b3;&#x5931;&#x6557",{"_index":2223,"title":{},"body":{"api/promise.html#Promise":{}}}],["x56de;&#x50b3;&#x6b63;&#x78ba",{"_index":2222,"title":{},"body":{"api/promise.html#Promise":{}}}],["x56de;&#x50b3;&#x7b2c;&#x4e00;&#x500b;&#x6eff;&#x8db3;&#x6240;&#x63d0;&#x4f9b;&#x4e4b;&#x6e2c;&#x8a66;&#x51fd;&#x5f0f;&#x7684;&#x5143;&#x7d20;&#x503c;&#x3002;&#x5426;&#x5247;&#x56de;&#x50b3",{"_index":2472,"title":{},"body":{"array/array_methods.html#find":{}}}],["x56de;&#x547c;&#x51fd;&#x5f0f",{"_index":1913,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x56e0;&#x4e3a;sum&#x662f;&#x5e38;&#x89c4;&#x51fd;&#x6570;&#xff0c;&#x6240;&#x4ee5;&#x5728;&#x8abf;&#x7528",{"_index":337,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x56e0;&#x70ba",{"_index":1986,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x56e0;&#x70ba;&#x4ed6;&#x5011;&#x6839;&#x672c;&#x662f;&#x540c;&#x4e00;&#x500b;&#x7269;&#x4ef6;&#xff0c;&#x9019;&#x5c31;&#x662f;&#x6240;&#x8b02;&#x7684",{"_index":502,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x56e0;&#x70ba;&#x51fd;&#x5f0f;&#x5728;&#x57f7;&#x884c;&#x6642;&#xff0c;&#x8b8a;&#x6578;&#x9084;&#x6c92;&#x6709;&#x88ab;&#x8ce6;&#x4e88;&#x503c",{"_index":1016,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x56e0;&#x70ba;&#x5b83;&#x672c;&#x8cea;&#x5c31;&#x662f;undefin",{"_index":1334,"title":{},"body":{"core.html#this":{}}}],["x56e0;&#x70ba;&#x5c0d;&#x6211;&#x5011;&#x4f86;&#x8aaa;&#xff0c;&#x6211;&#x5011;&#x5be6;&#x969b;&#x662f;&#x5728;&#x8a2a;&#x554f",{"_index":2136,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x56e0;&#x70ba;&#x6d6e;&#x9ede;&#x6578;&#x96bb;&#x6709;52&#x4f4d;&#x6709;&#x6548;&#x6578;&#x5b57;&#xff0c;&#x5f9e;&#x7b2c;53&#x4f4d;&#x958b;&#x59cb;&#xff0c;&#x5c31;&#x820d;&#x5165;&#x4e86;&#x3002;&#x9019;&#x6a23;&#x5c31;&#x9020;&#x6210;&#x4e86;&#x201c;&#x6d6e;&#x9ede;&#x6578;&#x7cbe;&#x5ea6;&#x640d;&#x5931;&#x201d;&#x554f;&#x984c;&#x3002",{"_index":1985,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x56e0;&#x70ba;&#x7570;&#x6b65;&#x51fd;&#x6578;&#x5fc5;&#x9808;&#x7b49;&#x4e3b;&#x9032;&#x7a0b;&#x904b;&#x884c;&#x5b8c;&#x7562;&#x624d;&#x6703;&#x904b;&#x884c;&#xff0c;settimeout()&#x5167;&#x90e8;&#x56de;&#x8abf;&#x904b;&#x884c;&#x7684;&#x6642;&#x5019;&#xff0c;&#x4e3b;&#x9032;&#x7a0b;&#x5df2;&#x7d93;&#x904b;&#x884c;&#x5b8c;&#x7562;&#x4e86;&#xff0c;&#x6b64;&#x6642;i=5&#xff0c;&#x6240;&#x4ee5;&#x8f38;&#x51fa;5&#x3002",{"_index":416,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x56e0;&#x70ba;&#x8a9e;&#x5f59;&#x4e0a;&#x80fd;&#x5920;&#x5f15;&#x7528;self&#x8b8a;&#x6578;&#xff08;&#x540c;&#x500b;&#x584a;&#x4f5c;&#x7528;&#x57df;&#xff09",{"_index":2813,"title":{},"body":{"global/function.html#bind":{}}}],["x56e0;&#x70ba;object.assign&#x8ddf;&#x6211;&#x5011;&#x624b;&#x52d5;&#x8907;&#x88fd;&#x7684;&#x6548;&#x679c;&#x76f8;&#x540c",{"_index":516,"title":{},"body":{"copy.html#Object-assign":{}}}],["x570b;&#x969b;&#x6a19;&#x6e96",{"_index":2727,"title":{},"body":{"global/date.html#Date-prototype-toISOString":{}}}],["x5716;&#x89e3",{"_index":2966,"title":{},"body":{"http/caching.html#References":{}}}],["x5718;&#x968a",{"_index":1595,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x5728",{"_index":1014,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x5728;&#x4e00;&#x500b;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#x4e2d;&#x5b9a;&#x7fa9;&#x53e6;&#x4e00;&#x500b;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#xff0c;&#x53ef;&#x4ee5;&#x5e6b;&#x52a9;&#x6211;&#x5011;&#x628a;&#x8907;&#x96dc;&#x7684;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#x62c6;&#x5206;&#x6210;&#x66f4;&#x5c0f;&#x7684;&#xff0c;&#x53ef;&#x91cd;&#x7528;&#x7684;&#x788e;&#x7247;&#x3002",{"_index":2660,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5728;&#x4e8c;&#x9032;&#x88fd;&#x8868;&#x793a;&#x70ba",{"_index":1989,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5728;&#x5275;&#x9020;&#x74b0;&#x5883;&#x628a;&#x8a18;&#x61b6;&#x9ad4;&#x7a7a;&#x9593;&#x6e96;&#x5099;&#x597d;&#xff0c;&#x9019;&#x500b;&#x6d41;&#x7a0b;&#x7a31;&#x70ba",{"_index":993,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5728;&#x5275;&#x9020;&#x968e;&#x6bb5;&#x5c31;&#x6703",{"_index":1001,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5728;&#x539f;&#x6709;&#x968a;&#x5217;&#x7684;&#x57fa;&#x790e;&#x4e0a;&#x64f4;&#x5145;&#x4e86;&#xff1a;&#x968a;&#x982d;&#x3001;&#x968a;&#x5c3e;&#x90fd;&#x53ef;&#x4ee5;&#x9032;&#x968a;&#x51fa;&#x968a",{"_index":3298,"title":{},"body":{"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["x5728;&#x539f;&#x672c;&#x7684;&#x9663;&#x5217;&#xff0c;&#x65b0;&#x589e;&#x4e00;&#x500b;&#x5c6c;&#x6027",{"_index":3168,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x5728;&#x5927;&#x90e8;&#x5206;&#x60c5;&#x6cc1;&#x4e0b;&#xff0c;&#x958b;&#x767c;&#x8005;&#x7fd2;&#x6163;&#x50c5;&#x4f7f;&#x7528",{"_index":2238,"title":{},"body":{"api/promise.html#Promise":{}}}],["x5728;&#x67d0;&#x500b;&#x7cbe;&#x5ea6;&#x9ede;&#x76f4;&#x63a5;&#x6368;&#x68c4",{"_index":2001,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5728;&#x6bcf;&#x4e00;&#x6b21;&#x8fed;&#x4ee3;&#x7684;&#x4f7f;&#x7528;&#x4e2d;&#x90fd;&#x6703;&#x7522;&#x751f;&#x526f;&#x4f5c;&#x7528;&#xff0c;&#x56e0;&#x6b64",{"_index":2498,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x5728;&#x6bcf;&#x500b;&#x57f7;&#x884c;&#x74b0;&#x5883;&#x5b58;&#x5728",{"_index":1293,"title":{},"body":{"core.html#this":{}}}],["x5728;&#x7acb;&#x5373;&#x51fd;&#x5f0f;&#x524d;&#x6216;&#x5f8c;&#x52a0;&#x5206;&#x865f",{"_index":1267,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x5728;&#x8fed;&#x4ee3",{"_index":3151,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x5728;&#x9019;&#x4e9b;&#x60c5;&#x6cc1;&#x4e0b;&#xff0c;&#x6211;&#x5011;&#x53ef;&#x4ee5;&#x8fd4;&#x56d",{"_index":2682,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x57f7;&#x884c",{"_index":330,"title":{},"body":{"arrowFunction.html#Arrow-Function":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#const":{}}}],["x57f7;&#x884c;&#x51fd;&#x5f0f;&#x7684;&#x7d50;&#x679c",{"_index":1851,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x57f7;&#x884c;&#x6642;&#x76f4;&#x63a5;&#x628a;&#x51fd;&#x6578;&#x53d6;&#x51fa;&#x4f86",{"_index":1850,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x57f7;&#x884c;&#x7269;&#x4ef6;&#x7684;&#x51fd;&#x5f0f",{"_index":1158,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x57f7;&#x884c;&#x932f;&#x8aa4",{"_index":1067,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x57f7;&#x884c;&#x9589;&#x5305;&#x5167;&#x51fd;&#x5f0f;&#x4e5f;&#x662f",{"_index":1307,"title":{},"body":{"core.html#this":{}}}],["x57f7;&#x884c;&#x968e;&#x6bb5",{"_index":999,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x57f7;&#x884c;&#x968e;&#x6bb5;&#x624d;&#x6703;&#x8ce6;&#x4e88;&#x78ba;&#x7acb;&#x578b;&#x5225",{"_index":1070,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x57f7;&#x884c;&#x968e;&#x6bb5;&#x624d;&#x78ba;&#x8a8d;&#x578b;&#x5225",{"_index":1072,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x57fa;&#x672c;&#x578b;&#x5225;&#x662f;&#x50b3",{"_index":496,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x5916;&#x5c64;&#x5c0f;&#x62ec;&#x865f;&#x5305;&#x8d77;&#x4f86",{"_index":1045,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{}}}],["x5916;&#x90e8;&#x7121;&#x6cd5;&#x5b58;&#x53d6",{"_index":3050,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x591a;&#x4f7f;&#x7528;&#x5167;&#x5b58;&#x3001;&#x7de9;&#x5b58;&#x6216;&#x8005;&#x5176;&#x4ed6;&#x65b9;&#x6cd5",{"_index":1670,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x591a;&#x6578;&#x6642;&#x5019;&#x4e00;&#x822c;&#x51fd;&#x6578;&#x7121;&#x7570;&#xff0c;&#x4f46;&#x662f;&#x6700;&#x5927;&#x7684;&#x5dee;&#x5225;&#x5728;&#x65bc",{"_index":2798,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x591a;&#x9805;&#x5f0f;&#x6642;&#x9593",{"_index":3294,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x5927;&#x578b;&#x6846;&#x67b6;&#x4e0b",{"_index":1270,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x5927;&#x90e8;&#x5206;session&#x6a5f;&#x5236;&#x90fd;&#x4f7f;&#x7528;&#x6703;&#x8a71;cookie&#x4f86;&#x4fdd;&#x5b58;sess",{"_index":2173,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5931;&#x6557;&#x7684;&#x884c;&#x70ba;&#x4e00;&#x5f8b;&#x4ea4;&#x7d66;&#x4e86",{"_index":2241,"title":{},"body":{"api/promise.html#Promise":{}}}],["x597d;&#x6d88;&#x606f;&#x662f;&#x5728",{"_index":1591,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x5982;&#x4f55;&#x5feb;&#x901f;&#x5c07;&#x4e00;&#x500b;&#x5b57;&#x7b26;&#x4e32;&#x6578;&#x7d44;&#x8f49;&#x5316;&#x70ba;&#x6578;&#x5b57;&#x985e;&#x578b;&#x7684;&#x6578;&#x7d44",{"_index":2520,"title":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}},"body":{}}],["x5982;&#x540c;&#x51fd;&#x5f0f;&#x8868;&#x9054;&#x5f0f",{"_index":1248,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x5982;&#x679c",{"_index":1135,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x5982;&#x679c;&#x4e0d;&#x662f",{"_index":2250,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x5982;&#x679c;&#x4f60;&#x53ea;&#x662f;&#x5c0d;&#x6578;&#x5b57;&#x9032;&#x884c;&#x904d;&#x6b77;&#x6642;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":2501,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x5982;&#x679c;&#x4f60;&#x9700;&#x8981;&#x8fed;&#x4ee3;&#x4e00;&#x500b;&#x9663;&#x5217;&#xff0c;&#x4f7f;&#x5176;&#x672c;&#x8eab;&#x767c;&#x751f;&#x8b8a;&#x5316;&#x4e14;&#x4e0d;&#x9700;&#x8981;&#x8fd4;&#x56de;&#x4e00;&#x500b;&#x65b0;&#x9663;&#x5217;&#x6642;&#xff0c;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":2500,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x5982;&#x679c;&#x5169;&#x500b;&#x55ae;&#x8a5e;&#x9593;&#x6709;&#x591a;&#x9918;&#x7684;&#x7a7a;&#x683c;&#xff0c;&#x5c07;&#x53cd;&#x8f49;&#x5f8c;&#x55ae;&#x8a5e;&#x9593;&#x7684;&#x7a7a;&#x683c;&#x6e1b;&#x5c11;&#x5230;&#x53ea;&#x542b;&#x4e00;&#x500b;&#x3002",{"_index":3306,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x5982;&#x679c;&#x55ae;&#x5c31;&#x5be6;&#x73fe;&#x529f;&#x80fd;&#xff0c;cookie&#x8207;session&#x5f7c;&#x6b64;&#x4e4b;&#x9593;&#x662f;&#x53ef;&#x4ee5;&#x4e92;&#x63db;&#x7684;(&#x6307;&#x7684;&#x662f;&#x4f60;&#x53ef;&#x4ee5;&#x628a;&#x8cc7;&#x6599;&#x5b58;&#x653e;&#x5728;session&#x6216;&#x662f;cookie&#xff0c;&#x4e26;&#x4e0d;&#x662f;&#x6307;session&#x53ef;&#x4ee5;&#x88ab;&#x653e;&#x5728;client&#x7aef;&#x7576;cookie&#x4f7f;&#x7528;)&#x3002;&#x4f46;&#x662f;cookie&#x5728;&#x6700;&#x55ae;&#x7d14;&#x7684;&#x60c5;&#x6cc1;&#x88e1;&#xff0c;&#x662f;&#x6709;&#x5b89;&#x5168;&#x6027;&#x7684;&#x554f;&#x984c;(&#x8cc7;&#x6599;&#x5728;client&#x7aef;)&#x3002;&#x6240;&#x4ee5;&#x8003;&#x91cf;&#x5230;&#x9019;&#x9ede;&#xff0c;&#x5927;&#x90e8;&#x5206;&#x90fd;&#x6703;&#x9078;&#x64c7;session&#x3002;&#x4f46;&#x662f;&#x6b63;&#x5982;cookie&#x662f;&#x4e00;&#x500b;&#x5916;&#x52a0;&#x7684;&#x529f;&#x80fd;&#xff0c;session&#x4e5f;&#x4e0d;&#x5c6c;&#x65bc;http&#x5354;&#x5b9a;&#x3002;&#x53ea;&#x8981;&#x662f;&#x5916;&#x52a0;&#x529f;&#x80fd;&#xff0c;&#x5c31;&#x5fc5;&#x9808;&#x984d;&#x5916;&#x5beb;&#x7a0b;&#x5f0f;&#x5be6;&#x73fe;&#x3002",{"_index":2179,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5982;&#x679c;&#x6211;&#x5011;&#x4f7f;&#x7528;&#x7b2c;&#x4e00;&#x65b9;cookie&#xff0c;&#x6703;&#x70ba;&#x57df;&#x540d;a&#x5efa;&#x7acb;&#x4e00;&#x500b;cookie&#xff0c;&#x70ba;&#x57df;&#x540d;b&#x518d;&#x5efa;&#x7acb;&#x4e00;&#x500b;cookie&#xff0c;&#x4ed6;&#x5011;&#x53ef;&#x4ee5;&#x95dc;&#x806f;&#x5404;&#x81ea;&#x57df;&#x540d;&#x4e0b;&#x7db2;&#x9801;&#x4e0a;&#x7684;&#x884c;&#x70ba;&#xff0c;&#x4f46;&#x662f;&#x7121;&#x6cd5;&#x95dc;&#x806f;&#x8d77;&#x4f86;&#x3002",{"_index":2140,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5982;&#x679c;&#x6587;&#x4ef6;&#x7684;&#x4fee;&#x6539;&#x983b;&#x7387;&#x5728;&#x79d2;&#x7d1a;&#x4ee5;&#x4e0b;&#xff0c;last",{"_index":2963,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x5982;&#x679c;&#x6587;&#x4ef6;&#x88ab;&#x4fee;&#x6539;&#x4e86;&#xff0c;&#x4f46;&#x662f;&#x5167;&#x5bb9;&#x6c92;&#x6709;&#x4efb;&#x4f55;&#x8b8a;&#x5316;&#x7684;&#x6642;&#x5019;&#xff0c;last",{"_index":2965,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x5982;&#x679c;&#x662f",{"_index":2246,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x5982;&#x679c;&#x6f14;&#x7b97;&#x6cd5;&#x4e2d;&#x5305;&#x542b;&#x5de2;&#x72c0;&#x7684;&#x8ff4;&#x5708;&#xff0c;&#x5247;&#x57fa;&#x672c;&#x8a9e;&#x53e5;&#x901a;&#x5e38;&#x662f;&#x6700;&#x5167;&#x5c64;&#x7684;&#x8ff4;&#x5708;&#x9ad4;&#xff0c;&#x5982;&#x679c;&#x6f14;&#x7b97;&#x6cd5;&#x4e2d;&#x5305;&#x542b;&#x4e26;&#x5217;&#x7684;&#x8ff4;&#x5708;&#xff0c;&#x5247;&#x5c07;&#x4e26;&#x5217;&#x8ff4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x76f8;&#x52a0;&#x3002;&#x4f8b;&#x5982;&#xff1a",{"_index":3282,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x5982;&#x679c;&#x700f;&#x89bd;&#x5668;&#x4e0d;&#x652f;&#x63f4",{"_index":1370,"title":{},"body":{"core.html#繼承":{}}}],["x5982;&#x679c;&#x8981;&#x4f7f;&#x7528",{"_index":1442,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x5982;&#x679c;&#x9084;&#x662f;&#x8a2a;&#x554f",{"_index":2129,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5b57;&#x4e32;&#x900f;&#x904e;parseint",{"_index":1900,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x5b57;&#x4e32;1",{"_index":1105,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x5b58;&#x503c;&#x7684;&#x65b9;&#x6cd5",{"_index":1391,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5b58;&#x653e;&#x5728;&#x5167;&#x5b58;&#x4e2d;)&#xff0c;&#x5b58;&#x653e;&#x7684;&#x4f4d;&#x7f6e;&#x662f;&#x7531;&#x700f;&#x89bd;&#x5668;&#x63a7;&#x5236;&#x7684;&#x3002",{"_index":2875,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x5b58;&#x653e;&#x5728;&#x786c;&#x76e4;&#x4e2d;)&#x548c",{"_index":2874,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x5b83;&#x5728;javascript",{"_index":1050,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x5b83;&#x8868;&#x793a;&#x4e86;&#x300c;&#x9762;&#x5411;&#x3001;&#x9023;&#x63a5;&#x300d;&#x548c;/&#x6216;&#x300c;&#x4fdd;&#x6301;&#x72c0;&#x614b;&#x300d;&#x9019;&#x6a23;&#x5169;&#x500b;&#x7570;&#x8b70",{"_index":2152,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5b89;&#x88dd;&#x6559;&#x5b78;&#xff1a",{"_index":1440,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x5b8c;&#x5168;&#x7d81;&#x5b9a;&#x5728;&#x8a9e;&#x5f59;&#x4e0a;&#x7684;&#x4f4d;&#x7f6e;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#x5728",{"_index":2801,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x5b9a;&#x7fa9;&#x5c0d;&#x8c61;&#x4e0a;&#x7684;&#x65b9;&#x6cd5",{"_index":325,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x5b9e;&#x4f8b;&#x4f5c;&#x4e3a",{"_index":1405,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5ba3;&#x544a",{"_index":1080,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x5bb9;&#x6613;&#x51fa;&#x932f;&#x7684;&#x5730;&#x65b9",{"_index":1059,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x5be6;&#x73fe;&#x975e;&#x540c;&#x6b65",{"_index":1022,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x5be6;&#x969b;&#x57f7;&#x884c;&#x5728;&#x9019",{"_index":1274,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["x5be6;&#x969b;&#x904b;&#x4f5c;&#x62c6;&#x89e3",{"_index":1013,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5be6;&#x9ad4",{"_index":1351,"title":{},"body":{"core.html#繼承":{}}}],["x5beb;&#x6cd5;&#xff0c;&#x5982;&#x679c;&#x4ee5;&#x5f8c;&#x6709;&#x4ec0;&#x9ebc;&#x689d;&#x4ef6;&#x6539;&#x4e86;&#xff0c;&#x76f4;&#x63a5;&#x6539",{"_index":3127,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x5bec;&#x9b06;&#x76f8;&#x7b49",{"_index":1102,"title":{"core.html#嚴格相等-寬鬆相等":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x5bf9;&#x8c61;&#x4f20;&#x5165",{"_index":1404,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5c01;&#x88dd",{"_index":1382,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5c06;&#x904d;&#x5386;&#x6b64;&#x5bf9;&#x8c61;&#x6240;&#x6709;&#x7684;&#x5c5e;&#x6027;&#xff0c;&#x5e76;&#x4f7f;&#x7528",{"_index":1407,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5c07;&#x5b83;&#x5011;&#x5206;&#x89e3;&#x6210;&#x591a;&#x500b;&#x4e0d;&#x540c;&#x7684;&#x5de5;&#x5ee0;&#x901a;&#x5e38;&#x662f;&#x6709;&#x5e6b;&#x52a9;&#x7684;&#xff0c;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x5982;&#x4e0b;&#x7de8;&#x5beb;&#x3002",{"_index":2686,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5c07;&#x5de5;&#x5ee0;&#x50b3;&#x905e;&#x7d66;&#x9ad8;&#x968e;&#x51fd;&#x6578;&#xff0c;&#x9019;&#x5c07;&#x7d66;&#x6211;&#x5011;&#x5e36;&#x4f86;&#x5de8;&#x5927;&#x7684;&#x63a7;&#x5236;&#x529b;&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x6211;&#x5011;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x9019;&#x500b;&#x6982;&#x5ff5;&#x4f86;&#x5275;&#x5efa;&#x4e00;&#x500b;&#x589e;&#x5f37;&#x7684;&#x5c0d;&#x8c61;&#x3002",{"_index":2698,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5c07;&#x6703;&#x88ab;&#x7f6e;&#x63db;&#x6210;&#x5168;&#x57df;&#x8b8a;&#x6578",{"_index":1323,"title":{},"body":{"core.html#this":{}}}],["x5c07;&#x6bcf;&#x4e00;&#x500b;&#x6578;&#x5b57;&#x8f49;&#x63db;&#x70ba;&#x5b57;&#x7b26;&#x4e32;&#x7136;&#x5f8c;&#x7d71;&#x8a08",{"_index":3183,"title":{},"body":{"string/split.html#split":{}}}],["x5c07;&#x8fd4;&#x56de",{"_index":2528,"title":{},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x5c0d;&#x4e00;&#x500b;&#x9663;&#x5217;&#x7684;&#x6240;&#x6709;&#x5143;&#x7d20;&#x9032;&#x884c;&#x6392;&#x5e8f;&#xff0c;&#x4e26;&#x56de;&#x50b3;&#x6b64;&#x9663;&#x5217",{"_index":2473,"title":{},"body":{"array/array_methods.html#sort":{}}}],["x5c0d;&#x5143;&#x7d20;&#x91cd;&#x65b0;&#x7d44;&#x88dd;&#xff0c;&#x751f;&#x6210;&#x65b0;&#x9663;&#x5217",{"_index":2314,"title":{},"body":{"array/map.html#map":{},"array/array_methods.html#map":{}}}],["x5c0d;&#x8c61",{"_index":329,"title":{},"body":{"arrowFunction.html#Arrow-Function":{},"operators/precedence.html#運算符比-運算符高":{}}}],["x5c0d;&#x8c61;&#x53ef;&#x4ee5;&#x7528",{"_index":2666,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5c0f;&#x62ec;&#x865f;&#x53ef;&#x4ee5;&#x79fb;&#x5230;&#x5916;&#x5c64",{"_index":1263,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x5c0f;&#x6578",{"_index":1972,"title":{},"body":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x5c0f;&#x6578;&#x7684;&#x7b97;&#x6cd5;&#xff0c;&#x662f;&#x4e58;2",{"_index":1992,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5c31;&#x662f;&#x7269;&#x4ef6",{"_index":1173,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x5c31;&#x662f;&#x7c21;&#x6613;&#x547c;&#x53eb",{"_index":1306,"title":{},"body":{"core.html#this":{}}}],["x5c31;&#x6703;&#x505a;&#x539f;&#x578b;&#x4e0a;&#x7684;&#x65b9;&#x6cd5",{"_index":1341,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x5c31;&#x80fd;&#x4f7f;&#x7528",{"_index":2220,"title":{},"body":{"api/promise.html#Promise":{}}}],["x5c3e;&#x6578",{"_index":1983,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5c5e;&#x6027;&#xff0c;&#x811a;&#x672c;&#x5c31;&#x4f1a;&#x5f02;&#x6b65;&#x52a0;&#x8f7d;&#x3002;&#x6e32;&#x67d3;&#x5f15;&#x64ce;&#x9047;&#x5230;&#x8fd9;&#x4e00;&#x884c;&#x547d;&#x4ee4;&#xff0c;&#x5c31;&#x4f1a;&#x5f00;&#x59cb;&#x4e0b;&#x8f7d;&#x5916;&#x90e8;&#x811a;&#x672c;&#xff0c;&#x4f46;&#x4e0d;&#x4f1a;&#x7b49;&#x5b83;&#x4e0b;&#x8f7d;&#x548c;&#x6267;&#x884c",{"_index":303,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["x5c6c;&#x6027",{"_index":1161,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#屬性特徵":{}}}],["x5c6c;&#x6027;&#x3002",{"_index":2926,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x5c6c;&#x6027;&#x4e2d;&#x662f;&#x6700;&#x4f4e;&#x7684;&#x3002",{"_index":2884,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x5c6c;&#x6027;&#x5171;&#x540c;&#x4f86;&#x63a7;&#x5236;&#x3002",{"_index":2877,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x5c6c;&#x6027;&#x7279;&#x5fb5",{"_index":1372,"title":{"core.html#屬性特徵":{}},"body":{}}],["x5c6c;&#x6027;&#xff0c;&#x8abf;&#x6574;&#x5c6c;&#x6027;&#x7684;&#x7279;&#x5fb5",{"_index":1373,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5de5;&#x5ee0;&#x5141;&#x8a31;&#x6211;&#x5011;&#x5f9e;&#x8a08;&#x7b97;&#x4e2d;&#x5206;&#x96e2;&#x6211;&#x5011;&#x7684;&#x6578;&#x64da;&#x3002",{"_index":2695,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5de5;&#x5ee0;&#x9f13;&#x52f5;&#x6211;&#x5011;&#x7528;&#x539f;&#x59cb;&#x6578;&#x64da;&#x4f86;&#x6a21;&#x64ec;&#x8907;&#x96dc;&#x548c;&#x7570;&#x6b65;&#x6578;&#x64da;&#xff0c;&#x539f;&#x59cb;&#x6578;&#x64da;&#x5177;&#x6709;&#x7d44;&#x5408;&#x7684;&#x81ea;&#x7136;&#x80fd;&#x529b;&#xff0c;&#x800c;&#x4e0d;&#x5f37;&#x8feb;&#x6211;&#x5011;&#x53bb;&#x505a;&#x4e00;&#x4e9b;&#x9ad8;&#x7d1a;&#x62bd;&#x8c61;&#x3002;&#x7576;&#x6211;&#x5011;&#x5805;&#x6301;&#x7c21;&#x55ae;&#x6642;&#xff0c;javascript&#x66f4;&#x751c;&#x871c;&#xff01",{"_index":2704,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5de6;&#x53f3;&#x5169;&#x908a;&#x653e;&#x7684;&#x662f;&#x8868;&#x9054;&#x5f0f",{"_index":1137,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x5de6;&#x79fb;3",{"_index":391,"title":{},"body":{"closures.html#傳多個函數":{}}}],["x5dee;&#x5225;&#x5728;&#x4ee5;&#x9663;&#x5217;&#x65b9;&#x5f0f;&#x5448;&#x73f",{"_index":1312,"title":{},"body":{"core.html#this":{}}}],["x5df2;&#x53ef;&#x4ee5;&#x904b;&#x884c",{"_index":1007,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5df2;&#x5efa;&#x69cb;&#x5f0f;&#x65b9;&#x5f0f;&#x5448;&#x73f",{"_index":1320,"title":{},"body":{"core.html#this":{}}}],["x5e03;&#x6797;&#x548c;&#x5b57;&#x4e32;&#x8f49;&#x70ba;&#x6578;&#x503c",{"_index":1108,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x5e38;&#x898b;&#x554f;&#x984c",{"_index":1450,"title":{},"body":{"core.html#箭頭函數":{}}}],["x5e38;&#x898b;&#x7684;&#x6f14;&#x7b97;&#x6cd5;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x7531;&#x5c0f;&#x5230;&#x5927;&#x4f9d;&#x6b21;&#x70ba;&#xff1a",{"_index":3291,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x5e38;&#x898f;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f",{"_index":334,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x5e73;&#x5747;&#x6578",{"_index":1456,"title":{},"body":{"core.html#箭頭函數":{}}}],["x5ef6;&#x4f38;&#x7684;&#x4e09;&#x7a2e;&#x7269;&#x4ef6;&#x65b9;&#x6cd5",{"_index":1380,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5efa;&#x69cb;&#x521d;&#x59cb;&#x5316",{"_index":1398,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5efa;&#x69cb;&#x5f0f",{"_index":1079,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x5efa;&#x69cb;&#x5f0f;&#x5ba3;&#x544a;&#x7684;&#x975e;&#x539f;&#x59cb;&#x578b;&#x5225",{"_index":1081,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x5efa;&#x8b70;&#x90fd;&#x4f7f;&#x7528;&#x8907;&#x6578",{"_index":116,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x5f37;&#x7de9;&#x5b58",{"_index":2868,"title":{"http/caching.html#強緩存":{}},"body":{}}],["x5f37;&#x7de9;&#x5b58;&#x8d85;&#x6642;&#x6642;&#x9593;&#x70ba;10&#x79d2",{"_index":2904,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x5f53;&#x4f60;&#x628a;&#x4e00;&#x4e2a;&#x666e;&#x901a;&#x7684",{"_index":1403,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5f88;&#x91cd;&#x8981;&#x3002",{"_index":3150,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x5f8c;&#x65b9;&#x662f;&#x63d2;&#x5165;&#x4e00;&#x500b;callback&#x51fd;&#x5f0f",{"_index":1308,"title":{},"body":{"core.html#this":{}}}],["x5f8c;&#x7684",{"_index":1873,"title":{},"body":{"this.html#bind-apply-call":{},"global/function.html#cab-call-apply-vs-bind":{}}}],["x5f8c;&#x7aef;&#x6e32;&#x67d3;&#xff0c;&#x6578;&#x64da;&#x76f4;&#x63a5;&#x8f38;&#x51fa;&#x5230",{"_index":1693,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x5f8c;&#x7e8c;&#x7684;&#x503c;&#x8b8a;&#x66f4;&#xff0c;&#x539f;&#x672c;&#x7684;&#x503c;&#x4e5f;&#x6703;&#x8b8a;&#x66f4",{"_index":1225,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x5f8c;&#x7f6e;&#x905e;&#x589",{"_index":1601,"title":{},"body":{"operators.html#Increment":{}}}],["x5f8c;&#x7f6e;&#x905e;&#x589e;&#x662f;&#x5148;&#x8ce6;&#x503c;&#x5f8c;&#x8a08;&#x7b97;&#xff0c;&#x5982;&#xff1a",{"_index":1606,"title":{},"body":{"operators.html#Increment":{}}}],["x5f9e;&#x4e0a;&#x9762;&#x53ef;&#x4ee5;&#x770b;&#x51fa;&#xff0c;0.1&#x7684;&#x4e8c;&#x9032;&#x5236;&#x683c;&#x5f0f;&#x662f;&#xff1a;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662f;&#x4e00;&#x500b;&#x4e8c;&#x9032;&#x5236;&#x7121;&#x9650;&#x5faa;&#x74b0;&#x5c0f;&#x6578;&#xff0c;&#x4f46;&#x8a08;&#x7b97;&#x6a5f;&#x5167;&#x5b58;&#x6709;&#x9650;&#xff0c;&#x6211;&#x5011;&#x4e0d;&#x80fd;&#x7528;&#x5132;&#x5b58;&#x6240;&#x6709;&#x7684;&#x5c0f;&#x6578;&#x4f4d;&#x6578;&#x3002;&#x90a3;&#x9ebc;&#x5728;&#x7cbe;&#x5ea6;&#x8207;&#x5167;&#x5b58;&#x9593;&#x5982;&#x4f55;&#x53d6;&#x6368;&#x5462;&#xff1f",{"_index":1999,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5f9e;&#x5927;&#x5230;&#x5c0f;&#x6392;&#x5e8f",{"_index":2475,"title":{},"body":{"array/array_methods.html#sort":{}}}],["x5f9e;&#x5c0f;&#x5230;&#x5927;&#x6392;&#x5e8f",{"_index":2474,"title":{},"body":{"array/array_methods.html#sort":{}}}],["x5f9e;&#x5de6;&#x81f3;&#x53f3",{"_index":1099,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x5faa;&#x74b0;&#x57f7;&#x884c;&#x904e;&#x7a0b;&#x4e2d;&#xff0c;&#x5e7e;&#x4e4e;&#x540c;&#x6642;&#x8a2d;&#x7f6e;&#x4e86",{"_index":417,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x6027;&#x540d;&#x7a31;(key",{"_index":3155,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x6027;&#x80fd;&#x512a;&#x5316;&#x7684;&#x539f;&#x5247;&#x662f;&#x4ee5;&#x66f4;&#x597d;&#x7684;&#x7528;&#x6236;&#x9ad4;&#x9a57;&#x70ba;&#x6a19;&#x6e96;&#xff0c;&#x5177;&#x9ad4;&#x5c31;&#x662f;&#x5be6;&#x73fe;&#x4e0b;&#x9762;&#x7684;&#x76ee;&#x6a19;&#xff1a",{"_index":1669,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x61f6;&#x52a0;&#x8f09",{"_index":1697,"title":{"performance.html#懶加載":{}},"body":{}}],["x61f6;&#x52a0;&#x8f09;&#xff08;&#x5716;&#x7247;&#x61f6;&#x52a0;&#x8f09;&#x3001;&#x4e0b;&#x62c9;&#x52a0;&#x8f09;&#x66f4;&#x591a;&#xff09",{"_index":1686,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6211;&#x5011;&#x4f7f;&#x7528",{"_index":2690,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x6211;&#x5011;&#x53ef;&#x4ee5;&#x7528;&#x7d44;&#x5408;&#x6a21;&#x5f0f;&#x8868;&#x9054;&#x76f8;&#x540c;&#x7684;&#x610f;&#x601d;&#x3002",{"_index":2674,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x6216",{"_index":302,"title":{},"body":{"es6.html#Module-的加载实现":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"api/promise.html#Promise":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x6216;&#x7b49;&#x4ef7;&#x4e8",{"_index":2546,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x6216;&#x8005",{"_index":2673,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{},"http/caching.html#協商緩存":{}}}],["x6216;&#x8005;&#x5927;&#x65bc",{"_index":2526,"title":{},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x6216;&#x8005;&#x8b93",{"_index":428,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x6233;&#xff09",{"_index":1680,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6240;&#x4ee5;&#x4fee;&#x6539;obj2.body.a&#x6642;&#x4e5f;&#x6703;&#x4fee;&#x6539;&#x5230;&#x820a;&#x7684",{"_index":511,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x6240;&#x4ee5;&#x6211;&#x5011;&#x53ef;&#x4ee5;&#x60f3;&#x50cf",{"_index":2155,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x6240;&#x4ee5;&#x62ff;&#x5230;&#x4e86;self.nam",{"_index":2814,"title":{},"body":{"global/function.html#bind":{}}}],["x6240;&#x4ee5;&#x6700;&#x5f8c;&#x4e00;&#x7b46;&#x4e0d;&#x53ef;&#x591a;&#x4e86;&#x4e00;&#x500b;&#x9017;&#x865f",{"_index":1222,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x6240;&#x4ee5;&#x8aaa;&#x5982;&#x679c;&#x7576;&#x524d;&#x6b63;&#x5728;&#x904b;&#x884c;&#x7684;&#x4ee3;&#x78bc;&#x6c92;&#x6709;&#x904b;&#x884c;&#x5b8c;&#xff0c;&#x5373;&#x4f7f;&#x5ef6;&#x9072;&#x7684;&#x6642;&#x9593;&#x5df2;&#x7d93;&#x904e;&#x5b8c;&#xff0c",{"_index":434,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x6240;&#x4ee5;&#x9663;&#x5217;&#x4e5f;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x7269;&#x4ef6;&#x539f;&#x578b;&#x7684;&#x65b9;&#x6cd5",{"_index":1213,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x6240;&#x4ee5;2&#x4e0d;&#x6703;&#x5b58;&#x5728;nan",{"_index":1909,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x6240;&#x4ee5;obj2&#x6703;&#x9577;&#x5f97;&#x8ddf;obj1&#x4e00;&#x6a23",{"_index":514,"title":{},"body":{"copy.html#Object-assign":{}}}],["x6240;&#x5efa;&#x69cb;&#x7684;&#x578b;&#x5225;&#xff0c;&#x5728",{"_index":1084,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x6240;&#x6709",{"_index":1707,"title":{},"body":{"performance.html#懶加載":{}}}],["x6240;&#x89e3;&#x6c7a;&#x4e0d;&#x4e86;&#x7684;&#x554f;&#x984c;&#xff1a",{"_index":2962,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x6253;&#x7d66",{"_index":2030,"title":{},"body":{"variable.html#Hoisting":{}}}],["x627e;&#x4e0d;&#x5230;&#x5c31;&#x6703;undefin",{"_index":1844,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["x6280;&#x8853;&#x540d;&#x7a31;&#xff0c;&#x7528;&#x65bc;&#x53d6;&#x5f97;&#x9060;&#x7aef;&#x8cc7;&#x6599;&#xff1b",{"_index":2216,"title":{},"body":{"api/promise.html#Promise":{}}}],["x628a",{"_index":1356,"title":{},"body":{"core.html#繼承":{}}}],["x628a;&#x53e6;&#x4e00;&#x500b;&#x7acb;&#x5373;&#x51fd;&#x5f0f;&#x5b9a;&#x7fa9;&#x7684;&#x8b8a;&#x6578;&#x5370;&#x51fa;&#x4f86",{"_index":1269,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x628a;&#x6578;&#x64da;&#x63d2;&#x5165;&#x9663;&#x5217;&#x5c3e;&#x90e8",{"_index":2377,"title":{"array/array_insert.html#把數據插入陣列尾部":{}},"body":{}}],["x628a;&#x6578;&#x64da;&#x63d2;&#x5165;&#x9663;&#x5217;&#x6307;&#x5b9a;&#x4f4d;&#x7f6",{"_index":2381,"title":{"array/array_insert.html#把數據插入陣列指定位置":{}},"body":{}}],["x628a;&#x6578;&#x64da;&#x63d2;&#x5165;&#x9663;&#x5217;&#x982d;&#x90e8",{"_index":2380,"title":{"array/array_insert.html#把數據插入陣列頭部":{}},"body":{"array/array_insert.html#example":{}}}],["x628a;&#x8fd9;&#x4e9b;&#x5c5e;&#x6027;&#x5168;&#x90e8;&#x8f6c;&#x4e3a",{"_index":1408,"title":{},"body":{"core.html#屬性特徵":{}}}],["x62bd;&#x8c61;&#x7d50;&#x69cb;&#x6a39;ast(abstract",{"_index":982,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x62ec;&#x865f;&#x5167;&#x5c64;&#x518d;&#x88dc;&#x4e0a;&#x5c0f;&#x62ec;&#x865f",{"_index":1262,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x62fc;&#x63a5;&#x5169;&#x500b;&#x9663;&#x5217",{"_index":2388,"title":{"array/array_insert.html#拼接兩個陣列":{}},"body":{}}],["x62ff;&#x5230;&#x6b63;&#x78ba;&#x7684",{"_index":2794,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x6307;&#x5230;&#x4e0d;&#x4e00;&#x6a23;&#x7684;&#x4f4d;&#x7f6",{"_index":1449,"title":{},"body":{"core.html#箭頭函數":{}}}],["x6307;&#x5411",{"_index":1297,"title":{},"body":{"core.html#this":{}}}],["x6307;&#x5411;&#x662f;&#x4e0d;&#x540c;&#x7684",{"_index":1455,"title":{},"body":{"core.html#箭頭函數":{}}}],["x6307;&#x6578;&#x6642;&#x9593",{"_index":3296,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x6309;&#x503c;&#x50b3;&#x905e;&#xff08;pass",{"_index":449,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x63a5;&#x4e0b;&#x4f86;&#x9032;&#x5165",{"_index":2233,"title":{},"body":{"api/promise.html#Promise":{}}}],["x63a5;&#x6536",{"_index":1096,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x63a5;&#x8457;&#x628a;obj1&#x4e2d;&#x6240;&#x6709;&#x7684;&#x5c6c;&#x6027;&#x8907;&#x88fd;&#x904e;&#x53bb",{"_index":513,"title":{},"body":{"copy.html#Object-assign":{}}}],["x63d0;&#x4f9b;&#x93c8;&#x63a5",{"_index":138,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x63d0;&#x5347;&#xff08;hoisting&#xff09",{"_index":992,"title":{"core.html#提升（Hoisting）":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x63d0;&#x793a;&#xff1a",{"_index":425,"title":{},"body":{"asynchronous.html#setTimeout":{},"statements/for.html#for…of與for…in的差別":{}}}],["x63d2;&#x5165",{"_index":1717,"title":{"performance.html#合併-DOM-插入-createDocumentFragment":{}},"body":{}}],["x63d2;&#x5165;&#x6216;&#x522a;&#x9664;&#xff1a;&#x9032;&#x68e7;&#x8207;&#x51fa;&#x68e7;&#x7684;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x70ba",{"_index":3280,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x642d;&#x914d;&#x4f7f;&#x7528",{"_index":3162,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x642d;&#x914d;&#x5224;&#x65b7;&#x5f0f;&#x4e0d;&#x80fd;&#x76f4;&#x63a5;&#x63a5;&#x7bad;&#x982d;&#x51fd;&#x5f0f",{"_index":1452,"title":{},"body":{"core.html#箭頭函數":{}}}],["x64cd;&#x4f5c;&#x3002",{"_index":102,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x64cd;&#x4f5c;&#x662f;&#x975e;&#x5e38;&#x8017;&#x8cbb;&#x6027;&#x80fd;&#x7684;&#xff0c;&#x56e0;&#x6b64;&#x63d2;&#x5165;&#x591a;&#x500b;&#x6a19;&#x7c64;&#x6642;&#xff0c;&#x5148;&#x63d2;&#x5165",{"_index":1718,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x64cd;&#x4f5c;&#x6709;&#x4ec0;&#x9ebc;&#x5340;&#x5225;&#xff1f",{"_index":1603,"title":{},"body":{"operators.html#Increment":{}}}],["x64cd;&#x4f5c;&#xff0c;&#x591a;&#x500b;&#x64cd;&#x4f5c;&#x5118;&#x91cf;&#x5408;&#x4f75;&#x5728;&#x4e00;&#x8d77;&#x57f7;&#x884c;&#xff08",{"_index":1689,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x653e;&#x524d;&#x9762",{"_index":1008,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x653e;&#x524d;&#x9762;&#x53ef;&#x56e0;&#x70ba",{"_index":1005,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x653e;&#x524d;&#x9762;&#xff0c;j",{"_index":1684,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x653e;&#x5f8c;&#x9762",{"_index":1685,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6570;&#x5b57;&#x524d;&#x8865;&#x201c;0&#x201d;&#x7684;&#x4e94;&#x79cd;&#x65b9;&#x6cd5",{"_index":1544,"title":{},"body":{"num.html#補數字":{}}}],["x6574;&#x500b;&#x74b0;&#x5883;&#x4e0b;&#x7684;&#x6240;&#x6709;&#x4ee3;&#x78bc;&#x904b;&#x884c;&#x5b8c;&#x7562;&#x4e4b;&#x5f8c;&#x57f7;&#x884c",{"_index":437,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x6578;&#x5b57;&#x586b;&#x5145;9",{"_index":1549,"title":{},"body":{"num.html#補數字":{}}}],["x6578;&#x5b57;&#x88dc;0",{"_index":1545,"title":{},"body":{"num.html#補數字":{}}}],["x6578;&#x5b57;1",{"_index":1103,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x6578;&#x5b57;11&#x4e2d;&#x5305;&#x542b;&#x4e86;&#x5169;&#x500b;1,&#x6578;&#x5b57;20&#x4e2d;&#x4e0d;&#x5305;&#x542b;1,&#x6578;&#x5b57;1&#x5230;21&#x4e2d;&#x5171;&#x5305;&#x542b;&#x4e86;13&#x500b;1&#x3002",{"_index":3182,"title":{},"body":{"string/split.html#split":{}}}],["x6578;&#x64da;&#x7d50;&#x69cb;&#xff1a;&#x968a;&#x5217;&#xff08;queue&#xff09",{"_index":3272,"title":{"string/queue.html#數據結構：隊列（Queue）":{}},"body":{}}],["x6587;&#x4ef6;&#x4e0d;&#x6703;&#x8868;&#x660e;&#x9019;&#x8207",{"_index":1436,"title":{},"body":{"core.html#const":{}}}],["x6587;&#x4ef6;&#x7684;&#x6700;&#x5f8c;&#x4fee;&#x6539;&#x6642;&#x9593",{"_index":2944,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x6587;&#x6a94",{"_index":446,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x65b0;&#x589e",{"_index":278,"title":{},"body":{"event.html#代理":{}}}],["x65b0;&#x589e;&#x65b9;&#x6cd5;&#x5230;&#x539f;&#x578b;&#x93c8;&#x4e0a",{"_index":1215,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x65b0;&#x589e;foo&#x5c6c;&#x6027;&#x540d;&#x7a31",{"_index":3172,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x65b0;&#x7269;&#x4ef6;&#x8ddf;&#x539f;&#x7269;&#x4ef6;&#x4e0d;&#x5171;&#x7528;&#x8a18;&#x61b6;&#x9ad4",{"_index":507,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x65b0;&#x7684;&#x4e00;&#x884c;&#x4ee5",{"_index":1060,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x65b0;&#x7684;&#x4e00;&#x884c;&#x662f",{"_index":1056,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x65b9;&#x6cd5",{"_index":1300,"title":{},"body":{"core.html#this":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{}}}],["x65b9;&#x6cd5;&#x53ef;&#x4ee5;&#x85c9;&#x7531;&#x522a;&#x9664;&#x65e2;&#x6709;&#x5143;&#x7d20;&#x4e26;&#xff0f;&#x6216;&#x52a0;&#x5165;&#x65b0;&#x5143;&#x7d20;&#x4f86;&#x6539;&#x8b8a;&#x4e00;&#x500b;&#x9663;&#x5217;&#x7684;&#x5167;&#x5bb9",{"_index":2382,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["x65b9;&#x6cd5;&#x56de;&#x50b3;&#x7684;&#x662f;&#x7d81;&#x5b9a",{"_index":2797,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x65b9;&#x6cd5;&#x5c07;&#x4e00;&#x500b;&#x7d2f;&#x52a0;&#x5668;&#x53ca;&#x9663;&#x5217;&#x4e2d;&#x6bcf;&#x9805;&#x5143;&#x7d20;&#xff08;&#x7531;&#x5de6;&#x81f3;&#x53f3;&#xff09;&#x50b3;&#x5165;&#x56de;&#x547c;&#x51fd;&#x5f0f;&#xff0c;&#x5c07;&#x9663;&#x5217;&#x5316;&#x70ba;&#x55ae;&#x4e00;&#x503c;&#x3002",{"_index":2479,"title":{},"body":{"array/array_methods.html#reduce":{}}}],["x65b9;&#x6cd5;&#x6703;&#x547c;&#x53eb;&#x4e00;&#x500b;&#x4ee5",{"_index":2782,"title":{},"body":{"global/function.html#call、apply、bind":{}}}],["x65b9;&#x6cd5;&#x6703;&#x5c07;&#x9663;&#x5217;&#x4e2d;&#x7d22;&#x5f15;&#x7684;&#x7b2c;&#x4e00;&#x500b;&#x5230;&#x6700;&#x5f8c;&#x4e00;&#x500b;&#x7684;&#x6bcf;&#x500b;&#x4f4d;&#x7f6e;&#x5168;&#x90e8;&#x586b;&#x5165;&#x4e00;&#x500b;&#x975c;&#x614b;&#x7684;&#x503c;&#x3002",{"_index":2389,"title":{},"body":{"array/array_insert.html#fill":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x5c0d;&#x61c9",{"_index":101,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x6703;&#x5efa;&#x7acb;&#x4e00;&#x500b;&#x65b0;&#x51fd;&#x5f0f;&#x3002;&#x8a72;&#x51fd;&#x5f0f;&#x88ab;&#x547c;&#x53eb;&#x6642;&#xff0c;&#x6703;&#x5c07",{"_index":2785,"title":{},"body":{"global/function.html#call、apply、bind":{}}}],["x65e5;&#x671f",{"_index":2879,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x662f",{"_index":339,"title":{},"body":{"arrowFunction.html#Arrow-Function":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#屬性特徵":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"http/caching.html#強緩存":{},"statements/for.html#for…of與for…in的差別":{}}}],["x662f;&#x4e00;&#x500b;&#x5f88;&#x7279;&#x5225;&#x7684;&#x5b58;&#x5728;&#xff0c;&#x5b83;&#x662f;&#x53ef;&#x4ee5;&#x7576;&#x6210;&#x7269;&#x4ef6;&#x4f86;&#x4f7f;&#x7528;&#xff0c",{"_index":1231,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x662f;&#x4e00;&#x500b;&#x7279;&#x6b8a;&#x7684;&#x7269;&#x4ef6",{"_index":1235,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x662f;&#x4e00;&#x500b;&#x985e;&#x9663;&#x5217",{"_index":1276,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["x662f;&#x4e00;&#x7a2e;&#x6301;&#x4e45;&#x7db2;&#x8def;&#x5354;&#x5b9a;&#xff0c;&#x8b93;client&#x7aef;&#x8207;server&#x7aef;&#x53ef;&#x4ee5;&#x4f5c;&#x4e00;&#x7a2e;&#x5c0d;&#x8a71;&#xff0c;&#x4e26;&#x5c07;&#x5169;&#x7aef;&#x5efa;&#x7acb;&#x95dc;&#x9023;&#xff0c;&#x4fdd;&#x6301;&#x4f3a;&#x670d;&#x5668;&#x8207;client&#x53ef;&#x4ee5;&#x6301;&#x7e8c;&#x7684;&#x8207;server&#x4f5c;&#x4ea4;&#x8ac7;&#x3002",{"_index":2151,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x662f;&#x4e00;&#x7a2e;&#x7a0b;&#x5e8f;&#x89e3;&#x6790;&#x6280;&#x8853;&#xff0c",{"_index":1049,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x662f;&#x52d5;&#x8a5e;&#xff0c",{"_index":113,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x662f;&#x53c3;&#x8003;&#x4f4d;&#x5740",{"_index":1116,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x662f;&#x540c;&#x6b65;&#x7684",{"_index":1019,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x662f;&#x5426;&#x5f37;&#x7de9;&#x5b58;&#x7531",{"_index":2876,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x662f;&#x5426;&#x662f;&#x7a7a;&#x968a",{"_index":3275,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x662f;&#x56e0;&#x70ba;&#x7bad;&#x982d;&#x51fd;&#x6578;&#x6309;&#x8a5e;&#x6cd5",{"_index":327,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x662f;&#x5728;&#x8abf;&#x7528;&#x6642;&#x78ba;&#x5b9a;&#x7684;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x7531;&#x5c01;&#x9589;&#x7684;&#x4e0a;&#x4e0b;&#x6587;&#x6c7a;&#x5b9a;&#x7684",{"_index":336,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x662f;&#x5c6c;&#x65bc;&#x4e00;&#x500b;&#x900f;&#x904",{"_index":2215,"title":{},"body":{"api/promise.html#Promise":{}}}],["x662f;&#x600e;&#x9ebc;&#x8a2d;&#x8a08;&#x7684;&#x3002",{"_index":140,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x662f;&#x60a8;&#x8a2a;&#x554f;&#x904e;&#x7684;&#x7db2;&#x7ad9;&#x5275;&#x5efa;&#x7684;&#x6587;&#x4ef6;&#xff0c;&#x7528;&#x65bc;&#x5b58;&#x5132;&#x700f;&#x89bd;&#x4fe1;&#x606f;&#xff0c;&#x4f8b;&#x5982;&#x60a8;&#x7684;&#x7db2;&#x7ad9;&#x504f;&#x597d;&#x8a2d;&#x7f6e;&#x6216;&#x500b;&#x4eba;&#x8cc7;&#x6599;&#x4fe1;&#x606f;&#x3002",{"_index":2096,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["x662f;&#x6578;&#x503c;&#x6216;&#x70ba",{"_index":1132,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x662f;&#x6578;&#x7d44;&#x5f15;&#x7528",{"_index":340,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x662f;&#x7269;&#x4ef6;&#x578b;&#x5225",{"_index":1082,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x662f;&#x7531;&#x5730;&#x5740;&#x6b04;&#x4e2d;&#x5217;&#x51fa;&#x7684;&#x7db2;&#x7ad9;&#x57df;&#x8a2d;&#x7f6e;&#x7684",{"_index":2100,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["x662f;&#x7acb;&#x523b;&#x57f7;&#x884c",{"_index":1311,"title":{},"body":{"core.html#this":{}}}],["x662f;&#x7b2c;&#x4e00;&#x6b21;&#x57f7;&#x884c;&#x7684;&#x524d;&#x4e00;&#x500b;&#x503c",{"_index":1459,"title":{},"body":{"core.html#箭頭函數":{}}}],["x662f;&#x7de8;&#x7a0b;&#x6280;&#x8853;&#x4e2d;&#x5e38;&#x7528;&#x7684;&#x65b9;&#x6cd5;&#x3002",{"_index":2499,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x662f;&#x8868;&#x9054;&#x5f0f",{"_index":1095,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x662f;&#x89e3;&#x6c7a;&#x8fa6;&#x6cd5",{"_index":1066,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x662f;&#x8cd3;&#x8a9e;&#x3002",{"_index":114,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x662f;&#x900f;&#x904e;&#x5982;&#x793e;&#x7fa4;&#x7db2;&#x8def;&#x7b49;&#x7b2c;&#x4e09;&#x65b9;&#x7a0b;&#x5f0f;&#x5b89;&#x88dd;&#xff0c;&#x4e3b;&#x8981;&#x76ee;&#x7684;&#x70ba;&#x5728;&#x672c;&#x516c;&#x53f8;&#x7db2;&#x7ad9;&#x6574;&#x5408;&#x793e;&#x7fa4;&#x5a92;&#x9ad4;&#x5167;&#x5bb9;&#xff0c;&#x5982;&#x793e;&#x7fa4;&#x63d2;&#x4ef6",{"_index":2124,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x662f;&#x9663;&#x5217;&#x539f;&#x578b;&#x7684;&#x5c6c;&#x6027",{"_index":1206,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x662f;&#x985e;&#x9663;&#x5217;&#x6c92;&#x6709;&#x9663;&#x5217;&#x65b9;&#x6cd5",{"_index":1457,"title":{},"body":{"core.html#箭頭函數":{}}}],["x662f;es5&#x4e2d;&#x65b0;&#x589e;&#x7684;&#x4e00;&#x500b;&#x65b9;&#x6cd5;&#xff0c;&#x53ef;&#x4ee5;&#x6539;&#x8b8a;&#x51fd;&#x6578;&#x5167;&#x90e8;&#x7684;this&#x6307;&#x5411",{"_index":1883,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x6642",{"_index":338,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x6642;&#x9593;&#x6233;&#x5be6;&#x4f8b",{"_index":2701,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6",{"_index":3281,"title":{"string/queue.html#時間複雜度":{}},"body":{}}],["x6642;&#xff0c;&#x4f7f;&#x7528",{"_index":1133,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"statements/for.html#for…of與for…in的差別":{}}}],["x6642;&#xff0c;&#x5247;&#x76f4;&#x63a5;&#x5957;&#x7528",{"_index":1136,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x6642;&#xff0c;cooki",{"_index":2109,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x66ab;&#x505c;&#x6309;&#x9215",{"_index":1290,"title":{},"body":{"core.html#this":{}}}],["x66ab;&#x6642;&#x6027;&#x6b7b;&#x5340",{"_index":1429,"title":{},"body":{"core.html#const":{}}}],["x66f4;&#x56b4;&#x683c;&#xff0c;&#x4ed6;&#x5011;&#x5ba3;&#x7a31;&#x6211;&#x5011;&#x61c9;&#x8a72;&#x601d;&#x8003;&#x9019;&#x4e9b;&#x65b9;&#x6cd5;&#x5982;&#x4f55;&#x8655;&#x7406",{"_index":1598,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x66f4;&#x597d;&#x7684;&#x505a;&#x6cd5;&#x662f;&#xff0c;&#x9664;&#x4e86;&#x7b2c;&#x4e00;&#x7d1a;&#xff0c;&#x5176;&#x4ed6;&#x7d1a;&#x5225;&#x90fd;&#x7528;&#x67e5;&#x8a62;&#x5b57;&#x7b26;&#x4e32;&#x8868;&#x9054;&#x3002",{"_index":125,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x6700;&#x5927;&#x7684;&#x539f;&#x56e0;&#x9084;&#x662f;&#x56e0;&#x70ba",{"_index":2789,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x6700;&#x597d;&#x7684;&#x65b9;&#x5f0f;&#x662f;&#x5f9e;&#x51fd;&#x5f0f;&#x672c;&#x8eab;&#x7684;&#x539f;&#x578b;&#x5c6c;&#x6027;&#x4e0a;&#x53bb;&#x8abf;&#x6574",{"_index":1347,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x6703;&#x4f7f;&#x5176;&#x4e2d;&#x4e00;&#x908a;&#x7684;&#x985e;&#x578b;&#x9032;&#x884c;&#x5f37;&#x5236;&#x8f49;&#x63db;&#xff0c;&#x4f7f;&#x7b49;&#x865f;&#x5169;&#x908a;&#x7684;&#x985e;&#x578b;&#x90fd;&#x76f8;&#x7b49;&#x5f8c;&#x518d;&#x5c0d;&#x6578;&#x503c;&#x9032;&#x884c;&#x6bd4;&#x8f03;&#x3002",{"_index":1585,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x6703;&#x51fa;&#x73f",{"_index":1030,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x6703;&#x5c07;&#x539f;&#x672c;&#x7684;&#x7269;&#x4ef6;&#x8f49;&#x6210;&#x5b57;&#x4e32;&#x518d;&#x8f49;&#x56de;&#x4f86",{"_index":1192,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x6703;&#x5f71;&#x97ff;&#x57f7;&#x884c;&#x7d50;&#x679c",{"_index":1062,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x6703;&#x65b0;&#x589e;&#x66f4;&#x591a;a&#x6a19;&#x7c64",{"_index":276,"title":{},"body":{"event.html#代理":{}}}],["x6703;&#x88ab;&#x8986;&#x84cb;&#x6240;&#x4ee5;&#x88dc;&#x56de;&#x539f;&#x672c;&#x5efa;&#x69cb;&#x51fd;&#x5f0f",{"_index":1366,"title":{},"body":{"core.html#繼承":{}}}],["x6703;&#x8a2d;&#x5b9a;&#x5728",{"_index":2110,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x6703;&#x932f;&#x8aa4;&#x5730;&#x8fd4;&#x56d",{"_index":2964,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x6709",{"_index":2676,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x6709;&#x4e00;&#x500b;&#x65b0;&#x7684",{"_index":1592,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x6709;&#x4ec0;&#x9ebc;&#x5340;&#x5225;&#xff1f",{"_index":2492,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x6709;&#x5275;&#x9020;&#x5230;&#x57f7;&#x884c;&#x7684;&#x6982;&#x5ff5;&#xff0c;&#x4f46;&#x4e0d;&#x6703;&#x9810;&#x5148;&#x51fa;&#x73f",{"_index":1435,"title":{},"body":{"core.html#const":{}}}],["x6709;&#x52a0;&#x5165;&#x56b4;&#x683c;&#x6a21;&#x5f0f",{"_index":1327,"title":{},"body":{"core.html#this":{}}}],["x6709;&#x5c07;&#x6b64;&#x5c6c;&#x6027",{"_index":3170,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x6709;&#x76f8;&#x540c;&#x5c6c;&#x6027;&#x6642;&#x5408;&#x4f75;&#x7269;&#x4ef6;&#x5340;&#x6bb5",{"_index":2977,"title":{"object/assign.html#有相同屬性時合併物件區段":{}},"body":{}}],["x6709;&#x76f8;&#x540c;&#x7684;&#x529f;&#x80fd;&#xff0c;&#x5728;&#x67d0;&#x4e9b;&#x7279;&#x6b8a;&#x60c5;&#x6cc1;&#x4e0b;&#x4e5f;&#x904b;&#x4f5c;&#x7684;&#x5f88;&#x597d;&#xff1a",{"_index":1594,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x6709;hoisting&#x4f46;&#x9396;&#x4f4f",{"_index":1430,"title":{},"body":{"core.html#const":{}}}],["x671f;&#x671b;&#x4ee3;&#x78bc;&#x7684;&#x8f38;&#x51fa;&#x8b8a;&#x6210;&#xff1a;5",{"_index":439,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x672c;&#x5730;&#x901a;&#x904",{"_index":2895,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["x679c;&#x51cd;&#x5c64;&#xff0c;&#x5976;&#x916a;&#x5c64;&#x548c;&#x5976;&#x6cb9;&#x5c64;&#xff0c;&#x9802;&#x90e8;&#x9084",{"_index":2677,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x67e5;&#x627e;&#xff1a;&#x5f9e;&#x5c0d;&#x982d;&#x958b;&#x59cb;&#x67e5;&#x627e;&#xff0c;&#x5f9e;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x70ba",{"_index":3279,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x67e5;&#x8a62;&#x505a;&#x7de9;&#x5b58",{"_index":1687,"title":{"performance.html#DOM-查詢做緩存":{}},"body":{"performance.html#優化原則和方向":{}}}],["x6807;&#x7b7e;&#x6253;&#x5f00",{"_index":301,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["x689d;&#x4ef6;&#x7d44;&#x5408;&#x7684;&#x554f;&#x984c",{"_index":3116,"title":{"statements/if...else.html#條件組合的問題":{}},"body":{}}],["x6a19;&#x7c64",{"_index":1723,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x6a21;&#x677f;&#x6e32;&#x67d3;&#x9801;&#x9762",{"_index":1695,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6b63;&#x5219",{"_index":3314,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x6b63;&#x78ba",{"_index":1068,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x6b63;&#x898f;&#x8868;&#x9054;&#x5f0f",{"_index":1040,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{}}}],["x6b64;&#x6642",{"_index":3088,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x6bcf;&#x500b;&#x6846;&#x67b6;&#x5be6;&#x73fe;&#x7684;&#x908f;&#x8f2f;&#x90fd;&#x53ef;&#x80fd;&#x4e0d;&#x4e00;&#x6a23;&#xff0c;&#x6240;&#x4ee5;&#x9084;&#x662f;&#x8981;&#x53bb;&#x770b;&#x5b98;&#x65b9;&#x7684;&#x8aaa;&#x660e;&#x6703;&#x6bd4;&#x8f03;&#x6e05;&#x695a;&#x3002",{"_index":2183,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x6bcf;&#x6b21;&#x5faa;&#x74b0;&#xff0c;&#x90fd;&#x6703;&#x67e5;&#x8a62",{"_index":1711,"title":{},"body":{"performance.html#DOM-查詢做緩存":{}}}],["x6bd4",{"_index":1597,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x6bd4;&#x5982;&#xff0c",{"_index":111,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x6bd4;&#x5982;&#xff0c;&#x7576;&#x6211;&#x5011;&#x6709;&#x591a;&#x500b;&#x57df;&#x540d;&#x7684;&#x7db2;&#x7ad9;&#x9700;&#x8981;&#x8ddf;&#x8e64;&#xff0c;&#x6211;&#x5011;&#x5e0c;&#x671b;&#x77ad;&#x89e3;&#x5230;&#x7528;&#x6236;&#x9ede;&#x64ca;&#x67d0;&#x500b;&#x5ee3;&#x544a;&#x5230;&#x9054;&#x57df;&#x540d;a&#x4e0b;&#x7684;&#x7db2;&#x9801;&#xff0c;&#x7136;&#x5f8c;&#x53ef;&#x80fd;&#x700f;&#x89bd;&#x4e86;&#x4e0d;&#x8ad6;&#x90a3;&#x500b;&#x57df;&#x540d;&#x4e0b;&#x7684;&#x9801;&#x9762;&#xff0c;&#x6700;&#x5f8c;&#x5728;&#x57df;&#x540d;b&#x4e0b;&#x7684;&#x7db2;&#x9801;&#x5b8c;&#x6210;&#x8a3b;&#x518a;&#x7684;&#x60c5;&#x6cc1;&#x3002;&#x5ee3;&#x544a;&#x53ef;&#x4ee5;&#x5728;&#x57df;&#x540d;a&#x4e0b;&#x7684;&#x7db2;&#x9801;&#x88ab;&#x8ddf;&#x8e64;&#x5230;&#xff0c;&#x800c;&#x8a3b;&#x518a;&#x53ef;&#x4ee5;&#x5728;&#x57df;&#x540d;b&#x4e0b;&#x7684;&#x7db2;&#x9801;&#x8ddf;&#x8e64;&#x5230;&#x3002",{"_index":2139,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x6bd4;&#x5982;&#xff0c;&#x8a2a;&#x554f",{"_index":2126,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x6bd4;&#x5c0d;&#x7684;&#x4e0d;&#x662f;&#x503c",{"_index":1115,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x6bd4;&#x5c0d;&#x7684;&#x90fd;&#x662f;&#x53c3;&#x8003;&#x4f4d;&#x5740",{"_index":1120,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x6bd4;&#x8f03;&#x4e0d;&#x662f;&#x4e00;&#x500b;&#x6bd4;&#x8f03;&#x597d;&#x7684;&#x89e3;&#x6c7a;&#x65b9;&#x5f0f;&#xff0c;&#x4f60;&#x53ef;&#x4ee5;&#x5f97;&#x5230;&#x9019;&#x6a23;&#x7684;&#x7d50;&#x679c;&#xff1a",{"_index":1590,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x6c38;&#x9060;&#x90fd;&#x662f;&#x8a9e;&#x610f;&#x4e0a;&#x7684",{"_index":2803,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x6c42;&#x503c;&#x7b56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6c42;&#x503c;&#x7b56;&#x7565",{"_index":1139,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x6c59;&#x67d3;&#x6574;&#x500b;&#x4f5c;&#x7528;&#x57df",{"_index":1422,"title":{},"body":{"core.html#Let":{}}}],["x6c92;&#x6709;&#x50b3;&#x7d71;&#x51fd;&#x6578",{"_index":1445,"title":{},"body":{"core.html#箭頭函數":{}}}],["x6c92;&#x6709;&#x95dc;&#x4fc2",{"_index":1867,"title":{},"body":{"this.html#Callback":{}}}],["x6c92;&#x88ab;&#x6539;&#x5230",{"_index":505,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{}}}],["x6c92;&#x8907;&#x88fd",{"_index":524,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["x6ce8;&#x610f;&#xff0c;&#x5982;&#x679c;&#x4f7f;&#x7528;&#x7bad;&#x982d;&#x51fd;&#x5f0f;&#xff0c;thi",{"_index":1894,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x6ce8;&#x610f;&#xff0c;&#x9019;&#x88e1;&#x662f",{"_index":1889,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x6ce8;&#x610f;&#xff0c;&#x901a;&#x5e38;&#x9810;&#x8a2d;&#x503c;&#x4e0d;&#x662f",{"_index":1915,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x6d4f;&#x89c8;&#x5668;&#x5141;&#x8bb8;&#x811a;&#x672c;&#x5f02;&#x6b65;&#x52a0;&#x8f7d;&#xff0c;&#x4e0b;&#x9762;&#x5c31;&#x662f;&#x4e24;&#x79cd;&#x5f02;&#x6b65;&#x52a0;&#x8f7d;&#x7684;&#x8bed;&#x6cd5;&#x3002",{"_index":299,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["x6d6e;&#x70b9;&#x6570;&#x9677;&#x9631;&#x53ca;&#x89e3;&#x6cd5",{"_index":1965,"title":{},"body":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x6d6e;&#x9ede;&#x6578;&#x904b;&#x7b97;&#x7684;&#x5751",{"_index":1964,"title":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}},"body":{}}],["x6df1;&#x5165;&#x54cd;&#x5e94;&#x5f0f;&#x539f;&#x7406",{"_index":1402,"title":{},"body":{"core.html#屬性特徵":{}}}],["x6df1;&#x5c64;&#x8907;&#x88fd",{"_index":1191,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x6df1;&#x62f7;&#x8c9d;(deep",{"_index":504,"title":{"copy.html#深拷貝-Deep-Copy":{}},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x6df1;&#x6dfa;&#x62f7;&#x8c9d",{"_index":1183,"title":{"core.html#深淺拷貝":{}},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x6dfa;&#x5c64;&#x8907;&#x88fd",{"_index":1190,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x6dfa;&#x62f7;&#x8c9d",{"_index":503,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x6dfa;&#x62f7;&#x8c9d;(shallow",{"_index":495,"title":{"copy.html#淺拷貝-Shallow-Copy":{}},"body":{}}],["x6e05;&#x7a7a;&#x968a",{"_index":3277,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x6e1b;&#x5c11",{"_index":1671,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6e1b;&#x5c11;&#x9801;&#x9762;&#x9ad4;&#x7a4d;&#xff0c;&#x63d0;&#x5347;&#x7db2;&#x8def;&#x52a0;&#x8f09",{"_index":1675,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6e1b;&#x5c11;dom",{"_index":1688,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6e2c;&#x8a66;&#x9663;&#x5217",{"_index":2476,"title":{},"body":{"array/array_methods.html#every":{},"array/array_methods.html#some":{}}}],["x6e32;&#x67d3;&#x5b8c;&#x5373;&#x53ef;&#x57f7;&#x884c;&#xff0c;&#x6b64;&#x6642;&#x5716;&#x7247;&#x3001;&#x8996;&#x983b;&#x9084;&#x53ef;&#x80fd;&#x6c92;&#x6709;&#x52a0;&#x8f09;&#x5b8c",{"_index":1731,"title":{},"body":{"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["x6e4a;&#x6574;&#x4f75",{"_index":1968,"title":{},"body":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x700f;&#x89bd;&#x5668;&#x4e0d;&#x8d70;&#x5f37;&#x7de9;&#x5b58",{"_index":2955,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x70ba;&#x4ec0;&#x9ebc;&#x6211;&#x5011;&#x9700;&#x8981",{"_index":2787,"title":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}},"body":{}}],["x70ba;&#x53c3;&#x6578;&#x7684;&#x51fd;&#x5f0f;&#x3002",{"_index":2784,"title":{},"body":{"global/function.html#call、apply、bind":{}}}],["x70ba;&#x53c3;&#x8003;&#x3002;&#x8acb;&#x4f7f;&#x7528;&#x7bad;&#x982d;&#x51fd;&#x5f0f;&#x6216;&#x662f",{"_index":2811,"title":{},"body":{"global/function.html#bind":{}}}],["x70ba;&#x6240;&#x6709;a&#x6a19;&#x7c64",{"_index":277,"title":{},"body":{"event.html#代理":{}}}],["x70ba;&#x95dc;&#x9375;&#x5b57",{"_index":1292,"title":{},"body":{"core.html#this":{}}}],["x7121;&#x503c;&#x50b3;&#x5165;this&#x5f80;&#x4e0a;&#x627",{"_index":1882,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x7121;&#x6cd5;&#x518d;&#x51fd;&#x5f0f;&#x5916;&#x88ab;&#x518d;&#x6b21;&#x57f7;&#x884c",{"_index":1261,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x7121;&#x6cd5;&#x53d6;&#x5f97;&#x7269;&#x4ef6;&#x7684;mynam",{"_index":1309,"title":{},"body":{"core.html#this":{}}}],["x7121;&#x6cd5;&#x65b0;&#x589e;&#x522a;&#x9664",{"_index":1385,"title":{},"body":{"core.html#屬性特徵":{}}}],["x7121;&#x7a7a;&#x683c;&#x5b57;&#x7b26;&#x69cb;&#x6210;&#x4e00;&#x500b;&#x55ae;&#x8a5e;&#x3002",{"_index":3308,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x7136;&#x5f8c;&#x518d;&#x7d71;&#x4e00;&#x63d2;&#x5165",{"_index":1719,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x7136;&#x5f8c;&#x624d;&#x8ce6;&#x4e88;&#x503c",{"_index":998,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x7136;&#x5f8c;&#x628a;obj2.b&#x6539;&#x6210;100",{"_index":500,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x7248;&#x672c;)&#xff1a",{"_index":1439,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x7269;&#x4ef6",{"_index":1124,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"this.html#bind-apply-call":{}}}],["x7269;&#x4ef6;&#x4e0a",{"_index":1344,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x7269;&#x4ef6;&#x4e0b;&#x547c;&#x53eb;&#x6703;&#x5f71;&#x97ff",{"_index":1833,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["x7269;&#x4ef6;&#x52a0;&#x4e0a;s",{"_index":1388,"title":{},"body":{"core.html#屬性特徵":{}}}],["x7269;&#x4ef6;&#x53d6;&#x503c",{"_index":1138,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x7269;&#x4ef6;&#x53d6;&#x503c;&#x5c6c;&#x6027;&#x7528;&#x5b57;&#x4e32",{"_index":1143,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x7269;&#x4ef6;&#x53ef;&#x4ee5;&#x7528;&#x55ae;&#x5f15;&#x865f",{"_index":1219,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x7269;&#x4ef6;&#x53ef;&#x96a8;&#x610f;&#x589e;&#x52a0;&#x5c6c;&#x6027",{"_index":1201,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x7269;&#x4ef6;&#x5be6;&#x5b57",{"_index":1042,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x7269;&#x4ef6;&#x5c6c;&#x6027",{"_index":3152,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x7269;&#x4ef6;&#x7684",{"_index":1843,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["x7269;&#x4ef6;&#x7684;&#x53c3;&#x8003;&#x4f4d;&#x5740;&#x4e0d;&#x540c",{"_index":1118,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x7269;&#x4ef6;&#x7684;&#x578b;&#x5225",{"_index":1321,"title":{},"body":{"core.html#this":{}}}],["x7269;&#x4ef6;&#x7684;&#x65b9;&#x6cd5;&#x8abf;&#x7528",{"_index":1832,"title":{"this.html#物件的方法調用-As-an-object-method":{}},"body":{}}],["x7269;&#x4ef6;&#x7684;mynam",{"_index":1310,"title":{},"body":{"core.html#this":{}}}],["x7269;&#x4ef6;&#x8207;&#x7269;&#x4ef6",{"_index":1114,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x7269;&#x4ef6;&#x8207;&#x975e;&#x7269;&#x4ef6",{"_index":1112,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x7269;&#x4ef6;&#x88e1;&#x9762;&#x642d;&#x914d;&#x7bad;&#x982d;&#x51fd;&#x6a39;&#x6703;&#x51fa;&#x932f",{"_index":1454,"title":{},"body":{"core.html#箭頭函數":{}}}],["x7269;&#x4ef6;&#x8a18;&#x61b6;&#x9ad4;&#x7a7a;&#x9593",{"_index":1162,"title":{"core.html#物件記憶體空間":{}},"body":{}}],["x7269;&#x4ef6;&#x8b8a;&#x6578",{"_index":1165,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["x7269;&#x4ef6;&#xff0c;&#x6b64;&#x6642",{"_index":2219,"title":{},"body":{"api/promise.html#Promise":{}}}],["x7269;&#x4ef6;(&#x9663;&#x5217",{"_index":1180,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x7279;&#x5b9a;&#x573a;&#x666f;&#x4e0b;&#x4ee3;&#x66ff;&#x4f18;&#x5316",{"_index":3134,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x7279;&#x6b8a;&#x72c0;&#x6cc1",{"_index":1107,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x72c0;&#x614b",{"_index":2225,"title":{},"body":{"api/promise.html#Promise":{}}}],["x72c0;&#x614b;&#x78bc",{"_index":126,"title":{"RESTfulAPI.html#狀態碼":{}},"body":{}}],["x72c0;&#x614b;&#x78bc;&#x662f",{"_index":2871,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x72c0;&#x614b;&#xff0c;&#x52a0;&#x8f09;&#x700f;&#x89bd;&#x5668;&#x7de9;&#x5b58;&#xff0c;&#x4e26;&#x4e14;&#x97ff;&#x61c9;&#x982d;&#x6703;&#x8a2d;&#x7f6",{"_index":2925,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x72d7;&#x7684;&#x539f;&#x578b;&#x539f;&#x672c;&#x76f4;&#x63a5;&#x7e7c;&#x627f;&#x65bc;&#x52d5;&#x7269;&#x754c;&#x7684;&#x539f;&#x578b",{"_index":1365,"title":{},"body":{"core.html#繼承":{}}}],["x7372;&#x53d6;&#x968a;&#x5217;&#x9577;&#x5ea6",{"_index":3278,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x7372;&#x53d6;&#x968a;&#x982d;&#x5143;&#x7d20",{"_index":3276,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x7406;&#x89e3;&#x4e4b;&#x767d;&#x8bdd",{"_index":1414,"title":{},"body":{"core.html#屬性特徵":{}}}],["x751f;&#x6210;&#x65b0;&#x7684;&#x53c3;&#x8003;&#x7269;&#x4ef6",{"_index":1167,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["x751f;&#x6210;&#x65b0;&#x9663;&#x5217",{"_index":2469,"title":{},"body":{"array/array_methods.html#Array":{}}}],["x7528;&#x4e0d;&#x5230;301&#x72c0;&#x614b;&#x78bc;&#xff08;&#x6c38;&#x4e45;&#x91cd;&#x5b9a;&#x5411;&#xff09;&#x548c;302&#x72c0;&#x614b;&#x78bc;&#xff08;&#x66ab;&#x6642;&#x91cd;&#x5b9a;&#x5411;&#xff0c;307&#x4e5f;&#x662f;&#x9019;&#x500b;&#x542b;&#x7fa9;&#xff09;&#xff0c;&#x56e0;&#x70ba;&#x5b83;&#x5011;&#x53ef;&#x4ee5;&#x7531;&#x61c9;&#x7528;&#x7d1a;&#x5225;&#x8fd4;&#x56de;&#xff0c;&#x700f;&#x89bd;&#x5668;&#x6703;&#x76f4;&#x63a5;&#x8df3;&#x8f49;&#xff0c;api",{"_index":132,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x7528;&#x5168;&#x57df;&#x7269;&#x4ef6;&#x50b3;&#x503c",{"_index":1271,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x7528;&#x5230;&#x7684;3xx&#x72c0;&#x614b;&#x78bc;&#xff0c;&#x4e3b;&#x8981;&#x662f",{"_index":134,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x7528;&#x65bc;&#x5ba3;&#x544a;&#x4e00;&#x500b;&#x300c;&#x53ea;&#x4f5c;&#x7528;&#x5728;&#x7576;&#x524d;&#x5340;&#x584a;&#x7684;&#x8b8a;&#x6578;&#x300d;&#xff0c;&#x521d;&#x59cb;&#x503c;&#x53ef;&#x9078;&#x64c7;&#x6027;&#x7684;&#x8a2d;&#x5b9a;&#x3002",{"_index":3096,"title":{},"body":{"statements/let.html#let":{}}}],["x7528;&#x7acb;&#x5373;&#x57f7;&#x884c;&#x51fd;&#x6578",{"_index":440,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x7528;&#x7acb;&#x5373;&#x57f7;&#x884c;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x5275;&#x9020;&#x4e86;&#x65b0;&#x7684;&#x51fd;&#x6578;&#x4f5c;&#x7528;&#x57df;&#x5c07;timer&#x51fd;&#x6578;&#x5305;&#x88f9;&#x4e86;&#x8d77;&#x4f86;&#xff0c;&#x4e26;&#x7528;j&#x6355;&#x7372;&#x4e86;&#x6bcf;&#x6b21;&#x5faa;&#x74b0;&#x6642;&#x7684;i",{"_index":443,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x7528;10&#x9032;&#x5236;&#x8f49;&#x63db",{"_index":2524,"title":{},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x7528;array.from&#x8f49;&#x6210;&#x7d14;&#x9663;&#x5217",{"_index":1458,"title":{},"body":{"core.html#箭頭函數":{}}}],["x7531;&#x65bc;&#x4e0a;&#x4e00;&#x500b;&#x968e;&#x6bb5;&#x7d50;&#x679c;&#x662f",{"_index":2254,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x7570;&#x6b65",{"_index":413,"title":{"asynchronous.html#異步":{}},"body":{}}],["x7570;&#x6b65;&#x7684;&#x5de5;&#x5ee0;&#x51fd;&#x6578",{"_index":2680,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x7576",{"_index":1131,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"http/caching.html#強緩存":{}}}],["x7576;&#x4e2d;&#xff0c;&#x4e26;&#x4e0d;&#x662f;&#x7acb;&#x5373;&#x57f7;&#x884c;&#xff1b",{"_index":433,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x7576;&#x4f60;&#x62ff;&#x5230",{"_index":1966,"title":{},"body":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x7576;&#x6211;&#x5011;&#x9700;&#x8981;&#x70ba;&#x67d0;&#x500b;&#x5ba2;&#x6236;&#x7aef;&#x7684;&#x8acb;&#x6c42;&#x5275;&#x5efa;&#x4e00;&#x500b;session&#x7684;&#x6642;&#x5019;&#xff0c;&#x670d;&#x52d9;&#x5668;&#x9996;&#x5148;&#x6aa2;&#x67e5;&#x9019;&#x500b;&#x5ba2;&#x6236;&#x7aef;&#x7684;&#x8acb;&#x6c42;&#x88e1;&#x662f;&#x5426;&#x6709;&#x5305;&#x542b;&#x4e86;session&#x6a19;&#x8b58;&#xff0c;&#x5c31;&#x662f;&#x525b;&#x525b;&#x63d0;&#x5230;&#x7684",{"_index":2159,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7576;&#x700f;&#x89bd;&#x5668;&#x7684;&#x5f37;&#x7de9;&#x5b58;&#x5931;&#x6548;&#x7684;&#x6642;&#x5019;&#x6216;&#x8005;&#x8acb;&#x6c42;&#x982d;&#x4e2d;&#x8a2d;&#x7f6e;&#x4e86;&#x4e0d;&#x8d70;&#x5f37;&#x7de9;&#x5b58;&#xff0c;&#x4e26;&#x4e14;&#x5728;&#x8acb;&#x6c42;&#x982d;&#x4e2d;&#x8a2d;&#x7f6e;&#x4e86;if",{"_index":2923,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7576;&#x7136;&#xff0c;&#x6211;&#x5011;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x56de;&#x8abf;&#x51fd;&#x6578;&#xff0c;&#x4f46;&#x662f;&#x6211;&#x5011;&#x5df2;&#x7d93;&#x6709;&#x4e86",{"_index":2687,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x767c;&#x751f",{"_index":1054,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x767e;&#x5206;&#x6bd4",{"_index":1970,"title":{},"body":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x7684",{"_index":146,"title":{},"body":{"RESTfulAPI.html#狀態碼":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"http/caching.html#強緩存":{}}}],["x7684;&#x4e0d;&#x8db3",{"_index":3160,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x7684;&#x4ee3;&#x8868;&#x503c;&#x548c;&#x4e00;&#x500b;&#x9663;&#x5217;&#x5f62;&#x5f0f;&#x7684;&#x503c;&#x7d44;(&#x6216;&#x662f;&#x4e00;&#x500b",{"_index":2783,"title":{},"body":{"global/function.html#call、apply、bind":{}}}],["x7684;&#x4f7f;&#x7528;&#x8005;&#x672a;&#x5fc5;&#x77e5;&#x9053;&#xff0c;url",{"_index":139,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x7684;&#x500b;&#x6578",{"_index":3184,"title":{},"body":{"string/split.html#split":{}}}],["x7684;&#x503c;&#x3002",{"_index":1700,"title":{},"body":{"performance.html#懶加載":{}}}],["x7684;&#x503c;&#x4ee3;&#x8868;&#x7684;&#x662f",{"_index":2943,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x503c;&#x662f",{"_index":2927,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x503c;&#x662f;&#x4e00;&#x500b",{"_index":2878,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7684;&#x503c;&#x7684;&#x5143;&#x7d20;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x6570;&#x7ec4;&#x3002",{"_index":2547,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x7684;&#x503c;&#x9032;&#x884c;&#x6bd4;&#x8f03;&#xff0c;&#x5982;&#x679c;&#x76f8;&#x7b49;&#xff0c;&#x8fd4;&#x56de",{"_index":2949,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x503c;&#x9032;&#x884c;&#x6bd4;&#x8f03;&#xff0c;&#x5982;&#x679c;&#x7cfb;&#x7d71;&#x6642;&#x9593;&#x8d85;&#x904e;&#x4e86",{"_index":2881,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7684;&#x503c;&#xff0c;&#x7de9;&#x5b58;&#x5931;&#x6548;&#x3002;&#x7531;&#x65bc;&#x548c;&#x7cfb;&#x7d71;&#x6642;&#x9593;&#x9032;&#x884c;&#x6bd4;&#x8f03;&#xff0c;&#x6240;&#x4ee5;&#x7576;&#x7cfb;&#x7d71;&#x6642;&#x9593;&#x548c;&#x670d;&#x52d9;&#x5668;&#x6642;&#x9593;&#x4e0d;&#x4e00;&#x81f4;&#x7684;&#x6642;&#x5019;&#xff0c;&#x6703;&#x6709;&#x7de9;&#x5b58;&#x6709;&#x6548;&#x671f;&#x4e0d;&#x51c6;&#x7684;&#x554f;&#x984c;&#x3002;expir",{"_index":2882,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7684;&#x512a;&#x5148;&#x7d1a;&#x5728;&#x4e09;&#x500b",{"_index":2883,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7684;&#x512a;&#x5148;&#x7d1a;&#x9ad8;&#x65bc",{"_index":2915,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7684;&#x5176;&#x4e2d;&#x4e4b;&#x4e00;&#xff0c",{"_index":2234,"title":{},"body":{"api/promise.html#Promise":{}}}],["x7684;&#x51fa;&#x73fe;&#x4e3b;&#x8981;&#x89e3;&#x6c7a;&#x4e86",{"_index":2961,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x52a0;&#x8f7d;&#x5b9e;&#x73b0",{"_index":298,"title":{"es6.html#Module-的加载实现":{}},"body":{}}],["x7684;&#x539f;&#x56e0;&#x3002",{"_index":2004,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x7684;&#x539f;&#x578b;&#x65b9;&#x6cd5;&#xff1a",{"_index":2221,"title":{},"body":{"api/promise.html#Promise":{}}}],["x7684;&#x53e6;&#x4e00;&#x500b;&#x624b;&#x6bb5;&#xff0c;&#x7686;&#x662f;&#x56de;&#x50b3;function&#x57f7;&#x884c;&#x7d50;&#x679c",{"_index":1869,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x7684;&#x5de5;&#x5ee0;&#x3002",{"_index":2702,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x7684;&#x610f;&#x601d;&#x662f;&#x50b3;&#x905e;&#x4e00;&#x500b;&#x51fd;&#x6578;&#xff0c;&#x5ef6;&#x9072;&#x4e00;&#x6bb5;&#x6642;&#x5019;&#x628a;&#x8a72;&#x51fd;&#x6578;&#x6dfb;&#x52a0;&#x5230",{"_index":431,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x7684;&#x610f;&#x601d;&#x662f;&#x5148;&#x5efa;&#x7acb;&#x4e00;&#x500b;&#x7a7a;&#x7269;&#x4ef6",{"_index":512,"title":{},"body":{"copy.html#Object-assign":{}}}],["x7684;&#x6307;&#x5411",{"_index":1834,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["x7684;&#x6578;&#x503c",{"_index":1134,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x7684;&#x65b0;&#x8a9e;&#x6cd5;&#x3002;&#x4fee;&#x5fa9;&#x4e86;es5",{"_index":3159,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x7684;&#x65b9;&#x5f0f;&#x5efa;&#x7acb",{"_index":2218,"title":{},"body":{"api/promise.html#Promise":{}}}],["x7684;&#x65b9;&#x6848",{"_index":3135,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x7684;&#x65f6;&#x5019;&#x4f1a;&#x6536;&#x96c6;&#x4f9d;&#x8d56;&#xff0c;sett",{"_index":1416,"title":{},"body":{"core.html#屬性特徵":{}}}],["x7684;&#x65f6;&#x5019;&#x4f1a;&#x89e6;&#x53d1;&#x4f9d;&#x8d56;&#x66f4;&#x65b0",{"_index":1417,"title":{},"body":{"core.html#屬性特徵":{}}}],["x7684;&#x6642;&#x5019;&#xff0c;&#x6703;&#x5c07;&#x9019;&#x5169;&#x500b;&#x5c6c;&#x6027;&#x503c;&#x5230;&#x670d;&#x52d9;&#x7aef;&#x53bb;&#x9a57;&#x8b49;&#x662f;&#x5426;&#x547d;&#x4e2d;&#x5354;&#x5546;&#x7de9;&#x5b58;&#xff0c;&#x5982;&#x679c;&#x547d;&#x4e2d;&#x4e86;&#x5354;&#x5546;&#x7de9;&#x5b58;&#xff0c;&#x6703;&#x8fd4;&#x56d",{"_index":2924,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x6642;&#x9593",{"_index":1696,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x7684;&#x6642;&#x9593;&#xff0c;&#x4e26;&#x653e;&#x5230",{"_index":2947,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x66ff;&#x8eab",{"_index":2809,"title":{},"body":{"global/function.html#bind":{}}}],["x7684;&#x6838;&#x5fc3;&#x601d;&#x60f3;&#x5c31;&#x662f;&#xff0c;&#x5ba2;&#x6236;&#x7aef;&#x767c;&#x51fa;&#x7684;&#x6578;&#x64da;&#x64cd;&#x4f5c;&#x6307;&#x4ee4;&#x90fd;&#x662f;&#x201d;&#x52d5;&#x8a5",{"_index":109,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x7684;&#x683c;&#x5f0f;&#x662f;&#x975e;&#x5e38;&#x56b4;&#x683c;&#x7684;&#xff0c;&#x591a;&#x4e00;&#x500b;&#x9017;&#x865f;&#x5c11;&#x4e00;&#x500b;&#x9017;&#x865f;&#xff0c;&#x90fd;&#x6703;&#x5c0e;&#x81f4;&#x51fa;&#x73fe;&#x932f;&#x8aa4;&#xff0c",{"_index":1221,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x7684;&#x6d6e;&#x9ede;&#x6578;&#x4e26;&#x4e0d;&#x80fd;&#x7cbe;&#x78ba;&#x5730;&#x8868;&#x9054;&#x5c0f;&#x6578;&#xff08;&#x6bd4;&#x5982;&#x8aaa;0.1&#xff09;&#xff0c",{"_index":1980,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{}}}],["x7684;&#x7279;&#x5fb5",{"_index":451,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x7684;&#x7279;&#x6027;&#xff0c;&#x8fd9;&#x4e5f;&#x5c31;&#x662f",{"_index":1411,"title":{},"body":{"core.html#屬性特徵":{}}}],["x7684;&#x7d50;&#x679c",{"_index":2230,"title":{},"body":{"api/promise.html#Promise":{}}}],["x7684;&#x7d50;&#x679c;&#xff08;&#x8a72;&#x627f;&#x8afe;&#x5df2;&#x7d93;&#x88ab;&#x5be6;&#x73f",{"_index":2228,"title":{},"body":{"api/promise.html#Promise":{}}}],["x7684;&#x898f;&#x5247;&#xff1a",{"_index":1055,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x7684;&#x898f;&#x7bc4;&#xff0c;&#x8acb;&#x9078;&#x64c7;&#x6700;&#x5f8c;&#x4e00;&#x500b;&#x9078;&#x9805;&#x3002",{"_index":1443,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x7684;&#x89e3;&#x6c7a;&#x65b9;&#x6cd5",{"_index":1129,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x7684;&#x8abf;&#x7528;&#x65b9;&#x5f0f",{"_index":1294,"title":{},"body":{"core.html#this":{}}}],["x7684;&#x904b;&#x4f5c",{"_index":2249,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x7684;hoisting&#x76f8;&#x540c;&#x6982;&#x5ff5",{"_index":1437,"title":{},"body":{"core.html#const":{}}}],["x7686;&#x662f;&#x56de;&#x50b3;function&#x57f7;&#x884c;&#x7d50;&#x679c",{"_index":2796,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x76e1;&#x53ef;&#x80fd;&#x4e0d;&#x8981;&#x4f7f;&#x7528;simpl",{"_index":1303,"title":{},"body":{"core.html#this":{}}}],["x76e1;&#x53ef;&#x80fd;&#x4e0d;&#x8981;&#x8abf;&#x7528;thi",{"_index":1333,"title":{},"body":{"core.html#this":{}}}],["x76e3;&#x807d;&#x662f;div1",{"_index":284,"title":{},"body":{"event.html#代理":{}}}],["x76ee;&#x524d;&#x53ea;&#x6709;&#x7e7c;&#x627f;&#x539f;&#x578b;prototyp",{"_index":1368,"title":{},"body":{"core.html#繼承":{}}}],["x76ee;&#x6a19;&#x7269;&#x4ef6;&#x672c;&#x8eab;&#x4e5f;&#x88ab;&#x6539;&#x8b8a;&#x3002",{"_index":2976,"title":{},"body":{"object/assign.html#合併物件":{}}}],["x76f4;&#x63a5;&#x64cd;&#x4f5c;&#x7269;&#x4ef6;&#x672c;&#x8eab",{"_index":1384,"title":{},"body":{"core.html#屬性特徵":{}}}],["x76f4;&#x63a5;&#x8f38;&#x51fa;&#xff0c;1",{"_index":422,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x76f4;&#x8b6f;&#x5668",{"_index":986,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x76f4;&#x8b6f;&#x5668;&#x8f49;&#x63db;&#x904e;&#x7a0b",{"_index":980,"title":{"core.html#JavaScript-直譯器轉換過程":{}},"body":{}}],["x76f8;&#x7576;&#x65bc;&#x7d66;&#x5c0d;&#x8c61;&#x6dfb;&#x52a0;&#x4e86;x&#x5c6c;&#x6027;&#x3002",{"_index":3089,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x770b;&#x5230;&#x51fd;&#x5f0f;&#x662f;&#x76f4;&#x63a5;&#x57f7;&#x884c;&#x7684",{"_index":1305,"title":{},"body":{"core.html#this":{}}}],["x770b;&#x898b;&#x7269;&#x4ef6;&#x6240;&#x6709;&#x5c6c;&#x6027;&#x5167;&#x5bb9",{"_index":1178,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x77e5;&#x591a;&#x5c11",{"_index":2265,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["x78ba;&#x4fdd;&#x7a7a;&#x7269;&#x4ef6",{"_index":1397,"title":{},"body":{"core.html#屬性特徵":{}}}],["x78bc",{"_index":2929,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x78bc;&#x662f;&#x4ee5",{"_index":2937,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7981;&#x7528;&#x5354;&#x5546;&#x7de9;&#x5b58",{"_index":2899,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x79c1;&#x6709;&#x65b9;&#x6cd5",{"_index":1288,"title":{},"body":{"core.html#函式工廠":{}}}],["x79d1;&#x5b78;&#x7b26;&#x865f;&#x8655;&#x7406",{"_index":1974,"title":{"math.html#科學符號處理":{},"cases/math.html#科學符號處理":{}},"body":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x79d2;&#x3002",{"_index":2909,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x79d2;&#x4e4b;&#x5f8c;&#x89f8;&#x767c;&#xff0c;&#x800c;&#x5faa;&#x74b0;&#x5b8c;&#x7684;&#x8f38;&#x51fa;&#x662f;&#x7acb;&#x5373;&#x57f7;&#x884c;&#x7684",{"_index":419,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x79d2;&#x4e4b;&#x5f8c;&#xff0c;&#x8f38;&#x51fa",{"_index":423,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x79d2;&#x7684;&#x8d85;&#x6642;&#x6642;&#x9593;&#x4e4b;&#x5f8c;&#xff0c;&#x518d;&#x6b21;&#x8acb;&#x6c42;&#x8cc7;&#x6e90;&#xff1a",{"_index":2913,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7a0b;&#x5e8f;&#x7684;&#x8a9e;&#x6cd5;&#x5206;&#x6790;(pars",{"_index":1051,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x7a0b;&#x5f0f",{"_index":1011,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x7a4d;&#x5206;&#x3002",{"_index":3120,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x7a4d;&#x5206;&#xff0c;&#x666e;&#x901a;&#x7528;&#x6236;&#x8d08;&#x9001",{"_index":3119,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x7acb;&#x5373;&#x51fd;&#x5f0f",{"_index":1043,"title":{"core.html#立即函式":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["x7acb;&#x5373;&#x51fd;&#x5f0f;&#x4e00;&#x500b;&#x529f;&#x80fd",{"_index":1282,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["x7acb;&#x5373;&#x51fd;&#x5f0f;&#xff1a",{"_index":1855,"title":{"this.html#立即函式：":{}},"body":{}}],["x7acb;&#x5373;&#x51fd;&#x5f0f;(iif",{"_index":1252,"title":{"core.html#立即函式-IIFE":{}},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x7acb;&#x5373;&#x547c;&#x53eb;&#x51fd;&#x5f0f;&#x8868;&#x9054;&#x5f0f",{"_index":1253,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x7acb;&#x5373;&#x57f7;&#x884c",{"_index":1260,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x7b26;&#xff0c;&#x7576;&#x670d;&#x52d9;&#x7aef;&#x7684;&#x6587;&#x4ef6;&#x8b8a;&#x5316;&#x7684;&#x6642;&#x5019;&#xff0c;&#x5b83;&#x7684",{"_index":2932,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7b2c;&#x4e00;&#x500b;for&#x8ff4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x70ba",{"_index":3286,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x7b2c;&#x4e00;&#x65b9",{"_index":2099,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e00;&#x65b9;cookie&#x548c;&#x7b2c;&#x4e09;&#x65b9;cookie&#x5340;&#x5225",{"_index":2105,"title":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e00;&#x65b9;cookie&#x63a5;&#x53d7;&#x7387;&#x9ad8;&#xff0c;&#x66f4;&#x6e96;&#x78ba;&#xff0c;&#x6c92;&#x6709;&#x7279;&#x6b8a;&#x9700;&#x8981;&#x5c31;&#x7528;&#x4ed6;&#x3002",{"_index":2121,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e00;&#x6b21;&#x52a0;&#x8f09;&#xff0c;&#x9801;&#x9762;&#x6703;&#x5411;&#x670d;&#x52d9;&#x5668;&#x8acb;&#x6c42;&#x6578;&#x64da;&#xff0c;&#x4e26;&#x5728",{"_index":2906,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7b2c;&#x4e00;&#x6b21;&#x57f7;&#x884c",{"_index":2033,"title":{},"body":{"variable.html#Hoisting":{}}}],["x7b2c;&#x4e09;&#x65b9",{"_index":2112,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e09;&#x65b9;cooki",{"_index":2123,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e09;&#x65b9;cookie&#x53ef;&#x4ee5;&#x8de8;&#x57df;&#x8ddf;&#x8e64;&#xff0c;&#x7279;&#x5225;&#x9700;&#x6c42;&#x53ef;&#x4ee5;&#x61c9;&#x7528;&#x3002",{"_index":2122,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e09;&#x65b9;cookie&#x7684;&#x512a;&#x52e2;&#x548c;&#x61c9;&#x7528",{"_index":2138,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e8c;&#x5c64;&#x662f;&#x50b3;&#x53c3;&#x8003;&#x7684;&#x5f62;&#x5f0f",{"_index":1189,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x7b2c;&#x4e8c;&#x6b21;&#x52a0;&#x8f09;&#xff0c;d",{"_index":2910,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7b2c;&#x4e8c;&#x6b21;&#x57f7;&#x884c",{"_index":2034,"title":{},"body":{"variable.html#Hoisting":{}}}],["x7b2c;&#x4e8c;&#x6b21;&#x8acb;&#x6c42;&#x8cc7;&#x6e90;&#xff0c;&#x670d;&#x52d9;&#x7aef;&#x6839;&#x64da;&#x8acb;&#x6c42;&#x982d;&#x4e2d;&#x7684",{"_index":2959,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7b2c;53&#x4f4d;&#x958b;&#x59cb;)&#x3002;&#x7576;&#x7136;&#xff0c;&#x4ee3;&#x50f9;&#x5c31;&#x662f;&#xff0c;0.1&#x5728;&#x8a08;&#x7b97;&#x6a5f;&#x5167;&#x90e8;&#x6839;&#x672c;&#x5c31;&#x4e0d;&#x662f;&#x7cbe;&#x78ba;&#x7684;0.1&#xff0c;&#x800c;&#x662f;&#x4e00;&#x500b;&#x6709;&#x820d;&#x5165;&#x8aa4;&#x5dee;&#x7684;0.1&#x3002;&#x7576;&#x4ee3;&#x78bc;&#x88ab;&#x7de8;&#x8b6f;&#x6216;&#x89e3;&#x91cb;&#x5f8c;&#xff0c;0.1&#x5df2;&#x7d93;&#x88ab;&#x56db;&#x6368;&#x4e94;&#x5165;&#x6210;&#x4e00;&#x500b;&#x8207;&#x4e4b;&#x5f88;&#x63a5;&#x8fd1;&#x7684;&#x8a08;&#x7b97;&#x6a5f;&#x5167;&#x90e8;&#x6578;&#x5b57;&#xff0c;&#x4ee5;&#x81f3;&#x65bc;&#x8a08;&#x7b97;&#x9084;&#x6c92;&#x958b;&#x59cb;&#xff0c;&#x4e00;&#x500b;&#x5f88;&#x5c0f;&#x7684;&#x820d;&#x5165;&#x932f;&#x8aa4;&#x5c31;&#x5df2;&#x7d93;&#x7522;&#x751f;&#x4e86;&#x3002;&#x9019;&#x4e5f;&#x5c31;&#x662f",{"_index":2002,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x7b49;&#x4e0d;&#x80fd;&#x7de9;&#x5b58;&#x6b64;&#x97ff;&#x61c9",{"_index":2890,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7b49;&#x540c;&#x65bc",{"_index":331,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x7b49;&#x65b9;&#x6cd5;&#xff0c",{"_index":2506,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x7b49;&#x7de9;&#x5b58",{"_index":2892,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7b54;&#x6848;&#x662f;&#xff1a",{"_index":2000,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x7bad;&#x982d;&#x51fd;&#x5f0f",{"_index":1886,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x7bad;&#x982d;&#x51fd;&#x5f0f;&#x6c92;&#x6709;&#x81ea;&#x5df1;&#x7684;thi",{"_index":1446,"title":{},"body":{"core.html#箭頭函數":{}}}],["x7bad;&#x982d;&#x51fd;&#x5f0f;(es6",{"_index":1302,"title":{},"body":{"core.html#this":{}}}],["x7bad;&#x982d;&#x51fd;&#x6578",{"_index":1444,"title":{"core.html#箭頭函數":{}},"body":{"core.html#箭頭函數":{},"global/function.html#cab-call-apply-vs-bind":{},"global/function.html#bind":{}}}],["x7c21;&#x6613;&#x547c;&#x53eb",{"_index":1298,"title":{"this.html#簡易呼叫":{}},"body":{"core.html#this":{}}}],["x7c21;&#x6613;&#x547c;&#x53eb;&#x4e0b",{"_index":1332,"title":{},"body":{"core.html#this":{}}}],["x7d14;&#x503c",{"_index":1176,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x7d14;&#x503c;&#x7121;&#x6cd5;&#x65b0;&#x589e;&#x5c6c;&#x6027",{"_index":1170,"title":{"core.html#純值無法新增屬性":{}},"body":{"core.html#物件記憶體空間":{}}}],["x7d14;&#x503c;&#x7dad;&#x6301;&#x539f;&#x578b;&#x5225",{"_index":1330,"title":{},"body":{"core.html#this":{}}}],["x7d1a;&#x5225;&#x53ef;&#x4ee5;&#x4e0d;&#x8003;&#x616e;&#x9019;&#x5169;&#x7a2e;&#x60c5;&#x6cc1;&#x3002",{"_index":133,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x7d22;&#x5f15;&#x987a;&#x5e8f",{"_index":3149,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x7d44;&#x5408;&#x7684;&#x5de5;&#x5ee0;&#x51fd;&#x6578",{"_index":2659,"title":{"function/factory​_factory.html#組合的工廠函數":{}},"body":{}}],["x7d50;&#x69cb;&#x4e2d;&#x3002",{"_index":1726,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x7d66;&#x4e0d;&#x540c;&#x7684;&#x503c;&#x3000;&#x505a;&#x76f8;&#x540c;&#x7684;&#x4e8b;&#x60c5",{"_index":1287,"title":{},"body":{"core.html#函式工廠":{}}}],["x7d81;&#x5b9a;&#x5927;&#x6cd5",{"_index":2816,"title":{},"body":{"global/function.html#bind":{}}}],["x7d93;&#x5178;&#x7684;&#x96d9;&#x7aef;&#x968a;&#x5217;&#x554f;&#x984c;&#xff1a;&#x7ffb;&#x8f49;&#x5b57;&#x7b26;&#x4e32;&#x88e1;&#x7684;&#x55ae;&#x8a5",{"_index":3299,"title":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}},"body":{}}],["x7dad;&#x57fa;&#x767e;&#x79d1",{"_index":1216,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x7db2;&#x57df;&#x4e2d;&#x3002",{"_index":2111,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7db2;&#x57df;&#x4e2d;&#xff0c;&#x9019;&#x4fbf;&#x662f;&#x7b2c;&#x4e09;&#x65b9",{"_index":2118,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7db2;&#x9801;&#x7b2c;&#x4e09;&#x65b9",{"_index":2143,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7de9;&#x5b58",{"_index":2967,"title":{},"body":{"http/caching.html#References":{}}}],["x7e7c;&#x627f",{"_index":1350,"title":{"core.html#繼承":{}},"body":{}}],["x7e7c;&#x627f;&#x7269;&#x4ef6;&#x7684;&#x539f;&#x578b",{"_index":1212,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x7e7c;&#x7e8c;&#x9075;&#x5faa",{"_index":2248,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x7f3a;&#x9ed",{"_index":2142,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x800c",{"_index":1870,"title":{},"body":{"this.html#bind-apply-call":{},"api/promise.html#Promise":{}}}],["x800c;&#x4e0d;&#x662f",{"_index":2691,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x800c;&#x4f7f;&#x7528;&#x7b2c;&#x4e09;&#x65b9;cookie&#xff0c;&#x90a3;&#x9ebc;&#x7121;&#x8ad6;&#x591a;&#x5c11;&#x500b;&#x57df;&#xff0c;&#x90fd;&#x53ea;&#x6709;&#x4e00;&#x500b;cookie&#xff0c;&#x4e00;&#x500b;&#x5c6c;&#x65bc;&#x7b2c;&#x4e09;&#x65b9;&#x57df;&#x7684;cookie&#xff0c;&#x7db2;&#x7ad9;&#x4e0b;&#x6240;&#x6709;&#x57df;&#x90fd;&#x80fd;&#x5171;&#x4eab;&#x9019;&#x500b;cookie&#xff0c;&#x90a3;&#x9ebc;&#x6240;&#x6709;&#x7684;&#x884c;&#x70ba;&#x90fd;&#x80fd;&#x88ab;&#x95dc;&#x806f;&#x8d77;&#x4f86;&#x5206;&#x6790;&#x3002",{"_index":2141,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x800c;&#x5982;&#x679c;&#x4e0a;&#x4e00;&#x500b;&#x8cc7;&#x6e90;&#x52a0;&#x8f09;&#x5931;&#x6557;,&#x53ef;&#x80fd;&#x5c0e;&#x81f4;&#x5f9e;&#x7de9;&#x5b58;&#x52a0;&#x8f09;&#x7684;&#x8cc7;&#x6e90;&#x5931;&#x6557",{"_index":2264,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["x800c;&#x7b2c;&#x4e09;&#x65b9",{"_index":2102,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["x800c;&#x95dc;&#x9589;&#x700f;&#x89bd;&#x5668;&#x5f8c;&#x56e0;&#x70ba;cookie&#x6d88;&#x5931;&#x9020;&#x6210",{"_index":2174,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8072;&#x660e;&#x7684;&#x8b8a;&#x91cf;&#x4e0d;&#x6703;&#x63d0;&#x5347;,&#x4e26;&#x4e14;&#x6703;&#x7522;&#x751f;&#x66ab;&#x5b58;&#x6b7b;&#x5340;&#x3002;&#x5728",{"_index":3098,"title":{},"body":{"statements/let.html#let":{}}}],["x8072;&#x660e;&#x8b8a;&#x91cf;&#x4e4b;&#x524d;&#x8a2a;&#x554f;&#x8b8a;&#x91cf;&#x6703;&#x62cb;&#x51fa;&#x932f;&#x8aa4;&#x3002",{"_index":3099,"title":{},"body":{"statements/let.html#let":{}}}],["x80fd;&#x4ee3;&#x8868;&#x8a72;&#x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x7684;&#x6578;&#x5b57",{"_index":1914,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x81ea;&#x52d5;&#x5206;&#x865f;&#x63d2;&#x5165",{"_index":1048,"title":{"core.html#ASI-自動分號插入":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x81ea;&#x8eab;&#x518d;&#x6b21;&#x8abf;&#x7528",{"_index":429,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x8207",{"_index":1141,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"this.html#Callback":{}}}],["x82f1;&#x6587;&#x539f;&#x6587;&#xff1a",{"_index":2705,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x842c;&#x7269;&#x5373;&#x5c0d;&#x8c61",{"_index":3053,"title":{},"body":{"operators/typeof.html#null":{}}}],["x85cd;&#x8272",{"_index":1104,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x86cb;&#x7cd5",{"_index":2675,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x86cb;&#x7cd5;*&#x662f;*&#x751c;&#x9ede",{"_index":2672,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x8868;&#x6578;&#x5b57;&#x5230;1",{"_index":1907,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x8868;&#x793a;&#x56b4;&#x683c;&#x76f8;&#x7b49;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#x985e;&#x578b;&#x548c;&#x503c;&#x90fd;&#x5fc5;&#x9808;&#x76f8;&#x540c;&#x3002;&#x5169;&#x500b;&#x7b49;&#x865f",{"_index":1584,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x8868;&#x793a;&#x57fa;&#x672c;&#x8a9e;&#x53e5;&#x7684;&#x57f7;&#x884c;&#x6b21;&#x6578;&#x662f;&#x4e00;&#x500b;&#x5e38;&#x6578;&#xff0c;&#x4e00;&#x822c;&#x4f86;&#x8aaa;&#xff0c;&#x53ea;&#x8981;&#x6f14;&#x7b97;&#x6cd5;&#x4e2d;&#x4e0d;&#x5b58;&#x5728;&#x8ff4;&#x5708;&#x8a9e;&#x53e5;&#xff0c;&#x5176;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x5c31;&#x662f;o(1",{"_index":3290,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x8868;&#x9054;&#x5f0f",{"_index":1037,"title":{"core.html#陳述式-表達式":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x8868;&#x9054;&#x5f0f;&#x6703;&#x56de;&#x50b3;&#x7d50;&#x679c",{"_index":1853,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x88ab;&#x6539;&#x5230;&#x4e86",{"_index":498,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x88dc;&#x6578;&#x5b57",{"_index":1543,"title":{"num.html#補數字":{}},"body":{}}],["x88dd;&#x98fe;&#x914d;&#x6599;&#x3002",{"_index":2678,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x88e1",{"_index":1419,"title":{},"body":{"core.html#Let":{}}}],["x88e1;&#x9762;&#x7684",{"_index":2802,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x8907;&#x88fd;&#x4e00;&#x4efd;obj1&#x53eb;&#x505a;obj2",{"_index":499,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x8981;&#x597d;&#x65bc",{"_index":118,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x8981;&#x63d2;&#x5165",{"_index":1722,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x898b;&#x5927;&#x62ec;&#x865f",{"_index":1166,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["x898f;&#x5247;&#x662f;&#xff1a",{"_index":3117,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x898f;&#x7bc4;&#x6587;&#x4ef6",{"_index":1438,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x89e3;&#x51b3;provision",{"_index":2260,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["x89e3;&#x6c7a;&#x65b9;&#x6cd5;&#x662f;&#x4f7f;&#x7528",{"_index":333,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x89e3;&#x91cb",{"_index":3305,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x89e3;&#x984c;&#x601d;&#x8def;&#xff1a;&#x4f7f;&#x7528;&#x96d9;&#x7aef;&#x968a;&#x5217;&#x89e3;&#x984c",{"_index":3310,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x89f8;&#x767c",{"_index":1744,"title":{},"body":{"performance.html#事件節流":{}}}],["x8a08;&#x7b97;&#x5b8c;a.x,&#x518d;&#x8a08;&#x7b97",{"_index":3090,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x8a08;&#x7b97;&#x65b9;&#x5f0f;&#x4f86;&#x6c7a;&#x5b9a;&#xff09;&#x9054;&#x5230;&#x80fd;&#x5920;&#x89f8;&#x767c",{"_index":2940,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x8a08;&#x7b97;&#x6a5f;&#x8868;&#x793a;&#x5341;&#x9032;&#x5236;&#x662f;&#x63a1;&#x7528;&#x4e8c;&#x9032;&#x88fd;&#x8868;&#x793a;&#x7684;&#xff0c;&#x6240;&#x4ee5",{"_index":1988,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x8a08;&#x7b97;&#xff0c;&#x66f4;&#x5feb;&#x5c55;&#x73f",{"_index":1673,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x8a18;&#x5f97;&#x990a;&#x6210;&#x597d;&#x7fd2;&#x6163",{"_index":1266,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x8a2d;&#x5b9a;&#x5728",{"_index":2117,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8a2d;&#x5b9a;&#x5728;&#x60a8;&#x76ee;&#x524d;&#x9020;&#x8a2a;&#x4e4b;&#x7db2;&#x57df;&#x4e2d",{"_index":2106,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8a2d;&#x5b9a;&#x5728;&#x76ee;&#x524d;&#x9020;&#x8a2a;&#x7db2;&#x57df;&#x4ee5;&#x5916;&#x7684",{"_index":2113,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8a2d;&#x7f6e;&#x4e86;&#x4e00;&#x500b;cookie&#xff0c;&#x90a3;&#x9019;&#x500b;cookie&#x53ea;&#x80fd;&#x88ab",{"_index":2133,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8a2d;&#x8a08;&#x4e2d;&#xff0c;&#x6211;&#x5011;&#x90fd;&#x6703;&#x628a;&#x8cc7;&#x6599;&#x8a18;&#x9304;&#x5728",{"_index":2166,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8a72;&#x51fd;&#x6578;&#x6703;&#x7b49;&#x5f85;&#x5230;&#x51fd;&#x6578;&#x968a;&#x5217;&#x4e2d;&#x524d;&#x9762;&#x6240;&#x6709;&#x7684;&#x51fd;&#x6578;&#x904b;&#x884c;&#x5b8c;&#x7562;&#x4e4b;&#x5f8c;&#x624d;&#x6703;&#x904b;&#x884c",{"_index":435,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x8a72;&#x53c3;&#x6578;&#x5c0f;&#x65bc",{"_index":2525,"title":{},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x8a9e;&#x6cd5;&#x4f5c;&#x7528;&#x57df",{"_index":984,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x8a9e;&#x6cd5;&#x57fa;&#x672c;&#x55ae;&#x5143;&#x5316;(token",{"_index":981,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x8a9e;&#x6cd5;&#x89e3;&#x6790;&#x6642;&#x5c31;&#x5df2;&#x7d93;&#x78ba;&#x5b9a;&#x4f5c;&#x7528;&#x57df",{"_index":987,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x8aaa;&#x660e;&#xff1a",{"_index":3307,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x8abf;&#x6574;&#x539f;&#x578b;&#x7684;&#x65b9;&#x6cd5;&#x6642",{"_index":1346,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x8acb;&#x5225;&#x5132;&#x5b58",{"_index":2810,"title":{},"body":{"global/function.html#bind":{}}}],["x8acb;&#x6c42;&#x982d;&#x5c6c;&#x6027;&#x4e2d;&#xff0c;&#x670d;&#x52d9;&#x7aef;&#x6839;&#x64da;&#x6587;&#x4ef6;&#x6700;&#x5f8c;&#x4e00;&#x6b21;&#x4fee;&#x6539;&#x6642;&#x9593;&#x548c",{"_index":2948,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x8acb;&#x8f38;&#x51fa;1&#x5230;400&#x4e4b;&#x9593;&#x6240;&#x6709;&#x6578;&#x5b57;&#x4e2d;&#x5305;&#x542b;&#x7684;1&#x7684;&#x500b;&#x6578;&#xff0c;&#x6bd4;&#x5982;&#x6578;&#x5b57;1&#x4e2d;&#x5305;&#x542b;&#x4e86;&#x4e00;&#x500b;1",{"_index":3181,"title":{},"body":{"string/split.html#split":{}}}],["x8b8a;&#x5c0d;&#x8c61",{"_index":3057,"title":{},"body":{"operators/typeof.html#null":{}}}],["x8b8a;&#x6578",{"_index":1160,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x8b8a;&#x6578;&#x6703;&#x81ea;&#x52d5;&#x88ab;&#x63d0;&#x5347",{"_index":2032,"title":{},"body":{"variable.html#Hoisting":{}}}],["x8b8a;&#x6578;&#x7121;&#x6cd5;&#x88ab;&#x522a;&#x9664;&#xff0c;&#x5c6c;&#x6027;&#x624d;&#x53ef;&#x4ee5",{"_index":1159,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x8b8a;&#x6578;&#x7684;&#x4f5c;&#x7528;&#x57df;&#x5728;&#x51fd;&#x5f0f;&#x5167",{"_index":2028,"title":{"variable.html#變數的作用域在函式內":{}},"body":{}}],["x8b8a;&#x91cf",{"_index":3047,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x8b93;&#x8cc7;&#x6e90;&#x52a0;&#x8f09;&#x66f4;&#x5feb",{"_index":1682,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x8b93;&#x9023;&#x7e8c;&#x9375;&#x5165;&#x4e0d;&#x8981;&#x983b;&#x7e41;&#x89f8;&#x767c",{"_index":1741,"title":{},"body":{"performance.html#事件節流":{}}}],["x8cc7;&#x6e90;&#x9700;&#x8981;&#x591a;&#x7d1a;&#x5206;&#x985e;&#xff0c;&#x56e0;&#x6b64;&#x5f88;&#x5bb9;&#x6613;&#x5beb;&#x51fa;&#x591a;&#x7d1a;&#x7684",{"_index":121,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x8cd3;&#x8a9e",{"_index":108,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x8cd3;&#x8a9e;&#x201d;&#x7684;&#x7d50;&#x69cb;&#x3002",{"_index":110,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x8ce6;&#x503c;&#x6210;&#x4e00;&#x500b;&#x901a;&#x7528;&#x7684;&#x9810;&#x89bd;&#x5716;&#xff0c;&#x4e0b;&#x62c9;&#x6642;&#x5019;&#x518d;&#x52d5;&#x614b;&#x8ce6;&#x503c;&#x6210;&#x6b63;&#x5f0f;&#x7684;&#x5716;&#x7247;&#x3002;&#x5982;&#x4e0b;&#xff0c;preview.png&#x662f;&#x9810;&#x89bd;&#x5716;&#x7247;&#xff0c;&#x6bd4;&#x8f03;&#x5c0f;&#xff0c;&#x52a0;&#x8f09;&#x5f88;&#x5feb;&#xff0c;&#x800c;&#x4e14;&#x5f88;&#x591a;&#x5716;&#x7247;&#x90fd;&#x5171;&#x7528;&#x9019;&#x500b;preview.png&#xff0c;&#x52a0;&#x8f09;&#x4e00;&#x6b21;&#x5373;&#x53ef;&#x3002;&#x5f85;&#x9801;&#x9762;&#x4e0b;&#x62c9;&#xff0c;&#x5716;&#x7247;&#x986f;&#x793a;&#x51fa;&#x4f86;&#x6642;&#xff0c;&#x518d;&#x53bb;&#x66ff;&#x63db;src&#x70ba",{"_index":1699,"title":{},"body":{"performance.html#懶加載":{}}}],["x8ce6;&#x503c;&#x662f;&#x5f9e;&#x53f3;&#x5411;&#x5de6;,&#x6b64;&#x6642;a&#x6307;&#x5411;&#x4e00;&#x500b;&#x65b0;&#x5c0d;&#x8c61;&#x3002",{"_index":3091,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x8ce6;&#x503c;&#x662f;&#x8868;&#x9054;&#x5f0f",{"_index":1852,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x8ce6;&#x503c;&#x7684;&#x512a;&#x5148;&#x6027;&#x5f88;&#x4f4e;&#x53ea;&#x6709;3",{"_index":1091,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x8d77;&#x4e00;&#x500b;&#x670d;&#x52d9;&#x4f86;&#x9a57;&#x8b49;&#x5354;&#x5546;&#x7de9;&#x5b58;&#xff0c;&#x4ee3;&#x78bc;&#x5982;&#x4e0b;&#xff1a",{"_index":2952,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x8d77;&#x4e00;&#x500b;&#x670d;&#x52d9;&#x4f86;&#x9a57;&#x8b49;&#x5f37;&#x7de9;&#x5b58;&#x7684",{"_index":2896,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x8ddf",{"_index":1097,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x8f03;&#x5feb",{"_index":2503,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x8f09;&#x5165;&#x7de9;&#x5b58;&#x8cc7;&#x6e90;,&#x8acb;&#x6c42;&#x6c92;&#x6709;&#x88ab;&#x767c;&#x9001",{"_index":2263,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["x8f38;&#x5165",{"_index":3300,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x8f38;&#x5165;&#x5b57;&#x7b26;&#x4e32;&#x53ef;&#x4ee5;&#x5728;&#x524d;&#x9762;&#x6216;&#x8005;&#x5f8c;&#x9762;&#x5305;&#x542b;&#x591a;&#x9918;&#x7684;&#x7a7a;&#x683c;&#xff0c;&#x4f46;&#x662f;&#x53cd;&#x8f49;&#x5f8c;&#x7684;&#x5b57;&#x7b26;&#x4e0d;&#x80fd;&#x5305;&#x62ec;&#x3002",{"_index":3309,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x8f38;&#x5165;&#x5b8c;&#x89f8;&#x767c;&#x6587;&#x5b57;&#x4fee;&#x6539;&#x4e8b;&#x4ef6",{"_index":1738,"title":{},"body":{"performance.html#事件節流":{}}}],["x8f38;&#x51fa",{"_index":3185,"title":{},"body":{"string/split.html#split":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x8f38;&#x51fa;&#x7684;&#x662f",{"_index":3157,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x8f38;&#x51fa;&#x7684;&#x662f;&#x503c;(valu",{"_index":3165,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x8f38;&#x51fa;&#x7684;&#x662f;&#x5c6c",{"_index":3154,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x8f38;&#x51fa;&#x7684;&#x662f;&#x5c6c;&#x6027;&#x540d;&#x7a31;(key)&#xff0c;for&#x2026;of",{"_index":3164,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x8f49",{"_index":1971,"title":{},"body":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x8f49;&#x6210",{"_index":517,"title":{"copy.html#轉成-JSON-再轉回來":{}},"body":{}}],["x8f49;&#x6210;&#x6578;&#x5b57;&#x5f8c;&#x518d;&#x986f;&#x793a;&#xff0c;&#x5982;&#x4e0b;&#xff1a",{"_index":1969,"title":{},"body":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x8f49;&#x6578;&#x5b57",{"_index":1901,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x8f49;&#x70ba;&#x5c0f;&#x6578",{"_index":1546,"title":{},"body":{"num.html#補數字":{}}}],["x8fd4;&#x56de",{"_index":2545,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x9009;&#x9879;&#xff0c;vue",{"_index":1406,"title":{},"body":{"core.html#屬性特徵":{}}}],["x900f;&#x904e",{"_index":1223,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"api/promise.html#Promise":{}}}],["x900f;&#x904e;&#x5efa;&#x69cb;&#x5f0f;&#x4f86;&#x5efa;&#x7acb;&#x7684;&#x7269;&#x4ef6;&#xff0c",{"_index":1086,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x900f;&#x904e;&#x958b;&#x767c;&#x5de5;&#x5177;network&#x53ef;&#x4ee5;&#x770b;&#x7d50;&#x679c",{"_index":1229,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x900f;&#x904e;prototype&#x6240;&#x65b0;&#x589e;&#x7684;&#x5c6c;&#x6027",{"_index":1340,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x900f;&#x904e;setter&#x6539;&#x8b8a;total&#x7684;&#x503c",{"_index":1392,"title":{},"body":{"core.html#屬性特徵":{}}}],["x9010;&#x500b;&#x8b80;&#x53d6;&#x5b57;&#x7b26;&#x4e32;&#x4e2d;&#x7684;&#x6bcf;&#x500b;&#x55ae;&#x8a5e;&#xff0c;&#x4f9d;&#x6b21;&#x653e;&#x5165;&#x96d9;&#x7aef;&#x968a;&#x5217;&#x7684;&#x5c0d;&#x982d",{"_index":3312,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x9019;&#x500b",{"_index":1858,"title":{},"body":{"this.html#Callback":{}}}],["x9019;&#x500b;&#x5340;&#x57df;&#x7121;&#x6cd5;&#x547c;&#x53eb;&#x8b8a;&#x6578",{"_index":1434,"title":{},"body":{"core.html#const":{}}}],["x9019;&#x500b;&#x547d;&#x4ee4;&#xff0c",{"_index":112,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x9019;&#x500b;&#x57df;&#x4e0b;&#x7684;&#x7db2;&#x9801;&#x8b80;&#x53d6;&#xff0c;&#x9019;&#x5c31;&#x662f;&#x7b2c;&#x4e00;&#x65b9;cookie&#x3002",{"_index":2128,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x9019;&#x500b;&#x57df;&#x540d;&#x4e0b;&#x53ef;&#x67e5;&#x627",{"_index":148,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x9019;&#x500b;&#x57df;&#x8a2a;&#x554f;&#xff0c",{"_index":2135,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x9019;&#x500b;&#x589e;&#x5f37;&#x7684;&#x5c0d;&#x8c61;&#x63a1;&#x7528;&#x4e00;&#x500b;&#x73fe;&#x6709;&#x5de5;&#x5ee0;&#xff0c;&#x4e26;&#x5c07;&#x5176;&#x5305;&#x88dd;&#x4ee5;&#x5275;&#x5efa;&#x8fd4;&#x56de;&#x5e36;&#x6709",{"_index":2700,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9019;&#x500b;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x7b2c;&#x4e00;&#x500b;&#x5b57;&#x7b26;&#x662f;&#x201c;3&#x201d;&#xff0c;&#x5b83;&#x4e26;&#x4e0d;&#x662f;&#x57fa;&#x790e;&#x57fa;&#x6578;2&#x7684;&#x4e00;&#x500b;&#x6709;&#x6548;&#x6578;&#x5b57;&#x3002;&#x6240;&#x4ee5;&#x9019;&#x500b;&#x5b50;&#x5b57;&#x7b26;&#x4e32;&#x5c07;&#x88ab;&#x89e3;&#x6790;&#x70ba;&#x7a7a;&#x3002;&#x5982;&#x679c;&#x5b50;&#x5b57;&#x7b26;&#x4e32;&#x88ab;&#x89e3;&#x6790;&#x6210;&#x7a7a;&#x4e86;&#xff0c;&#x51fd;&#x6578;&#x5c07;&#x8fd4;&#x56de;&#x70ba;nan&#x3002",{"_index":2529,"title":{},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x9019;&#x500b;&#x6771;&#x897f;&#x662f",{"_index":2790,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x9019;&#x500b;&#x7269;&#x4ef6",{"_index":1893,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x9019;&#x500b;&#x914d;&#x7f6e;&#x5c31;&#x597d",{"_index":3128,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x9019;&#x500b;&#x968e;&#x6bb5;&#x6703;&#x9032;&#x5165",{"_index":2253,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x9019;&#x5169;&#x7a2e;&#x65b9;&#x6cd5;&#x90fd;&#x662f;&#x5c0d;&#x9663;&#x5217;&#x4e2d;&#x7684;&#x5143;&#x7d20;&#x9032;&#x884c;&#x8fed;&#x4ee3;&#x3002",{"_index":2493,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x9019;&#x53ea;&#x662f;javascript&#x9075;&#x5faa;iee",{"_index":1977,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x9019;&#x610f;&#x5473;&#x8457;&#x6211;&#x5011;&#x7e3d;&#x662f;&#x80fd;&#x5920;&#x5c07;&#x5c0d;&#x8c61;&#x5e8f;&#x5217;&#x5316;&#x70ba;json&#xff0c;&#x9019;&#x5c0d;&#x65bc;&#x5728;&#x6703;&#x8a71;&#x4e4b;&#x9593;&#x6301;&#x4e45;&#x5316;&#xff0c;&#x901a;&#x904e;http&#x6216;websockets&#x767c;&#x9001;&#x5b83;&#x5011;&#xff0c;&#x4e26;&#x5c07;&#x5b83;&#x5011;&#x653e;&#x5165;&#x6578;&#x64da;&#x5b58;&#x5132;&#x5f88;&#x91cd;&#x8981;&#x3002",{"_index":2696,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9019;&#x662f;&#x56e0;&#x70ba;&#x4e00;&#x822c;&#x4f86;&#x8aaa;&#xff0c;&#x6211;&#x5011;&#x4e0d;&#x9700;&#x8981;&#x9019;&#x9ebc;&#x505a;&#x3002",{"_index":2694,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9019;&#x6642;&#x5019;&#x518d;&#x4fee;&#x6539;obj2.b&#x4e5f;&#x4e0d;&#x6703;&#x5f71;&#x97ff;obj1",{"_index":515,"title":{},"body":{"copy.html#Object-assign":{}}}],["x9019;&#x6642;&#x5019;&#x6211;&#x5011;&#x6703;&#x5beb;&#x4e00;&#x4e9b;&#x7a0b;&#x5f0f;&#x4f86;&#x586b;&#x88dc;&#x67d0;&#x4e9b;&#x700f;&#x89bd;&#x5668;&#x4e0d;&#x652f;&#x63f4;&#x7684;&#x60c5;&#x6cc1;&#xff0c;&#x6211;&#x5011;&#x628a;&#x9019;&#x4e9b;&#x7a0b;&#x5f0f;&#x7a31;&#x505a",{"_index":1371,"title":{},"body":{"core.html#繼承":{}}}],["x9019;&#x6a23;&#x505a;&#x662f;&#x771f;&#x6b63;&#x7684",{"_index":519,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["x9019;&#x6a23;&#x7684;&#x5de5;&#x5177;&#x8fd4;&#x56d",{"_index":2688,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9019;&#x6a23;&#x7684;&#x6578;&#x64da;&#x8981;&#x5c55;&#x793a;&#x6642;&#xff0c;&#x5efa;&#x8b70;&#x4f7f;&#x7528",{"_index":1967,"title":{},"body":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x9019;&#x7a2e",{"_index":123,"title":{},"body":{"RESTfulAPI.html#動詞":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x9019;&#x7a2e;&#x6df1;&#x5ea6;&#x5d4c;&#x5957;&#x7684;&#x7e2e;&#x9032;&#x6703;&#x4f7f;&#x7570;&#x6b65;&#x5de5;&#x5ee0;&#x96e3;&#x4ee5;&#x95b1;&#x8b80;&#x548c;&#x6e2c;&#x8a66;&#x3002",{"_index":2685,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9019;&#x88e1;&#x50b3;&#x904e;&#x53bb;&#x7684",{"_index":452,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x9019;&#x88e1;&#x7528;slice&#x548c;substr&#x5747;&#x53ef",{"_index":1548,"title":{},"body":{"num.html#補數字":{}}}],["x901a;&#x904e;&#x4e8b;&#x4ef6;&#x5192;&#x6ce1",{"_index":280,"title":{},"body":{"event.html#代理":{}}}],["x901a;&#x904e;&#x6bcf;&#x500b;&#x5143;&#x7d20;&#x7684;&#x56de;&#x8abf;&#x51fd;&#x6578;&#x5c07;&#x5176;&#x6620;&#x5c04;&#x5230;&#x65b0;&#x7684;&#x5143;&#x7d20;&#x4e0a;&#xff0c;&#x6700;&#x7d42;&#x8fd4;&#x56de;&#x4e00;&#x500b;&#x65b0;&#x7684;&#x9663;&#x5217;&#x3002",{"_index":2494,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x9032;&#x4f4d",{"_index":1916,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x7684;1",{"_index":1906,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x7684;2",{"_index":1911,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x9032;&#x5165;&#x57f7;&#x884c;&#x5806;&#x758a",{"_index":1291,"title":{},"body":{"core.html#this":{}}}],["x9032;&#x5230;&#x4e0b;&#x4e00;&#x4f4d",{"_index":1908,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x9032;&#x884c;&#x540c;&#x503c;&#x6bd4;&#x8f03;&#x3002;&#x4ed6;&#x6709;&#x8457;&#x81ea;&#x5df1;&#x7684;&#x7279;&#x6b8a;&#x7528;&#x9014;&#xff0c;&#x4e0d;&#x61c9;&#x8aaa;&#x4ed6;&#x66f4;&#x5bec;&#x9b06;&#x6216;&#x66f4;&#x56b4;&#x683c;&#x65bc;&#x5176;&#x4ed6;&#x7b49;&#x65bc;&#x64cd;&#x4f5c;&#x7b26",{"_index":1589,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x9032;&#x968a",{"_index":3273,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x9032;&#x968e;&#x6982;&#x5ff5",{"_index":1316,"title":{},"body":{"core.html#this":{}}}],["x9047;&#x5230;&#x4ee5;&#x4e0a;&#x7684;&#x6a19;&#x9ede;&#x7b26;&#x865f",{"_index":1064,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x904b;&#x7b97;&#x5b50",{"_index":1089,"title":{"core.html#運算子":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x904b;&#x7b97;&#x5b50;&#x512a;&#x5148;&#x5e8f",{"_index":1090,"title":{"operators/precedence.html#運算子優先序":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x904b;&#x7b97;&#x5f0f;&#x8207;&#x904b;&#x7b97;&#x5b50",{"_index":1039,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{}}}],["x904b;&#x7b97;&#x7b26",{"_index":2379,"title":{},"body":{"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#拼接兩個陣列":{}}}],["x904b;&#x7b97;&#x7b26;&#x6bd4",{"_index":3084,"title":{"operators/precedence.html#運算符比-運算符高":{}},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x904b;&#x7b97;&#x7b26;&#x9ad8",{"_index":3085,"title":{"operators/precedence.html#運算符比-運算符高":{}},"body":{}}],["x904b;&#x7b97;&#x7b26;&#x9ad8;,&#x5148;&#x8a08;&#x7b97",{"_index":3087,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x904b;&#x884c;&#x7684",{"_index":2502,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x904d;&#x6b77;&#x6240;&#x6709;&#x5143;&#x7d20",{"_index":2470,"title":{},"body":{"array/array_methods.html#forEach":{}}}],["x904e;&#x4e86",{"_index":2912,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x904e;&#x6ffe;&#x7b26;&#x5408;&#x689d;&#x4ef6;&#x7684;&#x5143;&#x7d20;&#xff0c;&#x751f;&#x6210;&#x65b0;&#x9663;&#x5217",{"_index":2471,"title":{},"body":{"array/array_methods.html#filter":{}}}],["x9078;&#x64c7;&#x6027",{"_index":1864,"title":{},"body":{"this.html#Callback":{}}}],["x907f;&#x514d;&#x591a;&#x7d1a",{"_index":120,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x9084;&#x80fd;&#x4e0d;&#x88ab;&#x8ce6;&#x503c",{"_index":1424,"title":{},"body":{"core.html#const":{}}}],["x908f;&#x8f2f;&#x904b;&#x7b97;&#x5b50;&#x53ca;&#x51fd;&#x5f0f;&#x9810;&#x8a2d;&#x503c",{"_index":1127,"title":{"core.html#邏輯運算子及函式預設值":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["x90fd;&#x4e0d;&#x6703;&#x512a;&#x5148;&#x57f7;&#x884c",{"_index":1028,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x90fd;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x93c8;&#x63a5;&#x7684;&#x65b9;&#x5f0f;&#x4e0d;&#x65b7;&#x7684;&#x9032;&#x884c;&#x4e0b;&#x4e00;&#x500b;&#x4efb;&#x52d9",{"_index":2245,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x90fd;&#x5728",{"_index":147,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x90fd;&#x662f;&#x51fd;&#x5f0f;&#x8868;&#x9054;&#x5f0f",{"_index":1241,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x90fd;&#x662f;&#x7121;&#x9650;&#x5faa;&#x74b0;&#x7684;&#x4e8c;&#x9032;&#x5236;&#x4e86;&#xff0c;&#x6240;&#x4ee5;&#x5728;&#x5c0f;&#x6578;&#x4f4d;&#x672b;&#x5c3e;&#x8655;&#x9700;&#x8981;&#x5224;&#x65b7;&#x662f;&#x5426;&#x9032;&#x4f4d;&#xff08;&#x5c31;&#x548c;&#x5341;&#x9032;&#x5236;&#x7684;&#x56db;&#x6368;&#x4e94;&#x5165;&#x4e00;&#x6a23;&#xff09;&#x3002",{"_index":1987,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x90fd;&#x6703;&#x662f",{"_index":1085,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x932f;&#x8aa4",{"_index":1035,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x932f;&#x8aa4;&#xff0c;&#x53ea;&#x662f",{"_index":1033,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x9375;&#x76e4;&#x4e8b;&#x4ef6",{"_index":1735,"title":{},"body":{"performance.html#事件節流":{}}}],["x93c8;&#x63a5",{"_index":2242,"title":{"api/promise.html#鏈接":{}},"body":{}}],["x9589;&#x5305",{"_index":1280,"title":{"core.html#閉包-Closure":{}},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["x958b;&#x555f;&#x5354;&#x5546;&#x7de9;&#x5b58",{"_index":2953,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x958b;&#x59cb",{"_index":1058,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x958b;&#x982d;&#x7684;&#x4e00;&#x4e32;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x8aaa;&#x660e;&#x6b64;&#x6642;&#x5354;&#x5546;&#x7de9;&#x5b58;&#x7684;&#x6821;&#x9a57;&#x662f;&#x5f31;&#x6821;&#x9a57;&#x7684;&#xff0c;&#x53ea;&#x6709;&#x670d;&#x52d9;&#x5668;&#x4e0a;&#x7684;&#x6587;&#x4ef6;&#x5dee;&#x7570;&#xff08;&#x6839;&#x64da",{"_index":2939,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x958b;&#x982d;&#x7684;&#x5c6c;&#x6027;&#x503c;&#xff1f",{"_index":1706,"title":{},"body":{"performance.html#懶加載":{}}}],["x958b;&#x982d;&#x7684;&#x5c6c;&#x6027;&#x700f;&#x89bd;&#x5668;&#x6e32;&#x67d3;&#x7684;&#x6642;&#x5019;&#x6703;&#x5ffd;&#x7565;&#x6389;&#xff0c;&#x63d0;&#x9ad8;&#x6e32;&#x67d3;&#x6027;&#x80fd;&#x3002",{"_index":1710,"title":{},"body":{"performance.html#懶加載":{}}}],["x958b;&#x982d;&#xff0c;&#x56e0;&#x70ba",{"_index":1709,"title":{},"body":{"performance.html#懶加載":{}}}],["x95dc;&#x4fc2;&#x662f",{"_index":1866,"title":{},"body":{"this.html#Callback":{}}}],["x95dc;&#x4fc2;&#x800c;&#x4e0d;&#x662f",{"_index":2668,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x95dc;&#x6ce8;&#x5728;&#x54ea;&#x500b;&#x7269;&#x4ef6;&#x4e0b;&#x547c;&#x53eb",{"_index":1296,"title":{},"body":{"core.html#this":{}}}],["x95dc;&#x9375;&#x5b57;&#x8a2d;&#x70ba;&#x7d66;&#x5b9a;&#x7684;&#x53c3;&#x6578;&#xff0c;&#x4e26;&#x5728;&#x547c;&#x53eb;&#x6642;&#xff0c;&#x5e36;&#x6709;&#x63d0;&#x4f9b;&#x4e4b;&#x524d;&#xff0c;&#x7d66;&#x5b9a;&#x9806;&#x5e8f;&#x7684;&#x53c3;&#x6578;&#x3002",{"_index":2786,"title":{},"body":{"global/function.html#call、apply、bind":{}}}],["x9632;&#x6b62;&#x64f4;&#x5145",{"_index":1381,"title":{},"body":{"core.html#屬性特徵":{}}}],["x9650;&#x5236;&#x4f5c;&#x7528;&#x57df",{"_index":1283,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["x9650;&#x5236;&#x8b8a;&#x6578;&#x7684;&#x4f5c;&#x7528;&#x57df",{"_index":1264,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x9663;&#x5217",{"_index":1198,"title":{"core.html#陣列":{}},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"this.html#bind-apply-call":{},"statements/for.html#for…of與for…in的差別":{}}}],["x9663;&#x5217;&#x65b9;&#x6cd5",{"_index":2491,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x9663;&#x5217;&#x662f;&#x7269;&#x4ef6;&#x578b;&#x5225;&#x7684;&#x4e00;&#x7a2",{"_index":1199,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x9663;&#x5217;&#x7684;&#x539f;&#x578b",{"_index":1209,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x9663;&#x5217;6",{"_index":1202,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x9664;&#x4e86;&#x7b49;&#x65bc;&#x64cd;&#x4f5c;&#x7b26;&#xff0c;&#x9084;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":1588,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x9673;&#x8ff0;&#x5f0f",{"_index":1036,"title":{"core.html#陳述式-表達式":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{}}}],["x9673;&#x8ff0;&#x5f0f;&#x8207;&#x5ba3;&#x544a;&#x5206;&#x985",{"_index":1038,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{}}}],["x968a;&#x5217",{"_index":432,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x968e;&#x6bb5;&#x8d77;&#x4f5c;&#x7528;&#x3002",{"_index":1052,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x968e;&#x78bc",{"_index":1982,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x96b1;&#x6027;&#x7684;&#x8f49;&#x63db",{"_index":1074,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x96d6;&#x7136;&#x4e5f;&#x70ba;&#x6bcf;&#x4e00;&#x500b;&#x5143;&#x7d20;&#x6e96;&#x5099;&#x4e86;&#x56de;&#x8abf;&#x51fd;&#x6578;&#xff0c;&#x4f46;&#x537b;&#x4e0d;&#x8fd4;&#x56de;&#x65b0;&#x7684;&#x9663;&#x5217;&#x3002",{"_index":2495,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x96d6;&#x7136;obj1&#x8ddf;obj2&#x662f;&#x4e0d;&#x540c;&#x7269;&#x4ef6",{"_index":509,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x96d9;&#x7aef;&#x968a;&#x5217;&#xff08;deque&#xff09",{"_index":3297,"title":{"string/queue.html#雙端隊列（Deque）":{}},"body":{"string/queue.html#時間複雜度":{}}}],["x96d9;&#x7cbe;&#x5ea6;&#x3002;&#x516d;&#x5341;&#x56db;&#x4f4d;&#x4e2d;&#x7b26;&#x865f;&#x4f4d;&#x4f54;&#x4e00;&#x4f4d;&#xff0c;&#x6574;&#x6578;&#x4f4d;&#x4f54;&#x5341;&#x4e00;&#x4f4d;&#xff0c;&#x5176;&#x9918;&#x4e94;&#x5341;&#x4e8c;&#x4f4d;&#x90fd;&#x70ba;&#x5c0f;&#x6578;&#x4f4d;&#x3002",{"_index":1984,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x9700;&#x6ce8;&#x610f;&#x57f7;&#x884c;&#x7d50;&#x679c",{"_index":1063,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x975c;&#x614b;&#x4f5c;&#x7528;&#x57df",{"_index":985,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x975c;&#x614b;&#x8cc7;&#x6e90;&#x7684;&#x58d3;&#x7e2e;&#x5408;&#x4f75;&#xff08;j",{"_index":1676,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x975c;&#x614b;&#x8cc7;&#x6e90;&#x7de9;&#x5b58;&#xff08;&#x8cc7;&#x6e90;&#x540d;&#x7a31;&#x52a0",{"_index":1679,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x975e;&#x540c;&#x6b65;&#x57f7;&#x884c;&#x5b8c;&#x7562;&#xff08;&#x7121;&#x8ad6;&#x662f;&#x5426;&#x6b63;&#x78ba;&#x5b8c;&#x6210;&#xff09",{"_index":2224,"title":{},"body":{"api/promise.html#Promise":{}}}],["x975e;&#x540c;&#x6b65;&#x884c;&#x70ba;&#x5148;&#x79fb;&#x81f3;&#x4e8b;&#x4ef6;&#x4f47;&#x5217",{"_index":1024,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x975e;&#x7acb;&#x523b;&#x57f7;&#x884c",{"_index":1313,"title":{},"body":{"core.html#this":{}}}],["x97ff;&#x61c9;&#x982d;&#x4e2d;&#xff0c;&#x7b2c;&#x4e8c;&#x6b21;&#x767c;&#x8d77;&#x8acb;&#x6c42;&#x7684;&#x6642;&#x5019;&#xff0c;&#x8acb;&#x6c42;&#x982d;&#x6703;&#x5e36;&#x4e0a;&#x4e0a;&#x4e00;&#x6b21;&#x97ff;&#x61c9;&#x982d;&#x4e2d;&#x7684",{"_index":2946,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x9801;&#x9762;&#x7684;&#x5168;&#x90e8;&#x8cc7;&#x6e90;&#x52a0;&#x8f09;&#x5b8c;&#x624d;&#x6703;&#x57f7;&#x884c;&#xff0c;&#x5305;&#x62ec;&#x5716;&#x7247;&#x3001;&#x8996;&#x983b;&#x7b49",{"_index":1729,"title":{},"body":{"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["x9806;&#x5e8f;&#x57f7;&#x884c;&#x53c3;&#x6578;&#x6240;&#x4ee5;&#x662f;1",{"_index":1315,"title":{},"body":{"core.html#this":{}}}],["x9806;&#x5e8f;&#x57f7;&#x884c;&#x53c3;&#x6578;&#x6240;&#x4ee5;&#x662f;6",{"_index":1314,"title":{},"body":{"core.html#this":{}}}],["x9810;&#x8a2d;&#x503c;&#x70ba",{"_index":1128,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x9810;&#x8a2d;&#x7684;session&#x5be6;&#x73fe;&#x65b9;&#x5f0f;&#x662f;&#x7531;cookie&#x4f86;&#x5be6;&#x4f5c;&#x7684;(&#x5229;&#x7528;&#x52a0;&#x5bc6;&#x8207;&#x8a2d;&#x5b9a;&#x904e;&#x671f;&#x6642;&#x9593;)&#x3002",{"_index":2182,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x982d;&#x5c6c;&#x6027;&#x672a;&#x66f4;&#x65b0;&#xff0c;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#x700f;&#x89bd;&#x5668;&#x76f4;&#x63a5;&#x4f7f;&#x7528;&#x4e86;&#x5f37;&#x7de9;&#x5b58;&#xff0c;&#x5be6;&#x969b;&#x6c92;&#x6709;&#x767c;&#x9001;&#x8acb;&#x6c42;&#x3002",{"_index":2911,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x985e;&#x9663;&#x5217;&#x4e26;&#x6c92;&#x6709;&#x7d55;&#x5927;&#x591a;&#x6578;&#x9663;&#x5217;&#x53ef;&#x4f7f;&#x7528;&#x7684;&#x65b9;&#x6cd5",{"_index":1279,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["x986f;&#x6027;&#x7684;&#x8f49;&#x63db",{"_index":1073,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x9996;&#x5148;&#x53bb;&#x9664;&#x5b57;&#x7b26;&#x4e32;&#x5de6;&#x53f3;&#x7a7a;&#x683c",{"_index":3311,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x9a57;&#x8b49;&#x6587;&#x4ef6;&#x662f;&#x5426;&#x4fee;&#x6539;&#x3002",{"_index":2960,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x9ad8;&#x7d1a;&#x5de5;&#x5ee0",{"_index":2697,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9ed1;&#x8272",{"_index":1106,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x9ede",{"_index":1140,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x9ede;&#x64ca;&#x4e8b;&#x4ef6",{"_index":279,"title":{},"body":{"event.html#代理":{}}}],["x_",{"_index":2584,"title":{},"body":{"cases/replace.html":{}}}],["xa0",{"_index":1207,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["xd7",{"_index":1993,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["xff08;&#x82f1;&#x6587;&#xff1a;immedi",{"_index":1254,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["xff09",{"_index":1690,"title":{},"body":{"performance.html#優化原則和方向":{},"api/promise.html#Promise":{}}}],["xff0c",{"_index":3156,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["xff0c;&#x4e0d;&#x50c5;&#x53ef;&#x4ee5;&#x8a18;&#x9304;&#x4f60;&#x7684;&#x9ede;&#x9910;&#x865f;&#x78bc;&#xff0c;&#x9084;&#x53ef;&#x4ee5;&#x8a18;&#x61b6;&#x4f60;&#x7684;&#x9910;&#x9ede;&#x7d30;&#x7bc0;&#xff0c;&#x6d88;&#x8cbb;&#x8a18;&#x9304;&#x548c;&#x9ede;&#x9910;&#x559c;&#x597d;&#x2026;&#x7b49;&#x3002;&#x800c;&#x9019;&#x5c31;&#x89e3;&#x6c7a;&#x865f;&#x78bc;&#x724c;&#x907a;&#x5931;&#x9818;&#x4e0d;&#x5230;&#x9910;&#x7684;&#x554f;&#x984c;&#xff0c;&#x4f46;&#x662f;&#x4ed6;&#x4e0d;&#x662f;&#x8a18;&#x61b6;&#x4f60;&#x5e25;&#x6c23;&#x5f97;&#x7a7f;&#x642d;&#x6216;&#x9577;&#x50cf;&#xff0c;&#x800c;&#x662f;&#x9760;&#x8457;&#x6240;&#x8b02;&#x7684;sess",{"_index":2157,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["xff0c;&#x4e0d;&#x7ba1;&#x662f;&#x8ab0;&#x547c;&#x53eb;&#x4ed6;&#xff0c;&#x6216;&#x662f;&#x88ab;&#x5982;&#x4f55",{"_index":2804,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["xff0c;&#x4e14;&#x8fd4;&#x56de;&#x7684;&#x65b0;&#x9663;&#x5217;&#x53ef;&#x4ee5;&#x8b93;&#x4f60;&#x7e7c;&#x7e8c;&#x4f7f;&#x7528",{"_index":2504,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["xff0c;&#x4e26;&#x52a0;&#x8f09;&#x700f;&#x89bd;&#x5668;&#x7de9;&#x5b58;&#x3002",{"_index":2950,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["xff0c;&#x4ed6;&#x53ef;&#x4ee5;&#x8b93;&#x539f;&#x59cb;&#x9663;&#x5217;&#x7684;&#x6bcf;&#x4e00;&#x500b;&#x503c;&#x90fd;&#x6620;&#x5c04;&#x5230;&#x65b0;&#x7684;&#x9663;&#x5217;&#x4e0a;&#x3002",{"_index":2497,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["xff0c;&#x4ed6;&#x6c38;&#x9060;&#x90fd;&#x662f;&#x62ff;&#x5230;&#x539f;&#x5148;&#x4f5c;&#x7528;&#x57df;&#x7684",{"_index":2805,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["xff0c;&#x4ee3;&#x8868;&#x7684;&#x662f",{"_index":2930,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["xff0c;&#x4f46;&#x4f3c;&#x4e4e;&#x5f88;&#x591a;&#x4eba;&#x90fd;&#x6709;&#x4e00;&#x7a2e;&#x5f77;&#x5f7f;&#x700f;&#x89bd;&#x5668;&#x95dc;&#x6389;session&#x4e5f;&#x6703;&#x6d88;&#x5931;&#x7684;&#x932f;&#x89ba;&#xff0c;&#x4f46;&#x672c;&#x8cea;&#x4e0a;&#x4e26;&#x975e;&#x5982;&#x6b64;&#xff0c;&#x5c31;&#x50cf;&#x6703;&#x54e1;&#x5361;&#xff0c;&#x9664;&#x975e;&#x4f60;&#x4e3b;&#x52d5;&#x63d0;&#x51fa;&#x92b7;&#x5361;&#xff0c;&#x5426;&#x5247;&#x5e97;&#x5bb6;&#x4e0d;&#x6703;&#x522a;&#x9664;&#x9867;&#x5ba2;&#x8cc7;&#x6599;&#xff0c;&#x9019;&#x4ef6;&#x4e8b;&#x60c5;&#x5c0d;session&#x4f86;&#x8aaa;&#x4e5f;&#x5982;&#x51fa;&#x4e00;&#x8f4d;&#xff0c;&#x9664;&#x975e;&#x901a;&#x77e5;server&#x522a;&#x9664;session&#xff0c;&#x5426;&#x5247;server&#x7aef;&#x6703;&#x4e00;&#x76f4;&#x4fdd;&#x7559;&#x4f86;&#x4fdd;&#x6301;&#x6703;&#x8a71;&#x66a2;&#x901a;&#xff0c;&#x4f46;&#x700f;&#x89bd;&#x5668;&#x5f9e;&#x4f86;&#x4e0d;&#x6703;&#x4e3b;&#x52d5;&#x5728;&#x95dc;&#x9589;&#x524d;&#x901a;&#x77e5;&#x670d;&#x52d9;&#x5668;&#x8981;&#x95dc;&#x9589",{"_index":2172,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["xff0c;&#x547c;&#x53eb;&#x662f;&#x5728;&#x7269;&#x4ef6;&#x4e0b;&#x8abf;&#x7528;&#xff0c;&#x90a3;&#x9ebc",{"_index":1839,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["xff0c;&#x5728",{"_index":2872,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff0c;&#x5728;&#x700f;&#x89bd;&#x5668;&#x767c;&#x8d77;&#x8acb;&#x6c42;&#x6642;&#xff0c;&#x6703;&#x6839;&#x64da;&#x7cfb;&#x7d71;&#x6642;&#x9593;&#x548c",{"_index":2880,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff0c;&#x5982;&#x679c;&#x4eca;&#x5929;&#x907a;&#x5931;&#x6216;&#x662f;&#x88ab;&#x5225;&#x4eba;&#x5e79;&#x8d70;&#xff0c;&#x90a3;&#x4f60;&#x7684;&#x9910;&#x9ede;&#x5c31;&#x6703;&#x88ab;&#x5176;&#x4ed6;&#x4eba;&#x7d66;&#x9818;&#x8d70;&#xff0c;&#x66f4;&#x5225;&#x63d0;&#x95dc;&#x9589;&#x700f;&#x89bd;&#x5668;&#x4e4b;&#x5f8c;cookie&#x5c31;&#x6703;&#x6709;&#x88ab;&#x6e05;&#x9664;&#x7684;&#x98a8;&#x96aa;&#x4e86;&#x3002",{"_index":2149,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["xff0c;&#x5b83;&#x662f",{"_index":332,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["xff0c;&#x5b83;&#x662f;&#x66f4;&#x7cbe;&#x78ba;&#x800c;&#x4e14;&#x548c",{"_index":1593,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["xff0c;&#x5c6c;&#x6027;c&#x70ba;o3.c&#x7684;&#x503c;&#xff0c;&#x6700;&#x5f8c;&#x4e00;&#x500b;&#x51fa;&#x73fe;&#x7684;&#x5c6c;&#x6027;c&#x3002",{"_index":2978,"title":{},"body":{"object/assign.html#有相同屬性時合併物件區段":{}}}],["xff0c;&#x6548;&#x679c;&#x548c",{"_index":2918,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff0c;&#x662f;&#x570b;&#x969b;&#x6a19;&#x6e96;&#x5316;&#x7d44;&#x7e54;&#x7684;&#x65e5;&#x671f;&#x548c;&#x6642;&#x9593;&#x7684;&#x8868;&#x793a;&#x65b9;&#x6cd5",{"_index":2728,"title":{},"body":{"global/date.html#Date-prototype-toISOString":{}}}],["xff0c;&#x7b2c;&#x4e00;&#x6b21;&#x8acb;&#x6c42;&#x670d;&#x52d9;&#x7aef;&#x6703;&#x628a;&#x8cc7;&#x6e90;&#x7684;&#x6700;&#x5f8c;&#x4fee;&#x6539;&#x6642;&#x9593;&#x653e;&#x5230",{"_index":2945,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["xff0c;&#x7b2c;&#x4e8c;&#x500b;for&#x8ff4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x70ba;o(n2)&#xff0c",{"_index":3287,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["xff0c;&#x7de9;&#x5b58;&#x5728",{"_index":1714,"title":{},"body":{"performance.html#DOM-查詢做緩存":{}}}],["xff0c;&#x800c;&#x975e;&#x4e00;&#x8a00;&#x4e0d;&#x5408;&#x5c31",{"_index":2795,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["xff0c;&#x8017;&#x8cbb;&#x6027;&#x80fd",{"_index":1712,"title":{},"body":{"performance.html#DOM-查詢做緩存":{}}}],["xff0c;&#x8868;&#x793a;&#x53c3;&#x8003;&#x53e6;&#x4e00;&#x500b",{"_index":135,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["xff0c;&#x9019;&#x6a23;&#x5728;&#x904b;&#x884c;&#x5230;console.log(j)&#x7684;&#x6642;&#x5019;&#x986f;&#x793a;&#x7684;&#x5c31;&#x662f;&#x6bcf;&#x6b21;&#x5faa;&#x74b0;&#x6642;&#x7684;i&#x503c",{"_index":444,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["xff0c;&#x904e;&#x671f;&#x6642;&#x9593;&#x70ba",{"_index":2908,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff1a;&#x4e0d;&#x4f7f;&#x7528;&#x5f37;&#x7de9;&#x5b58;&#xff0c;&#x9700;&#x8981;&#x8207;&#x670d;&#x52d9;&#x5668;&#x9a57;&#x8b49;&#x7de9;&#x5b58;&#x662f;&#x5426;&#x65b0;&#x9ba",{"_index":2887,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff1a;&#x4e8b;&#x4ef6;&#x5df2;&#x7d93;&#x57f7;&#x884c;&#x5b8c;&#x7562;&#x4e14;&#x6210;&#x529f;&#x64cd;&#x4f5c;&#xff0c;&#x56de;&#x50b3",{"_index":2227,"title":{},"body":{"api/promise.html#Promise":{}}}],["xff1a;&#x4e8b;&#x4ef6;&#x5df2;&#x7d93;&#x57f7;&#x884c;&#x5b8c;&#x7562;&#x4f46;&#x64cd;&#x4f5c;&#x5931;&#x6557;&#xff0c;&#x56de;&#x50b3",{"_index":2229,"title":{},"body":{"api/promise.html#Promise":{}}}],["xff1a;&#x4e8b;&#x4ef6;&#x5df2;&#x7d93;&#x904b;&#x884c;&#x4e2d;&#xff0c;&#x5c1a;&#x672a;&#x53d6;&#x5f97;&#x7d50;&#x679c",{"_index":2226,"title":{},"body":{"api/promise.html#Promise":{}}}],["xff1a;&#x7981;&#x6b62;&#x4f7f;&#x7528;&#x7de9;&#x5b58;&#xff08;&#x5305;&#x62ec;&#x5354;&#x5546;&#x7de9;&#x5b58;&#xff09;&#xff0c;&#x6bcf;&#x6b21;&#x90fd;&#x5411;&#x670d;&#x52d9;&#x5668;&#x8acb;&#x6c42;&#x6700;&#x65b0;&#x7684;&#x8cc7;&#x6e90",{"_index":2888,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff1a;&#x8072;&#x660e;&#x5373;&#x57f7;&#x884c;&#x7684;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#xff09;&#x52a0;&#x9589;&#x5305",{"_index":442,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["xff1b",{"_index":438,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["xff1b;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#x6240;&#x6709;&#x50b3;&#x905e;&#x7d66;settimeout&#x7684;&#x56de;&#x8abf;&#x65b9;&#x6cd5;&#x90fd;&#x6703;&#x5728",{"_index":436,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["xff1b;&#x5728;&#x8fed;&#x4ee3",{"_index":3153,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["xff1f",{"_index":2788,"title":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}},"body":{}}],["xffe3;&#xffe3;&#xffe3;&#xffe3",{"_index":1994,"title":{},"body":{"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["xhr",{"_index":156,"title":{},"body":{"ajax.html":{}}}],["xhr.onreadystatechang",{"_index":160,"title":{},"body":{"ajax.html":{}}}],["xhr.open",{"_index":159,"title":{},"body":{"ajax.html":{}}}],["xhr.readyst",{"_index":162,"title":{},"body":{"ajax.html":{}}}],["xhr.send",{"_index":166,"title":{},"body":{"ajax.html":{}}}],["xhr.statu",{"_index":163,"title":{},"body":{"ajax.html":{}}}],["xmlhttprequest",{"_index":158,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["xmlhttprequest.readyst",{"_index":168,"title":{},"body":{"ajax.html":{}}}],["xmlhttprequest請求，從而克服了ajax",{"_index":228,"title":{},"body":{"ajax.html":{}}}],["xw50eztmfnqg0wuxkeiaz",{"_index":1830,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["xyz",{"_index":31,"title":{},"body":{"RegExp.html":{}}}],["y",{"_index":351,"title":{},"body":{"closures.html":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"object/create.html":{}}}],["youreasycard",{"_index":1785,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["youreasycard2",{"_index":1786,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["yyyi",{"_index":864,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["z",{"_index":1574,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["z0",{"_index":27,"title":{},"body":{"RegExp.html":{}}}],["za",{"_index":26,"title":{},"body":{"RegExp.html":{}}}]],"pipeline":["stemmer"]},"store":{"RegExp.html":{"title":"正規表達式 regexp","path":"\\javascript\\RegExp.html","body":"正規表達式 2019年JS正则大全(常用) js正则表达式，限1-2位整数，或者至多含有两位小数 1 2 //1、只能输入数字或者小数点 仅整数,整数加小数 var reg1= /(^[0-9]1,2$)|(^[0-9]1,2[\\.]1[0-9]1,2$)/ ; email 1 2 3 var firstRegExp = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/ ; console .log(firstRegExp.test( 'jacob.hsu.tw@gmail.com' )); //true console .log(firstRegExp.test( 'jacob.hsu.tw' )); //false 規表示式的特定字元 說明 等效的正規表示式 \\d 數字 [0-9] \\D 非數字 [^0-9] \\w 數字、字母、底線 [a-zA-Z0-9_] \\W 非 \\w [^a-zA-Z0-9_] \\s 空白字元 [ \\r\\t\\n\\f] \\S 非空白字元 [^ \\r\\t\\n\\f] [xyz] 比對中括弧內的任一個字元 /[ecm]/ 可比對 “welcome” 中的 “e” 或 “c” 或 “m” [^xyz] 比對不在中括弧內出現的任一個字元 /[^ecm]/ 可比對 “welcome” 中的 “w”、”l”、”o”，可見出其與 [xyz] 功能相反。（同時請注意 /^/ 與 [^] 之間功能的不同。） match String.prototype.match() 1 2 3 4 const pa = '賓夕法尼亞州是美國的州份之一，正式名稱為「賓夕法尼亞邦」(Commonwealth of Pennsylvania)' ; const pa_us = pa.match( /\\((.+?)\\)/g ) // [\"(Commonwealth of Pennsylvania)\"] const res = pa_us[ 0 ].replace( ')' , '' ).substring( 1 ); console .log(res) // \"Commonwealth of Pennsylvania\""},"RegExp.html#match":{"title":"match","path":"\\javascript\\RegExp.html#match","body":"String.prototype.match() 1 2 3 4 const pa = &apos;&#x8CD3;&#x5915;&#x6CD5;&#x5C3C;&#x4E9E;&#x5DDE;&#x662F;&#x7F8E;&#x570B;&#x7684;&#x5DDE;&#x4EFD;&#x4E4B;&#x4E00;&#xFF0C;&#x6B63;&#x5F0F;&#x540D;&#x7A31;&#x70BA;&#x300C;&#x8CD3;&#x5915;&#x6CD5;&#x5C3C;&#x4E9E;&#x90A6;&#x300D;(Commonwealth of Pennsylvania)&apos; ; const pa_us = pa.match( /\\((.+?)\\)/g ) // [(Commonwealth of Pennsylvania)] const res = pa_us[ 0 ].replace( &apos;)&apos; , &apos;&apos; ).substring( 1 ); console .log(res) // Commonwealth of Pennsylvania"},"RESTfulAPI.html":{"title":"RESTful API","path":"\\javascript\\RESTfulAPI.html","body":"RESTful 是目前最流行的 API 設計規範，用於 Web 數據接口的設計。 動詞 動詞通常就是五種 HTTP 方法，對應 CRUD 操作。 POST：新建（Create） GET：讀取（Read） PUT：更新（Update） PATCH：更新（Update），通常是部分更新 DELETE：刪除（Delete） 動詞 + 賓語 RESTful 的核心思想就是，客戶端發出的數據操作指令都是”動詞 + 賓語”的結構。 比如， GET /articles 這個命令， GET 是動詞， /articles 是賓語。 使用複數 URL 建議都使用複數 URL，比如 GET /articles/2 要好於 GET /article/2 。 避免多級 URL 資源需要多級分類，因此很容易寫出多級的 URL，比如獲取某個作者的某一類文章。 GET /authors/12/categories/2 這種 URL 不利於擴展，語義也不明確 更好的做法是，除了第一級，其他級別都用查詢字符串表達。 GET /authors/12?categories=2 狀態碼 1xx：相關信息 2xx：操作成功 3xx：重定向 4xx：客戶端錯誤 5xx：服務器錯誤 API 用不到301狀態碼（永久重定向）和302狀態碼（暫時重定向，307也是這個含義），因為它們可以由應用級別返回，瀏覽器會直接跳轉，API 級別可以不考慮這兩種情況。 API 用到的3xx狀態碼，主要是 303 See Other ，表示參考另一個 URL。它與302和307的含義一樣，也是”暫時重定向”，區別在於302和307用於GET請求，而303用於POST、PUT和DELETE請求。收到303以後，瀏覽器不會自動跳轉，而會讓用戶自己決定下一步怎麼辦。 下面是一個例子。 1 2 HTTP/ 1.1 303 See Other Location: /api/ orders/ 12345 HATEOAS 提供鏈接 API 的使用者未必知道，URL 是怎麼設計的。 一個解決方法就是，在回應中，給出相關鏈接，便於下一步操作。這樣的話，用戶只要記住一個 URL，就可以發現其他的 URL。這種方法叫做 HATEOAS。 例 GitHub 的 API 都在 api.github.com 這個域名下可查找 References https://blog.florimondmanca.com/restful-api-design-13-best-practices-to-make-your-users-happy http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html"},"RESTfulAPI.html#動詞":{"title":"&#x52D5;&#x8A5E;","path":"\\javascript\\RESTfulAPI.html#動詞","body":"&#x52D5;&#x8A5E;&#x901A;&#x5E38;&#x5C31;&#x662F;&#x4E94;&#x7A2E; HTTP &#x65B9;&#x6CD5;&#xFF0C;&#x5C0D;&#x61C9; CRUD &#x64CD;&#x4F5C;&#x3002; POST&#xFF1A;&#x65B0;&#x5EFA;&#xFF08;Create&#xFF09; GET&#xFF1A;&#x8B80;&#x53D6;&#xFF08;Read&#xFF09; PUT&#xFF1A;&#x66F4;&#x65B0;&#xFF08;Update&#xFF09; PATCH&#xFF1A;&#x66F4;&#x65B0;&#xFF08;Update&#xFF09;&#xFF0C;&#x901A;&#x5E38;&#x662F;&#x90E8;&#x5206;&#x66F4;&#x65B0; DELETE&#xFF1A;&#x522A;&#x9664;&#xFF08;Delete&#xFF09; &#x52D5;&#x8A5E; + &#x8CD3;&#x8A9E; RESTful &#x7684;&#x6838;&#x5FC3;&#x601D;&#x60F3;&#x5C31;&#x662F;&#xFF0C;&#x5BA2;&#x6236;&#x7AEF;&#x767C;&#x51FA;&#x7684;&#x6578;&#x64DA;&#x64CD;&#x4F5C;&#x6307;&#x4EE4;&#x90FD;&#x662F;&#x201D;&#x52D5;&#x8A5E; + &#x8CD3;&#x8A9E;&#x201D;&#x7684;&#x7D50;&#x69CB;&#x3002; &#x6BD4;&#x5982;&#xFF0C; GET /articles &#x9019;&#x500B;&#x547D;&#x4EE4;&#xFF0C; GET &#x662F;&#x52D5;&#x8A5E;&#xFF0C; /articles &#x662F;&#x8CD3;&#x8A9E;&#x3002; &#x4F7F;&#x7528;&#x8907;&#x6578; URL &#x5EFA;&#x8B70;&#x90FD;&#x4F7F;&#x7528;&#x8907;&#x6578; URL&#xFF0C;&#x6BD4;&#x5982; GET /articles/2 &#x8981;&#x597D;&#x65BC; GET /article/2 &#x3002; &#x907F;&#x514D;&#x591A;&#x7D1A; URL &#x8CC7;&#x6E90;&#x9700;&#x8981;&#x591A;&#x7D1A;&#x5206;&#x985E;&#xFF0C;&#x56E0;&#x6B64;&#x5F88;&#x5BB9;&#x6613;&#x5BEB;&#x51FA;&#x591A;&#x7D1A;&#x7684; URL&#xFF0C;&#x6BD4;&#x5982;&#x7372;&#x53D6;&#x67D0;&#x500B;&#x4F5C;&#x8005;&#x7684;&#x67D0;&#x4E00;&#x985E;&#x6587;&#x7AE0;&#x3002; GET /authors/12/categories/2 &#x9019;&#x7A2E; URL &#x4E0D;&#x5229;&#x65BC;&#x64F4;&#x5C55;&#xFF0C;&#x8A9E;&#x7FA9;&#x4E5F;&#x4E0D;&#x660E;&#x78BA; &#x66F4;&#x597D;&#x7684;&#x505A;&#x6CD5;&#x662F;&#xFF0C;&#x9664;&#x4E86;&#x7B2C;&#x4E00;&#x7D1A;&#xFF0C;&#x5176;&#x4ED6;&#x7D1A;&#x5225;&#x90FD;&#x7528;&#x67E5;&#x8A62;&#x5B57;&#x7B26;&#x4E32;&#x8868;&#x9054;&#x3002; GET /authors/12?categories=2"},"RESTfulAPI.html#狀態碼":{"title":"&#x72C0;&#x614B;&#x78BC;","path":"\\javascript\\RESTfulAPI.html#狀態碼","body":"1xx&#xFF1A;&#x76F8;&#x95DC;&#x4FE1;&#x606F; 2xx&#xFF1A;&#x64CD;&#x4F5C;&#x6210;&#x529F; 3xx&#xFF1A;&#x91CD;&#x5B9A;&#x5411; 4xx&#xFF1A;&#x5BA2;&#x6236;&#x7AEF;&#x932F;&#x8AA4; 5xx&#xFF1A;&#x670D;&#x52D9;&#x5668;&#x932F;&#x8AA4; API &#x7528;&#x4E0D;&#x5230;301&#x72C0;&#x614B;&#x78BC;&#xFF08;&#x6C38;&#x4E45;&#x91CD;&#x5B9A;&#x5411;&#xFF09;&#x548C;302&#x72C0;&#x614B;&#x78BC;&#xFF08;&#x66AB;&#x6642;&#x91CD;&#x5B9A;&#x5411;&#xFF0C;307&#x4E5F;&#x662F;&#x9019;&#x500B;&#x542B;&#x7FA9;&#xFF09;&#xFF0C;&#x56E0;&#x70BA;&#x5B83;&#x5011;&#x53EF;&#x4EE5;&#x7531;&#x61C9;&#x7528;&#x7D1A;&#x5225;&#x8FD4;&#x56DE;&#xFF0C;&#x700F;&#x89BD;&#x5668;&#x6703;&#x76F4;&#x63A5;&#x8DF3;&#x8F49;&#xFF0C;API &#x7D1A;&#x5225;&#x53EF;&#x4EE5;&#x4E0D;&#x8003;&#x616E;&#x9019;&#x5169;&#x7A2E;&#x60C5;&#x6CC1;&#x3002; API &#x7528;&#x5230;&#x7684;3xx&#x72C0;&#x614B;&#x78BC;&#xFF0C;&#x4E3B;&#x8981;&#x662F; 303 See Other &#xFF0C;&#x8868;&#x793A;&#x53C3;&#x8003;&#x53E6;&#x4E00;&#x500B; URL&#x3002;&#x5B83;&#x8207;302&#x548C;307&#x7684;&#x542B;&#x7FA9;&#x4E00;&#x6A23;&#xFF0C;&#x4E5F;&#x662F;&#x201D;&#x66AB;&#x6642;&#x91CD;&#x5B9A;&#x5411;&#x201D;&#xFF0C;&#x5340;&#x5225;&#x5728;&#x65BC;302&#x548C;307&#x7528;&#x65BC;GET&#x8ACB;&#x6C42;&#xFF0C;&#x800C;303&#x7528;&#x65BC;POST&#x3001;PUT&#x548C;DELETE&#x8ACB;&#x6C42;&#x3002;&#x6536;&#x5230;303&#x4EE5;&#x5F8C;&#xFF0C;&#x700F;&#x89BD;&#x5668;&#x4E0D;&#x6703;&#x81EA;&#x52D5;&#x8DF3;&#x8F49;&#xFF0C;&#x800C;&#x6703;&#x8B93;&#x7528;&#x6236;&#x81EA;&#x5DF1;&#x6C7A;&#x5B9A;&#x4E0B;&#x4E00;&#x6B65;&#x600E;&#x9EBC;&#x8FA6;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x4E00;&#x500B;&#x4F8B;&#x5B50;&#x3002; 1 2 HTTP/ 1.1 303 See Other Location: /api/ orders/ 12345 HATEOAS &#x63D0;&#x4F9B;&#x93C8;&#x63A5; API &#x7684;&#x4F7F;&#x7528;&#x8005;&#x672A;&#x5FC5;&#x77E5;&#x9053;&#xFF0C;URL &#x662F;&#x600E;&#x9EBC;&#x8A2D;&#x8A08;&#x7684;&#x3002; &#x4E00;&#x500B;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#xFF0C;&#x5728;&#x56DE;&#x61C9;&#x4E2D;&#xFF0C;&#x7D66;&#x51FA;&#x76F8;&#x95DC;&#x93C8;&#x63A5;&#xFF0C;&#x4FBF;&#x65BC;&#x4E0B;&#x4E00;&#x6B65;&#x64CD;&#x4F5C;&#x3002;&#x9019;&#x6A23;&#x7684;&#x8A71;&#xFF0C;&#x7528;&#x6236;&#x53EA;&#x8981;&#x8A18;&#x4F4F;&#x4E00;&#x500B; URL&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x767C;&#x73FE;&#x5176;&#x4ED6;&#x7684; URL&#x3002;&#x9019;&#x7A2E;&#x65B9;&#x6CD5;&#x53EB;&#x505A; HATEOAS&#x3002; &#x4F8B; GitHub &#x7684; API &#x90FD;&#x5728; api.github.com &#x9019;&#x500B;&#x57DF;&#x540D;&#x4E0B;&#x53EF;&#x67E5;&#x627E;"},"RESTfulAPI.html#References":{"title":"References","path":"\\javascript\\RESTfulAPI.html#References","body":"https://blog.florimondmanca.com/restful-api-design-13-best-practices-to-make-your-users-happy http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html"},"ajax.html":{"title":"AJAX","path":"\\javascript\\ajax.html","body":"1 2 3 4 5 6 7 8 9 10 11 var xhr = new XMLHttpRequest() xhr.open( \"GET\" , \"/api\" , false ) xhr.onreadystatechange = function ( )  // 異步執行 if (xhr.readyState == 4 )  //響應內容解析完成，可以在客戶端調用了 if (xhr.status == 200 )  //表示成功處理請求 alert(xhr.responseText)    xhr.send( null ) XMLHttpRequest XMLHttpRequest.readyState HTTP response status codes 取得用get傳遞之網址列資訊(Query String) https://jsbin.com/katifugevu/edit?js,console,output 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 //取得網址字串 var url = location.href; url = 'http://example.com/?userid=jacob.hsu' ; //再來用去尋找網址列中是否有資料傳遞(QueryString) if (url.indexOf( '?' )!= -1 )  var id = \"\" ; //在此直接將各自的參數資料切割放進ary中 var ary = url.split( '?' )[ 1 ].split( '&amp;' ); // console.log(ary); [\"userid=jacob.hsu\"] //下迴圈去搜尋每個資料參數 for (i= 0 ;i=ary.length -1 ;i++)  //如果資料名稱為id的話那就把他取出來 if (ary[i].split( '=' )[ 0 ] == 'userid' ) id = ary[i].split( '=' )[ 1 ]; console .log(id); //\"jacob.hsu\"   ref : https://ithelp.ithome.com.tw/articles/10190254 ex: http://blog.xuite.net/ahdaa/blog1/test.html?id=AD&amp;val1=02&amp;val2=22#achorAD 1 2 3 4 5 6 7 8 location.href // 完整的網址 location.protocol // 協定　　　　　　 http: location.hostname // 伺服器名稱　　　 blog.xuite.net location.host // 伺服器:埠號　　　blog.xuite.net:80 location.port // 埠號　　　　　　 80 location.pathname // host之後的部份 /ahdaa/blog1/test.html?id=AD&amp;val1=02&amp;val2=22#achorAD location.search // 含?之後所有字串　?id=AD&amp;val1=02&amp;val2=22#achorAD location.hash // 含#之後所有字串　#achorAD(通常用於錨點) 跨域 瀏覽器有同源策略，不允許ajax訪問 跨域條件: 協議、域名、端口，有一個不同就算跨域 所有的跨域請求都必須經由資源提供方允許 可以跨域的三個標籤 img src=xxx link href=xxx script src=xxx link script 可以使用CDN， CDN 也是其他域 CORS是一個W3C標準，全稱是”跨域資源共享”（Cross-origin resource sharing）。 它允許瀏覽器向跨源服務器，發出XMLHttpRequest請求，從而克服了AJAX只能同源使用的限制。 CORS需要瀏覽器和服務器同時支持。實現CORS通信的關鍵是服務器。只要服務器實現了CORS接口，就可以跨源通信。 CORS Workflow 簡單說在A網站底下若有需要去access B網站的resource 那瀏覽器會在送去B網站的http request的header 中加上這行 Origin: http://www.foo.com 表明這個request是從 www.foo.com的resource出來的 那個在B網站的web server收到了這個request後 如果他認為A網站是B網站自己的白名單 那麼B網站就可以在http response 中加入這行 Access-Control-Allow-Origin: http://www.foo.com 這麼一來就可以順利的拿到B網站的resource了 詳細的範例程式在 https://developer.mozilla.org/zh-TW/docs/HTTP/Access_control_CORS 跨域资源共享 CORS 详解 異步 https://jsbin.com/hipiruzoru/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 console .log( 1 ); setTimeout( function ( )  console .log( 'setTimeout' ) , 0 ) let promise = new Promise ( function ( resolve,reject )  console .log( 3 ) resolve( 100 ) ).then( function ( data )  console .log( 100 ) ) console .log( 2 ); // 1 3 2 100 \"setTimeout\" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 console .log( 0 ) let promise = new Promise ( ( resolve, reject )=  console .log( 1 ); setTimeout( () =  console .log( 2 ); resolve(); , 0 ) console .log( 3 ) ) promise.then( res =  console .log( 100 ) ) console .log( 4 )"},"event.html":{"title":"Event","path":"\\javascript\\event.html","body":"無限下拉加載圖片的頁面 綁定事件? 代理 https://jsbin.com/hajohit/edit?html,js,output 1 2 3 4 5 6 7  div id = \"div1\"   a href = \"#\"  a1 / a   a href = \"#\"  a2 / a   a href = \"#\"  a3 / a   a href = \"#\"  a4 / a  !--會新增更多a標籤-- / div  為所有a標籤 新增 點擊事件 1 2 3 4 5 6 7 8 9 // 通過事件冒泡 去上層綁定 var div1 = document .getElementById( 'div1' ) div1.addEventListener( 'click' , function ( e )  //監聽是div1 但target可以告知點擊從哪出發的 var target = e.target if (target.nodeName === 'A' )  alert(target.innerHTML); //a1  )"},"event.html#代理":{"title":"&#x4EE3;&#x7406;","path":"\\javascript\\event.html#代理","body":"https://jsbin.com/hajohit/edit?html,js,output 1 2 3 4 5 6 7  div id = div1   a href = #  a1 / a   a href = #  a2 / a   a href = #  a3 / a   a href = #  a4 / a  !--&#x6703;&#x65B0;&#x589E;&#x66F4;&#x591A;a&#x6A19;&#x7C64;-- / div  &#x70BA;&#x6240;&#x6709;a&#x6A19;&#x7C64; &#x65B0;&#x589E; &#x9EDE;&#x64CA;&#x4E8B;&#x4EF6; 1 2 3 4 5 6 7 8 9 // &#x901A;&#x904E;&#x4E8B;&#x4EF6;&#x5192;&#x6CE1; &#x53BB;&#x4E0A;&#x5C64;&#x7D81;&#x5B9A; var div1 = document .getElementById( &apos;div1&apos; ) div1.addEventListener( &apos;click&apos; , function ( e ) { //&#x76E3;&#x807D;&#x662F;div1 &#x4F46;target&#x53EF;&#x4EE5;&#x544A;&#x77E5;&#x9EDE;&#x64CA;&#x5F9E;&#x54EA;&#x51FA;&#x767C;&#x7684; var target = e.target if (target.nodeName === &apos;A&apos; ) { alert(target.innerHTML); //a1 } })"},"es6.html":{"title":"ECMAScript 6","path":"\\javascript\\es6.html","body":"ECMAScript 6 入门 Module 的加载实现 浏览器允许脚本异步加载，下面就是两种异步加载的语法。 1 2 script src= \"path/to/myModule.js\" defer / script  script src= \"path/to/myModule.js\" async  / script  上面代码中， script 标签打开 defer 或 async 属性，脚本就会异步加载。渲染引擎遇到这一行命令，就会开始下载外部脚本，但不会等它下载和执行 加载规则 script type=module src=./foo.js/script 1 2 3 script type= \"module\"  import './index.js' ;  /script"},"es6.html#Module-的加载实现":{"title":"Module &#x7684;&#x52A0;&#x8F7D;&#x5B9E;&#x73B0;","path":"\\javascript\\es6.html#Module-的加载实现","body":"&#x6D4F;&#x89C8;&#x5668;&#x5141;&#x8BB8;&#x811A;&#x672C;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#xFF0C;&#x4E0B;&#x9762;&#x5C31;&#x662F;&#x4E24;&#x79CD;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#x7684;&#x8BED;&#x6CD5;&#x3002; 1 2 script src= path/to/myModule.js defer / script  script src= path/to/myModule.js async  / script  &#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C; script &#x6807;&#x7B7E;&#x6253;&#x5F00; defer &#x6216; async &#x5C5E;&#x6027;&#xFF0C;&#x811A;&#x672C;&#x5C31;&#x4F1A;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#x3002;&#x6E32;&#x67D3;&#x5F15;&#x64CE;&#x9047;&#x5230;&#x8FD9;&#x4E00;&#x884C;&#x547D;&#x4EE4;&#xFF0C;&#x5C31;&#x4F1A;&#x5F00;&#x59CB;&#x4E0B;&#x8F7D;&#x5916;&#x90E8;&#x811A;&#x672C;&#xFF0C;&#x4F46;&#x4E0D;&#x4F1A;&#x7B49;&#x5B83;&#x4E0B;&#x8F7D;&#x548C;&#x6267;&#x884C; &#x52A0;&#x8F7D;&#x89C4;&#x5219; script type=module src=./foo.js/script 1 2 3 script type= module  import &apos;./index.js&apos; ;  /script"},"arrowFunction.html":{"title":"箭頭函式","path":"\\javascript\\arrowFunction.html","body":"Arrow Function 什麼時候不使用箭頭函數 定義對象上的方法 1 2 3 4 5 6 7 8 9 10 const calculate =  array: [ 1 , 2 , 3 ], sum: () =  console .log( this === window ); // = true return this .array.reduce( ( result, item ) = result + item);  ; console .log( this === window ); // = true // Throws \"TypeError: Cannot read property 'reduce' of undefined\" calculate.sum(); 是因為箭頭函數按詞法 作用域將上下文綁定到 window 對象 執行 this.array 等同於 window.array ，它是 undefined 。 解決方法是使用 常規函數表達式 來定義方法。 this 是在調用時確定的，而不是由封閉的上下文決定的 1 2 3 4 5 6 7 8 9 const calculate =  array: [ 1 , 2 , 3 ], sum()  console .log( this === window ); // = false console .log( this === calculate); // = true return this .array.reduce( ( result, item ) = result + item);  ; calculate.sum(); // = 6 因为sum是常规函数，所以在調用 calculate.sum() 時 this 是 calculate 對象 。 this.array 是數組引用"},"arrowFunction.html#Arrow-Function":{"title":"Arrow Function","path":"\\javascript\\arrowFunction.html#Arrow-Function","body":"&#x4EC0;&#x9EBC;&#x6642;&#x5019;&#x4E0D;&#x4F7F;&#x7528;&#x7BAD;&#x982D;&#x51FD;&#x6578; &#x5B9A;&#x7FA9;&#x5C0D;&#x8C61;&#x4E0A;&#x7684;&#x65B9;&#x6CD5; 1 2 3 4 5 6 7 8 9 10 const calculate = { array: [ 1 , 2 , 3 ], sum: () = { console .log( this === window ); // = true return this .array.reduce( ( result, item ) = result + item); } }; console .log( this === window ); // = true // Throws TypeError: Cannot read property &apos;reduce&apos; of undefined calculate.sum(); &#x662F;&#x56E0;&#x70BA;&#x7BAD;&#x982D;&#x51FD;&#x6578;&#x6309;&#x8A5E;&#x6CD5; &#x4F5C;&#x7528;&#x57DF;&#x5C07;&#x4E0A;&#x4E0B;&#x6587;&#x7D81;&#x5B9A;&#x5230; window &#x5C0D;&#x8C61; &#x57F7;&#x884C; this.array &#x7B49;&#x540C;&#x65BC; window.array &#xFF0C;&#x5B83;&#x662F; undefined &#x3002; &#x89E3;&#x6C7A;&#x65B9;&#x6CD5;&#x662F;&#x4F7F;&#x7528; &#x5E38;&#x898F;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F; &#x4F86;&#x5B9A;&#x7FA9;&#x65B9;&#x6CD5;&#x3002; this &#x662F;&#x5728;&#x8ABF;&#x7528;&#x6642;&#x78BA;&#x5B9A;&#x7684;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x7531;&#x5C01;&#x9589;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x6C7A;&#x5B9A;&#x7684; 1 2 3 4 5 6 7 8 9 const calculate = { array: [ 1 , 2 , 3 ], sum() { console .log( this === window ); // = false console .log( this === calculate); // = true return this .array.reduce( ( result, item ) = result + item); } }; calculate.sum(); // = 6 &#x56E0;&#x4E3A;sum&#x662F;&#x5E38;&#x89C4;&#x51FD;&#x6570;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x8ABF;&#x7528; calculate.sum() &#x6642; this &#x662F; calculate &#x5C0D;&#x8C61; &#x3002; this.array &#x662F;&#x6578;&#x7D44;&#x5F15;&#x7528;"},"closures.html":{"title":"Closures","path":"\\javascript\\closures.html","body":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures 1 2 3 4 5 6 7 8 9 var name = \"hello\" ; ( function ( )  if ( typeof name === \"undefined\" )  var name = \"world\" ; console .log( \"goodbye \" + name);  else  console .log( \"hello \" +name);  )(); “goodbye world” 1 2 3 4 5 6 7 8 9 10 11 function makeAdder ( x )  return function ( y )  return x + y; ;  var add5 = makeAdder( 5 ); var add10 = makeAdder( 10 ); console .log(add5( 2 )); // 7 console .log(add10( 2 )); // 12 1 2 3 4 5 6 7 8 9 10 11 12 // fn declaration function add ( x )  return function ( y )  return x + y; ;  var add5 = add( 5 ); var add10 = add( 10 ); console .log(add5( 2 )); // 7 console .log(add10( 2 )); // 12 箭頭函式 https://tylermcginnis.com/arrow-functions/ 1 2 3 4 5 6 7 8 9 10 11 12 13 function add ( x )  return ( y ) = x + y;  const addf1 = ( a,b ) = a + b; var add5 = add( 5 ); var add10 = add( 10 ); console .log(add5( 2 )); // 7 console .log(add10( 2 )); // 12 console .log(addf1( 5 , 2 )); // 7 傳函數 (函數即物件) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const addf1 = ( a,b ) = a + b; function passFn ( addf1 )  return addf1;  function insideFn ( x,y )  return addf1(x,y);  console .log( addf1( 5 , 2 ) ); // 7 console .log( passFn(addf1( 5 , 2 )) ); // 7 console .log( insideFn( 5 , 2 ) ); // 7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // global scope var e = 10 ; function sum ( a )  return function ( b,c )  return function ( d )  // local scope return a + b + c + d + e;    console .log(sum( 1 )( 2 , 3 )( 4 )); // log 20 傳多個函數 1 2 3 4 5 6 7 function fns ( a )  return function ( b,c )  return a + b + c;   console .log(fns( 1 )( 2 , 3 )); // log 6 1 2 3 4 5 6 7 8 function fns ( f1 )  return function ( b,c )  return f1(b,c);   const addf1 = ( a,b ) = a + b; console .log(fns(addf1)( 2 , 3 )); // 5 https://jsbin.com/yijuyebixu/edit?js,console 1 2 3 4 5 6 7 8 9 10 function fns ( f1,f2 )  return function ( b,c )  return f1(b,c)+ ' ' +f2(b)+ ' ' +f3(b,c);   const f1 = ( a,b ) = a + b; const f2 = ( a ) = a * a; const f3 = ( a,b ) = a  b; //2 左移3 00010 - 10000 16 console .log(fns(f1,f2,f3)( 2 , 3 )); // \"5 4 16\" https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#%3E%3E_(Sign-propagating_right_shift)"},"closures.html#傳多個函數":{"title":"&#x50B3;&#x591A;&#x500B;&#x51FD;&#x6578;","path":"\\javascript\\closures.html#傳多個函數","body":"1 2 3 4 5 6 7 function fns ( a ) { return function ( b,c ) { return a + b + c; } } console .log(fns( 1 )( 2 , 3 )); // log 6 1 2 3 4 5 6 7 8 function fns ( f1 ) { return function ( b,c ) { return f1(b,c); } } const addf1 = ( a,b ) = a + b; console .log(fns(addf1)( 2 , 3 )); // 5 https://jsbin.com/yijuyebixu/edit?js,console 1 2 3 4 5 6 7 8 9 10 function fns ( f1,f2 ) { return function ( b,c ) { return f1(b,c)+ &apos; &apos; +f2(b)+ &apos; &apos; +f3(b,c); } } const f1 = ( a,b ) = a + b; const f2 = ( a ) = a * a; const f3 = ( a,b ) = a  b; //2 &#x5DE6;&#x79FB;3 00010 - 10000 16 console .log(fns(f1,f2,f3)( 2 , 3 )); // 5 4 16 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#%3E%3E_(Sign-propagating_right_shift)"},"asynchronous.html":{"title":"Asynchronous","path":"\\javascript\\asynchronous.html","body":"異步 https://jsbin.com/honidujame/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 console .log( 1 ) setTimeout( () =  console .log( 2 ); , 0 ) console .log( 3 ) setTimeout( function ( )  console .log( 4 ); , 0 ) // 1 3 2 4 https://jsbin.com/hipiruzoru/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 console .log( 1 ); setTimeout( function ( )  console .log( 'setTimeout' ) , 0 ) let promise = new Promise ( function ( resolve,reject )  console .log( 3 ) resolve( 100 ) ).then( function ( data )  console .log( 100 ) ) console .log( 2 ); // 1 3 2 100 \"setTimeout\" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 console .log( 0 ) let promise = new Promise ( ( resolve, reject )=  console .log( 1 ); setTimeout( () =  console .log( 2 ); resolve(); , 0 ) console .log( 3 ) ) promise.then( res =  console .log( 100 ) ) console .log( 4 ) // 0 1 3 4 2 100 setTimeout setTimeout() 函數是異步的 1 2 3 4 5 for ( var i = 0 ; i  5 ; i++)  setTimeout( function ( )  console .log(i); // 5,5,5,5,5 , i* 1000 );  1 2 3 4 5 6 for ( var i = 0 ; i  5 ; i++)  setTimeout( function ( )  console .log( new Date , i); , 1000 );  console .log(i); //5,- 5,5,5,5,5 因為異步函數必須等主進程運行完畢才會運行，setTimeout()內部回調運行的時候，主進程已經運行完畢了，此時i=5，所以輸出5。 循環執行過程中，幾乎同時設置了 5 個定時器，一般情況下，這些定時器都會在 1 秒之後觸發，而循環完的輸出是立即執行的 即第 1 個 5 直接輸出，1 秒之後，輸出 5 個 5； 提示： setTimeout() 只執行 code 一次。如果要多次調用，請使用 setInterval() 或者讓 code 自身再次調用 setTimeout()。 setTimeout 的意思是傳遞一個函數，延遲一段時候把該函數添加到 隊列 當中，並不是立即執行； 所以說如果當前正在運行的代碼沒有運行完，即使延遲的時間已經過完， 該函數會等待到函數隊列中前面所有的函數運行完畢之後才會運行 ；也就是說所有傳遞給setTimeout的回調方法都會在 整個環境下的所有代碼運行完畢之後執行 ； 期望代碼的輸出變成：5 - 0,1,2,3,4 1 用立即執行函數 IIFE（Immediately Invoked Function Expression ：聲明即執行的函數表達式）加閉包 1 2 3 4 5 6 7 8 for ( var i = 0 ; i  5 ; i++)  ( function ( j )  //j =i setTimeout( function ( )  console .log( new Date , j); , 1000 ); )(i)  console .log(i); //5, 0,1,2,3,4 用立即執行函數表達式創造了新的函數作用域將timer函數包裹了起來，並用j捕獲了每次循環時的i ，這樣在運行到console.log(j)的時候顯示的就是每次循環時的i值 2 利用 API 文檔 1 2 3 4 5 6 for ( var i = 0 ; i  5 ; i++)  setTimeout( function ( j )  console .log( new Date , j); , 1000 , i);  console .log(i); //5, 0,1,2,3,4 3 利用 JS 中基本類型（Primitive Type）的參數傳遞是 按值傳遞（Pass by Value） 的特徵 1 2 3 4 5 6 7 8 9 var output = function ( i )  setTimeout( function ( )  console .log( new Date , i); , 1000 ); ; for ( var i = 0 ; i  5 ; i++)  output(i); // 這裡傳過去的 i 值被複製了  console .log(i); //5, 0,1,2,3,4"},"asynchronous.html#異步":{"title":"&#x7570;&#x6B65;","path":"\\javascript\\asynchronous.html#異步","body":"https://jsbin.com/honidujame/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 console .log( 1 ) setTimeout( () = { console .log( 2 ); }, 0 ) console .log( 3 ) setTimeout( function ( ) { console .log( 4 ); }, 0 ) // 1 3 2 4 https://jsbin.com/hipiruzoru/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 console .log( 1 ); setTimeout( function ( ) { console .log( &apos;setTimeout&apos; ) }, 0 ) let promise = new Promise ( function ( resolve,reject ) { console .log( 3 ) resolve( 100 ) }).then( function ( data ) { console .log( 100 ) }) console .log( 2 ); // 1 3 2 100 setTimeout 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 console .log( 0 ) let promise = new Promise ( ( resolve, reject )= { console .log( 1 ); setTimeout( () = { console .log( 2 ); resolve(); }, 0 ) console .log( 3 ) }) promise.then( res = { console .log( 100 ) }) console .log( 4 ) // 0 1 3 4 2 100"},"asynchronous.html#setTimeout":{"title":"setTimeout","path":"\\javascript\\asynchronous.html#setTimeout","body":"setTimeout() &#x51FD;&#x6578;&#x662F;&#x7570;&#x6B65;&#x7684; 1 2 3 4 5 for ( var i = 0 ; i  5 ; i++) { setTimeout( function ( ) { console .log(i); // 5,5,5,5,5 }, i* 1000 ); } 1 2 3 4 5 6 for ( var i = 0 ; i  5 ; i++) { setTimeout( function ( ) { console .log( new Date , i); }, 1000 ); } console .log(i); //5,- 5,5,5,5,5 &#x56E0;&#x70BA;&#x7570;&#x6B65;&#x51FD;&#x6578;&#x5FC5;&#x9808;&#x7B49;&#x4E3B;&#x9032;&#x7A0B;&#x904B;&#x884C;&#x5B8C;&#x7562;&#x624D;&#x6703;&#x904B;&#x884C;&#xFF0C;setTimeout()&#x5167;&#x90E8;&#x56DE;&#x8ABF;&#x904B;&#x884C;&#x7684;&#x6642;&#x5019;&#xFF0C;&#x4E3B;&#x9032;&#x7A0B;&#x5DF2;&#x7D93;&#x904B;&#x884C;&#x5B8C;&#x7562;&#x4E86;&#xFF0C;&#x6B64;&#x6642;i=5&#xFF0C;&#x6240;&#x4EE5;&#x8F38;&#x51FA;5&#x3002; &#x5FAA;&#x74B0;&#x57F7;&#x884C;&#x904E;&#x7A0B;&#x4E2D;&#xFF0C;&#x5E7E;&#x4E4E;&#x540C;&#x6642;&#x8A2D;&#x7F6E;&#x4E86; 5 &#x500B;&#x5B9A;&#x6642;&#x5668;&#xFF0C;&#x4E00;&#x822C;&#x60C5;&#x6CC1;&#x4E0B;&#xFF0C;&#x9019;&#x4E9B;&#x5B9A;&#x6642;&#x5668;&#x90FD;&#x6703;&#x5728; 1 &#x79D2;&#x4E4B;&#x5F8C;&#x89F8;&#x767C;&#xFF0C;&#x800C;&#x5FAA;&#x74B0;&#x5B8C;&#x7684;&#x8F38;&#x51FA;&#x662F;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x7684; &#x5373;&#x7B2C; 1 &#x500B; 5 &#x76F4;&#x63A5;&#x8F38;&#x51FA;&#xFF0C;1 &#x79D2;&#x4E4B;&#x5F8C;&#xFF0C;&#x8F38;&#x51FA; 5 &#x500B; 5&#xFF1B; &#x63D0;&#x793A;&#xFF1A; setTimeout() &#x53EA;&#x57F7;&#x884C; code &#x4E00;&#x6B21;&#x3002;&#x5982;&#x679C;&#x8981;&#x591A;&#x6B21;&#x8ABF;&#x7528;&#xFF0C;&#x8ACB;&#x4F7F;&#x7528; setInterval() &#x6216;&#x8005;&#x8B93; code &#x81EA;&#x8EAB;&#x518D;&#x6B21;&#x8ABF;&#x7528; setTimeout()&#x3002; setTimeout &#x7684;&#x610F;&#x601D;&#x662F;&#x50B3;&#x905E;&#x4E00;&#x500B;&#x51FD;&#x6578;&#xFF0C;&#x5EF6;&#x9072;&#x4E00;&#x6BB5;&#x6642;&#x5019;&#x628A;&#x8A72;&#x51FD;&#x6578;&#x6DFB;&#x52A0;&#x5230; &#x968A;&#x5217; &#x7576;&#x4E2D;&#xFF0C;&#x4E26;&#x4E0D;&#x662F;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#xFF1B; &#x6240;&#x4EE5;&#x8AAA;&#x5982;&#x679C;&#x7576;&#x524D;&#x6B63;&#x5728;&#x904B;&#x884C;&#x7684;&#x4EE3;&#x78BC;&#x6C92;&#x6709;&#x904B;&#x884C;&#x5B8C;&#xFF0C;&#x5373;&#x4F7F;&#x5EF6;&#x9072;&#x7684;&#x6642;&#x9593;&#x5DF2;&#x7D93;&#x904E;&#x5B8C;&#xFF0C; &#x8A72;&#x51FD;&#x6578;&#x6703;&#x7B49;&#x5F85;&#x5230;&#x51FD;&#x6578;&#x968A;&#x5217;&#x4E2D;&#x524D;&#x9762;&#x6240;&#x6709;&#x7684;&#x51FD;&#x6578;&#x904B;&#x884C;&#x5B8C;&#x7562;&#x4E4B;&#x5F8C;&#x624D;&#x6703;&#x904B;&#x884C; &#xFF1B;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#x6240;&#x6709;&#x50B3;&#x905E;&#x7D66;setTimeout&#x7684;&#x56DE;&#x8ABF;&#x65B9;&#x6CD5;&#x90FD;&#x6703;&#x5728; &#x6574;&#x500B;&#x74B0;&#x5883;&#x4E0B;&#x7684;&#x6240;&#x6709;&#x4EE3;&#x78BC;&#x904B;&#x884C;&#x5B8C;&#x7562;&#x4E4B;&#x5F8C;&#x57F7;&#x884C; &#xFF1B; &#x671F;&#x671B;&#x4EE3;&#x78BC;&#x7684;&#x8F38;&#x51FA;&#x8B8A;&#x6210;&#xFF1A;5 - 0,1,2,3,4 1 &#x7528;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x6578; IIFE&#xFF08;Immediately Invoked Function Expression &#xFF1A;&#x8072;&#x660E;&#x5373;&#x57F7;&#x884C;&#x7684;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#xFF09;&#x52A0;&#x9589;&#x5305; 1 2 3 4 5 6 7 8 for ( var i = 0 ; i  5 ; i++) { ( function ( j ) { //j =i setTimeout( function ( ) { console .log( new Date , j); }, 1000 ); })(i) } console .log(i); //5, 0,1,2,3,4 &#x7528;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x5275;&#x9020;&#x4E86;&#x65B0;&#x7684;&#x51FD;&#x6578;&#x4F5C;&#x7528;&#x57DF;&#x5C07;timer&#x51FD;&#x6578;&#x5305;&#x88F9;&#x4E86;&#x8D77;&#x4F86;&#xFF0C;&#x4E26;&#x7528;j&#x6355;&#x7372;&#x4E86;&#x6BCF;&#x6B21;&#x5FAA;&#x74B0;&#x6642;&#x7684;i &#xFF0C;&#x9019;&#x6A23;&#x5728;&#x904B;&#x884C;&#x5230;console.log(j)&#x7684;&#x6642;&#x5019;&#x986F;&#x793A;&#x7684;&#x5C31;&#x662F;&#x6BCF;&#x6B21;&#x5FAA;&#x74B0;&#x6642;&#x7684;i&#x503C; 2 &#x5229;&#x7528; API &#x6587;&#x6A94; 1 2 3 4 5 6 for ( var i = 0 ; i  5 ; i++) { setTimeout( function ( j ) { console .log( new Date , j); }, 1000 , i); } console .log(i); //5, 0,1,2,3,4 3 &#x5229;&#x7528; JS &#x4E2D;&#x57FA;&#x672C;&#x985E;&#x578B;&#xFF08;Primitive Type&#xFF09;&#x7684;&#x53C3;&#x6578;&#x50B3;&#x905E;&#x662F; &#x6309;&#x503C;&#x50B3;&#x905E;&#xFF08;Pass by Value&#xFF09; &#x7684;&#x7279;&#x5FB5; 1 2 3 4 5 6 7 8 9 var output = function ( i ) { setTimeout( function ( ) { console .log( new Date , i); }, 1000 ); }; for ( var i = 0 ; i  5 ; i++) { output(i); // &#x9019;&#x88E1;&#x50B3;&#x904E;&#x53BB;&#x7684; i &#x503C;&#x88AB;&#x8907;&#x88FD;&#x4E86; } console .log(i); //5, 0,1,2,3,4"},"copy.html":{"title":"Copy","path":"\\javascript\\copy.html","body":"物件跟基本型別最大的不同就在於他們的傳值方式 淺拷貝(Shallow Copy) 基本型別是傳 value https://jsbin.com/lokejiveha/edit?js,console 1 2 3 4 5 6 var a = 10 ; var b = a; b = 20 ; console .log(a); // 10 console .log(b); // 20 但物件就不同，物件傳的是 reference https://jsbin.com/keholuroba/edit?js,console 1 2 3 4 5 6 var obj1 =  a : 10 , b : 20 , c : 30 ; var obj2 = obj1; obj2.b = 100 ; console .log(obj1); //  a: 10, b: 100, c: 30  -- b 被改到了 console .log(obj2); //  a: 10, b: 100, c: 30  複製一份obj1叫做obj2 然後把obj2.b改成100 但卻不小心改到obj1.b 因為他們根本是同一個物件，這就是所謂的 淺拷貝 深拷貝(Deep Copy) https://jsbin.com/xeqevarisa/1/edit?js,console 1 2 3 4 5 6 var obj1 =  a : 10 , b : 20 , c : 30 ; var obj2 =  a : obj1.a, b : obj1.b, c : obj1.c ; obj2.b = 100 ; console .log(obj1); //  a: 10, b: 20, c: 30  -- b 沒被改到 console .log(obj2); //  a: 10, b: 100, c: 30  但深拷貝會另外創造一個一模一樣的物件 新物件跟原物件不共用記憶體 修改新物件不會改到原物件 https://jsbin.com/venezeyonu/edit?js,console 1 2 3 4 5 6 7 8 var obj1 =  body :  a : 10  ; var obj2 =  body : obj1.body ; obj2.body.a = 100 ; console .log(obj1); //  body:  a: 100   -- 被改到了 console .log(obj2); //  body:  a: 100   console .log(obj1 === obj2); // false console .log(obj1.body === obj2.body); // true 雖然obj1跟obj2是不同物件 但他們會共用同一個 obj1.body 所以修改obj2.body.a時也會修改到舊的 Object.assign https://jsbin.com/cejijipevo/edit?js,console 1 2 3 4 5 6 var obj1 =  a : 10 , b : 20 , c : 30 ; var obj2 = Object .assign(, obj1); obj2.b = 100 ; console .log(obj1); //  a: 10, b: 20, c: 30  -- 沒被改到 console .log(obj2); //  a: 10, b: 100, c: 30  Object.assign({}, obj1) 的意思是先建立一個空物件{} 接著把obj1中所有的屬性複製過去 所以obj2會長得跟obj1一樣 這時候再修改obj2.b也不會影響obj1 因為Object.assign跟我們手動複製的效果相同 轉成 JSON 再轉回來 https://jsbin.com/kofawafune/edit?js,console 1 2 3 4 5 6 7 8 var obj1 =  body :  a : 10  ; var obj2 = JSON .parse( JSON .stringify(obj1)); obj2.body.a = 20 ; console .log(obj1); //  body:  a: 10   -- 沒被改到 console .log(obj2); //  body:  a: 20   console .log(obj1 === obj2); // false console .log(obj1.body === obj2.body); // false 這樣做是真正的 Deep Copy 但只有可以轉成JSON格式的物件才可以這樣用 像function沒辦法轉成JSON 1 2 3 4 5 var obj1 =  fun : function ( )  console .log( 123 )  ; var obj2 = JSON .parse( JSON .stringify(obj1)); console .log( typeof obj1.fun); // 'function' console .log( typeof obj2.fun); // 'undefined' -- 沒複製"},"copy.html#淺拷貝-Shallow-Copy":{"title":"&#x6DFA;&#x62F7;&#x8C9D;(Shallow Copy)","path":"\\javascript\\copy.html#淺拷貝-Shallow-Copy","body":"&#x57FA;&#x672C;&#x578B;&#x5225;&#x662F;&#x50B3; value https://jsbin.com/lokejiveha/edit?js,console 1 2 3 4 5 6 var a = 10 ; var b = a; b = 20 ; console .log(a); // 10 console .log(b); // 20 &#x4F46;&#x7269;&#x4EF6;&#x5C31;&#x4E0D;&#x540C;&#xFF0C;&#x7269;&#x4EF6;&#x50B3;&#x7684;&#x662F; reference https://jsbin.com/keholuroba/edit?js,console 1 2 3 4 5 6 var obj1 = { a : 10 , b : 20 , c : 30 }; var obj2 = obj1; obj2.b = 100 ; console .log(obj1); // { a: 10, b: 100, c: 30 } -- b &#x88AB;&#x6539;&#x5230;&#x4E86; console .log(obj2); // { a: 10, b: 100, c: 30 } &#x8907;&#x88FD;&#x4E00;&#x4EFD;obj1&#x53EB;&#x505A;obj2 &#x7136;&#x5F8C;&#x628A;obj2.b&#x6539;&#x6210;100 &#x4F46;&#x537B;&#x4E0D;&#x5C0F;&#x5FC3;&#x6539;&#x5230;obj1.b &#x56E0;&#x70BA;&#x4ED6;&#x5011;&#x6839;&#x672C;&#x662F;&#x540C;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x9019;&#x5C31;&#x662F;&#x6240;&#x8B02;&#x7684; &#x6DFA;&#x62F7;&#x8C9D; &#x6DF1;&#x62F7;&#x8C9D;(Deep Copy) https://jsbin.com/xeqevarisa/1/edit?js,console 1 2 3 4 5 6 var obj1 = { a : 10 , b : 20 , c : 30 }; var obj2 = { a : obj1.a, b : obj1.b, c : obj1.c }; obj2.b = 100 ; console .log(obj1); // { a: 10, b: 20, c: 30 } -- b &#x6C92;&#x88AB;&#x6539;&#x5230; console .log(obj2); // { a: 10, b: 100, c: 30 } &#x4F46;&#x6DF1;&#x62F7;&#x8C9D;&#x6703;&#x53E6;&#x5916;&#x5275;&#x9020;&#x4E00;&#x500B;&#x4E00;&#x6A21;&#x4E00;&#x6A23;&#x7684;&#x7269;&#x4EF6; &#x65B0;&#x7269;&#x4EF6;&#x8DDF;&#x539F;&#x7269;&#x4EF6;&#x4E0D;&#x5171;&#x7528;&#x8A18;&#x61B6;&#x9AD4; &#x4FEE;&#x6539;&#x65B0;&#x7269;&#x4EF6;&#x4E0D;&#x6703;&#x6539;&#x5230;&#x539F;&#x7269;&#x4EF6; https://jsbin.com/venezeyonu/edit?js,console 1 2 3 4 5 6 7 8 var obj1 = { body : { a : 10 } }; var obj2 = { body : obj1.body }; obj2.body.a = 100 ; console .log(obj1); // { body: { a: 100 } } -- &#x88AB;&#x6539;&#x5230;&#x4E86; console .log(obj2); // { body: { a: 100 } } console .log(obj1 === obj2); // false console .log(obj1.body === obj2.body); // true &#x96D6;&#x7136;obj1&#x8DDF;obj2&#x662F;&#x4E0D;&#x540C;&#x7269;&#x4EF6; &#x4F46;&#x4ED6;&#x5011;&#x6703;&#x5171;&#x7528;&#x540C;&#x4E00;&#x500B; obj1.body &#x6240;&#x4EE5;&#x4FEE;&#x6539;obj2.body.a&#x6642;&#x4E5F;&#x6703;&#x4FEE;&#x6539;&#x5230;&#x820A;&#x7684;"},"copy.html#深拷貝-Deep-Copy":{"title":"&#x6DF1;&#x62F7;&#x8C9D;(Deep Copy)","path":"\\javascript\\copy.html#深拷貝-Deep-Copy","body":"https://jsbin.com/xeqevarisa/1/edit?js,console 1 2 3 4 5 6 var obj1 = { a : 10 , b : 20 , c : 30 }; var obj2 = { a : obj1.a, b : obj1.b, c : obj1.c }; obj2.b = 100 ; console .log(obj1); // { a: 10, b: 20, c: 30 } -- b &#x6C92;&#x88AB;&#x6539;&#x5230; console .log(obj2); // { a: 10, b: 100, c: 30 } &#x4F46;&#x6DF1;&#x62F7;&#x8C9D;&#x6703;&#x53E6;&#x5916;&#x5275;&#x9020;&#x4E00;&#x500B;&#x4E00;&#x6A21;&#x4E00;&#x6A23;&#x7684;&#x7269;&#x4EF6; &#x65B0;&#x7269;&#x4EF6;&#x8DDF;&#x539F;&#x7269;&#x4EF6;&#x4E0D;&#x5171;&#x7528;&#x8A18;&#x61B6;&#x9AD4; &#x4FEE;&#x6539;&#x65B0;&#x7269;&#x4EF6;&#x4E0D;&#x6703;&#x6539;&#x5230;&#x539F;&#x7269;&#x4EF6; https://jsbin.com/venezeyonu/edit?js,console 1 2 3 4 5 6 7 8 var obj1 = { body : { a : 10 } }; var obj2 = { body : obj1.body }; obj2.body.a = 100 ; console .log(obj1); // { body: { a: 100 } } -- &#x88AB;&#x6539;&#x5230;&#x4E86; console .log(obj2); // { body: { a: 100 } } console .log(obj1 === obj2); // false console .log(obj1.body === obj2.body); // true &#x96D6;&#x7136;obj1&#x8DDF;obj2&#x662F;&#x4E0D;&#x540C;&#x7269;&#x4EF6; &#x4F46;&#x4ED6;&#x5011;&#x6703;&#x5171;&#x7528;&#x540C;&#x4E00;&#x500B; obj1.body &#x6240;&#x4EE5;&#x4FEE;&#x6539;obj2.body.a&#x6642;&#x4E5F;&#x6703;&#x4FEE;&#x6539;&#x5230;&#x820A;&#x7684;"},"copy.html#Object-assign":{"title":"Object.assign","path":"\\javascript\\copy.html#Object-assign","body":"https://jsbin.com/cejijipevo/edit?js,console 1 2 3 4 5 6 var obj1 = { a : 10 , b : 20 , c : 30 }; var obj2 = Object .assign({}, obj1); obj2.b = 100 ; console .log(obj1); // { a: 10, b: 20, c: 30 } -- &#x6C92;&#x88AB;&#x6539;&#x5230; console .log(obj2); // { a: 10, b: 100, c: 30 } Object.assign({}, obj1) &#x7684;&#x610F;&#x601D;&#x662F;&#x5148;&#x5EFA;&#x7ACB;&#x4E00;&#x500B;&#x7A7A;&#x7269;&#x4EF6;{} &#x63A5;&#x8457;&#x628A;obj1&#x4E2D;&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x8907;&#x88FD;&#x904E;&#x53BB; &#x6240;&#x4EE5;obj2&#x6703;&#x9577;&#x5F97;&#x8DDF;obj1&#x4E00;&#x6A23; &#x9019;&#x6642;&#x5019;&#x518D;&#x4FEE;&#x6539;obj2.b&#x4E5F;&#x4E0D;&#x6703;&#x5F71;&#x97FF;obj1 &#x56E0;&#x70BA;Object.assign&#x8DDF;&#x6211;&#x5011;&#x624B;&#x52D5;&#x8907;&#x88FD;&#x7684;&#x6548;&#x679C;&#x76F8;&#x540C;"},"copy.html#轉成-JSON-再轉回來":{"title":"&#x8F49;&#x6210; JSON &#x518D;&#x8F49;&#x56DE;&#x4F86;","path":"\\javascript\\copy.html#轉成-JSON-再轉回來","body":"https://jsbin.com/kofawafune/edit?js,console 1 2 3 4 5 6 7 8 var obj1 = { body : { a : 10 } }; var obj2 = JSON .parse( JSON .stringify(obj1)); obj2.body.a = 20 ; console .log(obj1); // { body: { a: 10 } } -- &#x6C92;&#x88AB;&#x6539;&#x5230; console .log(obj2); // { body: { a: 20 } } console .log(obj1 === obj2); // false console .log(obj1.body === obj2.body); // false &#x9019;&#x6A23;&#x505A;&#x662F;&#x771F;&#x6B63;&#x7684; Deep Copy &#x4F46;&#x53EA;&#x6709;&#x53EF;&#x4EE5;&#x8F49;&#x6210;JSON&#x683C;&#x5F0F;&#x7684;&#x7269;&#x4EF6;&#x624D;&#x53EF;&#x4EE5;&#x9019;&#x6A23;&#x7528; &#x50CF;function&#x6C92;&#x8FA6;&#x6CD5;&#x8F49;&#x6210;JSON 1 2 3 4 5 var obj1 = { fun : function ( ) { console .log( 123 ) } }; var obj2 = JSON .parse( JSON .stringify(obj1)); console .log( typeof obj1.fun); // &apos;function&apos; console .log( typeof obj2.fun); // &apos;undefined&apos; -- &#x6C92;&#x8907;&#x88FD;"},"core.html":{"title":"JavaScript 核心","path":"\\javascript\\core.html","body":"JavaScript 直譯器轉換過程 語法基本單元化(Tokenizing) 抽象結構樹AST(Abstract Syntax Tree) 代碼生成 esprima.org Parser produces the (beautiful) syntax tree Lexical Scope 語法作用域 (靜態作用域) 直譯器 靜態作用域 語法解析時就已經確定作用域 不會改變 JS屬於靜態作用域 執行 動態作用域 作用域是函數調用時才決定 提升（Hoisting） 在創造環境把記憶體空間準備好，這個流程稱為 提升（Hoisting） var name = &#39;Jacob&#39; // 創造環境 name放入記憶體 name = undefined 1 2 var name; //先宣告變數 name = 'Jacob' //然後才賦予值 執行階段 函數陳述式 在創造階段就會 優先載入 創造階段函式已可以運行 1 2 3 4 var a = '1' function fn ( )  ...  a undefined fn function .. 1 2 3 4 fn() //放前面可因為 創造階段 已可以運行 function fn ( )  console .log()  1 2 3 4 5 fn() //放前面 uncaught typeError: fn is not a function console .log(fn) //undefined var fn = function ( )  //函式表達式 console .log()  創造階段函式優先 1 2 3 4 5 6 7 8 9 10 11 12 //創造階段 function fn ( )  console .log( 1 )  var fn; //執行階段 fn = function ( )  console .log( 2 )  console .log(fn) //2 程式 1 2 3 4 5 function fn ( )  console .log(a)  var a = 'hello' fn() 實際運作拆解 1 2 3 4 5 6 7 8 //創造階段 function fn ( )  console .log(a)  var a; //執行階段 a = 'hello' fn () 1 2 3 4 5 6 7 8 9 function fn ( )  if (a)  // undefined 在 JavaScript 代表著 false console .log( 'hello' )  else  console .log( 'jacob' )   fn() //因為函式在執行時，變數還沒有被賦予值 var a = true 同步/非同步 JS是單執行序 是同步的 可利用 事件佇列 實現非同步 同步概念的先跑完 非同步行為先移至事件佇列 1 2 3 setTimeout( function ( )  console .log( 'someone call' ) , 3000 ) //不管如何調整秒數 都不會優先執行 0也是最後執行 LHS 1= true 1 = true 會出現 left-hand side (LHS)，實際上在此就無法繼續執行 Uncaught ReferenceError: Invalid left-hand side in assignment console.log(a) not defined 但其實是 RHS 錯誤，只是 JavaScript 並不會直接顯示 RHS 錯誤 陳述式 表達式 陳述式與宣告分類 運算式與運算子 正規表達式 陳述式 不會回傳結果 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 )  // 物件實字 var a =  name : \"Jacob\"  立即函式 (匿名函式()) // 匿名函式 外層小括號包起來 並且在後面加入() 來立即執行函式 1 2 3 ( function ( )  console .log( 'Jacob' ) ()) ASI 自動分號插入 自動分號插入( automatic semicolon insertion, ASI ) 是一種程序解析技術， 它在JavaScript 程序的語法分析(parsing) 階段起作用。 “不會” 發生 ASI 的規則： 新的一行是 ( 、 [ 、 / 開始 (容易出錯的地方) 新的一行以 + 、 - 、 * 、 % 作開始 (會影響執行結果) 新的一行以 , 、 . 作開始 (需注意執行結果) 遇到以上的標點符號 前方加入分號 是解決辦法 1 2 3 4 5 6 7 // 執行錯誤 ( function ( )  )() ( function ( )  )() // 正確 ;( function ( )  )() ;( function ( )  )() 1 2 3 4 5 var a = 1 ( function ( )  console .log(a); )() // var a = 1(function() console.log(a);)() 動態型別 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //執行階段才會賦予確立型別 var myName = 'Jacob' var myName; // 先賦予命名空間 myName = 'Jacob' //執行階段才確認型別 console .log( typeof myName) console .log( typeof 'Jacob' ) //顯性的轉換 explicit conversion //隱性的轉換 implicit conversion var num = 1 //number num = num + '' //string num = num * 3 //number console .log(num, typeof num) 原始型別及物件型別 原始型別 可用包裹物件的所有方法 1 2 3 4 a = 'Jacob' var e = new String (a) //但是原始型別盡量不用此方式 建構式 宣告 console .log(a, e) console .log( typeof e) // 建構式宣告的非原始型別 是物件型別 凡是使用 new 所建構的型別，在 typeof 都會是 object 透過建構式來建立的物件， var a = new Object(); if(a) 一樣是會被判定 true，因為物件的記憶體已經存在了 運算子 運算子 運算子優先序 賦值的優先性很低只有3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a是收 3賦予至b的 ‘回傳結果’ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = ; Object .defineProperty(b, 'a' ,  value: 2 , writable: false ) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a 是表達式 接收 1 b.a = 1 跟 b.a沒有關連性 Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 從左至右 console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = '1' ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b )  return a+b console .log( '1'  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( '1' + 2 ) //12 string型別相加 console .log(c)) console .log( 12 ) 嚴格相等 寬鬆相等 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //數字1 藍色 console .log( '1' ) //字串1 黑色 //嚴格相等 特殊狀況 console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //寬鬆相等 console .log( 1 == '1' ) // true 布林和字串轉為數值 console .log( Number ( '1' )) console .log( Number ( '0x11' )) //17 0x是指十六進制數 16+1 console .log( 17 == '0x11' ) //true //Null Undefined 不會轉數字型別 console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // 物件與非物件 使用包裹物件轉換 (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log(  A : 'A' ) //__proto__: Object console .log( String ( A : 'A' )) // [object Object] //物件與物件 比對的不是值 是參考位址 參考同一個記憶體 console .log( == ) //false 物件的參考位址不同 console .log( []==[] ) //false 同樣是物件型別 比對的都是參考位址 var a = [] var b = a ; //b取得的是a的參考位址 console .log( a===b) //a,b使用同個參考位址 JavaScript Equality Table Truthy Truthy（真值） console.log(new Boolean(false)) //Boolean{false} 物件 proto : Object 1 2 3 4 5 if ( new Boolean ( false ))  console .log( 'Truthy' )  else  console .log( 'Falsy' )  邏輯運算子及函式預設值 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // 預設值為 0 的解決方法 使用三元運算子 // 當 cash 是數值或為 0 時，使用 cash 的數值 // 如果 cash 是 NaN 時，則直接套用 500 cash = (cash || cash === 0 )? cash: 500 ; // or 左右兩邊放的是表達式 `` ` # 物件取值 [求值策略](https://zh.wikipedia.org/wiki/求值策略) 點 與 中括弧(可用變數方式) 物件取值屬性用字串 ` `` js const family =  name: 'Hsu' , members:  mon: 'mon' , dad: 'dad' , others: 'others' , 1 : 10 , '$-myFamily' : 'my family' , callFamily: function ( )  console .log( 'call family' ) , 'Hello' : function ( )  console .log( 'I am groot ' )   //物件實字 console .log(family.name); console .log(family[ 'name' ]); const a = 'name' ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ 'callFamily' ](); //add family[ '$' ] = 'money' delete family.others delete family[ '$' ] //利用陣列及for迴圈 執行物件的函式 var familyMethod = [ 'callFamily' , 'Hello' ] for ( var i= 0 ; i familyMethod.length;i++)  console .log(familyMethod[i]) family[familyMethod[i]]();  1 2 3 4 5 6 7 //變數無法被刪除，屬性才可以 var a= 1 ; //變數 b= 2 ; //屬性 console .log( window ) delete a; delete b; //b is not defind console .log( window ) 物件記憶體空間 1 2 3 4 5 var person =  name: 'Jacob'  var person2 = person person2 = 'Hsu' //find 0x01 change name's value 參考物件 Value 0x01 name Jacob 物件變數 Value person 0x01 person2 0x01 1 2 3 4 5 6 7 8 // 見大括號 生成新的參考物件 var company =  team: 'dev' , member:  rd: 'Jacob' qa: 'Claire'   參考物件 Value 0x01 team dev member 0x02 | 0x02 | | | rd | Jacob | | qa | Claire | 物件變數 Value company 0x01 純值無法新增屬性 js兩種型別 不是純值 就是物件 (function是物件) 1 2 3 4 5 6 7 8 9 10 11 12 13 var newStr = 'myname' //純值 newStr.name = 'Jacob' console .log(newStr) var newStr2 = new String ( 'myname' ) //建構式 物件 newStr2.name = 'Jacob' console .log(newStr2) function callFn ( )  console .log( 'fun' )  console .log(callFn) console .dir(callFn) //看見物件所有屬性內容 純值 傳值(call by value) 物件(陣列 函式)) 傳參考(call by reference) 深淺拷貝 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 var family =  name: 'Hsu' , member:  father: 'dad' , monther: 'mom' , other: 'someone'   var newFamily =  for ( var key in family)  console .log(key, family[key]); newFamily[key] =family[key];  newFamily.name = 'Chen' console .log(family, newFamily) newFamily.member.other = 'stranger' console .log(family, newFamily) //for in只能做第一層的複製 第二層是傳參考的形式 //淺層複製 js for in, jQuery extend, ES6 assign //jQuery var newFamily2 = jQuery.extend(, family); //ES6 var newFamily3 = Object .assign(, family) //深層複製 deep copy 會將原本的物件轉成字串再轉回來 傳參考特性會沒有 //console.log(family, JSON.stringify(family)) console .log(family, JSON .parse( JSON .stringify(family) )) var newFamily4 = JSON .parse( JSON .stringify(family) ); console .log(family === newFamily4) newFamily4.name = 'Liao' newFamily4.member.other = 'Deep' console .log(family, newFamily4) //兩者完全無關 參考也都不一樣 陣列 陣列是物件型別的一種 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var newArray = [ 1 , 'Str' , true ,  name: 'Jacob'  ]; console .log(newArray[ 3 ]); //[object Object]  name: \"Jacob\" console .log(newArray .3 ); //\"error\" newArray.push( 5 ); newArray.name = 'Hsu' ; //物件可隨意增加屬性 newArray[ 5 ] = 'Chen' ; newArray[ 7 ] = 'Liao' ; //陣列6 empty 取值undefined console .log(newArray); //name不屬於陣列裡面的長度 for ( var i= 0 ;inewArray.length;i++)  console .log(newArray[i])  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a = [ 1 , 2 , 3 ]; console .log(a, a[ 1 ], a.length) //forEach 不是實體屬性 是陣列原型的屬性 a.forEach( function ( i )  console .log(i) ); ( 3 ) [ 1 , 2 , 3 ] 0 : 1 1 : 2 2 : 3 length: 3 // length 也是一個物件的屬性 __proto__: Array ( 0 ) //陣列的原型 可以透過點運算子不斷向上查找取得方法 例:forEach ... __proto__: Object // 陣列的原型 繼承物件的原型 所以陣列也可以使用物件原型的方法 例:toString 1 2 3 4 5 6 7 8 var a = [ 1 , 2 , 3 ]; var b = [ 4 , 5 , 6 ]; //新增方法到原型鏈上 a.__proto__.getLast = function ( )  return this [ this .length -1 ]; //b[b.length-1]  console .log(a, b, a.getLast(), a.toString()) JSON JSON - 維基百科 儘管JSON是JavaScript的一個子集，但JSON是獨立於語言的文字格式 JSON所有的屬性一定都是字串的形式 物件可以用單引號 &#39; 但JSON一律用雙引號  SON 的格式是非常嚴格的，多一個逗號少一個逗號，都會導致出現錯誤， 所以最後一筆不可多了一個逗號 透過 JSON.parse() 出來的資料是一個物件，所以物件會有傳參考特性 後續的值變更，原本的值也會變更 原生AJAX讀JSON 1 2 3 4 5 6 7 8 9 10 //原生AJAX function getData ( )  console .log( this .response) var data = JSON .parse( this .response); console .log(data);  var oReq = new XMLHttpRequest(); oReq.addEventListener( \"load\" , getData); oReq.open( \"GET\" , \"family.json\" ) //傳入的字串 oReq.send(); 透過開發工具Network可以看結果 function 在 JavaScript 中 function 是一個很特別的存在，它是可以當成物件來使用， function 也是物件的一種，只是它是擁有程式區塊的能力物件而已 透過 「.」 即可做到新增屬性與值，所以function 在 JavaScript 是一個特殊的物件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( )  console .log( '函式陳述式' , '具名函式' ); console .log(statementFn);  statementFn(); var expressionFn = function ( )  console .log( '函式表達式' , '匿名函式' ); //不是所有匿名函式 都是函式表達式 console .log(expressionFn);  expressionFn() var functionC = function functionD ( )  console .log(functionC, functionD) //具名函式能夠在函式內被調用  console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin )  num += 1 console .log( 'Exec giveMeMoney' ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) ; console .log(giveMeMoney( 30 )) //加錢到超過100元才停止 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn )  fn();  // 函數陳述式沒有名稱無法執行 // function (fn)  // fn(); //  // 傳入的參數函式 如同函式表達式 不需要名稱 callSomeFn( function ( )  console .log( '執行函式' ) ) // 2定義一段函式並賦予到參數上 立即函式(IIFE) 立即呼叫函式表達式 （英文：immediately-invoked function expression，縮寫：IIFE） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( )  console .log( 'IIFE' )  fnA(); // IIFE ( function IIFE ( )  console .log( '立即函式' , 'IIFE' , '沒有fnA也可以執行' , '這裡是具名函式' ) // 1. 立即執行 // 2. 無法再函式外被再次執行 ()); //括號內層再補上小括號 ( function IIFE ( )  )(); //小括號可以移到外層 console .log(IIFE); //IIFE is not defined ( function ( )  console .log( '立即函式' , 'IIFE' , '沒有fnA也可以執行' ) // 1. 立即執行 // 2. 無法再函式外被再次執行 ()); ( function ( )  var name = 'Jacob' ; console .log(name) // 限制變數的作用域 )(); var whereParameter = ( function ( parameter )  console .log(parameter) return parameter; )( '參數在這' ); console .log(whereParameter); //記得養成好習慣 在立即函式前或後加分號 // 立即函式 傳遞變數 var a = ; ( function ( b )  b.person = 'jacob' ; )(a) ;( function ( c )  console .log(c.person); //把另一個立即函式定義的變數印出來 )(a) // 大型框架下 用全域物件傳值 ( function ( global )  global.person = 'jacob' ; )( window ) ;( function ( )  console .log(person); //把另一個立即函式定義的變數印出來 )() 參數 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a )  console .log(name+ '你好' +a)  function funcB ( fn )  fn( 'Jacob' , 1 ) //實際執行在這  funcB(cbFn) //\"Jacob你好1\" 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a )  console .log(a, arguments ); //arguments 是一個類陣列 不是純陣列 for ( let index = 0 ; index  arguments .length; index++)  console .log( arguments [index]); // 1 2 3 '4'  // 類陣列並沒有絕大多數陣列可使用的方法 // \"TypeError: arguments.forEach is not a function arguments .forEach( function ( )  )  callArg( 1 , 2 , 3 , '4' ) //1, [object Arguments]  0: 1, 1: 2, 2: 3, 3: \"4\" 閉包 Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( )  var money = 1000 ; return function ( price )  money = money + price return money   //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price)  console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( )  var arr = []; for ( var i= 0 ;i 3 ;i++)  arr.push( function ( )  console .log(i); );  console .log( 'i' , i) // 3 3 3 return arr;  var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); 透過 立即函式 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( )  var arr = []; for ( var i= 0 ;i 3 ;i++)  // 立即函式一個功能 限制作用域 ( function ( j )  arr.push( function ( )  console .log(j); ); )(i);  console .log( 'i' , i) // 0 1 2 return arr;  var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); 透過 let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( )  var arr = []; for ( let i= 0 ;i 3 ;i++)  arr.push( function ( )  console .log(i); // 0 1 2 );  //console.log('i', i) // \"error\" let作用域只在for return arr;  var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); 函式工廠 給不同的值　做相同的事情 1 2 3 4 5 6 7 8 9 function storeMoney ( initVal )  var money = initVal || 1000 return function ( price )  money = money + price; return money;   var MingMoney = storeMoney( 100 ); console .log(MingMoney( 500 )) // 600 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 function storeMoney ( initVal )  var money = initVal || 1000 // 私有方法 可以做很多不同事情 return  increase: function ( price )  money += price , decrease: function ( price )  money -= price , value: function ( )  return money;    var MingMoney = storeMoney( 100 ); MingMoney.increase( 100 ); MingMoney.increase( 25 ); MingMoney.decrease( 25 ); console .log(MingMoney.value()) // 200 this chrome / devTool / Sources / || 暫停按鈕 / 進入執行堆疊 this 為關鍵字 在每個執行環境存在 this 的調用方式 作為物件方法 關注在哪個物件下呼叫 Object.fn() this 指向 Object 簡易呼叫 (不建議調用this) bind, apply, call 方法 new DOM事件處理器 箭頭函式(ES6) simple call 簡易呼叫 1 2 3 4 5 6 var myName = 'Jacob' ; function callName ( )  console .log( this , this .myName)  callName() // this - window // 盡可能不要使用simple call的this 1 2 3 4 5 6 7 ( function ( )  console .log( this .myName); function callFn ( )  console .log( this .myName);  callFn(); //simple call 看到函式是直接執行的 就是簡易呼叫 執行閉包內函式也是 )(); 1 2 3 4 5 6 7 8 // callback function myCb ( callback )  var money = 100 return callback(money)  myCb( function ( money )  console .log( this .myName, money+ 100 ) ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 var a = [ 1 , 2 , 3 ] // forEach 後方是插入一個callback函式 a.forEach( function ( i )  console .log( this .myName, i); ) var family =  myName: 'Hsu' , callName: function ( )  // var self = this; // vm , that setTimeout( function ( )  console .log( this .myName) // simple call this-window 'Jacob' 無法取得物件的myName 'Hsu' console .log(self.myName) // 物件的myName 'Hsu' , 1000 )  family.callName();  Call, appply, bind 1 2 3 4 5 6 7 8 9 10 11 12 13 var team =  myName: 'Jacob'  function fn ( para1, para2 )  console .log( this , para1, para2)  fn( 1 , 2 ); //simple call fn.call(team, 1 , 2 ); // call 是立刻執行 fn.apply(team, [ 3 , 4 ]); // apply 是立刻執行 差別在以陣列方式呈現 var fn2 = fn.bind(team, 5 , 6 ); // bind 非立刻執行 fn2( 6 ); // [object Object] 5 6 順序執行參數所以是6 fn2( 1 , 2 ); // [object Object] 5 1 順序執行參數所以是1 1 2 3 4 5 6 7 8 function fn ( para1, para2 )  console .log( this , para1, para2)  // 進階概念 fn.call( 1 , 'Jacob' , 'Jessica' ) //傳純值 Number1 'Jacob', 'Jessica' 已建構式方式呈現 物件的型別 fn.call( 'Str' , 'Jacob' , 'Jessica' ) fn.call( undefined , 'Jacob' , 'Jessica' ) // null 、undefined 將會被置換成全域變數 [object Window] 'Jacob', 'Jessica' MDN call() 嚴格模式 1 2 3 4 ( function ( )  'use strict' ; name = 'Jacob' ; // \"error\" name is not defined )() 1 2 3 4 5 6 7 function fn ( para1, para2 )  'use strict' ; // 有加入嚴格模式 this所指向的window會變undefined console .log( this , para1, para2) // 1 \"Jacob\" \"Jessica\" 嚴格模式下 純值維持原型別 不以建構式方式呈現  fn.call( 1 , 'Jacob' , 'Jessica' ) fn.call( undefined , 'Jacob' , 'Jessica' ) // undefined \"Jacob\" \"Jessica\" // 簡易呼叫下 盡可能不要調用this 因為它本質就是undefined this: DOM 1 2  button onclick = \"console.log(this)\"  this is btn / button   button onclick = \"console.dir(this)\"  this is btn / button  console.dir(object) new 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function Dog ( name, color, size )  this .name = name; this .color = color; this .size = size;  var Bibi = new Dog( '比比' , '棕色' , '小' ) console .log(Bibi) //函式本身就是一個物件 函式物件有一個特別的屬性 prototype //透過prototype所新增的屬性 就會做原型上的方法 函式物件特有的屬性 Dog.prototype.bark = function ( )  console .log( this .name, 'barking' )  // __proto__ 物件上 // prototype 函式上 // 調整原型的方法時 最好的方式是從函式本身的原型屬性上去調整 console .log(Dog.prototype === Bibi.__proto__) // true 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 var b = new String ( 'bcde' ); console .log(b) console .dir( String ) String .prototype.lastText = function ( )  return this [ this .length - 1 ];  console .log(b.lastText()); Number .prototype.secondPower = function ( )  return this * this ;  var num = 5 ; console .log(num.secondPower()); var date = new Date (); console .log(date); console .dir( Date ); Date .prototype.getFullDate = function ( )  var dd = String ( this .getDate()); var mm = String ( this .getMonth()+ 1 ); var yyyy = this .getFullYear(); var today = yyyy + '/' + mm + '/' +dd; return today;  console .log(date.getFullDate()); 繼承 Object.create() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 var a = [] //Object  Array  a (實體) //原型鏈上新增一個層級 //Object  Animal  Dog  實體 //Object  Animal  Cat  實體 // Object.create() 可以把其他物件作為原型使用 var dog =  name: '狗' , bark: function ( )  console .log( this .name + ' barking' )   var Corgi = Object .create(dog); //Corgi 把 dog 作為原型使用 Corgi.name = 'Welsh Corgi' console .log(Corgi) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 function Animal ( family )  this .kingdom = '動物界' this .family = family || '貓科'  Animal.prototype.move = function ( )  console .log( this .name + ' can move' )  function Dog ( name, size )  Animal.call( this , '犬科' ) this .name = name; this .size = size || 'small'  Dog.prototype = Object .create(Animal.prototype) Dog.prototype.constructor = Dog; // 狗的原型原本直接繼承於動物界的原型 constructor 會被覆蓋所以補回原本建構函式 Dog.prototype.bark = function ( )  console .log( this .name + ' barking' )  var Chihuahua = new Dog( 'Chihuahua' , 'small' ); console .log(Chihuahua) Chihuahua.bark(); Chihuahua.move(); Chihuahua.family // undefined 目前只有繼承原型prototype 但無繼承動物界的建構函式 Animal.call 如果瀏覽器不支援 Object.create() 這時候我們會寫一些程式來填補某些瀏覽器不支援的情況，我們把這些程式稱做 polyfill 屬性特徵 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 const obj =  a: 1 , b: 2 , c: 3  console .log(obj) //Object.defineProperty() // 屬性，調整屬性的特徵 // 1. 值 2. 可否寫入 3. 可否被刪除 4. 可否被列舉 //Object.defineProperty(物件, 屬性, 參數) // being explicit Object .defineProperty(obj, 'a' ,  enumerable: true , configurable: true , writable: false , value: 4 ); console .log(obj) // \"TypeError: Cannot assign to read only property 'a' of object '#Object' ( function ( )  'use strict' ; obj.a = 5 ; ()) Object.defineProperty() // 延伸的三種物件方法 preventExtensions seal Freeze 防止擴充 封裝 凍結 直接操作物件本身 Object.preventExtensions() Object.seal() 無法新增刪除 也無法配置特徵 但是可以調整屬性值 Object.freeze() 物件加上seal 且無法調整值 Setter And Getter 1 2 3 4 5 6 7 8 9 10 11 12 13 14 var wallet =  total: 100 , set save(price)  this .total = this .total + price / 2 , get save()  return this .total / 2   // Getter 取得特定值的方法 // Setter 存值的方法 // wallet.total = 300; wallet.save = 300 ; //透過Setter改變total的值 console .log(wallet.save) //250 / 2 = 125 Object.defineProperty() Object.getOwnPropertyDescriptor() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var wallet =  total: 100  Object .defineProperty(wallet, 'save' ,  configurable: true , set : function(price)  this .total = this .total + price / 2 , get : function()  return this .total / 2  ); wallet.save = 300 ; //透過Setter改變total的值 console .log(wallet); // save 250 / 2 = 125 console .log( Object .getOwnPropertyDescriptor(wallet, 'save' )) // [object Object]  // configurable: false, // enumerable: false, 1 2 3 4 5 6 7 8 // 取得陣列最後一個值 var a = [ 1 , 2 , 3 ]; Object .defineProperty( Array .prototype, 'lastest' ,  get : function()  return this [ this .length - 1 ];  ); console .log(a.lastest); //3 ##　vue https://github.com/vuejs/vue/blob/dev/dist/vue.js var emptyObject = Object.freeze({}); 確保空物件 1 2 3 4 5 6 7 8 var app = new Vue( //建構初始化 el: '#app' , data:  message: 'Hello Vue!'  ) console .log(app) 深入响应式原理 当你把一个普通的 JavaScript 对象传入 Vue 实例作为 data 选项，Vue 将遍历此对象所有的属性，并使用 Object.defineProperty 把这些属性全部转为 getter/setter 。Object.defineProperty 是 ES5 中一个无法 shim 的特性，这也就是 Vue 不支持 IE8 以及更低版本浏览器的原因。 Vue 理解之白话 getter/setter https://github.com/vuejs/vue/blob/dev/dist/vue.js proxySetter reactiveSetter app.obj === app._data.obj Vue 响应式核心就是，getter 的时候会收集依赖，setter 的时候会触发依赖更新 Let var的作用域在函數(function) 裡 let的作用域則是在區塊(block) 裡 1 2 3 4 for ( var i= 0 ;i 10 ;i++)  console .log(i)  console .log(i) //window.i 全域 汙染整個作用域 1 2 3 4 5 6 let name = 'Jacob'  let name = 'Hsu'  console .log(name) //Jacob const 利用 const 可以做到除了被凍結 還能不被賦值 1 2 3 4 5 6 7 8 9 10 11 12 13 const person =  name: '黨工' , money: 500  person.name = '網軍' Object .freeze(person); person.money = 1000 ; person = ; // devTool console person // var  person // const let TDZ 1 2 3 4 5 6 7 8 9 10 let arg = 'first' ;  //創造 let arg; // 暫時性死區 TDZ 有hoisting但鎖住 //執行 console .log(arg); // first let arg = 'second'  1 let 一樣有創造階段 2 但從創造到實際宣告的階段會出現TDZ 這個區域無法呼叫變數 3 有創造到執行的概念，但不會預先出現 (文件不會表明這與 var 的Hoisting相同概念) ES6 Airbnb Airbnb 規範文件 (ES6 版本)： https://github.com/airbnb/javascript ESLint 安裝教學： https://www.youtube.com/watch?v=WiommcFaYvY ? How would you like to use ESLint? (Use arrow keys) To check syntax only To check syntax and find problems ❯ To check syntax, find problems, and enforce code style 如果要使用 Airbnb 的規範，請選擇最後一個選項。 箭頭函數 //沒有傳統函數 arguments 參數 1 2 3 4 const nums = function ( )  console .log( arguments );  nums( 10 , 50 , 100 , 50 , 5 , 1 ); 1 2 3 4 const nums = () =  console .log( arguments ); //Uncaught ReferenceError  nums( 10 , 50 , 100 , 50 , 5 , 1 ); 1 2 3 4 const nums = ( ...arg ) =  console .log(arg); //Uncaught ReferenceError  nums( 10 , 50 , 100 , 50 , 5 , 1 ); 箭頭函式沒有自己的this 他的this指向外層 1 2 3 4 5 6 7 const ele = document .querySelector( 'p' ); ele.addEventListener( 'click' , function ( )  console .log( this ) ); ele.addEventListener( 'click' , () = console .log( this ) //指到不一樣的位置 window 全域 ); 箭頭函數 常見問題 不能直接回傳物件實字 1 2 3 4 const arrFn = () =  data : 1  console .log(arrFn()) //undefined const arrFnr = () = ( data : 1 ) console .log(arrFnr()) //data: 1 搭配判斷式不能直接接箭頭函式 1 2 3 4 5 let num = 0 const numFn = num || () = 1 ; console .log(numFn) const numFunction = num || ( ( ) = 1 ); console .log(numFunction) // 加括號修正 物件裡面搭配箭頭函樹會出錯 指向是不同的 1 2 3 4 5 6 7 8 const app = new Vue( data:  num: 1 , created: () =  console .log( this .num) //FAIL  ) 平均數 1 2 3 4 5 6 7 8 9 10 const average = function ( )  // arguments 是類陣列沒有陣列方法 用Array.from轉成純陣列 const nums = Array .from( arguments ); const total = nums.reduce( function ( acc, val )  return acc + val , 0 ); // 0 是第一次執行的前一個值 console .log(total); return total / nums.length;  console .log(average( 1 , 2 , 3 , 4 , 5 )) // 15 3 Array.from() Array.reduce() 1 2 const average = ( ...nums ) = nums.reduce( ( acc, val ) = acc + val, 0 ) / nums.length console .log(average( 1 , 2 , 3 , 4 , 5 )) // 3"},"core.html#JavaScript-直譯器轉換過程":{"title":"JavaScript &#x76F4;&#x8B6F;&#x5668;&#x8F49;&#x63DB;&#x904E;&#x7A0B;","path":"\\javascript\\core.html#JavaScript-直譯器轉換過程","body":"&#x8A9E;&#x6CD5;&#x57FA;&#x672C;&#x55AE;&#x5143;&#x5316;(Tokenizing) &#x62BD;&#x8C61;&#x7D50;&#x69CB;&#x6A39;AST(Abstract Syntax Tree) &#x4EE3;&#x78BC;&#x751F;&#x6210; esprima.org Parser produces the (beautiful) syntax tree Lexical Scope &#x8A9E;&#x6CD5;&#x4F5C;&#x7528;&#x57DF; (&#x975C;&#x614B;&#x4F5C;&#x7528;&#x57DF;) &#x76F4;&#x8B6F;&#x5668; &#x975C;&#x614B;&#x4F5C;&#x7528;&#x57DF; &#x8A9E;&#x6CD5;&#x89E3;&#x6790;&#x6642;&#x5C31;&#x5DF2;&#x7D93;&#x78BA;&#x5B9A;&#x4F5C;&#x7528;&#x57DF; &#x4E0D;&#x6703;&#x6539;&#x8B8A; JS&#x5C6C;&#x65BC;&#x975C;&#x614B;&#x4F5C;&#x7528;&#x57DF; &#x57F7;&#x884C; &#x52D5;&#x614B;&#x4F5C;&#x7528;&#x57DF; &#x4F5C;&#x7528;&#x57DF;&#x662F;&#x51FD;&#x6578;&#x8ABF;&#x7528;&#x6642;&#x624D;&#x6C7A;&#x5B9A; &#x63D0;&#x5347;&#xFF08;Hoisting&#xFF09; &#x5728;&#x5275;&#x9020;&#x74B0;&#x5883;&#x628A;&#x8A18;&#x61B6;&#x9AD4;&#x7A7A;&#x9593;&#x6E96;&#x5099;&#x597D;&#xFF0C;&#x9019;&#x500B;&#x6D41;&#x7A0B;&#x7A31;&#x70BA; &#x63D0;&#x5347;&#xFF08;Hoisting&#xFF09; var name = &apos;Jacob&apos; // &#x5275;&#x9020;&#x74B0;&#x5883; name&#x653E;&#x5165;&#x8A18;&#x61B6;&#x9AD4; name = undefined 1 2 var name; //&#x5148;&#x5BA3;&#x544A;&#x8B8A;&#x6578; name = &apos;Jacob&apos; //&#x7136;&#x5F8C;&#x624D;&#x8CE6;&#x4E88;&#x503C; &#x57F7;&#x884C;&#x968E;&#x6BB5; &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F; &#x5728;&#x5275;&#x9020;&#x968E;&#x6BB5;&#x5C31;&#x6703; &#x512A;&#x5148;&#x8F09;&#x5165; &#x5275;&#x9020;&#x968E;&#x6BB5;&#x51FD;&#x5F0F;&#x5DF2;&#x53EF;&#x4EE5;&#x904B;&#x884C; 1 2 3 4 var a = &apos;1&apos; function fn ( ) { ... } a undefined fn function .. 1 2 3 4 fn() //&#x653E;&#x524D;&#x9762;&#x53EF;&#x56E0;&#x70BA; &#x5275;&#x9020;&#x968E;&#x6BB5; &#x5DF2;&#x53EF;&#x4EE5;&#x904B;&#x884C; function fn ( ) { console .log() } 1 2 3 4 5 fn() //&#x653E;&#x524D;&#x9762; uncaught typeError: fn is not a function console .log(fn) //undefined var fn = function ( ) { //&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log() } &#x5275;&#x9020;&#x968E;&#x6BB5;&#x51FD;&#x5F0F;&#x512A;&#x5148; 1 2 3 4 5 6 7 8 9 10 11 12 //&#x5275;&#x9020;&#x968E;&#x6BB5; function fn ( ) { console .log( 1 ) } var fn; //&#x57F7;&#x884C;&#x968E;&#x6BB5; fn = function ( ) { console .log( 2 ) } console .log(fn) //2 &#x7A0B;&#x5F0F; 1 2 3 4 5 function fn ( ) { console .log(a) } var a = &apos;hello&apos; fn() &#x5BE6;&#x969B;&#x904B;&#x4F5C;&#x62C6;&#x89E3; 1 2 3 4 5 6 7 8 //&#x5275;&#x9020;&#x968E;&#x6BB5; function fn ( ) { console .log(a) } var a; //&#x57F7;&#x884C;&#x968E;&#x6BB5; a = &apos;hello&apos; fn () 1 2 3 4 5 6 7 8 9 function fn ( ) { if (a) { // undefined &#x5728; JavaScript &#x4EE3;&#x8868;&#x8457; false console .log( &apos;hello&apos; ) } else { console .log( &apos;jacob&apos; ) } } fn() //&#x56E0;&#x70BA;&#x51FD;&#x5F0F;&#x5728;&#x57F7;&#x884C;&#x6642;&#xFF0C;&#x8B8A;&#x6578;&#x9084;&#x6C92;&#x6709;&#x88AB;&#x8CE6;&#x4E88;&#x503C; var a = true &#x540C;&#x6B65;/&#x975E;&#x540C;&#x6B65; JS&#x662F;&#x55AE;&#x57F7;&#x884C;&#x5E8F; &#x662F;&#x540C;&#x6B65;&#x7684; &#x53EF;&#x5229;&#x7528; &#x4E8B;&#x4EF6;&#x4F47;&#x5217; &#x5BE6;&#x73FE;&#x975E;&#x540C;&#x6B65; &#x540C;&#x6B65;&#x6982;&#x5FF5;&#x7684;&#x5148;&#x8DD1;&#x5B8C; &#x975E;&#x540C;&#x6B65;&#x884C;&#x70BA;&#x5148;&#x79FB;&#x81F3;&#x4E8B;&#x4EF6;&#x4F47;&#x5217; 1 2 3 setTimeout( function ( ) { console .log( &apos;someone call&apos; ) }, 3000 ) //&#x4E0D;&#x7BA1;&#x5982;&#x4F55;&#x8ABF;&#x6574;&#x79D2;&#x6578; &#x90FD;&#x4E0D;&#x6703;&#x512A;&#x5148;&#x57F7;&#x884C; 0&#x4E5F;&#x662F;&#x6700;&#x5F8C;&#x57F7;&#x884C; LHS 1= true 1 = true &#x6703;&#x51FA;&#x73FE; left-hand side (LHS)&#xFF0C;&#x5BE6;&#x969B;&#x4E0A;&#x5728;&#x6B64;&#x5C31;&#x7121;&#x6CD5;&#x7E7C;&#x7E8C;&#x57F7;&#x884C; Uncaught ReferenceError: Invalid left-hand side in assignment console.log(a) not defined &#x4F46;&#x5176;&#x5BE6;&#x662F; RHS &#x932F;&#x8AA4;&#xFF0C;&#x53EA;&#x662F; JavaScript &#x4E26;&#x4E0D;&#x6703;&#x76F4;&#x63A5;&#x986F;&#x793A; RHS &#x932F;&#x8AA4; &#x9673;&#x8FF0;&#x5F0F; &#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F;&#x8207;&#x5BA3;&#x544A;&#x5206;&#x985E; &#x904B;&#x7B97;&#x5F0F;&#x8207;&#x904B;&#x7B97;&#x5B50; &#x6B63;&#x898F;&#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F; &#x4E0D;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 ) {} // &#x7269;&#x4EF6;&#x5BE6;&#x5B57; var a = { name : Jacob } &#x7ACB;&#x5373;&#x51FD;&#x5F0F; (&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#提升（Hoisting）":{"title":"&#x63D0;&#x5347;&#xFF08;Hoisting&#xFF09;","path":"\\javascript\\core.html#提升（Hoisting）","body":"&#x5728;&#x5275;&#x9020;&#x74B0;&#x5883;&#x628A;&#x8A18;&#x61B6;&#x9AD4;&#x7A7A;&#x9593;&#x6E96;&#x5099;&#x597D;&#xFF0C;&#x9019;&#x500B;&#x6D41;&#x7A0B;&#x7A31;&#x70BA; &#x63D0;&#x5347;&#xFF08;Hoisting&#xFF09; var name = &apos;Jacob&apos; // &#x5275;&#x9020;&#x74B0;&#x5883; name&#x653E;&#x5165;&#x8A18;&#x61B6;&#x9AD4; name = undefined 1 2 var name; //&#x5148;&#x5BA3;&#x544A;&#x8B8A;&#x6578; name = &apos;Jacob&apos; //&#x7136;&#x5F8C;&#x624D;&#x8CE6;&#x4E88;&#x503C; &#x57F7;&#x884C;&#x968E;&#x6BB5; &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F; &#x5728;&#x5275;&#x9020;&#x968E;&#x6BB5;&#x5C31;&#x6703; &#x512A;&#x5148;&#x8F09;&#x5165; &#x5275;&#x9020;&#x968E;&#x6BB5;&#x51FD;&#x5F0F;&#x5DF2;&#x53EF;&#x4EE5;&#x904B;&#x884C; 1 2 3 4 var a = &apos;1&apos; function fn ( ) { ... } a undefined fn function .. 1 2 3 4 fn() //&#x653E;&#x524D;&#x9762;&#x53EF;&#x56E0;&#x70BA; &#x5275;&#x9020;&#x968E;&#x6BB5; &#x5DF2;&#x53EF;&#x4EE5;&#x904B;&#x884C; function fn ( ) { console .log() } 1 2 3 4 5 fn() //&#x653E;&#x524D;&#x9762; uncaught typeError: fn is not a function console .log(fn) //undefined var fn = function ( ) { //&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log() } &#x5275;&#x9020;&#x968E;&#x6BB5;&#x51FD;&#x5F0F;&#x512A;&#x5148; 1 2 3 4 5 6 7 8 9 10 11 12 //&#x5275;&#x9020;&#x968E;&#x6BB5; function fn ( ) { console .log( 1 ) } var fn; //&#x57F7;&#x884C;&#x968E;&#x6BB5; fn = function ( ) { console .log( 2 ) } console .log(fn) //2 &#x7A0B;&#x5F0F; 1 2 3 4 5 function fn ( ) { console .log(a) } var a = &apos;hello&apos; fn() &#x5BE6;&#x969B;&#x904B;&#x4F5C;&#x62C6;&#x89E3; 1 2 3 4 5 6 7 8 //&#x5275;&#x9020;&#x968E;&#x6BB5; function fn ( ) { console .log(a) } var a; //&#x57F7;&#x884C;&#x968E;&#x6BB5; a = &apos;hello&apos; fn () 1 2 3 4 5 6 7 8 9 function fn ( ) { if (a) { // undefined &#x5728; JavaScript &#x4EE3;&#x8868;&#x8457; false console .log( &apos;hello&apos; ) } else { console .log( &apos;jacob&apos; ) } } fn() //&#x56E0;&#x70BA;&#x51FD;&#x5F0F;&#x5728;&#x57F7;&#x884C;&#x6642;&#xFF0C;&#x8B8A;&#x6578;&#x9084;&#x6C92;&#x6709;&#x88AB;&#x8CE6;&#x4E88;&#x503C; var a = true &#x540C;&#x6B65;/&#x975E;&#x540C;&#x6B65; JS&#x662F;&#x55AE;&#x57F7;&#x884C;&#x5E8F; &#x662F;&#x540C;&#x6B65;&#x7684; &#x53EF;&#x5229;&#x7528; &#x4E8B;&#x4EF6;&#x4F47;&#x5217; &#x5BE6;&#x73FE;&#x975E;&#x540C;&#x6B65; &#x540C;&#x6B65;&#x6982;&#x5FF5;&#x7684;&#x5148;&#x8DD1;&#x5B8C; &#x975E;&#x540C;&#x6B65;&#x884C;&#x70BA;&#x5148;&#x79FB;&#x81F3;&#x4E8B;&#x4EF6;&#x4F47;&#x5217; 1 2 3 setTimeout( function ( ) { console .log( &apos;someone call&apos; ) }, 3000 ) //&#x4E0D;&#x7BA1;&#x5982;&#x4F55;&#x8ABF;&#x6574;&#x79D2;&#x6578; &#x90FD;&#x4E0D;&#x6703;&#x512A;&#x5148;&#x57F7;&#x884C; 0&#x4E5F;&#x662F;&#x6700;&#x5F8C;&#x57F7;&#x884C; LHS 1= true 1 = true &#x6703;&#x51FA;&#x73FE; left-hand side (LHS)&#xFF0C;&#x5BE6;&#x969B;&#x4E0A;&#x5728;&#x6B64;&#x5C31;&#x7121;&#x6CD5;&#x7E7C;&#x7E8C;&#x57F7;&#x884C; Uncaught ReferenceError: Invalid left-hand side in assignment console.log(a) not defined &#x4F46;&#x5176;&#x5BE6;&#x662F; RHS &#x932F;&#x8AA4;&#xFF0C;&#x53EA;&#x662F; JavaScript &#x4E26;&#x4E0D;&#x6703;&#x76F4;&#x63A5;&#x986F;&#x793A; RHS &#x932F;&#x8AA4; &#x9673;&#x8FF0;&#x5F0F; &#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F;&#x8207;&#x5BA3;&#x544A;&#x5206;&#x985E; &#x904B;&#x7B97;&#x5F0F;&#x8207;&#x904B;&#x7B97;&#x5B50; &#x6B63;&#x898F;&#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F; &#x4E0D;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 ) {} // &#x7269;&#x4EF6;&#x5BE6;&#x5B57; var a = { name : Jacob } &#x7ACB;&#x5373;&#x51FD;&#x5F0F; (&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#同步-非同步":{"title":"&#x540C;&#x6B65;/&#x975E;&#x540C;&#x6B65;","path":"\\javascript\\core.html#同步-非同步","body":"JS&#x662F;&#x55AE;&#x57F7;&#x884C;&#x5E8F; &#x662F;&#x540C;&#x6B65;&#x7684; &#x53EF;&#x5229;&#x7528; &#x4E8B;&#x4EF6;&#x4F47;&#x5217; &#x5BE6;&#x73FE;&#x975E;&#x540C;&#x6B65; &#x540C;&#x6B65;&#x6982;&#x5FF5;&#x7684;&#x5148;&#x8DD1;&#x5B8C; &#x975E;&#x540C;&#x6B65;&#x884C;&#x70BA;&#x5148;&#x79FB;&#x81F3;&#x4E8B;&#x4EF6;&#x4F47;&#x5217; 1 2 3 setTimeout( function ( ) { console .log( &apos;someone call&apos; ) }, 3000 ) //&#x4E0D;&#x7BA1;&#x5982;&#x4F55;&#x8ABF;&#x6574;&#x79D2;&#x6578; &#x90FD;&#x4E0D;&#x6703;&#x512A;&#x5148;&#x57F7;&#x884C; 0&#x4E5F;&#x662F;&#x6700;&#x5F8C;&#x57F7;&#x884C; LHS 1= true 1 = true &#x6703;&#x51FA;&#x73FE; left-hand side (LHS)&#xFF0C;&#x5BE6;&#x969B;&#x4E0A;&#x5728;&#x6B64;&#x5C31;&#x7121;&#x6CD5;&#x7E7C;&#x7E8C;&#x57F7;&#x884C; Uncaught ReferenceError: Invalid left-hand side in assignment console.log(a) not defined &#x4F46;&#x5176;&#x5BE6;&#x662F; RHS &#x932F;&#x8AA4;&#xFF0C;&#x53EA;&#x662F; JavaScript &#x4E26;&#x4E0D;&#x6703;&#x76F4;&#x63A5;&#x986F;&#x793A; RHS &#x932F;&#x8AA4; &#x9673;&#x8FF0;&#x5F0F; &#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F;&#x8207;&#x5BA3;&#x544A;&#x5206;&#x985E; &#x904B;&#x7B97;&#x5F0F;&#x8207;&#x904B;&#x7B97;&#x5B50; &#x6B63;&#x898F;&#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F; &#x4E0D;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 ) {} // &#x7269;&#x4EF6;&#x5BE6;&#x5B57; var a = { name : Jacob } &#x7ACB;&#x5373;&#x51FD;&#x5F0F; (&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#LHS":{"title":"LHS","path":"\\javascript\\core.html#LHS","body":"1= true 1 = true &#x6703;&#x51FA;&#x73FE; left-hand side (LHS)&#xFF0C;&#x5BE6;&#x969B;&#x4E0A;&#x5728;&#x6B64;&#x5C31;&#x7121;&#x6CD5;&#x7E7C;&#x7E8C;&#x57F7;&#x884C; Uncaught ReferenceError: Invalid left-hand side in assignment console.log(a) not defined &#x4F46;&#x5176;&#x5BE6;&#x662F; RHS &#x932F;&#x8AA4;&#xFF0C;&#x53EA;&#x662F; JavaScript &#x4E26;&#x4E0D;&#x6703;&#x76F4;&#x63A5;&#x986F;&#x793A; RHS &#x932F;&#x8AA4; &#x9673;&#x8FF0;&#x5F0F; &#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F;&#x8207;&#x5BA3;&#x544A;&#x5206;&#x985E; &#x904B;&#x7B97;&#x5F0F;&#x8207;&#x904B;&#x7B97;&#x5B50; &#x6B63;&#x898F;&#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F; &#x4E0D;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 ) {} // &#x7269;&#x4EF6;&#x5BE6;&#x5B57; var a = { name : Jacob } &#x7ACB;&#x5373;&#x51FD;&#x5F0F; (&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#陳述式-表達式":{"title":"&#x9673;&#x8FF0;&#x5F0F; &#x8868;&#x9054;&#x5F0F;","path":"\\javascript\\core.html#陳述式-表達式","body":"&#x9673;&#x8FF0;&#x5F0F;&#x8207;&#x5BA3;&#x544A;&#x5206;&#x985E; &#x904B;&#x7B97;&#x5F0F;&#x8207;&#x904B;&#x7B97;&#x5B50; &#x6B63;&#x898F;&#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F; &#x4E0D;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 ) {} // &#x7269;&#x4EF6;&#x5BE6;&#x5B57; var a = { name : Jacob } &#x7ACB;&#x5373;&#x51FD;&#x5F0F; (&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#立即函式":{"title":"&#x7ACB;&#x5373;&#x51FD;&#x5F0F;","path":"\\javascript\\core.html#立即函式","body":"(&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#ASI-自動分號插入":{"title":"ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;","path":"\\javascript\\core.html#ASI-自動分號插入","body":"&#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#動態型別":{"title":"&#x52D5;&#x614B;&#x578B;&#x5225;","path":"\\javascript\\core.html#動態型別","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#原始型別及物件型別":{"title":"&#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225;","path":"\\javascript\\core.html#原始型別及物件型別","body":"&#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#運算子":{"title":"&#x904B;&#x7B97;&#x5B50;","path":"\\javascript\\core.html#運算子","body":"&#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#嚴格相等-寬鬆相等":{"title":"&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49;","path":"\\javascript\\core.html#嚴格相等-寬鬆相等","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#Truthy":{"title":"Truthy","path":"\\javascript\\core.html#Truthy","body":"Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#邏輯運算子及函式預設值":{"title":"&#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C;","path":"\\javascript\\core.html#邏輯運算子及函式預設值","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#物件記憶體空間":{"title":"&#x7269;&#x4EF6;&#x8A18;&#x61B6;&#x9AD4;&#x7A7A;&#x9593;","path":"\\javascript\\core.html#物件記憶體空間","body":"1 2 3 4 5 var person = { name: &apos;Jacob&apos; } var person2 = person person2 = &apos;Hsu&apos; //find 0x01 change name&apos;s value &#x53C3;&#x8003;&#x7269;&#x4EF6; Value 0x01 name Jacob &#x7269;&#x4EF6;&#x8B8A;&#x6578; Value person 0x01 person2 0x01 1 2 3 4 5 6 7 8 // &#x898B;&#x5927;&#x62EC;&#x865F; &#x751F;&#x6210;&#x65B0;&#x7684;&#x53C3;&#x8003;&#x7269;&#x4EF6; var company = { team: &apos;dev&apos; , member: { rd: &apos;Jacob&apos; qa: &apos;Claire&apos; } } &#x53C3;&#x8003;&#x7269;&#x4EF6; Value 0x01 team dev member 0x02 | 0x02 | | | rd | Jacob | | qa | Claire | &#x7269;&#x4EF6;&#x8B8A;&#x6578; Value company 0x01 &#x7D14;&#x503C;&#x7121;&#x6CD5;&#x65B0;&#x589E;&#x5C6C;&#x6027; js&#x5169;&#x7A2E;&#x578B;&#x5225; &#x4E0D;&#x662F;&#x7D14;&#x503C; &#x5C31;&#x662F;&#x7269;&#x4EF6; (function&#x662F;&#x7269;&#x4EF6;) 1 2 3 4 5 6 7 8 9 10 11 12 13 var newStr = &apos;myname&apos; //&#x7D14;&#x503C; newStr.name = &apos;Jacob&apos; console .log(newStr) var newStr2 = new String ( &apos;myname&apos; ) //&#x5EFA;&#x69CB;&#x5F0F; &#x7269;&#x4EF6; newStr2.name = &apos;Jacob&apos; console .log(newStr2) function callFn ( ) { console .log( &apos;fun&apos; ) } console .log(callFn) console .dir(callFn) //&#x770B;&#x898B;&#x7269;&#x4EF6;&#x6240;&#x6709;&#x5C6C;&#x6027;&#x5167;&#x5BB9; &#x7D14;&#x503C; &#x50B3;&#x503C;(call by value) &#x7269;&#x4EF6;(&#x9663;&#x5217; &#x51FD;&#x5F0F;)) &#x50B3;&#x53C3;&#x8003;(call by reference) &#x6DF1;&#x6DFA;&#x62F7;&#x8C9D; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 var family = { name: &apos;Hsu&apos; , member: { father: &apos;dad&apos; , monther: &apos;mom&apos; , other: &apos;someone&apos; } } var newFamily = {} for ( var key in family) { console .log(key, family[key]); newFamily[key] =family[key]; } newFamily.name = &apos;Chen&apos; console .log(family, newFamily) newFamily.member.other = &apos;stranger&apos; console .log(family, newFamily) //for in&#x53EA;&#x80FD;&#x505A;&#x7B2C;&#x4E00;&#x5C64;&#x7684;&#x8907;&#x88FD; &#x7B2C;&#x4E8C;&#x5C64;&#x662F;&#x50B3;&#x53C3;&#x8003;&#x7684;&#x5F62;&#x5F0F; //&#x6DFA;&#x5C64;&#x8907;&#x88FD; js for in, jQuery extend, ES6 assign //jQuery var newFamily2 = jQuery.extend({}, family); //ES6 var newFamily3 = Object .assign({}, family) //&#x6DF1;&#x5C64;&#x8907;&#x88FD; deep copy &#x6703;&#x5C07;&#x539F;&#x672C;&#x7684;&#x7269;&#x4EF6;&#x8F49;&#x6210;&#x5B57;&#x4E32;&#x518D;&#x8F49;&#x56DE;&#x4F86; &#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027;&#x6703;&#x6C92;&#x6709; //console.log(family, JSON.stringify(family)) console .log(family, JSON .parse( JSON .stringify(family) )) var newFamily4 = JSON .parse( JSON .stringify(family) ); console .log(family === newFamily4) newFamily4.name = &apos;Liao&apos; newFamily4.member.other = &apos;Deep&apos; console .log(family, newFamily4) //&#x5169;&#x8005;&#x5B8C;&#x5168;&#x7121;&#x95DC; &#x53C3;&#x8003;&#x4E5F;&#x90FD;&#x4E0D;&#x4E00;&#x6A23; &#x9663;&#x5217; &#x9663;&#x5217;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225;&#x7684;&#x4E00;&#x7A2E; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var newArray = [ 1 , &apos;Str&apos; , true , { name: &apos;Jacob&apos; } ]; console .log(newArray[ 3 ]); //[object Object] { name: Jacob} console .log(newArray .3 ); //error newArray.push( 5 ); newArray.name = &apos;Hsu&apos; ; //&#x7269;&#x4EF6;&#x53EF;&#x96A8;&#x610F;&#x589E;&#x52A0;&#x5C6C;&#x6027; newArray[ 5 ] = &apos;Chen&apos; ; newArray[ 7 ] = &apos;Liao&apos; ; //&#x9663;&#x5217;6 empty &#x53D6;&#x503C;undefined console .log(newArray); //name&#x4E0D;&#x5C6C;&#x65BC;&#x9663;&#x5217;&#x88E1;&#x9762;&#x7684;&#x9577;&#x5EA6; for ( var i= 0 ;inewArray.length;i++) { console .log(newArray[i]) } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a = [ 1 , 2 , 3 ]; console .log(a, a[ 1 ], a.length) //forEach &#x4E0D;&#x662F;&#x5BE6;&#x9AD4;&#x5C6C;&#x6027; &#x662F;&#x9663;&#x5217;&#x539F;&#x578B;&#x7684;&#x5C6C;&#x6027; a.forEach( function ( i ) { console .log(i) }); ( 3 )&#xA0;[ 1 , 2 , 3 ] 0 : 1 1 : 2 2 : 3 length: 3 // length &#x4E5F;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#x7684;&#x5C6C;&#x6027; __proto__: Array ( 0 ) //&#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x53EF;&#x4EE5;&#x900F;&#x904E;&#x9EDE;&#x904B;&#x7B97;&#x5B50;&#x4E0D;&#x65B7;&#x5411;&#x4E0A;&#x67E5;&#x627E;&#x53D6;&#x5F97;&#x65B9;&#x6CD5; &#x4F8B;:forEach ... __proto__: Object // &#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x7E7C;&#x627F;&#x7269;&#x4EF6;&#x7684;&#x539F;&#x578B; &#x6240;&#x4EE5;&#x9663;&#x5217;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7269;&#x4EF6;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5; &#x4F8B;:toString 1 2 3 4 5 6 7 8 var a = [ 1 , 2 , 3 ]; var b = [ 4 , 5 , 6 ]; //&#x65B0;&#x589E;&#x65B9;&#x6CD5;&#x5230;&#x539F;&#x578B;&#x93C8;&#x4E0A; a.__proto__.getLast = function ( ) { return this [ this .length -1 ]; //b[b.length-1] } console .log(a, b, a.getLast(), a.toString()) JSON JSON - &#x7DAD;&#x57FA;&#x767E;&#x79D1; &#x5118;&#x7BA1;JSON&#x662F;JavaScript&#x7684;&#x4E00;&#x500B;&#x5B50;&#x96C6;&#xFF0C;&#x4F46;JSON&#x662F;&#x7368;&#x7ACB;&#x65BC;&#x8A9E;&#x8A00;&#x7684;&#x6587;&#x5B57;&#x683C;&#x5F0F; JSON&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x4E00;&#x5B9A;&#x90FD;&#x662F;&#x5B57;&#x4E32;&#x7684;&#x5F62;&#x5F0F; &#x7269;&#x4EF6;&#x53EF;&#x4EE5;&#x7528;&#x55AE;&#x5F15;&#x865F; &apos; &#x4F46;JSON&#x4E00;&#x5F8B;&#x7528;&#x96D9;&#x5F15;&#x865F;  SON &#x7684;&#x683C;&#x5F0F;&#x662F;&#x975E;&#x5E38;&#x56B4;&#x683C;&#x7684;&#xFF0C;&#x591A;&#x4E00;&#x500B;&#x9017;&#x865F;&#x5C11;&#x4E00;&#x500B;&#x9017;&#x865F;&#xFF0C;&#x90FD;&#x6703;&#x5C0E;&#x81F4;&#x51FA;&#x73FE;&#x932F;&#x8AA4;&#xFF0C; &#x6240;&#x4EE5;&#x6700;&#x5F8C;&#x4E00;&#x7B46;&#x4E0D;&#x53EF;&#x591A;&#x4E86;&#x4E00;&#x500B;&#x9017;&#x865F; &#x900F;&#x904E; JSON.parse() &#x51FA;&#x4F86;&#x7684;&#x8CC7;&#x6599;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x7269;&#x4EF6;&#x6703;&#x6709;&#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027; &#x5F8C;&#x7E8C;&#x7684;&#x503C;&#x8B8A;&#x66F4;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x503C;&#x4E5F;&#x6703;&#x8B8A;&#x66F4; &#x539F;&#x751F;AJAX&#x8B80;JSON 1 2 3 4 5 6 7 8 9 10 //&#x539F;&#x751F;AJAX function getData ( ) { console .log( this .response) var data = JSON .parse( this .response); console .log(data); } var oReq = new XMLHttpRequest(); oReq.addEventListener( load , getData); oReq.open( GET , family.json ) //&#x50B3;&#x5165;&#x7684;&#x5B57;&#x4E32; oReq.send(); &#x900F;&#x904E;&#x958B;&#x767C;&#x5DE5;&#x5177;Network&#x53EF;&#x4EE5;&#x770B;&#x7D50;&#x679C; function &#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#純值無法新增屬性":{"title":"&#x7D14;&#x503C;&#x7121;&#x6CD5;&#x65B0;&#x589E;&#x5C6C;&#x6027;","path":"\\javascript\\core.html#純值無法新增屬性","body":"js&#x5169;&#x7A2E;&#x578B;&#x5225; &#x4E0D;&#x662F;&#x7D14;&#x503C; &#x5C31;&#x662F;&#x7269;&#x4EF6; (function&#x662F;&#x7269;&#x4EF6;) 1 2 3 4 5 6 7 8 9 10 11 12 13 var newStr = &apos;myname&apos; //&#x7D14;&#x503C; newStr.name = &apos;Jacob&apos; console .log(newStr) var newStr2 = new String ( &apos;myname&apos; ) //&#x5EFA;&#x69CB;&#x5F0F; &#x7269;&#x4EF6; newStr2.name = &apos;Jacob&apos; console .log(newStr2) function callFn ( ) { console .log( &apos;fun&apos; ) } console .log(callFn) console .dir(callFn) //&#x770B;&#x898B;&#x7269;&#x4EF6;&#x6240;&#x6709;&#x5C6C;&#x6027;&#x5167;&#x5BB9; &#x7D14;&#x503C; &#x50B3;&#x503C;(call by value) &#x7269;&#x4EF6;(&#x9663;&#x5217; &#x51FD;&#x5F0F;)) &#x50B3;&#x53C3;&#x8003;(call by reference) &#x6DF1;&#x6DFA;&#x62F7;&#x8C9D; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 var family = { name: &apos;Hsu&apos; , member: { father: &apos;dad&apos; , monther: &apos;mom&apos; , other: &apos;someone&apos; } } var newFamily = {} for ( var key in family) { console .log(key, family[key]); newFamily[key] =family[key]; } newFamily.name = &apos;Chen&apos; console .log(family, newFamily) newFamily.member.other = &apos;stranger&apos; console .log(family, newFamily) //for in&#x53EA;&#x80FD;&#x505A;&#x7B2C;&#x4E00;&#x5C64;&#x7684;&#x8907;&#x88FD; &#x7B2C;&#x4E8C;&#x5C64;&#x662F;&#x50B3;&#x53C3;&#x8003;&#x7684;&#x5F62;&#x5F0F; //&#x6DFA;&#x5C64;&#x8907;&#x88FD; js for in, jQuery extend, ES6 assign //jQuery var newFamily2 = jQuery.extend({}, family); //ES6 var newFamily3 = Object .assign({}, family) //&#x6DF1;&#x5C64;&#x8907;&#x88FD; deep copy &#x6703;&#x5C07;&#x539F;&#x672C;&#x7684;&#x7269;&#x4EF6;&#x8F49;&#x6210;&#x5B57;&#x4E32;&#x518D;&#x8F49;&#x56DE;&#x4F86; &#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027;&#x6703;&#x6C92;&#x6709; //console.log(family, JSON.stringify(family)) console .log(family, JSON .parse( JSON .stringify(family) )) var newFamily4 = JSON .parse( JSON .stringify(family) ); console .log(family === newFamily4) newFamily4.name = &apos;Liao&apos; newFamily4.member.other = &apos;Deep&apos; console .log(family, newFamily4) //&#x5169;&#x8005;&#x5B8C;&#x5168;&#x7121;&#x95DC; &#x53C3;&#x8003;&#x4E5F;&#x90FD;&#x4E0D;&#x4E00;&#x6A23; &#x9663;&#x5217; &#x9663;&#x5217;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225;&#x7684;&#x4E00;&#x7A2E; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var newArray = [ 1 , &apos;Str&apos; , true , { name: &apos;Jacob&apos; } ]; console .log(newArray[ 3 ]); //[object Object] { name: Jacob} console .log(newArray .3 ); //error newArray.push( 5 ); newArray.name = &apos;Hsu&apos; ; //&#x7269;&#x4EF6;&#x53EF;&#x96A8;&#x610F;&#x589E;&#x52A0;&#x5C6C;&#x6027; newArray[ 5 ] = &apos;Chen&apos; ; newArray[ 7 ] = &apos;Liao&apos; ; //&#x9663;&#x5217;6 empty &#x53D6;&#x503C;undefined console .log(newArray); //name&#x4E0D;&#x5C6C;&#x65BC;&#x9663;&#x5217;&#x88E1;&#x9762;&#x7684;&#x9577;&#x5EA6; for ( var i= 0 ;inewArray.length;i++) { console .log(newArray[i]) } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a = [ 1 , 2 , 3 ]; console .log(a, a[ 1 ], a.length) //forEach &#x4E0D;&#x662F;&#x5BE6;&#x9AD4;&#x5C6C;&#x6027; &#x662F;&#x9663;&#x5217;&#x539F;&#x578B;&#x7684;&#x5C6C;&#x6027; a.forEach( function ( i ) { console .log(i) }); ( 3 )&#xA0;[ 1 , 2 , 3 ] 0 : 1 1 : 2 2 : 3 length: 3 // length &#x4E5F;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#x7684;&#x5C6C;&#x6027; __proto__: Array ( 0 ) //&#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x53EF;&#x4EE5;&#x900F;&#x904E;&#x9EDE;&#x904B;&#x7B97;&#x5B50;&#x4E0D;&#x65B7;&#x5411;&#x4E0A;&#x67E5;&#x627E;&#x53D6;&#x5F97;&#x65B9;&#x6CD5; &#x4F8B;:forEach ... __proto__: Object // &#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x7E7C;&#x627F;&#x7269;&#x4EF6;&#x7684;&#x539F;&#x578B; &#x6240;&#x4EE5;&#x9663;&#x5217;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7269;&#x4EF6;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5; &#x4F8B;:toString 1 2 3 4 5 6 7 8 var a = [ 1 , 2 , 3 ]; var b = [ 4 , 5 , 6 ]; //&#x65B0;&#x589E;&#x65B9;&#x6CD5;&#x5230;&#x539F;&#x578B;&#x93C8;&#x4E0A; a.__proto__.getLast = function ( ) { return this [ this .length -1 ]; //b[b.length-1] } console .log(a, b, a.getLast(), a.toString()) JSON JSON - &#x7DAD;&#x57FA;&#x767E;&#x79D1; &#x5118;&#x7BA1;JSON&#x662F;JavaScript&#x7684;&#x4E00;&#x500B;&#x5B50;&#x96C6;&#xFF0C;&#x4F46;JSON&#x662F;&#x7368;&#x7ACB;&#x65BC;&#x8A9E;&#x8A00;&#x7684;&#x6587;&#x5B57;&#x683C;&#x5F0F; JSON&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x4E00;&#x5B9A;&#x90FD;&#x662F;&#x5B57;&#x4E32;&#x7684;&#x5F62;&#x5F0F; &#x7269;&#x4EF6;&#x53EF;&#x4EE5;&#x7528;&#x55AE;&#x5F15;&#x865F; &apos; &#x4F46;JSON&#x4E00;&#x5F8B;&#x7528;&#x96D9;&#x5F15;&#x865F;  SON &#x7684;&#x683C;&#x5F0F;&#x662F;&#x975E;&#x5E38;&#x56B4;&#x683C;&#x7684;&#xFF0C;&#x591A;&#x4E00;&#x500B;&#x9017;&#x865F;&#x5C11;&#x4E00;&#x500B;&#x9017;&#x865F;&#xFF0C;&#x90FD;&#x6703;&#x5C0E;&#x81F4;&#x51FA;&#x73FE;&#x932F;&#x8AA4;&#xFF0C; &#x6240;&#x4EE5;&#x6700;&#x5F8C;&#x4E00;&#x7B46;&#x4E0D;&#x53EF;&#x591A;&#x4E86;&#x4E00;&#x500B;&#x9017;&#x865F; &#x900F;&#x904E; JSON.parse() &#x51FA;&#x4F86;&#x7684;&#x8CC7;&#x6599;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x7269;&#x4EF6;&#x6703;&#x6709;&#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027; &#x5F8C;&#x7E8C;&#x7684;&#x503C;&#x8B8A;&#x66F4;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x503C;&#x4E5F;&#x6703;&#x8B8A;&#x66F4; &#x539F;&#x751F;AJAX&#x8B80;JSON 1 2 3 4 5 6 7 8 9 10 //&#x539F;&#x751F;AJAX function getData ( ) { console .log( this .response) var data = JSON .parse( this .response); console .log(data); } var oReq = new XMLHttpRequest(); oReq.addEventListener( load , getData); oReq.open( GET , family.json ) //&#x50B3;&#x5165;&#x7684;&#x5B57;&#x4E32; oReq.send(); &#x900F;&#x904E;&#x958B;&#x767C;&#x5DE5;&#x5177;Network&#x53EF;&#x4EE5;&#x770B;&#x7D50;&#x679C; function &#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#深淺拷貝":{"title":"&#x6DF1;&#x6DFA;&#x62F7;&#x8C9D;","path":"\\javascript\\core.html#深淺拷貝","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 var family = { name: &apos;Hsu&apos; , member: { father: &apos;dad&apos; , monther: &apos;mom&apos; , other: &apos;someone&apos; } } var newFamily = {} for ( var key in family) { console .log(key, family[key]); newFamily[key] =family[key]; } newFamily.name = &apos;Chen&apos; console .log(family, newFamily) newFamily.member.other = &apos;stranger&apos; console .log(family, newFamily) //for in&#x53EA;&#x80FD;&#x505A;&#x7B2C;&#x4E00;&#x5C64;&#x7684;&#x8907;&#x88FD; &#x7B2C;&#x4E8C;&#x5C64;&#x662F;&#x50B3;&#x53C3;&#x8003;&#x7684;&#x5F62;&#x5F0F; //&#x6DFA;&#x5C64;&#x8907;&#x88FD; js for in, jQuery extend, ES6 assign //jQuery var newFamily2 = jQuery.extend({}, family); //ES6 var newFamily3 = Object .assign({}, family) //&#x6DF1;&#x5C64;&#x8907;&#x88FD; deep copy &#x6703;&#x5C07;&#x539F;&#x672C;&#x7684;&#x7269;&#x4EF6;&#x8F49;&#x6210;&#x5B57;&#x4E32;&#x518D;&#x8F49;&#x56DE;&#x4F86; &#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027;&#x6703;&#x6C92;&#x6709; //console.log(family, JSON.stringify(family)) console .log(family, JSON .parse( JSON .stringify(family) )) var newFamily4 = JSON .parse( JSON .stringify(family) ); console .log(family === newFamily4) newFamily4.name = &apos;Liao&apos; newFamily4.member.other = &apos;Deep&apos; console .log(family, newFamily4) //&#x5169;&#x8005;&#x5B8C;&#x5168;&#x7121;&#x95DC; &#x53C3;&#x8003;&#x4E5F;&#x90FD;&#x4E0D;&#x4E00;&#x6A23; &#x9663;&#x5217; &#x9663;&#x5217;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225;&#x7684;&#x4E00;&#x7A2E; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var newArray = [ 1 , &apos;Str&apos; , true , { name: &apos;Jacob&apos; } ]; console .log(newArray[ 3 ]); //[object Object] { name: Jacob} console .log(newArray .3 ); //error newArray.push( 5 ); newArray.name = &apos;Hsu&apos; ; //&#x7269;&#x4EF6;&#x53EF;&#x96A8;&#x610F;&#x589E;&#x52A0;&#x5C6C;&#x6027; newArray[ 5 ] = &apos;Chen&apos; ; newArray[ 7 ] = &apos;Liao&apos; ; //&#x9663;&#x5217;6 empty &#x53D6;&#x503C;undefined console .log(newArray); //name&#x4E0D;&#x5C6C;&#x65BC;&#x9663;&#x5217;&#x88E1;&#x9762;&#x7684;&#x9577;&#x5EA6; for ( var i= 0 ;inewArray.length;i++) { console .log(newArray[i]) } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a = [ 1 , 2 , 3 ]; console .log(a, a[ 1 ], a.length) //forEach &#x4E0D;&#x662F;&#x5BE6;&#x9AD4;&#x5C6C;&#x6027; &#x662F;&#x9663;&#x5217;&#x539F;&#x578B;&#x7684;&#x5C6C;&#x6027; a.forEach( function ( i ) { console .log(i) }); ( 3 )&#xA0;[ 1 , 2 , 3 ] 0 : 1 1 : 2 2 : 3 length: 3 // length &#x4E5F;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#x7684;&#x5C6C;&#x6027; __proto__: Array ( 0 ) //&#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x53EF;&#x4EE5;&#x900F;&#x904E;&#x9EDE;&#x904B;&#x7B97;&#x5B50;&#x4E0D;&#x65B7;&#x5411;&#x4E0A;&#x67E5;&#x627E;&#x53D6;&#x5F97;&#x65B9;&#x6CD5; &#x4F8B;:forEach ... __proto__: Object // &#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x7E7C;&#x627F;&#x7269;&#x4EF6;&#x7684;&#x539F;&#x578B; &#x6240;&#x4EE5;&#x9663;&#x5217;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7269;&#x4EF6;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5; &#x4F8B;:toString 1 2 3 4 5 6 7 8 var a = [ 1 , 2 , 3 ]; var b = [ 4 , 5 , 6 ]; //&#x65B0;&#x589E;&#x65B9;&#x6CD5;&#x5230;&#x539F;&#x578B;&#x93C8;&#x4E0A; a.__proto__.getLast = function ( ) { return this [ this .length -1 ]; //b[b.length-1] } console .log(a, b, a.getLast(), a.toString()) JSON JSON - &#x7DAD;&#x57FA;&#x767E;&#x79D1; &#x5118;&#x7BA1;JSON&#x662F;JavaScript&#x7684;&#x4E00;&#x500B;&#x5B50;&#x96C6;&#xFF0C;&#x4F46;JSON&#x662F;&#x7368;&#x7ACB;&#x65BC;&#x8A9E;&#x8A00;&#x7684;&#x6587;&#x5B57;&#x683C;&#x5F0F; JSON&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x4E00;&#x5B9A;&#x90FD;&#x662F;&#x5B57;&#x4E32;&#x7684;&#x5F62;&#x5F0F; &#x7269;&#x4EF6;&#x53EF;&#x4EE5;&#x7528;&#x55AE;&#x5F15;&#x865F; &apos; &#x4F46;JSON&#x4E00;&#x5F8B;&#x7528;&#x96D9;&#x5F15;&#x865F;  SON &#x7684;&#x683C;&#x5F0F;&#x662F;&#x975E;&#x5E38;&#x56B4;&#x683C;&#x7684;&#xFF0C;&#x591A;&#x4E00;&#x500B;&#x9017;&#x865F;&#x5C11;&#x4E00;&#x500B;&#x9017;&#x865F;&#xFF0C;&#x90FD;&#x6703;&#x5C0E;&#x81F4;&#x51FA;&#x73FE;&#x932F;&#x8AA4;&#xFF0C; &#x6240;&#x4EE5;&#x6700;&#x5F8C;&#x4E00;&#x7B46;&#x4E0D;&#x53EF;&#x591A;&#x4E86;&#x4E00;&#x500B;&#x9017;&#x865F; &#x900F;&#x904E; JSON.parse() &#x51FA;&#x4F86;&#x7684;&#x8CC7;&#x6599;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x7269;&#x4EF6;&#x6703;&#x6709;&#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027; &#x5F8C;&#x7E8C;&#x7684;&#x503C;&#x8B8A;&#x66F4;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x503C;&#x4E5F;&#x6703;&#x8B8A;&#x66F4; &#x539F;&#x751F;AJAX&#x8B80;JSON 1 2 3 4 5 6 7 8 9 10 //&#x539F;&#x751F;AJAX function getData ( ) { console .log( this .response) var data = JSON .parse( this .response); console .log(data); } var oReq = new XMLHttpRequest(); oReq.addEventListener( load , getData); oReq.open( GET , family.json ) //&#x50B3;&#x5165;&#x7684;&#x5B57;&#x4E32; oReq.send(); &#x900F;&#x904E;&#x958B;&#x767C;&#x5DE5;&#x5177;Network&#x53EF;&#x4EE5;&#x770B;&#x7D50;&#x679C; function &#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#陣列":{"title":"&#x9663;&#x5217;","path":"\\javascript\\core.html#陣列","body":"&#x9663;&#x5217;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225;&#x7684;&#x4E00;&#x7A2E; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var newArray = [ 1 , &apos;Str&apos; , true , { name: &apos;Jacob&apos; } ]; console .log(newArray[ 3 ]); //[object Object] { name: Jacob} console .log(newArray .3 ); //error newArray.push( 5 ); newArray.name = &apos;Hsu&apos; ; //&#x7269;&#x4EF6;&#x53EF;&#x96A8;&#x610F;&#x589E;&#x52A0;&#x5C6C;&#x6027; newArray[ 5 ] = &apos;Chen&apos; ; newArray[ 7 ] = &apos;Liao&apos; ; //&#x9663;&#x5217;6 empty &#x53D6;&#x503C;undefined console .log(newArray); //name&#x4E0D;&#x5C6C;&#x65BC;&#x9663;&#x5217;&#x88E1;&#x9762;&#x7684;&#x9577;&#x5EA6; for ( var i= 0 ;inewArray.length;i++) { console .log(newArray[i]) } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a = [ 1 , 2 , 3 ]; console .log(a, a[ 1 ], a.length) //forEach &#x4E0D;&#x662F;&#x5BE6;&#x9AD4;&#x5C6C;&#x6027; &#x662F;&#x9663;&#x5217;&#x539F;&#x578B;&#x7684;&#x5C6C;&#x6027; a.forEach( function ( i ) { console .log(i) }); ( 3 )&#xA0;[ 1 , 2 , 3 ] 0 : 1 1 : 2 2 : 3 length: 3 // length &#x4E5F;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#x7684;&#x5C6C;&#x6027; __proto__: Array ( 0 ) //&#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x53EF;&#x4EE5;&#x900F;&#x904E;&#x9EDE;&#x904B;&#x7B97;&#x5B50;&#x4E0D;&#x65B7;&#x5411;&#x4E0A;&#x67E5;&#x627E;&#x53D6;&#x5F97;&#x65B9;&#x6CD5; &#x4F8B;:forEach ... __proto__: Object // &#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x7E7C;&#x627F;&#x7269;&#x4EF6;&#x7684;&#x539F;&#x578B; &#x6240;&#x4EE5;&#x9663;&#x5217;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7269;&#x4EF6;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5; &#x4F8B;:toString 1 2 3 4 5 6 7 8 var a = [ 1 , 2 , 3 ]; var b = [ 4 , 5 , 6 ]; //&#x65B0;&#x589E;&#x65B9;&#x6CD5;&#x5230;&#x539F;&#x578B;&#x93C8;&#x4E0A; a.__proto__.getLast = function ( ) { return this [ this .length -1 ]; //b[b.length-1] } console .log(a, b, a.getLast(), a.toString()) JSON JSON - &#x7DAD;&#x57FA;&#x767E;&#x79D1; &#x5118;&#x7BA1;JSON&#x662F;JavaScript&#x7684;&#x4E00;&#x500B;&#x5B50;&#x96C6;&#xFF0C;&#x4F46;JSON&#x662F;&#x7368;&#x7ACB;&#x65BC;&#x8A9E;&#x8A00;&#x7684;&#x6587;&#x5B57;&#x683C;&#x5F0F; JSON&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x4E00;&#x5B9A;&#x90FD;&#x662F;&#x5B57;&#x4E32;&#x7684;&#x5F62;&#x5F0F; &#x7269;&#x4EF6;&#x53EF;&#x4EE5;&#x7528;&#x55AE;&#x5F15;&#x865F; &apos; &#x4F46;JSON&#x4E00;&#x5F8B;&#x7528;&#x96D9;&#x5F15;&#x865F;  SON &#x7684;&#x683C;&#x5F0F;&#x662F;&#x975E;&#x5E38;&#x56B4;&#x683C;&#x7684;&#xFF0C;&#x591A;&#x4E00;&#x500B;&#x9017;&#x865F;&#x5C11;&#x4E00;&#x500B;&#x9017;&#x865F;&#xFF0C;&#x90FD;&#x6703;&#x5C0E;&#x81F4;&#x51FA;&#x73FE;&#x932F;&#x8AA4;&#xFF0C; &#x6240;&#x4EE5;&#x6700;&#x5F8C;&#x4E00;&#x7B46;&#x4E0D;&#x53EF;&#x591A;&#x4E86;&#x4E00;&#x500B;&#x9017;&#x865F; &#x900F;&#x904E; JSON.parse() &#x51FA;&#x4F86;&#x7684;&#x8CC7;&#x6599;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x7269;&#x4EF6;&#x6703;&#x6709;&#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027; &#x5F8C;&#x7E8C;&#x7684;&#x503C;&#x8B8A;&#x66F4;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x503C;&#x4E5F;&#x6703;&#x8B8A;&#x66F4; &#x539F;&#x751F;AJAX&#x8B80;JSON 1 2 3 4 5 6 7 8 9 10 //&#x539F;&#x751F;AJAX function getData ( ) { console .log( this .response) var data = JSON .parse( this .response); console .log(data); } var oReq = new XMLHttpRequest(); oReq.addEventListener( load , getData); oReq.open( GET , family.json ) //&#x50B3;&#x5165;&#x7684;&#x5B57;&#x4E32; oReq.send(); &#x900F;&#x904E;&#x958B;&#x767C;&#x5DE5;&#x5177;Network&#x53EF;&#x4EE5;&#x770B;&#x7D50;&#x679C; function &#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#JSON":{"title":"JSON","path":"\\javascript\\core.html#JSON","body":"JSON - &#x7DAD;&#x57FA;&#x767E;&#x79D1; &#x5118;&#x7BA1;JSON&#x662F;JavaScript&#x7684;&#x4E00;&#x500B;&#x5B50;&#x96C6;&#xFF0C;&#x4F46;JSON&#x662F;&#x7368;&#x7ACB;&#x65BC;&#x8A9E;&#x8A00;&#x7684;&#x6587;&#x5B57;&#x683C;&#x5F0F; JSON&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x4E00;&#x5B9A;&#x90FD;&#x662F;&#x5B57;&#x4E32;&#x7684;&#x5F62;&#x5F0F; &#x7269;&#x4EF6;&#x53EF;&#x4EE5;&#x7528;&#x55AE;&#x5F15;&#x865F; &apos; &#x4F46;JSON&#x4E00;&#x5F8B;&#x7528;&#x96D9;&#x5F15;&#x865F;  SON &#x7684;&#x683C;&#x5F0F;&#x662F;&#x975E;&#x5E38;&#x56B4;&#x683C;&#x7684;&#xFF0C;&#x591A;&#x4E00;&#x500B;&#x9017;&#x865F;&#x5C11;&#x4E00;&#x500B;&#x9017;&#x865F;&#xFF0C;&#x90FD;&#x6703;&#x5C0E;&#x81F4;&#x51FA;&#x73FE;&#x932F;&#x8AA4;&#xFF0C; &#x6240;&#x4EE5;&#x6700;&#x5F8C;&#x4E00;&#x7B46;&#x4E0D;&#x53EF;&#x591A;&#x4E86;&#x4E00;&#x500B;&#x9017;&#x865F; &#x900F;&#x904E; JSON.parse() &#x51FA;&#x4F86;&#x7684;&#x8CC7;&#x6599;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x7269;&#x4EF6;&#x6703;&#x6709;&#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027; &#x5F8C;&#x7E8C;&#x7684;&#x503C;&#x8B8A;&#x66F4;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x503C;&#x4E5F;&#x6703;&#x8B8A;&#x66F4; &#x539F;&#x751F;AJAX&#x8B80;JSON 1 2 3 4 5 6 7 8 9 10 //&#x539F;&#x751F;AJAX function getData ( ) { console .log( this .response) var data = JSON .parse( this .response); console .log(data); } var oReq = new XMLHttpRequest(); oReq.addEventListener( load , getData); oReq.open( GET , family.json ) //&#x50B3;&#x5165;&#x7684;&#x5B57;&#x4E32; oReq.send(); &#x900F;&#x904E;&#x958B;&#x767C;&#x5DE5;&#x5177;Network&#x53EF;&#x4EE5;&#x770B;&#x7D50;&#x679C; function &#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#function":{"title":"function","path":"\\javascript\\core.html#function","body":"&#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#立即函式-IIFE":{"title":"&#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE)","path":"\\javascript\\core.html#立即函式-IIFE","body":"&#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#參數":{"title":"&#x53C3;&#x6578;","path":"\\javascript\\core.html#參數","body":"1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#閉包-Closure":{"title":"&#x9589;&#x5305; Closure","path":"\\javascript\\core.html#閉包-Closure","body":"1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#函式工廠":{"title":"&#x51FD;&#x5F0F;&#x5DE5;&#x5EE0;","path":"\\javascript\\core.html#函式工廠","body":"&#x7D66;&#x4E0D;&#x540C;&#x7684;&#x503C;&#x3000;&#x505A;&#x76F8;&#x540C;&#x7684;&#x4E8B;&#x60C5; 1 2 3 4 5 6 7 8 9 function storeMoney ( initVal ) { var money = initVal || 1000 return function ( price ) { money = money + price; return money; } } var MingMoney = storeMoney( 100 ); console .log(MingMoney( 500 )) // 600 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 function storeMoney ( initVal ) { var money = initVal || 1000 // &#x79C1;&#x6709;&#x65B9;&#x6CD5; &#x53EF;&#x4EE5;&#x505A;&#x5F88;&#x591A;&#x4E0D;&#x540C;&#x4E8B;&#x60C5; return { increase: function ( price ) { money += price }, decrease: function ( price ) { money -= price }, value: function ( ) { return money; } } } var MingMoney = storeMoney( 100 ); MingMoney.increase( 100 ); MingMoney.increase( 25 ); MingMoney.decrease( 25 ); console .log(MingMoney.value()) // 200"},"core.html#this":{"title":"this","path":"\\javascript\\core.html#this","body":"chrome / devTool / Sources / || &#x66AB;&#x505C;&#x6309;&#x9215; / &#x9032;&#x5165;&#x57F7;&#x884C;&#x5806;&#x758A; this &#x70BA;&#x95DC;&#x9375;&#x5B57; &#x5728;&#x6BCF;&#x500B;&#x57F7;&#x884C;&#x74B0;&#x5883;&#x5B58;&#x5728; this &#x7684;&#x8ABF;&#x7528;&#x65B9;&#x5F0F; &#x4F5C;&#x70BA;&#x7269;&#x4EF6;&#x65B9;&#x6CD5; &#x95DC;&#x6CE8;&#x5728;&#x54EA;&#x500B;&#x7269;&#x4EF6;&#x4E0B;&#x547C;&#x53EB; Object.fn() this &#x6307;&#x5411; Object &#x7C21;&#x6613;&#x547C;&#x53EB; (&#x4E0D;&#x5EFA;&#x8B70;&#x8ABF;&#x7528;this) bind, apply, call &#x65B9;&#x6CD5; new DOM&#x4E8B;&#x4EF6;&#x8655;&#x7406;&#x5668; &#x7BAD;&#x982D;&#x51FD;&#x5F0F;(ES6) simple call &#x7C21;&#x6613;&#x547C;&#x53EB; 1 2 3 4 5 6 var myName = &apos;Jacob&apos; ; function callName ( ) { console .log( this , this .myName) } callName() // this - window // &#x76E1;&#x53EF;&#x80FD;&#x4E0D;&#x8981;&#x4F7F;&#x7528;simple call&#x7684;this 1 2 3 4 5 6 7 ( function ( ) { console .log( this .myName); function callFn ( ) { console .log( this .myName); } callFn(); //simple call &#x770B;&#x5230;&#x51FD;&#x5F0F;&#x662F;&#x76F4;&#x63A5;&#x57F7;&#x884C;&#x7684; &#x5C31;&#x662F;&#x7C21;&#x6613;&#x547C;&#x53EB; &#x57F7;&#x884C;&#x9589;&#x5305;&#x5167;&#x51FD;&#x5F0F;&#x4E5F;&#x662F; })(); 1 2 3 4 5 6 7 8 // callback function myCb ( callback ) { var money = 100 return callback(money) } myCb( function ( money ) { console .log( this .myName, money+ 100 ) }) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 var a = [ 1 , 2 , 3 ] // forEach &#x5F8C;&#x65B9;&#x662F;&#x63D2;&#x5165;&#x4E00;&#x500B;callback&#x51FD;&#x5F0F; a.forEach( function ( i ) { console .log( this .myName, i); }) var family = { myName: &apos;Hsu&apos; , callName: function ( ) { // var self = this; // vm , that setTimeout( function ( ) { console .log( this .myName) // simple call this-window &apos;Jacob&apos; &#x7121;&#x6CD5;&#x53D6;&#x5F97;&#x7269;&#x4EF6;&#x7684;myName &apos;Hsu&apos; console .log(self.myName) // &#x7269;&#x4EF6;&#x7684;myName &apos;Hsu&apos; }, 1000 ) } family.callName(); } Call, appply, bind 1 2 3 4 5 6 7 8 9 10 11 12 13 var team = { myName: &apos;Jacob&apos; } function fn ( para1, para2 ) { console .log( this , para1, para2) } fn( 1 , 2 ); //simple call fn.call(team, 1 , 2 ); // call &#x662F;&#x7ACB;&#x523B;&#x57F7;&#x884C; fn.apply(team, [ 3 , 4 ]); // apply &#x662F;&#x7ACB;&#x523B;&#x57F7;&#x884C; &#x5DEE;&#x5225;&#x5728;&#x4EE5;&#x9663;&#x5217;&#x65B9;&#x5F0F;&#x5448;&#x73FE; var fn2 = fn.bind(team, 5 , 6 ); // bind &#x975E;&#x7ACB;&#x523B;&#x57F7;&#x884C; fn2( 6 ); // [object Object] 5 6 &#x9806;&#x5E8F;&#x57F7;&#x884C;&#x53C3;&#x6578;&#x6240;&#x4EE5;&#x662F;6 fn2( 1 , 2 ); // [object Object] 5 1 &#x9806;&#x5E8F;&#x57F7;&#x884C;&#x53C3;&#x6578;&#x6240;&#x4EE5;&#x662F;1 1 2 3 4 5 6 7 8 function fn ( para1, para2 ) { console .log( this , para1, para2) } // &#x9032;&#x968E;&#x6982;&#x5FF5; fn.call( 1 , &apos;Jacob&apos; , &apos;Jessica&apos; ) //&#x50B3;&#x7D14;&#x503C; Number{1} &apos;Jacob&apos;, &apos;Jessica&apos; &#x5DF2;&#x5EFA;&#x69CB;&#x5F0F;&#x65B9;&#x5F0F;&#x5448;&#x73FE; &#x7269;&#x4EF6;&#x7684;&#x578B;&#x5225; fn.call( &apos;Str&apos; , &apos;Jacob&apos; , &apos;Jessica&apos; ) fn.call( undefined , &apos;Jacob&apos; , &apos;Jessica&apos; ) // null &#x3001;undefined &#x5C07;&#x6703;&#x88AB;&#x7F6E;&#x63DB;&#x6210;&#x5168;&#x57DF;&#x8B8A;&#x6578; [object Window] &apos;Jacob&apos;, &apos;Jessica&apos; MDN call() &#x56B4;&#x683C;&#x6A21;&#x5F0F; 1 2 3 4 ( function ( ) { &apos;use strict&apos; ; name = &apos;Jacob&apos; ; // error name is not defined })() 1 2 3 4 5 6 7 function fn ( para1, para2 ) { &apos;use strict&apos; ; // &#x6709;&#x52A0;&#x5165;&#x56B4;&#x683C;&#x6A21;&#x5F0F; this&#x6240;&#x6307;&#x5411;&#x7684;window&#x6703;&#x8B8A;undefined console .log( this , para1, para2) // 1 Jacob Jessica &#x56B4;&#x683C;&#x6A21;&#x5F0F;&#x4E0B; &#x7D14;&#x503C;&#x7DAD;&#x6301;&#x539F;&#x578B;&#x5225; &#x4E0D;&#x4EE5;&#x5EFA;&#x69CB;&#x5F0F;&#x65B9;&#x5F0F;&#x5448;&#x73FE; } fn.call( 1 , &apos;Jacob&apos; , &apos;Jessica&apos; ) fn.call( undefined , &apos;Jacob&apos; , &apos;Jessica&apos; ) // undefined Jacob Jessica // &#x7C21;&#x6613;&#x547C;&#x53EB;&#x4E0B; &#x76E1;&#x53EF;&#x80FD;&#x4E0D;&#x8981;&#x8ABF;&#x7528;this &#x56E0;&#x70BA;&#x5B83;&#x672C;&#x8CEA;&#x5C31;&#x662F;undefined this: DOM 1 2  button onclick = console.log(this)  this is btn / button   button onclick = console.dir(this)  this is btn / button  console.dir(object) new 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function Dog ( name, color, size ) { this .name = name; this .color = color; this .size = size; } var Bibi = new Dog( &apos;&#x6BD4;&#x6BD4;&apos; , &apos;&#x68D5;&#x8272;&apos; , &apos;&#x5C0F;&apos; ) console .log(Bibi) //&#x51FD;&#x5F0F;&#x672C;&#x8EAB;&#x5C31;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6; &#x51FD;&#x5F0F;&#x7269;&#x4EF6;&#x6709;&#x4E00;&#x500B;&#x7279;&#x5225;&#x7684;&#x5C6C;&#x6027; prototype //&#x900F;&#x904E;prototype&#x6240;&#x65B0;&#x589E;&#x7684;&#x5C6C;&#x6027; &#x5C31;&#x6703;&#x505A;&#x539F;&#x578B;&#x4E0A;&#x7684;&#x65B9;&#x6CD5; &#x51FD;&#x5F0F;&#x7269;&#x4EF6;&#x7279;&#x6709;&#x7684;&#x5C6C;&#x6027; Dog.prototype.bark = function ( ) { console .log( this .name, &apos;barking&apos; ) } // __proto__ &#x7269;&#x4EF6;&#x4E0A; // prototype &#x51FD;&#x5F0F;&#x4E0A; // &#x8ABF;&#x6574;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5;&#x6642; &#x6700;&#x597D;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x5F9E;&#x51FD;&#x5F0F;&#x672C;&#x8EAB;&#x7684;&#x539F;&#x578B;&#x5C6C;&#x6027;&#x4E0A;&#x53BB;&#x8ABF;&#x6574; console .log(Dog.prototype === Bibi.__proto__) // true 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 var b = new String ( &apos;bcde&apos; ); console .log(b) console .dir( String ) String .prototype.lastText = function ( ) { return this [ this .length - 1 ]; } console .log(b.lastText()); Number .prototype.secondPower = function ( ) { return this * this ; } var num = 5 ; console .log(num.secondPower()); var date = new Date (); console .log(date); console .dir( Date ); Date .prototype.getFullDate = function ( ) { var dd = String ( this .getDate()); var mm = String ( this .getMonth()+ 1 ); var yyyy = this .getFullYear(); var today = yyyy + &apos;/&apos; + mm + &apos;/&apos; +dd; return today; } console .log(date.getFullDate());"},"core.html#new":{"title":"new","path":"\\javascript\\core.html#new","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function Dog ( name, color, size ) { this .name = name; this .color = color; this .size = size; } var Bibi = new Dog( &apos;&#x6BD4;&#x6BD4;&apos; , &apos;&#x68D5;&#x8272;&apos; , &apos;&#x5C0F;&apos; ) console .log(Bibi) //&#x51FD;&#x5F0F;&#x672C;&#x8EAB;&#x5C31;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6; &#x51FD;&#x5F0F;&#x7269;&#x4EF6;&#x6709;&#x4E00;&#x500B;&#x7279;&#x5225;&#x7684;&#x5C6C;&#x6027; prototype //&#x900F;&#x904E;prototype&#x6240;&#x65B0;&#x589E;&#x7684;&#x5C6C;&#x6027; &#x5C31;&#x6703;&#x505A;&#x539F;&#x578B;&#x4E0A;&#x7684;&#x65B9;&#x6CD5; &#x51FD;&#x5F0F;&#x7269;&#x4EF6;&#x7279;&#x6709;&#x7684;&#x5C6C;&#x6027; Dog.prototype.bark = function ( ) { console .log( this .name, &apos;barking&apos; ) } // __proto__ &#x7269;&#x4EF6;&#x4E0A; // prototype &#x51FD;&#x5F0F;&#x4E0A; // &#x8ABF;&#x6574;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5;&#x6642; &#x6700;&#x597D;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x5F9E;&#x51FD;&#x5F0F;&#x672C;&#x8EAB;&#x7684;&#x539F;&#x578B;&#x5C6C;&#x6027;&#x4E0A;&#x53BB;&#x8ABF;&#x6574; console .log(Dog.prototype === Bibi.__proto__) // true 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 var b = new String ( &apos;bcde&apos; ); console .log(b) console .dir( String ) String .prototype.lastText = function ( ) { return this [ this .length - 1 ]; } console .log(b.lastText()); Number .prototype.secondPower = function ( ) { return this * this ; } var num = 5 ; console .log(num.secondPower()); var date = new Date (); console .log(date); console .dir( Date ); Date .prototype.getFullDate = function ( ) { var dd = String ( this .getDate()); var mm = String ( this .getMonth()+ 1 ); var yyyy = this .getFullYear(); var today = yyyy + &apos;/&apos; + mm + &apos;/&apos; +dd; return today; } console .log(date.getFullDate());"},"core.html#繼承":{"title":"&#x7E7C;&#x627F;","path":"\\javascript\\core.html#繼承","body":"Object.create() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 var a = [] //Object  Array  a (&#x5BE6;&#x9AD4;) //&#x539F;&#x578B;&#x93C8;&#x4E0A;&#x65B0;&#x589E;&#x4E00;&#x500B;&#x5C64;&#x7D1A; //Object  Animal  Dog  &#x5BE6;&#x9AD4; //Object  Animal  Cat  &#x5BE6;&#x9AD4; // Object.create() &#x53EF;&#x4EE5;&#x628A;&#x5176;&#x4ED6;&#x7269;&#x4EF6;&#x4F5C;&#x70BA;&#x539F;&#x578B;&#x4F7F;&#x7528; var dog = { name: &apos;&#x72D7;&apos; , bark: function ( ) { console .log( this .name + &apos; barking&apos; ) } } var Corgi = Object .create(dog); //Corgi &#x628A; dog &#x4F5C;&#x70BA;&#x539F;&#x578B;&#x4F7F;&#x7528; Corgi.name = &apos;Welsh Corgi&apos; console .log(Corgi) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 function Animal ( family ) { this .kingdom = &apos;&#x52D5;&#x7269;&#x754C;&apos; this .family = family || &apos;&#x8C93;&#x79D1;&apos; } Animal.prototype.move = function ( ) { console .log( this .name + &apos; can move&apos; ) } function Dog ( name, size ) { Animal.call( this , &apos;&#x72AC;&#x79D1;&apos; ) this .name = name; this .size = size || &apos;small&apos; } Dog.prototype = Object .create(Animal.prototype) Dog.prototype.constructor = Dog; // &#x72D7;&#x7684;&#x539F;&#x578B;&#x539F;&#x672C;&#x76F4;&#x63A5;&#x7E7C;&#x627F;&#x65BC;&#x52D5;&#x7269;&#x754C;&#x7684;&#x539F;&#x578B; constructor &#x6703;&#x88AB;&#x8986;&#x84CB;&#x6240;&#x4EE5;&#x88DC;&#x56DE;&#x539F;&#x672C;&#x5EFA;&#x69CB;&#x51FD;&#x5F0F; Dog.prototype.bark = function ( ) { console .log( this .name + &apos; barking&apos; ) } var Chihuahua = new Dog( &apos;Chihuahua&apos; , &apos;small&apos; ); console .log(Chihuahua) Chihuahua.bark(); Chihuahua.move(); Chihuahua.family // undefined &#x76EE;&#x524D;&#x53EA;&#x6709;&#x7E7C;&#x627F;&#x539F;&#x578B;prototype &#x4F46;&#x7121;&#x7E7C;&#x627F;&#x52D5;&#x7269;&#x754C;&#x7684;&#x5EFA;&#x69CB;&#x51FD;&#x5F0F; Animal.call &#x5982;&#x679C;&#x700F;&#x89BD;&#x5668;&#x4E0D;&#x652F;&#x63F4; Object.create() &#x9019;&#x6642;&#x5019;&#x6211;&#x5011;&#x6703;&#x5BEB;&#x4E00;&#x4E9B;&#x7A0B;&#x5F0F;&#x4F86;&#x586B;&#x88DC;&#x67D0;&#x4E9B;&#x700F;&#x89BD;&#x5668;&#x4E0D;&#x652F;&#x63F4;&#x7684;&#x60C5;&#x6CC1;&#xFF0C;&#x6211;&#x5011;&#x628A;&#x9019;&#x4E9B;&#x7A0B;&#x5F0F;&#x7A31;&#x505A; polyfill"},"core.html#屬性特徵":{"title":"&#x5C6C;&#x6027;&#x7279;&#x5FB5;","path":"\\javascript\\core.html#屬性特徵","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 const obj = { a: 1 , b: 2 , c: 3 } console .log(obj) //Object.defineProperty() // &#x5C6C;&#x6027;&#xFF0C;&#x8ABF;&#x6574;&#x5C6C;&#x6027;&#x7684;&#x7279;&#x5FB5; // 1. &#x503C; 2. &#x53EF;&#x5426;&#x5BEB;&#x5165; 3. &#x53EF;&#x5426;&#x88AB;&#x522A;&#x9664; 4. &#x53EF;&#x5426;&#x88AB;&#x5217;&#x8209; //Object.defineProperty(&#x7269;&#x4EF6;, &#x5C6C;&#x6027;, &#x53C3;&#x6578;) // being explicit Object .defineProperty(obj, &apos;a&apos; , { enumerable: true , configurable: true , writable: false , value: 4 }); console .log(obj) // TypeError: Cannot assign to read only property &apos;a&apos; of object &apos;#Object&apos; ( function ( ) { &apos;use strict&apos; ; obj.a = 5 ; }()) Object.defineProperty() // &#x5EF6;&#x4F38;&#x7684;&#x4E09;&#x7A2E;&#x7269;&#x4EF6;&#x65B9;&#x6CD5; preventExtensions seal Freeze &#x9632;&#x6B62;&#x64F4;&#x5145; &#x5C01;&#x88DD; &#x51CD;&#x7D50; &#x76F4;&#x63A5;&#x64CD;&#x4F5C;&#x7269;&#x4EF6;&#x672C;&#x8EAB; Object.preventExtensions() Object.seal() &#x7121;&#x6CD5;&#x65B0;&#x589E;&#x522A;&#x9664; &#x4E5F;&#x7121;&#x6CD5;&#x914D;&#x7F6E;&#x7279;&#x5FB5; &#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x8ABF;&#x6574;&#x5C6C;&#x6027;&#x503C; Object.freeze() &#x7269;&#x4EF6;&#x52A0;&#x4E0A;seal &#x4E14;&#x7121;&#x6CD5;&#x8ABF;&#x6574;&#x503C; Setter And Getter 1 2 3 4 5 6 7 8 9 10 11 12 13 14 var wallet = { total: 100 , set save(price) { this .total = this .total + price / 2 }, get save() { return this .total / 2 } } // Getter &#x53D6;&#x5F97;&#x7279;&#x5B9A;&#x503C;&#x7684;&#x65B9;&#x6CD5; // Setter &#x5B58;&#x503C;&#x7684;&#x65B9;&#x6CD5; // wallet.total = 300; wallet.save = 300 ; //&#x900F;&#x904E;Setter&#x6539;&#x8B8A;total&#x7684;&#x503C; console .log(wallet.save) //250 / 2 = 125 Object.defineProperty() Object.getOwnPropertyDescriptor() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var wallet = { total: 100 } Object .defineProperty(wallet, &apos;save&apos; , { configurable: true , set : function(price) { this .total = this .total + price / 2 }, get : function() { return this .total / 2 } }); wallet.save = 300 ; //&#x900F;&#x904E;Setter&#x6539;&#x8B8A;total&#x7684;&#x503C; console .log(wallet); // save 250 / 2 = 125 console .log( Object .getOwnPropertyDescriptor(wallet, &apos;save&apos; )) // [object Object] { // configurable: false, // enumerable: false, 1 2 3 4 5 6 7 8 // &#x53D6;&#x5F97;&#x9663;&#x5217;&#x6700;&#x5F8C;&#x4E00;&#x500B;&#x503C; var a = [ 1 , 2 , 3 ]; Object .defineProperty( Array .prototype, &apos;lastest&apos; , { get : function() { return this [ this .length - 1 ]; } }); console .log(a.lastest); //3 ##&#x3000;vue https://github.com/vuejs/vue/blob/dev/dist/vue.js var emptyObject = Object.freeze({}); &#x78BA;&#x4FDD;&#x7A7A;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 var app = new Vue({ //&#x5EFA;&#x69CB;&#x521D;&#x59CB;&#x5316; el: &apos;#app&apos; , data: { message: &apos;Hello Vue!&apos; } }) console .log(app) &#x6DF1;&#x5165;&#x54CD;&#x5E94;&#x5F0F;&#x539F;&#x7406; &#x5F53;&#x4F60;&#x628A;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x7684; JavaScript &#x5BF9;&#x8C61;&#x4F20;&#x5165; Vue &#x5B9E;&#x4F8B;&#x4F5C;&#x4E3A; data &#x9009;&#x9879;&#xFF0C;Vue &#x5C06;&#x904D;&#x5386;&#x6B64;&#x5BF9;&#x8C61;&#x6240;&#x6709;&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x5E76;&#x4F7F;&#x7528; Object.defineProperty &#x628A;&#x8FD9;&#x4E9B;&#x5C5E;&#x6027;&#x5168;&#x90E8;&#x8F6C;&#x4E3A; getter/setter &#x3002;Object.defineProperty &#x662F; ES5 &#x4E2D;&#x4E00;&#x4E2A;&#x65E0;&#x6CD5; shim &#x7684;&#x7279;&#x6027;&#xFF0C;&#x8FD9;&#x4E5F;&#x5C31;&#x662F; Vue &#x4E0D;&#x652F;&#x6301; IE8 &#x4EE5;&#x53CA;&#x66F4;&#x4F4E;&#x7248;&#x672C;&#x6D4F;&#x89C8;&#x5668;&#x7684;&#x539F;&#x56E0;&#x3002; Vue &#x7406;&#x89E3;&#x4E4B;&#x767D;&#x8BDD; getter/setter https://github.com/vuejs/vue/blob/dev/dist/vue.js proxySetter reactiveSetter app.obj === app._data.obj Vue &#x54CD;&#x5E94;&#x5F0F;&#x6838;&#x5FC3;&#x5C31;&#x662F;&#xFF0C;getter &#x7684;&#x65F6;&#x5019;&#x4F1A;&#x6536;&#x96C6;&#x4F9D;&#x8D56;&#xFF0C;setter &#x7684;&#x65F6;&#x5019;&#x4F1A;&#x89E6;&#x53D1;&#x4F9D;&#x8D56;&#x66F4;&#x65B0;"},"core.html#Let":{"title":"Let","path":"\\javascript\\core.html#Let","body":"var&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x5728;&#x51FD;&#x6578;(function) &#x88E1; let&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x5247;&#x662F;&#x5728;&#x5340;&#x584A;(block) &#x88E1; 1 2 3 4 for ( var i= 0 ;i 10 ;i++) { console .log(i) } console .log(i) //window.i &#x5168;&#x57DF; &#x6C59;&#x67D3;&#x6574;&#x500B;&#x4F5C;&#x7528;&#x57DF; 1 2 3 4 5 6 let name = &apos;Jacob&apos; { let name = &apos;Hsu&apos; } console .log(name) //Jacob"},"core.html#const":{"title":"const","path":"\\javascript\\core.html#const","body":"&#x5229;&#x7528; const &#x53EF;&#x4EE5;&#x505A;&#x5230;&#x9664;&#x4E86;&#x88AB;&#x51CD;&#x7D50; &#x9084;&#x80FD;&#x4E0D;&#x88AB;&#x8CE6;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 const person = { name: &apos;&#x9EE8;&#x5DE5;&apos; , money: 500 } person.name = &apos;&#x7DB2;&#x8ECD;&apos; Object .freeze(person); person.money = 1000 ; person = {}; // devTool console person // var {} person // const let TDZ 1 2 3 4 5 6 7 8 9 10 let arg = &apos;first&apos; ; { //&#x5275;&#x9020; let arg; // &#x66AB;&#x6642;&#x6027;&#x6B7B;&#x5340; TDZ &#x6709;hoisting&#x4F46;&#x9396;&#x4F4F; //&#x57F7;&#x884C; console .log(arg); // first let arg = &apos;second&apos; } 1 let &#x4E00;&#x6A23;&#x6709;&#x5275;&#x9020;&#x968E;&#x6BB5; 2 &#x4F46;&#x5F9E;&#x5275;&#x9020;&#x5230;&#x5BE6;&#x969B;&#x5BA3;&#x544A;&#x7684;&#x968E;&#x6BB5;&#x6703;&#x51FA;&#x73FE;TDZ &#x9019;&#x500B;&#x5340;&#x57DF;&#x7121;&#x6CD5;&#x547C;&#x53EB;&#x8B8A;&#x6578; 3 &#x6709;&#x5275;&#x9020;&#x5230;&#x57F7;&#x884C;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x4F46;&#x4E0D;&#x6703;&#x9810;&#x5148;&#x51FA;&#x73FE; (&#x6587;&#x4EF6;&#x4E0D;&#x6703;&#x8868;&#x660E;&#x9019;&#x8207; var &#x7684;Hoisting&#x76F8;&#x540C;&#x6982;&#x5FF5;)"},"core.html#ES6-Airbnb":{"title":"ES6 Airbnb","path":"\\javascript\\core.html#ES6-Airbnb","body":"Airbnb &#x898F;&#x7BC4;&#x6587;&#x4EF6; (ES6 &#x7248;&#x672C;)&#xFF1A; https://github.com/airbnb/javascript ESLint &#x5B89;&#x88DD;&#x6559;&#x5B78;&#xFF1A; https://www.youtube.com/watch?v=WiommcFaYvY ? How would you like to use ESLint? (Use arrow keys) To check syntax only To check syntax and find problems &#x276F; To check syntax, find problems, and enforce code style &#x5982;&#x679C;&#x8981;&#x4F7F;&#x7528; Airbnb &#x7684;&#x898F;&#x7BC4;&#xFF0C;&#x8ACB;&#x9078;&#x64C7;&#x6700;&#x5F8C;&#x4E00;&#x500B;&#x9078;&#x9805;&#x3002;"},"core.html#箭頭函數":{"title":"&#x7BAD;&#x982D;&#x51FD;&#x6578;","path":"\\javascript\\core.html#箭頭函數","body":"//&#x6C92;&#x6709;&#x50B3;&#x7D71;&#x51FD;&#x6578; arguments &#x53C3;&#x6578; 1 2 3 4 const nums = function ( ) { console .log( arguments ); } nums( 10 , 50 , 100 , 50 , 5 , 1 ); 1 2 3 4 const nums = () = { console .log( arguments ); //Uncaught ReferenceError } nums( 10 , 50 , 100 , 50 , 5 , 1 ); 1 2 3 4 const nums = ( ...arg ) = { console .log(arg); //Uncaught ReferenceError } nums( 10 , 50 , 100 , 50 , 5 , 1 ); &#x7BAD;&#x982D;&#x51FD;&#x5F0F;&#x6C92;&#x6709;&#x81EA;&#x5DF1;&#x7684;this &#x4ED6;&#x7684;this&#x6307;&#x5411;&#x5916;&#x5C64; 1 2 3 4 5 6 7 const ele = document .querySelector( &apos;p&apos; ); ele.addEventListener( &apos;click&apos; , function ( ) { console .log( this ) }); ele.addEventListener( &apos;click&apos; , () ={ console .log( this ) //&#x6307;&#x5230;&#x4E0D;&#x4E00;&#x6A23;&#x7684;&#x4F4D;&#x7F6E; window &#x5168;&#x57DF; }); &#x7BAD;&#x982D;&#x51FD;&#x6578; &#x5E38;&#x898B;&#x554F;&#x984C; &#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x56DE;&#x50B3;&#x7269;&#x4EF6;&#x5BE6;&#x5B57; 1 2 3 4 const arrFn = () = { data : 1 } console .log(arrFn()) //undefined const arrFnr = () = ({ data : 1 }) console .log(arrFnr()) //{data: 1} &#x642D;&#x914D;&#x5224;&#x65B7;&#x5F0F;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x63A5;&#x7BAD;&#x982D;&#x51FD;&#x5F0F; 1 2 3 4 5 let num = 0 const numFn = num || () = 1 ; console .log(numFn) const numFunction = num || ( ( ) = 1 ); console .log(numFunction) // &#x52A0;&#x62EC;&#x865F;&#x4FEE;&#x6B63; &#x7269;&#x4EF6;&#x88E1;&#x9762;&#x642D;&#x914D;&#x7BAD;&#x982D;&#x51FD;&#x6A39;&#x6703;&#x51FA;&#x932F; &#x6307;&#x5411;&#x662F;&#x4E0D;&#x540C;&#x7684; 1 2 3 4 5 6 7 8 const app = new Vue({ data: { num: 1 }, created: () = { console .log( this .num) //FAIL } }) &#x5E73;&#x5747;&#x6578; 1 2 3 4 5 6 7 8 9 10 const average = function ( ) { // arguments &#x662F;&#x985E;&#x9663;&#x5217;&#x6C92;&#x6709;&#x9663;&#x5217;&#x65B9;&#x6CD5; &#x7528;Array.from&#x8F49;&#x6210;&#x7D14;&#x9663;&#x5217; const nums = Array .from( arguments ); const total = nums.reduce( function ( acc, val ) { return acc + val }, 0 ); // 0 &#x662F;&#x7B2C;&#x4E00;&#x6B21;&#x57F7;&#x884C;&#x7684;&#x524D;&#x4E00;&#x500B;&#x503C; console .log(total); return total / nums.length; } console .log(average( 1 , 2 , 3 , 4 , 5 )) // 15 3 Array.from() Array.reduce() 1 2 const average = ( ...nums ) = nums.reduce( ( acc, val ) = acc + val, 0 ) / nums.length console .log(average( 1 , 2 , 3 , 4 , 5 )) // 3"},"index.html":{"title":"hexo-theme-doc-seed","path":"\\javascript\\index.html","body":"hexo-theme-doc-seed This project is a skeleton for a documentation website using Hexo and hexo-theme-doc . You can use it to quickly bootstrap your documentation website. The seed contains the required structure and files to use Hexo and the theme, plus dummy content to show the usage of the main features of the theme. Getting Started To get started have a look first to the requirements , then install hexo-cli with: 1 $ npm install -g hexo-cli Now just clone hexo-theme-doc-seed repository: 1 $ git clone https://github.com/zalando-incubator/hexo-theme-doc-seed.git directory Go into the resulting directory and install dependencies: 1 $ npm install Start the preview server locally with: 1 hexo s If you open your browser at http://localhost:4000 you should see the documentation website up and running. More Informations For more informations please visit the user documentation website ."},"index.html#hexo-theme-doc-seed":{"title":"hexo-theme-doc-seed","path":"\\javascript\\index.html#hexo-theme-doc-seed","body":"This project is a skeleton for a documentation website using Hexo and hexo-theme-doc . You can use it to quickly bootstrap your documentation website. The seed contains the required structure and files to use Hexo and the theme, plus dummy content to show the usage of the main features of the theme."},"index.html#Getting-Started":{"title":"Getting Started","path":"\\javascript\\index.html#Getting-Started","body":"To get started have a look first to the requirements , then install hexo-cli with: 1 $ npm install -g hexo-cli Now just clone hexo-theme-doc-seed repository: 1 $ git clone https://github.com/zalando-incubator/hexo-theme-doc-seed.git directory Go into the resulting directory and install dependencies: 1 $ npm install Start the preview server locally with: 1 hexo s If you open your browser at http://localhost:4000 you should see the documentation website up and running."},"index.html#More-Informations":{"title":"More Informations","path":"\\javascript\\index.html#More-Informations","body":"For more informations please visit the user documentation website ."},"num.html":{"title":"number","path":"\\javascript\\num.html","body":"取值 Math.pow()傳回指定乘冪數的基底運算式值 Math.round() 函數回傳四捨五入後的近似值 Math.floor() 函式會回傳無條件捨去後的最大整數 Math.ceil() 函式會回傳大於等於所給數字的最小整數 1 2 3 4 5 6 7 8 9 10 11 12 13 14 export function precisionRound ( number, precision )  const factor = Math .pow( 10 , precision) return Math .round(number * factor) / factor  export function precisionFloor ( number, precision )  const factor = Math .pow( 10 , precision) return Math .floor(number * factor) / factor  export function precisionCeil ( number, precision )  const factor = Math .pow( 10 , precision) return Math .ceil(number * factor) / factor  補數字 JavaScript 数字前补“0”的五种方法 數字補0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //轉為小數 function padding3 ( num, length )  var decimal = num / Math .pow( 10 , length); //toFixed指定保留幾位小數 decimal = decimal.toFixed(length) + \"\" ; return decimal.substr(decimal.indexOf( \".\" )+ 1 );  console .log( padding3( 7 , 3 ) ) //\"007\" function padding4 ( num, length )  //這裡用slice和substr均可 return ( Array (length).join( \"0\" ) + num).slice(-length);  console .log( padding4( 7 , 3 ) ) //\"007\" 數字填充9 function paddingPoint ( length ) { var decimal = 1 / Math .pow( 10 , length); decimal = decimal.toFixed(length) + \"\" ; return 1 -decimal;} console .log( paddingPoint( 3 ) ) // 0.999 function paddingInt ( length ) { return ( Array (length).join( \"9\" ) + 9 ).slice(-length);} console .log( paddingInt( 3 ) ) //\"999\" console .log( Number (paddingInt( 3 )) + paddingPoint( 3 ) ) // 999.999"},"num.html#取值":{"title":"&#x53D6;&#x503C;","path":"\\javascript\\num.html#取值","body":"Math.pow()&#x50B3;&#x56DE;&#x6307;&#x5B9A;&#x4E58;&#x51AA;&#x6578;&#x7684;&#x57FA;&#x5E95;&#x904B;&#x7B97;&#x5F0F;&#x503C; Math.round() &#x51FD;&#x6578;&#x56DE;&#x50B3;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x5F8C;&#x7684;&#x8FD1;&#x4F3C;&#x503C; Math.floor() &#x51FD;&#x5F0F;&#x6703;&#x56DE;&#x50B3;&#x7121;&#x689D;&#x4EF6;&#x6368;&#x53BB;&#x5F8C;&#x7684;&#x6700;&#x5927;&#x6574;&#x6578; Math.ceil() &#x51FD;&#x5F0F;&#x6703;&#x56DE;&#x50B3;&#x5927;&#x65BC;&#x7B49;&#x65BC;&#x6240;&#x7D66;&#x6578;&#x5B57;&#x7684;&#x6700;&#x5C0F;&#x6574;&#x6578; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 export function precisionRound ( number, precision ) { const factor = Math .pow( 10 , precision) return Math .round(number * factor) / factor } export function precisionFloor ( number, precision ) { const factor = Math .pow( 10 , precision) return Math .floor(number * factor) / factor } export function precisionCeil ( number, precision ) { const factor = Math .pow( 10 , precision) return Math .ceil(number * factor) / factor }"},"num.html#補數字":{"title":"&#x88DC;&#x6578;&#x5B57;","path":"\\javascript\\num.html#補數字","body":"JavaScript &#x6570;&#x5B57;&#x524D;&#x8865;&#x201C;0&#x201D;&#x7684;&#x4E94;&#x79CD;&#x65B9;&#x6CD5; &#x6578;&#x5B57;&#x88DC;0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x8F49;&#x70BA;&#x5C0F;&#x6578; function padding3 ( num, length ) { var decimal = num / Math .pow( 10 , length); //toFixed&#x6307;&#x5B9A;&#x4FDD;&#x7559;&#x5E7E;&#x4F4D;&#x5C0F;&#x6578; decimal = decimal.toFixed(length) +  ; return decimal.substr(decimal.indexOf( . )+ 1 ); } console .log( padding3( 7 , 3 ) ) //007 function padding4 ( num, length ) { //&#x9019;&#x88E1;&#x7528;slice&#x548C;substr&#x5747;&#x53EF; return ( Array (length).join( 0 ) + num).slice(-length); } console .log( padding4( 7 , 3 ) ) //007 &#x6578;&#x5B57;&#x586B;&#x5145;9 function paddingPoint ( length ) { var decimal = 1 / Math .pow( 10 , length); decimal = decimal.toFixed(length) +  ; return 1 -decimal;} console .log( paddingPoint( 3 ) ) // 0.999 function paddingInt ( length ) { return ( Array (length).join( 9 ) + 9 ).slice(-length);} console .log( paddingInt( 3 ) ) //999 console .log( Number (paddingInt( 3 )) + paddingPoint( 3 ) ) // 999.999"},"operators.html":{"title":"Operators","path":"\\javascript\\operators.html","body":"What is the difference between the equality operators == and === ? 三個等號 === 表示嚴格相等，也就是說類型和值都必須相同。兩個等號 == 會使其中一邊的類型進行強制轉換，使等號兩邊的類型都相等後再對數值進行比較。 加分回答 儘量使用全等操作符。因為其沒有隱式轉換，這樣結果會比較容易預測、計算也會比較快 除了等於操作符，還可以使用 Object.is 進行同值比較。他有著自己的特殊用途，不應說他更寬鬆或更嚴格於其他等於操作符 === 比較不是一個比較好的解決方式，你可以得到這樣的結果： NaN === NaN //false 好消息是在 ES6 有一個新的 Object.is() ，它是更精確而且和 === 有相同的功能，在某些特殊情況下也運作的很好： Mozilla 團隊 不認為 Object.is 比 === 更嚴格，他們宣稱我們應該思考這些方法如何處理 NaN、-0 和 +0 1 2 3 4 Object .is( 0 , ' ' ); //false Object .is( null , undefined ); //false Object .is([ 1 ], true ); //false Object .is( NaN , NaN ); //true https://jsbin.com/guqetaviho/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 var a = true , b = 1 ; console .log(a==b); //true console .log(a===b); //false console .log(a==b== 1 ); //true console .log(a===b== 1 ); //false console .log(a===b=== 1 ); //false console .log(a==b=== 1 ); // false console .log(a==b== 0 ); // false console .log(a===b== 0 ); // true console .log(a===b=== 0 ); // false console .log(a==b=== 0 ); // false http://www.jstips.co/zh_tw/javascript/why-you-should-use-Object.is()-in-equality-comparison/ https://30secondsofinterviews.org/ https://hacpai.com/article/1546570870626?r=Vanessa ++ Increment 後置遞增 i++ 和前置遞增 ++i 操作有什麼區別？ 他們都會使變量增加 1，只是計算和賦值的順序不一樣。 後置遞增是先賦值後計算，如： 1 2 3 4 5 let i = 1 ; console .log(i); // 1 let a = i++; console .log(i); // 2 console .log(a); // 1 前置遞增是先計算後賦值，如： 1 2 3 4 5 let i = 1 ; console .log(i); // 1 let a = ++i; console .log(i); // 2 console .log(a); // 2 https://jsbin.com/samaxubazo/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 function aFunc ( x )  return () = console .log(x++);  function bFunc ( x )  return x++;  function cFunc ( x )  return ++x;  let newFunc = aFunc( 1 ) newFunc() //1 newFunc() //2 newFunc() //3 console .log(bFunc( 1 )) //1 console .log(cFunc( 1 )) //2 references https://www.w3schools.com/js/js_operators.asp https://hacpai.com/article/1546665384680?r=Vanessa Adding Strings and Numbers 1 2 3 var x = 5 + 5 ; // 10 var y = \"5\" + 5 ; // 55 var z = \"Hello\" + 5 ; //Hello5 https://jsbin.com/hupumaxoru/edit?js,console 1 2 3 4 5 6 7 8 9 console .log( 1 + \"2\" + \"2\" ); // \"122\" //console.log(1++\"2\"+\"2\"); // \"error\" \"ReferenceError: Invalid left-hand side expression in postfix operation console .log( 1 + + \"2\" + \"2\" ); // \"32\" console .log( 1 + - \"1\" + \"2\" ); // \"02\" console .log(+ \"1\" + + \"1\" + \"2\" ); // \"22\" console .log( \"A\" - \"B\" ); // NaN console .log( \"A\" - \"B\" + \"2\" ); // \"NaN2\" console .log( \"A\" + \"B\" + \"2\" ); // \"AB2\" console .log( \"A\" + \"B\" + 2 ); // \"AB2\" https://www.w3schools.com/js/js_operators.asp"},"operators.html#What-is-the-difference-between-the-equality-operators-and":{"title":"What is the difference between the equality operators == and === ?","path":"\\javascript\\operators.html#What-is-the-difference-between-the-equality-operators-and","body":"&#x4E09;&#x500B;&#x7B49;&#x865F; === &#x8868;&#x793A;&#x56B4;&#x683C;&#x76F8;&#x7B49;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#x985E;&#x578B;&#x548C;&#x503C;&#x90FD;&#x5FC5;&#x9808;&#x76F8;&#x540C;&#x3002;&#x5169;&#x500B;&#x7B49;&#x865F; == &#x6703;&#x4F7F;&#x5176;&#x4E2D;&#x4E00;&#x908A;&#x7684;&#x985E;&#x578B;&#x9032;&#x884C;&#x5F37;&#x5236;&#x8F49;&#x63DB;&#xFF0C;&#x4F7F;&#x7B49;&#x865F;&#x5169;&#x908A;&#x7684;&#x985E;&#x578B;&#x90FD;&#x76F8;&#x7B49;&#x5F8C;&#x518D;&#x5C0D;&#x6578;&#x503C;&#x9032;&#x884C;&#x6BD4;&#x8F03;&#x3002; &#x52A0;&#x5206;&#x56DE;&#x7B54; &#x5118;&#x91CF;&#x4F7F;&#x7528;&#x5168;&#x7B49;&#x64CD;&#x4F5C;&#x7B26;&#x3002;&#x56E0;&#x70BA;&#x5176;&#x6C92;&#x6709;&#x96B1;&#x5F0F;&#x8F49;&#x63DB;&#xFF0C;&#x9019;&#x6A23;&#x7D50;&#x679C;&#x6703;&#x6BD4;&#x8F03;&#x5BB9;&#x6613;&#x9810;&#x6E2C;&#x3001;&#x8A08;&#x7B97;&#x4E5F;&#x6703;&#x6BD4;&#x8F03;&#x5FEB; &#x9664;&#x4E86;&#x7B49;&#x65BC;&#x64CD;&#x4F5C;&#x7B26;&#xFF0C;&#x9084;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; Object.is &#x9032;&#x884C;&#x540C;&#x503C;&#x6BD4;&#x8F03;&#x3002;&#x4ED6;&#x6709;&#x8457;&#x81EA;&#x5DF1;&#x7684;&#x7279;&#x6B8A;&#x7528;&#x9014;&#xFF0C;&#x4E0D;&#x61C9;&#x8AAA;&#x4ED6;&#x66F4;&#x5BEC;&#x9B06;&#x6216;&#x66F4;&#x56B4;&#x683C;&#x65BC;&#x5176;&#x4ED6;&#x7B49;&#x65BC;&#x64CD;&#x4F5C;&#x7B26; === &#x6BD4;&#x8F03;&#x4E0D;&#x662F;&#x4E00;&#x500B;&#x6BD4;&#x8F03;&#x597D;&#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x5F0F;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x9019;&#x6A23;&#x7684;&#x7D50;&#x679C;&#xFF1A; NaN === NaN //false &#x597D;&#x6D88;&#x606F;&#x662F;&#x5728; ES6 &#x6709;&#x4E00;&#x500B;&#x65B0;&#x7684; Object.is() &#xFF0C;&#x5B83;&#x662F;&#x66F4;&#x7CBE;&#x78BA;&#x800C;&#x4E14;&#x548C; === &#x6709;&#x76F8;&#x540C;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x5728;&#x67D0;&#x4E9B;&#x7279;&#x6B8A;&#x60C5;&#x6CC1;&#x4E0B;&#x4E5F;&#x904B;&#x4F5C;&#x7684;&#x5F88;&#x597D;&#xFF1A; Mozilla &#x5718;&#x968A; &#x4E0D;&#x8A8D;&#x70BA; Object.is &#x6BD4; === &#x66F4;&#x56B4;&#x683C;&#xFF0C;&#x4ED6;&#x5011;&#x5BA3;&#x7A31;&#x6211;&#x5011;&#x61C9;&#x8A72;&#x601D;&#x8003;&#x9019;&#x4E9B;&#x65B9;&#x6CD5;&#x5982;&#x4F55;&#x8655;&#x7406; NaN&#x3001;-0 &#x548C; +0 1 2 3 4 Object .is( 0 , &apos; &apos; ); //false Object .is( null , undefined ); //false Object .is([ 1 ], true ); //false Object .is( NaN , NaN ); //true https://jsbin.com/guqetaviho/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 var a = true , b = 1 ; console .log(a==b); //true console .log(a===b); //false console .log(a==b== 1 ); //true console .log(a===b== 1 ); //false console .log(a===b=== 1 ); //false console .log(a==b=== 1 ); // false console .log(a==b== 0 ); // false console .log(a===b== 0 ); // true console .log(a===b=== 0 ); // false console .log(a==b=== 0 ); // false http://www.jstips.co/zh_tw/javascript/why-you-should-use-Object.is()-in-equality-comparison/ https://30secondsofinterviews.org/ https://hacpai.com/article/1546570870626?r=Vanessa"},"operators.html#Increment":{"title":"++ Increment","path":"\\javascript\\operators.html#Increment","body":"&#x5F8C;&#x7F6E;&#x905E;&#x589E; i++ &#x548C;&#x524D;&#x7F6E;&#x905E;&#x589E; ++i &#x64CD;&#x4F5C;&#x6709;&#x4EC0;&#x9EBC;&#x5340;&#x5225;&#xFF1F; &#x4ED6;&#x5011;&#x90FD;&#x6703;&#x4F7F;&#x8B8A;&#x91CF;&#x589E;&#x52A0; 1&#xFF0C;&#x53EA;&#x662F;&#x8A08;&#x7B97;&#x548C;&#x8CE6;&#x503C;&#x7684;&#x9806;&#x5E8F;&#x4E0D;&#x4E00;&#x6A23;&#x3002; &#x5F8C;&#x7F6E;&#x905E;&#x589E;&#x662F;&#x5148;&#x8CE6;&#x503C;&#x5F8C;&#x8A08;&#x7B97;&#xFF0C;&#x5982;&#xFF1A; 1 2 3 4 5 let i = 1 ; console .log(i); // 1 let a = i++; console .log(i); // 2 console .log(a); // 1 &#x524D;&#x7F6E;&#x905E;&#x589E;&#x662F;&#x5148;&#x8A08;&#x7B97;&#x5F8C;&#x8CE6;&#x503C;&#xFF0C;&#x5982;&#xFF1A; 1 2 3 4 5 let i = 1 ; console .log(i); // 1 let a = ++i; console .log(i); // 2 console .log(a); // 2 https://jsbin.com/samaxubazo/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 function aFunc ( x ) { return () = console .log(x++); } function bFunc ( x ) { return x++; } function cFunc ( x ) { return ++x; } let newFunc = aFunc( 1 ) newFunc() //1 newFunc() //2 newFunc() //3 console .log(bFunc( 1 )) //1 console .log(cFunc( 1 )) //2 references https://www.w3schools.com/js/js_operators.asp https://hacpai.com/article/1546665384680?r=Vanessa"},"operators.html#references":{"title":"references","path":"\\javascript\\operators.html#references","body":"https://www.w3schools.com/js/js_operators.asp https://hacpai.com/article/1546665384680?r=Vanessa"},"operators.html#Adding-Strings-and-Numbers":{"title":"Adding Strings and Numbers","path":"\\javascript\\operators.html#Adding-Strings-and-Numbers","body":"1 2 3 var x = 5 + 5 ; // 10 var y = 5 + 5 ; // 55 var z = Hello + 5 ; //Hello5 https://jsbin.com/hupumaxoru/edit?js,console 1 2 3 4 5 6 7 8 9 console .log( 1 + 2 + 2 ); // 122 //console.log(1++2+2); // error ReferenceError: Invalid left-hand side expression in postfix operation console .log( 1 + + 2 + 2 ); // 32 console .log( 1 + - 1 + 2 ); // 02 console .log(+ 1 + + 1 + 2 ); // 22 console .log( A - B ); // NaN console .log( A - B + 2 ); // NaN2 console .log( A + B + 2 ); // AB2 console .log( A + B + 2 ); // AB2 https://www.w3schools.com/js/js_operators.asp"},"scope.html":{"title":"Scope","path":"\\javascript\\scope.html","body":"範圍鏈 當函式本身沒有變數會向外層尋找 1 2 3 4 5 6 7 8 9 10 var value = 1 function fn1 ( )  console .log(value) //沒有變數 向外尋找 指向全域的變數 value=1 //尋找時與執行環境無關 因為js是語法作用域 撰寫時已確定作用域  function fn2 ( )  var value = 2 fn1()  fn2() 變數的作用域在函式內 全域變數 vs 區域變數：內可用外，外不可用內。 不能污染全域變數。 1 2 3 4 5 var value = \"global\" ; var fn = function ( )  console .log(value); // \"global\"  fn(); 1 2 3 4 5 6 7 var value = \"global\" ; var fn = function ( )  console .log(value); // \"global\" value = \"local\" ; console .log(value); // \"local\"  fn(); 1 2 3 4 5 6 var value = \"global\" ; var fn = function ( )  console .log(value); // undefined var value = \"local\" ;  fn(); 1 2 3 4 5 6 7 8 9 var scope = 'global' ; function checkScope ( )  var scope = 'local' ; function fn ( )  return scope;  return fn(); ; console .log( checkScope() ); // \"local\" 1 2 3 4 5 6 7 8 9 var value = 'global' ; var person =  value: 'local' , callSomeone: function ( )  console .log(value) ,  person.callSomeone() //\"global\" 1 2 3 4 5 6 var foo = \"global\" ; ( function ( )  var bar = \"Local\" console .log(foo+bar); //\"globalLocal\" )(); console .log(foo+bar); // \"error\" ReferenceError: bar is not defined 1 2 3 4 5 ( function ( )  var a = b = 1 ; )(); console .log(b); // 1 b沒有宣告 為全域 ‘use strict’ 1 2 3 4 5 ( function ( )  'use strict' ; var a = b = 1 ; )(); console .log(b); // \"error\" \"ReferenceError: b is not defined 注意: 只有將 &#39;use strict&#39; 放在函式開頭才會有作用。 References https://paper.dropbox.com/doc/JS--AaILvqN7Gcen3zEExnLuHUzmAg-K98zBcemd1Ig9DZYYNruL https://wcc723.github.io/javascript/2017/12/15/javascript-use-strict/"},"performance.html":{"title":"Performance","path":"\\javascript\\performance.html","body":"##　Clean Code 如何寫出漂亮的 JavaScript 代碼 優化原則和方向 性能優化的原則是以更好的用戶體驗為標準，具體就是實現下面的目標： 多使用內存、緩存或者其他方法 減少 CPU 和GPU 計算，更快展現 優化的方向有兩個： 減少頁面體積，提升網路加載 靜態資源的壓縮合併（JS 代碼壓縮合併、CSS 代碼壓縮合併） 靜態資源緩存（資源名稱加 MD5 戳） 使用 CDN 讓資源加載更快 優化頁面渲染 CSS 放前面，JS 放後面 懶加載（圖片懶加載、下拉加載更多） DOM 查詢做緩存 減少DOM 操作，多個操作儘量合併在一起執行（ DocumentFragment ） 儘早執行操作（ DOMContentLoaded ） 事件節流 使用 SSR 後端渲染，數據直接輸出到 HTML 中，減少瀏覽器使用 JS 模板渲染頁面 HTML 的時間 懶加載 一開始先給為 src 賦值成一個通用的預覽圖，下拉時候再動態賦值成正式的圖片。如下，preview.png是預覽圖片，比較小，加載很快，而且很多圖片都共用這個preview.png，加載一次即可。待頁面下拉，圖片顯示出來時，再去替換src為 data-realsrc 的值。 1 2 3 4 5  img src = \"img1\" src = \"preview.jpg\" data-realsrc = 'abc.png'   script type = \"text/javascript\"  \t var img1 = document .getElementById( 'img1' ) \timg1.src= img1.getAttribute( 'data-realsrc' ) / script  另外，這裡為何要用data-開頭的屬性值？ 所有 HTML 中自定義的屬性，都應該用 data- 開頭，因為 data- 開頭的屬性瀏覽器渲染的時候會忽略掉，提高渲染性能。 DOM 查詢做緩存 1 2 3 4 // 每次循環，都會查詢 DOM ，耗費性能 var i for (i = 0 ; i  document .getElementsByTagName( 'p' ).length; i++)   1 2 3 4 5 6 // 只查詢一個 DOM ，緩存在 pList 中了 var pList = document .getElementsByTagName( 'p' ) var i for (i = 0 ; i  pList.length; i++)  //todo  合併 DOM 插入 (createDocumentFragment) DOM 操作是非常耗費性能的，因此插入多個標籤時，先插入 Fragment 然後再統一插入 DOM。 1 2 3 4 5 6 7 8 9 10 var listNode = document .getElementById( 'list' ) // 要插入 10 個 li 標籤 var frag = document .createDocumentFragment(); var x, li; for (x = 0 ; x  10 ; x++)  li = document .createElement( \"li\" ); li.innerHTML = \"List item \" + x; frag.appendChild(li); // 先放在 frag 中，最後一次性插入到 DOM 結構中。  listNode.appendChild(frag); 儘早執行操作 (DOMContentLoaded) 1 2 3 4 5 6 window .addEventListener( 'load' , function ( )  // 頁面的全部資源加載完才會執行，包括圖片、視頻等 ) document .addEventListener( 'DOMContentLoaded' , function ( )  // DOM 渲染完即可執行，此時圖片、視頻還可能沒有加載完 ) 事件節流 例如要在文字改變時觸發一個 change 事件，通過 keyup 來監聽。使用節流。 鍵盤事件 keydown：按下鍵盤鍵 keyup：釋放鍵盤鍵 1 2 3 4 5 6 7 8 9 10 11 12 // 輸入完觸發文字修改事件 var textarea = document .getElementById( 'text' ) var timeoutId textarea.addEventListener( 'keyup' , function ( )  if (timeoutId)  clearTimeout(timeoutId)  // 讓連續鍵入不要頻繁觸發 change 事件 停下才觸發 timeoutId = setTimeout( function ( )  // 觸發 change 事件 , 100 ) ) Rreferences https://is.gd/0IyWU2 https://www.jianshu.com/p/8f839f558319"},"performance.html#優化原則和方向":{"title":"&#x512A;&#x5316;&#x539F;&#x5247;&#x548C;&#x65B9;&#x5411;","path":"\\javascript\\performance.html#優化原則和方向","body":"&#x6027;&#x80FD;&#x512A;&#x5316;&#x7684;&#x539F;&#x5247;&#x662F;&#x4EE5;&#x66F4;&#x597D;&#x7684;&#x7528;&#x6236;&#x9AD4;&#x9A57;&#x70BA;&#x6A19;&#x6E96;&#xFF0C;&#x5177;&#x9AD4;&#x5C31;&#x662F;&#x5BE6;&#x73FE;&#x4E0B;&#x9762;&#x7684;&#x76EE;&#x6A19;&#xFF1A; &#x591A;&#x4F7F;&#x7528;&#x5167;&#x5B58;&#x3001;&#x7DE9;&#x5B58;&#x6216;&#x8005;&#x5176;&#x4ED6;&#x65B9;&#x6CD5; &#x6E1B;&#x5C11; CPU &#x548C;GPU &#x8A08;&#x7B97;&#xFF0C;&#x66F4;&#x5FEB;&#x5C55;&#x73FE; &#x512A;&#x5316;&#x7684;&#x65B9;&#x5411;&#x6709;&#x5169;&#x500B;&#xFF1A; &#x6E1B;&#x5C11;&#x9801;&#x9762;&#x9AD4;&#x7A4D;&#xFF0C;&#x63D0;&#x5347;&#x7DB2;&#x8DEF;&#x52A0;&#x8F09; &#x975C;&#x614B;&#x8CC7;&#x6E90;&#x7684;&#x58D3;&#x7E2E;&#x5408;&#x4F75;&#xFF08;JS &#x4EE3;&#x78BC;&#x58D3;&#x7E2E;&#x5408;&#x4F75;&#x3001;CSS &#x4EE3;&#x78BC;&#x58D3;&#x7E2E;&#x5408;&#x4F75;&#xFF09; &#x975C;&#x614B;&#x8CC7;&#x6E90;&#x7DE9;&#x5B58;&#xFF08;&#x8CC7;&#x6E90;&#x540D;&#x7A31;&#x52A0; MD5 &#x6233;&#xFF09; &#x4F7F;&#x7528; CDN &#x8B93;&#x8CC7;&#x6E90;&#x52A0;&#x8F09;&#x66F4;&#x5FEB; &#x512A;&#x5316;&#x9801;&#x9762;&#x6E32;&#x67D3; CSS &#x653E;&#x524D;&#x9762;&#xFF0C;JS &#x653E;&#x5F8C;&#x9762; &#x61F6;&#x52A0;&#x8F09;&#xFF08;&#x5716;&#x7247;&#x61F6;&#x52A0;&#x8F09;&#x3001;&#x4E0B;&#x62C9;&#x52A0;&#x8F09;&#x66F4;&#x591A;&#xFF09; DOM &#x67E5;&#x8A62;&#x505A;&#x7DE9;&#x5B58; &#x6E1B;&#x5C11;DOM &#x64CD;&#x4F5C;&#xFF0C;&#x591A;&#x500B;&#x64CD;&#x4F5C;&#x5118;&#x91CF;&#x5408;&#x4F75;&#x5728;&#x4E00;&#x8D77;&#x57F7;&#x884C;&#xFF08; DocumentFragment &#xFF09; &#x5118;&#x65E9;&#x57F7;&#x884C;&#x64CD;&#x4F5C;&#xFF08; DOMContentLoaded &#xFF09; &#x4E8B;&#x4EF6;&#x7BC0;&#x6D41; &#x4F7F;&#x7528; SSR &#x5F8C;&#x7AEF;&#x6E32;&#x67D3;&#xFF0C;&#x6578;&#x64DA;&#x76F4;&#x63A5;&#x8F38;&#x51FA;&#x5230; HTML &#x4E2D;&#xFF0C;&#x6E1B;&#x5C11;&#x700F;&#x89BD;&#x5668;&#x4F7F;&#x7528; JS &#x6A21;&#x677F;&#x6E32;&#x67D3;&#x9801;&#x9762; HTML &#x7684;&#x6642;&#x9593;"},"performance.html#懶加載":{"title":"&#x61F6;&#x52A0;&#x8F09;","path":"\\javascript\\performance.html#懶加載","body":"&#x4E00;&#x958B;&#x59CB;&#x5148;&#x7D66;&#x70BA; src &#x8CE6;&#x503C;&#x6210;&#x4E00;&#x500B;&#x901A;&#x7528;&#x7684;&#x9810;&#x89BD;&#x5716;&#xFF0C;&#x4E0B;&#x62C9;&#x6642;&#x5019;&#x518D;&#x52D5;&#x614B;&#x8CE6;&#x503C;&#x6210;&#x6B63;&#x5F0F;&#x7684;&#x5716;&#x7247;&#x3002;&#x5982;&#x4E0B;&#xFF0C;preview.png&#x662F;&#x9810;&#x89BD;&#x5716;&#x7247;&#xFF0C;&#x6BD4;&#x8F03;&#x5C0F;&#xFF0C;&#x52A0;&#x8F09;&#x5F88;&#x5FEB;&#xFF0C;&#x800C;&#x4E14;&#x5F88;&#x591A;&#x5716;&#x7247;&#x90FD;&#x5171;&#x7528;&#x9019;&#x500B;preview.png&#xFF0C;&#x52A0;&#x8F09;&#x4E00;&#x6B21;&#x5373;&#x53EF;&#x3002;&#x5F85;&#x9801;&#x9762;&#x4E0B;&#x62C9;&#xFF0C;&#x5716;&#x7247;&#x986F;&#x793A;&#x51FA;&#x4F86;&#x6642;&#xFF0C;&#x518D;&#x53BB;&#x66FF;&#x63DB;src&#x70BA; data-realsrc &#x7684;&#x503C;&#x3002; 1 2 3 4 5  img src = img1 src = preview.jpg data-realsrc = &apos;abc.png&apos;   script type = text/javascript  \t var img1 = document .getElementById( &apos;img1&apos; ) \timg1.src= img1.getAttribute( &apos;data-realsrc&apos; ) / script  &#x53E6;&#x5916;&#xFF0C;&#x9019;&#x88E1;&#x70BA;&#x4F55;&#x8981;&#x7528;data-&#x958B;&#x982D;&#x7684;&#x5C6C;&#x6027;&#x503C;&#xFF1F; &#x6240;&#x6709; HTML &#x4E2D;&#x81EA;&#x5B9A;&#x7FA9;&#x7684;&#x5C6C;&#x6027;&#xFF0C;&#x90FD;&#x61C9;&#x8A72;&#x7528; data- &#x958B;&#x982D;&#xFF0C;&#x56E0;&#x70BA; data- &#x958B;&#x982D;&#x7684;&#x5C6C;&#x6027;&#x700F;&#x89BD;&#x5668;&#x6E32;&#x67D3;&#x7684;&#x6642;&#x5019;&#x6703;&#x5FFD;&#x7565;&#x6389;&#xFF0C;&#x63D0;&#x9AD8;&#x6E32;&#x67D3;&#x6027;&#x80FD;&#x3002;"},"performance.html#DOM-查詢做緩存":{"title":"DOM &#x67E5;&#x8A62;&#x505A;&#x7DE9;&#x5B58;","path":"\\javascript\\performance.html#DOM-查詢做緩存","body":"1 2 3 4 // &#x6BCF;&#x6B21;&#x5FAA;&#x74B0;&#xFF0C;&#x90FD;&#x6703;&#x67E5;&#x8A62; DOM &#xFF0C;&#x8017;&#x8CBB;&#x6027;&#x80FD; var i for (i = 0 ; i  document .getElementsByTagName( &apos;p&apos; ).length; i++) { } 1 2 3 4 5 6 // &#x53EA;&#x67E5;&#x8A62;&#x4E00;&#x500B; DOM &#xFF0C;&#x7DE9;&#x5B58;&#x5728; pList &#x4E2D;&#x4E86; var pList = document .getElementsByTagName( &apos;p&apos; ) var i for (i = 0 ; i  pList.length; i++) { //todo }"},"performance.html#合併-DOM-插入-createDocumentFragment":{"title":"&#x5408;&#x4F75; DOM &#x63D2;&#x5165; (createDocumentFragment)","path":"\\javascript\\performance.html#合併-DOM-插入-createDocumentFragment","body":"DOM &#x64CD;&#x4F5C;&#x662F;&#x975E;&#x5E38;&#x8017;&#x8CBB;&#x6027;&#x80FD;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x63D2;&#x5165;&#x591A;&#x500B;&#x6A19;&#x7C64;&#x6642;&#xFF0C;&#x5148;&#x63D2;&#x5165; Fragment &#x7136;&#x5F8C;&#x518D;&#x7D71;&#x4E00;&#x63D2;&#x5165; DOM&#x3002; 1 2 3 4 5 6 7 8 9 10 var listNode = document .getElementById( &apos;list&apos; ) // &#x8981;&#x63D2;&#x5165; 10 &#x500B; li &#x6A19;&#x7C64; var frag = document .createDocumentFragment(); var x, li; for (x = 0 ; x  10 ; x++) { li = document .createElement( li ); li.innerHTML = List item  + x; frag.appendChild(li); // &#x5148;&#x653E;&#x5728; frag &#x4E2D;&#xFF0C;&#x6700;&#x5F8C;&#x4E00;&#x6B21;&#x6027;&#x63D2;&#x5165;&#x5230; DOM &#x7D50;&#x69CB;&#x4E2D;&#x3002; } listNode.appendChild(frag);"},"performance.html#儘早執行操作-DOMContentLoaded":{"title":"&#x5118;&#x65E9;&#x57F7;&#x884C;&#x64CD;&#x4F5C; (DOMContentLoaded)","path":"\\javascript\\performance.html#儘早執行操作-DOMContentLoaded","body":"1 2 3 4 5 6 window .addEventListener( &apos;load&apos; , function ( ) { // &#x9801;&#x9762;&#x7684;&#x5168;&#x90E8;&#x8CC7;&#x6E90;&#x52A0;&#x8F09;&#x5B8C;&#x624D;&#x6703;&#x57F7;&#x884C;&#xFF0C;&#x5305;&#x62EC;&#x5716;&#x7247;&#x3001;&#x8996;&#x983B;&#x7B49; }) document .addEventListener( &apos;DOMContentLoaded&apos; , function ( ) { // DOM &#x6E32;&#x67D3;&#x5B8C;&#x5373;&#x53EF;&#x57F7;&#x884C;&#xFF0C;&#x6B64;&#x6642;&#x5716;&#x7247;&#x3001;&#x8996;&#x983B;&#x9084;&#x53EF;&#x80FD;&#x6C92;&#x6709;&#x52A0;&#x8F09;&#x5B8C; })"},"performance.html#事件節流":{"title":"&#x4E8B;&#x4EF6;&#x7BC0;&#x6D41;","path":"\\javascript\\performance.html#事件節流","body":"&#x4F8B;&#x5982;&#x8981;&#x5728;&#x6587;&#x5B57;&#x6539;&#x8B8A;&#x6642;&#x89F8;&#x767C;&#x4E00;&#x500B; change &#x4E8B;&#x4EF6;&#xFF0C;&#x901A;&#x904E; keyup &#x4F86;&#x76E3;&#x807D;&#x3002;&#x4F7F;&#x7528;&#x7BC0;&#x6D41;&#x3002; &#x9375;&#x76E4;&#x4E8B;&#x4EF6; keydown&#xFF1A;&#x6309;&#x4E0B;&#x9375;&#x76E4;&#x9375; keyup&#xFF1A;&#x91CB;&#x653E;&#x9375;&#x76E4;&#x9375; 1 2 3 4 5 6 7 8 9 10 11 12 // &#x8F38;&#x5165;&#x5B8C;&#x89F8;&#x767C;&#x6587;&#x5B57;&#x4FEE;&#x6539;&#x4E8B;&#x4EF6; var textarea = document .getElementById( &apos;text&apos; ) var timeoutId textarea.addEventListener( &apos;keyup&apos; , function ( ) { if (timeoutId) { clearTimeout(timeoutId) } // &#x8B93;&#x9023;&#x7E8C;&#x9375;&#x5165;&#x4E0D;&#x8981;&#x983B;&#x7E41;&#x89F8;&#x767C; change &#x4E8B;&#x4EF6; &#x505C;&#x4E0B;&#x624D;&#x89F8;&#x767C; timeoutId = setTimeout( function ( ) { // &#x89F8;&#x767C; change &#x4E8B;&#x4EF6; }, 100 ) }) Rreferences https://is.gd/0IyWU2 https://www.jianshu.com/p/8f839f558319"},"url.html":{"title":"URL","path":"\\javascript\\url.html","body":"取得網址的property window.location.href 取得目前造訪網頁的網址 window.location.protocol 取得目前造訪網頁的通訊協定(protocol) window.location.host 取得目前造訪網頁的主機名稱(hostname), 包含port window.location.hostname 取得目前造訪網頁的主機名稱(hostname) window.location.pathname 取得目前造訪網頁的路徑(path) window.location.hash 取得目前造訪網頁茅點(#)(hashtag) window.location.port 取得目前造訪網頁的port window.location.search 取得目前造訪網頁查詢參數(?) sample location.href = https://${window.location.host}"},"this.html":{"title":"This","path":"\\javascript\\this.html","body":"物件的方法調用 (As an object method) 物件下呼叫會影響 this 的指向 https://jsbin.com/viziyewore/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 function callName ( )  console .log( this .name);  var name = '全域' ; var obj =  name: '區域' , callName: callName, watch:  name: 'Watch' , callName: callName   callName() // \"全域\" obj.callName(); //\"區域\" ，呼叫是在物件下調用，那麼 this 則是該物件 obj.watch.callName(); //\"Watch\" https://jsbin.com/vihonezita/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 var name = '全域' ; var obj =  name: '區域' , callName: function ( )  console .log( this .name);   //callName; // callName is not defined //callName(); // error\" \"TypeError: callName is not a function obj.callName(); //\"區域\" ，呼叫是在物件下調用，那麼 this 則是該物件 var callName = obj.callName; callName(); // \"全域\" 1 2 3 4 5 6 7 8 9 var name = '全域' var obj =  //name : '物件的', x: function ( )  name = '函式的' ; console .log( this .name); //\"物件的\" 找不到就會undefined   obj.x() 簡易呼叫 1 2 3 4 5 6 7 8 9 var name = '全域' var obj =  name : '物件的' , getName: function ( )  return this .name;   var getName = obj.getName; console .log(getName()) //\"全域\" 1 2 3 4 5 6 7 8 9 10 var name = '全域' var obj =  name : '物件的' , fn: function ( a, b, c )  return this .name+ ',' +a+ ',' +b+ ',' +c;   var fnA = obj.fn; var fnB = fnA.bind( null , 0 ); // a console .log( fnB( 1 , 2 ) ) // b c \"全域,0,1,2\" 1 2 3 4 5 6 7 8 9 10 11 var name = '全域' var obj =  name : '物件的' , fn: function ( a, b, c )  'use strict' return this + ',' +a+ ',' +b+ ',' +c;   var fnA = obj.fn; var fnB = fnA.bind( null , 0 ); // a console .log( fnB( 1 , 2 ) ) // b c \"null,0,1,2\" 1 2 3 4 5 6 7 8 9 10 11 12 13 var value = 'global' ; var foo =  value: 'local' , bar: function ( )  return this .value;   console .log(foo.bar()); // \"local\" // 下面是表達式 執行時直接把函數取出來 執行函式的結果 console .log( foo.bar = foo.bar ); // function() return this.value; // 賦值是表達式 表達式會回傳結果 console .log( (foo.bar = foo.bar)() ); // \"global\" console .log( ( false || foo.bar)() ) // \"global\" 1 2 3 4 5 6 7 8 var value = 'global' ; var obj =  x: function ( )  value: 'fn' , console .log( this .value); //undefined ,  obj.x(); // \"local\" 1 2 3 4 5 6 7 8 9 10 var value = 'global' ; var obj =  x: function ( )  value: 'fn' , console .log( this .value); , value: 'local' ,  obj.x(); // \"local\" 立即函式： 1 2 3 4 5 6 7 var name = '全域' ; ( function ( )  function callSomeone ( )  console .log( this .name);  callSomeone(); //\"全域\" )(); 1 2 3 4 5 var name = '全域' ; ( function ( )  var name = '區域' ; console .log( this .name); //\"全域\" )() 1 2 3 4 5 6 7 8 9 10 var name = '全域' ; var obj =  name: '區域' , callName: function ( )  console .log( this .name);  ; ( function ( )  obj.callName(); // \"區域\" )(); Closure https://jsbin.com/tagalenuje/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 var name = '全域' function easyCard ( base = 100 )  var money = base return function ( update = 10 )  money = money + update console .log( this .name, money)   var MingEasyCard = easyCard( 100 ) MingEasyCard(); // 110 MingEasyCard(); // 120 var YourEasyCard = easyCard( 20 ); YourEasyCard(); //30 var YourEasyCard2 = easyCard( 20 ); YourEasyCard2( 100 ); // 120 var MyEasyCard = easyCard( 1000 )( 100 ); MyEasyCard( 100 ); // \"TypeError: MyEasyCard is not a function 1 2 3 4 5 6 7 8 9 10 11 var name = '全域' function easyCard ( base = 100 )  var money = base var name = '悠遊卡' return function ( update = 10 )  money = money + update console .log( this .name, money) // \"全域\" 110   var MingEasyCard = easyCard( 100 ) MingEasyCard() Callback 1 2 3 4 5 6 7 function myEasyCard ( callback )  var money = 150 return callback(money)  myEasyCard( function ( money )  console .log( money + 100 ) //250 ) 1 2 3 4 var a = [ 1 , 2 , 3 ]; a.forEach( function ( item )  console .log( this , item) ); https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#語法 1 2 3 arr.forEach( function callback ( currentValue[, index[, array]] )  //your iterator [, thisArg]); 這個 callback 函式將會把 Array 中的每一個元素作為參數，帶進本 callback 函式裡，每個元素各執行一次，接收三個參數： currentValue 代表目前被處理中的 Array 之中的那個元素。 index,array, thisArg 選擇性 Note: IIFE、Closure、Callback function 與 this 關係是!? 沒有關係 bind, apply, call call &amp; apply 可以作為呼叫 Function 的另一個手段，皆是回傳function執行結果 而 bind 則會回傳一個經過包裹後的 Function 回來，回傳的是綁定 this 後的 原函數 。 「綁定this的函數」 一但被綁定，其this無法再被修改。 call vs. apply 作用完全一樣，只是接受參數的方式不太一樣 1 2 func.call( this , arg1, arg2); func.apply( this , [arg1, arg2]); //陣列 JavaScript Call 使用給定的this參數以及分別給定的參數來呼叫某個函數 1 2 3 4 5 6 7 8 9 10 11 function callName ( name )  console .log( this .name, name);  var name = '全域' ; var obj =  name: '區域' ,  callName( undefined , '全域2' ); // \"全域\" undefined (this.name, name) callName.call( undefined , '呼叫' ); // \"全域\" \"呼叫\" (this.name, name) 無值傳入this往上找 callName.call(obj, '呼叫' ); // \"區域\" \"呼叫\" (this.name, name) bind 是ES5中新增的一個方法，可以改變函數內部的this指向 bind的應用場景 借用Array的原生方法 https://jsbin.com/pupasabapa/edit?js,console 1 2 3 4 5 6 7 8 9 var a = ; Array .prototype.push.bind(a, \"hello\" , \"world\" )(); console .log(a); // [object Object]  // 0: \"hello\", // 1: \"world\", // length: 2 //  http://www.dengzhr.com/js/1069 箭頭函式 「箭頭函式沒有自己的 this」 https://jsbin.com/wuxiqeciko/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 var name = '全域' var obj =  name: '區域' , callName: function ( )  // 注意，這裡是 function，以此為基準產生一個作用域 console .log( '1' , this .name); // 1 \"區域\" setTimeout( () =  console .log( '2' , this .name); // 2 \"區域\" //console.log('3', this); // 3 obj 這個物件 , 10 ); , callNameArrow: () =  // 注意，如果使用箭頭函式，this 依然指向 window console .log( '4' , this .name); // 4 \"全域\" setTimeout( () =  console .log( '5' , this .name); // 5 \"全域\" //console.log('6', this); // 6 window 物件 , 10 );   obj.callName(); obj.callNameArrow(); const func = (x) = x + 1 const func = function (x) { return x + 1 } JS語言中函式的設計，必有回傳值，沒寫相當於回傳 undefined map 1 2 3 4 5 6 7 8 9 10 // ['1','2','3'] 字串透過parseInt 轉數字 var arr = [ '1' , '2' , '3' ].map( parseInt ); console .log(arr) // [1, NaN, NaN] var arr = [ '1' , '2' , '3' ].map( function ( item, i )  console .log(item, i) // parseInt('1', 0); parseInt('2', 1); parseInt('3', 2); // parseInt('2', 1) 進位系統的1 表數字到1 進到下一位 所以2不會存在NaN // parseInt('11', 2) 進位系統的2 11表示2+1=3 return parseInt (item, 10 ) // \"1\" \"2\" \"3\" parseInt(item, i) ); map() callback 回呼函式 參數 currentValue index array parseInt() radix 能代表該進位系統的數字 注意，通常預設值不是 10 進位 References https://wcc723.github.io/javascript/2019/03/18/JS-THIS/ https://paper.dropbox.com/doc/JSJavaScript-This---AZqD8PDvbl5uk5Mfq_EJlXMkAg-Xw50EZtMFNqG0wUxKeIaz https://wcc723.github.io/javascript/2017/12/21/javascript-es6-arrow-function/"},"this.html#物件的方法調用-As-an-object-method":{"title":"&#x7269;&#x4EF6;&#x7684;&#x65B9;&#x6CD5;&#x8ABF;&#x7528; (As an object method)","path":"\\javascript\\this.html#物件的方法調用-As-an-object-method","body":"&#x7269;&#x4EF6;&#x4E0B;&#x547C;&#x53EB;&#x6703;&#x5F71;&#x97FF; this &#x7684;&#x6307;&#x5411; https://jsbin.com/viziyewore/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 function callName ( ) { console .log( this .name); } var name = &apos;&#x5168;&#x57DF;&apos; ; var obj = { name: &apos;&#x5340;&#x57DF;&apos; , callName: callName, watch: { name: &apos;Watch&apos; , callName: callName } } callName() // &#x5168;&#x57DF; obj.callName(); //&#x5340;&#x57DF; &#xFF0C;&#x547C;&#x53EB;&#x662F;&#x5728;&#x7269;&#x4EF6;&#x4E0B;&#x8ABF;&#x7528;&#xFF0C;&#x90A3;&#x9EBC; this &#x5247;&#x662F;&#x8A72;&#x7269;&#x4EF6; obj.watch.callName(); //Watch https://jsbin.com/vihonezita/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 var name = &apos;&#x5168;&#x57DF;&apos; ; var obj = { name: &apos;&#x5340;&#x57DF;&apos; , callName: function ( ) { console .log( this .name); } } //callName; // callName is not defined //callName(); // error TypeError: callName is not a function obj.callName(); //&#x5340;&#x57DF; &#xFF0C;&#x547C;&#x53EB;&#x662F;&#x5728;&#x7269;&#x4EF6;&#x4E0B;&#x8ABF;&#x7528;&#xFF0C;&#x90A3;&#x9EBC; this &#x5247;&#x662F;&#x8A72;&#x7269;&#x4EF6; var callName = obj.callName; callName(); // &#x5168;&#x57DF; 1 2 3 4 5 6 7 8 9 var name = &apos;&#x5168;&#x57DF;&apos; var obj = { //name : &apos;&#x7269;&#x4EF6;&#x7684;&apos;, x: function ( ) { name = &apos;&#x51FD;&#x5F0F;&#x7684;&apos; ; console .log( this .name); //&#x7269;&#x4EF6;&#x7684; &#x627E;&#x4E0D;&#x5230;&#x5C31;&#x6703;undefined } } obj.x()"},"this.html#簡易呼叫":{"title":"&#x7C21;&#x6613;&#x547C;&#x53EB;","path":"\\javascript\\this.html#簡易呼叫","body":"1 2 3 4 5 6 7 8 9 var name = &apos;&#x5168;&#x57DF;&apos; var obj = { name : &apos;&#x7269;&#x4EF6;&#x7684;&apos; , getName: function ( ) { return this .name; } } var getName = obj.getName; console .log(getName()) //&#x5168;&#x57DF; 1 2 3 4 5 6 7 8 9 10 var name = &apos;&#x5168;&#x57DF;&apos; var obj = { name : &apos;&#x7269;&#x4EF6;&#x7684;&apos; , fn: function ( a, b, c ) { return this .name+ &apos;,&apos; +a+ &apos;,&apos; +b+ &apos;,&apos; +c; } } var fnA = obj.fn; var fnB = fnA.bind( null , 0 ); // a console .log( fnB( 1 , 2 ) ) // b c &#x5168;&#x57DF;,0,1,2 1 2 3 4 5 6 7 8 9 10 11 var name = &apos;&#x5168;&#x57DF;&apos; var obj = { name : &apos;&#x7269;&#x4EF6;&#x7684;&apos; , fn: function ( a, b, c ) { &apos;use strict&apos; return this + &apos;,&apos; +a+ &apos;,&apos; +b+ &apos;,&apos; +c; } } var fnA = obj.fn; var fnB = fnA.bind( null , 0 ); // a console .log( fnB( 1 , 2 ) ) // b c null,0,1,2 1 2 3 4 5 6 7 8 9 10 11 12 13 var value = &apos;global&apos; ; var foo = { value: &apos;local&apos; , bar: function ( ) { return this .value; } } console .log(foo.bar()); // local // &#x4E0B;&#x9762;&#x662F;&#x8868;&#x9054;&#x5F0F; &#x57F7;&#x884C;&#x6642;&#x76F4;&#x63A5;&#x628A;&#x51FD;&#x6578;&#x53D6;&#x51FA;&#x4F86; &#x57F7;&#x884C;&#x51FD;&#x5F0F;&#x7684;&#x7D50;&#x679C; console .log( foo.bar = foo.bar ); // function() {return this.value;} // &#x8CE6;&#x503C;&#x662F;&#x8868;&#x9054;&#x5F0F; &#x8868;&#x9054;&#x5F0F;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; console .log( (foo.bar = foo.bar)() ); // global console .log( ( false || foo.bar)() ) // global 1 2 3 4 5 6 7 8 var value = &apos;global&apos; ; var obj = { x: function ( ) { value: &apos;fn&apos; , console .log( this .value); //undefined }, } obj.x(); // local 1 2 3 4 5 6 7 8 9 10 var value = &apos;global&apos; ; var obj = { x: function ( ) { value: &apos;fn&apos; , console .log( this .value); }, value: &apos;local&apos; , } obj.x(); // local"},"this.html#立即函式：":{"title":"&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#xFF1A;","path":"\\javascript\\this.html#立即函式：","body":"1 2 3 4 5 6 7 var name = &apos;&#x5168;&#x57DF;&apos; ; ( function ( ) { function callSomeone ( ) { console .log( this .name); } callSomeone(); //&#x5168;&#x57DF; })(); 1 2 3 4 5 var name = &apos;&#x5168;&#x57DF;&apos; ; ( function ( ) { var name = &apos;&#x5340;&#x57DF;&apos; ; console .log( this .name); //&#x5168;&#x57DF; })() 1 2 3 4 5 6 7 8 9 10 var name = &apos;&#x5168;&#x57DF;&apos; ; var obj = { name: &apos;&#x5340;&#x57DF;&apos; , callName: function ( ) { console .log( this .name); } }; ( function ( ) { obj.callName(); // &#x5340;&#x57DF; })();"},"this.html#Closure":{"title":"Closure","path":"\\javascript\\this.html#Closure","body":"https://jsbin.com/tagalenuje/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 var name = &apos;&#x5168;&#x57DF;&apos; function easyCard ( base = 100 ) { var money = base return function ( update = 10 ) { money = money + update console .log( this .name, money) } } var MingEasyCard = easyCard( 100 ) MingEasyCard(); // 110 MingEasyCard(); // 120 var YourEasyCard = easyCard( 20 ); YourEasyCard(); //30 var YourEasyCard2 = easyCard( 20 ); YourEasyCard2( 100 ); // 120 var MyEasyCard = easyCard( 1000 )( 100 ); MyEasyCard( 100 ); // TypeError: MyEasyCard is not a function 1 2 3 4 5 6 7 8 9 10 11 var name = &apos;&#x5168;&#x57DF;&apos; function easyCard ( base = 100 ) { var money = base var name = &apos;&#x60A0;&#x904A;&#x5361;&apos; return function ( update = 10 ) { money = money + update console .log( this .name, money) // &#x5168;&#x57DF; 110 } } var MingEasyCard = easyCard( 100 ) MingEasyCard()"},"this.html#Callback":{"title":"Callback","path":"\\javascript\\this.html#Callback","body":"1 2 3 4 5 6 7 function myEasyCard ( callback ) { var money = 150 return callback(money) } myEasyCard( function ( money ) { console .log( money + 100 ) //250 }) 1 2 3 4 var a = [ 1 , 2 , 3 ]; a.forEach( function ( item ) { console .log( this , item) }); https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#&#x8A9E;&#x6CD5; 1 2 3 arr.forEach( function callback ( currentValue[, index[, array]] ) { //your iterator }[, thisArg]); &#x9019;&#x500B; callback &#x51FD;&#x5F0F;&#x5C07;&#x6703;&#x628A; Array &#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x4F5C;&#x70BA;&#x53C3;&#x6578;&#xFF0C;&#x5E36;&#x9032;&#x672C; callback &#x51FD;&#x5F0F;&#x88E1;&#xFF0C;&#x6BCF;&#x500B;&#x5143;&#x7D20;&#x5404;&#x57F7;&#x884C;&#x4E00;&#x6B21;&#xFF0C;&#x63A5;&#x6536;&#x4E09;&#x500B;&#x53C3;&#x6578;&#xFF1A; currentValue &#x4EE3;&#x8868;&#x76EE;&#x524D;&#x88AB;&#x8655;&#x7406;&#x4E2D;&#x7684; Array &#x4E4B;&#x4E2D;&#x7684;&#x90A3;&#x500B;&#x5143;&#x7D20;&#x3002; index,array, thisArg &#x9078;&#x64C7;&#x6027; Note: IIFE&#x3001;Closure&#x3001;Callback function &#x8207; this &#x95DC;&#x4FC2;&#x662F;!? &#x6C92;&#x6709;&#x95DC;&#x4FC2;"},"this.html#bind-apply-call":{"title":"bind, apply, call","path":"\\javascript\\this.html#bind-apply-call","body":"call &amp; apply &#x53EF;&#x4EE5;&#x4F5C;&#x70BA;&#x547C;&#x53EB; Function &#x7684;&#x53E6;&#x4E00;&#x500B;&#x624B;&#x6BB5;&#xFF0C;&#x7686;&#x662F;&#x56DE;&#x50B3;function&#x57F7;&#x884C;&#x7D50;&#x679C; &#x800C; bind &#x5247;&#x6703;&#x56DE;&#x50B3;&#x4E00;&#x500B;&#x7D93;&#x904E;&#x5305;&#x88F9;&#x5F8C;&#x7684; Function &#x56DE;&#x4F86;&#xFF0C;&#x56DE;&#x50B3;&#x7684;&#x662F;&#x7D81;&#x5B9A; this &#x5F8C;&#x7684; &#x539F;&#x51FD;&#x6578; &#x3002; &#x300C;&#x7D81;&#x5B9A;this&#x7684;&#x51FD;&#x6578;&#x300D; &#x4E00;&#x4F46;&#x88AB;&#x7D81;&#x5B9A;&#xFF0C;&#x5176;this&#x7121;&#x6CD5;&#x518D;&#x88AB;&#x4FEE;&#x6539;&#x3002; call vs. apply &#x4F5C;&#x7528;&#x5B8C;&#x5168;&#x4E00;&#x6A23;&#xFF0C;&#x53EA;&#x662F;&#x63A5;&#x53D7;&#x53C3;&#x6578;&#x7684;&#x65B9;&#x5F0F;&#x4E0D;&#x592A;&#x4E00;&#x6A23; 1 2 func.call( this , arg1, arg2); func.apply( this , [arg1, arg2]); //&#x9663;&#x5217; JavaScript Call &#x4F7F;&#x7528;&#x7D66;&#x5B9A;&#x7684;this&#x53C3;&#x6578;&#x4EE5;&#x53CA;&#x5206;&#x5225;&#x7D66;&#x5B9A;&#x7684;&#x53C3;&#x6578;&#x4F86;&#x547C;&#x53EB;&#x67D0;&#x500B;&#x51FD;&#x6578; 1 2 3 4 5 6 7 8 9 10 11 function callName ( name ) { console .log( this .name, name); } var name = &apos;&#x5168;&#x57DF;&apos; ; var obj = { name: &apos;&#x5340;&#x57DF;&apos; , } callName( undefined , &apos;&#x5168;&#x57DF;2&apos; ); // &#x5168;&#x57DF; undefined (this.name, name) callName.call( undefined , &apos;&#x547C;&#x53EB;&apos; ); // &#x5168;&#x57DF; &#x547C;&#x53EB; (this.name, name) &#x7121;&#x503C;&#x50B3;&#x5165;this&#x5F80;&#x4E0A;&#x627E; callName.call(obj, &apos;&#x547C;&#x53EB;&apos; ); // &#x5340;&#x57DF; &#x547C;&#x53EB; (this.name, name) bind &#x662F;ES5&#x4E2D;&#x65B0;&#x589E;&#x7684;&#x4E00;&#x500B;&#x65B9;&#x6CD5;&#xFF0C;&#x53EF;&#x4EE5;&#x6539;&#x8B8A;&#x51FD;&#x6578;&#x5167;&#x90E8;&#x7684;this&#x6307;&#x5411; bind&#x7684;&#x61C9;&#x7528;&#x5834;&#x666F; &#x501F;&#x7528;Array&#x7684;&#x539F;&#x751F;&#x65B9;&#x6CD5; https://jsbin.com/pupasabapa/edit?js,console 1 2 3 4 5 6 7 8 9 var a = {}; Array .prototype.push.bind(a, hello , world )(); console .log(a); // [object Object] { // 0: hello, // 1: world, // length: 2 // } http://www.dengzhr.com/js/1069 &#x7BAD;&#x982D;&#x51FD;&#x5F0F; &#x300C;&#x7BAD;&#x982D;&#x51FD;&#x5F0F;&#x6C92;&#x6709;&#x81EA;&#x5DF1;&#x7684; this&#x300D; https://jsbin.com/wuxiqeciko/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 var name = &apos;&#x5168;&#x57DF;&apos; var obj = { name: &apos;&#x5340;&#x57DF;&apos; , callName: function ( ) { // &#x6CE8;&#x610F;&#xFF0C;&#x9019;&#x88E1;&#x662F; function&#xFF0C;&#x4EE5;&#x6B64;&#x70BA;&#x57FA;&#x6E96;&#x7522;&#x751F;&#x4E00;&#x500B;&#x4F5C;&#x7528;&#x57DF; console .log( &apos;1&apos; , this .name); // 1 &#x5340;&#x57DF; setTimeout( () = { console .log( &apos;2&apos; , this .name); // 2 &#x5340;&#x57DF; //console.log(&apos;3&apos;, this); // 3 obj &#x9019;&#x500B;&#x7269;&#x4EF6; }, 10 ); }, callNameArrow: () = { // &#x6CE8;&#x610F;&#xFF0C;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x7BAD;&#x982D;&#x51FD;&#x5F0F;&#xFF0C;this &#x4F9D;&#x7136;&#x6307;&#x5411; window console .log( &apos;4&apos; , this .name); // 4 &#x5168;&#x57DF; setTimeout( () = { console .log( &apos;5&apos; , this .name); // 5 &#x5168;&#x57DF; //console.log(&apos;6&apos;, this); // 6 window &#x7269;&#x4EF6; }, 10 ); } } obj.callName(); obj.callNameArrow(); const func = (x) = x + 1 const func = function (x) { return x + 1 } JS&#x8A9E;&#x8A00;&#x4E2D;&#x51FD;&#x5F0F;&#x7684;&#x8A2D;&#x8A08;&#xFF0C;&#x5FC5;&#x6709;&#x56DE;&#x50B3;&#x503C;&#xFF0C;&#x6C92;&#x5BEB;&#x76F8;&#x7576;&#x65BC;&#x56DE;&#x50B3; undefined map 1 2 3 4 5 6 7 8 9 10 // [&apos;1&apos;,&apos;2&apos;,&apos;3&apos;] &#x5B57;&#x4E32;&#x900F;&#x904E;parseInt &#x8F49;&#x6578;&#x5B57; var arr = [ &apos;1&apos; , &apos;2&apos; , &apos;3&apos; ].map( parseInt ); console .log(arr) // [1, NaN, NaN] var arr = [ &apos;1&apos; , &apos;2&apos; , &apos;3&apos; ].map( function ( item, i ) { console .log(item, i) // parseInt(&apos;1&apos;, 0); parseInt(&apos;2&apos;, 1); parseInt(&apos;3&apos;, 2); // parseInt(&apos;2&apos;, 1) &#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x7684;1 &#x8868;&#x6578;&#x5B57;&#x5230;1 &#x9032;&#x5230;&#x4E0B;&#x4E00;&#x4F4D; &#x6240;&#x4EE5;2&#x4E0D;&#x6703;&#x5B58;&#x5728;NaN // parseInt(&apos;11&apos;, 2) &#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x7684;2 11&#x8868;&#x793A;2+1=3 return parseInt (item, 10 ) // 1 2 3 parseInt(item, i) }); map() callback &#x56DE;&#x547C;&#x51FD;&#x5F0F; &#x53C3;&#x6578; currentValue index array parseInt() radix &#x80FD;&#x4EE3;&#x8868;&#x8A72;&#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x7684;&#x6578;&#x5B57; &#x6CE8;&#x610F;&#xFF0C;&#x901A;&#x5E38;&#x9810;&#x8A2D;&#x503C;&#x4E0D;&#x662F; 10 &#x9032;&#x4F4D; References https://wcc723.github.io/javascript/2019/03/18/JS-THIS/ https://paper.dropbox.com/doc/JSJavaScript-This---AZqD8PDvbl5uk5Mfq_EJlXMkAg-Xw50EZtMFNqG0wUxKeIaz https://wcc723.github.io/javascript/2017/12/21/javascript-es6-arrow-function/"},"math.html":{"title":"問題","path":"\\javascript\\math.html","body":"浮點數運算的坑 JavaScript 浮点数陷阱及解法 當你拿到 1.4000000000000001 這樣的數據要展示時，建議使用 toPrecision 湊整併 parseFloat 轉成數字後再顯示，如下： parseFloat(1.4000000000000001.toPrecision(12)) === 1.4 // True 百分比 轉 小數 問題 1 2 3 4 5 6 var a = 0.9 ; var b = a / 100 ; var c = parseFloat ( (a / 100 ).toPrecision( 12 )) console .log(b) // 0.009000000000000001 console .log(c) // 0.009 科學符號處理 npm from-exponential 1 2 3 4 5 6 7 8 span v-text= \"getPriceValue(order.itemPrice)\"  / span  import fromExponential from 'from-exponential' methods:  getPriceValue(value)  return fromExponential(value)   why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 這只是JavaScript遵循IEEE 754標準所產生的必然結果。 IEEE 754標準中 的浮點數並不能精確地表達小數（比如說0.1）， JavaScript中的小數採用的是雙精度(64位)表示的，由三部分組成：　符 + 階碼 + 尾數 IEEE 754 雙精度。六十四位中符號位佔一位，整數位佔十一位，其餘五十二位都為小數位。 因為浮點數隻有52位有效數字，從第53位開始，就舍入了。這樣就造成了“浮點數精度損失”問題。 因為 0.1 和 0.2 都是無限循環的二進制了，所以在小數位末尾處需要判斷是否進位（就和十進制的四捨五入一樣）。 計算機表示十進制是採用二進製表示的，所以 0.1 在二進製表示為 `0.1.toString(2) // “0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01” 小數的算法，是乘2 0.1 × 2 ￣￣￣￣ 0.2 → 取小數前的 0 0.2 × 2 ￣￣￣￣ 0.4 → 取小數前的 0 0.4 × 2 ￣￣￣￣ 0.8 → 取小數前的 0 0.8 × 2 ￣￣￣￣ 1.6 → 取小數前的 1 0.6 × 2 ￣￣￣￣ 1.2 → 取小數前的 1 0.2 × 2 ￣￣￣￣ 0.4 → 取小數前的 0 十進位 0.1 = 二進位 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 從上面可以看出，0.1的二進制格式是：0.0001100011….。這是一個二進制無限循環小數，但計算機內存有限，我們不能用儲存所有的小數位數。那麼在精度與內存間如何取捨呢？ 答案是： 在某個精度點直接捨棄 (第53位開始)。當然，代價就是，0.1在計算機內部根本就不是精確的0.1，而是一個有舍入誤差的0.1。當代碼被編譯或解釋後，0.1已經被四捨五入成一個與之很接近的計算機內部數字，以至於計算還沒開始，一個很小的舍入錯誤就已經產生了。這也就是 0.1 + 0.2 不等於0.3 的原因。 使用JavaScript內置的函數 toPrecision 或 toFixed 來保留一定的精度： (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true 不要相信js的計算 善用 math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"math.html#浮點數運算的坑":{"title":"&#x6D6E;&#x9EDE;&#x6578;&#x904B;&#x7B97;&#x7684;&#x5751;","path":"\\javascript\\math.html#浮點數運算的坑","body":"JavaScript &#x6D6E;&#x70B9;&#x6570;&#x9677;&#x9631;&#x53CA;&#x89E3;&#x6CD5; &#x7576;&#x4F60;&#x62FF;&#x5230; 1.4000000000000001 &#x9019;&#x6A23;&#x7684;&#x6578;&#x64DA;&#x8981;&#x5C55;&#x793A;&#x6642;&#xFF0C;&#x5EFA;&#x8B70;&#x4F7F;&#x7528; toPrecision &#x6E4A;&#x6574;&#x4F75; parseFloat &#x8F49;&#x6210;&#x6578;&#x5B57;&#x5F8C;&#x518D;&#x986F;&#x793A;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; parseFloat(1.4000000000000001.toPrecision(12)) === 1.4 // True &#x767E;&#x5206;&#x6BD4; &#x8F49; &#x5C0F;&#x6578; &#x554F;&#x984C; 1 2 3 4 5 6 var a = 0.9 ; var b = a / 100 ; var c = parseFloat ( (a / 100 ).toPrecision( 12 )) console .log(b) // 0.009000000000000001 console .log(c) // 0.009 &#x79D1;&#x5B78;&#x7B26;&#x865F;&#x8655;&#x7406; npm from-exponential 1 2 3 4 5 6 7 8 span v-text= getPriceValue(order.itemPrice)  / span  import fromExponential from &apos;from-exponential&apos; methods: { getPriceValue(value) { return fromExponential(value) } } why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002; IEEE 754&#x6A19;&#x6E96;&#x4E2D; &#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"math.html#科學符號處理":{"title":"&#x79D1;&#x5B78;&#x7B26;&#x865F;&#x8655;&#x7406;","path":"\\javascript\\math.html#科學符號處理","body":"npm from-exponential 1 2 3 4 5 6 7 8 span v-text= getPriceValue(order.itemPrice)  / span  import fromExponential from &apos;from-exponential&apos; methods: { getPriceValue(value) { return fromExponential(value) } } why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002; IEEE 754&#x6A19;&#x6E96;&#x4E2D; &#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"math.html#why-0-1-0-2-0-3":{"title":"why 0.1 + 0.2 != 0.3","path":"\\javascript\\math.html#why-0-1-0-2-0-3","body":"0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002; IEEE 754&#x6A19;&#x6E96;&#x4E2D; &#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"variable.html":{"title":"Variable","path":"\\javascript\\variable.html","body":"1 2 3 4 5 6 7 8 9 10 11 var name = 'Jacob' ; console .log( window .name); //\"Jacob\" mom = 'Jacob' ; console .log( window .name); //\"Jacob\" ( function ( )  name = 'Jacob' )(); console .log( window .name); //\"Jacob\" 宣告的變數不能被刪除 屬性可以被刪除 1 2 3 4 5 6 7 8 9 10 11 var name1 = \"Jacob1\" ; name2 = \"Jacob2\" ; ( function ( )  name3 = \"Jacob3\" ; )(); delete name1; delete name2; delete name3; console .log( window .name1); //\"Jacob1\" console .log( window .name2); // undefined console .log( window .name3); // undefined 變數的作用域在函式內 1 2 3 4 5 6 7 8 9 10 11 var value1 = \"global\" ; var class1 =  value2: \"local\" , function1 : function ( )  var value3 = \"function\" ;   console .log(value1); //\"global\" console .log(class1.value2); //\"local\" console .log(class1.value3); //undefined 1 2 3 4 5 6 7 8 9 10 11 12 var value = 1 ; function foo ( )  console .log(value); // 1  function bar ( )  var value = 2 ; foo();  bar(); Hoisting 函式會自動提升 1 2 3 4 callSomeone( 'Jacob' ); // \"打給 Jacob\" function callSomeone ( name )  console .log( '打給 ' + name)  變數會自動被提升 1 console .log(myname); // \"error\" ReferenceError: myname is not defined 1 2 console .log(myname); // undefined var myname = 'jacob' ; 1 2 3 4 5 6 7 8 9 10 fn() function fn ( params )  console .log(a) // undefined if (a)  a = 2 ;  console .log(a) // undefined  var a = 1 ; console .log(a) // 1 1 2 3 4 5 6 7 8 9 10 fn() function fn ( params )  console .log(a) // undefined if (! a)  a = 2 ;  console .log(a) // 2  var a = 1 ; console .log(a) // 1 1 2 3 4 5 fn(); function fn ( )  console .log(a); // undefined  var a = 1 ; 1 2 3 4 5 6 7 8 9 function foo ( )  console .log( '1' );  foo(); // 第一次執行 \"2\" function foo ( )  console .log( '2' );  foo(); // 第二次執行 \"2\" 動態型別 1 2 3 4 5 6 var a = '1' ; console .log( typeof a) // \"string\" a = +a; console .log( typeof a) // \"number\" a = a + '' ; console .log( typeof a) // \"string\" 1 console .log( 100 === '10' * 10 ) // true '10' * 10 = number https://paper.dropbox.com/doc/JavaScript--AaHkVSbD5F40g8SUfOv1i9ehAg-K98zBcemd1Ig9DZYYNruL"},"variable.html#變數的作用域在函式內":{"title":"&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x5728;&#x51FD;&#x5F0F;&#x5167;","path":"\\javascript\\variable.html#變數的作用域在函式內","body":"1 2 3 4 5 6 7 8 9 10 11 var value1 = global ; var class1 = { value2: local , function1 : function ( ) { var value3 = function ; } } console .log(value1); //global console .log(class1.value2); //local console .log(class1.value3); //undefined 1 2 3 4 5 6 7 8 9 10 11 12 var value = 1 ; function foo ( ) { console .log(value); // 1 } function bar ( ) { var value = 2 ; foo(); } bar();"},"variable.html#Hoisting":{"title":"Hoisting","path":"\\javascript\\variable.html#Hoisting","body":"&#x51FD;&#x5F0F;&#x6703;&#x81EA;&#x52D5;&#x63D0;&#x5347; 1 2 3 4 callSomeone( &apos;Jacob&apos; ); // &#x6253;&#x7D66; Jacob function callSomeone ( name ) { console .log( &apos;&#x6253;&#x7D66; &apos; + name) } &#x8B8A;&#x6578;&#x6703;&#x81EA;&#x52D5;&#x88AB;&#x63D0;&#x5347; 1 console .log(myname); // error ReferenceError: myname is not defined 1 2 console .log(myname); // undefined var myname = &apos;jacob&apos; ; 1 2 3 4 5 6 7 8 9 10 fn() function fn ( params ) { console .log(a) // undefined if (a) { a = 2 ; } console .log(a) // undefined } var a = 1 ; console .log(a) // 1 1 2 3 4 5 6 7 8 9 10 fn() function fn ( params ) { console .log(a) // undefined if (! a) { a = 2 ; } console .log(a) // 2 } var a = 1 ; console .log(a) // 1 1 2 3 4 5 fn(); function fn ( ) { console .log(a); // undefined } var a = 1 ; 1 2 3 4 5 6 7 8 9 function foo ( ) { console .log( &apos;1&apos; ); } foo(); // &#x7B2C;&#x4E00;&#x6B21;&#x57F7;&#x884C; 2 function foo ( ) { console .log( &apos;2&apos; ); } foo(); // &#x7B2C;&#x4E8C;&#x6B21;&#x57F7;&#x884C; 2"},"variable.html#動態型別":{"title":"&#x52D5;&#x614B;&#x578B;&#x5225;","path":"\\javascript\\variable.html#動態型別","body":"1 2 3 4 5 6 var a = &apos;1&apos; ; console .log( typeof a) // string a = +a; console .log( typeof a) // number a = a + &apos;&apos; ; console .log( typeof a) // string 1 console .log( 100 === &apos;10&apos; * 10 ) // true &apos;10&apos; * 10 = number https://paper.dropbox.com/doc/JavaScript--AaHkVSbD5F40g8SUfOv1i9ehAg-K98zBcemd1Ig9DZYYNruL"},"F2E/GraphQL.html":{"title":"GraphQL","path":"\\javascript\\F2E\\GraphQL.html","body":"GraphQL 是一個用於 API 的查詢語言，是一個使用基於類型系統來執行查詢的服務端運行時（類型系統由你的數據定義）。GraphQL 並沒有和任何特定數據庫或者存儲引擎綁定，而是依靠你現有的代碼和數據支撐。 使用一個 API 系統就像在百貨公司的地下美食廣場買晚餐， 傳統的 RESTful API 會要求你要一家一家 (很多 route) 去點餐，耗時又費力。 GraphQL 的體驗就如同使用APP一樣，百貨公司的餐飲店家們開發出一款點餐APP整合各家的點餐介面，消費者只要把想點的各家食物放進菜單，一鍵送出後就只要等待所有餐點送來桌上，省時又不費力！此外通過 APP 還可以更容易取得額外資訊如餐廳的聯絡方式 有了 GraphQL ，你可以把你的商業模型 (business model) 像圖形 (graph) 一樣串連起來 不同或相同type 的資料可以串接再一起，使得 GraphQL 只要一筆 query 就能一次拿全資料且資料格式非常有彈性！ 反觀 RESTful API 同樣的資料需要多筆 request 才能拿到且格式難以調整。 優點 缺點 資料只拿剛好且彈性十足 過於自由、規範少 程式即文檔 學習成本 前端控制權提升 相關社群仍在開發中 (Apollo) 強型別 Server Side Caching 實作困難 Server Side Caching 實作困難 RESTful API 的 endpoint 固定且資料需求單純，然而 GraphQL 難以保證每次 request 的模樣，因此較難實作 Caching References https://graphql.cn/learn/ https://ithelp.ithome.com.tw/articles/10200678"},"F2E/GraphQL.html#References":{"title":"References","path":"\\javascript\\F2E\\GraphQL.html#References","body":"https://graphql.cn/learn/ https://ithelp.ithome.com.tw/articles/10200678"},"F2E/cookie.html":{"title":"Cookie","path":"\\javascript\\F2E\\cookie.html","body":"因為HTTP 本身是 無狀態(Stateless) 的協議。 無論是客戶端還是服務器端，每一次的請求都是獨立性質，而且沒有必要紀錄彼此過去的互動行為，自然而然他沒辦法記憶你每次請求的內容。 舉凡像是登入來說，過去我們總是必須藉著不斷又不斷的登打帳號密碼，來完成網站上身分驗證的這件事情，起因當然是因為HTTP的無狀態(stateless)通訊協議造成的，而 Cookie 就是用來繞開HTTP的無狀態性的「額外手段」之一，讓伺服器可以設定或讀取Cookies中所包含資訊，藉此來維護我們在使用服務時，可以在背景完成向伺服器發送請求，接著伺服器就匯回傳包含登入憑據（使用者名稱加密碼的某種加密形式）的Cookie文檔，到使用者的硬碟(或記憶體上)，在之後登入時，只要Cookie尚未到期，瀏覽器會傳送該Cookie給伺服器作驗證憑據，來減少重複登入的輸入行為。 什麼是 Cookie？ Cookie 是您訪問過的網站創建的文件，用於存儲瀏覽信息，例如您的網站偏好設置或個人資料信息。 共有兩種類型的 Cookie： 第一方 Cookie 是由地址欄中列出的網站域設置的 Cookie， 而第三方 Cookie 來自在網頁上嵌入廣告或圖片等項的其他域來源。 Cookie可以用來提升用戶體驗，比如網站可以使用Cookie來記錄用戶的登錄狀態，用戶只要登錄一次就可以不用登錄了，購物網站通過Cookie來保存購物車中的商品等。同時很多的網站分析都是依靠Cookie來完成的。 第一方Cookie和第三方Cookie區別 第一方 Cookie 是 設定在您目前造訪之網域中 的 Cookie。例如，如果您在 www.adobe.com/tw 中，使用第一方 Cookie 時，Cookie 會設定在 adobe.com 網域中。 第三方 Cookie 是 設定在目前造訪網域以外的 其他網域中的 Cookie。例如，如果您造訪 www.adobe.com 且 Cookie 設定在 omtrdc.com 網域中，這便是第三方 Cookie。 Cookie是必須的，離開Cookie我們什麼也分析不了。 第一方Cookie接受率高，更準確，沒有特殊需要就用他。 第三方Cookie可以跨域跟蹤，特別需求可以應用。 第三方Cookie 這種 Cookie 是透過如社群網路等第三方程式安裝，主要目的為在本公司網站整合社群媒體內容，如社群插件 (Social Plugins)。 比如，訪問 www.a.com這個網站，這個網站設置了一個Cookie，這個Cookie也只能被 www.a.com 這個域下的網頁讀取，這就是第一方Cookie。 如果還是訪問 www.a.com這個網站，網頁裡有用到 www.b.com網站的一張圖片，瀏覽器在 www.b.com請求圖片的時候，www.b.com 設置了一個Cookie，那這個Cookie只能被 www.b.com這個域訪問，反而不能被 www.a.com 這個域訪問， 因為對我們來說，我們實際是在訪問 www.a.com這個網站被設置了一個www.b.com這個域下的Cookie，所以叫第三方Cookie。 第三方Cookie的優勢和應用 比如，當我們有多個域名的網站需要跟蹤，我們希望瞭解到用戶點擊某個廣告到達域名A下的網頁，然後可能瀏覽了不論那個域名下的頁面，最後在域名B下的網頁完成註冊的情況。廣告可以在域名A下的網頁被跟蹤到，而註冊可以在域名B下的網頁跟蹤到。 如果我們使用第一方Cookie，會為域名A建立一個Cookie，為域名B再建立一個Cookie，他們可以關聯各自域名下網頁上的行為，但是無法關聯起來。 而使用第三方Cookie，那麼無論多少個域，都只有一個Cookie，一個屬於第三方域的Cookie，網站下所有域都能共享這個Cookie，那麼所有的行為都能被關聯起來分析。 缺點 網頁第三方 Cookies（Third-Party Cookies）會洩漏網頁瀏覽的隱私 Session又是什麼呢? Cookie就像 取餐的號碼牌，認號不認人 ，如果今天遺失或是被別人幹走，那你的餐點就會被其他人給領走，更別提關閉瀏覽器之後Cookie就會有被清除的風險了。 Session有點類似會話的概念，Session機制是一種服務器端的機制。 是一種持久網路協定，讓Client端與Server端可以作一種對話，並將兩端建立關連，保持伺服器與Client可以持續的與Server作交談。 它表示了「面向、連接」和/或「保持狀態」這樣兩個異議 「面向、連接」表是客戶端和Server端通信前要先建立一個通信的渠道 「保持狀態」，則是指通信交談的其中一方，可以所有的消息作關聯，就像是巷口的早餐店阿姨，還記得你最愛吃的火腿蛋不喜歡有美乃滋。 所以我們可以想像 Cookie是一張領餐的號碼牌，而Session可以是一張數位會員卡 ，不僅可以記錄你的點餐號碼，還可以記憶你的餐點細節，消費記錄和點餐喜好…等。而這就解決號碼牌遺失領不到餐的問題，但是他不是記憶你帥氣得穿搭或長像，而是靠著所謂的Session ID。 當我們需要為某個客戶端的請求創建一個Session的時候，服務器首先檢查這個客戶端的請求裡是否有包含了Session標識，就是剛剛提到的 Session id，當然如果已包含一個Session id，就表示這個客戶是老司機啦，當然伺服器端以前就為了這個客戶端創建過Session，服務器就按照Session id，把這個Session找出來使用。但如果客戶端請求不包含Session id，，則表示他是新臉孔，那伺服器端就為此客戶端創建一個Session，並生成一個Session id，並在本次響應中返回給客戶端保存。 但是在最初的 Session 設計中，我們都會把資料記錄在 Server端 上，如 Database、記憶體或是利用檔案交換的方式，來把你的點餐資訊作儲存，而當你去領飲料時，店員會輸入你的號碼，並在叫出你點的內容。但如果是大型網站上，如果有負載平衡的機制，你怎麼能確定你當初輸入和最後取餐的Server是同一台呢，而這樣作當你資料量大時，也會有效能影響的問題，這時候Cookie就出場了。 保存這個Session id的方式也可以採用Cookie ，但似乎很多人都有一種彷彿瀏覽器關掉Session也會消失的錯覺，但本質上並非如此，就像會員卡，除非你主動提出銷卡，否則店家不會刪除顧客資料，這件事情對Session來說也如出一轍，除非通知Server刪除Session，否則Server端會一直保留來保持會話暢通，但瀏覽器從來不會主動在關閉前通知服務器要關閉 大部分Session機制都使用會話Cookie來保存Session ID 而關閉瀏覽器後因為Cookie消失造成 Session id也消失了，但只要把原來的Session ID再發送給Server，那還是能夠找到原來的Session 。 但大家都會擔心，Cookie和Session得結合，到底還會不會有被竄改的問題，這個時候就要靠”簽章”來驗證資料的真實性，在我使用Cookie請求時，可以加一個簽章，也就是在我傳輸的資料後面加上一個對應的秘密字串，當伺服器回傳時，可以回應該字串，若是其他使用者偷偷串改的話，由於串改的資料和我的秘密字串無法相符，當然也無法作偽造，這就是所謂的 SignedCookie 但記住Session就像是你的會員卡號，不見也表示仍然有資料被竊取的風險。 如果單就實現功能，Cookie與Session彼此之間是可以互換的(指的是你可以把資料存放在Session或是Cookie，並不是指Session可以被放在Client端當Cookie使用)。但是Cookie在最單純的情況裡，是有安全性的問題(資料在Client端)。所以考量到這點，大部分都會選擇Session。但是正如Cookie是一個外加的功能，Session也不屬於HTTP協定。只要是外加功能，就必須額外寫程式實現。 不過現在做網站我們都流行使用框架，Session的機制都被框架所實現了，以Ruby on Rails來說， 預設的Session實現方式是由Cookie來實作的(利用加密與設定過期時間)。 每個框架實現的邏輯都可能不一樣，所以還是要去看官方的說明會比較清楚。 但從這裡可得知，Session並不是一個很明確實體的機制，算是一個概念，只要符合概念所實作出來的功能都可以被叫做Session。 references 第一方Cookie和第三方Cookie區別 判斷您是使用第一方還是第三方 Cookie 五分鐘概述網路界的記憶大神-Session"},"F2E/cookie.html#什麼是-Cookie？":{"title":"&#x4EC0;&#x9EBC;&#x662F; Cookie&#xFF1F;","path":"\\javascript\\F2E\\cookie.html#什麼是-Cookie？","body":"Cookie &#x662F;&#x60A8;&#x8A2A;&#x554F;&#x904E;&#x7684;&#x7DB2;&#x7AD9;&#x5275;&#x5EFA;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x7528;&#x65BC;&#x5B58;&#x5132;&#x700F;&#x89BD;&#x4FE1;&#x606F;&#xFF0C;&#x4F8B;&#x5982;&#x60A8;&#x7684;&#x7DB2;&#x7AD9;&#x504F;&#x597D;&#x8A2D;&#x7F6E;&#x6216;&#x500B;&#x4EBA;&#x8CC7;&#x6599;&#x4FE1;&#x606F;&#x3002; &#x5171;&#x6709;&#x5169;&#x7A2E;&#x985E;&#x578B;&#x7684; Cookie&#xFF1A; &#x7B2C;&#x4E00;&#x65B9; Cookie &#x662F;&#x7531;&#x5730;&#x5740;&#x6B04;&#x4E2D;&#x5217;&#x51FA;&#x7684;&#x7DB2;&#x7AD9;&#x57DF;&#x8A2D;&#x7F6E;&#x7684; Cookie&#xFF0C; &#x800C;&#x7B2C;&#x4E09;&#x65B9; Cookie &#x4F86;&#x81EA;&#x5728;&#x7DB2;&#x9801;&#x4E0A;&#x5D4C;&#x5165;&#x5EE3;&#x544A;&#x6216;&#x5716;&#x7247;&#x7B49;&#x9805;&#x7684;&#x5176;&#x4ED6;&#x57DF;&#x4F86;&#x6E90;&#x3002; Cookie&#x53EF;&#x4EE5;&#x7528;&#x4F86;&#x63D0;&#x5347;&#x7528;&#x6236;&#x9AD4;&#x9A57;&#xFF0C;&#x6BD4;&#x5982;&#x7DB2;&#x7AD9;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;Cookie&#x4F86;&#x8A18;&#x9304;&#x7528;&#x6236;&#x7684;&#x767B;&#x9304;&#x72C0;&#x614B;&#xFF0C;&#x7528;&#x6236;&#x53EA;&#x8981;&#x767B;&#x9304;&#x4E00;&#x6B21;&#x5C31;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;&#x767B;&#x9304;&#x4E86;&#xFF0C;&#x8CFC;&#x7269;&#x7DB2;&#x7AD9;&#x901A;&#x904E;Cookie&#x4F86;&#x4FDD;&#x5B58;&#x8CFC;&#x7269;&#x8ECA;&#x4E2D;&#x7684;&#x5546;&#x54C1;&#x7B49;&#x3002;&#x540C;&#x6642;&#x5F88;&#x591A;&#x7684;&#x7DB2;&#x7AD9;&#x5206;&#x6790;&#x90FD;&#x662F;&#x4F9D;&#x9760;Cookie&#x4F86;&#x5B8C;&#x6210;&#x7684;&#x3002;"},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{"title":"&#x7B2C;&#x4E00;&#x65B9;Cookie&#x548C;&#x7B2C;&#x4E09;&#x65B9;Cookie&#x5340;&#x5225;","path":"\\javascript\\F2E\\cookie.html#第一方Cookie和第三方Cookie區別","body":"&#x7B2C;&#x4E00;&#x65B9; Cookie &#x662F; &#x8A2D;&#x5B9A;&#x5728;&#x60A8;&#x76EE;&#x524D;&#x9020;&#x8A2A;&#x4E4B;&#x7DB2;&#x57DF;&#x4E2D; &#x7684; Cookie&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x60A8;&#x5728; www.adobe.com/tw &#x4E2D;&#xFF0C;&#x4F7F;&#x7528;&#x7B2C;&#x4E00;&#x65B9; Cookie &#x6642;&#xFF0C;Cookie &#x6703;&#x8A2D;&#x5B9A;&#x5728; adobe.com &#x7DB2;&#x57DF;&#x4E2D;&#x3002; &#x7B2C;&#x4E09;&#x65B9; Cookie &#x662F; &#x8A2D;&#x5B9A;&#x5728;&#x76EE;&#x524D;&#x9020;&#x8A2A;&#x7DB2;&#x57DF;&#x4EE5;&#x5916;&#x7684; &#x5176;&#x4ED6;&#x7DB2;&#x57DF;&#x4E2D;&#x7684; Cookie&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x60A8;&#x9020;&#x8A2A; www.adobe.com &#x4E14; Cookie &#x8A2D;&#x5B9A;&#x5728; omtrdc.com &#x7DB2;&#x57DF;&#x4E2D;&#xFF0C;&#x9019;&#x4FBF;&#x662F;&#x7B2C;&#x4E09;&#x65B9; Cookie&#x3002; Cookie&#x662F;&#x5FC5;&#x9808;&#x7684;&#xFF0C;&#x96E2;&#x958B;Cookie&#x6211;&#x5011;&#x4EC0;&#x9EBC;&#x4E5F;&#x5206;&#x6790;&#x4E0D;&#x4E86;&#x3002; &#x7B2C;&#x4E00;&#x65B9;Cookie&#x63A5;&#x53D7;&#x7387;&#x9AD8;&#xFF0C;&#x66F4;&#x6E96;&#x78BA;&#xFF0C;&#x6C92;&#x6709;&#x7279;&#x6B8A;&#x9700;&#x8981;&#x5C31;&#x7528;&#x4ED6;&#x3002; &#x7B2C;&#x4E09;&#x65B9;Cookie&#x53EF;&#x4EE5;&#x8DE8;&#x57DF;&#x8DDF;&#x8E64;&#xFF0C;&#x7279;&#x5225;&#x9700;&#x6C42;&#x53EF;&#x4EE5;&#x61C9;&#x7528;&#x3002; &#x7B2C;&#x4E09;&#x65B9;Cookie &#x9019;&#x7A2E; Cookie &#x662F;&#x900F;&#x904E;&#x5982;&#x793E;&#x7FA4;&#x7DB2;&#x8DEF;&#x7B49;&#x7B2C;&#x4E09;&#x65B9;&#x7A0B;&#x5F0F;&#x5B89;&#x88DD;&#xFF0C;&#x4E3B;&#x8981;&#x76EE;&#x7684;&#x70BA;&#x5728;&#x672C;&#x516C;&#x53F8;&#x7DB2;&#x7AD9;&#x6574;&#x5408;&#x793E;&#x7FA4;&#x5A92;&#x9AD4;&#x5167;&#x5BB9;&#xFF0C;&#x5982;&#x793E;&#x7FA4;&#x63D2;&#x4EF6; (Social Plugins)&#x3002; &#x6BD4;&#x5982;&#xFF0C;&#x8A2A;&#x554F; www.a.com&#x9019;&#x500B;&#x7DB2;&#x7AD9;&#xFF0C;&#x9019;&#x500B;&#x7DB2;&#x7AD9;&#x8A2D;&#x7F6E;&#x4E86;&#x4E00;&#x500B;Cookie&#xFF0C;&#x9019;&#x500B;Cookie&#x4E5F;&#x53EA;&#x80FD;&#x88AB; www.a.com &#x9019;&#x500B;&#x57DF;&#x4E0B;&#x7684;&#x7DB2;&#x9801;&#x8B80;&#x53D6;&#xFF0C;&#x9019;&#x5C31;&#x662F;&#x7B2C;&#x4E00;&#x65B9;Cookie&#x3002; &#x5982;&#x679C;&#x9084;&#x662F;&#x8A2A;&#x554F; www.a.com&#x9019;&#x500B;&#x7DB2;&#x7AD9;&#xFF0C;&#x7DB2;&#x9801;&#x88E1;&#x6709;&#x7528;&#x5230; www.b.com&#x7DB2;&#x7AD9;&#x7684;&#x4E00;&#x5F35;&#x5716;&#x7247;&#xFF0C;&#x700F;&#x89BD;&#x5668;&#x5728; www.b.com&#x8ACB;&#x6C42;&#x5716;&#x7247;&#x7684;&#x6642;&#x5019;&#xFF0C;www.b.com &#x8A2D;&#x7F6E;&#x4E86;&#x4E00;&#x500B;Cookie&#xFF0C;&#x90A3;&#x9019;&#x500B;Cookie&#x53EA;&#x80FD;&#x88AB; www.b.com&#x9019;&#x500B;&#x57DF;&#x8A2A;&#x554F;&#xFF0C;&#x53CD;&#x800C;&#x4E0D;&#x80FD;&#x88AB; www.a.com &#x9019;&#x500B;&#x57DF;&#x8A2A;&#x554F;&#xFF0C; &#x56E0;&#x70BA;&#x5C0D;&#x6211;&#x5011;&#x4F86;&#x8AAA;&#xFF0C;&#x6211;&#x5011;&#x5BE6;&#x969B;&#x662F;&#x5728;&#x8A2A;&#x554F; www.a.com&#x9019;&#x500B;&#x7DB2;&#x7AD9;&#x88AB;&#x8A2D;&#x7F6E;&#x4E86;&#x4E00;&#x500B;www.b.com&#x9019;&#x500B;&#x57DF;&#x4E0B;&#x7684;Cookie&#xFF0C;&#x6240;&#x4EE5;&#x53EB;&#x7B2C;&#x4E09;&#x65B9;Cookie&#x3002; &#x7B2C;&#x4E09;&#x65B9;Cookie&#x7684;&#x512A;&#x52E2;&#x548C;&#x61C9;&#x7528; &#x6BD4;&#x5982;&#xFF0C;&#x7576;&#x6211;&#x5011;&#x6709;&#x591A;&#x500B;&#x57DF;&#x540D;&#x7684;&#x7DB2;&#x7AD9;&#x9700;&#x8981;&#x8DDF;&#x8E64;&#xFF0C;&#x6211;&#x5011;&#x5E0C;&#x671B;&#x77AD;&#x89E3;&#x5230;&#x7528;&#x6236;&#x9EDE;&#x64CA;&#x67D0;&#x500B;&#x5EE3;&#x544A;&#x5230;&#x9054;&#x57DF;&#x540D;A&#x4E0B;&#x7684;&#x7DB2;&#x9801;&#xFF0C;&#x7136;&#x5F8C;&#x53EF;&#x80FD;&#x700F;&#x89BD;&#x4E86;&#x4E0D;&#x8AD6;&#x90A3;&#x500B;&#x57DF;&#x540D;&#x4E0B;&#x7684;&#x9801;&#x9762;&#xFF0C;&#x6700;&#x5F8C;&#x5728;&#x57DF;&#x540D;B&#x4E0B;&#x7684;&#x7DB2;&#x9801;&#x5B8C;&#x6210;&#x8A3B;&#x518A;&#x7684;&#x60C5;&#x6CC1;&#x3002;&#x5EE3;&#x544A;&#x53EF;&#x4EE5;&#x5728;&#x57DF;&#x540D;A&#x4E0B;&#x7684;&#x7DB2;&#x9801;&#x88AB;&#x8DDF;&#x8E64;&#x5230;&#xFF0C;&#x800C;&#x8A3B;&#x518A;&#x53EF;&#x4EE5;&#x5728;&#x57DF;&#x540D;B&#x4E0B;&#x7684;&#x7DB2;&#x9801;&#x8DDF;&#x8E64;&#x5230;&#x3002; &#x5982;&#x679C;&#x6211;&#x5011;&#x4F7F;&#x7528;&#x7B2C;&#x4E00;&#x65B9;Cookie&#xFF0C;&#x6703;&#x70BA;&#x57DF;&#x540D;A&#x5EFA;&#x7ACB;&#x4E00;&#x500B;Cookie&#xFF0C;&#x70BA;&#x57DF;&#x540D;B&#x518D;&#x5EFA;&#x7ACB;&#x4E00;&#x500B;Cookie&#xFF0C;&#x4ED6;&#x5011;&#x53EF;&#x4EE5;&#x95DC;&#x806F;&#x5404;&#x81EA;&#x57DF;&#x540D;&#x4E0B;&#x7DB2;&#x9801;&#x4E0A;&#x7684;&#x884C;&#x70BA;&#xFF0C;&#x4F46;&#x662F;&#x7121;&#x6CD5;&#x95DC;&#x806F;&#x8D77;&#x4F86;&#x3002; &#x800C;&#x4F7F;&#x7528;&#x7B2C;&#x4E09;&#x65B9;Cookie&#xFF0C;&#x90A3;&#x9EBC;&#x7121;&#x8AD6;&#x591A;&#x5C11;&#x500B;&#x57DF;&#xFF0C;&#x90FD;&#x53EA;&#x6709;&#x4E00;&#x500B;Cookie&#xFF0C;&#x4E00;&#x500B;&#x5C6C;&#x65BC;&#x7B2C;&#x4E09;&#x65B9;&#x57DF;&#x7684;Cookie&#xFF0C;&#x7DB2;&#x7AD9;&#x4E0B;&#x6240;&#x6709;&#x57DF;&#x90FD;&#x80FD;&#x5171;&#x4EAB;&#x9019;&#x500B;Cookie&#xFF0C;&#x90A3;&#x9EBC;&#x6240;&#x6709;&#x7684;&#x884C;&#x70BA;&#x90FD;&#x80FD;&#x88AB;&#x95DC;&#x806F;&#x8D77;&#x4F86;&#x5206;&#x6790;&#x3002; &#x7F3A;&#x9EDE; &#x7DB2;&#x9801;&#x7B2C;&#x4E09;&#x65B9; Cookies&#xFF08;Third-Party Cookies&#xFF09;&#x6703;&#x6D29;&#x6F0F;&#x7DB2;&#x9801;&#x700F;&#x89BD;&#x7684;&#x96B1;&#x79C1; Session&#x53C8;&#x662F;&#x4EC0;&#x9EBC;&#x5462;? Cookie&#x5C31;&#x50CF; &#x53D6;&#x9910;&#x7684;&#x865F;&#x78BC;&#x724C;&#xFF0C;&#x8A8D;&#x865F;&#x4E0D;&#x8A8D;&#x4EBA; &#xFF0C;&#x5982;&#x679C;&#x4ECA;&#x5929;&#x907A;&#x5931;&#x6216;&#x662F;&#x88AB;&#x5225;&#x4EBA;&#x5E79;&#x8D70;&#xFF0C;&#x90A3;&#x4F60;&#x7684;&#x9910;&#x9EDE;&#x5C31;&#x6703;&#x88AB;&#x5176;&#x4ED6;&#x4EBA;&#x7D66;&#x9818;&#x8D70;&#xFF0C;&#x66F4;&#x5225;&#x63D0;&#x95DC;&#x9589;&#x700F;&#x89BD;&#x5668;&#x4E4B;&#x5F8C;Cookie&#x5C31;&#x6703;&#x6709;&#x88AB;&#x6E05;&#x9664;&#x7684;&#x98A8;&#x96AA;&#x4E86;&#x3002; Session&#x6709;&#x9EDE;&#x985E;&#x4F3C;&#x6703;&#x8A71;&#x7684;&#x6982;&#x5FF5;&#xFF0C;Session&#x6A5F;&#x5236;&#x662F;&#x4E00;&#x7A2E;&#x670D;&#x52D9;&#x5668;&#x7AEF;&#x7684;&#x6A5F;&#x5236;&#x3002; &#x662F;&#x4E00;&#x7A2E;&#x6301;&#x4E45;&#x7DB2;&#x8DEF;&#x5354;&#x5B9A;&#xFF0C;&#x8B93;Client&#x7AEF;&#x8207;Server&#x7AEF;&#x53EF;&#x4EE5;&#x4F5C;&#x4E00;&#x7A2E;&#x5C0D;&#x8A71;&#xFF0C;&#x4E26;&#x5C07;&#x5169;&#x7AEF;&#x5EFA;&#x7ACB;&#x95DC;&#x9023;&#xFF0C;&#x4FDD;&#x6301;&#x4F3A;&#x670D;&#x5668;&#x8207;Client&#x53EF;&#x4EE5;&#x6301;&#x7E8C;&#x7684;&#x8207;Server&#x4F5C;&#x4EA4;&#x8AC7;&#x3002; &#x5B83;&#x8868;&#x793A;&#x4E86;&#x300C;&#x9762;&#x5411;&#x3001;&#x9023;&#x63A5;&#x300D;&#x548C;/&#x6216;&#x300C;&#x4FDD;&#x6301;&#x72C0;&#x614B;&#x300D;&#x9019;&#x6A23;&#x5169;&#x500B;&#x7570;&#x8B70; &#x300C;&#x9762;&#x5411;&#x3001;&#x9023;&#x63A5;&#x300D;&#x8868;&#x662F;&#x5BA2;&#x6236;&#x7AEF;&#x548C;Server&#x7AEF;&#x901A;&#x4FE1;&#x524D;&#x8981;&#x5148;&#x5EFA;&#x7ACB;&#x4E00;&#x500B;&#x901A;&#x4FE1;&#x7684;&#x6E20;&#x9053; &#x300C;&#x4FDD;&#x6301;&#x72C0;&#x614B;&#x300D;&#xFF0C;&#x5247;&#x662F;&#x6307;&#x901A;&#x4FE1;&#x4EA4;&#x8AC7;&#x7684;&#x5176;&#x4E2D;&#x4E00;&#x65B9;&#xFF0C;&#x53EF;&#x4EE5;&#x6240;&#x6709;&#x7684;&#x6D88;&#x606F;&#x4F5C;&#x95DC;&#x806F;&#xFF0C;&#x5C31;&#x50CF;&#x662F;&#x5DF7;&#x53E3;&#x7684;&#x65E9;&#x9910;&#x5E97;&#x963F;&#x59E8;&#xFF0C;&#x9084;&#x8A18;&#x5F97;&#x4F60;&#x6700;&#x611B;&#x5403;&#x7684;&#x706B;&#x817F;&#x86CB;&#x4E0D;&#x559C;&#x6B61;&#x6709;&#x7F8E;&#x4E43;&#x6ECB;&#x3002; &#x6240;&#x4EE5;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x60F3;&#x50CF; Cookie&#x662F;&#x4E00;&#x5F35;&#x9818;&#x9910;&#x7684;&#x865F;&#x78BC;&#x724C;&#xFF0C;&#x800C;Session&#x53EF;&#x4EE5;&#x662F;&#x4E00;&#x5F35;&#x6578;&#x4F4D;&#x6703;&#x54E1;&#x5361; &#xFF0C;&#x4E0D;&#x50C5;&#x53EF;&#x4EE5;&#x8A18;&#x9304;&#x4F60;&#x7684;&#x9EDE;&#x9910;&#x865F;&#x78BC;&#xFF0C;&#x9084;&#x53EF;&#x4EE5;&#x8A18;&#x61B6;&#x4F60;&#x7684;&#x9910;&#x9EDE;&#x7D30;&#x7BC0;&#xFF0C;&#x6D88;&#x8CBB;&#x8A18;&#x9304;&#x548C;&#x9EDE;&#x9910;&#x559C;&#x597D;&#x2026;&#x7B49;&#x3002;&#x800C;&#x9019;&#x5C31;&#x89E3;&#x6C7A;&#x865F;&#x78BC;&#x724C;&#x907A;&#x5931;&#x9818;&#x4E0D;&#x5230;&#x9910;&#x7684;&#x554F;&#x984C;&#xFF0C;&#x4F46;&#x662F;&#x4ED6;&#x4E0D;&#x662F;&#x8A18;&#x61B6;&#x4F60;&#x5E25;&#x6C23;&#x5F97;&#x7A7F;&#x642D;&#x6216;&#x9577;&#x50CF;&#xFF0C;&#x800C;&#x662F;&#x9760;&#x8457;&#x6240;&#x8B02;&#x7684;Session ID&#x3002; &#x7576;&#x6211;&#x5011;&#x9700;&#x8981;&#x70BA;&#x67D0;&#x500B;&#x5BA2;&#x6236;&#x7AEF;&#x7684;&#x8ACB;&#x6C42;&#x5275;&#x5EFA;&#x4E00;&#x500B;Session&#x7684;&#x6642;&#x5019;&#xFF0C;&#x670D;&#x52D9;&#x5668;&#x9996;&#x5148;&#x6AA2;&#x67E5;&#x9019;&#x500B;&#x5BA2;&#x6236;&#x7AEF;&#x7684;&#x8ACB;&#x6C42;&#x88E1;&#x662F;&#x5426;&#x6709;&#x5305;&#x542B;&#x4E86;Session&#x6A19;&#x8B58;&#xFF0C;&#x5C31;&#x662F;&#x525B;&#x525B;&#x63D0;&#x5230;&#x7684; Session id&#xFF0C;&#x7576;&#x7136;&#x5982;&#x679C;&#x5DF2;&#x5305;&#x542B;&#x4E00;&#x500B;Session id&#xFF0C;&#x5C31;&#x8868;&#x793A;&#x9019;&#x500B;&#x5BA2;&#x6236;&#x662F;&#x8001;&#x53F8;&#x6A5F;&#x5566;&#xFF0C;&#x7576;&#x7136;&#x4F3A;&#x670D;&#x5668;&#x7AEF;&#x4EE5;&#x524D;&#x5C31;&#x70BA;&#x4E86;&#x9019;&#x500B;&#x5BA2;&#x6236;&#x7AEF;&#x5275;&#x5EFA;&#x904E;Session&#xFF0C;&#x670D;&#x52D9;&#x5668;&#x5C31;&#x6309;&#x7167;Session id&#xFF0C;&#x628A;&#x9019;&#x500B;Session&#x627E;&#x51FA;&#x4F86;&#x4F7F;&#x7528;&#x3002;&#x4F46;&#x5982;&#x679C;&#x5BA2;&#x6236;&#x7AEF;&#x8ACB;&#x6C42;&#x4E0D;&#x5305;&#x542B;Session id&#xFF0C;&#xFF0C;&#x5247;&#x8868;&#x793A;&#x4ED6;&#x662F;&#x65B0;&#x81C9;&#x5B54;&#xFF0C;&#x90A3;&#x4F3A;&#x670D;&#x5668;&#x7AEF;&#x5C31;&#x70BA;&#x6B64;&#x5BA2;&#x6236;&#x7AEF;&#x5275;&#x5EFA;&#x4E00;&#x500B;Session&#xFF0C;&#x4E26;&#x751F;&#x6210;&#x4E00;&#x500B;Session id&#xFF0C;&#x4E26;&#x5728;&#x672C;&#x6B21;&#x97FF;&#x61C9;&#x4E2D;&#x8FD4;&#x56DE;&#x7D66;&#x5BA2;&#x6236;&#x7AEF;&#x4FDD;&#x5B58;&#x3002; &#x4F46;&#x662F;&#x5728;&#x6700;&#x521D;&#x7684; Session &#x8A2D;&#x8A08;&#x4E2D;&#xFF0C;&#x6211;&#x5011;&#x90FD;&#x6703;&#x628A;&#x8CC7;&#x6599;&#x8A18;&#x9304;&#x5728; Server&#x7AEF; &#x4E0A;&#xFF0C;&#x5982; Database&#x3001;&#x8A18;&#x61B6;&#x9AD4;&#x6216;&#x662F;&#x5229;&#x7528;&#x6A94;&#x6848;&#x4EA4;&#x63DB;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x4F86;&#x628A;&#x4F60;&#x7684;&#x9EDE;&#x9910;&#x8CC7;&#x8A0A;&#x4F5C;&#x5132;&#x5B58;&#xFF0C;&#x800C;&#x7576;&#x4F60;&#x53BB;&#x9818;&#x98F2;&#x6599;&#x6642;&#xFF0C;&#x5E97;&#x54E1;&#x6703;&#x8F38;&#x5165;&#x4F60;&#x7684;&#x865F;&#x78BC;&#xFF0C;&#x4E26;&#x5728;&#x53EB;&#x51FA;&#x4F60;&#x9EDE;&#x7684;&#x5167;&#x5BB9;&#x3002;&#x4F46;&#x5982;&#x679C;&#x662F;&#x5927;&#x578B;&#x7DB2;&#x7AD9;&#x4E0A;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x8CA0;&#x8F09;&#x5E73;&#x8861;&#x7684;&#x6A5F;&#x5236;&#xFF0C;&#x4F60;&#x600E;&#x9EBC;&#x80FD;&#x78BA;&#x5B9A;&#x4F60;&#x7576;&#x521D;&#x8F38;&#x5165;&#x548C;&#x6700;&#x5F8C;&#x53D6;&#x9910;&#x7684;Server&#x662F;&#x540C;&#x4E00;&#x53F0;&#x5462;&#xFF0C;&#x800C;&#x9019;&#x6A23;&#x4F5C;&#x7576;&#x4F60;&#x8CC7;&#x6599;&#x91CF;&#x5927;&#x6642;&#xFF0C;&#x4E5F;&#x6703;&#x6709;&#x6548;&#x80FD;&#x5F71;&#x97FF;&#x7684;&#x554F;&#x984C;&#xFF0C;&#x9019;&#x6642;&#x5019;Cookie&#x5C31;&#x51FA;&#x5834;&#x4E86;&#x3002; &#x4FDD;&#x5B58;&#x9019;&#x500B;Session id&#x7684;&#x65B9;&#x5F0F;&#x4E5F;&#x53EF;&#x4EE5;&#x63A1;&#x7528;Cookie &#xFF0C;&#x4F46;&#x4F3C;&#x4E4E;&#x5F88;&#x591A;&#x4EBA;&#x90FD;&#x6709;&#x4E00;&#x7A2E;&#x5F77;&#x5F7F;&#x700F;&#x89BD;&#x5668;&#x95DC;&#x6389;Session&#x4E5F;&#x6703;&#x6D88;&#x5931;&#x7684;&#x932F;&#x89BA;&#xFF0C;&#x4F46;&#x672C;&#x8CEA;&#x4E0A;&#x4E26;&#x975E;&#x5982;&#x6B64;&#xFF0C;&#x5C31;&#x50CF;&#x6703;&#x54E1;&#x5361;&#xFF0C;&#x9664;&#x975E;&#x4F60;&#x4E3B;&#x52D5;&#x63D0;&#x51FA;&#x92B7;&#x5361;&#xFF0C;&#x5426;&#x5247;&#x5E97;&#x5BB6;&#x4E0D;&#x6703;&#x522A;&#x9664;&#x9867;&#x5BA2;&#x8CC7;&#x6599;&#xFF0C;&#x9019;&#x4EF6;&#x4E8B;&#x60C5;&#x5C0D;Session&#x4F86;&#x8AAA;&#x4E5F;&#x5982;&#x51FA;&#x4E00;&#x8F4D;&#xFF0C;&#x9664;&#x975E;&#x901A;&#x77E5;Server&#x522A;&#x9664;Session&#xFF0C;&#x5426;&#x5247;Server&#x7AEF;&#x6703;&#x4E00;&#x76F4;&#x4FDD;&#x7559;&#x4F86;&#x4FDD;&#x6301;&#x6703;&#x8A71;&#x66A2;&#x901A;&#xFF0C;&#x4F46;&#x700F;&#x89BD;&#x5668;&#x5F9E;&#x4F86;&#x4E0D;&#x6703;&#x4E3B;&#x52D5;&#x5728;&#x95DC;&#x9589;&#x524D;&#x901A;&#x77E5;&#x670D;&#x52D9;&#x5668;&#x8981;&#x95DC;&#x9589; &#x5927;&#x90E8;&#x5206;Session&#x6A5F;&#x5236;&#x90FD;&#x4F7F;&#x7528;&#x6703;&#x8A71;Cookie&#x4F86;&#x4FDD;&#x5B58;Session ID &#x800C;&#x95DC;&#x9589;&#x700F;&#x89BD;&#x5668;&#x5F8C;&#x56E0;&#x70BA;Cookie&#x6D88;&#x5931;&#x9020;&#x6210; Session id&#x4E5F;&#x6D88;&#x5931;&#x4E86;&#xFF0C;&#x4F46;&#x53EA;&#x8981;&#x628A;&#x539F;&#x4F86;&#x7684;Session ID&#x518D;&#x767C;&#x9001;&#x7D66;Server&#xFF0C;&#x90A3;&#x9084;&#x662F;&#x80FD;&#x5920;&#x627E;&#x5230;&#x539F;&#x4F86;&#x7684;Session &#x3002; &#x4F46;&#x5927;&#x5BB6;&#x90FD;&#x6703;&#x64D4;&#x5FC3;&#xFF0C;Cookie&#x548C;Session&#x5F97;&#x7D50;&#x5408;&#xFF0C;&#x5230;&#x5E95;&#x9084;&#x6703;&#x4E0D;&#x6703;&#x6709;&#x88AB;&#x7AC4;&#x6539;&#x7684;&#x554F;&#x984C;&#xFF0C;&#x9019;&#x500B;&#x6642;&#x5019;&#x5C31;&#x8981;&#x9760;&#x201D;&#x7C3D;&#x7AE0;&#x201D;&#x4F86;&#x9A57;&#x8B49;&#x8CC7;&#x6599;&#x7684;&#x771F;&#x5BE6;&#x6027;&#xFF0C;&#x5728;&#x6211;&#x4F7F;&#x7528;Cookie&#x8ACB;&#x6C42;&#x6642;&#xFF0C;&#x53EF;&#x4EE5;&#x52A0;&#x4E00;&#x500B;&#x7C3D;&#x7AE0;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5728;&#x6211;&#x50B3;&#x8F38;&#x7684;&#x8CC7;&#x6599;&#x5F8C;&#x9762;&#x52A0;&#x4E0A;&#x4E00;&#x500B;&#x5C0D;&#x61C9;&#x7684;&#x79D8;&#x5BC6;&#x5B57;&#x4E32;&#xFF0C;&#x7576;&#x4F3A;&#x670D;&#x5668;&#x56DE;&#x50B3;&#x6642;&#xFF0C;&#x53EF;&#x4EE5;&#x56DE;&#x61C9;&#x8A72;&#x5B57;&#x4E32;&#xFF0C;&#x82E5;&#x662F;&#x5176;&#x4ED6;&#x4F7F;&#x7528;&#x8005;&#x5077;&#x5077;&#x4E32;&#x6539;&#x7684;&#x8A71;&#xFF0C;&#x7531;&#x65BC;&#x4E32;&#x6539;&#x7684;&#x8CC7;&#x6599;&#x548C;&#x6211;&#x7684;&#x79D8;&#x5BC6;&#x5B57;&#x4E32;&#x7121;&#x6CD5;&#x76F8;&#x7B26;&#xFF0C;&#x7576;&#x7136;&#x4E5F;&#x7121;&#x6CD5;&#x4F5C;&#x507D;&#x9020;&#xFF0C;&#x9019;&#x5C31;&#x662F;&#x6240;&#x8B02;&#x7684; SignedCookie &#x4F46;&#x8A18;&#x4F4F;Session&#x5C31;&#x50CF;&#x662F;&#x4F60;&#x7684;&#x6703;&#x54E1;&#x5361;&#x865F;&#xFF0C;&#x4E0D;&#x898B;&#x4E5F;&#x8868;&#x793A;&#x4ECD;&#x7136;&#x6709;&#x8CC7;&#x6599;&#x88AB;&#x7ACA;&#x53D6;&#x7684;&#x98A8;&#x96AA;&#x3002; &#x5982;&#x679C;&#x55AE;&#x5C31;&#x5BE6;&#x73FE;&#x529F;&#x80FD;&#xFF0C;Cookie&#x8207;Session&#x5F7C;&#x6B64;&#x4E4B;&#x9593;&#x662F;&#x53EF;&#x4EE5;&#x4E92;&#x63DB;&#x7684;(&#x6307;&#x7684;&#x662F;&#x4F60;&#x53EF;&#x4EE5;&#x628A;&#x8CC7;&#x6599;&#x5B58;&#x653E;&#x5728;Session&#x6216;&#x662F;Cookie&#xFF0C;&#x4E26;&#x4E0D;&#x662F;&#x6307;Session&#x53EF;&#x4EE5;&#x88AB;&#x653E;&#x5728;Client&#x7AEF;&#x7576;Cookie&#x4F7F;&#x7528;)&#x3002;&#x4F46;&#x662F;Cookie&#x5728;&#x6700;&#x55AE;&#x7D14;&#x7684;&#x60C5;&#x6CC1;&#x88E1;&#xFF0C;&#x662F;&#x6709;&#x5B89;&#x5168;&#x6027;&#x7684;&#x554F;&#x984C;(&#x8CC7;&#x6599;&#x5728;Client&#x7AEF;)&#x3002;&#x6240;&#x4EE5;&#x8003;&#x91CF;&#x5230;&#x9019;&#x9EDE;&#xFF0C;&#x5927;&#x90E8;&#x5206;&#x90FD;&#x6703;&#x9078;&#x64C7;Session&#x3002;&#x4F46;&#x662F;&#x6B63;&#x5982;Cookie&#x662F;&#x4E00;&#x500B;&#x5916;&#x52A0;&#x7684;&#x529F;&#x80FD;&#xFF0C;Session&#x4E5F;&#x4E0D;&#x5C6C;&#x65BC;HTTP&#x5354;&#x5B9A;&#x3002;&#x53EA;&#x8981;&#x662F;&#x5916;&#x52A0;&#x529F;&#x80FD;&#xFF0C;&#x5C31;&#x5FC5;&#x9808;&#x984D;&#x5916;&#x5BEB;&#x7A0B;&#x5F0F;&#x5BE6;&#x73FE;&#x3002; &#x4E0D;&#x904E;&#x73FE;&#x5728;&#x505A;&#x7DB2;&#x7AD9;&#x6211;&#x5011;&#x90FD;&#x6D41;&#x884C;&#x4F7F;&#x7528;&#x6846;&#x67B6;&#xFF0C;Session&#x7684;&#x6A5F;&#x5236;&#x90FD;&#x88AB;&#x6846;&#x67B6;&#x6240;&#x5BE6;&#x73FE;&#x4E86;&#xFF0C;&#x4EE5;Ruby on Rails&#x4F86;&#x8AAA;&#xFF0C; &#x9810;&#x8A2D;&#x7684;Session&#x5BE6;&#x73FE;&#x65B9;&#x5F0F;&#x662F;&#x7531;Cookie&#x4F86;&#x5BE6;&#x4F5C;&#x7684;(&#x5229;&#x7528;&#x52A0;&#x5BC6;&#x8207;&#x8A2D;&#x5B9A;&#x904E;&#x671F;&#x6642;&#x9593;)&#x3002; &#x6BCF;&#x500B;&#x6846;&#x67B6;&#x5BE6;&#x73FE;&#x7684;&#x908F;&#x8F2F;&#x90FD;&#x53EF;&#x80FD;&#x4E0D;&#x4E00;&#x6A23;&#xFF0C;&#x6240;&#x4EE5;&#x9084;&#x662F;&#x8981;&#x53BB;&#x770B;&#x5B98;&#x65B9;&#x7684;&#x8AAA;&#x660E;&#x6703;&#x6BD4;&#x8F03;&#x6E05;&#x695A;&#x3002; &#x4F46;&#x5F9E;&#x9019;&#x88E1;&#x53EF;&#x5F97;&#x77E5;&#xFF0C;Session&#x4E26;&#x4E0D;&#x662F;&#x4E00;&#x500B;&#x5F88;&#x660E;&#x78BA;&#x5BE6;&#x9AD4;&#x7684;&#x6A5F;&#x5236;&#xFF0C;&#x7B97;&#x662F;&#x4E00;&#x500B;&#x6982;&#x5FF5;&#xFF0C;&#x53EA;&#x8981;&#x7B26;&#x5408;&#x6982;&#x5FF5;&#x6240;&#x5BE6;&#x4F5C;&#x51FA;&#x4F86;&#x7684;&#x529F;&#x80FD;&#x90FD;&#x53EF;&#x4EE5;&#x88AB;&#x53EB;&#x505A;Session&#x3002; references &#x7B2C;&#x4E00;&#x65B9;Cookie&#x548C;&#x7B2C;&#x4E09;&#x65B9;Cookie&#x5340;&#x5225; &#x5224;&#x65B7;&#x60A8;&#x662F;&#x4F7F;&#x7528;&#x7B2C;&#x4E00;&#x65B9;&#x9084;&#x662F;&#x7B2C;&#x4E09;&#x65B9; Cookie &#x4E94;&#x5206;&#x9418;&#x6982;&#x8FF0;&#x7DB2;&#x8DEF;&#x754C;&#x7684;&#x8A18;&#x61B6;&#x5927;&#x795E;-Session"},"F2E/header.html":{"title":"Header","path":"\\javascript\\F2E\\header.html","body":"HTTP Referer 教程 Referer 提供訪問來源的信息。 引薦人（referrer） ，誰引薦了你？ HTTP 協議在請求（request）的頭信息裡面，設計了一個Referer字段，給出 “引薦網頁” 的 URL。 字段是可選的。 主要是以下三種場景，會發送Referer字段。 （1）用戶點擊網頁上的鏈接。 （2）用戶發送表單。 （3）網頁加載靜態資源，比如加載圖片、腳本、樣式。 ###　Referer 的作用 涉及隱私，很多時候不適合發送 Referer 字段 不適合暴露 URL。一是功能URL，即有的URL不要登錄，可以訪問，就能直接完成 密碼重置、郵件退訂 等功能。 還有一種特殊情況，需要定製Referer字段。比如 社交網站 上，用戶在對話中提到某個網址。這時，不希望暴露用戶所在的原始網址，但是可以暴露社交網站的域名，讓對方知道，是我貢獻了你的流量。 nginx 真實IP Remote-Addr X-Forwarded-For X-Real-IP X-Forwarded-For（XFF） 是用來辨識通過HTTP代理或負載均衡方式連接到Web伺服器的用戶端最原始的IP位址的HTTP請求頭欄位。"},"api/promise.html":{"title":"","path":"\\javascript\\api\\promise.html","body":"Promise JavaScript Promise 全介紹 Ajax 是屬於一個透過 JavaScript 技術名稱，用於取得遠端資料； 而 Promise 則是一個語法，專門用來處理非同步行為， 透過 new Promise() 的方式建立 p 物件，此時 p 就能使用 Promise 的原型方法： 1 2 3 4 5 const p = new Promise (); p.then(); // Promise 回傳正確 p.catch(); // Promise 回傳失敗 p.finally(); // 非同步執行完畢（無論是否正確完成） 狀態 pending ：事件已經運行中，尚未取得結果 resolved ：事件已經執行完畢且成功操作，回傳 resolve 的結果（該承諾已經被實現 fulfilled ） rejected ：事件已經執行完畢但操作失敗，回傳 rejected 的結果 上列的三種狀態每次執行必定會經過 Pending， 接下來進入 Fulfilled 或 Rejected 的其中之一， 並且可以使用 then() 及 catch() 取得成功或失敗的結果。 在大部分情況下，開發者習慣僅使用 .then() 來取得成功的結果，失敗的部分交由 catch(onRejected) 來處理 1 2 3 4 5 6 7 8 9 10 // promise.then(onFulfilled); // promise.catch(onRejected) promise() .then( success =  console .log(success); ) // 失敗的行為一律交給了 catch .catch( fail =  console .log(fail); ); 鏈接 Promise 另一個特點在於 then、catch 都可以使用鏈接的方式不斷的進行下一個任務 如果是 promise 函式，則會 繼續遵循 then 及 catch 的運作 如果不是 promise 函式，在下一個 then 則可以取得結果 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 promise( 1 ) .then( success =  console .log(success); return promise( 2 ); ) .then( success =  console .log(success); return promise( 0 ); // 這個階段會進入 catch ) .then( success =  // 由於上一個階段結果是 reject，所以此段不執行 console .log(success); return promise( 3 ); ) .catch( fail =  console .log(fail); ) .finally( () =  console .log( 'done' ); )"},"api/promise.html#Promise":{"title":"Promise","path":"\\javascript\\api\\promise.html#Promise","body":"JavaScript Promise &#x5168;&#x4ECB;&#x7D39; Ajax &#x662F;&#x5C6C;&#x65BC;&#x4E00;&#x500B;&#x900F;&#x904E; JavaScript &#x6280;&#x8853;&#x540D;&#x7A31;&#xFF0C;&#x7528;&#x65BC;&#x53D6;&#x5F97;&#x9060;&#x7AEF;&#x8CC7;&#x6599;&#xFF1B; &#x800C; Promise &#x5247;&#x662F;&#x4E00;&#x500B;&#x8A9E;&#x6CD5;&#xFF0C;&#x5C08;&#x9580;&#x7528;&#x4F86;&#x8655;&#x7406;&#x975E;&#x540C;&#x6B65;&#x884C;&#x70BA;&#xFF0C; &#x900F;&#x904E; new Promise() &#x7684;&#x65B9;&#x5F0F;&#x5EFA;&#x7ACB; p &#x7269;&#x4EF6;&#xFF0C;&#x6B64;&#x6642; p &#x5C31;&#x80FD;&#x4F7F;&#x7528; Promise &#x7684;&#x539F;&#x578B;&#x65B9;&#x6CD5;&#xFF1A; 1 2 3 4 5 const p = new Promise (); p.then(); // Promise &#x56DE;&#x50B3;&#x6B63;&#x78BA; p.catch(); // Promise &#x56DE;&#x50B3;&#x5931;&#x6557; p.finally(); // &#x975E;&#x540C;&#x6B65;&#x57F7;&#x884C;&#x5B8C;&#x7562;&#xFF08;&#x7121;&#x8AD6;&#x662F;&#x5426;&#x6B63;&#x78BA;&#x5B8C;&#x6210;&#xFF09; &#x72C0;&#x614B; pending &#xFF1A;&#x4E8B;&#x4EF6;&#x5DF2;&#x7D93;&#x904B;&#x884C;&#x4E2D;&#xFF0C;&#x5C1A;&#x672A;&#x53D6;&#x5F97;&#x7D50;&#x679C; resolved &#xFF1A;&#x4E8B;&#x4EF6;&#x5DF2;&#x7D93;&#x57F7;&#x884C;&#x5B8C;&#x7562;&#x4E14;&#x6210;&#x529F;&#x64CD;&#x4F5C;&#xFF0C;&#x56DE;&#x50B3; resolve &#x7684;&#x7D50;&#x679C;&#xFF08;&#x8A72;&#x627F;&#x8AFE;&#x5DF2;&#x7D93;&#x88AB;&#x5BE6;&#x73FE; fulfilled &#xFF09; rejected &#xFF1A;&#x4E8B;&#x4EF6;&#x5DF2;&#x7D93;&#x57F7;&#x884C;&#x5B8C;&#x7562;&#x4F46;&#x64CD;&#x4F5C;&#x5931;&#x6557;&#xFF0C;&#x56DE;&#x50B3; rejected &#x7684;&#x7D50;&#x679C; &#x4E0A;&#x5217;&#x7684;&#x4E09;&#x7A2E;&#x72C0;&#x614B;&#x6BCF;&#x6B21;&#x57F7;&#x884C;&#x5FC5;&#x5B9A;&#x6703;&#x7D93;&#x904E; Pending&#xFF0C; &#x63A5;&#x4E0B;&#x4F86;&#x9032;&#x5165; Fulfilled &#x6216; Rejected &#x7684;&#x5176;&#x4E2D;&#x4E4B;&#x4E00;&#xFF0C; &#x4E26;&#x4E14;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; then() &#x53CA; catch() &#x53D6;&#x5F97;&#x6210;&#x529F;&#x6216;&#x5931;&#x6557;&#x7684;&#x7D50;&#x679C;&#x3002; &#x5728;&#x5927;&#x90E8;&#x5206;&#x60C5;&#x6CC1;&#x4E0B;&#xFF0C;&#x958B;&#x767C;&#x8005;&#x7FD2;&#x6163;&#x50C5;&#x4F7F;&#x7528; .then() &#x4F86;&#x53D6;&#x5F97;&#x6210;&#x529F;&#x7684;&#x7D50;&#x679C;&#xFF0C;&#x5931;&#x6557;&#x7684;&#x90E8;&#x5206;&#x4EA4;&#x7531; catch(onRejected) &#x4F86;&#x8655;&#x7406; 1 2 3 4 5 6 7 8 9 10 // promise.then(onFulfilled); // promise.catch(onRejected) promise() .then( success = { console .log(success); }) // &#x5931;&#x6557;&#x7684;&#x884C;&#x70BA;&#x4E00;&#x5F8B;&#x4EA4;&#x7D66;&#x4E86; catch .catch( fail = { console .log(fail); });"},"api/promise.html#鏈接":{"title":"&#x93C8;&#x63A5;","path":"\\javascript\\api\\promise.html#鏈接","body":"Promise &#x53E6;&#x4E00;&#x500B;&#x7279;&#x9EDE;&#x5728;&#x65BC; then&#x3001;catch &#x90FD;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x93C8;&#x63A5;&#x7684;&#x65B9;&#x5F0F;&#x4E0D;&#x65B7;&#x7684;&#x9032;&#x884C;&#x4E0B;&#x4E00;&#x500B;&#x4EFB;&#x52D9; &#x5982;&#x679C;&#x662F; promise &#x51FD;&#x5F0F;&#xFF0C;&#x5247;&#x6703; &#x7E7C;&#x7E8C;&#x9075;&#x5FAA; then &#x53CA; catch &#x7684;&#x904B;&#x4F5C; &#x5982;&#x679C;&#x4E0D;&#x662F; promise &#x51FD;&#x5F0F;&#xFF0C;&#x5728;&#x4E0B;&#x4E00;&#x500B; then &#x5247;&#x53EF;&#x4EE5;&#x53D6;&#x5F97;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 promise( 1 ) .then( success = { console .log(success); return promise( 2 ); }) .then( success = { console .log(success); return promise( 0 ); // &#x9019;&#x500B;&#x968E;&#x6BB5;&#x6703;&#x9032;&#x5165; catch }) .then( success = { // &#x7531;&#x65BC;&#x4E0A;&#x4E00;&#x500B;&#x968E;&#x6BB5;&#x7D50;&#x679C;&#x662F; reject&#xFF0C;&#x6240;&#x4EE5;&#x6B64;&#x6BB5;&#x4E0D;&#x57F7;&#x884C; console .log(success); return promise( 3 ); }) .catch( fail = { console .log(fail); }) .finally( () = { console .log( &apos;done&apos; ); })"},"F2E/token.html":{"title":"Token","path":"\\javascript\\F2E\\token.html","body":"JSON Web Token 入門教程 JSON Web Token （縮寫 JWT ）是目前最流行的跨域認證解決方案 A 網站和 B 網站是同一家公司的關聯服務。現在要求，用戶只要在其中一個網站登錄，再訪問另一個網站就會自動登錄，請問怎麼實現？ 一種方案是服務器索性不保存 session 數據了，所有數據都保存在客戶端，每次請求都發回服務器。 JWT 就是這種方案的一個代表。 provisional headers are shown 解决provisional headers are shown的过程 出現在 載入緩存資源,請求沒有被發送, 而如果上一個資源加載失敗,可能導致從緩存加載的資源失敗 provisional headers are shown 知多少"},"F2E/token.html#provisional-headers-are-shown":{"title":"provisional headers are shown","path":"\\javascript\\F2E\\token.html#provisional-headers-are-shown","body":"&#x89E3;&#x51B3;provisional headers are shown&#x7684;&#x8FC7;&#x7A0B; &#x51FA;&#x73FE;&#x5728; &#x8F09;&#x5165;&#x7DE9;&#x5B58;&#x8CC7;&#x6E90;,&#x8ACB;&#x6C42;&#x6C92;&#x6709;&#x88AB;&#x767C;&#x9001;, &#x800C;&#x5982;&#x679C;&#x4E0A;&#x4E00;&#x500B;&#x8CC7;&#x6E90;&#x52A0;&#x8F09;&#x5931;&#x6557;,&#x53EF;&#x80FD;&#x5C0E;&#x81F4;&#x5F9E;&#x7DE9;&#x5B58;&#x52A0;&#x8F09;&#x7684;&#x8CC7;&#x6E90;&#x5931;&#x6557; provisional headers are shown &#x77E5;&#x591A;&#x5C11;"},"array/array_method.html":{"title":"Array Method","path":"\\javascript\\array\\array_method.html","body":"一行代碼去重數組 Set 1 2 3 const list = [ 1 , 1 , 2 , 3 , 6 , 45 , 8 , 5 , 4 , 6 , 5 ] const uniqueList = [...new Set (list)] // [1, 2, 3, 6, 45, 8, 5, 4] console .log(uniqueList)"},"array/map.html":{"title":"","path":"\\javascript\\array\\map.html","body":"map 對元素重新組裝，生成新陣列 Array.prototype.map() https://jsbin.com/xevunu/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.map( function ( item,index )  return 'b' +item+ '/b' ; ) console .log(arr2); // expected output: [\"b1/b\", \"b2/b\", \"b3/b\"] 1 2 3 4 5 6 7 const array1 = [ 1 , 4 , 9 , 16 ]; // pass a function to map const map1 = array1.map( x = x * 2 ); console .log(map1); // expected output: Array [2, 8, 18, 32] res.map( (v,i)={ console.log(i,v) } ) react-ts-epirus\\src\\utils\\api\\queries.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 .then( postEthGetFilterLogsRes =  let hashList = [], fromtoArr=[]; postEthGetFilterLogsRes.map( v =  let transactionHash = v.transactionHash; fromtoArr.push(  transactionHash :transactionHash ) hashList.push(v.transactionHash) ) return Promise .all(hashList.map( ( hash ) = fetchData3( `/transactions/ $hash ` ))) .then( ( values ) =  let transactionsArr = []; values.map( ( v,i )=  let timestampISO = v.timestampISO; let value = v.functionMeta.params.length === 0 ? 0 : v.functionMeta.params[ 1 ].value let add_transactionHash = fromtoArr[i].transactionHash transactionsArr.push(  timestampISO: timestampISO, value : value, add_transactionHash: add_transactionHash  ) ) return transactionsArr; ) .catch( () =  ) .finally( () =  ); ) .then( res =  let ans = res as any[]; let resans = ans.map( v =  const timestampISO = v.timestampISO; const value = v.value; const add_transactionHash = v.add_transactionHash; return  'timestampISO' : timestampISO, 'value' : value, 'hash' : add_transactionHash, ; ) return resans; )"},"array/map.html#map":{"title":"map","path":"\\javascript\\array\\map.html#map","body":"&#x5C0D;&#x5143;&#x7D20;&#x91CD;&#x65B0;&#x7D44;&#x88DD;&#xFF0C;&#x751F;&#x6210;&#x65B0;&#x9663;&#x5217; Array.prototype.map() https://jsbin.com/xevunu/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.map( function ( item,index ) { return &apos;b&apos; +item+ &apos;/b&apos; ; }) console .log(arr2); // expected output: [b1/b, b2/b, b3/b] 1 2 3 4 5 6 7 const array1 = [ 1 , 4 , 9 , 16 ]; // pass a function to map const map1 = array1.map( x = x * 2 ); console .log(map1); // expected output: Array [2, 8, 18, 32] res.map( (v,i)={ console.log(i,v) } ) react-ts-epirus\\src\\utils\\api\\queries.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 .then( postEthGetFilterLogsRes = { let hashList = [], fromtoArr=[]; postEthGetFilterLogsRes.map( v = { let transactionHash = v.transactionHash; fromtoArr.push( { transactionHash :transactionHash }) hashList.push(v.transactionHash) }) return Promise .all(hashList.map( ( hash ) = fetchData3( `/transactions/ ${hash} ` ))) .then( ( values ) = { let transactionsArr = []; values.map( ( v,i )= { let timestampISO = v.timestampISO; let value = v.functionMeta.params.length === 0 ? 0 : v.functionMeta.params[ 1 ].value let add_transactionHash = fromtoArr[i].transactionHash transactionsArr.push( { timestampISO: timestampISO, value : value, add_transactionHash: add_transactionHash } ) }) return transactionsArr; }) .catch( () = { }) .finally( () = { }); }) .then( res = { let ans = res as any[]; let resans = ans.map( v = { const timestampISO = v.timestampISO; const value = v.value; const add_transactionHash = v.add_transactionHash; return { &apos;timestampISO&apos; : timestampISO, &apos;value&apos; : value, &apos;hash&apos; : add_transactionHash, }; }) return resans; })"},"array/array_merge.html":{"title":"Array Merge","path":"\\javascript\\array\\array_merge.html","body":"concat 合併陣列 Array.prototype.concat() 1 2 3 4 var a = [ 1 , 2 , 3 ], b = [ 4 , 5 , 6 ]; var c = a.concat(b); console .log(c); // 1,2,3,4,5,6 console .log(a); // 1,2,3 不改變本身 JS 中合併多個陣列，且去除陣列重複元素 1 2 3 4 var a = [ \"a\" , \"b\" , \"c\" ], b = [ \"c\" , 1 , 2 ]; var arr = a.concat(b); console .log(arr); // [\"a\", \"b\", \"c\", \"c\", 1, 2] 要求必須返回原陣列 https://jsbin.com/nidizam/edit?js,console 1 2 3 4 5 6 7 8 // 對該陣列進行循環 arr.forEach( ( item, index ) =  // 如果當前下標和當前元素在陣列中的lastIndex不同，則刪除這個元素 if (index != arr.lastIndexOf(item))  arr.splice(index, 1 );  ); console .log(arr); // \"a\", \"b\", \"c\", 1, 2] 要求返回新陣列 https://jsbin.com/lufavuf/1/edit?js,console 1 2 3 4 5 6 // 最簡單的應該是使用陣列的 filter 方法，將當前下標和當前元素在數組中的 lastIndex 相同的元素篩選出來 var arr2 = arr.filter( ( item,index ) = index ===arr.lastIndexOf(item) ); console .log(arr); // [\"a\", \"b\", \"c\", \"c\", 1, 2] console .log(arr2); // [\"a\", \"b\", \"c\", 1, 2]"},"array/array_insert.html":{"title":"Array Insert","path":"\\javascript\\array\\array_insert.html","body":"immutable 的重要性，處理資料要注意有沒有改變到本身。 處理 array 用 push、pop、shift、unshift、reserve、sort、splice 都會改變原有的陣列。這個觀念在處理複雜的全域變數陣列有幫助。 把數據插入陣列尾部 利用陣列長度進行賦值 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr[arr.length] = 6 ; console .log(arr); // [1, 2, 3, 4, 5, 6] 利用 Array.prototype.push 方法 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.push( 6 ); console .log(arr); // [1, 2, 3, 4, 5, 6] 利用 Array.prototype.concat 方法 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = arr.concat( 6 ); console .log(arr); // [1, 2, 3, 4, 5, 6] 利用 spread 運算符 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [...arr, 6 ]; console .log(arr); // [1, 2, 3, 4, 5, 6] 把數據插入陣列頭部 利用 Array.prototype.unshift 方法 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.unshift( 0 ); console .log(arr); // [1, 2, 3, 4, 5, 6] 利用 Array.prototype.concat 方法 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.unshift( 0 ); console .log(arr); // [1, 2, 3, 4, 5, 6] 利用 spread 運算符 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [ 0 , ...arr]; console .log(arr); // [1, 2, 3, 4, 5, 6] 把數據插入陣列指定位置 利用 Array.prototype.splice 方法 1 2 3 let items = [ 1 , 2 , 4 , 5 ]; items.splice(items.length / 2 , 0 , 3 ); console .log(items); Array.prototype.splice() splice() 方法可以藉由刪除既有元素並／或加入新元素來改變一個陣列的內容 1 2 3 4 5 const months = [ 'Jan' , 'March' , 'April' , 'June' ]; months.splice( 1 , 3 ); console .log(months); // [\"Jan\"] months.splice( 1 , 0 , 'Feb' ); // inserts at index 1 console .log(months); // [\"Jan\", \"Feb\"] 拼接兩個陣列 利用 Array.prototype.concat 方法 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [ -2 , -1 , 0 ].concat(arr); console .log(arr); // [-2, -1, 0, 1, 2, 3, 4, 5] 利用 spread 運算符 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [...[ -2 , -1 , 0 ], ...arr]; console .log(arr); // [-2, -1, 0, 1, 2, 3, 4, 5] fill() Array.prototype.fill() 方法會將陣列中索引的第一個到最後一個的每個位置全部填入一個靜態的值。 1 2 3 4 5 6 7 8 const array1 = [ 1 , 2 , 3 , 4 ]; // fill with 5 from position 1 console .log(array1.fill( 5 , 1 )); // expected output: [1, 5, 5, 5] console .log(array1.fill( 6 )); // expected output: [6, 6, 6, 6] 1 2 3 4 5 const tasksArr = props.tasks; // [1,2,3,4] const participants = tasksArr.length; const queuers = 6 - tasksArr.length; //4 ['Wating...','Wating...'] let waitingArr = queuers === 0 ? [] : Array (queuers).fill( 'Wating...' ); const totalArr = tasksArr.concat(waitingArr); example unshift 把數據插入陣列頭部 下拉選單補標題　　　　 1 2 3 4 5 6 7 8 const opts = this .dataOpts.map( data = ( value: data.id, text: data.name )) opts.unshift( value: null , text: 'select_title' )"},"array/array_insert.html#把數據插入陣列尾部":{"title":"&#x628A;&#x6578;&#x64DA;&#x63D2;&#x5165;&#x9663;&#x5217;&#x5C3E;&#x90E8;","path":"\\javascript\\array\\array_insert.html#把數據插入陣列尾部","body":"&#x5229;&#x7528;&#x9663;&#x5217;&#x9577;&#x5EA6;&#x9032;&#x884C;&#x8CE6;&#x503C; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr[arr.length] = 6 ; console .log(arr); // [1, 2, 3, 4, 5, 6] &#x5229;&#x7528; Array.prototype.push &#x65B9;&#x6CD5; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.push( 6 ); console .log(arr); // [1, 2, 3, 4, 5, 6] &#x5229;&#x7528; Array.prototype.concat &#x65B9;&#x6CD5; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = arr.concat( 6 ); console .log(arr); // [1, 2, 3, 4, 5, 6] &#x5229;&#x7528; spread &#x904B;&#x7B97;&#x7B26; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [...arr, 6 ]; console .log(arr); // [1, 2, 3, 4, 5, 6]"},"array/array_insert.html#把數據插入陣列頭部":{"title":"&#x628A;&#x6578;&#x64DA;&#x63D2;&#x5165;&#x9663;&#x5217;&#x982D;&#x90E8;","path":"\\javascript\\array\\array_insert.html#把數據插入陣列頭部","body":"&#x5229;&#x7528; Array.prototype.unshift &#x65B9;&#x6CD5; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.unshift( 0 ); console .log(arr); // [1, 2, 3, 4, 5, 6] &#x5229;&#x7528; Array.prototype.concat &#x65B9;&#x6CD5; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.unshift( 0 ); console .log(arr); // [1, 2, 3, 4, 5, 6] &#x5229;&#x7528; spread &#x904B;&#x7B97;&#x7B26; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [ 0 , ...arr]; console .log(arr); // [1, 2, 3, 4, 5, 6]"},"array/array_insert.html#把數據插入陣列指定位置":{"title":"&#x628A;&#x6578;&#x64DA;&#x63D2;&#x5165;&#x9663;&#x5217;&#x6307;&#x5B9A;&#x4F4D;&#x7F6E;","path":"\\javascript\\array\\array_insert.html#把數據插入陣列指定位置","body":"&#x5229;&#x7528; Array.prototype.splice &#x65B9;&#x6CD5; 1 2 3 let items = [ 1 , 2 , 4 , 5 ]; items.splice(items.length / 2 , 0 , 3 ); console .log(items); Array.prototype.splice() splice() &#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x85C9;&#x7531;&#x522A;&#x9664;&#x65E2;&#x6709;&#x5143;&#x7D20;&#x4E26;&#xFF0F;&#x6216;&#x52A0;&#x5165;&#x65B0;&#x5143;&#x7D20;&#x4F86;&#x6539;&#x8B8A;&#x4E00;&#x500B;&#x9663;&#x5217;&#x7684;&#x5167;&#x5BB9; 1 2 3 4 5 const months = [ &apos;Jan&apos; , &apos;March&apos; , &apos;April&apos; , &apos;June&apos; ]; months.splice( 1 , 3 ); console .log(months); // [Jan] months.splice( 1 , 0 , &apos;Feb&apos; ); // inserts at index 1 console .log(months); // [Jan, Feb]"},"array/array_insert.html#拼接兩個陣列":{"title":"&#x62FC;&#x63A5;&#x5169;&#x500B;&#x9663;&#x5217;","path":"\\javascript\\array\\array_insert.html#拼接兩個陣列","body":"&#x5229;&#x7528; Array.prototype.concat &#x65B9;&#x6CD5; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [ -2 , -1 , 0 ].concat(arr); console .log(arr); // [-2, -1, 0, 1, 2, 3, 4, 5] &#x5229;&#x7528; spread &#x904B;&#x7B97;&#x7B26; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [...[ -2 , -1 , 0 ], ...arr]; console .log(arr); // [-2, -1, 0, 1, 2, 3, 4, 5]"},"array/array_insert.html#fill":{"title":"fill()","path":"\\javascript\\array\\array_insert.html#fill","body":"Array.prototype.fill() &#x65B9;&#x6CD5;&#x6703;&#x5C07;&#x9663;&#x5217;&#x4E2D;&#x7D22;&#x5F15;&#x7684;&#x7B2C;&#x4E00;&#x500B;&#x5230;&#x6700;&#x5F8C;&#x4E00;&#x500B;&#x7684;&#x6BCF;&#x500B;&#x4F4D;&#x7F6E;&#x5168;&#x90E8;&#x586B;&#x5165;&#x4E00;&#x500B;&#x975C;&#x614B;&#x7684;&#x503C;&#x3002; 1 2 3 4 5 6 7 8 const array1 = [ 1 , 2 , 3 , 4 ]; // fill with 5 from position 1 console .log(array1.fill( 5 , 1 )); // expected output: [1, 5, 5, 5] console .log(array1.fill( 6 )); // expected output: [6, 6, 6, 6] 1 2 3 4 5 const tasksArr = props.tasks; // [1,2,3,4] const participants = tasksArr.length; const queuers = 6 - tasksArr.length; //4 [&apos;Wating...&apos;,&apos;Wating...&apos;] let waitingArr = queuers === 0 ? [] : Array (queuers).fill( &apos;Wating...&apos; ); const totalArr = tasksArr.concat(waitingArr);"},"array/array_insert.html#example":{"title":"example","path":"\\javascript\\array\\array_insert.html#example","body":"unshift &#x628A;&#x6578;&#x64DA;&#x63D2;&#x5165;&#x9663;&#x5217;&#x982D;&#x90E8; &#x4E0B;&#x62C9;&#x9078;&#x55AE;&#x88DC;&#x6A19;&#x984C;&#x3000;&#x3000;&#x3000;&#x3000; 1 2 3 4 5 6 7 8 const opts = this .dataOpts.map( data = ({ value: data.id, text: data.name })) opts.unshift({ value: null , text: &apos;select_title&apos; })"},"array/good_part.html":{"title":"JS 不良編碼習慣","path":"\\javascript\\array\\good_part.html","body":"不要使用早期的JavaScript技巧 它的創建者沒有料到這種語言會如此流行。 基於JavaScript構建的應用程序的複雜性比語言發展的速度還要快。這種情況迫使開發人員使用JavaScript技巧和變通方法，只是為了讓事情正常運行。 一個典型的例子是查看數組是否包含某個元素。 ES6 中可以使用 array.includes(item) 來代替 array.indexOf(item) !== -1"},"array/object_to_array.html":{"title":"object to array","path":"\\javascript\\array\\object_to_array.html","body":"transform object to array with lodash A modern native solution if anyone is interested: 1 const arr = Object .keys(obj).map( key = ( key, value : obj[key] ));"},"array/splice.html":{"title":"Array splice","path":"\\javascript\\array\\splice.html","body":"分割指定长度的元素数组 1 2 3 4 5 6 7 8 9 10 11 12 const listChunk = ( list, size= 1 , cacheList=[] ) =  const tmp = [...list] if (size  0 ) return list while (tmp.length)  cacheList.push( tmp.splice( 0 ,size))  return cacheList  console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ])) // [[1], [2], [3], [4], [5], [6], [7], [8], [9]] console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ], 3 )) // [[1, 2, 3], [4, 5, 6], [7, 8, 9]] console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ], 0 )) // [] console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ], -1 )) // []"},"array/splice.html#分割指定长度的元素数组":{"title":"&#x5206;&#x5272;&#x6307;&#x5B9A;&#x957F;&#x5EA6;&#x7684;&#x5143;&#x7D20;&#x6570;&#x7EC4;","path":"\\javascript\\array\\splice.html#分割指定长度的元素数组","body":"1 2 3 4 5 6 7 8 9 10 11 12 const listChunk = ( list, size= 1 , cacheList=[] ) = { const tmp = [...list] if (size  0 ) return list while (tmp.length) { cacheList.push( tmp.splice( 0 ,size)) } return cacheList } console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ])) // [[1], [2], [3], [4], [5], [6], [7], [8], [9]] console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ], 3 )) // [[1, 2, 3], [4, 5, 6], [7, 8, 9]] console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ], 0 )) // [] console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ], -1 )) // []"},"array/array_methods.html":{"title":"Array methods","path":"\\javascript\\array\\array_methods.html","body":"Array 生成新陣列 map filter forEach 遍歷所有元素 Array.prototype.forEach() https://jsbin.com/xoninaz/edit?js,console 1 2 3 4 5 6 7 8 9 var arr = [ 1 , 2 , 3 ]; arr.forEach( function ( item,index )  console .log(item,index); ); // expected output: 1 0 // expected output: 2 1 // expected output: 3 2 map 對元素重新組裝，生成新陣列 Array.prototype.map() https://jsbin.com/xevunu/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.map( function ( item,index )  return 'b' +item+ '/b' ; ) console .log(arr2); // expected output: [\"b1/b\", \"b2/b\", \"b3/b\"] filter 過濾符合條件的元素，生成新陣列 Array.prototype.filter() https://jsbin.com/xoninaz/1/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.filter( function ( item,index )  if (item 2 )  return true ;  ) console .log(arr2); // expected output: [3] find 回傳第一個滿足所提供之測試函式的元素值。否則回傳 undefined Array.prototype.find() https://jsbin.com/qapevom/edit?js,console 1 2 3 4 5 6 var arr = [ 1 , 2 , 3 ]; var found = arr.find( function ( item,index )  return item 1 ; ) console .log(found); // expected output: 2 sort 對一個陣列的所有元素進行排序，並回傳此陣列 Array.prototype.sort() https://jsbin.com/gaceyen/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 4 , 2 , 3 , 5 ]; var arr2 = arr.sort( function ( a,b )  return a - b; //從小到大排序 //return b - a; //從大到小排序 ) console .log(arr2); // expected output: [1, 2, 3, 4, 5] every 測試陣列 判斷所有元素是否都符合條件 Array.prototype.every() https://jsbin.com/nefobuh/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var result = arr.every( function ( item,index )  if (item 4 )  return true ;  ) console .log(result); // expected output: true some 測試陣列 判斷是否至少一個元素符合條件 Array.prototype.some() https://jsbin.com/yeleboz/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var result = arr.some( function ( item,index )  if (item 2 )  return true ;  ) console .log(result); // expected output: true reduce Array.prototype.reduce() reduce() 方法將一個累加器及陣列中每項元素（由左至右）傳入回呼函式，將陣列化為單一值。 1 2 3 4 5 6 const array1 = [ 1 , 2 , 3 , 4 ]; const reducer = ( accumulator, currentValue ) = accumulator + currentValue; // 1 + 2 + 3 + 4 console .log(array1.reduce(reducer)); // expected output: 10 Return longest string in array https://jsbin.com/razufufago/edit?js,console 1 2 3 var arr = [ \"vue\" , \"raact\" , \"JavaScript\" , \"Angular\" , \"jQuery\" ]; var longest = arr.reduce( ( a, b ) = a.length  b.length ? a : b, '' ); console .log(longest); // \"JavaScript\" examples https://jsbin.com/yapugucezi/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 let arr = [  product : 'The Godfather' , catalog : 'movie' , price : '150' ,  product : 'The Dark Knight' , catalog : 'movie' , price : '100' ,  product : '7 Rings' , catalog : 'music' , price : '300'  ] var arrFilter = arr.filter( function ( item,index )  if (item.catalog == \"movie\" )  return true ;  ) console .log(arrFilter); //arr catalog:'music' var arrSortPrice = arr.sort( function ( a,b )  return b.price - a.price; ) console .log(arrSortPrice); // arr 300 150 100 let sum = 0 ; arr.forEach( function ( element )  sum+= parseInt (element.price); ); console .log(sum); //sum price 550 陣列方法 map() 和 forEach() 有什麼區別？ 這兩種方法都是對陣列中的元素進行迭代。 map() 通過每個元素的回調函數將其映射到新的元素上，最終返回一個新的陣列。 forEach() 雖然也為每一個元素準備了回調函數，但卻不返回新的陣列。 map() 是 保持原有陣列不變的正確選擇 ，他可以讓原始陣列的每一個值都映射到新的陣列上。 forEach() 在每一次迭代的使用中都會產生副作用，因此 map() 是編程技術中常用的方法。 如果你需要迭代一個陣列，使其本身發生變化且不需要返回一個新陣列時，可以使用 forEach() 如果你只是對數字進行遍歷時，也可以使用 forEach() map() 運行的 較快 ，且返回的新陣列可以讓你繼續使用 map()、filter()、reduce() 等方法， 1 2 3 4 const arr = [ 1 , 2 , 3 , 4 , 5 ]; const arr1 = arr.map( num = num * 2 ).filter( num = num  5 ); console .log(arr); // [1, 2, 3, 4, 5] console .log(arr1); // [6, 8, 10] ref: https://hacpai.com/article/1547790109416?r=Vanessa"},"array/array_methods.html#Array":{"title":"Array","path":"\\javascript\\array\\array_methods.html#Array","body":"&#x751F;&#x6210;&#x65B0;&#x9663;&#x5217; map filter"},"array/array_methods.html#forEach":{"title":"forEach","path":"\\javascript\\array\\array_methods.html#forEach","body":"&#x904D;&#x6B77;&#x6240;&#x6709;&#x5143;&#x7D20; Array.prototype.forEach() https://jsbin.com/xoninaz/edit?js,console 1 2 3 4 5 6 7 8 9 var arr = [ 1 , 2 , 3 ]; arr.forEach( function ( item,index ) { console .log(item,index); }); // expected output: 1 0 // expected output: 2 1 // expected output: 3 2"},"array/array_methods.html#map":{"title":"map","path":"\\javascript\\array\\array_methods.html#map","body":"&#x5C0D;&#x5143;&#x7D20;&#x91CD;&#x65B0;&#x7D44;&#x88DD;&#xFF0C;&#x751F;&#x6210;&#x65B0;&#x9663;&#x5217; Array.prototype.map() https://jsbin.com/xevunu/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.map( function ( item,index ) { return &apos;b&apos; +item+ &apos;/b&apos; ; }) console .log(arr2); // expected output: [b1/b, b2/b, b3/b]"},"array/array_methods.html#filter":{"title":"filter","path":"\\javascript\\array\\array_methods.html#filter","body":"&#x904E;&#x6FFE;&#x7B26;&#x5408;&#x689D;&#x4EF6;&#x7684;&#x5143;&#x7D20;&#xFF0C;&#x751F;&#x6210;&#x65B0;&#x9663;&#x5217; Array.prototype.filter() https://jsbin.com/xoninaz/1/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.filter( function ( item,index ) { if (item 2 ) { return true ; } }) console .log(arr2); // expected output: [3]"},"array/array_methods.html#find":{"title":"find","path":"\\javascript\\array\\array_methods.html#find","body":"&#x56DE;&#x50B3;&#x7B2C;&#x4E00;&#x500B;&#x6EFF;&#x8DB3;&#x6240;&#x63D0;&#x4F9B;&#x4E4B;&#x6E2C;&#x8A66;&#x51FD;&#x5F0F;&#x7684;&#x5143;&#x7D20;&#x503C;&#x3002;&#x5426;&#x5247;&#x56DE;&#x50B3; undefined Array.prototype.find() https://jsbin.com/qapevom/edit?js,console 1 2 3 4 5 6 var arr = [ 1 , 2 , 3 ]; var found = arr.find( function ( item,index ) { return item 1 ; }) console .log(found); // expected output: 2"},"array/array_methods.html#sort":{"title":"sort","path":"\\javascript\\array\\array_methods.html#sort","body":"&#x5C0D;&#x4E00;&#x500B;&#x9663;&#x5217;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x9032;&#x884C;&#x6392;&#x5E8F;&#xFF0C;&#x4E26;&#x56DE;&#x50B3;&#x6B64;&#x9663;&#x5217; Array.prototype.sort() https://jsbin.com/gaceyen/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 4 , 2 , 3 , 5 ]; var arr2 = arr.sort( function ( a,b ) { return a - b; //&#x5F9E;&#x5C0F;&#x5230;&#x5927;&#x6392;&#x5E8F; //return b - a; //&#x5F9E;&#x5927;&#x5230;&#x5C0F;&#x6392;&#x5E8F; }) console .log(arr2); // expected output: [1, 2, 3, 4, 5]"},"array/array_methods.html#every":{"title":"every","path":"\\javascript\\array\\array_methods.html#every","body":"&#x6E2C;&#x8A66;&#x9663;&#x5217; &#x5224;&#x65B7;&#x6240;&#x6709;&#x5143;&#x7D20;&#x662F;&#x5426;&#x90FD;&#x7B26;&#x5408;&#x689D;&#x4EF6; Array.prototype.every() https://jsbin.com/nefobuh/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var result = arr.every( function ( item,index ) { if (item 4 ) { return true ; } }) console .log(result); // expected output: true"},"array/array_methods.html#some":{"title":"some","path":"\\javascript\\array\\array_methods.html#some","body":"&#x6E2C;&#x8A66;&#x9663;&#x5217; &#x5224;&#x65B7;&#x662F;&#x5426;&#x81F3;&#x5C11;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x7B26;&#x5408;&#x689D;&#x4EF6; Array.prototype.some() https://jsbin.com/yeleboz/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var result = arr.some( function ( item,index ) { if (item 2 ) { return true ; } }) console .log(result); // expected output: true"},"array/array_methods.html#reduce":{"title":"reduce","path":"\\javascript\\array\\array_methods.html#reduce","body":"Array.prototype.reduce() reduce() &#x65B9;&#x6CD5;&#x5C07;&#x4E00;&#x500B;&#x7D2F;&#x52A0;&#x5668;&#x53CA;&#x9663;&#x5217;&#x4E2D;&#x6BCF;&#x9805;&#x5143;&#x7D20;&#xFF08;&#x7531;&#x5DE6;&#x81F3;&#x53F3;&#xFF09;&#x50B3;&#x5165;&#x56DE;&#x547C;&#x51FD;&#x5F0F;&#xFF0C;&#x5C07;&#x9663;&#x5217;&#x5316;&#x70BA;&#x55AE;&#x4E00;&#x503C;&#x3002; 1 2 3 4 5 6 const array1 = [ 1 , 2 , 3 , 4 ]; const reducer = ( accumulator, currentValue ) = accumulator + currentValue; // 1 + 2 + 3 + 4 console .log(array1.reduce(reducer)); // expected output: 10 Return longest string in array https://jsbin.com/razufufago/edit?js,console 1 2 3 var arr = [ vue , raact , JavaScript , Angular , jQuery ]; var longest = arr.reduce( ( a, b ) = a.length  b.length ? a : b, &apos;&apos; ); console .log(longest); // JavaScript examples https://jsbin.com/yapugucezi/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 let arr = [ { product : &apos;The Godfather&apos; , catalog : &apos;movie&apos; , price : &apos;150&apos; }, { product : &apos;The Dark Knight&apos; , catalog : &apos;movie&apos; , price : &apos;100&apos; }, { product : &apos;7 Rings&apos; , catalog : &apos;music&apos; , price : &apos;300&apos; } ] var arrFilter = arr.filter( function ( item,index ) { if (item.catalog == movie ) { return true ; } }) console .log(arrFilter); //arr catalog:&apos;music&apos; var arrSortPrice = arr.sort( function ( a,b ) { return b.price - a.price; }) console .log(arrSortPrice); // arr 300 150 100 let sum = 0 ; arr.forEach( function ( element ) { sum+= parseInt (element.price); }); console .log(sum); //sum price 550 &#x9663;&#x5217;&#x65B9;&#x6CD5; map() &#x548C; forEach() &#x6709;&#x4EC0;&#x9EBC;&#x5340;&#x5225;&#xFF1F; &#x9019;&#x5169;&#x7A2E;&#x65B9;&#x6CD5;&#x90FD;&#x662F;&#x5C0D;&#x9663;&#x5217;&#x4E2D;&#x7684;&#x5143;&#x7D20;&#x9032;&#x884C;&#x8FED;&#x4EE3;&#x3002; map() &#x901A;&#x904E;&#x6BCF;&#x500B;&#x5143;&#x7D20;&#x7684;&#x56DE;&#x8ABF;&#x51FD;&#x6578;&#x5C07;&#x5176;&#x6620;&#x5C04;&#x5230;&#x65B0;&#x7684;&#x5143;&#x7D20;&#x4E0A;&#xFF0C;&#x6700;&#x7D42;&#x8FD4;&#x56DE;&#x4E00;&#x500B;&#x65B0;&#x7684;&#x9663;&#x5217;&#x3002; forEach() &#x96D6;&#x7136;&#x4E5F;&#x70BA;&#x6BCF;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x6E96;&#x5099;&#x4E86;&#x56DE;&#x8ABF;&#x51FD;&#x6578;&#xFF0C;&#x4F46;&#x537B;&#x4E0D;&#x8FD4;&#x56DE;&#x65B0;&#x7684;&#x9663;&#x5217;&#x3002; map() &#x662F; &#x4FDD;&#x6301;&#x539F;&#x6709;&#x9663;&#x5217;&#x4E0D;&#x8B8A;&#x7684;&#x6B63;&#x78BA;&#x9078;&#x64C7; &#xFF0C;&#x4ED6;&#x53EF;&#x4EE5;&#x8B93;&#x539F;&#x59CB;&#x9663;&#x5217;&#x7684;&#x6BCF;&#x4E00;&#x500B;&#x503C;&#x90FD;&#x6620;&#x5C04;&#x5230;&#x65B0;&#x7684;&#x9663;&#x5217;&#x4E0A;&#x3002; forEach() &#x5728;&#x6BCF;&#x4E00;&#x6B21;&#x8FED;&#x4EE3;&#x7684;&#x4F7F;&#x7528;&#x4E2D;&#x90FD;&#x6703;&#x7522;&#x751F;&#x526F;&#x4F5C;&#x7528;&#xFF0C;&#x56E0;&#x6B64; map() &#x662F;&#x7DE8;&#x7A0B;&#x6280;&#x8853;&#x4E2D;&#x5E38;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x5982;&#x679C;&#x4F60;&#x9700;&#x8981;&#x8FED;&#x4EE3;&#x4E00;&#x500B;&#x9663;&#x5217;&#xFF0C;&#x4F7F;&#x5176;&#x672C;&#x8EAB;&#x767C;&#x751F;&#x8B8A;&#x5316;&#x4E14;&#x4E0D;&#x9700;&#x8981;&#x8FD4;&#x56DE;&#x4E00;&#x500B;&#x65B0;&#x9663;&#x5217;&#x6642;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; forEach() &#x5982;&#x679C;&#x4F60;&#x53EA;&#x662F;&#x5C0D;&#x6578;&#x5B57;&#x9032;&#x884C;&#x904D;&#x6B77;&#x6642;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; forEach() map() &#x904B;&#x884C;&#x7684; &#x8F03;&#x5FEB; &#xFF0C;&#x4E14;&#x8FD4;&#x56DE;&#x7684;&#x65B0;&#x9663;&#x5217;&#x53EF;&#x4EE5;&#x8B93;&#x4F60;&#x7E7C;&#x7E8C;&#x4F7F;&#x7528; map()&#x3001;filter()&#x3001;reduce() &#x7B49;&#x65B9;&#x6CD5;&#xFF0C; 1 2 3 4 const arr = [ 1 , 2 , 3 , 4 , 5 ]; const arr1 = arr.map( num = num * 2 ).filter( num = num  5 ); console .log(arr); // [1, 2, 3, 4, 5] console .log(arr1); // [6, 8, 10] ref: https://hacpai.com/article/1547790109416?r=Vanessa"},"array/array_methods.html#examples":{"title":"examples","path":"\\javascript\\array\\array_methods.html#examples","body":"https://jsbin.com/yapugucezi/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 let arr = [ { product : &apos;The Godfather&apos; , catalog : &apos;movie&apos; , price : &apos;150&apos; }, { product : &apos;The Dark Knight&apos; , catalog : &apos;movie&apos; , price : &apos;100&apos; }, { product : &apos;7 Rings&apos; , catalog : &apos;music&apos; , price : &apos;300&apos; } ] var arrFilter = arr.filter( function ( item,index ) { if (item.catalog == movie ) { return true ; } }) console .log(arrFilter); //arr catalog:&apos;music&apos; var arrSortPrice = arr.sort( function ( a,b ) { return b.price - a.price; }) console .log(arrSortPrice); // arr 300 150 100 let sum = 0 ; arr.forEach( function ( element ) { sum+= parseInt (element.price); }); console .log(sum); //sum price 550 &#x9663;&#x5217;&#x65B9;&#x6CD5; map() &#x548C; forEach() &#x6709;&#x4EC0;&#x9EBC;&#x5340;&#x5225;&#xFF1F; &#x9019;&#x5169;&#x7A2E;&#x65B9;&#x6CD5;&#x90FD;&#x662F;&#x5C0D;&#x9663;&#x5217;&#x4E2D;&#x7684;&#x5143;&#x7D20;&#x9032;&#x884C;&#x8FED;&#x4EE3;&#x3002; map() &#x901A;&#x904E;&#x6BCF;&#x500B;&#x5143;&#x7D20;&#x7684;&#x56DE;&#x8ABF;&#x51FD;&#x6578;&#x5C07;&#x5176;&#x6620;&#x5C04;&#x5230;&#x65B0;&#x7684;&#x5143;&#x7D20;&#x4E0A;&#xFF0C;&#x6700;&#x7D42;&#x8FD4;&#x56DE;&#x4E00;&#x500B;&#x65B0;&#x7684;&#x9663;&#x5217;&#x3002; forEach() &#x96D6;&#x7136;&#x4E5F;&#x70BA;&#x6BCF;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x6E96;&#x5099;&#x4E86;&#x56DE;&#x8ABF;&#x51FD;&#x6578;&#xFF0C;&#x4F46;&#x537B;&#x4E0D;&#x8FD4;&#x56DE;&#x65B0;&#x7684;&#x9663;&#x5217;&#x3002; map() &#x662F; &#x4FDD;&#x6301;&#x539F;&#x6709;&#x9663;&#x5217;&#x4E0D;&#x8B8A;&#x7684;&#x6B63;&#x78BA;&#x9078;&#x64C7; &#xFF0C;&#x4ED6;&#x53EF;&#x4EE5;&#x8B93;&#x539F;&#x59CB;&#x9663;&#x5217;&#x7684;&#x6BCF;&#x4E00;&#x500B;&#x503C;&#x90FD;&#x6620;&#x5C04;&#x5230;&#x65B0;&#x7684;&#x9663;&#x5217;&#x4E0A;&#x3002; forEach() &#x5728;&#x6BCF;&#x4E00;&#x6B21;&#x8FED;&#x4EE3;&#x7684;&#x4F7F;&#x7528;&#x4E2D;&#x90FD;&#x6703;&#x7522;&#x751F;&#x526F;&#x4F5C;&#x7528;&#xFF0C;&#x56E0;&#x6B64; map() &#x662F;&#x7DE8;&#x7A0B;&#x6280;&#x8853;&#x4E2D;&#x5E38;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x5982;&#x679C;&#x4F60;&#x9700;&#x8981;&#x8FED;&#x4EE3;&#x4E00;&#x500B;&#x9663;&#x5217;&#xFF0C;&#x4F7F;&#x5176;&#x672C;&#x8EAB;&#x767C;&#x751F;&#x8B8A;&#x5316;&#x4E14;&#x4E0D;&#x9700;&#x8981;&#x8FD4;&#x56DE;&#x4E00;&#x500B;&#x65B0;&#x9663;&#x5217;&#x6642;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; forEach() &#x5982;&#x679C;&#x4F60;&#x53EA;&#x662F;&#x5C0D;&#x6578;&#x5B57;&#x9032;&#x884C;&#x904D;&#x6B77;&#x6642;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; forEach() map() &#x904B;&#x884C;&#x7684; &#x8F03;&#x5FEB; &#xFF0C;&#x4E14;&#x8FD4;&#x56DE;&#x7684;&#x65B0;&#x9663;&#x5217;&#x53EF;&#x4EE5;&#x8B93;&#x4F60;&#x7E7C;&#x7E8C;&#x4F7F;&#x7528; map()&#x3001;filter()&#x3001;reduce() &#x7B49;&#x65B9;&#x6CD5;&#xFF0C; 1 2 3 4 const arr = [ 1 , 2 , 3 , 4 , 5 ]; const arr1 = arr.map( num = num * 2 ).filter( num = num  5 ); console .log(arr); // [1, 2, 3, 4, 5] console .log(arr1); // [6, 8, 10] ref: https://hacpai.com/article/1547790109416?r=Vanessa"},"cases/arr.html":{"title":"arrays","path":"\\javascript\\cases\\arr.html","body":"一个合格的中级前端工程师必须要掌握的 28 个 JavaScript 技巧 ###　 One loop two arrays https://jsbin.com/janoyunemu/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const exampleValues = [ 2 , 15 , 8 , 23 , 1 , 32 ]; const [truthyValues, falseyValues] = exampleValues.reduce( ( arrays, exampleValue ) =  if (exampleValue  10 )  arrays[ 0 ].push(exampleValue); return arrays;  arrays[ 1 ].push(exampleValue); return arrays; , [[], []]); console .log(truthyValues); // [15, 23, 32] console .log(falseyValues); // [2, 8, 1] 如何快速將一個字符串數組轉化為數字類型的數組 1 2 [ '1' , '2' , '3' ].map( parseFloat ) [ '1' , '2' , '3' ].map( Number ) [‘1’, ‘2’, ‘3’].map(parseInt)的輸出結果是什麼？ 1 2 3 4 [ '1' , '2' , '3' ].map( parseInt ) parseInt ( '1' , 0 ); // 用10進制轉換 parseInt ( '2' , 1 ); // 該參數小於 2 或者大於 36，則 parseInt() 將返回 NaN parseInt ( '3' , 2 ); // 這個字符串的第一個字符是“3”，它並不是基礎基數2的一個有效數字。所以這個子字符串將被解析為空。如果子字符串被解析成空了，函數將返回為NaN。"},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{"title":"&#x5982;&#x4F55;&#x5FEB;&#x901F;&#x5C07;&#x4E00;&#x500B;&#x5B57;&#x7B26;&#x4E32;&#x6578;&#x7D44;&#x8F49;&#x5316;&#x70BA;&#x6578;&#x5B57;&#x985E;&#x578B;&#x7684;&#x6578;&#x7D44;","path":"\\javascript\\cases\\arr.html#如何快速將一個字符串數組轉化為數字類型的數組","body":"1 2 [ &apos;1&apos; , &apos;2&apos; , &apos;3&apos; ].map( parseFloat ) [ &apos;1&apos; , &apos;2&apos; , &apos;3&apos; ].map( Number ) [&#x2018;1&#x2019;, &#x2018;2&#x2019;, &#x2018;3&#x2019;].map(parseInt)&#x7684;&#x8F38;&#x51FA;&#x7D50;&#x679C;&#x662F;&#x4EC0;&#x9EBC;&#xFF1F; 1 2 3 4 [ &apos;1&apos; , &apos;2&apos; , &apos;3&apos; ].map( parseInt ) parseInt ( &apos;1&apos; , 0 ); // &#x7528;10&#x9032;&#x5236;&#x8F49;&#x63DB; parseInt ( &apos;2&apos; , 1 ); // &#x8A72;&#x53C3;&#x6578;&#x5C0F;&#x65BC; 2 &#x6216;&#x8005;&#x5927;&#x65BC; 36&#xFF0C;&#x5247; parseInt() &#x5C07;&#x8FD4;&#x56DE; NaN parseInt ( &apos;3&apos; , 2 ); // &#x9019;&#x500B;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x7B2C;&#x4E00;&#x500B;&#x5B57;&#x7B26;&#x662F;&#x201C;3&#x201D;&#xFF0C;&#x5B83;&#x4E26;&#x4E0D;&#x662F;&#x57FA;&#x790E;&#x57FA;&#x6578;2&#x7684;&#x4E00;&#x500B;&#x6709;&#x6548;&#x6578;&#x5B57;&#x3002;&#x6240;&#x4EE5;&#x9019;&#x500B;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x5C07;&#x88AB;&#x89E3;&#x6790;&#x70BA;&#x7A7A;&#x3002;&#x5982;&#x679C;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x88AB;&#x89E3;&#x6790;&#x6210;&#x7A7A;&#x4E86;&#xFF0C;&#x51FD;&#x6578;&#x5C07;&#x8FD4;&#x56DE;&#x70BA;NaN&#x3002;"},"array/filter.html":{"title":"Array filter","path":"\\javascript\\array\\filter.html","body":"filter 1 2 3 4 5 6 var arr = [ 0 , 1 , 2 ] arr[ 10 ] = 10 ; const result = arr.filter( function ( x )  return x === undefined ; ) console .log(result) // [] filter 和 map 基本屬性 會把 或直接略過那些空的東西 不處理 [‘1’, ‘2’, ‘3’].filter(parseInt) ? filter 为数组中的每个元素调用一次 callback 函数，并利用所有使得 callback 返回 true 或等价于 true 的值的元素创建一个新数组。 1 2 3 parseInt ( '1' , 0 ); // 1 parseInt ( '2' , 1 ); // 不返回 parseInt ( '3' , 2 ); // NaN 不返回 parseInt(‘1’, 0)：radix的值為0，判斷字符串發現介於1~9，用10進制轉換，結果為1，所以callback的結果等價於true，返回元素’1’。 parseInt(‘2’, 1)：radix的值為1，如果該參數小於 2 或者大於 36，則 parseInt() 將返回 NaN，結果不等價於true，不返回。 parseInt(‘3’, 2): radix的值為2，這就意味著字符串將被解析成字節數，也就是僅僅包含數值0和1。parseInt的規範指出，它僅嘗試分析第一個字符的左側。這個字符串的第一個字符是“3”，它並不是基礎基數2的一個有效數字。所以這個子字符串將被解析為空。如果子字符串被解析成空了，函數將返回為NaN。 https://juejin.im/post/5dbff8735188252ddb2fd25e [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;].filter(parseInt) // [1]"},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{"title":"[&#x2018;1&#x2019;, &#x2018;2&#x2019;, &#x2018;3&#x2019;].filter(parseInt) ?","path":"\\javascript\\array\\filter.html#‘1’-‘2’-‘3’-filter-parseInt","body":"filter &#x4E3A;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x8C03;&#x7528;&#x4E00;&#x6B21; callback &#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x5229;&#x7528;&#x6240;&#x6709;&#x4F7F;&#x5F97; callback &#x8FD4;&#x56DE; true &#x6216;&#x7B49;&#x4EF7;&#x4E8E; true &#x7684;&#x503C;&#x7684;&#x5143;&#x7D20;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x6570;&#x7EC4;&#x3002; 1 2 3 parseInt ( &apos;1&apos; , 0 ); // 1 parseInt ( &apos;2&apos; , 1 ); // &#x4E0D;&#x8FD4;&#x56DE; parseInt ( &apos;3&apos; , 2 ); // NaN &#x4E0D;&#x8FD4;&#x56DE; parseInt(&#x2018;1&#x2019;, 0)&#xFF1A;radix&#x7684;&#x503C;&#x70BA;0&#xFF0C;&#x5224;&#x65B7;&#x5B57;&#x7B26;&#x4E32;&#x767C;&#x73FE;&#x4ECB;&#x65BC;1~9&#xFF0C;&#x7528;10&#x9032;&#x5236;&#x8F49;&#x63DB;&#xFF0C;&#x7D50;&#x679C;&#x70BA;1&#xFF0C;&#x6240;&#x4EE5;callback&#x7684;&#x7D50;&#x679C;&#x7B49;&#x50F9;&#x65BC;true&#xFF0C;&#x8FD4;&#x56DE;&#x5143;&#x7D20;&#x2019;1&#x2019;&#x3002; parseInt(&#x2018;2&#x2019;, 1)&#xFF1A;radix&#x7684;&#x503C;&#x70BA;1&#xFF0C;&#x5982;&#x679C;&#x8A72;&#x53C3;&#x6578;&#x5C0F;&#x65BC; 2 &#x6216;&#x8005;&#x5927;&#x65BC; 36&#xFF0C;&#x5247; parseInt() &#x5C07;&#x8FD4;&#x56DE; NaN&#xFF0C;&#x7D50;&#x679C;&#x4E0D;&#x7B49;&#x50F9;&#x65BC;true&#xFF0C;&#x4E0D;&#x8FD4;&#x56DE;&#x3002; parseInt(&#x2018;3&#x2019;, 2): radix&#x7684;&#x503C;&#x70BA;2&#xFF0C;&#x9019;&#x5C31;&#x610F;&#x5473;&#x8457;&#x5B57;&#x7B26;&#x4E32;&#x5C07;&#x88AB;&#x89E3;&#x6790;&#x6210;&#x5B57;&#x7BC0;&#x6578;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x50C5;&#x50C5;&#x5305;&#x542B;&#x6578;&#x503C;0&#x548C;1&#x3002;parseInt&#x7684;&#x898F;&#x7BC4;&#x6307;&#x51FA;&#xFF0C;&#x5B83;&#x50C5;&#x5617;&#x8A66;&#x5206;&#x6790;&#x7B2C;&#x4E00;&#x500B;&#x5B57;&#x7B26;&#x7684;&#x5DE6;&#x5074;&#x3002;&#x9019;&#x500B;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x7B2C;&#x4E00;&#x500B;&#x5B57;&#x7B26;&#x662F;&#x201C;3&#x201D;&#xFF0C;&#x5B83;&#x4E26;&#x4E0D;&#x662F;&#x57FA;&#x790E;&#x57FA;&#x6578;2&#x7684;&#x4E00;&#x500B;&#x6709;&#x6548;&#x6578;&#x5B57;&#x3002;&#x6240;&#x4EE5;&#x9019;&#x500B;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x5C07;&#x88AB;&#x89E3;&#x6790;&#x70BA;&#x7A7A;&#x3002;&#x5982;&#x679C;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x88AB;&#x89E3;&#x6790;&#x6210;&#x7A7A;&#x4E86;&#xFF0C;&#x51FD;&#x6578;&#x5C07;&#x8FD4;&#x56DE;&#x70BA;NaN&#x3002; https://juejin.im/post/5dbff8735188252ddb2fd25e [&apos;1&apos;, &apos;2&apos;, &apos;3&apos;].filter(parseInt) // [1]"},"cases/delay.html":{"title":"Delay","path":"\\javascript\\cases\\delay.html","body":"延迟函数delay 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 const delay = ms = new Promise ( ( resolve, reject ) = setTimeout(resolve, ms)) const getData = status = new Promise ( ( resolve, reject ) =  status ? resolve( 'done' ) : reject( 'fail' ) ) const getRes = async (data) =  try  const res = await getData(data) const timestamp = new Date ().getTime() await delay( 1000 ) console .log(res, new Date ().getTime() - timestamp)  catch (error)  console .log(error)   getRes( true ) // 隔了1秒"},"array/fill.html":{"title":"Array fill","path":"\\javascript\\array\\fill.html","body":"fill 1 2 3 4 5 6 7 8 9 10 11 12 const array1 = [ 1 , 2 , 3 , 4 ]; // fill with 0 from position 2 until position 4 console .log(array1.fill( 0 , 2 , 4 )); // expected output: [1, 2, 0, 0] // fill with 5 from position 1 console .log(array1.fill( 5 , 1 )); // expected output: [1, 5, 5, 5] console .log(array1.fill( 6 )); // expected output: [6, 6, 6, 6] {1:200, 2:140, 5:400} 請將上面的數據格式轉換為 [200, 140, null, null, 400, null, null, null, null, null, null, null] ,其中數組的長度為12 1 2 3 4 5 6 const obj =  1 : 200 , 2 : 140 , 5 : 400 ; function translate ( obj )  return Object .assign( Array ( 13 ).fill( null ), obj).slice( 1 );  // 輸出 [200, 140, null, null, 400, null, null, null, null, null, null, null] console .log(translate(obj));"},"cases/if.html":{"title":"if else","path":"\\javascript\\cases\\if.html","body":"good programming patterns 三元運算符 Nested ternaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 let result = null ; if (conditionA)  if (conditionB)  result = \"A &amp; B\" ;  else  result = \"A\" ;   else  result = \"Not A\" ;  const result = !conditionA ? \"Not A\" : conditionB ? \"A &amp; B\" : \"A\" ; 1 2 3 4 5 6 var a = [ 0 ] if (a)  console .log( a == true )  else  console .log( \"done\" )  if 作為判斷數組有東西會過 但js怕比 [0] == true false"},"cases/replace.html":{"title":"replace","path":"\\javascript\\cases\\replace.html","body":"String.prototype.replace() 1 2 3 4 5 6 7 8 var str = 'x-x_' ; var retArr = []; str.replace( /(x_*)|(-)/g , function ( match, p1, p2 )  if (p1)  retArr.push( on : true , length : p1.length );  if (p2)  retArr.push( on : false , length : 1 );  ); console .log(retArr);"},"cases/str.html":{"title":"String 類別","path":"\\javascript\\cases\\str.html","body":"String​.prototype​.toLower​Case() 1 2 3 4 5 function lowercase ( str )  return str.charAt( 0 ).toLowerCase() + str.slice( 1 );  console .log( lowercase( 'Hello' ) ) // \"hello\" String​.prototype​.replace() 1 2 3 4 var str = 'hello put world' ; var replaceStr = str.replace( /get|post|put|delete/ , \"\" ); console .log(replaceStr) // \"hello world\" url Array.join() 1 2 3 var url = 'http://3000' ; const link = [ \"'\" ,url, \"'\" ].join( '' ) console .log(link); // = \"'http://3000'\""},"cases/str.html#url":{"title":"url","path":"\\javascript\\cases\\str.html#url","body":"Array.join() 1 2 3 var url = &apos;http://3000&apos; ; const link = [ &apos; ,url, &apos; ].join( &apos;&apos; ) console .log(link); // = &apos;http://3000&apos;"},"function/factory​_factory.html":{"title":"factory function","path":"\\javascript\\function\\factory​_factory.html","body":"當一個函數返回一個對象時，我們稱之他為 工廠函數(factory function) 1 2 3 4 5 6 7 function createJelly ( )  return  type: 'jelly' , colour: 'red' scoops: 3 ;  每次我們調用這個工廠函數，它將返回一個新的 jelly（果凍） 對象實例。 要注意的重點是，我們不必在工廠函數名稱前面加上create，但它可以讓其他人更清楚函數的意圖。 對於type屬性也是如此，但通常它可以幫助我們區分我們程序的對象。 帶參數的工廠函數 通過參數來定義我們的工廠函數 （icecream 冰淇淋），這可以用來改變返回對象的模型。 1 2 3 4 5 6 7 function createIceCream ( flavour= 'Vanilla' )  return  type: 'icecream' , scoops: 3 , flavour   組合的工廠函數 在一個工廠函數中定義另一個工廠函數，可以幫助我們把複雜的工廠函數拆分成更小的，可重用的碎片。 例如，我們可以創建一個 dessert（甜點）工廠函數，通過前面的 jelly（果凍）和 icecream（冰淇淋）工廠函數來定義。 1 2 3 4 5 6 7 8 9 function createDessert ( )  return  type: 'dessert' , bowl: [ createJelly(), createIceCream() ] ;  對象可以用 has-a(具有) 關係而不是 is-a(是) 來表示。也就是說，可以用組合而不是繼承來實現。 例如，使用繼承。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // A trifle *is a* dessert 蛋糕*是*甜點 function Trifle ( )  Dessert.apply( this , arguments );  Trifle.prototype = Dessert.prototype; // 或者 class Trifle extends Dessert  constructor ()  super ();   我們可以用組合模式表達相同的意思。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // A trifle *has* layers of jelly, custard and cream. It also *has a* topping. // 蛋糕 *有* 果凍層，奶酪層和奶油層，頂部還 *有* 裝飾配料。 function createTrifle ( )  return  type: 'trifle' , layers: [ createJelly(), createCustard(), createCream() ], topping: createAlmonds() ;  異步的工廠函數 並非所有工廠都會立即返回數據。例如，有些必須先獲取數據。 在這些情況下，我們可以返回 Promises 來定義工廠函數。 1 2 3 4 5 6 7 8 9 10 11 12 function getMeal ( menuUrl )  return new Promise ( ( resolve, reject ) =  fetch(menuUrl) .then( result =  resolve( type: 'meal' , courses: result.json() ); ) .catch(reject); );  這種深度嵌套的縮進會使異步工廠難以閱讀和測試。 將它們分解成多個不同的工廠通常是有幫助的，可以使用如下編寫。 1 2 3 4 5 6 7 8 9 10 11 12 function getMeal ( menuUrl )  return fetch(menuUrl) .then( result = result.json()) .then( json = createMeal(json));  function createMeal ( courses=[] )  return  type: 'meal' , courses ;  當然，我們可以使用回調函數，但是我們已經有了 Promise.all 這樣的工具返回 Promises 來定義工廠函數。 1 2 3 4 5 6 7 8 9 10 11 function getWeeksMeals ( )  const menuUrl = 'jsfood.com/' ; return Promise .all([ getMeal( ` $menuUrl /monday` ), getMeal( ` $menuUrl /tuesday` ), getMeal( ` $menuUrl /wednesday` ), getMeal( ` $menuUrl /thursday` ), getMeal( ` $menuUrl /friday` ) ]);  我們使用 get 而不是 create 作為命名約定來顯示這些工廠做一些異步工作和返回promise。 到目前為止，我們還沒有看到任何工廠用方法返回對象，這是故意的。 這是因為一般來說，我們不需要這麼做。 工廠允許我們從計算中分離我們的數據。 這意味著我們總是能夠將對象序列化為JSON，這對於在會話之間持久化，通過HTTP或WebSockets發送它們，並將它們放入數據存儲很重要。 高級工廠 將工廠傳遞給高階函數，這將給我們帶來巨大的控制力。例如，我們可以使用這個概念來創建一個增強的對象。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function giveTimestamp ( factory )  return ( ...args ) =  const instance = factory(...args); const time = Date .now(); return  time, instance ; ;  const createOrder = giveTimestamp( function ( ingredients )  return  type: 'order' , ingredients ; ); 這個增強的對象採用一個現有工廠，並將其包裝以創建返回帶有 時間戳實例 的工廠。 使用這些簡單的構建塊使得我們的代碼更加友好，這絕對是我們應該關心的事情。 工廠鼓勵我們用原始數據來模擬複雜和異步數據，原始數據具有組合的自然能力，而不強迫我們去做一些高級抽象。當我們堅持簡單時，JavaScript更甜蜜！ 英文原文： https://www.sitepoint.com/factory-functions-javascript/"},"function/factory​_factory.html#組合的工廠函數":{"title":"&#x7D44;&#x5408;&#x7684;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;","path":"\\javascript\\function\\factory​_factory.html#組合的工廠函數","body":"&#x5728;&#x4E00;&#x500B;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#x4E2D;&#x5B9A;&#x7FA9;&#x53E6;&#x4E00;&#x500B;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#xFF0C;&#x53EF;&#x4EE5;&#x5E6B;&#x52A9;&#x6211;&#x5011;&#x628A;&#x8907;&#x96DC;&#x7684;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#x62C6;&#x5206;&#x6210;&#x66F4;&#x5C0F;&#x7684;&#xFF0C;&#x53EF;&#x91CD;&#x7528;&#x7684;&#x788E;&#x7247;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x5275;&#x5EFA;&#x4E00;&#x500B; dessert&#xFF08;&#x751C;&#x9EDE;&#xFF09;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#xFF0C;&#x901A;&#x904E;&#x524D;&#x9762;&#x7684; jelly&#xFF08;&#x679C;&#x51CD;&#xFF09;&#x548C; icecream&#xFF08;&#x51B0;&#x6DC7;&#x6DCB;&#xFF09;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#x4F86;&#x5B9A;&#x7FA9;&#x3002; 1 2 3 4 5 6 7 8 9 function createDessert ( ) { return { type: &apos;dessert&apos; , bowl: [ createJelly(), createIceCream() ] }; } &#x5C0D;&#x8C61;&#x53EF;&#x4EE5;&#x7528; has-a(&#x5177;&#x6709;) &#x95DC;&#x4FC2;&#x800C;&#x4E0D;&#x662F; is-a(&#x662F;) &#x4F86;&#x8868;&#x793A;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x7D44;&#x5408;&#x800C;&#x4E0D;&#x662F;&#x7E7C;&#x627F;&#x4F86;&#x5BE6;&#x73FE;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x4F7F;&#x7528;&#x7E7C;&#x627F;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // A trifle *is a* dessert &#x86CB;&#x7CD5;*&#x662F;*&#x751C;&#x9EDE; function Trifle ( ) { Dessert.apply( this , arguments ); } Trifle.prototype = Dessert.prototype; // &#x6216;&#x8005; class Trifle extends Dessert { constructor () { super (); } } &#x6211;&#x5011;&#x53EF;&#x4EE5;&#x7528;&#x7D44;&#x5408;&#x6A21;&#x5F0F;&#x8868;&#x9054;&#x76F8;&#x540C;&#x7684;&#x610F;&#x601D;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // A trifle *has* layers of jelly, custard and cream. It also *has a* topping. // &#x86CB;&#x7CD5; *&#x6709;* &#x679C;&#x51CD;&#x5C64;&#xFF0C;&#x5976;&#x916A;&#x5C64;&#x548C;&#x5976;&#x6CB9;&#x5C64;&#xFF0C;&#x9802;&#x90E8;&#x9084; *&#x6709;* &#x88DD;&#x98FE;&#x914D;&#x6599;&#x3002; function createTrifle ( ) { return { type: &apos;trifle&apos; , layers: [ createJelly(), createCustard(), createCream() ], topping: createAlmonds() }; } &#x7570;&#x6B65;&#x7684;&#x5DE5;&#x5EE0;&#x51FD;&#x6578; &#x4E26;&#x975E;&#x6240;&#x6709;&#x5DE5;&#x5EE0;&#x90FD;&#x6703;&#x7ACB;&#x5373;&#x8FD4;&#x56DE;&#x6578;&#x64DA;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x6709;&#x4E9B;&#x5FC5;&#x9808;&#x5148;&#x7372;&#x53D6;&#x6578;&#x64DA;&#x3002; &#x5728;&#x9019;&#x4E9B;&#x60C5;&#x6CC1;&#x4E0B;&#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x8FD4;&#x56DE; Promises &#x4F86;&#x5B9A;&#x7FA9;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 function getMeal ( menuUrl ) { return new Promise ( ( resolve, reject ) = { fetch(menuUrl) .then( result = { resolve({ type: &apos;meal&apos; , courses: result.json() }); }) .catch(reject); }); } &#x9019;&#x7A2E;&#x6DF1;&#x5EA6;&#x5D4C;&#x5957;&#x7684;&#x7E2E;&#x9032;&#x6703;&#x4F7F;&#x7570;&#x6B65;&#x5DE5;&#x5EE0;&#x96E3;&#x4EE5;&#x95B1;&#x8B80;&#x548C;&#x6E2C;&#x8A66;&#x3002; &#x5C07;&#x5B83;&#x5011;&#x5206;&#x89E3;&#x6210;&#x591A;&#x500B;&#x4E0D;&#x540C;&#x7684;&#x5DE5;&#x5EE0;&#x901A;&#x5E38;&#x662F;&#x6709;&#x5E6B;&#x52A9;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5982;&#x4E0B;&#x7DE8;&#x5BEB;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 function getMeal ( menuUrl ) { return fetch(menuUrl) .then( result = result.json()) .then( json = createMeal(json)); } function createMeal ( courses=[] ) { return { type: &apos;meal&apos; , courses }; } &#x7576;&#x7136;&#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x56DE;&#x8ABF;&#x51FD;&#x6578;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x5011;&#x5DF2;&#x7D93;&#x6709;&#x4E86; Promise.all &#x9019;&#x6A23;&#x7684;&#x5DE5;&#x5177;&#x8FD4;&#x56DE; Promises &#x4F86;&#x5B9A;&#x7FA9;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 function getWeeksMeals ( ) { const menuUrl = &apos;jsfood.com/&apos; ; return Promise .all([ getMeal( ` ${menuUrl} /monday` ), getMeal( ` ${menuUrl} /tuesday` ), getMeal( ` ${menuUrl} /wednesday` ), getMeal( ` ${menuUrl} /thursday` ), getMeal( ` ${menuUrl} /friday` ) ]); } &#x6211;&#x5011;&#x4F7F;&#x7528; get &#x800C;&#x4E0D;&#x662F; create &#x4F5C;&#x70BA;&#x547D;&#x540D;&#x7D04;&#x5B9A;&#x4F86;&#x986F;&#x793A;&#x9019;&#x4E9B;&#x5DE5;&#x5EE0;&#x505A;&#x4E00;&#x4E9B;&#x7570;&#x6B65;&#x5DE5;&#x4F5C;&#x548C;&#x8FD4;&#x56DE;promise&#x3002; &#x5230;&#x76EE;&#x524D;&#x70BA;&#x6B62;&#xFF0C;&#x6211;&#x5011;&#x9084;&#x6C92;&#x6709;&#x770B;&#x5230;&#x4EFB;&#x4F55;&#x5DE5;&#x5EE0;&#x7528;&#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x5C0D;&#x8C61;&#xFF0C;&#x9019;&#x662F;&#x6545;&#x610F;&#x7684;&#x3002; &#x9019;&#x662F;&#x56E0;&#x70BA;&#x4E00;&#x822C;&#x4F86;&#x8AAA;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x9700;&#x8981;&#x9019;&#x9EBC;&#x505A;&#x3002; &#x5DE5;&#x5EE0;&#x5141;&#x8A31;&#x6211;&#x5011;&#x5F9E;&#x8A08;&#x7B97;&#x4E2D;&#x5206;&#x96E2;&#x6211;&#x5011;&#x7684;&#x6578;&#x64DA;&#x3002; &#x9019;&#x610F;&#x5473;&#x8457;&#x6211;&#x5011;&#x7E3D;&#x662F;&#x80FD;&#x5920;&#x5C07;&#x5C0D;&#x8C61;&#x5E8F;&#x5217;&#x5316;&#x70BA;JSON&#xFF0C;&#x9019;&#x5C0D;&#x65BC;&#x5728;&#x6703;&#x8A71;&#x4E4B;&#x9593;&#x6301;&#x4E45;&#x5316;&#xFF0C;&#x901A;&#x904E;HTTP&#x6216;WebSockets&#x767C;&#x9001;&#x5B83;&#x5011;&#xFF0C;&#x4E26;&#x5C07;&#x5B83;&#x5011;&#x653E;&#x5165;&#x6578;&#x64DA;&#x5B58;&#x5132;&#x5F88;&#x91CD;&#x8981;&#x3002; &#x9AD8;&#x7D1A;&#x5DE5;&#x5EE0; &#x5C07;&#x5DE5;&#x5EE0;&#x50B3;&#x905E;&#x7D66;&#x9AD8;&#x968E;&#x51FD;&#x6578;&#xFF0C;&#x9019;&#x5C07;&#x7D66;&#x6211;&#x5011;&#x5E36;&#x4F86;&#x5DE8;&#x5927;&#x7684;&#x63A7;&#x5236;&#x529B;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x9019;&#x500B;&#x6982;&#x5FF5;&#x4F86;&#x5275;&#x5EFA;&#x4E00;&#x500B;&#x589E;&#x5F37;&#x7684;&#x5C0D;&#x8C61;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function giveTimestamp ( factory ) { return ( ...args ) = { const instance = factory(...args); const time = Date .now(); return { time, instance }; }; } const createOrder = giveTimestamp( function ( ingredients ) { return { type: &apos;order&apos; , ingredients }; }); &#x9019;&#x500B;&#x589E;&#x5F37;&#x7684;&#x5C0D;&#x8C61;&#x63A1;&#x7528;&#x4E00;&#x500B;&#x73FE;&#x6709;&#x5DE5;&#x5EE0;&#xFF0C;&#x4E26;&#x5C07;&#x5176;&#x5305;&#x88DD;&#x4EE5;&#x5275;&#x5EFA;&#x8FD4;&#x56DE;&#x5E36;&#x6709; &#x6642;&#x9593;&#x6233;&#x5BE6;&#x4F8B; &#x7684;&#x5DE5;&#x5EE0;&#x3002; &#x4F7F;&#x7528;&#x9019;&#x4E9B;&#x7C21;&#x55AE;&#x7684;&#x69CB;&#x5EFA;&#x584A;&#x4F7F;&#x5F97;&#x6211;&#x5011;&#x7684;&#x4EE3;&#x78BC;&#x66F4;&#x52A0;&#x53CB;&#x597D;&#xFF0C;&#x9019;&#x7D55;&#x5C0D;&#x662F;&#x6211;&#x5011;&#x61C9;&#x8A72;&#x95DC;&#x5FC3;&#x7684;&#x4E8B;&#x60C5;&#x3002; &#x5DE5;&#x5EE0;&#x9F13;&#x52F5;&#x6211;&#x5011;&#x7528;&#x539F;&#x59CB;&#x6578;&#x64DA;&#x4F86;&#x6A21;&#x64EC;&#x8907;&#x96DC;&#x548C;&#x7570;&#x6B65;&#x6578;&#x64DA;&#xFF0C;&#x539F;&#x59CB;&#x6578;&#x64DA;&#x5177;&#x6709;&#x7D44;&#x5408;&#x7684;&#x81EA;&#x7136;&#x80FD;&#x529B;&#xFF0C;&#x800C;&#x4E0D;&#x5F37;&#x8FEB;&#x6211;&#x5011;&#x53BB;&#x505A;&#x4E00;&#x4E9B;&#x9AD8;&#x7D1A;&#x62BD;&#x8C61;&#x3002;&#x7576;&#x6211;&#x5011;&#x5805;&#x6301;&#x7C21;&#x55AE;&#x6642;&#xFF0C;JavaScript&#x66F4;&#x751C;&#x871C;&#xFF01; &#x82F1;&#x6587;&#x539F;&#x6587;&#xFF1A; https://www.sitepoint.com/factory-functions-javascript/"},"cases/math.html":{"title":"問題","path":"\\javascript\\cases\\math.html","body":"浮點數運算的坑 JavaScript 浮点数陷阱及解法 當你拿到 1.4000000000000001 這樣的數據要展示時，建議使用 toPrecision 湊整併 parseFloat 轉成數字後再顯示，如下： parseFloat(1.4000000000000001.toPrecision(12)) === 1.4 // True 百分比 轉 小數 問題 1 2 3 4 5 6 var a = 0.9 ; var b = a / 100 ; var c = parseFloat ( (a / 100 ).toPrecision( 12 )) console .log(b) // 0.009000000000000001 console .log(c) // 0.009 科學符號處理 npm from-exponential 1 2 3 4 5 6 7 8 span v-text= \"getPriceValue(order.itemPrice)\"  / span  import fromExponential from 'from-exponential' methods:  getPriceValue(value)  return fromExponential(value)   why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 這只是JavaScript遵循IEEE 754標準所產生的必然結果。IEEE 754標準中的浮點數並不能精確地表達小數（比如說0.1）， JavaScript中的小數採用的是雙精度(64位)表示的，由三部分組成：　符 + 階碼 + 尾數 IEEE 754 雙精度。六十四位中符號位佔一位，整數位佔十一位，其餘五十二位都為小數位。 因為浮點數隻有52位有效數字，從第53位開始，就舍入了。這樣就造成了“浮點數精度損失”問題。 因為 0.1 和 0.2 都是無限循環的二進制了，所以在小數位末尾處需要判斷是否進位（就和十進制的四捨五入一樣）。 計算機表示十進制是採用二進製表示的，所以 0.1 在二進製表示為 `0.1.toString(2) // “0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01” 小數的算法，是乘2 0.1 × 2 ￣￣￣￣ 0.2 → 取小數前的 0 0.2 × 2 ￣￣￣￣ 0.4 → 取小數前的 0 0.4 × 2 ￣￣￣￣ 0.8 → 取小數前的 0 0.8 × 2 ￣￣￣￣ 1.6 → 取小數前的 1 0.6 × 2 ￣￣￣￣ 1.2 → 取小數前的 1 0.2 × 2 ￣￣￣￣ 0.4 → 取小數前的 0 十進位 0.1 = 二進位 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 從上面可以看出，0.1的二進制格式是：0.0001100011….。這是一個二進制無限循環小數，但計算機內存有限，我們不能用儲存所有的小數位數。那麼在精度與內存間如何取捨呢？ 答案是： 在某個精度點直接捨棄 (第53位開始)。當然，代價就是，0.1在計算機內部根本就不是精確的0.1，而是一個有舍入誤差的0.1。當代碼被編譯或解釋後，0.1已經被四捨五入成一個與之很接近的計算機內部數字，以至於計算還沒開始，一個很小的舍入錯誤就已經產生了。這也就是 0.1 + 0.2 不等於0.3 的原因。 使用JavaScript內置的函數 toPrecision 或 toFixed 來保留一定的精度： (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true 不要相信js的計算 善用 math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"cases/math.html#浮點數運算的坑":{"title":"&#x6D6E;&#x9EDE;&#x6578;&#x904B;&#x7B97;&#x7684;&#x5751;","path":"\\javascript\\cases\\math.html#浮點數運算的坑","body":"JavaScript &#x6D6E;&#x70B9;&#x6570;&#x9677;&#x9631;&#x53CA;&#x89E3;&#x6CD5; &#x7576;&#x4F60;&#x62FF;&#x5230; 1.4000000000000001 &#x9019;&#x6A23;&#x7684;&#x6578;&#x64DA;&#x8981;&#x5C55;&#x793A;&#x6642;&#xFF0C;&#x5EFA;&#x8B70;&#x4F7F;&#x7528; toPrecision &#x6E4A;&#x6574;&#x4F75; parseFloat &#x8F49;&#x6210;&#x6578;&#x5B57;&#x5F8C;&#x518D;&#x986F;&#x793A;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; parseFloat(1.4000000000000001.toPrecision(12)) === 1.4 // True &#x767E;&#x5206;&#x6BD4; &#x8F49; &#x5C0F;&#x6578; &#x554F;&#x984C; 1 2 3 4 5 6 var a = 0.9 ; var b = a / 100 ; var c = parseFloat ( (a / 100 ).toPrecision( 12 )) console .log(b) // 0.009000000000000001 console .log(c) // 0.009 &#x79D1;&#x5B78;&#x7B26;&#x865F;&#x8655;&#x7406; npm from-exponential 1 2 3 4 5 6 7 8 span v-text= getPriceValue(order.itemPrice)  / span  import fromExponential from &apos;from-exponential&apos; methods: { getPriceValue(value) { return fromExponential(value) } } why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002;IEEE 754&#x6A19;&#x6E96;&#x4E2D;&#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"cases/math.html#科學符號處理":{"title":"&#x79D1;&#x5B78;&#x7B26;&#x865F;&#x8655;&#x7406;","path":"\\javascript\\cases\\math.html#科學符號處理","body":"npm from-exponential 1 2 3 4 5 6 7 8 span v-text= getPriceValue(order.itemPrice)  / span  import fromExponential from &apos;from-exponential&apos; methods: { getPriceValue(value) { return fromExponential(value) } } why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002;IEEE 754&#x6A19;&#x6E96;&#x4E2D;&#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"cases/math.html#why-0-1-0-2-0-3":{"title":"why 0.1 + 0.2 != 0.3","path":"\\javascript\\cases\\math.html#why-0-1-0-2-0-3","body":"0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002;IEEE 754&#x6A19;&#x6E96;&#x4E2D;&#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"global/date.html":{"title":"Date","path":"\\javascript\\global\\date.html","body":"Date 建立 Date 物件的方式： 1 2 3 4 5 var today = new Date (); var birthday = new Date ( 'December 17, 1995 03:24:00' ); var birthday = new Date ( '1995-12-17T03:24:00' ); var birthday = new Date ( 1995 , 11 , 17 ); var birthday = new Date ( 1995 , 11 , 17 , 3 , 24 , 0 ); Date.prototype.toISOString() 國際標準 ISO 8601 ，是國際標準化組織的日期和時間的表示方法 1 2 3 4 5 6 7 const d = new Date (); const today = d.toISOString().substring( 0 , 10 ); console .log(today) // \"yyyy-mm-dd\" format. 2020-05-25 let sevenDaysAgo = d.setDate(d.getDate() - 7 ); sevenDaysAgo = new Date (sevenDaysAgo).toISOString().substring( 0 , 10 );; console .log(sevenDaysAgo) // 2020-05-18"},"global/date.html#Date-prototype-toISOString":{"title":"Date.prototype.toISOString()","path":"\\javascript\\global\\date.html#Date-prototype-toISOString","body":"&#x570B;&#x969B;&#x6A19;&#x6E96; ISO 8601 &#xFF0C;&#x662F;&#x570B;&#x969B;&#x6A19;&#x6E96;&#x5316;&#x7D44;&#x7E54;&#x7684;&#x65E5;&#x671F;&#x548C;&#x6642;&#x9593;&#x7684;&#x8868;&#x793A;&#x65B9;&#x6CD5; 1 2 3 4 5 6 7 const d = new Date (); const today = d.toISOString().substring( 0 , 10 ); console .log(today) // yyyy-mm-dd format. 2020-05-25 let sevenDaysAgo = d.setDate(d.getDate() - 7 ); sevenDaysAgo = new Date (sevenDaysAgo).toISOString().substring( 0 , 10 );; console .log(sevenDaysAgo) // 2020-05-18"},"global/promise.html":{"title":"Promise","path":"\\javascript\\global\\promise.html","body":"Promise 是一個表示非同步運算的最終完成或失敗的物件。 Promise 對象在異步操作後可對其完成或失敗進行回調，並展示其結果值。 以下代碼片斷是一個 Promise 的示例：100ms 後使用標準輸出流打印出 result 字符串。 此外請注意 catch ，他可以用於錯誤處理。Promise 是 鏈式的 。 1 2 3 4 5 new Promise ( ( resolve, reject ) =  setTimeout( () =  resolve( \"result\" ) , 100 ) ).then( console .log).catch( console .error) // result Promise 有哪些狀態？ Promise 對象用於表示一個異步操作的最終狀態（完成或失敗）及其返回值。他有以下幾種狀態： pending ：初始狀態，完成或失敗狀態的前一個狀態 fulfilled ：操作成功完成 rejected ：操作失敗 pending 狀態的 Promise 對象會觸發 fulfilled/rejected 狀態，在其狀態處理方法中可以傳入參數 / 失敗信息。 當操作成功完成時，Promise 對象的 then 方法就會被調用；否則就會觸發 catch 。如： 1 2 3 4 5 6 7 8 9 const myFirstPromise = new Promise ( ( resolve, reject ) =  setTimeout( function ( )  resolve( \"成功!\" ); , 250 ); ); myFirstPromise.then( ( data ) =  console .log( \"完成!\" + data); ).catch( ( e ) = ...); Promise​.all() Promise​.all() 1 2 3 4 5 6 7 8 9 var p1 = Promise .resolve( 3 ); var p2 = 1337 ; var p3 = new Promise ( ( resolve, reject ) =  setTimeout(resolve, 100 , 'foo' ); ); Promise .all([p1, p2, p3]).then( values =  console .log(values); // [3, 1337, \"foo\"] ); examples https://jsbin.com/zosebomeko/edit?js,console,output 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 /* * 依照 tasks 順序 console 出 a, b, c */ const a = callback =  setTimeout( () =  callback( 'a' ); , 500 ); ; const b = callback =  setTimeout( () =  callback( 'b' ); , 200 ); ; const c = callback =  setTimeout( () =  callback( 'c' ); , 300 ); ; const tasks = [a, b, c]; const doByOrder = ( tasks, callback ) =  // implement here tasks = tasks.map( function ( task )  return new Promise ( ( resolve, reject ) =  task(resolve); ); ); const ansArr = []; let t = tasks[ 0 ]; for ( let i = 0 ; i  tasks.length; ++i)  t = t.then( p =  ansArr.push(p); //等待所有setTimeout callback function執行完畢才執行 if (i === tasks.length - 1 )  return callback(ansArr);  return tasks[i + 1 ]; //tasks[1] tasks[2] );  ; doByOrder(tasks, console .log.bind( console )); // expect to be [\"a\", \"b\", \"c\"] 事件循環：javascript的執行規則裡面有個 事件循環Event Loot 的規則 在事件循環中，異步事件會放到異步隊列裡面， 但是異步隊列裡面又分為宏任務和微任務， 瀏覽器端的 宏任務一般有： script標籤,setTimeout,setInterval,setImmediate,requestAnimationFrame 微任務有： MutationObserver,Promise.then catch finally 宏任務會阻塞瀏覽器的渲染進程，微任務會在宏任務結束後立即執行，在渲染之前。 在不使用 async/await 的情況下，順序執行一組異步代碼函數，並輸出最後的結果。 Promise.race() References 把setTimeout包裝成Promise、等待所有setTimout的callback function執行完程式流程才往下執行 promise經典面試題"},"global/function.html":{"title":"","path":"\\javascript\\global\\function.html","body":"call、apply、bind Function.prototype.call() 使用給定的this參數以及分別給定的參數來呼叫某個函數 Function.prototype.apply() apply() 方法會呼叫一個以 this 的代表值和一個陣列形式的值組(或是一個 array-like object )為參數的函式。 Function.prototype.bind() bind() 方法，會建立一個新函式。該函式被呼叫時，會將 this 關鍵字設為給定的參數，並在呼叫時，帶有提供之前，給定順序的參數。 為什麼我們需要 apply / bind / call ？ 最大的原因還是因為 this 這個東西是 動態的 。（ PS. arguments 也是） 拿到正確的 this ，而非一言不合就 undefined cab [ call , apply ] vs [ bind ] call 、 apply 皆是回傳function執行結果 bind 方法回傳的是綁定 this 後的 原函數 箭頭函數 多數時候一般函數無異，但是最大的差別在於 — 其 this 完全綁定在語彙上的位置，也就是說在 arrow 裡面的 this 永遠都是語意上的 this ，不管是誰呼叫他，或是被如何 bind 、 call 、 apply ，他永遠都是拿到原先作用域的 this 。 bind 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class dog  constructor (name) this .name = name;  sayHello() console .log( 'Hello I am ' , this .name);  laterHello() setTimeout( function ( )  console .log( '(1 sec...) Hi!, I am' , this .name) , 1000 );   let boo = new dog( 'Corgi' ); boo.sayHello(); // Hello I am Corgi boo.laterHello(); // (1 sec...) Hi!, I am undefined 1 2 3 4 5 6 7 8 9 10 11 // Self — this 的替身 // bad 請別儲存 this 為參考。請使用箭頭函式或是 Function#bind laterHello()  var self = this ; // 先把這邊的this(指向class內部)存起來 setTimeout( function ( )  console .log( '(1 sec...) Hi!, I am' , self.name); // 因為語彙上能夠引用self變數（同個塊作用域） // 所以拿到了self.name , 1000 );  1 2 3 4 5 6 7 8 9 // .bind(this) — Binding大法 綁定大法 laterHello()  setTimeout( function ( )  console .log( '(1 sec...) Hi!, I am' , this .name); .bind( this ), 1000 );  1 2 3 4 5 6 // Arrow Function — 箭頭函數 laterHello()  setTimeout( () =  console .log( '(1 sec...) Hi!, I am' , this .name); , 1000 );  References 函數原型最實用的 3 個方法 — call、apply、bind"},"global/function.html#call、apply、bind":{"title":"call&#x3001;apply&#x3001;bind","path":"\\javascript\\global\\function.html#call、apply、bind","body":"Function.prototype.call() &#x4F7F;&#x7528;&#x7D66;&#x5B9A;&#x7684;this&#x53C3;&#x6578;&#x4EE5;&#x53CA;&#x5206;&#x5225;&#x7D66;&#x5B9A;&#x7684;&#x53C3;&#x6578;&#x4F86;&#x547C;&#x53EB;&#x67D0;&#x500B;&#x51FD;&#x6578; Function.prototype.apply() apply() &#x65B9;&#x6CD5;&#x6703;&#x547C;&#x53EB;&#x4E00;&#x500B;&#x4EE5; this &#x7684;&#x4EE3;&#x8868;&#x503C;&#x548C;&#x4E00;&#x500B;&#x9663;&#x5217;&#x5F62;&#x5F0F;&#x7684;&#x503C;&#x7D44;(&#x6216;&#x662F;&#x4E00;&#x500B; array-like object )&#x70BA;&#x53C3;&#x6578;&#x7684;&#x51FD;&#x5F0F;&#x3002; Function.prototype.bind() bind() &#x65B9;&#x6CD5;&#xFF0C;&#x6703;&#x5EFA;&#x7ACB;&#x4E00;&#x500B;&#x65B0;&#x51FD;&#x5F0F;&#x3002;&#x8A72;&#x51FD;&#x5F0F;&#x88AB;&#x547C;&#x53EB;&#x6642;&#xFF0C;&#x6703;&#x5C07; this &#x95DC;&#x9375;&#x5B57;&#x8A2D;&#x70BA;&#x7D66;&#x5B9A;&#x7684;&#x53C3;&#x6578;&#xFF0C;&#x4E26;&#x5728;&#x547C;&#x53EB;&#x6642;&#xFF0C;&#x5E36;&#x6709;&#x63D0;&#x4F9B;&#x4E4B;&#x524D;&#xFF0C;&#x7D66;&#x5B9A;&#x9806;&#x5E8F;&#x7684;&#x53C3;&#x6578;&#x3002;"},"global/function.html#為什麼我們需要-apply-bind-call-？":{"title":"&#x70BA;&#x4EC0;&#x9EBC;&#x6211;&#x5011;&#x9700;&#x8981; apply / bind / call &#xFF1F;","path":"\\javascript\\global\\function.html#為什麼我們需要-apply-bind-call-？","body":"&#x6700;&#x5927;&#x7684;&#x539F;&#x56E0;&#x9084;&#x662F;&#x56E0;&#x70BA; this &#x9019;&#x500B;&#x6771;&#x897F;&#x662F; &#x52D5;&#x614B;&#x7684; &#x3002;&#xFF08; PS. arguments &#x4E5F;&#x662F;&#xFF09; &#x62FF;&#x5230;&#x6B63;&#x78BA;&#x7684; this &#xFF0C;&#x800C;&#x975E;&#x4E00;&#x8A00;&#x4E0D;&#x5408;&#x5C31; undefined"},"global/function.html#cab-call-apply-vs-bind":{"title":"cab [ call , apply ] vs [ bind ]","path":"\\javascript\\global\\function.html#cab-call-apply-vs-bind","body":"call &#x3001; apply &#x7686;&#x662F;&#x56DE;&#x50B3;function&#x57F7;&#x884C;&#x7D50;&#x679C; bind &#x65B9;&#x6CD5;&#x56DE;&#x50B3;&#x7684;&#x662F;&#x7D81;&#x5B9A; this &#x5F8C;&#x7684; &#x539F;&#x51FD;&#x6578; &#x7BAD;&#x982D;&#x51FD;&#x6578; &#x591A;&#x6578;&#x6642;&#x5019;&#x4E00;&#x822C;&#x51FD;&#x6578;&#x7121;&#x7570;&#xFF0C;&#x4F46;&#x662F;&#x6700;&#x5927;&#x7684;&#x5DEE;&#x5225;&#x5728;&#x65BC; &#x2014; &#x5176; this &#x5B8C;&#x5168;&#x7D81;&#x5B9A;&#x5728;&#x8A9E;&#x5F59;&#x4E0A;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#x5728; arrow &#x88E1;&#x9762;&#x7684; this &#x6C38;&#x9060;&#x90FD;&#x662F;&#x8A9E;&#x610F;&#x4E0A;&#x7684; this &#xFF0C;&#x4E0D;&#x7BA1;&#x662F;&#x8AB0;&#x547C;&#x53EB;&#x4ED6;&#xFF0C;&#x6216;&#x662F;&#x88AB;&#x5982;&#x4F55; bind &#x3001; call &#x3001; apply &#xFF0C;&#x4ED6;&#x6C38;&#x9060;&#x90FD;&#x662F;&#x62FF;&#x5230;&#x539F;&#x5148;&#x4F5C;&#x7528;&#x57DF;&#x7684; this &#x3002;"},"global/function.html#bind":{"title":"bind","path":"\\javascript\\global\\function.html#bind","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class dog { constructor (name){ this .name = name; } sayHello(){ console .log( &apos;Hello I am &apos; , this .name); } laterHello(){ setTimeout( function ( ) { console .log( &apos;(1 sec...) Hi!, I am&apos; , this .name) }, 1000 ); } } let boo = new dog( &apos;Corgi&apos; ); boo.sayHello(); // Hello I am Corgi boo.laterHello(); // (1 sec...) Hi!, I am undefined 1 2 3 4 5 6 7 8 9 10 11 // Self &#x2014; this &#x7684;&#x66FF;&#x8EAB; // bad &#x8ACB;&#x5225;&#x5132;&#x5B58; this &#x70BA;&#x53C3;&#x8003;&#x3002;&#x8ACB;&#x4F7F;&#x7528;&#x7BAD;&#x982D;&#x51FD;&#x5F0F;&#x6216;&#x662F; Function#bind laterHello() { var self = this ; // &#x5148;&#x628A;&#x9019;&#x908A;&#x7684;this(&#x6307;&#x5411;class&#x5167;&#x90E8;)&#x5B58;&#x8D77;&#x4F86; setTimeout( function ( ) { console .log( &apos;(1 sec...) Hi!, I am&apos; , self.name); // &#x56E0;&#x70BA;&#x8A9E;&#x5F59;&#x4E0A;&#x80FD;&#x5920;&#x5F15;&#x7528;self&#x8B8A;&#x6578;&#xFF08;&#x540C;&#x500B;&#x584A;&#x4F5C;&#x7528;&#x57DF;&#xFF09; // &#x6240;&#x4EE5;&#x62FF;&#x5230;&#x4E86;self.name }, 1000 ); } 1 2 3 4 5 6 7 8 9 // .bind(this) &#x2014; Binding&#x5927;&#x6CD5; &#x7D81;&#x5B9A;&#x5927;&#x6CD5; laterHello() { setTimeout( function ( ) { console .log( &apos;(1 sec...) Hi!, I am&apos; , this .name); }.bind( this ), 1000 ); } 1 2 3 4 5 6 // Arrow Function &#x2014; &#x7BAD;&#x982D;&#x51FD;&#x6578; laterHello() { setTimeout( () = { console .log( &apos;(1 sec...) Hi!, I am&apos; , this .name); }, 1000 ); }"},"global/function.html#References":{"title":"References","path":"\\javascript\\global\\function.html#References","body":"&#x51FD;&#x6578;&#x539F;&#x578B;&#x6700;&#x5BE6;&#x7528;&#x7684; 3 &#x500B;&#x65B9;&#x6CD5; &#x2014; call&#x3001;apply&#x3001;bind"},"object/object​_keys.html":{"title":"Object​.keys()","path":"\\javascript\\object\\object​_keys.html","body":"Object​.keys() https://jsbin.com/wurocegika/edit?js,console 1 2 3 4 5 6 7 8 9 10 var arr = [ 'a' , 'b' , 'c' ]; console .log( Object .keys(arr)); // console: ['0', '1', '2'] // 類似陣列的物件 var obj =  0 : 'a' , 1 : 'b' , 2 : 'c' ; console .log( Object .keys(obj)); // console: ['0', '1', '2'] // 擁有隨機 key 排序，類似陣列的物件 var an_obj =  100 : 'a' , 2 : 'b' , 7 : 'c' ; console .log( Object .keys(an_obj)); // console: ['2', '7', '100'] https://jsbin.com/sidixofelo/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 const types =  status: '404' , users: 'https'  const getObj = ; Object .keys(types).forEach( type =  console .log(type) // \"status\" \"users\" const camelCaseTypeRes = type + 'Res' ; getObj[type] = camelCaseTypeRes; ) console .log(getObj) // [object Object]  // status: \"statusRes\", // users: \"usersRes\" // "},"operators/delete.html":{"title":"","path":"\\javascript\\operators\\delete.html","body":"delete 1 2 3 4 ( function ( x )  delete x; return x; )( 1 ) //1 刪不掉x delete只能操作對象的屬性 不能操作變量"},"operators/delete.html#delete":{"title":"delete","path":"\\javascript\\operators\\delete.html#delete","body":"1 2 3 4 ( function ( x ) { delete x; return x; })( 1 ) //1 &#x522A;&#x4E0D;&#x6389;x delete&#x53EA;&#x80FD;&#x64CD;&#x4F5C;&#x5C0D;&#x8C61;&#x7684;&#x5C6C;&#x6027; &#x4E0D;&#x80FD;&#x64CD;&#x4F5C;&#x8B8A;&#x91CF;"},"http/caching.html":{"title":"HTTP 緩存","path":"\\javascript\\http\\caching.html","body":"HTTP 緩存分為 2 種，一種是強緩存，另一種是協商緩存。 主要作用是可以加快資源獲取速度，提升用戶體驗，減少網絡傳輸，緩解服務端的壓力。 這是緩存運作的一個整體流程圖： 強緩存 不需要發送請求到服務端，直接讀取瀏覽器本地緩存，在 Chrome 的 Network 中顯示的 HTTP 狀態碼是 200 ，在 Chrome 中，強緩存又分為 Disk Cache (存放在硬盤中)和 Memory Cache (存放在內存中)，存放的位置是由瀏覽器控制的。 是否強緩存由 Expires 、 Cache-Control 和 Pragma 3 個 Header 屬性共同來控制。 Expires Expires 的值是一個 HTTP 日期 ，在瀏覽器發起請求時，會根據系統時間和 Expires 的值進行比較，如果系統時間超過了 Expires 的值，緩存失效。由於和系統時間進行比較，所以當系統時間和服務器時間不一致的時候，會有緩存有效期不准的問題。Expires 的優先級在三個 Header 屬性中是最低的。 Cache-Control Cache-Control 是 HTTP/1.1 中新增的屬性，在請求頭和響應頭中都可以使用，常用的屬性值如有： max-age：單位是秒，緩存時間計算的方式是距離發起的時間的秒數，超過間隔的秒數緩存失效 no-cache ：不使用強緩存，需要與服務器驗證緩存是否新鮮 no-store ：禁止使用緩存（包括協商緩存），每次都向服務器請求最新的資源 private：專用於個人的緩存，中間代理、CDN 等不能緩存此響應 public：響應可以被中間代理、CDN 等緩存 must-revalidate：在緩存過期前可以使用，過期後必須向服務器驗證 ###　驗證強緩存 本地通過 express 起一個服務來驗證強緩存的 3 個屬性，代碼如下： 1 2 3 4 5 6 7 8 9 10 11 const express = require ( 'express' ); const app = express(); var options =  etag: false , // 禁用協商緩存 lastModified: false , // 禁用協商緩存 setHeaders: ( res, path, stat ) =  res.set( 'Cache-Control' , 'max-age=10' ); // 強緩存超時時間為10秒 , ; app.use(express.static((__dirname + '/public' ), options)); app.listen( 3000 ); 第一次加載，頁面會向服務器請求數據，並在 Response Header 中添加 Cache-Control ，過期時間為 10 秒。 第二次加載，Date 頭屬性未更新，可以看到瀏覽器直接使用了強緩存，實際沒有發送請求。 過了 10 秒的超時時間之後，再次請求資源： 當 Pragma 和 Cache-Control 同時存在的時候，Pragma 的優先級高於 Cache-Control。 Headers  Response Headers  Cache-Control: max-age=10 / Pragma: no-cache Pragma Pragma 只有一個屬性值，就是 no-cache ，效果和 Cache-Control 中的 no-cache 一致，不使用強緩存，需要與服務器驗證緩存是否新鮮，在 3 個頭部屬性中的優先級最高。 協商緩存 當瀏覽器的強緩存失效的時候或者請求頭中設置了不走強緩存，並且在請求頭中設置了If-Modified-Since 或者 If-None-Match 的時候，會將這兩個屬性值到服務端去驗證是否命中協商緩存，如果命中了協商緩存，會返回 304 狀態，加載瀏覽器緩存，並且響應頭會設置 Last-Modified 或者 ETag 屬性。 ETag/If-None-Match ETag/If-None-Match 的值是 一串 hash 碼 ，代表的是 一個資源的標識 符，當服務端的文件變化的時候，它的 hash碼會隨之改變，通過請求頭中的 If-None-Match 和當前文件的 hash 值進行比較，如果相等則表示命中協商緩存。ETag 又有強弱校驗之分，如果 hash 碼是以 “W/“ 開頭的一串字符串，說明此時協商緩存的校驗是弱校驗的，只有服務器上的文件差異（根據 ETag 計算方式來決定）達到能夠觸發 hash 值後綴變化的時候，才會真正地請求資源，否則返回 304 並加載瀏覽器緩存。 Last-Modified/If-Modified-Since Last-Modified/If-Modified-Since 的值代表的是 文件的最後修改時間 ，第一次請求服務端會把資源的最後修改時間放到 Last-Modified 響應頭中，第二次發起請求的時候，請求頭會帶上上一次響應頭中的 Last-Modified 的時間，並放到 If-Modified-Since 請求頭屬性中，服務端根據文件最後一次修改時間和 If-Modified-Since 的值進行比較，如果相等，返回 304 ，並加載瀏覽器緩存。 ###　驗證協商緩存 本地通過 express 起一個服務來驗證協商緩存，代碼如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const express = require ( 'express' ); const app = express(); var options =  etag: true , // 開啟協商緩存 lastModified: true , // 開啟協商緩存 setHeaders: ( res, path, stat ) =  res.set( 'Cache-Control' : 'max-age=00' , // 瀏覽器不走強緩存 'Pragma' : 'no-cache' , // 瀏覽器不走強緩存 ); , ; app.use(express.static((__dirname + '/public' ), options)); app.listen( 3001 ); 第二次請求資源，服務端根據請求頭中的 If-Modified-Since 和 If-None-Match 驗證文件是否修改。 Tag/If-None-Match 的出現主要解決了 Last-Modified/If-Modified-Since 所解決不了的問題： 如果文件的修改頻率在秒級以下，Last-Modified/If-Modified-Since 會錯誤地返回 304 如果文件被修改了，但是內容沒有任何變化的時候，Last-Modified/If-Modified-Since 會錯誤地返回 304 References HTTP caching 圖解 HTTP 緩存"},"http/caching.html#強緩存":{"title":"&#x5F37;&#x7DE9;&#x5B58;","path":"\\javascript\\http\\caching.html#強緩存","body":"&#x4E0D;&#x9700;&#x8981;&#x767C;&#x9001;&#x8ACB;&#x6C42;&#x5230;&#x670D;&#x52D9;&#x7AEF;&#xFF0C;&#x76F4;&#x63A5;&#x8B80;&#x53D6;&#x700F;&#x89BD;&#x5668;&#x672C;&#x5730;&#x7DE9;&#x5B58;&#xFF0C;&#x5728; Chrome &#x7684; Network &#x4E2D;&#x986F;&#x793A;&#x7684; HTTP &#x72C0;&#x614B;&#x78BC;&#x662F; 200 &#xFF0C;&#x5728; Chrome &#x4E2D;&#xFF0C;&#x5F37;&#x7DE9;&#x5B58;&#x53C8;&#x5206;&#x70BA; Disk Cache (&#x5B58;&#x653E;&#x5728;&#x786C;&#x76E4;&#x4E2D;)&#x548C; Memory Cache (&#x5B58;&#x653E;&#x5728;&#x5167;&#x5B58;&#x4E2D;)&#xFF0C;&#x5B58;&#x653E;&#x7684;&#x4F4D;&#x7F6E;&#x662F;&#x7531;&#x700F;&#x89BD;&#x5668;&#x63A7;&#x5236;&#x7684;&#x3002; &#x662F;&#x5426;&#x5F37;&#x7DE9;&#x5B58;&#x7531; Expires &#x3001; Cache-Control &#x548C; Pragma 3 &#x500B; Header &#x5C6C;&#x6027;&#x5171;&#x540C;&#x4F86;&#x63A7;&#x5236;&#x3002; Expires Expires &#x7684;&#x503C;&#x662F;&#x4E00;&#x500B; HTTP &#x65E5;&#x671F; &#xFF0C;&#x5728;&#x700F;&#x89BD;&#x5668;&#x767C;&#x8D77;&#x8ACB;&#x6C42;&#x6642;&#xFF0C;&#x6703;&#x6839;&#x64DA;&#x7CFB;&#x7D71;&#x6642;&#x9593;&#x548C; Expires &#x7684;&#x503C;&#x9032;&#x884C;&#x6BD4;&#x8F03;&#xFF0C;&#x5982;&#x679C;&#x7CFB;&#x7D71;&#x6642;&#x9593;&#x8D85;&#x904E;&#x4E86; Expires &#x7684;&#x503C;&#xFF0C;&#x7DE9;&#x5B58;&#x5931;&#x6548;&#x3002;&#x7531;&#x65BC;&#x548C;&#x7CFB;&#x7D71;&#x6642;&#x9593;&#x9032;&#x884C;&#x6BD4;&#x8F03;&#xFF0C;&#x6240;&#x4EE5;&#x7576;&#x7CFB;&#x7D71;&#x6642;&#x9593;&#x548C;&#x670D;&#x52D9;&#x5668;&#x6642;&#x9593;&#x4E0D;&#x4E00;&#x81F4;&#x7684;&#x6642;&#x5019;&#xFF0C;&#x6703;&#x6709;&#x7DE9;&#x5B58;&#x6709;&#x6548;&#x671F;&#x4E0D;&#x51C6;&#x7684;&#x554F;&#x984C;&#x3002;Expires &#x7684;&#x512A;&#x5148;&#x7D1A;&#x5728;&#x4E09;&#x500B; Header &#x5C6C;&#x6027;&#x4E2D;&#x662F;&#x6700;&#x4F4E;&#x7684;&#x3002; Cache-Control Cache-Control &#x662F; HTTP/1.1 &#x4E2D;&#x65B0;&#x589E;&#x7684;&#x5C6C;&#x6027;&#xFF0C;&#x5728;&#x8ACB;&#x6C42;&#x982D;&#x548C;&#x97FF;&#x61C9;&#x982D;&#x4E2D;&#x90FD;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#xFF0C;&#x5E38;&#x7528;&#x7684;&#x5C6C;&#x6027;&#x503C;&#x5982;&#x6709;&#xFF1A; max-age&#xFF1A;&#x55AE;&#x4F4D;&#x662F;&#x79D2;&#xFF0C;&#x7DE9;&#x5B58;&#x6642;&#x9593;&#x8A08;&#x7B97;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x8DDD;&#x96E2;&#x767C;&#x8D77;&#x7684;&#x6642;&#x9593;&#x7684;&#x79D2;&#x6578;&#xFF0C;&#x8D85;&#x904E;&#x9593;&#x9694;&#x7684;&#x79D2;&#x6578;&#x7DE9;&#x5B58;&#x5931;&#x6548; no-cache &#xFF1A;&#x4E0D;&#x4F7F;&#x7528;&#x5F37;&#x7DE9;&#x5B58;&#xFF0C;&#x9700;&#x8981;&#x8207;&#x670D;&#x52D9;&#x5668;&#x9A57;&#x8B49;&#x7DE9;&#x5B58;&#x662F;&#x5426;&#x65B0;&#x9BAE; no-store &#xFF1A;&#x7981;&#x6B62;&#x4F7F;&#x7528;&#x7DE9;&#x5B58;&#xFF08;&#x5305;&#x62EC;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#xFF09;&#xFF0C;&#x6BCF;&#x6B21;&#x90FD;&#x5411;&#x670D;&#x52D9;&#x5668;&#x8ACB;&#x6C42;&#x6700;&#x65B0;&#x7684;&#x8CC7;&#x6E90; private&#xFF1A;&#x5C08;&#x7528;&#x65BC;&#x500B;&#x4EBA;&#x7684;&#x7DE9;&#x5B58;&#xFF0C;&#x4E2D;&#x9593;&#x4EE3;&#x7406;&#x3001;CDN &#x7B49;&#x4E0D;&#x80FD;&#x7DE9;&#x5B58;&#x6B64;&#x97FF;&#x61C9; public&#xFF1A;&#x97FF;&#x61C9;&#x53EF;&#x4EE5;&#x88AB;&#x4E2D;&#x9593;&#x4EE3;&#x7406;&#x3001;CDN &#x7B49;&#x7DE9;&#x5B58; must-revalidate&#xFF1A;&#x5728;&#x7DE9;&#x5B58;&#x904E;&#x671F;&#x524D;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#xFF0C;&#x904E;&#x671F;&#x5F8C;&#x5FC5;&#x9808;&#x5411;&#x670D;&#x52D9;&#x5668;&#x9A57;&#x8B49; ###&#x3000;&#x9A57;&#x8B49;&#x5F37;&#x7DE9;&#x5B58; &#x672C;&#x5730;&#x901A;&#x904E; express &#x8D77;&#x4E00;&#x500B;&#x670D;&#x52D9;&#x4F86;&#x9A57;&#x8B49;&#x5F37;&#x7DE9;&#x5B58;&#x7684; 3 &#x500B;&#x5C6C;&#x6027;&#xFF0C;&#x4EE3;&#x78BC;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 const express = require ( &apos;express&apos; ); const app = express(); var options = { etag: false , // &#x7981;&#x7528;&#x5354;&#x5546;&#x7DE9;&#x5B58; lastModified: false , // &#x7981;&#x7528;&#x5354;&#x5546;&#x7DE9;&#x5B58; setHeaders: ( res, path, stat ) = { res.set( &apos;Cache-Control&apos; , &apos;max-age=10&apos; ); // &#x5F37;&#x7DE9;&#x5B58;&#x8D85;&#x6642;&#x6642;&#x9593;&#x70BA;10&#x79D2; }, }; app.use(express.static((__dirname + &apos;/public&apos; ), options)); app.listen( 3000 ); &#x7B2C;&#x4E00;&#x6B21;&#x52A0;&#x8F09;&#xFF0C;&#x9801;&#x9762;&#x6703;&#x5411;&#x670D;&#x52D9;&#x5668;&#x8ACB;&#x6C42;&#x6578;&#x64DA;&#xFF0C;&#x4E26;&#x5728; Response Header &#x4E2D;&#x6DFB;&#x52A0; Cache-Control &#xFF0C;&#x904E;&#x671F;&#x6642;&#x9593;&#x70BA; 10 &#x79D2;&#x3002; &#x7B2C;&#x4E8C;&#x6B21;&#x52A0;&#x8F09;&#xFF0C;Date &#x982D;&#x5C6C;&#x6027;&#x672A;&#x66F4;&#x65B0;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x700F;&#x89BD;&#x5668;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x4E86;&#x5F37;&#x7DE9;&#x5B58;&#xFF0C;&#x5BE6;&#x969B;&#x6C92;&#x6709;&#x767C;&#x9001;&#x8ACB;&#x6C42;&#x3002; &#x904E;&#x4E86; 10 &#x79D2;&#x7684;&#x8D85;&#x6642;&#x6642;&#x9593;&#x4E4B;&#x5F8C;&#xFF0C;&#x518D;&#x6B21;&#x8ACB;&#x6C42;&#x8CC7;&#x6E90;&#xFF1A; &#x7576; Pragma &#x548C; Cache-Control &#x540C;&#x6642;&#x5B58;&#x5728;&#x7684;&#x6642;&#x5019;&#xFF0C;Pragma &#x7684;&#x512A;&#x5148;&#x7D1A;&#x9AD8;&#x65BC; Cache-Control&#x3002; Headers  Response Headers  Cache-Control: max-age=10 / Pragma: no-cache Pragma Pragma &#x53EA;&#x6709;&#x4E00;&#x500B;&#x5C6C;&#x6027;&#x503C;&#xFF0C;&#x5C31;&#x662F; no-cache &#xFF0C;&#x6548;&#x679C;&#x548C; Cache-Control &#x4E2D;&#x7684; no-cache &#x4E00;&#x81F4;&#xFF0C;&#x4E0D;&#x4F7F;&#x7528;&#x5F37;&#x7DE9;&#x5B58;&#xFF0C;&#x9700;&#x8981;&#x8207;&#x670D;&#x52D9;&#x5668;&#x9A57;&#x8B49;&#x7DE9;&#x5B58;&#x662F;&#x5426;&#x65B0;&#x9BAE;&#xFF0C;&#x5728; 3 &#x500B;&#x982D;&#x90E8;&#x5C6C;&#x6027;&#x4E2D;&#x7684;&#x512A;&#x5148;&#x7D1A;&#x6700;&#x9AD8;&#x3002;"},"http/caching.html#協商緩存":{"title":"&#x5354;&#x5546;&#x7DE9;&#x5B58;","path":"\\javascript\\http\\caching.html#協商緩存","body":"&#x7576;&#x700F;&#x89BD;&#x5668;&#x7684;&#x5F37;&#x7DE9;&#x5B58;&#x5931;&#x6548;&#x7684;&#x6642;&#x5019;&#x6216;&#x8005;&#x8ACB;&#x6C42;&#x982D;&#x4E2D;&#x8A2D;&#x7F6E;&#x4E86;&#x4E0D;&#x8D70;&#x5F37;&#x7DE9;&#x5B58;&#xFF0C;&#x4E26;&#x4E14;&#x5728;&#x8ACB;&#x6C42;&#x982D;&#x4E2D;&#x8A2D;&#x7F6E;&#x4E86;If-Modified-Since &#x6216;&#x8005; If-None-Match &#x7684;&#x6642;&#x5019;&#xFF0C;&#x6703;&#x5C07;&#x9019;&#x5169;&#x500B;&#x5C6C;&#x6027;&#x503C;&#x5230;&#x670D;&#x52D9;&#x7AEF;&#x53BB;&#x9A57;&#x8B49;&#x662F;&#x5426;&#x547D;&#x4E2D;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#xFF0C;&#x5982;&#x679C;&#x547D;&#x4E2D;&#x4E86;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#xFF0C;&#x6703;&#x8FD4;&#x56DE; 304 &#x72C0;&#x614B;&#xFF0C;&#x52A0;&#x8F09;&#x700F;&#x89BD;&#x5668;&#x7DE9;&#x5B58;&#xFF0C;&#x4E26;&#x4E14;&#x97FF;&#x61C9;&#x982D;&#x6703;&#x8A2D;&#x7F6E; Last-Modified &#x6216;&#x8005; ETag &#x5C6C;&#x6027;&#x3002; ETag/If-None-Match ETag/If-None-Match &#x7684;&#x503C;&#x662F; &#x4E00;&#x4E32; hash &#x78BC; &#xFF0C;&#x4EE3;&#x8868;&#x7684;&#x662F; &#x4E00;&#x500B;&#x8CC7;&#x6E90;&#x7684;&#x6A19;&#x8B58; &#x7B26;&#xFF0C;&#x7576;&#x670D;&#x52D9;&#x7AEF;&#x7684;&#x6587;&#x4EF6;&#x8B8A;&#x5316;&#x7684;&#x6642;&#x5019;&#xFF0C;&#x5B83;&#x7684; hash&#x78BC;&#x6703;&#x96A8;&#x4E4B;&#x6539;&#x8B8A;&#xFF0C;&#x901A;&#x904E;&#x8ACB;&#x6C42;&#x982D;&#x4E2D;&#x7684; If-None-Match &#x548C;&#x7576;&#x524D;&#x6587;&#x4EF6;&#x7684; hash &#x503C;&#x9032;&#x884C;&#x6BD4;&#x8F03;&#xFF0C;&#x5982;&#x679C;&#x76F8;&#x7B49;&#x5247;&#x8868;&#x793A;&#x547D;&#x4E2D;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#x3002;ETag &#x53C8;&#x6709;&#x5F37;&#x5F31;&#x6821;&#x9A57;&#x4E4B;&#x5206;&#xFF0C;&#x5982;&#x679C; hash &#x78BC;&#x662F;&#x4EE5; &#x201C;W/&#x201C; &#x958B;&#x982D;&#x7684;&#x4E00;&#x4E32;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x8AAA;&#x660E;&#x6B64;&#x6642;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#x7684;&#x6821;&#x9A57;&#x662F;&#x5F31;&#x6821;&#x9A57;&#x7684;&#xFF0C;&#x53EA;&#x6709;&#x670D;&#x52D9;&#x5668;&#x4E0A;&#x7684;&#x6587;&#x4EF6;&#x5DEE;&#x7570;&#xFF08;&#x6839;&#x64DA; ETag &#x8A08;&#x7B97;&#x65B9;&#x5F0F;&#x4F86;&#x6C7A;&#x5B9A;&#xFF09;&#x9054;&#x5230;&#x80FD;&#x5920;&#x89F8;&#x767C; hash &#x503C;&#x5F8C;&#x7DB4;&#x8B8A;&#x5316;&#x7684;&#x6642;&#x5019;&#xFF0C;&#x624D;&#x6703;&#x771F;&#x6B63;&#x5730;&#x8ACB;&#x6C42;&#x8CC7;&#x6E90;&#xFF0C;&#x5426;&#x5247;&#x8FD4;&#x56DE; 304 &#x4E26;&#x52A0;&#x8F09;&#x700F;&#x89BD;&#x5668;&#x7DE9;&#x5B58;&#x3002; Last-Modified/If-Modified-Since Last-Modified/If-Modified-Since &#x7684;&#x503C;&#x4EE3;&#x8868;&#x7684;&#x662F; &#x6587;&#x4EF6;&#x7684;&#x6700;&#x5F8C;&#x4FEE;&#x6539;&#x6642;&#x9593; &#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x8ACB;&#x6C42;&#x670D;&#x52D9;&#x7AEF;&#x6703;&#x628A;&#x8CC7;&#x6E90;&#x7684;&#x6700;&#x5F8C;&#x4FEE;&#x6539;&#x6642;&#x9593;&#x653E;&#x5230; Last-Modified &#x97FF;&#x61C9;&#x982D;&#x4E2D;&#xFF0C;&#x7B2C;&#x4E8C;&#x6B21;&#x767C;&#x8D77;&#x8ACB;&#x6C42;&#x7684;&#x6642;&#x5019;&#xFF0C;&#x8ACB;&#x6C42;&#x982D;&#x6703;&#x5E36;&#x4E0A;&#x4E0A;&#x4E00;&#x6B21;&#x97FF;&#x61C9;&#x982D;&#x4E2D;&#x7684; Last-Modified &#x7684;&#x6642;&#x9593;&#xFF0C;&#x4E26;&#x653E;&#x5230; If-Modified-Since &#x8ACB;&#x6C42;&#x982D;&#x5C6C;&#x6027;&#x4E2D;&#xFF0C;&#x670D;&#x52D9;&#x7AEF;&#x6839;&#x64DA;&#x6587;&#x4EF6;&#x6700;&#x5F8C;&#x4E00;&#x6B21;&#x4FEE;&#x6539;&#x6642;&#x9593;&#x548C; If-Modified-Since &#x7684;&#x503C;&#x9032;&#x884C;&#x6BD4;&#x8F03;&#xFF0C;&#x5982;&#x679C;&#x76F8;&#x7B49;&#xFF0C;&#x8FD4;&#x56DE; 304 &#xFF0C;&#x4E26;&#x52A0;&#x8F09;&#x700F;&#x89BD;&#x5668;&#x7DE9;&#x5B58;&#x3002; ###&#x3000;&#x9A57;&#x8B49;&#x5354;&#x5546;&#x7DE9;&#x5B58; &#x672C;&#x5730;&#x901A;&#x904E; express &#x8D77;&#x4E00;&#x500B;&#x670D;&#x52D9;&#x4F86;&#x9A57;&#x8B49;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#xFF0C;&#x4EE3;&#x78BC;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const express = require ( &apos;express&apos; ); const app = express(); var options = { etag: true , // &#x958B;&#x555F;&#x5354;&#x5546;&#x7DE9;&#x5B58; lastModified: true , // &#x958B;&#x555F;&#x5354;&#x5546;&#x7DE9;&#x5B58; setHeaders: ( res, path, stat ) = { res.set({ &apos;Cache-Control&apos; : &apos;max-age=00&apos; , // &#x700F;&#x89BD;&#x5668;&#x4E0D;&#x8D70;&#x5F37;&#x7DE9;&#x5B58; &apos;Pragma&apos; : &apos;no-cache&apos; , // &#x700F;&#x89BD;&#x5668;&#x4E0D;&#x8D70;&#x5F37;&#x7DE9;&#x5B58; }); }, }; app.use(express.static((__dirname + &apos;/public&apos; ), options)); app.listen( 3001 ); &#x7B2C;&#x4E8C;&#x6B21;&#x8ACB;&#x6C42;&#x8CC7;&#x6E90;&#xFF0C;&#x670D;&#x52D9;&#x7AEF;&#x6839;&#x64DA;&#x8ACB;&#x6C42;&#x982D;&#x4E2D;&#x7684; If-Modified-Since &#x548C; If-None-Match &#x9A57;&#x8B49;&#x6587;&#x4EF6;&#x662F;&#x5426;&#x4FEE;&#x6539;&#x3002; Tag/If-None-Match &#x7684;&#x51FA;&#x73FE;&#x4E3B;&#x8981;&#x89E3;&#x6C7A;&#x4E86; Last-Modified/If-Modified-Since &#x6240;&#x89E3;&#x6C7A;&#x4E0D;&#x4E86;&#x7684;&#x554F;&#x984C;&#xFF1A; &#x5982;&#x679C;&#x6587;&#x4EF6;&#x7684;&#x4FEE;&#x6539;&#x983B;&#x7387;&#x5728;&#x79D2;&#x7D1A;&#x4EE5;&#x4E0B;&#xFF0C;Last-Modified/If-Modified-Since &#x6703;&#x932F;&#x8AA4;&#x5730;&#x8FD4;&#x56DE; 304 &#x5982;&#x679C;&#x6587;&#x4EF6;&#x88AB;&#x4FEE;&#x6539;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x5167;&#x5BB9;&#x6C92;&#x6709;&#x4EFB;&#x4F55;&#x8B8A;&#x5316;&#x7684;&#x6642;&#x5019;&#xFF0C;Last-Modified/If-Modified-Since &#x6703;&#x932F;&#x8AA4;&#x5730;&#x8FD4;&#x56DE; 304"},"http/caching.html#References":{"title":"References","path":"\\javascript\\http\\caching.html#References","body":"HTTP caching &#x5716;&#x89E3; HTTP &#x7DE9;&#x5B58;"},"object/assign.html":{"title":"Object assign","path":"\\javascript\\object\\assign.html","body":"用來複製 Object.assign() 被用來複製一個或多個物件自身所有可數的屬性到另一個目標物件。回傳的值為該目標物件。 Object.assign() 只會從來源物件將自身可列舉的 屬性複製 到目標物件。 ##　複製物件 1 2 3 var obj =  a : 1 ; var copy = Object .assign(, obj); console .log(copy); //  a: 1  合併物件 1 2 3 4 5 6 7 var o1 =  a : 1 ; var o2 =  b : 2 ; var o3 =  c : 3 ; var obj = Object .assign(o1, o2, o3); console .log(obj); //  a: 1, b: 2, c: 3  console .log(o1); //  a: 1, b: 2, c: 3 , 目標物件本身也被改變。 有相同屬性時合併物件區段 1 2 3 4 5 6 var o1 =  a : 1 , b : 1 , c : 1 ; var o2 =  b : 2 , c : 2 ; var o3 =  c : 3 ; var obj = Object .assign(, o1, o2, o3); console .log(obj); //  a: 1, b: 2, c: 3 ，屬性c為o3.c的值，最後一個出現的屬性c。"},"object/assign.html#合併物件":{"title":"&#x5408;&#x4F75;&#x7269;&#x4EF6;","path":"\\javascript\\object\\assign.html#合併物件","body":"1 2 3 4 5 6 7 var o1 = { a : 1 }; var o2 = { b : 2 }; var o3 = { c : 3 }; var obj = Object .assign(o1, o2, o3); console .log(obj); // { a: 1, b: 2, c: 3 } console .log(o1); // { a: 1, b: 2, c: 3 }, &#x76EE;&#x6A19;&#x7269;&#x4EF6;&#x672C;&#x8EAB;&#x4E5F;&#x88AB;&#x6539;&#x8B8A;&#x3002;"},"object/assign.html#有相同屬性時合併物件區段":{"title":"&#x6709;&#x76F8;&#x540C;&#x5C6C;&#x6027;&#x6642;&#x5408;&#x4F75;&#x7269;&#x4EF6;&#x5340;&#x6BB5;","path":"\\javascript\\object\\assign.html#有相同屬性時合併物件區段","body":"1 2 3 4 5 6 var o1 = { a : 1 , b : 1 , c : 1 }; var o2 = { b : 2 , c : 2 }; var o3 = { c : 3 }; var obj = Object .assign({}, o1, o2, o3); console .log(obj); // { a: 1, b: 2, c: 3 }&#xFF0C;&#x5C6C;&#x6027;c&#x70BA;o3.c&#x7684;&#x503C;&#xFF0C;&#x6700;&#x5F8C;&#x4E00;&#x500B;&#x51FA;&#x73FE;&#x7684;&#x5C6C;&#x6027;c&#x3002;"},"glossary/hoisting.html":{"title":"提升（[Hoisting](https://developer.mozilla.org/zh-TW/docs/Glossary/Hoisting)）","path":"\\javascript\\glossary\\hoisting.html","body":"在執行任何程式碼前，JavaScript 會把函式宣告放進記憶體裡面，這樣做的優點是：可以在程式碼宣告該函式之前使用它。 1 2 3 4 5 6 7 8 function catName ( name )  console .log( \"My cat's name is \" + name);  catName( \"Tigger\" ); /* 上面程式的結果是: \"My cat's name is Tigger\" */ 1 2 3 4 5 6 7 8 9 console .log(c); var c; function c ( a )  console .log(a); var a = 3 ; function a ( )    c( 2 ); // 输出 1 2 3 4 5 6 7 8 9 10 // console.log(c); function c ( a )  console .log(a); var a = 3 ; function a ( )    // console.log(a); function a ( )   變量提升也有優先級, 函數聲明  arguments  變量聲明 1 2 3 var c = 1 ; console .log(c); c( 2 ); 1 “TypeError: c is not a function 由於函數聲明會提升,當函數外的 console.log(c) 執行時,c已經被賦值為1。 因此,執行c(2)時會拋出TypeError,因為 1 不是函數。 1 2 3 4 5 6 7 8 9 var name = 'erdong' ; ( function ( )  if ( typeof name === 'undefined' )  var name = 'chen' ; console .log(name);  else  console .log(name);  )(); chen 自執行函數執行時,會先進行變量提升(這裡涉及到執行上下文不過多說,一定要搞懂執行上下文), 在自執行函數執行時,偽代碼為: 1 2 3 4 5 6 7 8 9 ( function ( )  var name; // 變量name會提升到當前作用域頂部 if ( typeof name === 'undefined' )  name = 'chen' ; console .log(name);  else  console .log(name);  )(); 所以會執行if中的console.log(name)"},"object/create.html":{"title":"Object.create()","path":"\\javascript\\object\\create.html","body":"Object.create() 指定其原型物件與屬性，創建一個新物件。 使用 Object.create() 實現類別繼承 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // Shape - 父類別 function Shape ( )  this .x = 0 ; this .y = 0 ;  // 父類別的方法 Shape.prototype.move = function ( x, y )  this .x += x; this .y += y; console .info( 'Shape moved.' ); ; // Rectangle - 子類別 function Rectangle ( )  Shape.call( this ); // call super constructor.  // 子類別擴展(extends)父類別 Rectangle.prototype = Object .create(Shape.prototype); Rectangle.prototype.constructor = Rectangle; var rect = new Rectangle(); console .log( 'Is rect an instance of Rectangle?' , rect instanceof Rectangle); // true console .log( 'Is rect an instance of Shape?' , rect instanceof Shape); // true rect.move( 1 , 1 ); // Outputs, 'Shape moved.' ex 1 2 let ...arr = Object .create( x : 1 ) // Object.create 將x掛在原形鏈上了 沒有掛在值上  console .log(arr) // undefined"},"operators/destructuring_assignment.html":{"title":"","path":"\\javascript\\operators\\destructuring_assignment.html","body":"Destructuring assignment 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 let a, b, rest; [a, b] = [ 10 , 20 ]; console .log(a); // 10 console .log(b); // 20 [a, b, ...rest] = [ 10 , 20 , 30 , 40 , 50 ]; console .log(a); // 10 console .log(b); // 20 console .log(rest); // [30, 40, 50] ( a, b  =  a : 10 , b : 20 ); console .log(a); // 10 console .log(b); // 20 ( a, b  =  a : 10 , b : 20 , c : 30 ); console .log(a); // 10 console .log(b); // 20 // Stage 4(finished) proposal (a, b, ...rest =  a : 10 , b : 20 , c : 30 , d : 40 ); console .log(a); // 10 console .log(b); // 20 console .log(rest); // c: 30, d: 40 1 2 3 4 5 6 7 8 const object =  a : 5 , b : 6 , c : 7 ; const picked = ( ( a, c  ) = ( a, c ))(object); console .log(picked); //  a: 5, c: 7  let unwrap = ( a, c ) = (a, c); let picked = unwrap( a : 5 , b : 6 , c : 7 ); console .log(picked) //  a: 5, c: 7  1 2 3 4 5 6 let picked = ( date, close, symbol ) = (date, close, symbol); const map1 = quotes.map( obj =  // console.log(obj) return picked(obj) ); console .log(map1); [ { date: 2020-05-14T04:00:00.000Z, close: 142.970001, symbol: ‘vti’ }, { date: 2020-05-13T04:00:00.000Z, close: 141.449997, symbol: ‘vti’ } ]"},"operators/destructuring_assignment.html#Destructuring-assignment":{"title":"Destructuring assignment","path":"\\javascript\\operators\\destructuring_assignment.html#Destructuring-assignment","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 let a, b, rest; [a, b] = [ 10 , 20 ]; console .log(a); // 10 console .log(b); // 20 [a, b, ...rest] = [ 10 , 20 , 30 , 40 , 50 ]; console .log(a); // 10 console .log(b); // 20 console .log(rest); // [30, 40, 50] ({ a, b } = { a : 10 , b : 20 }); console .log(a); // 10 console .log(b); // 20 ({ a, b } = { a : 10 , b : 20 , c : 30 }); console .log(a); // 10 console .log(b); // 20 // Stage 4(finished) proposal ({a, b, ...rest} = { a : 10 , b : 20 , c : 30 , d : 40 }); console .log(a); // 10 console .log(b); // 20 console .log(rest); // {c: 30, d: 40} 1 2 3 4 5 6 7 8 const object = { a : 5 , b : 6 , c : 7 }; const picked = ( ({ a, c } ) = ({ a, c }))(object); console .log(picked); // { a: 5, c: 7 } let unwrap = ( {a, c} ) = ({a, c}); let picked = unwrap({ a : 5 , b : 6 , c : 7 }); console .log(picked) // { a: 5, c: 7 } 1 2 3 4 5 6 let picked = ( {date, close, symbol} ) = ({date, close, symbol}); const map1 = quotes.map( obj = { // console.log(obj) return picked(obj) }); console .log(map1); [ { date: 2020-05-14T04:00:00.000Z, close: 142.970001, symbol: &#x2018;vti&#x2019; }, { date: 2020-05-13T04:00:00.000Z, close: 141.449997, symbol: &#x2018;vti&#x2019; } ]"},"operators/function.html":{"title":"","path":"\\javascript\\operators\\function.html","body":"函數表達式 函數表達式（function expression）非常類似於函數聲明（function statement）（詳情查看函數聲明），並且兩者擁有幾乎相同的語法。函數表達式與函數聲明的最主要區別是函數名稱（function name），在函數表達式中可省略它，從而創建匿名函數（anonymous functions）。 1 2 3 4 5 6 // 函數聲明 function name ( [param[, param[, ... param]]] )  statements  // 函數表達式 var myFunction = function name ( [param[, param[, ... param]]] )  statements  // 函數表達式 匿名函數 var myFunction = function ( [param[, param[, ... param]]] )  statements  1 2 3 ( function ( )  debugger )() 函數表達式提升 (Function expression hoisting) JavaScript中的函數表達式沒有提升,不像函數聲明,你在定義函數表達式之前不能使用函數表達式: 1 2 3 4 5 notHoisted(); // TypeError: notHoisted is not a function var notHoisted = function ( )  console .log( 'bar' ); ;"},"operators/function.html#函數表達式":{"title":"&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;","path":"\\javascript\\operators\\function.html#函數表達式","body":"&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#xFF08;function expression&#xFF09;&#x975E;&#x5E38;&#x985E;&#x4F3C;&#x65BC;&#x51FD;&#x6578;&#x8072;&#x660E;&#xFF08;function statement&#xFF09;&#xFF08;&#x8A73;&#x60C5;&#x67E5;&#x770B;&#x51FD;&#x6578;&#x8072;&#x660E;&#xFF09;&#xFF0C;&#x4E26;&#x4E14;&#x5169;&#x8005;&#x64C1;&#x6709;&#x5E7E;&#x4E4E;&#x76F8;&#x540C;&#x7684;&#x8A9E;&#x6CD5;&#x3002;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x8207;&#x51FD;&#x6578;&#x8072;&#x660E;&#x7684;&#x6700;&#x4E3B;&#x8981;&#x5340;&#x5225;&#x662F;&#x51FD;&#x6578;&#x540D;&#x7A31;&#xFF08;function name&#xFF09;&#xFF0C;&#x5728;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x4E2D;&#x53EF;&#x7701;&#x7565;&#x5B83;&#xFF0C;&#x5F9E;&#x800C;&#x5275;&#x5EFA;&#x533F;&#x540D;&#x51FD;&#x6578;&#xFF08;anonymous functions&#xFF09;&#x3002; 1 2 3 4 5 6 // &#x51FD;&#x6578;&#x8072;&#x660E; function name ( [param[, param[, ... param]]] ) { statements } // &#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F; var myFunction = function name ( [param[, param[, ... param]]] ) { statements } // &#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F; &#x533F;&#x540D;&#x51FD;&#x6578; var myFunction = function ( [param[, param[, ... param]]] ) { statements } 1 2 3 ( function ( ) { debugger })() &#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x63D0;&#x5347; (Function expression hoisting) JavaScript&#x4E2D;&#x7684;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x6C92;&#x6709;&#x63D0;&#x5347;,&#x4E0D;&#x50CF;&#x51FD;&#x6578;&#x8072;&#x660E;,&#x4F60;&#x5728;&#x5B9A;&#x7FA9;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x4E4B;&#x524D;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;: 1 2 3 4 5 notHoisted(); // TypeError: notHoisted is not a function var notHoisted = function ( ) { console .log( &apos;bar&apos; ); };"},"operators/typeof.html":{"title":"","path":"\\javascript\\operators\\typeof.html","body":"typeof 1 2 3 4 5 var f = function g ( )  return 123  typeof g(); // Uncaught ReferenceError: g is not defined typeof f; // \"function\" g() 不能變動 變量 f function_expression 可以重新賦值 g() 只能在函數內使用 外部無法存取 1 2 3 4 5 // g() 函數聲明 function g ( )  return 123  typeof g(); // \"number\" ref 函數 null [typeof null, null instanceof Object] // [“object”, false] js 萬物即對象 但null不是Object new出來的 ref: instanceof Object.prototype.name = 1 ; 1.0.name; // 1 1是整型 1.0 變對象 1.name; // Uncaught SyntaxError: Invalid or unexpected token js沒有整型只有對象 Function.name; // “Function”"},"operators/typeof.html#typeof":{"title":"typeof","path":"\\javascript\\operators\\typeof.html#typeof","body":"1 2 3 4 5 var f = function g ( ) { return 123 } typeof g(); // Uncaught ReferenceError: g is not defined typeof f; // function g() &#x4E0D;&#x80FD;&#x8B8A;&#x52D5; &#x8B8A;&#x91CF; f function_expression &#x53EF;&#x4EE5;&#x91CD;&#x65B0;&#x8CE6;&#x503C; g() &#x53EA;&#x80FD;&#x5728;&#x51FD;&#x6578;&#x5167;&#x4F7F;&#x7528; &#x5916;&#x90E8;&#x7121;&#x6CD5;&#x5B58;&#x53D6; 1 2 3 4 5 // g() &#x51FD;&#x6578;&#x8072;&#x660E; function g ( ) { return 123 } typeof g(); // number ref &#x51FD;&#x6578;"},"operators/typeof.html#null":{"title":"null","path":"\\javascript\\operators\\typeof.html#null","body":"[typeof null, null instanceof Object] // [&#x201C;object&#x201D;, false] js &#x842C;&#x7269;&#x5373;&#x5C0D;&#x8C61; &#x4F46;null&#x4E0D;&#x662F;Object new&#x51FA;&#x4F86;&#x7684; ref: instanceof Object.prototype.name = 1 ; 1.0.name; // 1 1&#x662F;&#x6574;&#x578B; 1.0 &#x8B8A;&#x5C0D;&#x8C61; 1.name; // Uncaught SyntaxError: Invalid or unexpected token js&#x6C92;&#x6709;&#x6574;&#x578B;&#x53EA;&#x6709;&#x5C0D;&#x8C61; Function.name; // &#x201C;Function&#x201D;"},"statements/block.html":{"title":"區塊","path":"\\javascript\\statements\\block.html","body":"區塊陳述用來組合零個或多個陳述。我們使用一對大括號 { } 以界定區塊。 var 1 2 3 4 5 var x = 1 ;  var x = 2 ;  alert(x); // outputs 2 let 和 const 1 2 3 4 5 let x = 1 ;  let x = 2 ;  console .log(x); // logs 1 function 1 2 3 4 5 6 7 8 9 10 11 function foo ( )   var a = 'var' ;  let a = 'let' ; console .log(a); // let   console .log(a); // var  foo(); 1 2 3 4 5 6 7  debugger function test ( )  test = 123 console .log( 'inner:' ,test) // inner: 123  console .log( 'outer:' ,test) // outer: ƒ test() 塊會限制函數的提升 有条件的创建函数 函数可以被有条件来声明 ，这意味着，函数声明可能出现在一个 if 语句里，但是，这种声明方式在不同的浏览器里可能有不同的效果。因此，不应该在生成环境代码中使用这种声明方式，应该使用函数表达式来代替。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 var hoisted = \"foo\" in this ; console .log( `'foo' name $hoisted ? \"is\" : \"is not\"  hoisted. typeof foo is $ typeof foo ` ); if ( false )  function foo ( )  return 1 ;   // 在Chrome里: // 'foo' 变量名被提升，但是 typeof foo 为 undefined // // 在Firefox里: // 'foo' 变量名被提升. 但是 typeof foo 为 undefined // // 在Edge里: // 'foo' 变量名未被提升. 而且 typeof foo 为 undefined // // 在Safari里: // 'foo' 变量名被提升. 而且 typeof foo 为 function var 不會產生塊級作用域, let 會產生塊級作用域。 1 2 3 4 5 6 if ( false ) var a = 1 ; let b = 2 ;  console .log(a); console .log(b); 代碼相當於: 1 2 3 4 5 6 7 var a; if ( false ) a = 1 ; let b = 2 ;  console .log(a); // undefined console .log(b); // ReferenceError: b is not defined"},"operators/precedence.html":{"title":"","path":"\\javascript\\operators\\precedence.html","body":"運算子優先序 1 2 3 var s = 'msg' console .log((s === 'msg' ) ? \"something\" : \"nothing\" ) console .log( \"value is \" + (s === 'msg' ) ? \"something\" : \"nothing\" ) // something value is 不見了 + 優先序高於 … ? … : … value is  + (s ===&#39;msg&#39;) // true .運算符比 = 運算符高 1 2 3 4 5 6 var a =  n : 1  var b = a a.x = a =  n : 2  console .log(a.n, b.n); console .log(a.x, b.x); 2 1 undefined {n: 2} 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 var b = a,此時a和b指向同一個對象。 .運算符比 = 運算符高,先計算 `a.x` ,此時 b =  n: 1 , x: undefined  相當於給對象添加了x屬性。 a.x = a =  n : 2 ; 計算完a.x,再計算 = ,賦值是從右向左,此時a指向一個新對象。 a =  n: 2  a.x已經執行過了,此時對象的x屬性賦值為a,此時 對象 =  n: 1 , x: n: 2   即: a =  n: 2  b =  n: 1 , x: n: 2  "},"operators/precedence.html#運算子優先序":{"title":"&#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F;","path":"\\javascript\\operators\\precedence.html#運算子優先序","body":"1 2 3 var s = &apos;msg&apos; console .log((s === &apos;msg&apos; ) ? something : nothing ) console .log( value is  + (s === &apos;msg&apos; ) ? something : nothing ) // something value is &#x4E0D;&#x898B;&#x4E86; + &#x512A;&#x5148;&#x5E8F;&#x9AD8;&#x65BC; &#x2026; ? &#x2026; : &#x2026; value is  + (s ===&apos;msg&apos;) // true"},"operators/precedence.html#運算符比-運算符高":{"title":".&#x904B;&#x7B97;&#x7B26;&#x6BD4; = &#x904B;&#x7B97;&#x7B26;&#x9AD8;","path":"\\javascript\\operators\\precedence.html#運算符比-運算符高","body":"1 2 3 4 5 6 var a = { n : 1 } var b = a a.x = a = { n : 2 } console .log(a.n, b.n); console .log(a.x, b.x); 2 1 undefined {n: 2} 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 var b = a,&#x6B64;&#x6642;a&#x548C;b&#x6307;&#x5411;&#x540C;&#x4E00;&#x500B;&#x5C0D;&#x8C61;&#x3002; .&#x904B;&#x7B97;&#x7B26;&#x6BD4; = &#x904B;&#x7B97;&#x7B26;&#x9AD8;,&#x5148;&#x8A08;&#x7B97; `a.x` ,&#x6B64;&#x6642; b = { n: 1 , x: undefined } &#x76F8;&#x7576;&#x65BC;&#x7D66;&#x5C0D;&#x8C61;&#x6DFB;&#x52A0;&#x4E86;x&#x5C6C;&#x6027;&#x3002; a.x = a = { n : 2 }; &#x8A08;&#x7B97;&#x5B8C;a.x,&#x518D;&#x8A08;&#x7B97; = ,&#x8CE6;&#x503C;&#x662F;&#x5F9E;&#x53F3;&#x5411;&#x5DE6;,&#x6B64;&#x6642;a&#x6307;&#x5411;&#x4E00;&#x500B;&#x65B0;&#x5C0D;&#x8C61;&#x3002; a = { n: 2 } a.x&#x5DF2;&#x7D93;&#x57F7;&#x884C;&#x904E;&#x4E86;,&#x6B64;&#x6642;&#x5C0D;&#x8C61;&#x7684;x&#x5C6C;&#x6027;&#x8CE6;&#x503C;&#x70BA;a,&#x6B64;&#x6642; &#x5C0D;&#x8C61; = { n: 1 , x:{ n: 2 } } &#x5373;: a = { n: 2 } b = { n: 1 , x:{ n: 2 } }"},"statements/let.html":{"title":"","path":"\\javascript\\statements\\let.html","body":"let let 用於宣告一個「只作用在當前區塊的變數」，初始值可選擇性的設定。 1 2 3 4 5 var a = 1 ; if ( true ) console .log(a); let a = 2 ;  ReferenceError: Cannot access ‘a’ before initialization let 聲明的變量不會提升,並且會產生暫存死區。在 let 聲明變量之前訪問變量會拋出錯誤。"},"statements/let.html#let":{"title":"let","path":"\\javascript\\statements\\let.html#let","body":"let &#x7528;&#x65BC;&#x5BA3;&#x544A;&#x4E00;&#x500B;&#x300C;&#x53EA;&#x4F5C;&#x7528;&#x5728;&#x7576;&#x524D;&#x5340;&#x584A;&#x7684;&#x8B8A;&#x6578;&#x300D;&#xFF0C;&#x521D;&#x59CB;&#x503C;&#x53EF;&#x9078;&#x64C7;&#x6027;&#x7684;&#x8A2D;&#x5B9A;&#x3002; 1 2 3 4 5 var a = 1 ; if ( true ){ console .log(a); let a = 2 ; } ReferenceError: Cannot access &#x2018;a&#x2019; before initialization let &#x8072;&#x660E;&#x7684;&#x8B8A;&#x91CF;&#x4E0D;&#x6703;&#x63D0;&#x5347;,&#x4E26;&#x4E14;&#x6703;&#x7522;&#x751F;&#x66AB;&#x5B58;&#x6B7B;&#x5340;&#x3002;&#x5728; let &#x8072;&#x660E;&#x8B8A;&#x91CF;&#x4E4B;&#x524D;&#x8A2A;&#x554F;&#x8B8A;&#x91CF;&#x6703;&#x62CB;&#x51FA;&#x932F;&#x8AA4;&#x3002;"},"statements/AsyncFunction.html":{"title":"AsyncFunction","path":"\\javascript\\statements\\AsyncFunction.html","body":"async function 宣告被定義為一個回傳 AsyncFunction 物件的非同步函式 。 同一個步道(同步 接力賽跑 等) vs 不同步道(非同步 賽跑) 1 2 3 4 5 6 7 8 let a = 0 let fn = async () =  a = a + await 10 ; console .log( '異步' ) console .log(a)  fn() console .log(++a) babeljs 1 ‘異步’ 10 a = await 10 + a; 1 ‘異步’ 11"},"statements/if...else.html":{"title":"","path":"\\javascript\\statements\\if...else.html","body":"if…else 條件組合的問題 規則是： 1.在預熱中參與活動，vip用戶贈送 1000 積分，普通用戶贈送 700 積分。 2.在進行中參與活動，vip用戶贈送 800 積分，普通用戶贈送 300 積分。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 let status= 1 let type= 2 if (status=== 1 ) if (type=== 1 ) console .log( '普通用戶在預售中參與活動，贈送700積分' )  else if (type=== 2 ) console .log( 'vip用戶在預售中參與活動，贈送1000積分' )   else if (status=== 2 ) if (type=== 1 ) console .log( '普通用戶在進行中參與活動，贈送300積分' )  else if (type=== 2 ) console .log( 'vip用戶在進行中參與活動，贈送800積分' )   可以使用 obj 寫法，如果以後有什麼條件改了，直接改 obj 這個配置就好 1 2 3 4 5 6 7 8 let obj= 'status=1&amp;type=1' : '普通用戶在預售中參與活動，贈送700積分' , 'status=1&amp;type=2' : 'vip用戶在預售中參與活動，贈送1000積分' , 'status=2&amp;type=1' : '普通用戶在進行中參與活動，贈送300積分' , 'status=2&amp;type=2' : '普通用戶在進行中參與活動，贈送800積分'  console .log(obj[ `status= $status &amp;type= $type ` ]) 特定场景下代替优化 if-else 的方案"},"statements/if...else.html#if…else":{"title":"if&#x2026;else","path":"\\javascript\\statements\\if...else.html#if…else","body":""},"statements/if...else.html#條件組合的問題":{"title":"&#x689D;&#x4EF6;&#x7D44;&#x5408;&#x7684;&#x554F;&#x984C;","path":"\\javascript\\statements\\if...else.html#條件組合的問題","body":"&#x898F;&#x5247;&#x662F;&#xFF1A; 1.&#x5728;&#x9810;&#x71B1;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;vip&#x7528;&#x6236;&#x8D08;&#x9001; 1000 &#x7A4D;&#x5206;&#xFF0C;&#x666E;&#x901A;&#x7528;&#x6236;&#x8D08;&#x9001; 700 &#x7A4D;&#x5206;&#x3002; 2.&#x5728;&#x9032;&#x884C;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;vip&#x7528;&#x6236;&#x8D08;&#x9001; 800 &#x7A4D;&#x5206;&#xFF0C;&#x666E;&#x901A;&#x7528;&#x6236;&#x8D08;&#x9001; 300 &#x7A4D;&#x5206;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 let status= 1 let type= 2 if (status=== 1 ){ if (type=== 1 ){ console .log( &apos;&#x666E;&#x901A;&#x7528;&#x6236;&#x5728;&#x9810;&#x552E;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;700&#x7A4D;&#x5206;&apos; ) } else if (type=== 2 ){ console .log( &apos;vip&#x7528;&#x6236;&#x5728;&#x9810;&#x552E;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;1000&#x7A4D;&#x5206;&apos; ) } } else if (status=== 2 ){ if (type=== 1 ){ console .log( &apos;&#x666E;&#x901A;&#x7528;&#x6236;&#x5728;&#x9032;&#x884C;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;300&#x7A4D;&#x5206;&apos; ) } else if (type=== 2 ){ console .log( &apos;vip&#x7528;&#x6236;&#x5728;&#x9032;&#x884C;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;800&#x7A4D;&#x5206;&apos; ) } } &#x53EF;&#x4EE5;&#x4F7F;&#x7528; obj &#x5BEB;&#x6CD5;&#xFF0C;&#x5982;&#x679C;&#x4EE5;&#x5F8C;&#x6709;&#x4EC0;&#x9EBC;&#x689D;&#x4EF6;&#x6539;&#x4E86;&#xFF0C;&#x76F4;&#x63A5;&#x6539; obj &#x9019;&#x500B;&#x914D;&#x7F6E;&#x5C31;&#x597D; 1 2 3 4 5 6 7 8 let obj={ &apos;status=1&amp;type=1&apos; : &apos;&#x666E;&#x901A;&#x7528;&#x6236;&#x5728;&#x9810;&#x552E;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;700&#x7A4D;&#x5206;&apos; , &apos;status=1&amp;type=2&apos; : &apos;vip&#x7528;&#x6236;&#x5728;&#x9810;&#x552E;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;1000&#x7A4D;&#x5206;&apos; , &apos;status=2&amp;type=1&apos; : &apos;&#x666E;&#x901A;&#x7528;&#x6236;&#x5728;&#x9032;&#x884C;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;300&#x7A4D;&#x5206;&apos; , &apos;status=2&amp;type=2&apos; : &apos;&#x666E;&#x901A;&#x7528;&#x6236;&#x5728;&#x9032;&#x884C;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;800&#x7A4D;&#x5206;&apos; } console .log(obj[ `status= ${status} &amp;type= ${type} ` ]) &#x7279;&#x5B9A;&#x573A;&#x666F;&#x4E0B;&#x4EE3;&#x66FF;&#x4F18;&#x5316; if-else &#x7684;&#x65B9;&#x6848;"},"statements/for.html":{"title":"","path":"\\javascript\\statements\\for.html","body":"for…of與for…in的差別 For…Of for…in 提示： for...in 不应该用于迭代一个 Array，其中 索引顺序 很重要。 在迭代 物件屬性 時，使用 for...in ；在迭代 陣列 時，使用 for...of 。 for...in 輸出的是屬 性名稱(key) ， for...of 輸出的是 值(value) for...of 是 ES6 的新語法。修復了ES5 for…in 的不足 for...of 不能迭代物件，需要透過和 Object.keys() 搭配使用 單純迭代陣列的話，for…in 輸出的是屬性名稱(key)，for…of 輸出的是值(value) 1 2 3 4 5 6 7 8 9 10 11 let iterable = [ 3 , 5 , 7 ]; // 回傳「key」 for ( let i in iterable)  console .log(i); // \"0\", \"1\", \"2\"  // 回傳「value」 for ( let i of iterable)  console .log(i); // 3, 5, 7  在原本的陣列，新增一個屬性 foo，可看到 for…in 有將此屬性 foo 也輸出。 1 2 3 4 5 6 7 8 9 10 11 12 let iterable = [ 3 , 5 , 7 ]; iterable.foo = 'hello' ; //新增foo屬性名稱 // 回傳「key」，且會讀取到陣列新增的屬性名稱 for ( let i in iterable)  console .log(i); // \"0\", \"1\", \"2\", \"foo\"  // 回傳「value」 for ( let i of iterable)  console .log(i); // 3, 5, 7 "},"statements/for.html#for…of與for…in的差別":{"title":"for&#x2026;of&#x8207;for&#x2026;in&#x7684;&#x5DEE;&#x5225;","path":"\\javascript\\statements\\for.html#for…of與for…in的差別","body":"For&#x2026;Of for&#x2026;in &#x63D0;&#x793A;&#xFF1A; for...in &#x4E0D;&#x5E94;&#x8BE5;&#x7528;&#x4E8E;&#x8FED;&#x4EE3;&#x4E00;&#x4E2A; Array&#xFF0C;&#x5176;&#x4E2D; &#x7D22;&#x5F15;&#x987A;&#x5E8F; &#x5F88;&#x91CD;&#x8981;&#x3002; &#x5728;&#x8FED;&#x4EE3; &#x7269;&#x4EF6;&#x5C6C;&#x6027; &#x6642;&#xFF0C;&#x4F7F;&#x7528; for...in &#xFF1B;&#x5728;&#x8FED;&#x4EE3; &#x9663;&#x5217; &#x6642;&#xFF0C;&#x4F7F;&#x7528; for...of &#x3002; for...in &#x8F38;&#x51FA;&#x7684;&#x662F;&#x5C6C; &#x6027;&#x540D;&#x7A31;(key) &#xFF0C; for...of &#x8F38;&#x51FA;&#x7684;&#x662F; &#x503C;(value) for...of &#x662F; ES6 &#x7684;&#x65B0;&#x8A9E;&#x6CD5;&#x3002;&#x4FEE;&#x5FA9;&#x4E86;ES5 for&#x2026;in &#x7684;&#x4E0D;&#x8DB3; for...of &#x4E0D;&#x80FD;&#x8FED;&#x4EE3;&#x7269;&#x4EF6;&#xFF0C;&#x9700;&#x8981;&#x900F;&#x904E;&#x548C; Object.keys() &#x642D;&#x914D;&#x4F7F;&#x7528; &#x55AE;&#x7D14;&#x8FED;&#x4EE3;&#x9663;&#x5217;&#x7684;&#x8A71;&#xFF0C;for&#x2026;in &#x8F38;&#x51FA;&#x7684;&#x662F;&#x5C6C;&#x6027;&#x540D;&#x7A31;(key)&#xFF0C;for&#x2026;of &#x8F38;&#x51FA;&#x7684;&#x662F;&#x503C;(value) 1 2 3 4 5 6 7 8 9 10 11 let iterable = [ 3 , 5 , 7 ]; // &#x56DE;&#x50B3;&#x300C;key&#x300D; for ( let i in iterable) { console .log(i); // 0, 1, 2 } // &#x56DE;&#x50B3;&#x300C;value&#x300D; for ( let i of iterable) { console .log(i); // 3, 5, 7 } &#x5728;&#x539F;&#x672C;&#x7684;&#x9663;&#x5217;&#xFF0C;&#x65B0;&#x589E;&#x4E00;&#x500B;&#x5C6C;&#x6027; foo&#xFF0C;&#x53EF;&#x770B;&#x5230; for&#x2026;in &#x6709;&#x5C07;&#x6B64;&#x5C6C;&#x6027; foo &#x4E5F;&#x8F38;&#x51FA;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 let iterable = [ 3 , 5 , 7 ]; iterable.foo = &apos;hello&apos; ; //&#x65B0;&#x589E;foo&#x5C6C;&#x6027;&#x540D;&#x7A31; // &#x56DE;&#x50B3;&#x300C;key&#x300D;&#xFF0C;&#x4E14;&#x6703;&#x8B80;&#x53D6;&#x5230;&#x9663;&#x5217;&#x65B0;&#x589E;&#x7684;&#x5C6C;&#x6027;&#x540D;&#x7A31; for ( let i in iterable) { console .log(i); // 0, 1, 2, foo } // &#x56DE;&#x50B3;&#x300C;value&#x300D; for ( let i of iterable) { console .log(i); // 3, 5, 7 }"},"string/split.html":{"title":"","path":"\\javascript\\string\\split.html","body":"split String.prototype.split() 請輸出1到400之間所有數字中包含的1的個數，比如數字1中包含了一個1, 數字11中包含了兩個1,數字20中不包含1,數字1到21中共包含了13個1。 將每一個數字轉換為字符串然後統計 1 的個數 1 2 3 4 5 6 7 8 9 10 function getCount ( )  let count = 0 for ( let i= 1 ;i 400 ;i++)  count = count + ` $i ` .split( '1' ).length - 1  return count  // 輸出 180 console .log(getCount())"},"string/split.html#split":{"title":"split","path":"\\javascript\\string\\split.html#split","body":"String.prototype.split() &#x8ACB;&#x8F38;&#x51FA;1&#x5230;400&#x4E4B;&#x9593;&#x6240;&#x6709;&#x6578;&#x5B57;&#x4E2D;&#x5305;&#x542B;&#x7684;1&#x7684;&#x500B;&#x6578;&#xFF0C;&#x6BD4;&#x5982;&#x6578;&#x5B57;1&#x4E2D;&#x5305;&#x542B;&#x4E86;&#x4E00;&#x500B;1, &#x6578;&#x5B57;11&#x4E2D;&#x5305;&#x542B;&#x4E86;&#x5169;&#x500B;1,&#x6578;&#x5B57;20&#x4E2D;&#x4E0D;&#x5305;&#x542B;1,&#x6578;&#x5B57;1&#x5230;21&#x4E2D;&#x5171;&#x5305;&#x542B;&#x4E86;13&#x500B;1&#x3002; &#x5C07;&#x6BCF;&#x4E00;&#x500B;&#x6578;&#x5B57;&#x8F49;&#x63DB;&#x70BA;&#x5B57;&#x7B26;&#x4E32;&#x7136;&#x5F8C;&#x7D71;&#x8A08; 1 &#x7684;&#x500B;&#x6578; 1 2 3 4 5 6 7 8 9 10 function getCount ( ) { let count = 0 for ( let i= 1 ;i 400 ;i++) { count = count + ` ${i} ` .split( &apos;1&apos; ).length - 1 } return count } // &#x8F38;&#x51FA; 180 console .log(getCount())"},"swagger/to-html.html":{"title":"swagger - to HTML","path":"\\javascript\\swagger\\to-html.html","body":"Swagger to HTML Download Schema Swagger Petstore Version: 1.0.0 List all pets GET /pets Request Sample Request Path limit integer (int32) Used in query How many items to return at one time (max 100) curl -v -X GET http://petstore.swagger.io/v1/pets Copy Request Response Sample Response Status Code: 200 An paged array of pets Reference [] [].id integer (int64) required [].name string required [].tag string This is a default response for the request. unexpected error Reference code integer (int32) required message string required Create a pet POST /pets Request Sample Request curl -v -X POST http://petstore.swagger.io/v1/pets Copy Request Response Sample Response Status Code: 201 Null response Reference This is a default response for the request. unexpected error Reference code integer (int32) required message string required Info for a specific pet GET /pets/{petId} Request Sample Request Path petId string required Used in path The id of the pet to retrieve curl -v -X GET http://petstore.swagger.io/v1/pets/{petId} Copy Request Response Sample Response Status Code: 200 Expected response to a valid request Reference [] [].id integer (int64) required [].name string required [].tag string This is a default response for the request. unexpected error Reference code integer (int32) required message string required"},"swagger/to-html.html#Swagger-to-HTML":{"title":"Swagger to HTML","path":"\\javascript\\swagger\\to-html.html#Swagger-to-HTML","body":"Download Schema Swagger Petstore Version: 1.0.0 List all pets GET /pets Request Sample Request Path limit integer (int32) Used in query How many items to return at one time (max 100) curl -v -X GET http://petstore.swagger.io/v1/pets Copy Request Response Sample Response Status Code: 200 An paged array of pets Reference [] [].id integer (int64) required [].name string required [].tag string This is a default response for the request. unexpected error Reference code integer (int32) required message string required Create a pet POST /pets Request Sample Request curl -v -X POST http://petstore.swagger.io/v1/pets Copy Request Response Sample Response Status Code: 201 Null response Reference This is a default response for the request. unexpected error Reference code integer (int32) required message string required Info for a specific pet GET /pets/{petId} Request Sample Request Path petId string required Used in path The id of the pet to retrieve curl -v -X GET http://petstore.swagger.io/v1/pets/{petId} Copy Request Response Sample Response Status Code: 200 Expected response to a valid request Reference [] [].id integer (int64) required [].name string required [].tag string This is a default response for the request. unexpected error Reference code integer (int32) required message string required"},"swagger/to-html.html#undefined":{"title":"Swagger Petstore","path":"\\javascript\\swagger\\to-html.html#undefined","body":"Version: 1.0.0"},"swagger/to-html.html#List-all-pets":{"title":"List all pets","path":"\\javascript\\swagger\\to-html.html#List-all-pets","body":"GET /pets"},"swagger/to-html.html#Create-a-pet":{"title":"Create a pet","path":"\\javascript\\swagger\\to-html.html#Create-a-pet","body":"POST /pets"},"swagger/to-html.html#Info-for-a-specific-pet":{"title":"Info for a specific pet","path":"\\javascript\\swagger\\to-html.html#Info-for-a-specific-pet","body":"GET /pets/{petId}"},"swagger/ui.html":{"title":"swagger - UI","path":"\\javascript\\swagger\\ui.html","body":"Swagger UI angular .module('swagger-module-1', ['ngSanitize', 'swaggerUi']) .config([ '$provide', '$locationProvider', function($provide, $locationProvider) { $provide.decorator('$anchorScroll', [ '$delegate', function anchorScrollDecorator($delegate){ return function () { /* Just not doing anything to prevent $anchorScrool default behaviour */} } ]); $locationProvider.hashPrefix(''); } ]); angular.bootstrap(document.getElementById('swagger-wrap-1'), ['swagger-module-1'])"},"swagger/ui.html#Swagger-UI":{"title":"Swagger UI","path":"\\javascript\\swagger\\ui.html#Swagger-UI","body":"angular .module('swagger-module-1', ['ngSanitize', 'swaggerUi']) .config([ '$provide', '$locationProvider', function($provide, $locationProvider) { $provide.decorator('$anchorScroll', [ '$delegate', function anchorScrollDecorator($delegate){ return function () { /* Just not doing anything to prevent $anchorScrool default behaviour */} } ]); $locationProvider.hashPrefix(''); } ]); angular.bootstrap(document.getElementById('swagger-wrap-1'), ['swagger-module-1'])"},"string/queue.html":{"title":"隊列（Queue）","path":"\\javascript\\string\\queue.html","body":"數據結構：隊列（Queue） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 function Queue ( )  let items = [] this .enqueue = function ( e )  items.push(e) // 進隊  this .dequeue = function ( )  return items.shift() // 出隊  this .isEmpty = function ( )  return items.length === 0 // 是否是空隊  this .front = function ( )  return items[ 0 ] // 獲取隊頭元素  this .clear = function ( )  items = [] // 清空隊  this .size = function ( )  return items.length // 獲取隊列長度   查找：從對頭開始查找，從時間複雜度為 O(n) 插入或刪除：進棧與出棧的時間複雜度為 O(1) 時間複雜度 如果演算法中包含巢狀的迴圈，則基本語句通常是最內層的迴圈體，如果演算法中包含並列的迴圈，則將並列迴圈的時間複雜度相加。例如： for (i=1; i=n; i++)　　x++; for (i=1; i=n; i++)　　for (j=1; j=n; j++)　　x++; 第一個for迴圈的時間複雜度為 O(n) ，第二個for迴圈的時間複雜度為O(n2)， 則整個演算法的時間複雜度為O(n+n2)=O(n2)。 Ο(1) 表示基本語句的執行次數是一個常數，一般來說，只要演算法中不存在迴圈語句，其時間複雜度就是O(1) 常見的演算法時間複雜度由小到大依次為： O(1)＜O(log2n)＜O(n)＜O(nlog2n)＜O(n2)＜O(n3)＜…＜O(2n)＜O(n!) O(log2n)、O(n)、O(nlog2n)、O(n2)和O(n3)稱為 多項式時間 O(2n)和O(n!)稱為 指數時間 雙端隊列（Deque） Deque 在原有隊列的基礎上擴充了：隊頭、隊尾都可以進隊出隊 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 function Deque ( )  let items = [] this .addFirst = function ( e )  items.unshift(e)  this .removeFirst = function ( )  return items.shift()  this .addLast = function ( e )  items.push(e)  this .removeLast = function ( )  return items.pop()   經典的雙端隊列問題：翻轉字符串裡的單詞 輸入: “a good example” 輸出: “example good a” 解釋: 如果兩個單詞間有多餘的空格，將反轉後單詞間的空格減少到只含一個。 說明： 無空格字符構成一個單詞。 輸入字符串可以在前面或者後面包含多餘的空格，但是反轉後的字符不能包括。 如果兩個單詞間有多餘的空格，將反轉後單詞間的空格減少到只含一個。 解題思路：使用雙端隊列解題 首先去除字符串左右空格 逐個讀取字符串中的每個單詞，依次放入雙端隊列的對頭 再將隊列轉換成字符串輸出（已空格為分隔符） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 var reverseWords = function ( s )  let left = 0 let right = s.length - 1 let queue = [] let word = '' while (s.charAt(left) === ' ' ) left ++ while (s.charAt(right) === ' ' ) right -- while (left = right)  let char = s.charAt(left) if (char === ' ' &amp;&amp; word)  queue.unshift(word) word = ''  else if (char !== ' ' ) word += char  left++  console .log(word) // example queue.unshift(word) console .log(queue) // [\"example\", \"good\", \"a\"] return queue.join( ' ' ) ; const ans = reverseWords( \"a good example\" ) console .log(ans) // \"example good a\" 正则 + JS API 1 2 3 var reverseWords = function ( s )  return s.trim().replace( /\\s+/g , ' ' ).split( ' ' ).reverse().join( ' ' ) ; References 前端进阶算法：一看就懂的队列及配套算法题"},"string/queue.html#數據結構：隊列（Queue）":{"title":"&#x6578;&#x64DA;&#x7D50;&#x69CB;&#xFF1A;&#x968A;&#x5217;&#xFF08;Queue&#xFF09;","path":"\\javascript\\string\\queue.html#數據結構：隊列（Queue）","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 function Queue ( ) { let items = [] this .enqueue = function ( e ) { items.push(e) // &#x9032;&#x968A; } this .dequeue = function ( ) { return items.shift() // &#x51FA;&#x968A; } this .isEmpty = function ( ) { return items.length === 0 // &#x662F;&#x5426;&#x662F;&#x7A7A;&#x968A; } this .front = function ( ) { return items[ 0 ] // &#x7372;&#x53D6;&#x968A;&#x982D;&#x5143;&#x7D20; } this .clear = function ( ) { items = [] // &#x6E05;&#x7A7A;&#x968A; } this .size = function ( ) { return items.length // &#x7372;&#x53D6;&#x968A;&#x5217;&#x9577;&#x5EA6; } } &#x67E5;&#x627E;&#xFF1A;&#x5F9E;&#x5C0D;&#x982D;&#x958B;&#x59CB;&#x67E5;&#x627E;&#xFF0C;&#x5F9E;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x70BA; O(n) &#x63D2;&#x5165;&#x6216;&#x522A;&#x9664;&#xFF1A;&#x9032;&#x68E7;&#x8207;&#x51FA;&#x68E7;&#x7684;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x70BA; O(1)"},"string/queue.html#時間複雜度":{"title":"&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;","path":"\\javascript\\string\\queue.html#時間複雜度","body":"&#x5982;&#x679C;&#x6F14;&#x7B97;&#x6CD5;&#x4E2D;&#x5305;&#x542B;&#x5DE2;&#x72C0;&#x7684;&#x8FF4;&#x5708;&#xFF0C;&#x5247;&#x57FA;&#x672C;&#x8A9E;&#x53E5;&#x901A;&#x5E38;&#x662F;&#x6700;&#x5167;&#x5C64;&#x7684;&#x8FF4;&#x5708;&#x9AD4;&#xFF0C;&#x5982;&#x679C;&#x6F14;&#x7B97;&#x6CD5;&#x4E2D;&#x5305;&#x542B;&#x4E26;&#x5217;&#x7684;&#x8FF4;&#x5708;&#xFF0C;&#x5247;&#x5C07;&#x4E26;&#x5217;&#x8FF4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x76F8;&#x52A0;&#x3002;&#x4F8B;&#x5982;&#xFF1A; for (i=1; i=n; i++)&#x3000;&#x3000;x++; for (i=1; i=n; i++)&#x3000;&#x3000;for (j=1; j=n; j++)&#x3000;&#x3000;x++; &#x7B2C;&#x4E00;&#x500B;for&#x8FF4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x70BA; O(n) &#xFF0C;&#x7B2C;&#x4E8C;&#x500B;for&#x8FF4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x70BA;O(n2)&#xFF0C; &#x5247;&#x6574;&#x500B;&#x6F14;&#x7B97;&#x6CD5;&#x7684;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x70BA;O(n+n2)=O(n2)&#x3002; &#x39F;(1) &#x8868;&#x793A;&#x57FA;&#x672C;&#x8A9E;&#x53E5;&#x7684;&#x57F7;&#x884C;&#x6B21;&#x6578;&#x662F;&#x4E00;&#x500B;&#x5E38;&#x6578;&#xFF0C;&#x4E00;&#x822C;&#x4F86;&#x8AAA;&#xFF0C;&#x53EA;&#x8981;&#x6F14;&#x7B97;&#x6CD5;&#x4E2D;&#x4E0D;&#x5B58;&#x5728;&#x8FF4;&#x5708;&#x8A9E;&#x53E5;&#xFF0C;&#x5176;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x5C31;&#x662F;O(1) &#x5E38;&#x898B;&#x7684;&#x6F14;&#x7B97;&#x6CD5;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x7531;&#x5C0F;&#x5230;&#x5927;&#x4F9D;&#x6B21;&#x70BA;&#xFF1A; O(1)&#xFF1C;O(log2n)&#xFF1C;O(n)&#xFF1C;O(nlog2n)&#xFF1C;O(n2)&#xFF1C;O(n3)&#xFF1C;&#x2026;&#xFF1C;O(2n)&#xFF1C;O(n!) O(log2n)&#x3001;O(n)&#x3001;O(nlog2n)&#x3001;O(n2)&#x548C;O(n3)&#x7A31;&#x70BA; &#x591A;&#x9805;&#x5F0F;&#x6642;&#x9593; O(2n)&#x548C;O(n!)&#x7A31;&#x70BA; &#x6307;&#x6578;&#x6642;&#x9593; &#x96D9;&#x7AEF;&#x968A;&#x5217;&#xFF08;Deque&#xFF09; Deque &#x5728;&#x539F;&#x6709;&#x968A;&#x5217;&#x7684;&#x57FA;&#x790E;&#x4E0A;&#x64F4;&#x5145;&#x4E86;&#xFF1A;&#x968A;&#x982D;&#x3001;&#x968A;&#x5C3E;&#x90FD;&#x53EF;&#x4EE5;&#x9032;&#x968A;&#x51FA;&#x968A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 function Deque ( ) { let items = [] this .addFirst = function ( e ) { items.unshift(e) } this .removeFirst = function ( ) { return items.shift() } this .addLast = function ( e ) { items.push(e) } this .removeLast = function ( ) { return items.pop() } }"},"string/queue.html#雙端隊列（Deque）":{"title":"&#x96D9;&#x7AEF;&#x968A;&#x5217;&#xFF08;Deque&#xFF09;","path":"\\javascript\\string\\queue.html#雙端隊列（Deque）","body":"Deque &#x5728;&#x539F;&#x6709;&#x968A;&#x5217;&#x7684;&#x57FA;&#x790E;&#x4E0A;&#x64F4;&#x5145;&#x4E86;&#xFF1A;&#x968A;&#x982D;&#x3001;&#x968A;&#x5C3E;&#x90FD;&#x53EF;&#x4EE5;&#x9032;&#x968A;&#x51FA;&#x968A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 function Deque ( ) { let items = [] this .addFirst = function ( e ) { items.unshift(e) } this .removeFirst = function ( ) { return items.shift() } this .addLast = function ( e ) { items.push(e) } this .removeLast = function ( ) { return items.pop() } }"},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{"title":"&#x7D93;&#x5178;&#x7684;&#x96D9;&#x7AEF;&#x968A;&#x5217;&#x554F;&#x984C;&#xFF1A;&#x7FFB;&#x8F49;&#x5B57;&#x7B26;&#x4E32;&#x88E1;&#x7684;&#x55AE;&#x8A5E;","path":"\\javascript\\string\\queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞","body":"&#x8F38;&#x5165;: &#x201C;a good example&#x201D; &#x8F38;&#x51FA;: &#x201C;example good a&#x201D; &#x89E3;&#x91CB;: &#x5982;&#x679C;&#x5169;&#x500B;&#x55AE;&#x8A5E;&#x9593;&#x6709;&#x591A;&#x9918;&#x7684;&#x7A7A;&#x683C;&#xFF0C;&#x5C07;&#x53CD;&#x8F49;&#x5F8C;&#x55AE;&#x8A5E;&#x9593;&#x7684;&#x7A7A;&#x683C;&#x6E1B;&#x5C11;&#x5230;&#x53EA;&#x542B;&#x4E00;&#x500B;&#x3002; &#x8AAA;&#x660E;&#xFF1A; &#x7121;&#x7A7A;&#x683C;&#x5B57;&#x7B26;&#x69CB;&#x6210;&#x4E00;&#x500B;&#x55AE;&#x8A5E;&#x3002; &#x8F38;&#x5165;&#x5B57;&#x7B26;&#x4E32;&#x53EF;&#x4EE5;&#x5728;&#x524D;&#x9762;&#x6216;&#x8005;&#x5F8C;&#x9762;&#x5305;&#x542B;&#x591A;&#x9918;&#x7684;&#x7A7A;&#x683C;&#xFF0C;&#x4F46;&#x662F;&#x53CD;&#x8F49;&#x5F8C;&#x7684;&#x5B57;&#x7B26;&#x4E0D;&#x80FD;&#x5305;&#x62EC;&#x3002; &#x5982;&#x679C;&#x5169;&#x500B;&#x55AE;&#x8A5E;&#x9593;&#x6709;&#x591A;&#x9918;&#x7684;&#x7A7A;&#x683C;&#xFF0C;&#x5C07;&#x53CD;&#x8F49;&#x5F8C;&#x55AE;&#x8A5E;&#x9593;&#x7684;&#x7A7A;&#x683C;&#x6E1B;&#x5C11;&#x5230;&#x53EA;&#x542B;&#x4E00;&#x500B;&#x3002; &#x89E3;&#x984C;&#x601D;&#x8DEF;&#xFF1A;&#x4F7F;&#x7528;&#x96D9;&#x7AEF;&#x968A;&#x5217;&#x89E3;&#x984C; &#x9996;&#x5148;&#x53BB;&#x9664;&#x5B57;&#x7B26;&#x4E32;&#x5DE6;&#x53F3;&#x7A7A;&#x683C; &#x9010;&#x500B;&#x8B80;&#x53D6;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;&#x6BCF;&#x500B;&#x55AE;&#x8A5E;&#xFF0C;&#x4F9D;&#x6B21;&#x653E;&#x5165;&#x96D9;&#x7AEF;&#x968A;&#x5217;&#x7684;&#x5C0D;&#x982D; &#x518D;&#x5C07;&#x968A;&#x5217;&#x8F49;&#x63DB;&#x6210;&#x5B57;&#x7B26;&#x4E32;&#x8F38;&#x51FA;&#xFF08;&#x5DF2;&#x7A7A;&#x683C;&#x70BA;&#x5206;&#x9694;&#x7B26;&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 var reverseWords = function ( s ) { let left = 0 let right = s.length - 1 let queue = [] let word = &apos;&apos; while (s.charAt(left) === &apos; &apos; ) left ++ while (s.charAt(right) === &apos; &apos; ) right -- while (left = right) { let char = s.charAt(left) if (char === &apos; &apos; &amp;&amp; word) { queue.unshift(word) word = &apos;&apos; } else if (char !== &apos; &apos; ){ word += char } left++ } console .log(word) // example queue.unshift(word) console .log(queue) // [example, good, a] return queue.join( &apos; &apos; ) }; const ans = reverseWords( a good example ) console .log(ans) // example good a &#x6B63;&#x5219; + JS API 1 2 3 var reverseWords = function ( s ) { return s.trim().replace( /\\s+/g , &apos; &apos; ).split( &apos; &apos; ).reverse().join( &apos; &apos; ) };"},"string/queue.html#References":{"title":"References","path":"\\javascript\\string\\queue.html#References","body":"&#x524D;&#x7AEF;&#x8FDB;&#x9636;&#x7B97;&#x6CD5;&#xFF1A;&#x4E00;&#x770B;&#x5C31;&#x61C2;&#x7684;&#x961F;&#x5217;&#x53CA;&#x914D;&#x5957;&#x7B97;&#x6CD5;&#x9898;"}}}