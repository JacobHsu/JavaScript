{"index":{"version":"2.1.0","fields":["title","body"],"fieldVectors":[["title/ajax.html",[0,4.071]],["body/ajax.html",[0,3.027,1,0.303,2,0.36,3,0.393,4,0.485,5,0.505,6,0.572,7,0.754,8,0.833,9,1.017,10,0.945,11,1.271,12,0.931,13,4.115,14,0.037,15,2.172,16,4.008,17,4.115,18,2.485,19,1.295,20,4.115,21,1.017,22,4.115,23,4.115,24,2.569,25,4.115,26,4.115,27,1.679,28,4.115,29,3.489,30,3.489,31,2.767,32,2.662,33,4.115,34,1.679,35,4.115,36,1.113,37,1.309,38,1.19,39,0.89,40,0.939,41,1.076,42,1.121,43,1.186,44,1.17,45,1.257,46,3.856,47,5.341,48,4.115,49,4.115,50,4.115,51,4.713,52,5.961,53,4.115,54,2.887,55,2.887,56,4.115,57,4.115,58,1.444,59,4.115,60,5.961,61,4.115,62,0.836,63,4.115,64,4.115,65,2.767,66,4.115,67,3.687,68,4.115,69,4.115,70,4.115,71,4.115,72,4.115,73,4.115,74,4.115,75,4.115,76,4.115,77,4.115,78,4.115,79,4.115,80,4.115,81,4.115,82,4.115,83,3.406,84,5.961,85,4.933,86,4.115,87,4.384,88,4.933,89,4.115,90,7.009,91,4.115,92,4.115,93,4.115,94,4.115,95,5.961,96,4.115,97,4.115,98,5.961,99,4.115,100,4.115,101,5.961,102,3.195,103,4.115,104,4.115,105,4.115,106,4.115,107,4.115,108,3.406,109,3.027,110,4.115,111,3.406,112,4.115,113,3.406,114,1.957,115,3.841,116,4.135,117,3.406,118,4.375,119,2.347,120,1.967,121,2.569,122,3.406,123,2.215]],["title/RegExp.html",[14,0.015,124,4.149]],["body/RegExp.html",[1,0.296,2,0.364,3,0.359,4,0.404,9,0.968,12,0.886,14,0.037,19,1.739,34,2.254,58,1.544,62,0.72,123,2.974,125,5.527,126,5.527,127,5.527,128,5.527,129,5.527,130,5.527,131,5.527,132,9.655,133,8.197,134,7.314,135,8.724,136,7.314,137,5.527,138,5.527,139,3.877,140,1.962,141,5.527,142,5.527,143,5.527,144,5.527,145,0.902,146,5.527,147,5.527,148,5.527,149,8.13,150,5.527,151,5.527,152,7.314,153,5.527,154,1.444,155,5.527,156,5.131,157,7.314,158,7.314,159,4.918,160,7.314,161,8.197,162,7.314,163,7.314,164,2.641,165,1.765,166,5.527,167,5.527,168,4.065,169,4.952,170,4.952,171,7.345,172,7.345,173,6.553,174,4.952,175,3.716,176,4.574,177,4.952,178,4.574]],["title/RegExp.html#match",[168,4.071]],["body/RegExp.html#match",[1,0.282,2,0.301,3,0.329,4,0.415,14,0.036,58,1.328,62,0.659,123,4.039,140,2.038,169,6.724,170,6.724,171,7.937,172,7.937,173,7.937,174,6.724,175,5.046,176,6.21,177,6.724,178,6.21,179,7.504,180,7.504,181,7.504,182,4.148]],["title/RESTfulAPI.html",[18,2.506,183,2.911]],["body/RESTfulAPI.html",[1,0.203,2,0.256,14,0.037,18,6.006,29,4.697,37,1.192,46,6.434,183,5.629,184,5.716,185,5.716,186,6.38,187,6.38,188,6.38,189,6.38,190,6.38,191,7.189,192,5.716,193,5.716,194,5.716,195,5.716,196,6.38,197,6.38,198,8.023,199,6.38,200,6.38,201,6.38,202,7.189,203,6.229,204,6.38,205,5.716,206,5.716,207,5.279,208,5.716,209,7.189,210,5.716,211,5.716,212,2.602,213,5.716,214,5.716,215,7.189,216,5.716,217,5.716,218,4.692,219,5.716,220,5.716,221,5.716]],["title/RESTfulAPI.html#動詞",[222,4.96]],["body/RESTfulAPI.html#動詞",[14,0.031,29,4.347,46,6.07,183,5.21,185,6.654,191,7.888,192,6.654,193,6.654,194,6.654,195,6.654,222,6.654,223,7.426,224,7.426,225,7.426,226,7.426,227,7.426,228,7.426,229,7.426,230,7.426,231,7.426,232,7.426,233,7.426,234,7.426,235,7.426,236,7.426,237,7.426,238,7.426,239,7.426,240,7.426,241,7.426,242,5.21,243,7.426,244,7.426,245,7.426,246,6.654,247,7.426,248,7.426]],["title/RESTfulAPI.html#狀態碼",[249,5.535]],["body/RESTfulAPI.html#狀態碼",[1,0.236,2,0.298,18,5.982,29,4.347,202,7.888,203,6.835,205,6.654,206,6.654,207,6.145,208,6.654,209,6.654,210,6.654,211,6.654,250,7.426,251,7.426,252,7.426,253,7.426,254,7.426,255,7.426,256,7.426,257,7.426,258,7.426,259,7.426,260,7.426,261,7.426,262,7.426,263,7.426,264,7.426,265,7.426,266,7.426,267,7.426,268,7.426,269,5.766,270,7.426,271,7.426]],["title/RESTfulAPI.html#References",[212,2.258]],["body/RESTfulAPI.html#References",[18,5.557,37,1.496,213,7.177,214,7.177,215,8.244,216,7.177,217,7.177,218,5.892,219,7.177,220,7.177,221,7.177]],["title/asynchronous.html",[272,5.535]],["body/asynchronous.html",[1,0.312,2,0.386,3,0.422,4,0.518,5,0.618,6,0.601,7,0.731,8,0.808,9,0.98,10,0.825,11,1.11,12,1.003,14,0.038,15,2.565,18,2.303,21,1.24,32,3.647,36,1.065,37,1.253,38,0.761,39,0.825,40,0.87,58,1.64,62,0.882,113,3.155,114,2.048,115,4.877,116,3.988,117,3.155,118,4.187,119,2.415,120,1.822,121,2.38,122,3.155,123,2.052,273,3.416,274,3.953,275,5.051,276,2.956,277,3.988,278,3.813,279,3.416,280,6.639,281,3.813,282,2.303,283,2,284,4.37,285,3.813,286,3.813,287,1.426,288,3.813,289,2.232,290,3.155,291,1.426,292,1.863,293,3.416]],["title/asynchronous.html#異步",[294,5.535]],["body/asynchronous.html#異步",[1,0.309,2,0.39,3,0.426,4,0.522,5,0.5,6,0.567,7,0.748,8,0.826,9,1.069,10,0.994,11,1.337,14,0.037,15,2.224,21,1.141,36,1.283,37,1.509,38,1.072,39,1.162,40,1.225,58,1.637,62,0.889,113,4.444,114,2.104,115,4.493,116,4.642,117,4.444,118,5.045,119,2.745,120,2.567,121,3.353,122,4.444,123,2.89,273,4.812,295,5.371]],["title/asynchronous.html#setTimeout",[115,2.767]],["body/asynchronous.html#setTimeout",[1,0.299,2,0.361,3,0.394,4,0.481,5,0.625,6,0.583,7,0.623,8,0.688,9,0.647,12,1.09,14,0.037,15,2.572,18,2.954,21,1.242,32,4.357,58,1.541,62,0.837,114,1.724,115,4.693,274,4.351,275,6.035,276,3.254,277,4.466,279,4.383,280,7.436,282,2.954,283,2.566,284,4.81,287,1.829,292,2.39,293,4.383,296,4.892,297,4.892,298,4.892,299,4.892,300,4.892,301,4.892,302,5.573,303,4.892,304,4.892,305,4.892,306,4.383,307,4.892,308,4.892,309,4.892,310,4.892,311,4.892,312,4.892,313,4.892,314,4.892,315,4.892,316,4.892,317,4.892,318,4.892,319,4.892,320,4.892,321,4.892,322,4.892,323,4.892,324,4.892,325,4.892,326,4.725,327,4.892,328,4.892,329,4.892,330,4.892,331,4.892,332,4.892,333,4.892,334,4.892]],["title/arrowFunction.html",[14,0.019]],["body/arrowFunction.html",[1,0.285,2,0.36,3,0.393,4,0.423,5,0.474,6,0.595,7,0.708,8,0.782,9,1.013,10,0.729,14,0.038,19,1.865,21,0.784,62,0.787,114,1.863,140,1.656,145,1.25,154,2.217,335,3.701,336,8.032,337,2.445,338,4.24,339,3.467,340,5.945,341,5.095,342,3.867,343,4.361,344,2.773,345,4.603,346,4.361,347,4.603,348,2.559,349,7.599,350,6.861,351,5.312]],["title/arrowFunction.html#Arrow-Function",[21,0.549,335,2.59]],["body/arrowFunction.html#Arrow-Function",[1,0.284,2,0.359,3,0.391,4,0.421,5,0.472,6,0.593,7,0.705,8,0.778,9,1.008,10,0.723,14,0.037,19,1.85,62,0.785,114,1.857,140,1.647,145,1.243,154,2.208,242,5.343,336,8.007,337,2.432,338,3.808,339,3.457,340,5.913,341,5.079,342,3.855,343,4.325,344,2.75,345,4.565,346,4.325,348,2.545,349,7.569,350,6.824,351,5.269,352,5.88,353,5.88,354,5.88,355,5.88,356,5.88,357,6.824,358,4.866,359,5.88,360,5.88,361,5.88,362,5.88,363,5.88,364,5.88,365,5.88,366,5.88,367,2.75,368,5.88]],["title/es6.html",[6,0.291,369,3.717]],["body/es6.html",[1,0.281,2,0.355,3,0.328,6,0.525,14,0.036,87,7.475,289,4.381,369,6.706,370,6.505,371,6.867,372,7.925,373,6.706,374,6.867,375,6.706,376,6.706,377,6.706,378,4.381,379,7.485]],["title/es6.html#Module-的加载实现",[370,3.052,380,4.149]],["body/es6.html#Module-的加载实现",[1,0.283,2,0.358,3,0.332,14,0.027,87,7.494,289,4.44,370,5.578,371,6.92,372,7.987,373,6.796,374,6.92,375,6.796,376,6.796,377,6.796,378,4.44,381,7.584,382,7.584,383,7.584,384,4.735,385,7.584,386,7.584,387,7.584]],["title/closures.html",[388,3.06]],["body/closures.html",[1,0.287,2,0.398,3,0.41,4,0.499,5,0.598,6,0.624,7,0.881,8,0.87,9,1.093,10,1.093,11,1.249,12,1.056,14,0.038,21,1.277,36,1.312,37,1.174,38,1.038,40,1.187,44,0.973,62,0.837,114,1.717,140,1.719,145,1.554,156,3.648,164,2.485,165,1.66,338,1.712,348,1.144,389,4.659,390,3.424,391,2.34,392,3.14,393,1.506,394,4.037,395,5.2,396,6.288,397,3.303,398,5.577,399,6.288,400,6.288,401,6.288,402,6.288,403,3.216,404,3.424,405,4.171,406,3.424,407,7.123,408,5.077,409,2.101,410,3.424,411,3.424,412,5.2,413,3.424,414,3.424,415,3.424,416,1.843,417,3.825,418,6.292,419,2.215,420,2.658,421,2.518,422,4.659,423,4.659,424,3.068,425,3.068,426,3.068,427,3.068,428,3.068,429,3.068,430,3.068,431,3.068,432,1.892,433,3.068,434,3.068,435,3.068]],["title/closures.html#傳多個函數",[436,5.535]],["body/closures.html#傳多個函數",[1,0.282,2,0.385,3,0.413,4,0.49,5,0.569,6,0.622,7,0.774,8,0.768,9,0.762,10,0.708,14,0.037,21,1.248,40,1.715,62,0.735,114,1.197,140,1.918,145,1.539,165,1.84,389,5.162,403,3.831,407,5.162,408,5.625,409,2.254,418,7.495,421,4.237,422,6.734,423,6.734,424,5.162,425,5.162,426,5.162,427,5.162,428,5.162,429,5.162,430,5.162,431,5.162,432,3.184,433,5.162,434,5.162,435,5.162,437,3.753,438,5.761]],["title/export.html",[]],["body/export.html",[1,0.301,2,0.38,3,0.415,14,0.033,21,1.003,109,5.578,120,3.624,139,6.641,378,5.542,439,6.796,440,8.482,441,6.796,442,6.796,443,5.32,444,6.796,445,8.914,446,6.796,447,7.584]],["title/export.html#export",[139,3.883]],["body/export.html#export",[1,0.3,2,0.379,3,0.413,14,0.036,21,0.995,109,5.534,120,3.596,139,6.224,378,5.523,439,6.742,440,8.454,441,6.742,442,6.742,443,5.278,444,6.742,446,6.742,448,8.872,449,7.524]],["title/copy.html",[450,2.979]],["body/copy.html",[1,0.273,2,0.345,3,0.377,4,0.475,5,0.532,6,0.586,7,0.593,8,0.655,9,0.468,10,1.169,11,0.585,12,1.142,14,0.037,15,1.095,19,2.016,21,0.848,36,0.561,37,0.66,38,0.706,39,0.764,40,0.806,41,0.924,42,0.963,43,1.019,44,2.547,45,1.079,62,0.857,114,1.332,119,2.737,140,1.152,145,0.869,154,0.924,165,2.862,212,1.442,291,1.321,337,1.128,343,2.599,348,1.181,393,3.139,409,2.396,450,4.121,451,3.534,452,3.167,453,1.258,454,1.902,455,3.167,456,6.593,457,3.182,458,6.323,459,4.977,460,6.143,461,5.631,462,3.534,463,3.534,464,4.408,465,4.616,466,2.925,467,2.925,468,2.925,469,2.925,470,6.484,471,4.408,472,4.977,473,4.135,474,4.135,475,3.534,476,2.286,477,2.479,478,2.925,479,2.925,480,1.079,481,1.128,482,2.599,483,2.479,484,2.925,485,2.744,486,2.925,487,2.925,488,2.925,489,2.944,490,2.925,491,3.534,492,2.925,493,2.376,494,2.32,495,5.249,496,4.408,497,2.545,498,2.255,499,1.809,500,4.408,501,2.925,502,2.925,503,2.069,504,5.305,505,4.408,506,2.925,507,2.744,508,2.925,509,2.925,510,2.925,511,4.977,512,3.167,513,1.555,514,3.534,515,3.534,516,4.448,517,3.167,518,3.446,519,4.773,520,3.534,521,2.925,522,2.599,523,3.167,524,3.167]],["title/copy.html#淺拷貝-Shallow-Copy",[450,2.233,525,4.149]],["body/copy.html#淺拷貝-Shallow-Copy",[1,0.261,2,0.329,3,0.359,4,0.453,5,0.508,6,0.575,7,0.557,8,0.615,9,0.552,10,1.146,11,0.69,12,1.092,14,0.038,15,1.292,19,1.312,21,0.552,36,0.662,37,0.779,38,0.832,39,0.902,40,0.951,41,1.09,42,1.136,43,1.202,44,2.427,45,1.273,62,0.819,119,2.753,140,1.301,145,0.982,154,1.09,165,2.811,212,1.701,291,1.559,337,1.331,343,3.067,393,2.647,409,2.401,450,3.8,452,3.736,453,1.484,454,2.244,455,3.736,456,5.686,457,3.09,458,5.686,459,4.672,460,5.686,461,5.193,464,3.45,465,3.893,466,3.45,467,3.45,468,3.45,469,3.45,470,6.002,471,4.98,472,3.237,473,3.237,474,3.237,476,2.697,477,2.925,478,3.45,479,3.45,480,1.273,481,1.331,482,3.067,483,2.925,484,3.45,485,3.237,486,3.45,487,3.45,488,3.45,489,3.326,490,3.45,492,3.45,493,2.804,494,2.035,495,5.686,496,3.45,497,2.876,498,1.765,500,4.98,501,3.45,502,3.45,503,2.441,504,5.843,505,4.98,506,3.45,507,3.237,508,3.45,509,3.45,510,3.45,526,4.169,527,4.169,528,5.392,529,4.169,530,4.169,531,4.169,532,4.169,533,4.169,534,3.736,535,3.237,536,3.736,537,3.736,538,3.736,539,3.736,540,3.736,541,3.736,542,3.736,543,5.392,544,3.736,545,3.736,546,3.736]],["title/copy.html#深拷貝-Deep-Copy",[450,2.233,534,3.717]],["body/copy.html#深拷貝-Deep-Copy",[1,0.242,2,0.306,3,0.334,4,0.421,5,0.472,6,0.535,7,0.614,8,0.678,9,0.634,10,1.062,11,0.793,12,0.997,14,0.038,15,1.486,19,1.508,21,0.634,36,0.761,37,0.895,38,0.957,39,1.037,40,1.094,41,1.253,42,1.306,43,1.382,44,2.166,45,1.464,62,0.785,119,2.639,140,1.436,145,1.084,154,1.253,165,2.627,337,1.53,343,3.525,393,2.921,409,2.197,450,3.574,456,4.885,457,2.757,458,5.605,459,3.721,460,5.605,461,4.885,464,3.966,465,4.296,466,3.966,467,3.966,468,3.966,469,3.966,470,6.387,471,5.496,472,3.721,473,3.721,474,3.721,476,3.101,477,3.362,478,3.966,479,3.966,480,1.464,481,1.53,482,3.525,483,3.362,484,3.966,485,3.721,486,3.966,487,3.966,488,3.966,489,3.671,490,3.966,492,3.966,493,3.223,494,2.197,495,6.051,496,3.966,497,3.174,498,2.029,500,5.496,501,3.966,502,3.966,503,2.806,504,6.306,505,5.496,506,3.966,507,3.721,508,3.966,509,3.966,510,3.966,528,4.295,535,3.721,536,4.295,537,4.295,538,4.295,539,4.295,540,4.295,541,4.295,542,4.295,543,5.95,544,4.295,545,4.295,546,4.295]],["title/copy.html#Object-assign",[511,4.298]],["body/copy.html#Object-assign",[1,0.225,2,0.284,3,0.31,4,0.391,5,0.438,6,0.497,10,1.13,12,1.036,14,0.037,44,2.431,62,0.751,119,2.612,165,2.935,409,2.337,456,6.761,457,3.325,458,5.205,459,5.494,460,5.205,461,5.205,494,2.04,511,5.494,512,6.34,513,3.113,535,5.494,547,7.076,548,7.076,549,7.076,550,7.076,551,7.076]],["title/copy.html#轉成-JSON-再轉回來",[516,1.834,552,3.318,553,3.318]],["body/copy.html#轉成-JSON-再轉回來",[1,0.254,2,0.32,3,0.35,4,0.441,5,0.494,6,0.444,7,0.585,8,0.646,10,0.981,12,1.112,14,0.037,19,2.51,21,0.837,44,2.267,62,0.862,114,1.816,393,3.51,450,3.403,456,5.868,458,6.429,460,5.868,461,4.651,465,4.091,470,6.786,472,4.909,473,4.909,474,4.909,516,5.074,517,5.666,518,5.161,519,7.149,521,5.233,522,4.651,523,5.666,524,5.666,535,4.909,554,6.323,555,6.323,556,6.323,557,6.323,558,6.323,559,6.323]],["title/event.html",[560,4.96]],["body/event.html",[1,0.265,2,0.334,3,0.365,4,0.46,5,0.516,6,0.585,7,0.77,8,0.692,9,0.896,12,1.009,14,0.037,21,0.896,51,4.555,164,3.237,561,6.069,562,7.462,563,8.429,564,8.429,565,7.462,566,6.069,567,6.069,568,6.069,569,3.646,570,4.752,571,6.069,572,6.069,573,7.462,574,6.069,575,6.069,576,6.069]],["title/event.html#代理",[577,5.535]],["body/event.html#代理",[1,0.264,2,0.333,3,0.363,4,0.458,5,0.513,6,0.582,7,0.767,8,0.687,9,0.89,12,1.005,14,0.037,21,0.89,51,4.522,164,3.214,561,6.026,562,7.429,563,7.429,564,8.408,565,7.429,566,6.026,567,6.026,568,6.026,569,3.62,570,4.718,571,6.026,573,6.026,574,6.026,575,6.026,576,6.026,578,6.726,579,6.726,580,6.726,581,6.726,582,6.726,583,6.726,584,6.726,585,6.026,586,6.726,587,6.726,588,3.718]],["title/index.html",[589,2.033,590,2.033,591,2.033,592,2.033]],["body/index.html",[1,0.293,14,0.034,159,4.299,175,4.299,203,4.964,218,4.703,341,3.634,419,4.136,489,4.856,569,4.961,589,7.318,590,7.129,591,6.779,592,6.462,593,5.729,594,5.729,595,7.156,596,5.729,597,5.729,598,5.729,599,5.198,600,5.729,601,5.729,602,5.729,603,5.729,604,5.729,605,5.729,606,5.729,607,5.729,608,5.729,609,5.729,610,7.271,611,5.729,612,4.964,613,8.259,614,7.199,615,5.016,616,4.964,617,7.199,618,5.729,619,5.729,620,5.729,621,5.729,622,5.729,623,7.199,624,5.729,625,5.729,626,5.729,627,4.964,628,5.729,629,5.729,630,5.729,631,5.729,632,5.729,633,6.649,634,6.649,635,5.729,636,5.729]],["title/index.html#hexo-theme-doc-seed",[589,2.033,590,2.033,591,2.033,592,2.033]],["body/index.html#hexo-theme-doc-seed",[14,0.027,489,5.244,569,4.812,589,6.978,590,6.978,591,5.608,592,5.608,593,6.832,594,6.832,595,6.942,596,6.832,597,6.832,598,6.832,599,4.933,600,6.832,601,6.832,602,6.832,603,6.832,604,6.832,605,6.832,606,6.832,607,6.832,608,6.832]],["title/index.html#Getting-Started",[609,3.717,610,3.433]],["body/index.html#Getting-Started",[1,0.305,14,0.034,159,4.806,175,4.806,203,5.549,341,4.062,419,4.624,569,3.847,589,7.047,590,6.329,591,6.329,592,5.257,595,5.549,599,4.624,610,7.12,611,6.404,612,5.549,613,8.585,614,7.71,615,5.371,616,5.549,617,7.71,618,6.404,619,6.404,620,6.404,621,6.404,622,6.404,623,7.71,624,6.404,625,6.404,626,6.404,627,5.549,628,6.404,629,6.404,630,6.404,631,6.404,632,6.404]],["title/index.html#More-Informations",[633,3.433,634,3.433]],["body/index.html#More-Informations",[14,0.029,218,5.976,569,4.372,595,6.307,633,6.723,634,6.723,635,7.28,636,7.28]],["title/core.html",[14,0.015,637,1.325]],["body/core.html",[0,0.456,1,0.312,2,0.382,3,0.409,4,0.493,5,0.546,6,0.596,7,0.76,8,0.814,9,0.982,10,0.985,11,1.112,12,1.118,14,0.038,15,1.542,16,0.417,19,1.565,21,1.223,24,0.387,27,1.029,30,0.687,32,0.401,34,1.769,36,1.082,37,1.218,38,1.211,39,1.189,40,1.217,41,1.437,42,1.243,43,1.25,44,1.088,45,1.082,58,1.29,62,0.867,114,1.871,115,0.587,119,1.576,120,1.544,140,1.312,145,1.01,154,1.437,164,0.798,165,0.924,212,0.253,274,1.261,276,1.082,277,1.14,282,0.375,283,0.326,284,0.343,287,0.943,291,1.431,335,0.387,337,0.676,338,0.31,339,1.25,340,0.482,344,0.781,345,0.482,346,0.456,348,1.783,388,0.343,391,2.237,392,1.747,393,1.11,403,3.457,405,0.326,408,0.417,409,1.265,416,0.334,417,0.456,421,0.863,432,0.343,450,0.334,453,1.362,454,0.334,457,0.913,465,0.759,476,2.476,480,1.082,481,1.131,482,1.856,489,1.395,494,2.059,495,0.456,497,0.798,498,0.707,499,2.22,503,0.687,513,1.11,516,2.115,518,1.37,521,0.514,569,0.334,572,1.052,612,0.911,637,1.131,638,0.456,639,0.621,640,2.088,641,1.052,642,0.556,643,0.556,644,0.556,645,0.556,646,0.556,647,1.485,648,0.621,649,3.96,650,1.322,651,1.174,652,2.756,653,0.435,654,0.863,655,0.733,656,0.789,657,0.759,658,0.855,659,0.387,660,0.733,661,0.765,662,0.863,663,0.401,664,0.318,665,1.043,666,0.401,667,0.401,668,0.363,669,0.401,670,3.125,671,0.709,672,0.733,673,0.387,674,2.723,675,1.471,676,0.387,677,0.375,678,0.363,679,0.363,680,0.363,681,0.363,682,0.621,683,0.363,684,0.667,685,1.693,686,0.363,687,0.363,688,0.363,689,0.363,690,0.363,691,0.363,692,0.363,693,0.363,694,1.035,695,0.687,696,0.363,697,0.363,698,0.687,699,0.363,700,0.363,701,1.132,702,1.407,703,1.139,704,0.864,705,0.864,706,0.88,707,0.88,708,0.834,709,0.88,710,0.694,711,0.735,712,1.174,713,0.621,714,0.353,715,0.353,716,0.353,718,0.621,719,0.353,720,0.326,721,0.353,722,0.923,723,0.343,724,0.343,725,0.343,726,0.343,727,0.343,728,0.621,729,0.488,730,0.47,731,0.488,732,0.506,733,0.72,734,0.488,735,0.506,736,0.516,737,0.516,738,0.516,739,0.506,740,0.516,741,0.538,742,0.538,743,0.538,744,1.528,745,0.538,746,0.538,747,0.538,748,0.538,749,0.318,750,0.334,751,1.739,752,1.059,753,0.621,754,2.377,755,3.541,756,1.059,757,0.632,758,0.899,759,0.632,760,0.621,761,0.899,762,0.334,763,0.334,764,1.77,765,0.334,766,0.334,767,0.561,768,0.334,769,2.815,770,1.035,771,0.334,772,0.334,773,0.334,774,0.334,775,0.334,776,0.549,777,2.508,778,1.496,779,1.228,780,2.592,781,0.482,782,0.621,783,1.052,784,1.382,785,1.052,786,1.052,787,1.052,788,1.052,789,1.052,790,0.514,791,0.514,792,0.514,793,0.514,794,0.514,795,0.514,796,1.297,797,0.514,798,0.514,799,0.482,800,0.482,801,0.556,802,1.297,803,0.482,804,0.911,805,0.482,806,0.482,807,1.052,808,0.482,809,0.621,810,0.823,811,0.417,812,1.395,813,0.482,814,0.482,815,0.482,816,0.482,817,0.482,818,0.911,819,1.297,820,0.482,821,1.174,822,0.482,823,1.228,824,0.971,825,1.228,826,0.456,827,0.456,828,0.456,829,0.456,830,0.456,831,0.417,832,1.14,833,0.759,834,1.325,835,0.621,836,0.456,837,0.456,838,0.456,839,0.456,840,0.621,841,0.435,842,0.435,843,0.621,844,0.789,845,0.435,846,0.435,847,0.435,848,0.417,849,0.435,850,0.435,851,0.435,852,0.514,853,0.789,854,0.417,855,0.789,856,0.417,857,0.417,858,1.123,859,1.123,860,0.417,861,0.789,862,0.417,863,1.424,864,0.621,865,0.417,866,0.417,867,0.417,868,0.789,869,2.291,870,0.621,871,0.621,872,1.279,873,0.401,874,0.978,875,0.401,876,0.759,877,0.401,878,0.401,879,0.401,880,0.401,881,0.401,882,0.401,883,1.059,884,0.387,885,0.387,886,0.387,887,0.621,888,0.733,889,1.111,890,0.387,891,1.693,892,2.146,893,0.375,894,0.375,895,0.375,896,0.978,897,0.978,898,0.687,899,1.747,900,1.064,901,0.949,902,0.375,903,0.621,904,0.621,905,1.897,906,0.556,907,0.556,908,0.556,909,1.052,910,0.556,911,0.556,912,0.456,913,0.971,914,0.556,915,0.949,916,0.709,917,0.733,918,1.172,919,0.621,920,1.052,921,0.482,922,0.482,923,0.556,924,0.556,925,0.556,926,0.556,927,2.592,928,2.592,929,0.556,930,0.556,931,1.382,932,0.556,933,2.261,934,3.429,935,0.621,936,0.556,937,1.382,938,0.621,939,1.897,940,1.052,941,0.556,942,1.052,943,0.556,944,0.556,945,2.484,946,1.382,947,1.871,948,0.514,949,0.514,950,1.959,951,0.911,952,1.897,953,0.514,954,0.514,955,0.621,956,0.971,957,0.514,958,0.514,959,0.514,960,0.514,961,0.514,962,0.514,963,0.863,964,0.514,965,0.863,966,0.514,967,0.863,968,0.514,969,0.863,970,0.514,971,1.297,972,1.496,973,0.556,974,1.297,975,0.556,976,0.556,977,0.621,978,0.556,979,0.556,980,0.556,981,0.556,982,1.052,983,1.174,984,0.556,985,0.556,986,0.556,987,null,988,1.052,989,0.556,990,0.556,991,0.556,992,0.556,993,0.556,994,0.318,995,0.789,996,2.592,997,0.556,998,0.556,999,1.052,1000,1.496,1001,0.556,1002,0.556,1003,1.052,1004,0.556,1005,0.556,1006,0.556,1007,1.052,1008,1.496,1009,1.496,1010,1.052,1011,3.386,1012,0.971,1013,0.556,1014,1.897,1015,0.556,1016,1.08,1017,1.052,1018,1.174,1019,0.556,1020,0.863,1021,1.052,1022,0.556,1023,0.556,1024,0.556,1025,0.556,1026,0.556,1027,0.621,1028,0.556,1029,1.052,1030,0.556,1031,1.123,1032,0.971,1033,0.482,1034,0.556,1035,1.052,1036,0.514,1037,0.556,1038,0.556,1039,0.556,1040,0.556,1041,0.556,1042,0.556,1043,0.621,1044,0.621,1045,0.556,1046,0.556,1047,0.556,1048,0.556,1049,1.496,1050,1.558,1051,0.971,1052,0.621,1053,1.382,1054,0.556,1055,1.052,1056,0.556,1057,1.496,1058,1.052,1059,0.556,1060,0.556,1061,0.556,1062,0.456,1063,1.052,1064,0.556,1065,0.556,1066,0.556,1067,0.556,1068,0.556,1069,0.556,1070,0.556,1071,0.556,1072,0.401,1073,1.052,1074,1.052,1075,1.052,1076,1.897,1077,1.897,1078,0.556,1079,1.052,1080,1.052]],["title/core.html#JavaScript-直譯器轉換過程",[637,1.325,1081,4.149]],["body/core.html#JavaScript-直譯器轉換過程",[1,0.312,2,0.381,3,0.396,4,0.478,5,0.518,6,0.552,7,0.712,8,0.747,9,0.903,10,1.029,11,0.872,12,1.114,14,0.037,15,1.448,19,2.301,21,1.133,27,1.906,34,1.906,36,0.981,37,0.873,38,0.933,39,0.645,40,0.68,41,1.221,42,0.812,43,0.859,44,0.847,45,0.91,58,1.417,62,0.885,114,2.036,115,0.864,119,0.91,140,0.85,145,0.282,154,1.912,164,1.878,165,1.492,182,0.955,276,0.646,283,0.907,287,0.646,291,0.646,338,0.864,339,1.153,344,0.808,348,2.18,358,1.43,367,0.808,391,1.786,393,2.319,403,3.727,405,0.907,409,1.735,417,1.271,421,2.192,432,0.955,437,1.262,453,2.051,457,1.078,480,0.91,481,0.952,494,1.78,497,1.878,513,1.311,588,2.172,637,1.254,640,2.466,641,2.671,642,1.549,643,1.549,644,1.549,645,1.549,646,1.549,649,0.93,650,1.861,653,1.213,654,1.271,655,1.861,656,2.004,657,1.928,658,0.885,659,1.079,660,1.861,661,0.792,662,2.192,663,1.118,664,0.885,665,2.453,666,1.118,667,1.118,668,1.012,669,1.118,670,2.656,671,1.044,672,1.861,673,1.079,674,2.535,675,2.565,676,1.079,677,1.044,678,1.012,679,1.012,680,1.012,681,1.012,683,1.012,684,0.983,685,3.085,686,1.012,687,1.012,688,1.012,689,1.012,690,1.012,691,1.012,692,1.012,693,1.012,694,2.283,695,1.745,696,1.012,697,1.012,698,1.745,699,1.012,700,1.012,701,1.044,702,1.096,703,1.173,704,1.216,705,1.216,706,1.238,707,1.238,708,1.173,709,1.238,710,1.238,711,1.728,714,0.983,715,0.983,716,0.983,719,0.983,720,0.907,721,0.983,722,0.955,723,0.955,724,0.955,725,0.955,726,0.955,727,0.955,729,0.718,730,0.693,731,0.718,732,0.746,733,0.746,734,0.718,735,0.746,736,0.76,737,0.76,738,0.76,739,0.746,740,0.76,741,0.792,742,0.792,743,0.792,744,0.746,745,0.792,746,0.792,747,0.792,748,0.792,749,0.885,750,0.93,751,3.323,752,1.49,754,2.233,756,0.864,757,0.93,758,0.93,759,0.93,761,0.93,762,0.93,763,0.93,764,1.964,765,0.93,766,0.93,767,0.826,768,0.93,770,2.283,771,0.93,772,0.93,773,0.93,774,0.93,775,0.93,776,0.808,1082,1.729,1083,1.729,1084,1.729,1085,1.729,1086,2.98,1087,1.729,1088,1.729,1089,1.729,1090,1.729,1091,1.729,1092,1.729,1093,2.466,1094,1.549,1095,3.051,1096,1.549,1097,1.549,1098,1.549,1099,1.549,1100,3.52,1101,1.549,1102,1.549,1103,1.549,1104,1.549,1105,3.087,1106,1.549,1107,3.52,1108,1.549,1109,1.549,1110,1.549,1111,1.549,1112,1.549,1113,2.837,1114,1.549,1115,1.118,1116,1.549,1117,1.549,1118,1.43,1119,1.43,1120,1.43,1121,1.43,1122,1.43,1123,1.43,1124,1.43,1125,1.43,1126,1.43,1127,1.43,1128,1.43,1129,1.43,1130,1.43,1131,1.342,1132,1.342,1133,1.342,1134,1.342,1135,1.342,1136,1.342,1137,2.091,1138,1.271,1139,1.271,1140,1.271,1141,1.271,1142,1.271,1143,1.647,1144,0.907,1145,2.091,1146,1.213,1147,1.213,1148,1.213,1149,1.928,1150,1.162,1151,1.162,1152,1.162,1153,1.162,1154,1.162,1155,1.162,1156,1.162,1157,1.162,1158,3.598,1159,1.162,1160,1.162,1161,2.004,1162,2.004,1163,1.162,1164,1.162,1165,1.162,1166,1.162,1167,1.162,1168,1.162,1169,1.162,1170,1.079,1171,1.118,1172,1.118,1173,1.118,1174,1.118,1175,1.118,1176,1.079,1177,1.079,1178,1.079,1179,1.079,1180,1.012,1181,1.079,1182,1.079,1183,1.079,1184,1.079,1185,1.079,1186,1.079,1187,1.079,1188,1.079,1189,1.079,1190,1.745,1191,1.012,1192,1.044,1193,1.044,1194,1.044,1195,1.044,1196,1.044,1197,1.044,1198,1.044,1199,1.044,1200,1.044,1201,1.044,1202,1.694,1203,1.694,1204,1.012,1205,1.012,1206,1.012,1207,1.012,1208,1.012,1209,1.012,1210,1.745,1211,1.012,1212,1.012,1213,1.012,1214,1.012,1215,1.012,1216,1.012,1217,1.012,1218,1.012,1219,1.012,1220,1.012,1221,1.012,1222,1.012,1223,1.012,1224,0.983,1225,0.907,1226,0.983,1227,0.983,1228,0.955,1229,0.955,1230,0.955,1231,0.955,1232,0.93,1233,0.955,1234,0.93,1235,0.955,1236,0.955,1237,0.955,1238,0.955,1239,0.955,1240,0.955,1241,0.955,1242,0.93,1243,0.955,1244,0.955,1245,0.826,1246,0.955,1247,0.885,1248,0.955,1249,0.955,1250,0.955,1251,1.647,1252,0.955,1253,0.955,1254,1.647,1255,1.647,1256,1.647,1257,0.955,1258,0.955,1259,0.955,1260,0.955,1261,0.955,1262,0.93]],["title/core.html#提升（Hoisting）",[1093,4.581]],["body/core.html#提升（Hoisting）",[1,0.313,2,0.382,3,0.397,4,0.479,5,0.52,6,0.554,7,0.716,8,0.751,9,0.909,10,1.033,11,0.88,12,1.117,14,0.037,15,1.463,19,2.314,21,1.137,27,1.925,34,1.925,36,0.988,37,0.881,38,0.942,39,0.653,40,0.689,41,1.233,42,0.822,43,0.87,44,0.858,45,0.922,58,1.423,62,0.886,114,2.039,115,0.877,119,0.922,140,0.859,145,0.286,154,1.922,164,1.898,165,1.507,182,0.97,276,0.656,283,0.92,287,0.656,291,0.656,338,0.877,339,1.168,344,0.82,348,2.195,367,0.82,391,1.801,393,2.339,403,3.743,405,0.92,409,1.746,421,2.22,432,0.97,437,1.278,453,2.068,457,1.092,480,0.922,481,0.964,494,1.793,497,1.898,513,1.328,588,2.196,637,1.268,649,0.944,650,1.884,653,1.23,654,1.29,655,1.884,656,2.029,657,1.953,658,0.898,659,1.095,660,1.884,661,0.803,662,2.22,663,1.135,664,0.898,665,2.48,666,1.135,667,1.135,668,1.027,669,1.135,670,2.682,671,1.059,672,1.884,673,1.095,674,2.556,675,2.584,676,1.095,677,1.059,678,1.027,679,1.027,680,1.027,681,1.027,683,1.027,684,0.997,685,3.113,686,1.027,687,1.027,688,1.027,689,1.027,690,1.027,691,1.027,692,1.027,693,1.027,694,2.306,695,1.767,696,1.027,697,1.027,698,1.767,699,1.027,700,1.027,701,1.057,702,1.11,703,1.188,704,1.231,705,1.231,706,1.254,707,1.254,708,1.188,709,1.254,710,1.254,711,1.748,714,0.997,715,0.997,716,0.997,719,0.997,720,0.92,721,0.997,722,0.97,723,0.97,724,0.97,725,0.97,726,0.97,727,0.97,729,0.729,730,0.703,731,0.729,732,0.757,733,0.757,734,0.729,735,0.757,736,0.772,737,0.772,738,0.772,739,0.757,740,0.772,741,0.803,742,0.803,743,0.803,744,0.757,745,0.803,746,0.803,747,0.803,748,0.803,749,0.898,750,0.944,751,3.348,752,1.509,754,2.255,756,0.877,757,0.944,758,0.944,759,0.944,761,0.944,762,0.944,763,0.944,764,1.986,765,0.944,766,0.944,767,0.838,768,0.944,770,2.306,771,0.944,772,0.944,773,0.944,774,0.944,775,0.944,776,0.82,1093,1.452,1094,1.572,1095,3.073,1096,1.572,1097,1.572,1098,1.572,1099,1.572,1100,3.56,1101,1.572,1102,1.572,1103,1.572,1104,1.572,1105,3.11,1106,1.572,1107,3.56,1108,1.572,1109,1.572,1110,1.572,1111,1.572,1112,1.572,1113,2.862,1114,1.572,1115,1.135,1116,1.572,1117,1.572,1118,1.452,1119,1.452,1120,1.452,1121,1.452,1122,1.452,1123,1.452,1124,1.452,1125,1.452,1126,1.452,1127,1.452,1128,1.452,1129,1.452,1130,1.452,1131,1.362,1132,1.362,1133,1.362,1134,1.362,1135,1.362,1136,1.362,1137,2.117,1138,1.29,1139,1.29,1140,1.29,1141,1.29,1142,1.29,1143,1.668,1144,0.92,1145,2.117,1146,1.23,1147,1.23,1148,1.23,1149,1.953,1150,1.179,1151,1.179,1152,1.179,1153,1.179,1154,1.179,1155,1.179,1156,1.179,1157,1.179,1158,3.627,1159,1.179,1160,1.179,1161,2.029,1162,2.029,1163,1.179,1164,1.179,1165,1.179,1166,1.179,1167,1.179,1168,1.179,1169,1.179,1170,1.095,1171,1.135,1172,1.135,1173,1.135,1174,1.135,1175,1.135,1176,1.095,1177,1.095,1178,1.095,1179,1.095,1180,1.027,1181,1.095,1182,1.095,1183,1.095,1184,1.095,1185,1.095,1186,1.095,1187,1.095,1188,1.095,1189,1.095,1190,1.767,1191,1.027,1192,1.059,1193,1.059,1194,1.059,1195,1.059,1196,1.059,1197,1.059,1198,1.059,1199,1.059,1200,1.059,1201,1.059,1202,1.716,1203,1.716,1204,1.027,1205,1.027,1206,1.027,1207,1.027,1208,1.027,1209,1.027,1210,1.767,1211,1.027,1212,1.027,1213,1.027,1214,1.027,1215,1.027,1216,1.027,1217,1.027,1218,1.027,1219,1.027,1220,1.027,1221,1.027,1222,1.027,1223,1.027,1224,0.997,1225,0.92,1226,0.997,1227,0.997,1228,0.97,1229,0.97,1230,0.97,1231,0.97,1232,0.944,1233,0.97,1234,0.944,1235,0.97,1236,0.97,1237,0.97,1238,0.97,1239,0.97,1240,0.97,1241,0.97,1242,0.944,1243,0.97,1244,0.97,1245,0.838,1246,0.97,1247,0.898,1248,0.97,1249,0.97,1250,0.97,1251,1.668,1252,0.97,1253,0.97,1254,1.668,1255,1.668,1256,1.668,1257,0.97,1258,0.97,1259,0.97,1260,0.97,1261,0.97,1262,0.944]],["title/core.html#同步-非同步",[1118,4.581]],["body/core.html#同步-非同步",[1,0.312,2,0.375,3,0.388,4,0.455,5,0.501,6,0.543,7,0.695,8,0.714,9,0.88,10,1.057,11,0.854,12,1.092,14,0.037,15,1.599,19,2.365,21,0.995,27,2.105,34,2.105,36,0.992,37,0.964,38,1.03,39,0.733,40,0.773,41,1.349,42,0.923,43,0.977,44,0.963,45,1.035,58,1.481,62,0.887,114,2.047,115,1.005,119,1.035,140,0.951,145,0.328,154,1.965,164,2.1,165,1.648,182,1.111,276,0.752,283,1.054,287,0.752,291,0.752,338,1.005,339,1.311,348,1.725,367,0.94,391,1.051,393,2.535,405,1.054,409,1.849,432,1.111,437,1.435,453,1.837,457,1.226,480,1.035,481,1.082,494,1.917,497,2.1,513,1.491,588,2.429,637,1.082,649,1.082,650,1.255,653,1.41,654,1.478,655,2.116,656,2.279,657,2.193,658,1.029,659,1.255,660,2.116,661,0.921,662,2.493,663,1.3,664,1.029,665,2.744,666,1.3,667,1.3,668,1.177,669,1.3,670,2.933,671,1.214,672,2.116,673,1.255,674,2.749,675,2.763,676,1.255,677,1.214,678,1.177,679,1.177,680,1.177,681,1.177,683,1.177,684,1.142,685,3.373,686,1.177,687,1.177,688,1.177,689,1.177,690,1.177,691,1.177,692,1.177,693,1.177,694,2.521,695,1.984,696,1.177,697,1.177,698,1.984,699,1.177,700,1.177,701,1.187,702,1.246,703,1.334,704,1.383,705,1.383,706,1.408,707,1.408,708,1.334,709,1.408,710,1.408,711,1.933,714,1.142,715,1.142,716,1.142,719,1.142,720,1.054,721,1.142,722,1.111,723,1.111,724,1.111,725,1.111,726,1.111,727,1.111,729,0.835,730,0.805,731,0.835,732,0.867,733,0.867,734,0.835,735,0.867,736,0.884,737,0.884,738,0.884,739,0.867,740,0.884,741,0.921,742,0.921,743,0.921,744,0.867,745,0.921,746,0.921,747,0.921,748,0.921,749,1.029,750,1.082,751,3.579,752,1.694,754,2.466,756,1.005,757,1.082,758,1.082,759,1.082,761,1.082,762,1.082,763,1.082,764,2.197,765,1.082,766,1.082,767,0.961,768,1.082,770,2.521,771,1.082,772,1.082,773,1.082,774,1.082,775,1.082,776,0.94,1095,2.695,1105,3.124,1113,1.824,1119,1.663,1120,1.663,1121,1.663,1122,1.663,1123,1.663,1124,1.663,1125,1.663,1126,1.663,1127,1.663,1128,1.663,1129,1.663,1130,1.663,1131,1.56,1132,1.56,1133,1.56,1134,1.56,1135,1.56,1136,1.56,1137,2.378,1138,1.478,1139,1.478,1140,1.478,1141,1.478,1142,1.478,1143,1.874,1144,1.054,1145,2.378,1146,1.41,1147,1.41,1148,1.41,1149,2.193,1150,1.351,1151,1.351,1152,1.351,1153,1.351,1154,1.351,1155,1.351,1156,1.351,1157,1.351,1158,3.901,1159,1.351,1160,1.351,1161,2.279,1162,2.279,1163,1.351,1164,1.351,1165,1.351,1166,1.351,1167,1.351,1168,1.351,1169,1.351,1170,1.255,1171,1.3,1172,1.3,1173,1.3,1174,1.3,1175,1.3,1176,1.255,1177,1.255,1178,1.255,1179,1.255,1180,1.177,1181,1.255,1182,1.255,1183,1.255,1184,1.255,1185,1.255,1186,1.255,1187,1.255,1188,1.255,1189,1.255,1190,1.984,1191,1.177,1192,1.214,1193,1.214,1194,1.214,1195,1.214,1196,1.214,1197,1.214,1198,1.214,1199,1.214,1200,1.214,1201,1.214,1202,1.927,1203,1.927,1204,1.177,1205,1.177,1206,1.177,1207,1.177,1208,1.177,1209,1.177,1210,1.984,1211,1.177,1212,1.177,1213,1.177,1214,1.177,1215,1.177,1216,1.177,1217,1.177,1218,1.177,1219,1.177,1220,1.177,1221,1.177,1222,1.177,1223,1.177,1224,1.142,1225,1.054,1226,1.142,1227,1.142,1228,1.111,1229,1.111,1230,1.111,1231,1.111,1232,1.082,1233,1.111,1234,1.082,1235,1.111,1236,1.111,1237,1.111,1238,1.111,1239,1.111,1240,1.111,1241,1.111,1242,1.082,1243,1.111,1244,1.111,1245,0.961,1246,1.111,1247,1.029,1248,1.111,1249,1.111,1250,1.111,1251,1.874,1252,1.111,1253,1.111,1254,1.874,1255,1.874,1256,1.874,1257,1.111,1258,1.111,1259,1.111,1260,1.111,1261,1.111,1262,1.082]],["title/core.html#LHS",[654,4.071]],["body/core.html#LHS",[1,0.312,2,0.374,3,0.386,4,0.458,5,0.504,6,0.546,7,0.7,8,0.72,9,0.888,10,1.062,11,0.864,12,1.096,14,0.037,15,1.619,19,2.382,21,0.969,27,2.131,34,2.131,36,1.002,37,0.976,38,1.043,39,0.745,40,0.786,41,1.365,42,0.939,43,0.993,44,0.979,45,1.052,58,1.489,62,0.887,114,2.047,119,1.052,140,0.964,145,0.334,154,1.979,164,2.13,165,1.668,182,1.133,276,0.766,283,1.075,287,0.766,291,0.766,338,1.024,339,1.333,348,1.746,367,0.958,391,1.068,393,2.563,405,1.075,409,1.863,432,1.133,437,1.458,453,1.86,457,1.246,480,1.052,481,1.1,494,1.934,497,2.13,513,1.515,588,2.463,637,1.1,649,1.103,650,1.279,655,2.15,656,2.316,657,2.228,658,1.049,659,1.279,660,2.15,661,0.938,662,2.534,663,1.325,664,1.049,665,2.782,666,1.325,667,1.325,668,1.199,669,1.325,670,2.97,671,1.237,672,2.15,673,1.279,674,2.776,675,2.788,676,1.279,677,1.237,678,1.199,679,1.199,680,1.199,681,1.199,683,1.199,684,1.165,685,3.411,686,1.199,687,1.199,688,1.199,689,1.199,690,1.199,691,1.199,692,1.199,693,1.199,694,2.553,695,2.016,696,1.199,697,1.199,698,2.016,699,1.199,700,1.199,701,1.207,702,1.267,703,1.356,704,1.405,705,1.405,706,1.431,707,1.431,708,1.356,709,1.431,710,1.431,711,1.961,714,1.165,715,1.165,716,1.165,719,1.165,720,1.075,721,1.165,722,1.133,723,1.133,724,1.133,725,1.133,726,1.133,727,1.133,729,0.851,730,0.821,731,0.851,732,0.884,733,0.884,734,0.851,735,0.884,736,0.901,737,0.901,738,0.901,739,0.884,740,0.901,741,0.938,742,0.938,743,0.938,744,0.884,745,0.938,746,0.938,747,0.938,748,0.938,749,1.049,750,1.103,751,3.611,752,1.722,754,2.497,756,1.024,757,1.103,758,1.103,759,1.103,761,1.103,762,1.103,763,1.103,764,2.228,765,1.103,766,1.103,767,0.979,768,1.103,770,2.553,771,1.103,772,1.103,773,1.103,774,1.103,775,1.103,776,0.958,1095,2.725,1105,3.155,1113,1.854,1131,1.591,1132,1.591,1133,1.591,1134,1.591,1135,1.591,1136,1.591,1137,2.417,1138,1.507,1139,1.507,1140,1.507,1141,1.507,1142,1.507,1143,1.904,1144,1.075,1145,2.417,1146,1.437,1147,1.437,1148,1.437,1149,2.228,1150,1.378,1151,1.378,1152,1.378,1153,1.378,1154,1.378,1155,1.378,1156,1.378,1157,1.378,1158,3.94,1159,1.378,1160,1.378,1161,2.316,1162,2.316,1163,1.378,1164,1.378,1165,1.378,1166,1.378,1167,1.378,1168,1.378,1169,1.378,1170,1.279,1171,1.325,1172,1.325,1173,1.325,1174,1.325,1175,1.325,1176,1.279,1177,1.279,1178,1.279,1179,1.279,1180,1.199,1181,1.279,1182,1.279,1183,1.279,1184,1.279,1185,1.279,1186,1.279,1187,1.279,1188,1.279,1189,1.279,1190,2.016,1191,1.199,1192,1.237,1193,1.237,1194,1.237,1195,1.237,1196,1.237,1197,1.237,1198,1.237,1199,1.237,1200,1.237,1201,1.237,1202,1.958,1203,1.958,1204,1.199,1205,1.199,1206,1.199,1207,1.199,1208,1.199,1209,1.199,1210,2.016,1211,1.199,1212,1.199,1213,1.199,1214,1.199,1215,1.199,1216,1.199,1217,1.199,1218,1.199,1219,1.199,1220,1.199,1221,1.199,1222,1.199,1223,1.199,1224,1.165,1225,1.075,1226,1.165,1227,1.165,1228,1.133,1229,1.133,1230,1.133,1231,1.133,1232,1.103,1233,1.133,1234,1.103,1235,1.133,1236,1.133,1237,1.133,1238,1.133,1239,1.133,1240,1.133,1241,1.133,1242,1.103,1243,1.133,1244,1.133,1245,0.979,1246,1.133,1247,1.049,1248,1.133,1249,1.133,1250,1.133,1251,1.904,1252,1.133,1253,1.133,1254,1.904,1255,1.904,1256,1.904,1257,1.133,1258,1.133,1259,1.133,1260,1.133,1261,1.133,1262,1.103]],["title/core.html#陳述式-表達式",[1137,2.911,1138,3.052]],["body/core.html#陳述式-表達式",[1,0.311,2,0.376,3,0.388,4,0.46,5,0.507,6,0.55,7,0.706,8,0.726,9,0.896,10,1.067,11,0.876,12,1.101,14,0.037,15,1.64,19,2.399,21,0.977,27,2.159,34,2.159,36,1.013,37,0.988,38,1.057,39,0.758,40,0.8,41,1.383,42,0.955,43,1.01,44,0.996,45,1.07,58,1.497,62,0.889,114,2.051,119,1.07,140,0.978,145,0.341,154,1.857,164,2.161,165,1.69,182,1.156,276,0.782,283,1.097,287,0.782,291,0.782,338,1.045,339,1.355,348,1.769,367,0.978,391,1.086,393,2.593,405,1.097,409,1.878,432,1.156,437,1.483,453,1.884,457,1.268,480,1.07,481,1.119,494,1.953,497,2.161,513,0.92,588,2.5,637,0.668,649,1.125,660,1.305,663,1.353,664,1.07,665,2.823,666,1.353,667,1.353,668,1.224,669,1.353,670,3.008,671,1.263,672,2.187,673,1.305,674,2.805,675,2.814,676,1.305,677,1.263,678,1.224,679,1.224,680,1.224,681,1.224,683,1.224,684,1.189,685,3.45,686,1.224,687,1.224,688,1.224,689,1.224,690,1.224,691,1.224,692,1.224,693,1.224,694,2.586,695,2.051,696,1.224,697,1.224,698,2.051,699,1.224,700,1.224,701,1.227,702,1.289,703,1.379,704,1.429,705,1.429,706,1.456,707,1.456,708,1.379,709,1.456,710,1.456,711,1.99,714,1.189,715,1.189,716,1.189,719,1.189,720,1.097,721,1.189,722,1.156,723,1.156,724,1.156,725,1.156,726,1.156,727,1.156,729,0.869,730,0.838,731,0.869,732,0.902,733,0.902,734,0.869,735,0.902,736,0.92,737,0.92,738,0.92,739,0.902,740,0.92,741,0.958,742,0.958,743,0.958,744,0.902,745,0.958,746,0.958,747,0.958,748,0.958,749,1.07,750,1.125,751,3.646,752,1.752,754,2.529,756,1.045,757,1.125,758,1.125,759,1.125,761,1.125,762,1.125,763,1.125,764,2.261,765,1.125,766,1.125,767,0.999,768,1.125,770,2.586,771,1.125,772,1.125,773,1.125,774,1.125,775,1.125,776,0.978,1095,2.757,1105,3.188,1113,1.886,1137,1.467,1139,1.538,1140,1.538,1141,1.538,1142,1.538,1143,1.937,1144,1.097,1145,2.458,1146,1.467,1147,1.467,1148,1.467,1149,2.267,1150,1.406,1151,1.406,1152,1.406,1153,1.406,1154,1.406,1155,1.406,1156,1.406,1157,1.406,1158,3.981,1159,1.406,1160,1.406,1161,2.356,1162,2.356,1163,1.406,1164,1.406,1165,1.406,1166,1.406,1167,1.406,1168,1.406,1169,1.406,1170,1.305,1171,1.353,1172,1.353,1173,1.353,1174,1.353,1175,1.353,1176,1.305,1177,1.305,1178,1.305,1179,1.305,1180,1.224,1181,1.305,1182,1.305,1183,1.305,1184,1.305,1185,1.305,1186,1.305,1187,1.305,1188,1.305,1189,1.305,1190,2.051,1191,1.224,1192,1.263,1193,1.263,1194,1.263,1195,1.263,1196,1.263,1197,1.263,1198,1.263,1199,1.263,1200,1.263,1201,1.263,1202,1.992,1203,1.992,1204,1.224,1205,1.224,1206,1.224,1207,1.224,1208,1.224,1209,1.224,1210,2.051,1211,1.224,1212,1.224,1213,1.224,1214,1.224,1215,1.224,1216,1.224,1217,1.224,1218,1.224,1219,1.224,1220,1.224,1221,1.224,1222,1.224,1223,1.224,1224,1.189,1225,1.097,1226,1.189,1227,1.189,1228,1.156,1229,1.156,1230,1.156,1231,1.156,1232,1.125,1233,1.156,1234,1.125,1235,1.156,1236,1.156,1237,1.156,1238,1.156,1239,1.156,1240,1.156,1241,1.156,1242,1.125,1243,1.156,1244,1.156,1245,0.999,1246,1.156,1247,1.07,1248,1.156,1249,1.156,1250,1.156,1251,1.937,1252,1.156,1253,1.156,1254,1.937,1255,1.937,1256,1.937,1257,1.156,1258,1.156,1259,1.156,1260,1.156,1261,1.156,1262,1.125]],["title/core.html#立即函式",[1144,2.904]],["body/core.html#立即函式",[1,0.31,2,0.376,3,0.387,4,0.456,5,0.501,6,0.541,7,0.691,8,0.702,9,0.856,10,1.062,11,0.892,12,1.09,14,0.037,15,1.671,19,2.425,21,0.989,27,2.2,34,2.2,36,1.028,37,1.007,38,1.077,39,0.777,40,0.82,41,1.409,42,0.979,43,1.036,44,1.021,45,1.097,58,1.509,62,0.891,114,2.058,140,0.999,145,0.352,154,1.88,164,2.208,165,1.722,182,1.191,276,0.805,287,0.805,291,0.805,338,1.077,339,1.39,348,1.802,367,1.008,391,0.668,393,2.636,405,1.13,409,1.9,432,1.191,437,1.521,453,1.919,457,1.3,480,1.097,481,1.147,494,1.979,497,2.208,513,0.948,588,2.554,637,0.688,660,1.345,665,2.884,666,1.394,667,1.394,668,1.261,669,1.394,670,3.065,671,1.301,672,2.243,673,1.345,674,2.848,675,2.853,676,1.345,677,1.301,678,1.261,679,1.261,680,1.261,681,1.261,683,1.261,684,1.224,685,3.508,686,1.261,687,1.261,688,1.261,689,1.261,690,1.261,691,1.261,692,1.261,693,1.261,694,2.635,695,2.103,696,1.261,697,1.261,698,2.103,699,1.261,700,1.261,701,1.258,702,1.321,703,1.414,704,1.465,705,1.465,706,1.492,707,1.492,708,1.414,709,1.492,710,1.492,711,2.033,714,1.224,715,1.224,716,1.224,719,1.224,720,1.13,721,1.224,722,1.191,723,1.191,724,1.191,725,1.191,726,1.191,727,1.191,729,0.895,730,0.863,731,0.895,732,0.929,733,0.929,734,0.895,735,0.929,736,0.948,737,0.948,738,0.948,739,0.929,740,0.948,741,0.987,742,0.987,743,0.987,744,0.929,745,0.987,746,0.987,747,0.987,748,0.987,749,1.103,750,1.159,751,3.696,752,1.796,754,2.577,756,1.077,757,1.159,758,1.159,759,1.159,761,1.159,762,1.159,763,1.159,764,2.31,765,1.159,766,1.159,767,1.029,768,1.159,770,2.635,771,1.159,772,1.159,773,1.159,774,1.159,775,1.159,776,1.008,1095,2.803,1105,3.236,1113,1.933,1143,1.191,1145,2.52,1146,1.511,1147,1.511,1148,1.511,1149,2.324,1150,1.448,1151,1.448,1152,1.448,1153,1.448,1154,1.448,1155,1.448,1156,1.448,1157,1.448,1158,4.041,1159,1.448,1160,1.448,1161,2.415,1162,2.415,1163,1.448,1164,1.448,1165,1.448,1166,1.448,1167,1.448,1168,1.448,1169,1.448,1170,1.345,1171,1.394,1172,1.394,1173,1.394,1174,1.394,1175,1.394,1176,1.345,1177,1.345,1178,1.345,1179,1.345,1180,1.261,1181,1.345,1182,1.345,1183,1.345,1184,1.345,1185,1.345,1186,1.345,1187,1.345,1188,1.345,1189,1.345,1190,2.103,1191,1.261,1192,1.301,1193,1.301,1194,1.301,1195,1.301,1196,1.301,1197,1.301,1198,1.301,1199,1.301,1200,1.301,1201,1.301,1202,2.042,1203,2.042,1204,1.261,1205,1.261,1206,1.261,1207,1.261,1208,1.261,1209,1.261,1210,2.103,1211,1.261,1212,1.261,1213,1.261,1214,1.261,1215,1.261,1216,1.261,1217,1.261,1218,1.261,1219,1.261,1220,1.261,1221,1.261,1222,1.261,1223,1.261,1224,1.224,1225,1.13,1226,1.224,1227,1.224,1228,1.191,1229,1.191,1230,1.191,1231,1.191,1232,1.159,1233,1.191,1234,1.159,1235,1.191,1236,1.191,1237,1.191,1238,1.191,1239,1.191,1240,1.191,1241,1.191,1242,1.159,1243,1.191,1244,1.191,1245,1.029,1246,1.191,1247,1.103,1248,1.191,1249,1.191,1250,1.191,1251,1.986,1252,1.191,1253,1.191,1254,1.986,1255,1.986,1256,1.986,1257,1.191,1258,1.191,1259,1.191,1260,1.191,1261,1.191,1262,1.159]],["title/core.html#ASI-自動分號插入",[665,2.59,1149,2.684]],["body/core.html#ASI-自動分號插入",[1,0.31,2,0.375,3,0.384,4,0.458,5,0.504,6,0.544,7,0.695,8,0.707,9,0.863,10,1.067,11,0.901,12,1.094,14,0.037,15,1.688,19,2.439,21,0.958,27,2.222,34,2.222,36,1.036,37,1.017,38,1.087,39,0.787,40,0.831,41,1.423,42,0.992,43,1.049,44,1.035,45,1.112,58,1.515,62,0.891,114,2.057,140,1.011,145,0.357,154,1.893,164,2.233,165,1.739,182,1.21,276,0.818,287,0.818,291,0.818,338,1.094,339,1.408,348,1.82,367,1.024,391,0.678,393,2.66,405,1.148,409,1.912,432,1.21,437,1.541,453,1.939,457,1.317,480,1.112,481,1.162,494,1.994,497,2.233,513,0.963,588,2.583,637,0.699,660,1.366,665,2.273,666,1.416,667,1.416,668,1.281,669,1.416,670,3.096,671,1.322,672,2.273,673,1.366,674,2.871,675,2.874,676,1.366,677,1.322,678,1.281,679,1.281,680,1.281,681,1.281,683,1.281,684,1.244,685,3.539,686,1.281,687,1.281,688,1.281,689,1.281,690,1.281,691,1.281,692,1.281,693,1.281,694,2.661,695,2.131,696,1.281,697,1.281,698,2.131,699,1.281,700,1.281,701,1.275,702,1.339,703,1.433,704,1.485,705,1.485,706,1.512,707,1.512,708,1.433,709,1.512,710,1.512,711,2.056,714,1.244,715,1.244,716,1.244,719,1.244,720,1.148,721,1.244,722,1.21,723,1.21,724,1.21,725,1.21,726,1.21,727,1.21,729,0.909,730,0.877,731,0.909,732,0.944,733,0.944,734,0.909,735,0.944,736,0.963,737,0.963,738,0.963,739,0.944,740,0.963,741,1.003,742,1.003,743,1.003,744,0.944,745,1.003,746,1.003,747,1.003,748,1.003,749,1.12,750,1.178,751,3.723,752,1.82,754,2.603,756,1.094,757,1.178,758,1.178,759,1.178,761,1.178,762,1.178,763,1.178,764,2.336,765,1.178,766,1.178,767,1.046,768,1.178,770,2.661,771,1.178,772,1.178,773,1.178,774,1.178,775,1.178,776,1.024,1095,2.547,1105,3.262,1113,1.959,1143,1.21,1149,1.416,1150,1.472,1151,1.472,1152,1.472,1153,1.472,1154,1.472,1155,1.472,1156,1.472,1157,1.472,1158,4.074,1159,1.472,1160,1.472,1161,2.448,1162,2.448,1163,1.472,1164,1.472,1165,1.472,1166,1.472,1167,1.472,1168,1.472,1169,1.472,1170,1.366,1171,1.416,1172,1.416,1173,1.416,1174,1.416,1175,1.416,1176,1.366,1177,1.366,1178,1.366,1179,1.366,1180,1.281,1181,1.366,1182,1.366,1183,1.366,1184,1.366,1185,1.366,1186,1.366,1187,1.366,1188,1.366,1189,1.366,1190,2.131,1191,1.281,1192,1.322,1193,1.322,1194,1.322,1195,1.322,1196,1.322,1197,1.322,1198,1.322,1199,1.322,1200,1.322,1201,1.322,1202,2.069,1203,2.069,1204,1.281,1205,1.281,1206,1.281,1207,1.281,1208,1.281,1209,1.281,1210,2.131,1211,1.281,1212,1.281,1213,1.281,1214,1.281,1215,1.281,1216,1.281,1217,1.281,1218,1.281,1219,1.281,1220,1.281,1221,1.281,1222,1.281,1223,1.281,1224,1.244,1225,1.148,1226,1.244,1227,1.244,1228,1.21,1229,1.21,1230,1.21,1231,1.21,1232,1.178,1233,1.21,1234,1.178,1235,1.21,1236,1.21,1237,1.21,1238,1.21,1239,1.21,1240,1.21,1241,1.21,1242,1.178,1243,1.21,1244,1.21,1245,1.046,1246,1.21,1247,1.12,1248,1.21,1249,1.21,1250,1.21,1251,2.012,1252,1.21,1253,1.21,1254,2.012,1255,2.012,1256,2.012,1257,1.21,1258,1.21,1259,1.21,1260,1.21,1261,1.21,1262,1.178]],["title/core.html#動態型別",[1170,3.456]],["body/core.html#動態型別",[1,0.31,2,0.375,3,0.382,4,0.451,5,0.493,6,0.543,7,0.691,8,0.731,9,0.897,10,1.087,11,0.945,12,1.093,14,0.037,15,1.77,19,2.505,21,0.653,27,2.329,34,2.329,36,1.076,37,1.067,38,1.14,39,0.839,40,0.885,41,1.492,42,1.057,43,1.119,44,1.103,45,1.185,58,1.545,62,0.895,114,2.074,140,1.067,145,0.386,154,1.953,164,2.358,165,1.823,182,1.307,276,0.884,287,0.884,291,0.884,338,1.182,339,1.501,348,1.909,367,1.106,391,0.733,393,2.774,405,1.241,409,1.968,432,1.307,437,1.643,453,1.757,457,1.404,480,1.185,481,1.239,494,2.063,497,2.358,513,1.04,588,2.728,637,0.755,670,3.246,671,1.428,672,2.423,673,1.476,674,2.981,675,2.974,676,1.476,677,1.428,678,1.384,679,1.384,680,1.384,681,1.384,683,1.384,684,1.344,685,3.691,686,1.384,687,1.384,688,1.384,689,1.384,690,1.384,691,1.384,692,1.384,693,1.384,694,2.79,695,2.272,696,1.384,697,1.384,698,2.272,699,1.384,700,1.384,701,1.359,702,1.427,703,1.528,704,1.583,705,1.583,706,1.612,707,1.612,708,1.528,709,1.612,710,1.612,711,2.171,714,1.344,715,1.344,716,1.344,719,1.344,720,1.241,721,1.344,722,1.307,723,1.307,724,1.307,725,1.307,726,1.307,727,1.307,729,0.982,730,0.947,731,0.982,732,1.02,733,1.02,734,0.982,735,1.02,736,1.04,737,1.04,738,1.04,739,1.02,740,1.04,741,1.083,742,1.083,743,1.083,744,1.02,745,1.083,746,1.083,747,1.083,748,1.083,749,1.211,750,1.273,751,3.852,752,1.94,754,2.729,756,1.182,757,1.273,758,1.273,759,1.273,761,1.273,762,1.273,763,1.273,764,2.467,765,1.273,766,1.273,767,1.13,768,1.273,770,2.79,771,1.273,772,1.273,773,1.273,774,1.273,775,1.273,776,1.106,1095,2.671,1105,3.387,1113,2.089,1143,1.307,1171,1.53,1172,1.53,1173,1.53,1174,1.53,1175,1.53,1176,1.476,1177,1.476,1178,1.476,1179,1.476,1180,1.384,1181,1.476,1182,1.476,1183,1.476,1184,1.476,1185,1.476,1186,1.476,1187,1.476,1188,1.476,1189,1.476,1190,2.272,1191,1.384,1192,1.428,1193,1.428,1194,1.428,1195,1.428,1196,1.428,1197,1.428,1198,1.428,1199,1.428,1200,1.428,1201,1.428,1202,2.206,1203,2.206,1204,1.384,1205,1.384,1206,1.384,1207,1.384,1208,1.384,1209,1.384,1210,2.272,1211,1.384,1212,1.384,1213,1.384,1214,1.384,1215,1.384,1216,1.384,1217,1.384,1218,1.384,1219,1.384,1220,1.384,1221,1.384,1222,1.384,1223,1.384,1224,1.344,1225,1.241,1226,1.344,1227,1.344,1228,1.307,1229,1.307,1230,1.307,1231,1.307,1232,1.273,1233,1.307,1234,1.273,1235,1.307,1236,1.307,1237,1.307,1238,1.307,1239,1.307,1240,1.307,1241,1.307,1242,1.273,1243,1.307,1244,1.307,1245,1.13,1246,1.307,1247,1.211,1248,1.307,1249,1.307,1250,1.307,1251,2.145,1252,1.307,1253,1.307,1254,2.145,1255,2.145,1256,2.145,1257,1.307,1258,1.307,1259,1.307,1260,1.307,1261,1.307,1262,1.273]],["title/core.html#原始型別及物件型別",[1176,3.456]],["body/core.html#原始型別及物件型別",[1,0.31,2,0.377,3,0.377,4,0.448,5,0.489,6,0.536,7,0.678,8,0.71,9,0.859,10,1.088,11,0.848,12,1.072,14,0.037,15,1.829,19,2.551,21,0.678,27,2.407,34,2.09,36,1.031,37,0.957,38,1.023,39,0.878,40,0.926,41,1.542,42,1.105,43,1.17,44,1.153,45,1.239,58,1.566,62,0.896,114,2.077,140,1.108,145,0.408,154,1.995,164,2.449,165,1.884,276,0.934,287,0.934,291,0.934,338,1.248,339,1.57,348,1.972,367,1.168,391,0.774,393,1.785,405,1.31,409,2.006,432,1.38,437,1.717,453,1.824,457,1.468,480,1.239,481,1.295,494,2.112,497,2.449,513,1.099,588,2.832,637,0.797,675,2.696,677,1.508,678,1.462,679,1.462,680,1.462,681,1.462,683,1.462,684,1.42,685,3.799,686,1.462,687,1.462,688,1.462,689,1.462,690,1.462,691,1.462,692,1.462,693,1.462,694,2.883,695,2.375,696,1.462,697,1.462,698,2.375,699,1.462,700,1.462,701,1.421,702,1.492,703,1.597,704,1.655,705,1.655,706,1.686,707,1.686,708,1.597,709,1.686,710,1.686,711,2.254,714,1.42,715,1.42,716,1.42,719,1.42,720,1.31,721,1.42,722,1.38,723,1.38,724,1.38,725,1.38,726,1.38,727,1.38,729,1.038,730,1.001,731,1.038,732,1.077,733,1.077,734,1.038,735,1.077,736,1.099,737,1.099,738,1.099,739,1.077,740,1.099,741,1.144,742,1.144,743,1.144,744,1.077,745,1.144,746,1.144,747,1.144,748,1.144,749,1.278,750,1.344,751,3.943,752,2.028,754,2.819,756,1.248,757,1.344,758,1.344,759,1.344,761,1.344,762,1.344,763,1.344,764,2.562,765,1.344,766,1.344,767,1.193,768,1.344,770,2.883,771,1.344,772,1.344,773,1.344,774,1.344,775,1.344,776,1.168,1095,1.168,1105,3.475,1113,2.184,1143,1.38,1177,1.559,1178,1.559,1179,1.559,1180,1.462,1181,1.559,1182,1.559,1183,1.559,1184,1.559,1185,1.559,1186,1.559,1187,1.559,1188,1.559,1189,1.559,1190,2.375,1191,1.462,1192,1.508,1193,1.508,1194,1.508,1195,1.508,1196,1.508,1197,1.508,1198,1.508,1199,1.508,1200,1.508,1201,1.508,1202,2.306,1203,2.306,1204,1.462,1205,1.462,1206,1.462,1207,1.462,1208,1.462,1209,1.462,1210,2.375,1211,1.462,1212,1.462,1213,1.462,1214,1.462,1215,1.462,1216,1.462,1217,1.462,1218,1.462,1219,1.462,1220,1.462,1221,1.462,1222,1.462,1223,1.462,1224,1.42,1225,1.31,1226,1.42,1227,1.42,1228,1.38,1229,1.38,1230,1.38,1231,1.38,1232,1.344,1233,1.38,1234,1.344,1235,1.38,1236,1.38,1237,1.38,1238,1.38,1239,1.38,1240,1.38,1241,1.38,1242,1.344,1243,1.38,1244,1.38,1245,1.193,1246,1.38,1247,1.278,1248,1.38,1249,1.38,1250,1.38,1251,2.243,1252,1.38,1253,1.38,1254,2.243,1255,2.243,1256,2.243,1257,1.38,1258,1.38,1259,1.38,1260,1.38,1261,1.38,1262,1.344]],["title/core.html#運算子",[1190,3.24]],["body/core.html#運算子",[1,0.311,2,0.377,3,0.374,4,0.442,5,0.495,6,0.543,7,0.688,8,0.722,9,0.875,10,1.097,11,0.869,12,1.053,14,0.037,15,0.803,19,2.581,21,0.695,27,2.459,34,1.705,36,1.05,37,0.981,38,1.049,39,0.904,40,0.954,41,1.575,42,1.139,43,1.205,44,1.188,45,1.276,58,1.579,62,0.897,114,2.081,140,1.136,145,0.423,154,2.023,165,1.925,276,0.969,287,0.969,291,0.969,338,1.295,339,1.617,348,2.014,367,1.212,391,0.803,405,1.359,409,2.032,432,1.432,437,1.769,453,1.488,457,1.512,480,1.276,481,1.334,494,1.906,497,2.51,513,1.14,588,2.904,637,0.827,675,2.747,678,1.516,679,1.516,680,1.516,681,1.516,683,1.516,684,1.472,685,3.871,686,1.516,687,1.516,688,1.516,689,1.516,690,1.516,691,1.516,692,1.516,693,1.516,694,2.945,695,2.446,696,1.516,697,1.516,698,2.446,699,1.516,700,1.516,701,1.464,702,1.537,703,1.645,704,1.705,705,1.705,706,1.736,707,1.736,708,1.645,709,1.736,710,1.736,711,2.311,714,1.472,715,1.472,716,1.472,719,1.472,720,1.359,721,1.472,722,1.432,723,1.432,724,1.432,725,1.432,726,1.432,727,1.432,729,1.076,730,1.038,731,1.076,732,1.118,733,1.118,734,1.076,735,1.118,736,1.14,737,1.14,738,1.14,739,1.118,740,1.14,741,1.186,742,1.186,743,1.186,744,1.118,745,1.186,746,1.186,747,1.186,748,1.186,749,1.326,750,1.394,751,4.003,752,2.089,754,2.881,756,1.295,757,1.394,758,1.394,759,1.394,761,1.394,762,1.394,763,1.394,764,2.626,765,1.394,766,1.394,767,1.238,768,1.394,770,2.945,771,1.394,772,1.394,773,1.394,774,1.394,775,1.394,776,1.212,1105,3.534,1113,2.249,1143,1.432,1190,1.516,1191,1.516,1192,1.564,1193,1.564,1194,1.564,1195,1.564,1196,1.564,1197,1.564,1198,1.564,1199,1.564,1200,1.564,1201,1.564,1202,2.375,1203,2.375,1204,1.516,1205,1.516,1206,1.516,1207,1.516,1208,1.516,1209,1.516,1210,2.446,1211,1.516,1212,1.516,1213,1.516,1214,1.516,1215,1.516,1216,1.516,1217,1.516,1218,1.516,1219,1.516,1220,1.516,1221,1.516,1222,1.516,1223,1.516,1224,1.472,1225,1.359,1226,1.472,1227,1.472,1228,1.432,1229,1.432,1230,1.432,1231,1.432,1232,1.394,1233,1.432,1234,1.394,1235,1.432,1236,1.432,1237,1.432,1238,1.432,1239,1.432,1240,1.432,1241,1.432,1242,1.394,1243,1.432,1244,1.432,1245,1.238,1246,1.432,1247,1.326,1248,1.432,1249,1.432,1250,1.432,1251,2.31,1252,1.432,1253,1.432,1254,2.31,1255,2.31,1256,2.31,1257,1.432,1258,1.432,1259,1.432,1260,1.432,1261,1.432,1262,1.394]],["title/core.html#嚴格相等-寬鬆相等",[1202,2.358,1203,2.358]],["body/core.html#嚴格相等-寬鬆相等",[1,0.288,2,0.333,3,0.31,4,0.39,5,0.437,6,0.445,7,0.586,8,0.536,9,0.694,10,1.051,11,0.868,12,0.92,14,0.037,15,1.074,19,2.513,21,0.694,27,2.882,34,2.141,36,0.833,37,0.98,38,1.048,39,1.135,40,1.197,41,1.846,42,1.43,43,1.513,44,1.491,45,1.603,58,1.469,62,0.892,114,2.082,140,1.135,154,1.846,287,1.296,339,2.03,348,2.361,367,1.621,391,1.074,405,1.818,409,1.796,437,2.221,457,1.898,480,1.603,481,1.676,494,2.037,497,1.656,588,2.901,637,1.106,675,3.154,701,1.838,702,1.93,703,2.066,704,2.141,705,2.141,706,2.18,707,2.18,708,2.066,709,2.18,710,2.18,711,2.786,714,1.97,715,1.97,716,1.97,719,1.97,720,1.818,721,1.97,722,1.915,723,1.915,724,1.915,725,1.915,726,1.915,727,1.915,729,1.44,730,1.388,731,1.44,732,1.495,733,1.495,734,1.44,735,1.495,736,1.524,737,1.524,738,1.524,739,1.495,740,1.524,741,1.587,742,1.587,743,1.587,744,1.495,745,1.587,746,1.587,747,1.587,748,1.587,749,1.774,750,1.865,751,4.465,752,2.624,754,3.376,756,1.732,757,1.865,758,1.865,759,1.865,761,1.865,762,1.865,763,1.865,764,3.167,765,1.865,766,1.865,767,1.656,768,1.865,770,3.452,771,1.865,772,1.865,773,1.865,774,1.865,775,1.865,776,1.621,1105,3.167,1113,2.824,1143,1.915,1202,1.97,1203,1.97,1204,2.029,1205,2.029,1206,2.029,1207,2.029,1208,2.029,1209,2.029,1210,3.072,1211,2.029,1212,2.029,1213,2.029,1214,2.029,1215,2.029,1216,2.029,1217,2.029,1218,2.029,1219,2.029,1220,2.029,1221,2.029,1222,2.029,1223,2.029,1224,1.97,1225,1.818,1226,1.97,1227,1.97,1228,1.915,1229,1.915,1230,1.915,1231,1.915,1232,1.865,1233,1.915,1234,1.865,1235,1.915,1236,1.915,1237,1.915,1238,1.915,1239,1.915,1240,1.915,1241,1.915,1242,1.865,1243,1.915,1244,1.915,1245,1.656,1246,1.915,1247,1.774,1248,1.915,1249,1.915,1250,1.915,1251,2.901,1252,1.915,1253,1.915,1254,2.901,1255,2.901,1256,2.901,1257,1.915,1258,1.915,1259,1.915,1260,1.915,1261,1.915,1262,1.865]],["title/core.html#Truthy",[722,3.06]],["body/core.html#Truthy",[1,0.293,2,0.353,3,0.325,4,0.409,5,0.459,6,0.449,7,0.592,8,0.465,9,0.602,10,0.787,11,0.753,12,0.898,14,0.037,15,1.41,19,2.014,21,0.847,36,0.722,37,0.849,38,0.908,39,0.984,40,1.038,41,1.189,42,1.239,43,1.311,44,1.293,45,1.389,58,1.423,62,0.864,114,1.916,140,1.385,287,1.701,339,2.477,367,2.127,391,1.41,405,2.386,409,1.884,437,2.71,457,1.645,480,1.389,481,1.452,494,1.311,497,2.174,701,1.593,702,1.673,703,1.79,704,1.855,705,1.855,706,1.89,707,1.89,708,1.79,709,1.89,710,1.89,711,2.001,723,2.514,724,2.514,725,2.514,726,2.514,727,2.514,729,1.89,730,1.822,731,1.89,732,1.962,733,1.962,734,1.89,735,1.962,736,2.001,737,2.001,738,2.001,739,1.962,740,2.001,741,2.083,742,2.083,743,2.083,744,1.962,745,2.083,746,2.083,747,2.083,748,2.083,749,2.328,750,2.448,751,4.861,752,3.201,754,3.843,756,2.274,757,2.448,758,2.448,759,2.448,761,2.448,762,2.448,763,2.448,764,3.704,765,2.448,766,2.448,767,2.174,768,2.448,770,3.929,771,2.448,772,2.448,773,2.448,774,2.448,775,2.448,776,2.127,1113,3.446,1143,2.514,1224,2.585,1225,2.386,1226,2.585,1227,2.585,1228,2.514,1229,2.514,1230,2.514,1231,2.514,1232,2.448,1233,2.514,1234,2.448,1235,2.514,1236,2.514,1237,2.514,1238,2.514,1239,2.514,1240,2.514,1241,2.514,1242,2.448,1243,2.514,1244,2.514,1245,2.174,1246,2.514,1247,2.328,1248,2.514,1249,2.514,1250,2.514,1251,3.539,1252,2.514,1253,2.514,1254,3.539,1255,3.539,1256,3.539,1257,2.514,1258,2.514,1259,2.514,1260,2.514,1261,2.514,1262,2.448]],["title/core.html#邏輯運算子及函式預設值",[1228,3.06]],["body/core.html#邏輯運算子及函式預設值",[1,0.291,2,0.347,3,0.291,4,0.367,5,0.411,6,0.466,7,0.614,8,0.49,9,0.634,10,0.817,11,0.793,12,0.923,14,0.037,19,1.508,21,0.879,36,0.761,37,0.895,38,0.957,39,1.037,40,1.094,41,1.253,42,1.306,43,1.382,44,1.362,45,1.464,58,1.456,62,0.86,114,1.857,140,1.436,287,1.792,339,2.569,367,2.242,391,1.486,405,2.515,409,1.938,437,2.811,457,1.734,480,1.464,481,1.53,497,2.291,701,1.679,702,1.763,703,1.887,704,1.955,705,1.955,706,1.991,707,1.991,708,1.887,709,1.991,710,1.991,711,2.109,729,1.991,730,1.92,731,1.991,732,2.068,733,2.068,734,1.991,735,2.068,736,2.109,737,2.109,738,2.109,739,2.068,740,2.109,741,2.195,742,2.195,743,2.195,744,2.068,745,2.195,746,2.195,747,2.195,748,2.195,749,2.454,750,2.58,751,4.932,752,3.32,754,3.932,756,2.396,757,2.58,758,2.58,759,2.58,761,2.58,762,2.58,763,2.58,764,3.81,765,2.58,766,2.58,767,2.291,768,2.58,770,4.02,771,2.58,772,2.58,773,2.58,774,2.58,775,2.58,776,2.242,1113,3.574,1143,2.649,1229,2.649,1230,2.649,1231,2.649,1232,2.58,1233,2.649,1234,2.58,1235,2.649,1236,2.649,1237,2.649,1238,2.649,1239,2.649,1240,2.649,1241,2.649,1242,2.58,1243,2.649,1244,2.649,1245,2.291,1246,2.649,1247,2.454,1248,2.649,1249,2.649,1250,2.649,1251,3.671,1252,2.649,1253,2.649,1254,3.671,1255,3.671,1256,3.671,1257,2.649,1258,2.649,1259,2.649,1260,2.649,1261,2.649,1262,2.58]],["title/core.html#物件記憶體空間",[1263,5.535]],["body/core.html#物件記憶體空間",[1,0.304,2,0.374,3,0.411,4,0.467,5,0.529,6,0.579,7,0.763,8,0.83,9,1.017,10,0.923,11,1.208,12,1.138,14,0.038,15,0.92,16,1.157,21,1.263,30,1.737,34,0.702,36,1.123,37,1.321,38,1.3,39,1.243,40,1.311,41,1.373,42,1.269,43,1.342,44,1.112,45,1.196,58,1.36,62,0.857,114,1.559,119,0.906,120,0.822,145,1.062,154,0.45,165,0.549,212,0.702,274,1.957,276,0.643,282,1.039,284,0.951,287,0.643,291,2.149,337,0.549,339,0.665,344,0.805,388,0.951,391,1.909,403,3.827,409,0.995,416,0.926,437,0.728,450,0.926,453,1.393,457,1.416,465,1.113,480,1.196,481,1.25,494,1.515,498,1.256,499,2.942,503,1.007,513,1.306,516,3.405,518,2.532,637,0.948,649,2.107,661,0.788,674,1.306,701,1.371,702,1.44,703,1.541,704,1.211,705,1.211,706,1.233,707,1.233,708,1.168,709,1.233,710,0.715,729,0.715,730,0.689,731,0.715,732,0.742,733,0.742,734,0.715,735,0.742,736,0.757,737,0.757,738,0.757,739,0.742,740,0.757,741,0.788,742,0.788,743,0.788,744,0.742,745,0.788,746,0.788,747,0.788,748,0.788,754,2.226,756,1.957,764,2.627,769,2.384,776,0.805,777,3.039,778,3.507,779,1.265,780,5.15,781,1.336,783,2.659,784,2.456,785,1.541,786,2.659,787,2.659,788,1.541,789,2.659,790,1.424,791,1.424,792,1.424,793,1.424,794,1.424,795,1.424,796,1.336,797,1.424,798,1.424,799,1.336,800,1.336,802,3.039,803,1.336,804,2.304,805,1.336,806,1.336,808,1.336,810,2.082,811,1.157,812,1.641,813,1.336,814,1.336,815,1.336,816,1.336,817,1.336,818,2.304,819,3.039,820,1.336,822,1.336,823,2.879,825,2.879,826,1.265,827,1.265,828,1.265,829,1.265,830,1.265,831,1.157,832,1.597,833,1.113,834,2.133,836,1.265,837,1.265,838,1.265,839,1.265,841,1.207,842,1.207,844,1.996,845,1.207,846,1.207,847,1.207,848,1.157,849,1.207,850,1.207,851,1.207,853,1.996,854,1.157,855,1.996,856,1.157,857,1.157,858,2.632,859,2.632,860,1.157,861,1.157,862,1.157,863,3.131,865,1.157,866,1.157,867,1.157,868,1.996,869,3.013,872,1.792,873,1.113,874,1.737,875,1.113,876,1.92,877,1.113,878,1.113,879,1.113,880,1.113,881,1.113,882,1.113,883,0.86,884,1.074,885,1.074,886,1.074,888,1.853,889,2.443,890,1.074,891,1.737,892,1.557,893,1.039,894,1.039,895,1.039,896,1.007,897,1.737,898,1.007,899,3.471,900,2.114,901,2.225,902,1.039,1095,3.185,1115,1.92,1144,1.557,1180,1.007,1225,0.902,1245,1.871,1247,0.881,1264,1.72,1265,2.968,1266,2.968,1267,1.72,1268,1.72,1269,1.72,1270,1.72,1271,1.541,1272,1.541,1273,1.541,1274,1.541,1275,1.541,1276,2.659,1277,2.659,1278,1.541,1279,1.541,1280,1.541,1281,1.541,1282,1.541,1283,1.541,1284,1.424,1285,1.424,1286,1.424,1287,2.304,1288,1.424,1289,1.424,1290,1.424,1291,1.424,1292,1.424,1293,1.424,1294,1.424,1295,2.304,1296,1.424,1297,1.424,1298,1.424,1299,1.207,1300,1.336,1301,1.265,1302,1.336,1303,1.336,1304,1.336,1305,1.336,1306,1.336,1307,1.336,1308,1.336,1309,1.336,1310,2.304,1311,1.336,1312,1.336,1313,1.336,1314,1.336,1315,1.336,1316,1.336,1317,1.265,1318,1.265,1319,1.265,1320,1.265,1321,1.265,1322,1.265,1323,1.265,1324,2.812,1325,1.265,1326,1.265,1327,1.265,1328,1.265,1329,1.265,1330,1.265,1331,1.207,1332,1.207,1333,1.207,1334,1.207,1335,1.207,1336,1.207,1337,1.207,1338,1.207,1339,1.207,1340,1.207,1341,1.207,1342,1.207,1343,1.207,1344,1.207,1345,1.207,1346,1.207,1347,1.207,1348,1.207,1349,1.207,1350,1.207,1351,1.207,1352,1.207,1353,1.157,1354,1.157,1355,1.157,1356,1.157,1357,2.632,1358,1.996,1359,1.996,1360,1.157,1361,1.996,1362,1.996,1363,1.157,1364,1.157,1365,1.157,1366,1.157,1367,1.157,1368,1.157,1369,1.157,1370,1.996,1371,1.157,1372,1.157,1373,1.007,1374,1.113,1375,1.113,1376,1.113,1377,1.113,1378,1.113,1379,1.853,1380,1.113,1381,1.074,1382,1.853,1383,1.074,1384,1.074,1385,1.074,1386,1.074]],["title/core.html#純值無法新增屬性",[1271,4.96]],["body/core.html#純值無法新增屬性",[1,0.305,2,0.374,3,0.412,4,0.462,5,0.525,6,0.579,7,0.763,8,0.83,9,1.035,10,0.941,11,1.233,12,1.134,14,0.038,15,0.964,16,1.221,21,1.272,30,1.82,34,0.741,36,1.148,37,1.35,38,1.333,39,1.28,40,1.351,41,1.419,42,1.316,43,1.392,44,1.159,45,1.245,58,1.385,62,0.862,114,1.59,119,0.949,120,0.868,145,1.089,154,0.474,165,0.58,212,0.741,274,2.038,276,0.679,282,1.096,284,1.003,287,0.679,291,0.679,337,0.58,339,0.702,344,0.849,388,1.003,391,1.683,403,3.882,409,1.037,416,0.977,437,0.768,450,0.977,453,1.451,457,1.475,465,1.174,480,1.245,481,1.302,494,1.565,498,1.316,499,3.031,503,1.063,513,1.368,516,3.498,518,2.637,637,0.993,649,0.977,661,0.832,674,1.368,701,1.428,702,1.499,703,1.605,704,1.268,705,1.268,706,1.292,707,1.292,708,1.224,709,1.292,710,0.754,729,0.754,730,0.727,731,0.754,732,0.783,733,0.783,734,0.754,735,0.783,736,0.799,737,0.799,738,0.799,739,0.783,740,0.799,741,0.832,742,0.832,743,0.832,744,0.783,745,0.832,746,0.832,747,0.832,748,0.832,754,2.308,756,0.908,764,2.714,769,2.472,776,0.849,790,1.502,791,1.502,792,1.502,793,1.502,794,1.502,795,1.502,796,1.409,797,1.502,798,1.502,799,1.409,800,1.409,802,3.165,803,1.409,804,2.414,805,1.409,806,1.409,808,1.409,810,2.181,811,1.221,812,1.718,813,1.409,814,1.409,815,1.409,816,1.409,817,1.409,818,2.414,819,3.165,820,1.409,822,1.409,823,2.999,825,2.999,826,1.335,827,1.335,828,1.335,829,1.335,830,1.335,831,1.221,832,1.673,833,1.174,834,2.212,836,1.335,837,1.335,838,1.335,839,1.335,841,1.274,842,1.274,844,2.09,845,1.274,846,1.274,847,1.274,848,1.221,849,1.274,850,1.274,851,1.274,853,2.09,854,1.221,855,2.09,856,1.221,857,1.221,858,2.741,859,2.741,860,1.221,861,1.221,862,1.221,863,3.247,865,1.221,866,1.221,867,1.221,868,2.09,869,3.124,872,1.877,873,1.174,874,1.82,875,1.174,876,2.011,877,1.174,878,1.174,879,1.174,880,1.174,881,1.174,882,1.174,883,0.908,884,1.133,885,1.133,886,1.133,888,1.941,889,2.533,890,1.133,891,1.82,892,1.631,893,1.096,894,1.096,895,1.096,896,1.063,897,1.82,898,1.063,899,3.575,900,2.177,901,2.317,902,1.096,1095,2.96,1115,2.011,1144,1.631,1180,1.063,1225,0.952,1245,1.486,1247,0.929,1272,1.627,1273,1.627,1274,1.627,1275,1.627,1276,2.785,1277,2.785,1278,1.627,1279,1.627,1280,1.627,1281,1.627,1282,1.627,1283,1.627,1284,1.502,1285,1.502,1286,1.502,1287,2.414,1288,1.502,1289,1.502,1290,1.502,1291,1.502,1292,1.502,1293,1.502,1294,1.502,1295,2.414,1296,1.502,1297,1.502,1298,1.502,1299,1.274,1300,1.409,1301,1.335,1302,1.409,1303,1.409,1304,1.409,1305,1.409,1306,1.409,1307,1.409,1308,1.409,1309,1.409,1310,2.414,1311,1.409,1312,1.409,1313,1.409,1314,1.409,1315,1.409,1316,1.409,1317,1.335,1318,1.335,1319,1.335,1320,1.335,1321,1.335,1322,1.335,1323,1.335,1324,2.916,1325,1.335,1326,1.335,1327,1.335,1328,1.335,1329,1.335,1330,1.335,1331,1.274,1332,1.274,1333,1.274,1334,1.274,1335,1.274,1336,1.274,1337,1.274,1338,1.274,1339,1.274,1340,1.274,1341,1.274,1342,1.274,1343,1.274,1344,1.274,1345,1.274,1346,1.274,1347,1.274,1348,1.274,1349,1.274,1350,1.274,1351,1.274,1352,1.274,1353,1.221,1354,1.221,1355,1.221,1356,1.221,1357,2.741,1358,2.09,1359,2.09,1360,1.221,1361,2.09,1362,2.09,1363,1.221,1364,1.221,1365,1.221,1366,1.221,1367,1.221,1368,1.221,1369,1.221,1370,2.09,1371,1.221,1372,1.221,1373,1.063,1374,1.174,1375,1.174,1376,1.174,1377,1.174,1378,1.174,1379,1.941,1380,1.174,1381,1.133,1382,1.941,1383,1.133,1384,1.133,1385,1.133,1386,1.133]],["title/core.html#深淺拷貝",[1284,4.581]],["body/core.html#深淺拷貝",[1,0.306,2,0.375,3,0.413,4,0.461,5,0.524,6,0.577,7,0.761,8,0.826,9,1.027,10,0.931,11,1.216,12,1.132,14,0.038,15,0.587,16,1.273,21,1.276,30,1.887,36,1.127,37,1.325,38,1.359,39,1.31,40,1.382,41,1.455,42,1.353,43,1.431,44,1.196,45,1.285,58,1.405,62,0.858,114,1.573,119,0.984,120,0.905,145,1.111,154,0.495,165,0.605,274,2.103,276,0.708,282,1.144,284,1.047,287,0.708,337,0.605,339,0.733,344,0.886,388,1.047,391,1.725,403,3.924,409,1.07,416,1.019,437,0.802,450,1.019,453,1.497,457,1.522,465,1.225,480,1.285,481,1.343,494,1.605,498,1.364,499,3.1,503,1.109,513,1.418,516,3.572,518,2.722,637,1.029,649,1.019,661,0.867,674,1.418,701,1.474,702,1.547,703,1.656,704,1.315,705,1.315,706,1.339,707,1.339,708,1.269,709,1.339,710,0.787,729,0.787,730,0.759,731,0.787,732,0.817,733,0.817,734,0.787,735,0.817,736,0.833,737,0.833,738,0.833,739,0.817,740,0.833,741,0.867,742,0.867,743,0.867,744,0.817,745,0.867,746,0.867,747,0.867,748,0.867,754,2.373,756,0.947,764,2.783,769,2.542,776,0.886,799,1.47,800,1.47,802,3.266,803,1.47,804,2.502,805,1.47,806,1.47,808,1.47,810,2.261,811,1.273,812,1.781,813,1.47,814,1.47,815,1.47,816,1.47,817,1.47,818,2.502,819,3.266,820,1.47,822,1.47,823,3.094,825,3.094,826,1.393,827,1.393,828,1.393,829,1.393,830,1.393,831,1.273,832,1.735,833,1.225,834,2.274,836,1.393,837,1.393,838,1.393,839,1.393,841,1.329,842,1.329,844,2.167,845,1.329,846,1.329,847,1.329,848,1.273,849,1.329,850,1.329,851,1.329,853,2.167,854,1.273,855,2.167,856,1.273,857,1.273,858,2.829,859,2.829,860,1.273,861,1.273,862,1.273,863,3.339,865,1.273,866,1.273,867,1.273,868,2.167,869,3.212,872,1.946,873,1.225,874,1.887,875,1.225,876,2.085,877,1.225,878,1.225,879,1.225,880,1.225,881,1.225,882,1.225,883,0.947,884,1.182,885,1.182,886,1.182,888,2.012,889,2.605,890,1.182,891,1.887,892,1.691,893,1.144,894,1.144,895,1.144,896,1.109,897,1.887,898,1.109,899,3.658,900,2.227,901,2.391,902,1.144,1095,2.604,1115,2.085,1144,1.691,1245,1.54,1247,0.969,1285,1.567,1286,1.567,1287,2.502,1288,1.567,1289,1.567,1290,1.567,1291,1.567,1292,1.567,1293,1.567,1294,1.567,1295,2.502,1296,1.567,1297,1.567,1298,1.567,1299,1.329,1300,1.47,1301,1.393,1302,1.47,1303,1.47,1304,1.47,1305,1.47,1306,1.47,1307,1.47,1308,1.47,1309,1.47,1310,2.502,1311,1.47,1312,1.47,1313,1.47,1314,1.47,1315,1.47,1316,1.47,1317,1.393,1318,1.393,1319,1.393,1320,1.393,1321,1.393,1322,1.393,1323,1.393,1324,2.998,1325,1.393,1326,1.393,1327,1.393,1328,1.393,1329,1.393,1330,1.393,1331,1.329,1332,1.329,1333,1.329,1334,1.329,1335,1.329,1336,1.329,1337,1.329,1338,1.329,1339,1.329,1340,1.329,1341,1.329,1342,1.329,1343,1.329,1344,1.329,1345,1.329,1346,1.329,1347,1.329,1348,1.329,1349,1.329,1350,1.329,1351,1.329,1352,1.329,1353,1.273,1354,1.273,1355,1.273,1356,1.273,1357,2.829,1358,2.167,1359,2.167,1360,1.273,1361,2.167,1362,2.167,1363,1.273,1364,1.273,1365,1.273,1366,1.273,1367,1.273,1368,1.273,1369,1.273,1370,2.167,1371,1.273,1372,1.273,1373,1.109,1374,1.225,1375,1.225,1376,1.225,1377,1.225,1378,1.225,1379,2.012,1380,1.225,1381,1.182,1382,2.012,1383,1.182,1384,1.182,1385,1.182,1386,1.182]],["title/core.html#陣列",[1299,3.883]],["body/core.html#陣列",[1,0.309,2,0.379,3,0.417,4,0.467,5,0.53,6,0.584,7,0.77,8,0.835,9,1.036,10,0.937,11,1.22,12,1.115,14,0.038,15,0.646,16,1.401,21,1.291,30,2.045,36,1.127,37,1.325,38,1.35,39,1.272,40,1.342,41,1.38,42,1.229,43,1.3,44,0.993,45,1.067,58,1.447,62,0.855,114,1.627,119,1.067,120,0.996,145,1.158,154,0.544,165,0.665,274,2.255,276,0.779,282,1.258,284,1.152,337,0.665,339,0.806,344,0.974,388,1.152,391,1.636,403,4.016,409,1.147,416,1.121,437,0.882,453,1.606,457,1.264,480,1.067,481,1.115,494,1.522,498,1.479,499,3.258,516,2.493,518,1.348,637,1.115,649,1.121,661,0.954,674,1.537,701,1.224,702,1.285,703,1.375,704,0.85,705,0.85,706,0.866,707,0.866,708,0.82,709,0.866,710,0.866,729,0.866,730,0.835,731,0.866,732,0.899,733,0.899,734,0.866,735,0.899,736,0.916,737,0.916,738,0.916,739,0.899,740,0.916,741,0.954,742,0.954,743,0.954,744,0.899,745,0.954,746,0.954,747,0.954,748,0.954,769,2.703,776,0.974,823,3.318,825,3.318,826,1.532,827,1.532,828,1.532,829,1.532,830,1.532,831,1.401,832,1.88,833,1.348,834,2.418,836,1.532,837,1.532,838,1.532,839,1.532,841,1.461,842,1.461,844,2.349,845,1.461,846,1.461,847,1.461,848,1.401,849,1.461,850,1.461,851,1.461,853,2.349,854,1.401,855,2.349,856,1.401,857,1.401,858,3.033,859,3.033,860,1.401,861,1.401,862,1.401,863,3.55,865,1.401,866,1.401,867,1.401,868,2.349,869,3.416,872,2.11,873,1.348,874,2.045,875,1.348,876,2.26,877,1.348,878,1.348,879,1.348,880,1.348,881,1.348,882,1.348,883,1.041,884,1.301,885,1.301,886,1.301,888,2.181,889,2.77,890,1.301,891,2.045,892,1.833,893,1.258,894,1.258,895,1.258,896,1.22,897,2.045,898,1.22,899,3.844,900,2.341,901,2.564,902,1.258,1095,2.751,1115,2.26,1144,1.833,1245,0.996,1287,1.617,1295,1.617,1300,1.617,1301,1.532,1302,1.617,1303,1.617,1304,1.617,1305,1.617,1306,1.617,1307,1.617,1308,1.617,1309,1.617,1310,2.712,1311,1.617,1312,1.617,1313,1.617,1314,1.617,1315,1.617,1316,1.617,1317,1.532,1318,1.532,1319,1.532,1320,1.532,1321,1.532,1322,1.532,1323,1.532,1324,3.189,1325,1.532,1326,1.532,1327,1.532,1328,1.532,1329,1.532,1330,1.532,1331,1.461,1332,1.461,1333,1.461,1334,1.461,1335,1.461,1336,1.461,1337,1.461,1338,1.461,1339,1.461,1340,1.461,1341,1.461,1342,1.461,1343,1.461,1344,1.461,1345,1.461,1346,1.461,1347,1.461,1348,1.461,1349,1.461,1350,1.461,1351,1.461,1352,1.461,1353,1.401,1354,1.401,1355,1.401,1356,1.401,1357,3.033,1358,2.349,1359,2.349,1360,1.401,1361,2.349,1362,2.349,1363,1.401,1364,1.401,1365,1.401,1366,1.401,1367,1.401,1368,1.401,1369,1.401,1370,2.349,1371,1.401,1372,1.401,1373,1.22,1374,1.348,1375,1.348,1376,1.348,1377,1.348,1378,1.348,1379,2.181,1380,1.348,1381,1.301,1382,2.181,1383,1.301,1384,1.301,1385,1.301,1386,1.301]],["title/core.html#JSON",[516,3.06]],["body/core.html#JSON",[1,0.303,2,0.373,3,0.405,4,0.457,5,0.5,6,0.567,7,0.747,8,0.825,9,1.039,10,0.934,11,1.205,12,1.111,14,0.038,15,0.763,16,1.656,21,1.31,30,2.348,36,1.097,37,1.29,38,1.286,39,1.098,40,1.158,41,1.326,42,1.093,43,1.156,44,1.14,45,1.225,58,1.429,62,0.856,114,1.717,119,1.225,120,1.177,145,1.189,165,0.786,274,2.005,276,0.921,282,1.487,284,1.361,339,0.953,344,1.152,388,1.361,391,1.243,403,4.166,409,0.626,416,1.326,437,1.043,453,0.877,457,1.451,480,1.225,481,1.281,494,0.71,498,1.043,499,3.536,516,2.217,518,1.593,637,1.281,661,1.128,674,1.765,701,1.405,702,1.475,703,1.579,704,1.005,705,1.005,706,1.023,707,1.023,708,0.969,709,1.023,710,1.023,729,1.023,730,0.987,731,1.023,732,1.063,733,1.063,734,1.023,735,1.063,736,1.083,737,1.083,738,1.083,739,1.063,740,1.083,741,1.128,742,1.128,743,1.128,744,1.063,745,1.128,746,1.128,747,1.128,748,1.128,769,2.995,776,1.152,832,1.326,834,1.128,841,1.728,842,1.728,844,2.697,845,1.728,846,1.728,847,1.728,848,1.656,849,1.728,850,1.728,851,1.728,853,2.697,854,1.656,855,2.697,856,1.656,857,1.656,858,3.413,859,3.413,860,1.656,861,1.656,862,1.656,863,3.934,865,1.656,866,1.656,867,1.656,868,2.697,869,3.785,872,2.423,873,1.593,874,2.348,875,1.593,876,2.595,877,1.593,878,1.593,879,1.593,880,1.593,881,1.593,882,1.593,883,1.231,884,1.538,885,1.538,886,1.538,888,2.504,889,3.07,890,1.538,891,2.348,892,2.105,893,1.487,894,1.487,895,1.487,896,1.442,897,2.348,898,1.442,899,4.171,900,2.54,901,2.885,902,1.487,1095,2.737,1115,2.595,1144,2.105,1317,1.812,1318,1.812,1319,1.812,1320,1.812,1321,1.812,1322,1.812,1323,1.812,1324,3.534,1325,1.812,1326,1.812,1327,1.812,1328,1.812,1329,1.812,1330,1.812,1331,1.728,1332,1.728,1333,1.728,1334,1.728,1335,1.728,1336,1.728,1337,1.728,1338,1.728,1339,1.728,1340,1.728,1341,1.728,1342,1.728,1343,1.728,1344,1.728,1345,1.728,1346,1.728,1347,1.728,1348,1.728,1349,1.728,1350,1.728,1351,1.728,1352,1.728,1353,1.656,1354,1.656,1355,1.656,1356,1.656,1357,3.413,1358,2.697,1359,2.697,1360,1.656,1361,2.697,1362,2.697,1363,1.656,1364,1.656,1365,1.656,1366,1.656,1367,1.656,1368,1.656,1369,1.656,1370,2.697,1371,1.656,1372,1.656,1373,1.442,1374,1.593,1375,1.593,1376,1.593,1377,1.593,1378,1.593,1379,2.504,1380,1.593,1381,1.538,1382,2.504,1383,1.538,1384,1.538,1385,1.538,1386,1.538]],["title/core.html#function",[21,0.732]],["body/core.html#function",[1,0.304,2,0.375,3,0.406,4,0.454,5,0.495,6,0.561,7,0.74,8,0.817,9,1.025,10,0.916,11,1.232,12,1.104,14,0.038,21,1.312,36,1.124,37,1.322,38,1.322,39,1.138,40,1.201,41,1.375,42,1.141,43,1.207,44,1.19,45,1.279,58,1.454,62,0.856,114,1.706,119,1.279,145,1.215,165,0.829,274,2.094,276,0.971,282,1.569,284,1.436,339,1.005,344,1.215,388,1.436,391,1.298,403,4.211,409,0.66,416,1.398,453,0.925,457,1.515,480,1.279,481,1.337,494,0.749,498,1.099,499,3.624,637,1.337,661,1.19,674,1.842,701,1.467,702,1.54,703,1.649,704,1.06,705,1.06,706,1.079,707,1.079,708,1.022,709,1.079,710,1.079,729,1.079,730,1.041,731,1.079,732,1.121,733,1.121,734,1.079,735,1.121,736,1.143,737,1.143,738,1.143,739,1.121,740,1.143,741,1.19,742,1.19,743,1.19,744,1.121,745,1.19,746,1.19,747,1.19,748,1.19,769,3.09,776,1.215,832,1.398,834,1.19,853,2.816,854,1.747,855,2.816,856,1.747,857,1.747,858,3.539,859,3.539,860,1.747,861,1.747,862,1.747,863,4.059,865,1.747,866,1.747,867,1.747,868,2.816,869,3.905,872,2.529,873,1.68,874,2.452,875,1.68,876,2.709,877,1.68,878,1.68,879,1.68,880,1.68,881,1.68,882,1.68,883,1.299,884,1.622,885,1.622,886,1.622,888,2.615,889,3.167,890,1.622,891,2.452,892,2.197,893,1.569,894,1.569,895,1.569,896,1.521,897,2.452,898,1.521,899,4.275,900,2.603,901,2.991,902,1.569,1095,2.824,1115,2.709,1144,2.197,1324,3.178,1331,1.822,1332,1.822,1333,1.822,1334,1.822,1335,1.822,1336,1.822,1337,1.822,1338,1.822,1339,1.822,1340,1.822,1341,1.822,1342,1.822,1343,1.822,1344,1.822,1345,1.822,1346,1.822,1347,1.822,1348,1.822,1349,1.822,1350,1.822,1351,1.822,1352,1.822,1353,1.747,1354,1.747,1355,1.747,1356,1.747,1357,3.539,1358,2.816,1359,2.816,1360,1.747,1361,2.816,1362,2.816,1363,1.747,1364,1.747,1365,1.747,1366,1.747,1367,1.747,1368,1.747,1369,1.747,1370,2.816,1371,1.747,1372,1.747,1373,1.521,1374,1.68,1375,1.68,1376,1.68,1377,1.68,1378,1.68,1379,2.615,1380,1.68,1381,1.622,1382,2.615,1383,1.622,1384,1.622,1385,1.622,1386,1.622]],["title/core.html#立即函式-IIFE",[1353,3.722]],["body/core.html#立即函式-IIFE",[1,0.305,2,0.381,3,0.413,4,0.455,5,0.493,6,0.559,7,0.736,8,0.813,9,1.009,10,0.938,11,1.261,12,1.098,14,0.038,21,1.304,36,1.143,37,1.345,38,1.327,39,1.038,40,1.095,41,1.254,42,0.84,43,0.889,44,0.876,45,0.942,58,1.53,62,0.839,114,1.584,119,0.942,145,1.244,165,0.984,274,2.398,276,1.153,282,1.862,284,1.704,339,1.193,344,1.442,388,1.704,391,1.487,403,4.199,409,0.784,416,1.659,453,1.097,457,1.115,480,0.942,481,0.984,494,0.889,498,1.305,499,3.903,661,1.412,701,1.08,702,1.134,703,1.214,704,1.258,705,1.258,706,1.281,707,1.281,708,1.214,709,1.281,710,1.281,729,1.281,730,1.235,731,1.281,732,1.33,733,1.33,734,1.281,735,1.33,736,1.356,737,1.356,738,1.356,739,1.33,740,1.356,741,1.412,742,1.412,743,1.412,744,1.33,745,1.412,746,1.412,747,1.412,748,1.412,769,3.402,832,1.659,834,1.412,869,4.299,872,2.897,873,1.995,874,2.809,875,1.995,876,3.104,877,1.995,878,1.995,879,1.995,880,1.995,881,1.995,882,1.995,883,1.541,884,1.925,885,1.925,886,1.925,888,2.995,889,3.486,890,1.925,891,2.809,892,2.517,893,1.862,894,1.862,895,1.862,896,1.805,897,2.809,898,1.805,899,4.604,900,2.804,901,3.348,902,1.862,1095,3.108,1144,2.517,1324,2.897,1354,2.073,1355,2.073,1356,2.073,1357,3.96,1358,3.226,1359,3.226,1360,2.073,1361,3.226,1362,3.226,1363,2.073,1364,2.073,1365,2.073,1366,2.073,1367,2.073,1368,2.073,1369,2.073,1370,3.226,1371,2.073,1372,2.073,1373,1.805,1374,1.995,1375,1.995,1376,1.995,1377,1.995,1378,1.995,1379,2.995,1380,1.995,1381,1.925,1382,2.995,1383,1.925,1384,1.925,1385,1.925,1386,1.925]],["title/core.html#參數",[1373,3.24]],["body/core.html#參數",[1,0.312,2,0.39,3,0.428,4,0.481,5,0.522,6,0.592,7,0.78,8,0.861,9,1.068,10,0.993,11,1.336,12,1.12,14,0.038,21,1.285,36,1.206,37,1.418,38,1.379,39,0.868,40,0.915,41,1.048,58,1.636,62,0.812,114,1.435,119,1.225,145,1.317,274,2.925,276,1.5,284,2.217,344,1.876,388,2.217,391,1.243,403,4.416,453,1.428,494,1.156,498,1.698,499,4.314,769,3.886,832,2.159,834,1.837,874,2.348,883,2.005,884,2.504,885,2.504,886,2.504,888,3.653,889,3.983,890,2.504,891,3.425,892,3.069,893,2.422,894,2.422,895,2.422,896,2.348,897,3.425,898,2.348,899,5.09,900,3.099,901,3.926,902,2.422,1095,1.876,1144,2.104,1324,3.533,1374,2.595,1375,2.595,1376,2.595,1377,2.595,1378,2.595,1379,3.653,1380,2.595,1381,2.504,1382,3.653,1383,2.504,1384,2.504,1385,2.504,1386,2.504]],["title/core.html#閉包-Closure",[388,2.293,1381,2.59]],["body/core.html#閉包-Closure",[1,0.302,2,0.381,3,0.421,4,0.455,5,0.51,6,0.578,7,0.762,8,0.842,9,1.09,10,1.013,11,1.363,12,1.164,14,0.037,21,1.256,36,1.212,37,1.426,38,1.524,39,1.04,40,1.097,41,1.257,58,1.655,62,0.806,114,1.383,119,1.469,145,1.412,274,3.328,276,1.798,284,2.658,403,4.484,498,2.036,769,4.217,891,3.897,892,3.492,893,2.904,894,2.904,895,2.904,896,2.815,897,3.897,898,2.815,899,5.404,900,3.29,901,4.339,902,2.904,1144,2.523,1324,4.02,1382,4.155,1383,3.002,1384,3.002,1385,3.002,1386,3.002]],["title/core.html#函式工廠",[1387,5.535]],["body/core.html#函式工廠",[1,0.244,2,0.309,3,0.337,4,0.425,5,0.476,6,0.54,7,0.711,8,0.785,9,1.017,10,0.734,11,0.987,12,1.089,14,0.037,21,1.26,24,3.724,36,0.947,37,1.114,38,1.191,39,1.29,40,1.361,41,1.559,42,1.625,43,1.72,44,1.696,62,0.675,119,2.598,145,1.466,276,2.875,291,2.231,702,2.827,752,2.983,769,5.023,891,5.26,892,4.994,896,4.501,897,3.492,905,8.051,906,5.346,907,5.346,908,5.346,909,6.889,910,5.346,911,5.346,1388,5.966,1389,5.966,1390,5.966]],["title/core.html#this",[]],["body/core.html#this",[1,0.303,2,0.365,3,0.384,4,0.476,5,0.55,6,0.615,7,0.74,8,0.752,9,0.84,10,0.781,11,1.051,12,1.103,14,0.038,15,2.145,21,1.227,27,1.158,34,2.823,36,1.008,37,1.186,38,1.114,39,1.207,40,1.274,41,1.459,42,0.773,43,0.818,44,0.806,45,0.867,62,0.832,114,1.753,115,1.419,119,1.373,145,1.036,154,0.742,276,1.061,277,3.417,339,2.159,348,1.866,391,2.282,403,2.908,409,0.722,454,1.527,480,0.867,481,0.906,482,4.67,494,2.122,495,2.087,498,1.201,649,2.419,652,4.831,661,1.3,670,4.682,674,1.248,675,1.179,701,0.994,702,1.044,703,1.117,754,1.356,769,2.857,784,2.348,796,3.49,832,1.527,833,1.836,834,1.3,883,2.247,912,2.087,913,2.348,914,2.543,915,3.173,916,2.715,917,1.772,918,3.916,920,4.028,921,2.203,922,2.203,923,2.543,924,2.543,925,2.543,926,2.543,927,6.596,928,6.596,929,2.543,930,2.543,931,4.619,932,2.543,933,6.201,934,4.028,936,2.543,939,5.689,940,4.028,941,2.543,942,4.028,943,2.543,944,2.543,945,3.154,946,4.619,947,3.611,948,2.348,949,2.348,950,3.49,951,2.203,953,2.348,954,2.348,956,3.72,957,2.348,958,2.348,959,2.348,960,2.348,961,2.348,962,2.348,963,3.306,964,2.348,965,3.306,966,2.348,967,3.306,968,2.348,969,3.306,970,2.348,1095,4.027,1245,2.668,1301,2.087,1391,2.838,1392,2.838,1393,2.838,1394,2.838,1395,2.838,1396,2.838,1397,2.838,1398,2.838,1399,4.028,1400,2.838,1401,2.087,1402,2.838,1403,2.838,1404,2.838,1405,2.838,1406,2.838,1407,2.838,1408,2.838,1409,2.838,1410,2.838,1411,2.838,1412,4.495,1413,2.838,1414,2.838,1415,2.838,1416,2.838,1417,2.838,1418,7.713,1419,2.838,1420,2.838,1421,2.838,1422,2.838,1423,2.838,1424,2.838,1425,2.838,1426,3.72,1427,3.72,1428,2.838,1429,2.838,1430,2.838,1431,2.838,1432,2.838,1433,2.838,1434,2.838,1435,2.838,1436,2.543,1437,2.543,1438,2.543,1439,2.543,1440,2.543,1441,2.543,1442,2.543,1443,2.543,1444,2.543,1445,2.543,1446,2.543,1447,2.543,1448,2.543,1449,2.543,1450,4.028]],["title/core.html#new",[15,1.716]],["body/core.html#new",[1,0.27,2,0.281,3,0.307,4,0.387,5,0.491,6,0.492,7,0.648,8,0.716,9,0.927,10,0.862,11,1.159,12,1.153,14,0.037,15,2.46,21,1.175,34,3.623,36,1.113,37,1.309,38,1.399,39,1.516,40,1.599,41,1.832,42,1.413,43,1.495,44,1.474,45,1.584,62,0.857,114,1.077,145,1.296,154,1.355,277,4.576,391,2.635,409,1.318,454,2.791,480,1.584,481,1.656,674,2.281,675,2.154,701,1.816,702,1.907,703,2.041,834,2.375,945,4.916,946,6.569,947,5.135,948,4.291,949,4.291,950,5.441,951,4.026,953,4.291,954,4.291,956,5.799,957,4.291,958,4.291,959,4.291,960,4.291,961,4.291,962,4.291,963,5.155,964,4.291,965,5.155,966,4.291,967,5.155,968,4.291,969,5.155,970,4.291,1436,4.646,1437,4.646,1438,4.646,1439,4.646,1440,4.646,1441,4.646,1442,4.646,1443,4.646,1444,4.646,1445,4.646,1446,4.646,1447,4.646,1448,4.646,1449,4.646,1450,6.279]],["title/core.html#繼承",[1451,5.535]],["body/core.html#繼承",[1,0.227,2,0.286,3,0.312,4,0.394,5,0.441,6,0.501,7,0.66,8,0.728,9,0.943,10,0.877,11,1.18,12,1.041,14,0.037,15,1.649,21,1.185,36,1.132,37,1.332,38,1.424,39,1.542,40,1.627,41,1.864,42,1.943,43,1.534,44,1.512,45,1.625,62,0.787,114,1.671,337,1.699,348,1.778,391,2.92,437,3.404,480,1.625,481,1.699,494,2.583,754,3.844,945,6.47,947,5.203,951,4.131,952,4.767,971,6.244,972,7.207,973,4.767,974,5.536,975,4.767,976,4.767,978,4.767,979,4.767,980,4.767,982,6.389,984,4.767,985,4.767,986,4.767,987,null,988,4.767,989,4.767,990,4.767,991,4.767,992,4.767,993,4.767,1452,8.043,1453,5.321,1454,5.321,1455,5.321,1456,7.131,1457,5.321,1458,5.321,1459,5.321,1460,5.321,1461,5.321,1462,5.321,1463,5.321,1464,5.321,1465,7.131,1466,5.321,1467,5.321,1468,5.321,1469,5.321,1470,5.321,1471,5.321,1472,5.321]],["title/core.html#屬性特徵",[1473,5.535]],["body/core.html#屬性特徵",[1,0.289,2,0.386,3,0.398,4,0.48,5,0.521,6,0.565,7,0.745,8,0.822,9,0.91,10,0.846,11,1.138,12,0.975,14,0.037,15,1.235,19,2.164,21,0.91,36,1.092,37,1.285,38,1.373,39,1.259,40,1.328,41,1.521,42,1.586,43,1.678,44,1.132,45,1.217,62,0.763,114,0.828,119,1.778,120,2.782,140,0.861,145,1.123,154,1.798,165,1.272,291,1.489,337,1.272,344,1.863,345,3.092,346,2.93,367,1.863,409,1.013,476,5.207,480,1.217,481,1.272,494,2.503,513,1.752,588,3.218,637,1.272,671,2.405,684,2.264,701,1.395,702,1.465,834,1.824,892,3.054,898,2.332,950,3.092,994,2.039,995,3.914,996,6.78,997,3.569,998,3.569,999,5.216,1000,6.164,1001,3.569,1002,3.569,1003,3.569,1004,3.569,1005,3.569,1006,3.569,1007,5.216,1008,5.216,1009,5.216,1010,5.216,1011,7.366,1012,4.817,1013,3.569,1014,5.216,1015,3.569,1016,4.45,1017,5.216,1019,3.569,1020,4.281,1021,5.216,1022,3.569,1023,3.569,1024,3.569,1025,3.569,1026,3.569,1028,3.569,1029,5.216,1030,3.569,1031,2.678,1032,3.296,1033,3.092,1034,3.569,1035,5.216,1036,3.296,1037,3.569,1038,3.569,1039,3.569,1040,3.569,1041,3.569,1042,3.569,1262,2.144,1373,2.332,1426,3.296,1427,3.296,1474,3.983,1475,3.983,1476,3.983,1477,3.983,1478,3.983,1479,3.983,1480,3.983,1481,3.983,1482,3.983,1483,3.983,1484,3.983,1485,3.983,1486,3.983,1487,3.983,1488,3.983,1489,3.983,1490,3.983,1491,3.983,1492,3.983,1493,5.821,1494,5.821,1495,3.983,1496,3.983,1497,3.983,1498,3.983,1499,3.983,1500,3.983,1501,3.569,1502,3.983,1503,3.983,1504,3.983,1505,3.983,1506,3.983,1507,3.983,1508,3.983,1509,3.983,1510,3.983,1511,3.983,1512,3.983,1513,3.983,1514,3.983,1515,3.983,1516,3.983,1517,3.983,1518,3.983]],["title/core.html#Let",[]],["body/core.html#Let",[1,0.281,2,0.355,3,0.387,4,0.489,5,0.463,6,0.525,10,0.92,12,0.907,14,0.036,58,1.325,62,0.827,274,4.421,391,2.741,649,4.028,874,4.381,1045,6.706,1095,3.501,1245,3.577,1519,7.485,1520,8.844,1521,7.485,1522,5.033,1523,7.485]],["title/core.html#const",[140,1.197]],["body/core.html#const",[1,0.283,2,0.357,3,0.39,4,0.452,5,0.507,6,0.575,7,0.757,8,0.836,9,1.083,10,1.006,11,1.09,12,0.992,14,0.037,36,1.046,37,1.23,62,0.719,140,1.926,276,2.463,326,4.62,358,5.45,391,2.041,494,1.899,612,5.113,752,3.292,769,3.371,777,7.232,913,5.45,1046,5.901,1047,5.901,1048,5.901,1049,7.334,1050,6.55,1051,5.45,1524,6.586,1525,6.586,1526,6.586,1527,6.586,1528,6.586,1529,6.586,1530,6.586,1531,6.586,1532,6.586,1533,6.586,1534,6.586,1535,6.586,1536,6.586,1537,6.586,1538,6.586]],["title/core.html#ES6-Airbnb",[812,2.293,1053,3.433]],["body/core.html#ES6-Airbnb",[14,0.027,32,4.933,335,4.76,489,4.942,503,4.463,640,7.851,779,6.577,812,4.215,1053,7.399,1054,6.832,1055,8.012,1056,6.832,1057,8.501,1058,8.012,1059,6.832,1060,6.832,1539,7.625,1540,7.625,1541,7.625,1542,7.625,1543,7.625,1544,7.625]],["title/core.html#箭頭函數",[1545,4.298]],["body/core.html#箭頭函數",[1,0.318,2,0.379,3,0.418,4,0.516,5,0.569,6,0.497,7,0.655,8,0.617,9,0.554,10,0.953,14,0.038,15,1.298,21,1.025,39,0.906,58,1.371,62,0.846,114,1.706,119,2.162,120,3.702,140,2.084,145,0.985,337,1.337,339,1.62,340,3.251,348,1.4,476,2.709,499,4.204,569,2.254,585,5.409,650,3.768,658,3.09,674,4.239,744,3.69,767,2.001,1011,4.995,1031,2.816,1032,3.466,1050,3.08,1051,3.466,1061,3.752,1063,5.409,1064,3.752,1065,3.752,1066,3.752,1067,3.752,1068,3.752,1069,3.752,1070,3.752,1071,3.752,1072,2.709,1073,5.409,1074,3.752,1075,5.409,1076,6.941,1077,6.941,1078,3.752,1079,5.409,1080,5.409,1373,2.451,1522,2.816,1545,3.251,1546,4.188,1547,4.188,1548,4.188,1549,3.752,1550,4.188,1551,4.188,1552,4.188,1553,4.188,1554,4.188,1555,4.188,1556,4.188,1557,4.188,1558,4.188,1559,4.188,1560,4.188]],["title/num.html",[675,2.3]],["body/num.html",[1,0.277,2,0.27,3,0.411,4,0.372,5,0.417,6,0.473,7,0.768,8,0.688,9,1.151,10,1.133,11,1.114,12,0.816,14,0.037,21,1.219,36,1.07,37,1.258,38,1.345,58,1.363,62,0.764,114,1.808,139,5.404,140,1.666,145,1.504,337,2.151,637,1.562,674,3.388,675,3.448,834,4.3,1561,4.892,1562,4.383,1563,4.383,1564,4.383,1565,4.383,1566,8.059,1567,8.537,1568,6.586,1569,6.401,1570,4.383,1571,4.383,1572,4.383,1573,4.383,1574,4.383,1575,6.035,1576,6.757,1577,2.954,1578,6.035,1579,4.383,1580,6.035,1581,6.035,1582,4.892,1583,6.035,1584,4.383,1585,6.902,1586,4.383,1587,6.902,1588,4.383,1589,4.383,1590,4.383]],["title/num.html#取值",[1591,5.535]],["body/num.html#取值",[1,0.208,2,0.262,3,0.287,4,0.361,5,0.405,6,0.459,7,0.605,8,0.668,9,0.865,10,1.143,11,1.082,14,0.037,21,1.175,36,1.039,37,1.222,38,1.306,139,6.228,140,1.92,145,1.449,675,3.688,1562,5.861,1563,5.861,1564,5.861,1565,5.861,1566,8.734,1567,9.029,1568,6.838,1569,6.529,1570,5.861,1571,5.861,1572,5.861,1573,5.861,1574,5.861,1592,6.541,1593,6.541,1594,6.541,1595,6.541]],["title/num.html#補數字",[1596,5.535]],["body/num.html#補數字",[1,0.282,2,0.231,3,0.421,4,0.318,5,0.356,6,0.404,7,0.773,8,0.587,9,1.106,10,1.028,11,0.951,12,0.909,14,0.037,21,1.172,36,0.913,37,1.074,38,1.148,58,1.018,62,0.807,114,1.91,145,1.446,337,2.397,637,1.836,674,3.676,675,2.389,834,4.46,1568,5.266,1569,5.521,1575,6.726,1576,7.135,1578,6.726,1579,5.152,1580,6.726,1581,6.726,1583,6.726,1584,5.152,1585,7.488,1586,5.152,1587,7.488,1588,5.152,1589,5.152,1590,5.152,1597,5.75,1598,5.75,1599,5.75,1600,5.75,1601,5.75,1602,5.75]],["title/performance.html",[1603,5.535]],["body/performance.html",[1,0.277,2,0.35,3,0.382,4,0.482,5,0.519,6,0.558,7,0.581,8,0.642,9,0.831,10,0.977,11,0.733,12,1.129,14,0.038,21,1.051,32,2.865,36,0.703,58,1.292,83,3.665,87,4.621,88,3.665,115,2.214,119,1.353,120,4.165,287,2.73,289,2.592,339,1.713,342,1.911,371,5.669,397,3.486,569,4.929,570,5.122,637,1.414,781,5.669,834,2.028,848,2.978,917,5.897,1062,4.621,1604,4.428,1605,3.968,1606,4.428,1607,5.629,1608,3.968,1609,3.968,1610,6.042,1611,3.968,1612,5.122,1613,4.428,1614,6.542,1615,6.542,1616,3.968,1617,4.428,1618,3.968,1619,3.968,1620,3.968,1621,5.629,1622,5.629,1623,3.968,1624,3.968,1625,5.199,1626,3.968,1627,3.968,1628,4.064,1629,7.12,1630,5.629,1631,3.968,1632,3.968,1633,3.968,1634,3.968,1635,5.629,1636,6.542,1637,4.428,1638,3.968,1639,2.674,1640,6.542,1641,3.968,1642,3.968,1643,2.592,1644,3.968,1645,3.968]],["title/performance.html#優化原則和方向",[1646,5.535]],["body/performance.html#優化原則和方向",[88,6.145,287,2.777,917,4.636,1605,6.654,1607,6.654,1608,6.654,1609,6.654,1610,6.145,1611,6.654,1612,6.176,1647,7.426,1648,7.426,1649,7.426,1650,7.426,1651,7.426,1652,7.426,1653,7.426,1654,7.426,1655,7.426,1656,7.426,1657,7.426,1658,7.426,1659,8.803,1660,7.426,1661,7.426,1662,7.426,1663,7.426,1664,7.426,1665,6.654,1666,7.426,1667,7.426,1668,7.888,1669,7.426,1670,6.654,1671,7.426,1672,7.426,1673,7.426,1674,7.426]],["title/performance.html#懶加載",[1675,5.535]],["body/performance.html#懶加載",[1,0.231,2,0.292,3,0.319,4,0.402,5,0.45,12,0.881,14,0.036,83,6.02,87,6.396,120,4.606,289,4.258,371,7.222,569,3.915,570,5.103,1612,5.103,1614,7.792,1615,7.792,1616,6.518,1618,6.518,1619,6.518,1620,6.518,1676,7.275,1677,7.275,1678,7.275,1679,7.275,1680,7.275,1681,7.275,1682,7.275,1683,7.275,1684,7.275,1685,7.275,1686,7.275,1687,7.275,1688,7.275]],["title/performance.html#DOM-查詢做緩存",[917,2.59,1665,3.717]],["body/performance.html#DOM-查詢做緩存",[1,0.278,2,0.351,3,0.383,4,0.483,5,0.455,6,0.516,12,1.132,14,0.037,58,1.549,569,4.709,834,3.366,917,5.462,1549,7.84,1621,7.84,1622,7.84,1623,6.585,1624,6.585,1689,7.35,1690,7.35,1691,7.35,1692,7.35,1693,7.35]],["title/performance.html#合併-DOM-插入-createDocumentFragment",[917,1.726,1625,2.287,1694,2.764,1695,2.764]],["body/performance.html#合併-DOM-插入-createDocumentFragment",[1,0.222,2,0.28,3,0.305,4,0.385,5,0.432,6,0.489,7,0.645,8,0.712,9,0.922,10,1.123,12,1.106,14,0.037,58,1.234,302,5.77,342,3.008,397,4.045,569,4.915,570,4.891,917,5.292,1625,5.77,1626,6.247,1627,6.247,1628,4.511,1629,8.513,1630,7.595,1631,6.247,1632,6.247,1633,6.247,1634,6.247,1696,6.972,1697,6.972,1698,6.972,1699,6.972,1700,6.972,1701,6.972,1702,6.972,1703,6.972,1704,6.972]],["title/performance.html#儘早執行操作-DOMContentLoaded",[1610,3.433,1705,4.149]],["body/performance.html#儘早執行操作-DOMContentLoaded",[1,0.244,2,0.308,3,0.336,4,0.424,5,0.475,6,0.538,14,0.037,21,1.187,339,2.965,569,4.126,917,4.785,1635,8.037,1706,7.666,1707,7.666,1708,7.666,1709,7.666]],["title/performance.html#事件節流",[1670,4.96]],["body/performance.html#事件節流",[1,0.222,2,0.28,3,0.306,4,0.386,5,0.433,6,0.491,7,0.647,8,0.714,9,0.925,10,0.859,11,1.156,12,1.028,14,0.037,21,1.123,36,1.11,115,3.494,119,2.135,569,3.762,570,4.903,781,7.098,1636,6.263,1638,6.263,1640,8.192,1641,6.263,1642,6.263,1643,4.092,1644,6.263,1645,6.263,1710,6.989,1711,6.989,1712,6.989,1713,6.989,1714,6.989,1715,6.989,1716,6.989,1717,6.989,1718,6.989,1719,6.989,1720,8.489,1721,6.989,1722,6.989]],["title/math.html",[14,0.019]],["body/math.html",[1,0.287,2,0.399,3,0.281,4,0.354,5,0.397,6,0.521,7,0.421,8,0.465,10,0.56,12,0.898,14,0.038,19,1.433,36,0.723,58,1.633,62,0.651,114,0.947,119,1.958,140,0.985,145,0.744,154,1.938,165,1.455,287,1.703,378,2.667,397,1.893,398,4.496,409,1.158,454,2.452,615,2.844,637,2.047,694,2.226,1568,4.496,1569,3.351,1576,4.976,1577,2.751,1639,2.751,1643,2.667,1723,4.082,1724,4.082,1725,3.351,1726,4.629,1727,4.31,1728,3.351,1729,3.351,1730,3.351,1731,3.351,1732,3.351,1733,4.31,1734,4.31,1735,2.667,1736,3.063,1737,3.063,1738,2.667,1739,3.063,1740,3.063,1741,5.677,1742,5.625,1743,4.964,1744,2.844,1745,4.082,1746,4.629,1747,4.001,1748,4.082,1749,4.082,1750,2.844,1751,4.082,1752,6.055,1753,4.001,1754,5.491,1755,5.024,1756,4.001,1757,4.001,1758,4.001,1759,2.844,1760,4.082,1761,4.082,1762,2.844,1763,2.844,1764,2.844,1765,2.844,1766,2.844,1767,2.844,1768,2.844,1769,2.844,1770,2.844,1771,2.844,1772,2.667,1773,2.844]],["title/math.html#Math",[1568,3.883]],["body/math.html#Math",[1,0.287,2,0.397,3,0.28,4,0.353,5,0.396,6,0.519,7,0.419,8,0.463,10,0.558,12,0.896,14,0.037,19,1.426,36,0.72,58,1.631,62,0.65,114,0.942,119,1.951,140,0.981,145,0.74,154,1.933,165,1.448,269,3.52,378,2.654,384,2.83,397,1.884,398,4.481,409,1.153,454,2.44,615,2.83,637,1.448,694,2.215,1568,3.181,1569,3.335,1576,4.96,1577,2.738,1639,2.738,1643,2.654,1723,4.063,1724,4.063,1725,3.335,1726,4.617,1727,4.295,1728,3.335,1729,3.335,1730,3.335,1731,3.335,1732,3.335,1733,3.049,1734,4.295,1735,2.654,1736,3.049,1737,3.049,1738,2.654,1739,3.049,1740,3.049,1741,5.62,1742,5.62,1743,4.701,1744,2.83,1746,2.83,1747,3.988,1750,2.83,1752,6.049,1753,2.83,1754,5.483,1755,5.013,1756,3.988,1757,3.988,1758,3.988,1759,2.83,1762,2.83,1763,2.83,1764,2.83,1765,2.83,1766,2.83,1767,2.83,1768,2.83,1769,2.83,1770,2.83,1771,2.83,1772,2.654,1773,2.83,1774,4.534,1775,4.534,1776,3.752,1777,3.752,1778,3.752,1779,3.752,1780,3.752,1781,3.752,1782,3.752,1783,3.752,1784,3.752,1785,3.752,1786,3.335,1787,3.335,1788,3.335,1789,3.049,1790,3.52,1791,3.52,1792,3.52,1793,3.049,1794,3.049,1795,3.049,1796,3.049,1797,3.049,1798,3.049,1799,2.577,1800,3.049,1801,3.049,1802,3.049,1803,3.049,1804,3.049,1805,3.049,1806,5.905,1807,5.905,1808,5.905,1809,5.905,1810,3.049,1811,3.049,1812,3.049,1813,3.049,1814,3.049,1815,3.049,1816,3.049,1817,3.049,1818,3.049,1819,3.049,1820,3.049,1821,3.049]],["title/math.html#浮點數運算的坑",[1776,4.581]],["body/math.html#浮點數運算的坑",[1,0.282,2,0.397,3,0.287,4,0.362,5,0.405,6,0.46,7,0.435,8,0.48,12,0.913,14,0.037,19,1.478,36,0.746,58,1.646,62,0.575,119,2,145,0.767,154,1.97,165,1.5,378,2.75,384,2.933,409,1.195,454,2.529,615,2.933,637,1.5,694,2.296,1577,2.837,1639,2.837,1643,2.75,1725,3.456,1726,4.707,1727,4.404,1728,3.456,1729,3.456,1730,3.456,1731,3.456,1732,3.456,1733,3.159,1734,4.404,1735,2.75,1736,3.159,1737,3.159,1738,2.75,1739,3.159,1740,3.159,1741,5.658,1742,5.658,1743,4.775,1744,2.933,1746,2.933,1747,4.089,1750,2.933,1752,6.087,1753,2.933,1754,5.545,1755,5.092,1756,4.089,1757,4.089,1758,4.089,1759,2.933,1762,2.933,1763,2.933,1764,2.933,1765,2.933,1766,2.933,1767,2.933,1768,2.933,1769,2.933,1770,2.933,1771,2.933,1772,2.75,1773,2.933,1777,3.888,1778,3.888,1779,3.888,1780,3.888,1781,3.888,1782,3.888,1783,3.888,1784,3.888,1785,3.888,1786,3.456,1787,3.456,1788,3.456,1789,3.159,1790,3.648,1791,3.648,1792,3.648,1793,3.159,1794,3.159,1795,3.159,1796,3.159,1797,3.159,1798,3.159,1799,2.671,1800,3.159,1801,3.159,1802,3.159,1803,3.159,1804,3.159,1805,3.159,1806,5.973,1807,5.973,1808,5.973,1809,5.973,1810,3.159,1811,3.159,1812,3.159,1813,3.159,1814,3.159,1815,3.159,1816,3.159,1817,3.159,1818,3.159,1819,3.159,1820,3.159,1821,3.159]],["title/math.html#科學符號處理",[1786,4.071]],["body/math.html#科學符號處理",[1,0.282,2,0.4,3,0.226,4,0.284,5,0.319,6,0.361,7,0.476,8,0.526,14,0.037,19,1.619,58,1.682,145,0.84,154,1.823,378,3.013,384,3.214,615,3.214,1577,3.109,1639,3.109,1643,3.013,1726,3.214,1733,3.461,1734,4.689,1735,3.013,1736,3.461,1737,3.461,1738,3.013,1739,3.461,1740,3.461,1741,5.752,1742,5.752,1743,4.963,1744,3.214,1746,3.214,1747,4.354,1750,3.214,1752,6.181,1753,3.214,1754,5.702,1755,5.292,1756,4.354,1757,4.354,1758,4.354,1759,3.214,1762,3.214,1763,3.214,1764,3.214,1765,3.214,1766,3.214,1767,3.214,1768,3.214,1769,3.214,1770,3.214,1771,3.214,1772,3.013,1773,3.214,1787,3.786,1788,3.786,1789,3.461,1790,3.997,1791,3.997,1792,3.997,1793,3.461,1794,3.461,1795,3.461,1796,3.461,1797,3.461,1798,3.461,1799,2.926,1800,3.461,1801,3.461,1802,3.461,1803,3.461,1804,3.461,1805,3.461,1806,6.142,1807,6.142,1808,6.142,1809,6.142,1810,3.461,1811,3.461,1812,3.461,1813,3.461,1814,3.461,1815,3.461,1816,3.461,1817,3.461,1818,3.461,1819,3.461,1820,3.461,1821,3.461]],["title/math.html#why-0-1-0-2-0-3",[14,0.014,1741,1.387,1742,1.387,1743,1.387]],["body/math.html#why-0-1-0-2-0-3",[1,0.276,2,0.401,14,0.037,19,1.722,58,1.705,154,1.899,384,3.417,1577,3.306,1643,3.204,1726,3.417,1741,5.765,1742,5.765,1743,4.775,1744,3.417,1746,3.417,1747,4.537,1750,3.417,1752,6.24,1753,3.417,1754,5.804,1755,5.425,1756,4.537,1757,4.537,1758,4.537,1759,3.417,1762,3.417,1763,3.417,1764,3.417,1765,3.417,1766,3.417,1767,3.417,1768,3.417,1769,3.417,1770,3.417,1771,3.417,1772,3.204,1773,3.417,1789,3.68,1790,4.25,1791,4.25,1792,4.25,1793,3.68,1794,3.68,1795,3.68,1796,3.68,1797,3.68,1798,3.68,1799,3.111,1800,3.68,1801,3.68,1802,3.68,1803,3.68,1804,3.68,1805,3.68,1806,6.252,1807,6.252,1808,6.252,1809,6.252,1810,3.68,1811,3.68,1812,3.68,1813,3.68,1814,3.68,1815,3.68,1816,3.68,1817,3.68,1818,3.68,1819,3.68,1820,3.68,1821,3.68]],["title/scope.html",[417,4.071]],["body/scope.html",[1,0.311,2,0.381,3,0.411,4,0.518,5,0.581,6,0.618,7,0.745,8,0.758,9,0.982,10,0.561,12,1.212,14,0.037,21,1.272,62,0.844,114,0.948,145,1.047,212,1.861,287,1.706,291,3.508,348,1.525,403,4.227,409,2.047,416,5.049,417,5.459,419,5.848,454,3.454,489,4.102,498,2.716,658,3.285,661,2.939,664,2.336,777,3.543,931,5.31,937,6.142,1822,6.417,1823,6.832,1824,4.563,1825,3.201,1826,6.417,1827,3.356,1828,4.563,1829,4.502,1830,6.417,1831,4.563,1832,4.563,1833,4.563,1834,4.563,1835,4.563,1836,3.776,1837,4.563]],["title/url.html",[46,3.581]],["body/url.html",[14,0.034,47,7,346,5.746,1838,7.813,1839,7.813,1840,7.813,1841,7.813,1842,9.069,1843,9.069,1844,7.813,1845,7.813,1846,5.481,1847,7.813,1848,7.813,1849,7.813,1850,7.813,1851,6.465,1852,7.813]],["title/operators.html",[1853,4.298]],["body/operators.html",[1,0.324,2,0.4,3,0.387,4,0.46,5,0.567,6,0.474,7,0.625,8,0.691,9,0.894,10,0.831,11,0.942,12,0.904,14,0.038,19,2.922,21,0.894,27,1.576,34,1.576,36,0.904,37,1.063,38,1.137,39,0.836,40,0.882,58,1.522,62,0.89,114,1.834,145,1.103,154,2.174,212,1.576,274,3.728,283,2.027,348,1.291,392,2.334,397,3.455,398,2.711,409,2.022,453,2.026,480,1.18,489,2.136,494,2.15,498,1.636,655,2.412,656,2.598,657,2.5,658,1.978,659,2.412,675,1.605,708,1.521,711,3.659,720,2.987,749,1.978,812,2.136,1772,2.262,1853,4.42,1854,3.463,1855,3.463,1856,6.682,1857,3.463,1858,3.463,1859,7.124,1860,7.124,1861,3.463,1862,3.463,1863,3.463,1864,3.463,1865,3.463,1866,3.463,1867,5.101,1868,3.198,1869,3.463,1870,3.463,1871,6.682,1872,3.463,1873,3.463,1874,4.42,1875,3.198,1876,3.463,1877,3.463,1878,3.463,1879,3.463,1880,3.463,1881,3.864,1882,3.463,1883,3.463,1884,5.101]],["title/operators.html#What-is-the-difference-between-the-equality-operators-and",[14,0.015,720,0.966,1853,1.43,1854,1.65,1855,1.65]],["body/operators.html#What-is-the-difference-between-the-equality-operators-and",[1,0.311,2,0.305,3,0.333,4,0.42,5,0.363,6,0.411,7,0.542,8,0.598,9,0.775,10,0.72,11,0.969,12,0.709,14,0.037,19,3.157,27,2.389,36,0.93,37,1.094,38,1.169,58,1.707,62,0.875,154,2.476,348,1.957,409,1.489,437,3.215,489,3.237,494,2.572,711,3.925,720,3.072,812,3.237,1799,3.328,1856,7.994,1857,5.247,1858,5.247,1859,8.283,1860,8.283,1861,5.247,1862,5.247,1863,5.247,1864,5.247,1885,5.856,1886,5.856,1887,5.856,1888,5.856,1889,5.856,1890,5.856,1891,5.856,1892,5.856,1893,5.856,1894,5.856,1895,5.856,1896,5.856,1897,5.856,1898,5.856,1899,5.856,1900,5.856,1901,5.856]],["title/operators.html#Increment",[14,0.015,1865,3.717]],["body/operators.html#Increment",[1,0.325,2,0.396,3,0.398,4,0.477,5,0.535,6,0.432,7,0.57,8,0.629,9,0.815,10,0.757,11,1.019,14,0.037,21,1.143,36,0.978,37,1.15,38,1.23,39,1.332,40,1.405,62,0.876,145,1.409,212,2.512,274,4.545,397,3.901,453,2.793,1866,5.519,1867,7.031,1868,5.097,1869,5.519,1870,5.519,1871,8.147,1872,5.519,1873,5.519,1874,4.782,1875,5.097,1902,6.159,1903,6.159,1904,6.159,1905,6.159,1906,6.159,1907,6.159,1908,6.159]],["title/operators.html#references",[212,2.258]],["body/operators.html#references",[1874,6.417,1875,6.84]],["title/operators.html#Adding-Strings-and-Numbers",[34,1.353,675,1.378,1876,2.973]],["body/operators.html#Adding-Strings-and-Numbers",[1,0.313,2,0.405,3,0.341,4,0.337,5,0.593,6,0.428,7,0.564,8,0.623,9,0.806,10,0.749,12,1.041,14,0.037,62,0.866,114,2.048,283,3.197,392,3.68,397,2.532,398,4.275,409,2.303,480,1.861,498,2.579,655,3.804,656,4.097,657,3.942,658,3.119,659,3.804,708,2.399,711,2.681,749,3.119,1772,3.567,1853,4.731,1874,4.731,1877,5.46,1878,5.46,1879,5.46,1880,5.46,1882,5.46,1883,5.46,1884,6.983,1909,6.094]],["title/this.html",[]],["body/this.html",[1,0.307,2,0.384,3,0.403,4,0.495,5,0.55,6,0.612,7,0.798,8,0.859,9,1.096,10,1.06,11,1.139,12,1.196,14,0.038,19,0.611,21,1.265,27,1.344,36,0.897,37,1.055,38,0.856,39,0.927,40,0.978,41,0.861,42,0.897,43,0.949,44,1.435,45,0.593,55,1.363,58,0.894,62,0.812,111,1.608,114,1.86,115,1.647,119,2.102,140,0.712,145,1.211,165,1.96,212,0.793,276,0.726,287,0.726,291,2.775,335,1.213,337,1.96,339,1.274,342,2.178,344,1.54,348,2.052,388,1.074,391,3.047,392,1.989,394,2.557,397,2.718,403,2.312,409,1.561,416,3.041,419,3.656,453,0.692,457,0.703,480,0.593,489,1.074,494,1.236,498,0.822,637,0.62,652,3.049,661,0.89,664,0.995,711,1.449,769,3.91,812,1.074,833,1.257,834,0.89,872,1.989,883,3.069,889,1.728,900,1.211,915,2.87,916,2.589,918,5.977,921,1.508,937,1.608,994,4.008,1020,1.429,1738,1.137,1825,1.363,1827,2.423,1829,1.363,1910,1.741,1911,3.841,1912,4.387,1913,1.741,1914,1.741,1915,3.548,1916,2.951,1917,1.741,1918,1.741,1919,2.951,1920,4.524,1921,2.951,1922,1.943,1923,1.741,1924,1.741,1925,5.063,1926,1.741,1927,1.741,1928,5.863,1929,4.524,1930,4.524,1931,5.063,1932,2.951,1933,2.951,1934,2.951,1935,2.951,1936,4.676,1937,1.429,1938,1.943,1939,1.306,1940,3.153,1941,1.508,1942,2.951,1943,1.741,1944,1.741,1945,1.943,1946,1.741,1947,2.951,1948,2.951,1949,1.741,1950,3.841,1951,1.741,1952,1.741,1953,1.943,1954,1.741,1955,1.741,1956,1.741,1957,1.741,1958,1.943,1959,1.741,1960,1.943,1961,1.741,1962,2.951,1963,2.791,1964,1.943,1965,3.152,1966,1.137,1967,1.508,1968,1.943,1969,3.294,1970,1.943,1971,1.943,1972,1.943,1973,1.943,1974,1.741,1975,1.741,1976,1.741,1977,1.741,1978,1.741,1979,1.741,1980,1.741]],["title/this.html#物件的方法調用-As-an-object-method",[494,0.956,1738,1.942,1981,3.318]],["body/this.html#物件的方法調用-As-an-object-method",[1,0.265,2,0.335,3,0.366,4,0.461,5,0.517,6,0.586,7,0.772,8,0.853,9,1.105,10,0.922,11,1.24,12,1.163,14,0.037,21,1.171,36,1.19,37,1.4,38,1.146,39,1.241,40,1.309,62,0.733,114,1.735,344,2.684,391,3.101,397,2.384,498,2.429,661,2.628,918,7.099,994,4.274,1522,5.04,1910,5.141,1911,6.717,1912,6.482,1913,5.141,1914,5.141,1915,4.748,1982,5.738,1983,5.738,1984,6.141,1985,6.203,1986,5.738,1987,6.203,1988,7.496,1989,7.496,1990,5.141,1991,5.738,1992,5.738,1993,5.738]],["title/this.html#簡易呼叫",[1399,4.96]],["body/this.html#簡易呼叫",[1,0.29,2,0.366,3,0.38,4,0.479,5,0.537,6,0.609,7,0.803,8,0.886,9,1.104,10,0.971,11,1.029,12,1.205,14,0.037,19,1.374,21,1.181,27,2.538,36,0.694,37,0.816,58,1.101,62,0.816,114,1.855,145,1.362,165,2.77,291,3.522,348,1.46,391,2.828,397,2.584,403,2.849,409,2.206,416,3.348,419,4.688,664,2.236,872,3.757,994,4.272,1426,3.614,1427,3.614,1522,2.937,1829,3.064,1915,5.148,1916,5.574,1917,3.913,1918,3.913,1919,5.574,1920,7.076,1921,5.574,1923,3.913,1924,3.913,1925,7.478,1926,3.913,1984,5.33,1990,6.493,1994,8.676,1995,4.367,1996,7.246,1997,6.221,1998,4.367,1999,4.367,2000,4.367,2001,4.367,2002,4.367,2003,6.221]],["title/this.html#立即函式：",[2004,5.535]],["body/this.html#立即函式：",[1,0.282,2,0.355,3,0.388,4,0.49,5,0.548,6,0.57,7,0.752,8,0.665,9,0.861,10,0.801,12,1.157,14,0.037,21,1.263,62,0.778,114,1.841,391,3.094,918,4.567,994,3.333,1522,5.464,1827,5.977,1912,5.055,1984,6.516,1985,6.725,1987,5.388]],["title/this.html#Closure",[388,3.06]],["body/this.html#Closure",[1,0.236,2,0.298,3,0.325,4,0.41,5,0.459,6,0.521,7,0.686,8,0.758,9,0.981,10,1.082,11,1.227,12,1.2,14,0.037,21,1.209,36,0.897,37,1.055,38,1.127,39,1.221,40,1.289,41,1.476,42,1.539,43,1.628,44,2.354,62,0.652,114,1.541,119,2.92,145,1.211,276,2.112,344,2.641,391,2.832,457,2.043,769,4.965,1522,3.797,1927,5.06,1928,8.566,1929,7.883,1930,7.883,1931,8.188,1932,6.647,1933,6.647,1934,6.647,1935,6.647,1936,6.855,1984,5.456,2005,5.647]],["title/this.html#Callback",[883,2.767]],["body/this.html#Callback",[1,0.295,2,0.372,3,0.406,4,0.449,5,0.403,6,0.457,7,0.602,12,0.984,14,0.037,21,1.263,62,0.714,111,5.388,114,1.689,119,1.989,145,1.063,337,2.829,342,3.506,769,4.535,833,4.212,883,4.638,889,3.416,921,5.055,1020,4.789,1242,3.504,1936,6.725,1937,4.789,1939,4.378,1940,5.977,1941,5.055,1942,7.281,1943,5.834,1944,5.834,2006,6.511,2007,6.511,2008,6.511,2009,6.511,2010,6.511,2011,6.511,2012,6.511,2013,6.511,2014,6.511,2015,6.511,2016,6.511]],["title/this.html#bind-apply-call",[652,2.004,915,1.886,916,2.004]],["body/this.html#bind-apply-call",[1,0.303,2,0.37,3,0.368,4,0.444,5,0.498,6,0.564,7,0.699,8,0.771,9,0.999,10,1.066,11,0.96,12,1.051,14,0.037,21,1.147,36,0.63,37,0.741,38,0.792,39,0.858,40,0.905,41,1.037,42,1.081,43,1.143,44,1.127,45,1.211,55,2.783,58,1.027,62,0.781,114,1.67,115,2.901,140,1.255,145,0.947,212,1.618,242,2.783,335,2.476,337,1.853,339,2.245,342,2.504,348,2.524,391,2.982,392,3.505,394,4.505,397,3.137,453,1.412,480,1.211,494,1.673,637,1.267,652,4.144,711,2.553,812,2.192,834,1.817,883,1.983,889,2.081,900,2.134,915,3.299,916,3.505,918,4.814,994,3.513,1105,3.431,1225,2.081,1299,2.783,1373,2.322,1379,2.476,1522,5.078,1825,2.783,1912,3.079,1940,2.917,1946,3.554,1947,5.2,1948,5.2,1949,3.554,1950,6.149,1951,3.554,1952,3.554,1954,3.554,1955,3.554,1956,3.554,1957,3.554,1959,3.554,1961,3.554,1962,5.2,1963,4.174,1965,4.284,1966,2.322,1967,3.079,1974,3.554,1975,3.554,1976,3.554,1977,3.554,1978,3.554,1979,3.554,1980,3.554,1984,4.268,1985,4.802,1987,5.679,2017,3.967,2018,3.967,2019,3.554,2020,3.967,2021,3.967,2022,3.554,2023,3.554,2024,3.967,2025,3.967,2026,3.967,2027,3.554,2028,3.967,2029,5.803,2030,5.803,2031,3.967,2032,3.967,2033,3.967,2034,3.967,2035,3.967,2036,3.967,2037,3.967,2038,3.967,2039,3.967,2040,5.328,2041,3.967,2042,3.967,2043,3.967,2044,3.967,2045,3.967,2046,3.967,2047,3.967,2048,3.967,2049,3.967,2050,3.967,2051,4.802,2052,3.967,2053,5.803,2054,3.967,2055,3.967,2056,3.967,2057,3.967,2058,3.967,2059,3.967,2060,3.967,2061,3.967,2062,3.967,2063,3.967,2064,3.967,2065,3.967]],["title/variable.html",[2066,5.535]],["body/variable.html",[1,0.318,2,0.395,3,0.402,4,0.507,5,0.559,6,0.621,7,0.797,8,0.881,9,1.14,10,1.128,11,1.238,12,1.14,14,0.037,21,1.245,34,2.334,36,0.618,62,0.889,114,1.976,119,1.188,154,1.017,291,2.139,339,3.225,348,2.955,391,2.671,393,2.985,403,3.819,416,3.079,419,3.701,453,3.068,493,3.847,498,1.647,647,2.729,649,4.857,658,1.992,661,1.782,664,4.268,670,3.252,675,2.377,770,3.316,801,3.486,1823,3.021,1827,4.208,1829,4.014,1836,3.22,2067,6.786,2068,5.722,2069,6.786,2070,3.891,2071,6.786,2072,3.891,2073,3.486,2074,3.486,2075,3.486,2076,3.486,2077,3.486,2078,3.486,2079,3.486,2080,3.486,2081,5.127,2082,3.486,2083,3.486]],["title/variable.html#變數的作用域在函式內",[2084,5.535]],["body/variable.html#變數的作用域在函式內",[1,0.297,2,0.359,3,0.361,4,0.456,5,0.51,6,0.579,7,0.763,8,0.842,9,1.091,10,1.014,11,1.364,12,1.164,14,0.037,21,1.237,36,1.058,62,0.822,291,3.082,348,2.227,416,4.437,419,5.333,664,4.22,1823,5.173,1829,5.783,2073,5.97,2074,5.97,2075,5.97,2076,5.97,2077,5.97,2078,5.97,2079,5.97,2080,5.97]],["title/variable.html#Hoisting",[647,3.883]],["body/variable.html#Hoisting",[1,0.318,2,0.398,3,0.396,4,0.499,5,0.537,6,0.572,7,0.753,8,0.832,9,1.077,10,0.891,12,1.051,14,0.037,21,1.229,62,0.878,114,1.692,348,3.019,391,2.247,403,4.254,437,2.308,453,3.374,493,4.874,498,2.308,649,2.935,658,2.791,661,2.497,664,4.442,670,4.12,1095,3.39,1105,2.726,1827,5.331,2040,4.233,2081,6.495,2085,5.453,2086,5.453,2087,5.453,2088,5.453,2089,5.453,2090,5.453]],["title/variable.html#動態型別",[1170,3.456]],["body/variable.html#動態型別",[1,0.276,2,0.292,3,0.319,4,0.402,5,0.45,6,0.511,10,1.069,12,0.881,14,0.037,34,3.547,62,0.847,114,2.003,119,2.222,154,1.901,182,4.021,393,4.092,675,3.613,1105,3.637,1836,6.02,2082,6.518,2083,6.518,2091,8.696]],["title/F2E/GraphQL.html",[2092,4.96]],["body/F2E/GraphQL.html",[14,0.037,18,5.864,102,6.542,183,6.38,212,2.817,289,4.042,507,5.361,627,6.542,657,5.451,1031,4.643,2092,8.85,2093,6.905,2094,6.905,2095,6.905,2096,6.905,2097,5.714,2098,6.905,2099,7.061,2100,6.905,2101,6.187,2102,6.187]],["title/F2E/GraphQL.html#References",[212,2.258]],["body/F2E/GraphQL.html#References",[2101,7.406,2102,7.406]],["title/F2E/token.html",[638,4.071]],["body/F2E/token.html",[14,0.037,184,8.012,409,1.939,516,4.942,638,6.577,2103,8.941,2104,6.31,2105,7.851,2106,6.656,2107,7.851]],["title/F2E/token.html#provisional-headers-are-shown",[2105,2.746,2106,2.328,2107,2.746]],["body/F2E/token.html#provisional-headers-are-shown",[2105,6.685,2106,6.486,2107,6.685,2108,8.078,2109,8.078,2110,8.078,2111,8.078,2112,8.078,2113,8.078]],["title/array/array_method.html",[337,1.325,1738,2.429]],["body/array/array_method.html",[1,0.307,2,0.374,3,0.408,4,0.481,5,0.577,6,0.654,8,0.89,14,0.037,15,2.26,62,0.641,140,1.884,739,3.757,1012,7.207,1628,5.634,2114,7.293,2115,7.293]],["title/F2E/header.html",[2106,3.883]],["body/F2E/header.html",[1,0.235,2,0.296,3,0.324,14,0.037,29,5.138,46,4.779,212,4.093,397,3.89,2116,7.388,2117,7.388,2118,7.388,2119,7.388,2120,8.776,2121,7.388,2122,7.388,2123,8.776,2124,7.388,2125,7.388,2126,7.388]],["title/F2E/cookie.html",[2127,4.298]],["body/F2E/cookie.html",[14,0.037,29,3.514,51,5.737,212,2.449,627,5.993,2104,8.131,2127,8.14,2128,6.004,2129,6.004,2130,6.004,2131,6.004,2132,7.719,2133,5.379,2134,5.379,2135,5.379,2136,5.379,2137,6.004,2138,5.379,2139,6.004,2140,6.004,2141,7.645,2142,7.719,2143,6.004,2144,6.004,2145,6.004,2146,6.004,2147,6.004,2148,6.004,2149,6.004,2150,5.379,2151,6.004,2152,6.004,2153,6.004,2154,6.004,2155,6.004,2156,6.004,2157,6.004,2158,6.004,2159,6.004,2160,6.004,2161,6.004,2162,6.004,2163,6.004,2164,6.004,2165,6.004,2166,5.379,2167,6.004,2168,6.004,2169,6.004,2170,6.004,2171,6.004]],["title/F2E/cookie.html#什麼是-Cookie？",[2172,4.149,2173,4.149]],["body/F2E/cookie.html#什麼是-Cookie？",[2127,7.524,2174,8.033,2175,8.033,2176,8.033,2177,7.197,2178,8.033,2179,8.033,2180,8.033,2181,8.033,2182,8.033]],["title/F2E/cookie.html#第一方Cookie和第三方Cookie區別",[2183,4.96]],["body/F2E/cookie.html#第一方Cookie和第三方Cookie區別",[51,4.242,212,2.574,242,4.426,246,5.653,269,4.898,367,3.726,2104,7.591,2127,7.5,2133,5.653,2134,5.653,2135,5.653,2136,5.653,2138,5.653,2141,7.139,2150,5.653,2166,5.653,2177,5.653,2183,5.653,2184,6.309,2185,6.309,2186,6.309,2187,6.309,2188,6.309,2189,6.309,2190,6.309,2191,6.309,2192,6.309,2193,6.309,2194,6.309,2195,6.309,2196,6.309,2197,6.309,2198,6.309,2199,6.309,2200,6.309,2201,6.309,2202,6.309,2203,6.309,2204,6.309,2205,6.309,2206,6.309,2207,6.309,2208,6.309,2209,6.309,2210,6.309,2211,6.309,2212,6.309,2213,6.309,2214,6.309,2215,6.309,2216,6.309,2217,6.309,2218,6.309,2219,6.309,2220,6.309,2221,6.309,2222,6.309,2223,6.309,2224,6.309,2225,6.309,2226,6.309,2227,6.309,2228,6.309,2229,6.309,2230,6.309,2231,6.309,2232,6.309,2233,6.309,2234,6.309,2235,6.309,2236,6.309,2237,6.309,2238,6.309,2239,6.309,2240,6.309,2241,6.309,2242,6.309,2243,6.309,2244,6.309,2245,6.309,2246,6.309,2247,6.309,2248,6.309,2249,6.309,2250,6.309,2251,6.309,2252,6.309,2253,6.309,2254,6.309,2255,6.309,2256,6.309,2257,6.309,2258,6.309,2259,6.309,2260,6.309,2261,6.309,2262,6.309,2263,6.309,2264,6.309]],["title/array/array_insert.html",[337,1.325,668,2.429]],["body/array/array_insert.html",[1,0.327,2,0.41,3,0.445,4,0.548,5,0.62,6,0.679,7,0.473,8,0.523,14,0.038,27,1.367,58,1.565,62,0.819,120,1.602,140,1.774,291,1.913,292,2.5,337,1.634,342,1.446,668,1.962,889,1.758,900,3.514,901,1.905,1639,3.09,1966,5.073,1967,2.602,2265,3.351,2266,3.351,2267,3.003,2268,3.003,2269,4.564,2270,3.003,2271,4.818,2272,3.003,2273,4.584,2274,4.584,2275,3.003,2276,2.773,2277,3.003,2278,5.56,2279,3.351,2280,3.351,2281,3.351,2282,4.584,2283,4.584,2284,4.584,2285,3.003,2286,3.763,2287,3.003,2288,2.253,2289,2.773,2290,4.234,2291,2.558,2292,3.003,2293,3.003,2294,3.003,2295,3.003,2296,4.584,2297,4.584,2298,3.351,2299,3.003,2300,3.003,2301,3.351,2302,3.003,2303,3.003,2304,2.168,2305,3.003,2306,3.003,2307,3.003,2308,3.003,2309,3.003,2310,3.003,2311,3.351]],["title/array/array_insert.html#把數據插入陣列尾部",[2312,5.535]],["body/array/array_insert.html#把數據插入陣列尾部",[1,0.323,2,0.407,3,0.445,4,0.544,5,0.61,6,0.691,14,0.037,62,0.794,326,6.015,900,3.575,901,3.449,1401,5.716,1966,5.293,2267,5.437,2268,5.437,2269,4.463,2270,5.437,2271,4.711,2313,6.068,2314,5.021]],["title/array/array_insert.html#把數據插入陣列頭部",[2315,4.96]],["body/array/array_insert.html#把數據插入陣列頭部",[1,0.32,2,0.404,3,0.441,4,0.538,5,0.602,6,0.621,14,0.037,58,1.567,62,0.777,326,6.208,900,3.509,1401,5.969,1966,5.18,2269,4.778,2271,5.043,2272,5.821,2273,7.271,2314,5.376]],["title/array/array_insert.html#把數據插入陣列指定位置",[2316,5.535]],["body/array/array_insert.html#把數據插入陣列指定位置",[1,0.314,2,0.379,3,0.414,4,0.464,5,0.52,14,0.037,58,1.487,62,0.797,140,1.486,326,4.821,342,2.965,668,4.023,889,3.605,1401,5.054,1967,5.335,2274,7.528,2275,6.157,2276,5.686,2277,6.157,2278,7.528,2282,7.528,2283,7.528,2284,6.157,2317,6.872,2318,6.872,2319,6.872,2320,6.872,2321,6.872,2322,6.872]],["title/array/array_insert.html#拼接兩個陣列",[2323,5.535]],["body/array/array_insert.html#拼接兩個陣列",[1,0.324,2,0.409,3,0.43,4,0.519,5,0.581,14,0.037,58,1.661,62,0.728,326,5.817,900,3.544,1401,4.947,1966,4.854,2269,4.947,2271,5.222,2285,6.026,2314,5.566]],["title/array/array_insert.html#fill",[2286,4.071]],["body/array/array_insert.html#fill",[1,0.311,2,0.358,3,0.391,4,0.515,5,0.613,6,0.695,7,0.611,8,0.674,14,0.037,58,1.169,62,0.72,140,2.073,292,4.005,337,2.108,2286,4.855,2287,5.915,2288,4.439,2289,5.463,2290,6.783,2291,4.097,2292,5.915,2293,5.915,2294,5.915,2295,5.915,2296,7.344,2297,7.344,2299,5.915,2300,5.915,2302,5.915,2303,5.915,2324,6.601,2325,6.601,2326,6.601]],["title/array/array_insert.html#example",[2304,3.581]],["body/array/array_insert.html#example",[1,0.243,2,0.307,3,0.335,4,0.422,5,0.473,6,0.537,7,0.707,8,0.781,14,0.036,27,3.119,120,3.654,140,1.653,291,3.349,1639,5.408,2305,6.85,2306,6.85,2307,6.85,2308,6.85,2309,6.85,2310,6.85,2315,6.85,2327,7.645,2328,7.645]],["title/api/promise.html",[]],["body/api/promise.html",[0,3.759,1,0.281,2,0.355,3,0.387,4,0.467,5,0.488,6,0.487,7,0.642,8,0.709,9,0.918,10,0.853,11,0.846,14,0.038,15,2.151,36,0.812,37,0.955,38,1.02,39,1.105,40,1.166,41,1.336,42,1.392,43,1.473,55,3.585,58,0.905,62,0.819,114,1.062,116,5.438,118,4.332,121,5.277,123,3.735,140,1.501,145,1.286,637,2.216,767,3.317,1062,5.796,2329,4.579,2330,4.579,2331,4.579,2332,5.743,2333,5.743,2334,6.269,2335,4.579,2336,4.579,2337,4.579,2338,6.995,2339,6.995,2340,5.743,2341,5.111,2342,3.759,2343,4.229,2344,4.579,2345,6.218,2346,6.562]],["title/api/promise.html#Promise",[116,2.979]],["body/api/promise.html#Promise",[0,4.724,1,0.256,2,0.323,3,0.353,4,0.445,5,0.499,6,0.451,7,0.594,8,0.656,9,0.85,10,0.79,14,0.036,15,2.497,62,0.708,116,5.359,118,5.03,121,5.496,140,1.389,384,4.01,637,2.573,767,3.069,1062,6.476,1324,3.879,1668,5.755,2019,5.755,2329,5.755,2330,5.755,2331,5.755,2332,5.315,2333,6.668,2334,5.92,2335,5.755,2336,5.755,2337,5.755,2338,5.315,2339,5.315,2340,5.315,2347,6.423,2348,6.423,2349,6.423,2350,6.423,2351,6.423,2352,6.423,2353,6.423,2354,6.423,2355,6.423,2356,6.423,2357,6.423,2358,6.423,2359,6.423,2360,6.423,2361,6.423,2362,6.423,2363,6.423,2364,6.423,2365,6.423,2366,6.423,2367,6.423,2368,6.423,2369,5.755,2370,6.423,2371,6.423,2372,6.423,2373,6.423,2374,6.423]],["title/api/promise.html#鏈接",[2375,5.535]],["body/api/promise.html#鏈接",[1,0.274,2,0.346,3,0.378,4,0.433,5,0.381,6,0.431,7,0.569,8,0.628,9,0.813,10,0.756,11,1.017,14,0.037,36,0.976,37,1.148,38,1.227,39,1.329,40,1.402,41,1.606,42,1.674,43,1.772,55,4.312,58,1.088,62,0.824,114,1.277,116,5.248,123,4.217,140,1.329,145,1.408,767,2.937,2334,6.109,2338,7.139,2339,7.139,2340,5.086,2342,4.521,2344,5.507,2345,7.021,2346,6.084,2369,5.507,2376,6.146,2377,6.146,2378,6.146,2379,6.146,2380,6.146,2381,6.146,2382,6.146,2383,6.146,2384,6.146,2385,6.146,2386,6.146,2387,6.146,2388,6.146,2389,6.146,2390,6.146,2391,6.146,2392,6.146,2393,6.146,2394,6.146]],["title/array/array_merge.html",[337,1.325,2395,4.149]],["body/array/array_merge.html",[1,0.319,2,0.399,3,0.404,4,0.51,5,0.52,6,0.59,7,0.538,8,0.595,12,1.118,14,0.037,62,0.831,165,3.151,287,2.176,342,2.511,409,2.448,453,2.072,694,2.844,889,4.41,900,2.14,1939,3.913,1966,4.921,2269,4.281,2396,5.82,2397,7.566,2398,5.82,2399,5.82,2400,5.82,2401,7.566,2402,7.566,2403,5.82,2404,5.82,2405,3.633,2406,3.913,2407,4.083,2408,3.308,2409,3.913]],["title/array/array_methods.html",[337,1.325,1738,2.429]],["body/array/array_methods.html",[1,0.313,2,0.398,3,0.429,4,0.519,5,0.565,6,0.603,7,0.756,8,0.772,9,0.625,10,0.715,11,0.5,12,1.137,14,0.038,21,1.137,34,1.232,36,0.48,37,0.564,38,0.603,39,0.653,40,0.689,41,0.79,42,0.823,43,0.871,44,0.859,45,0.923,58,0.836,62,0.802,65,2.031,119,1.442,140,1.422,145,1.402,154,1.976,292,4.199,337,1.508,338,2.906,341,2.684,342,3.077,347,4.513,348,1.01,408,3.175,409,1.922,420,2.346,476,1.954,477,2.119,480,0.923,481,0.965,637,1.508,674,2.891,701,1.058,779,2.222,810,2.119,831,2.031,832,4.069,892,3.448,900,3.272,1016,3.055,1937,3.473,1939,3.175,1940,3.473,1963,4.366,1965,1.886,1966,1.769,2288,2.031,2291,4.296,2304,1.954,2405,3.629,2406,3.909,2407,3.313,2408,4.49,2409,3.909,2410,2.707,2411,2.707,2412,2.707,2413,2.346,2414,2.346,2415,3.313,2416,2.346,2417,2.346,2418,2.346,2419,2.707,2420,2.707,2421,2.707,2422,2.707,2423,2.707,2424,2.707,2425,2.707,2426,2.707,2427,2.707,2428,2.707,2429,3.666,2430,2.707,2431,2.707,2432,2.707,2433,3.666,2434,2.707,2435,2.707,2436,2.707,2437,2.707,2438,4.231,2439,2.707,2440,4.231,2441,2.707,2442,2.707,2443,2.346,2444,2.707,2445,2.707,2446,2.707,2447,2.5,2448,4.811,2449,3.021,2450,4.811,2451,4.811,2452,2.5,2453,3.021,2454,3.021,2455,3.021,2456,2.5,2457,2.5,2458,2.5,2459,3.021,2460,2.5,2461,2.5,2462,2.5,2463,2.5,2464,2.5,2465,2.5,2466,3.021,2467,2.5,2468,2.5,2469,2.5]],["title/array/array_methods.html#Array",[337,1.767]],["body/array/array_methods.html#Array",[1963,4.556,2405,5.145,2470,8.242]],["title/array/array_methods.html#forEach",[832,2.979]],["body/array/array_methods.html#forEach",[1,0.307,2,0.388,3,0.409,4,0.405,5,0.454,6,0.515,7,0.678,8,0.749,9,0.97,12,0.888,14,0.037,21,0.97,58,1.298,62,0.644,292,4.56,900,2.696,1939,4.929,2291,4.665,2408,4.167,2410,6.569,2411,6.569,2412,6.569,2471,7.331]],["title/array/array_methods.html#map",[1963,3.06]],["body/array/array_methods.html#map",[1,0.279,2,0.352,3,0.384,4,0.408,5,0.457,6,0.519,7,0.683,12,1.063,14,0.037,21,0.977,62,0.649,145,1.206,292,3.61,342,3.187,900,2.717,2291,3.693,2406,4.967,2408,4.199,2409,4.967,2413,5.736,2414,5.736,2415,5.183,2416,5.736,2417,5.736,2418,5.736,2472,6.62,2473,6.62,2474,6.62]],["title/array/array_methods.html#filter",[2405,3.456]],["body/array/array_methods.html#filter",[1,0.278,2,0.375,3,0.409,4,0.406,5,0.455,6,0.516,7,0.68,8,0.751,12,1.06,14,0.037,21,0.972,62,0.646,145,1.2,154,1.921,292,3.591,342,3.171,900,2.703,2291,3.674,2406,4.942,2407,5.156,2408,4.178,2409,4.942,2419,6.585,2420,6.585,2475,7.35]],["title/array/array_methods.html#find",[779,4.071]],["body/array/array_methods.html#find",[1,0.299,2,0.377,3,0.386,4,0.411,5,0.461,6,0.523,12,1.068,14,0.037,21,0.985,62,0.654,145,1.215,292,3.638,342,3.212,348,2.488,900,2.738,2291,3.722,2408,4.232,2421,6.671,2422,6.671,2423,6.671,2424,6.671,2425,6.671,2476,7.446]],["title/array/array_methods.html#sort",[2426,4.96]],["body/array/array_methods.html#sort",[1,0.295,2,0.373,3,0.407,4,0.513,5,0.575,6,0.509,7,0.671,12,1.052,14,0.037,21,0.96,62,0.637,145,1.417,292,3.545,408,4.879,409,2.208,900,2.668,2291,3.627,2406,4.879,2409,4.879,2427,6.502,2428,6.502,2429,5.633,2477,7.256,2478,7.256,2479,7.256]],["title/array/array_methods.html#every",[]],["body/array/array_methods.html#every",[1,0.278,2,0.351,3,0.383,4,0.483,5,0.454,6,0.515,7,0.678,8,0.749,12,1.058,14,0.037,21,0.97,62,0.644,145,1.196,154,2.283,292,3.582,341,4.167,342,3.163,900,2.696,2291,3.665,2408,4.167,2430,6.569,2431,6.569,2432,6.569,2433,5.691,2480,6.569,2481,7.331]],["title/array/array_methods.html#some",[]],["body/array/array_methods.html#some",[1,0.278,2,0.374,3,0.383,4,0.405,5,0.454,6,0.515,7,0.678,8,0.749,12,1.058,14,0.037,21,0.97,62,0.644,145,1.196,154,2.283,292,3.582,341,4.167,342,3.163,900,2.696,2291,3.665,2408,4.167,2433,5.691,2434,6.569,2435,6.569,2436,6.569,2480,6.569,2482,7.331]],["title/array/array_methods.html#reduce",[347,4.298]],["body/array/array_methods.html#reduce",[1,0.291,2,0.374,3,0.402,4,0.496,5,0.52,6,0.513,7,0.411,8,0.643,9,0.588,10,0.899,11,0.735,12,0.964,14,0.037,21,0.968,34,1.812,36,0.705,37,0.83,38,0.887,39,0.961,40,1.014,41,1.161,42,1.21,43,1.281,44,1.262,45,1.357,58,0.786,62,0.788,65,2.987,119,1.357,140,1.721,145,1.194,154,1.161,182,2.455,292,2.17,337,1.418,338,3.656,347,4.888,367,2.078,408,2.987,409,1.601,420,3.449,476,2.874,477,3.116,480,1.357,481,1.418,637,2.01,674,3.5,701,1.556,810,3.116,831,2.987,832,4.521,892,4.175,900,3.089,1016,2.874,1799,2.525,1937,3.267,1939,2.987,1940,4.631,1963,4.643,1965,2.773,1966,2.6,2288,2.987,2291,2.221,2304,2.874,2405,2.773,2407,3.116,2408,2.525,2415,3.116,2429,3.449,2437,3.98,2438,5.642,2439,3.98,2440,5.642,2441,3.98,2442,3.98,2443,3.449,2444,3.98,2445,3.98,2446,3.98,2447,3.676,2448,6.053,2450,6.053,2451,3.676,2452,3.676,2456,3.676,2457,3.676,2458,3.676,2460,3.676,2461,3.676,2462,3.676,2463,3.676,2464,3.676,2465,3.676,2467,3.676,2468,3.676,2469,3.676,2483,4.442,2484,5.642,2485,3.98,2486,5.642,2487,3.98,2488,3.98,2489,3.98,2490,3.98,2491,3.98,2492,3.98,2493,3.98,2494,3.98,2495,3.98,2496,3.98,2497,3.98,2498,3.98,2499,3.98,2500,3.98,2501,3.98,2502,3.98,2503,3.98,2504,3.98,2505,3.98,2506,3.98,2507,3.98,2508,3.98,2509,3.98,2510,3.98]],["title/array/array_methods.html#examples",[2304,3.581]],["body/array/array_methods.html#examples",[1,0.27,2,0.356,3,0.371,4,0.468,5,0.525,6,0.49,7,0.476,8,0.712,9,0.681,10,0.858,11,0.852,12,0.845,14,0.037,21,1.046,36,0.817,37,0.961,38,1.028,39,1.113,40,1.175,41,1.345,42,1.402,43,1.484,44,1.463,45,1.572,58,0.911,62,0.778,65,3.461,119,1.572,140,1.508,145,1.138,154,1.345,338,3.954,367,2.408,408,3.461,420,3.997,477,3.611,480,1.572,481,1.644,674,3.729,701,1.803,832,4.768,892,4.447,900,3.118,1016,3.33,1799,2.926,1937,3.786,1939,3.461,1963,4.897,1965,3.214,1966,3.013,2405,3.214,2407,3.611,2408,2.926,2415,3.611,2429,3.997,2447,4.26,2448,6.545,2450,6.545,2451,4.26,2452,4.26,2456,4.26,2457,4.26,2458,4.26,2460,4.26,2461,4.26,2462,4.26,2463,4.26,2464,4.26,2465,4.26,2467,4.26,2468,4.26,2469,4.26,2484,6.249,2485,4.612,2486,6.249,2487,4.612,2488,4.612,2489,4.612,2490,4.612,2491,4.612,2492,4.612,2493,4.612,2494,4.612,2495,4.612,2496,4.612,2497,4.612,2498,4.612,2499,4.612,2500,4.612,2501,4.612,2502,4.612,2503,4.612,2504,4.612,2505,4.612,2506,4.612,2507,4.612,2508,4.612,2509,4.612,2510,4.612]],["title/array/good_part.html",[14,0.015,287,1.551]],["body/array/good_part.html",[1,0.256,14,0.036,637,2.572,812,4.453,2511,8.055,2512,8.055,2513,8.055]],["title/array/splice.html",[337,1.325,2276,3.433]],["body/array/splice.html",[1,0.313,2,0.386,3,0.427,4,0.531,5,0.595,6,0.675,7,0.889,8,0.982,9,1.272,10,0.711,11,0.957,14,0.037,36,0.919,58,1.484,62,0.78,140,1.63,145,1.23,947,5.422,1628,5.422,2514,5.183,2515,6.752,2516,5.183,2517,5.183,2518,5.183,2519,5.183,2520,7.957]],["title/array/splice.html#分割指定长度的元素数组",[2521,5.535]],["body/array/splice.html#分割指定长度的元素数组",[1,0.313,2,0.385,3,0.427,4,0.531,5,0.594,6,0.674,7,0.888,8,0.981,9,1.27,10,0.707,11,0.951,14,0.037,36,0.913,58,1.479,62,0.778,140,1.623,145,1.225,947,5.406,1628,5.406,2514,5.152,2515,6.726,2516,5.152,2517,5.152,2518,5.152,2519,5.152,2520,7.938]],["title/array/object_to_array.html",[337,1.325,494,1.196]],["body/array/object_to_array.html",[1,0.248,14,0.035,140,1.685,291,2.913,337,2.488,494,2.61,503,5.301,900,2.865,2522,7.791,2523,7.791,2524,7.791,2525,7.791,2526,7.791,2527,7.791,2528,7.791,2529,7.791,2530,7.791]],["title/array/filter.html",[337,1.325,2405,2.59]],["body/array/filter.html",[1,0.316,2,0.398,3,0.383,4,0.349,5,0.391,6,0.443,10,0.98,12,0.764,14,0.037,21,0.835,58,1.41,62,0.554,140,1.365,145,1.03,154,2.082,341,3.586,348,2.109,397,3.31,711,2.775,730,2.528,883,3.983,900,2.93,1963,3.487,1965,5.726,2405,5.451,2407,4.426,2433,4.898,2531,6.309,2532,6.309,2533,6.309,2534,6.309,2535,6.309,2536,6.309,2537,6.309,2538,6.309,2539,5.653,2540,6.309,2541,6.309,2542,6.309]],["title/array/filter.html#‘1’-‘2’-‘3’-filter-parseInt",[14,0.01,2543,2.477,2544,2.477,2545,2.764]],["body/array/filter.html#‘1’-‘2’-‘3’-filter-parseInt",[1,0.304,2,0.384,3,0.312,14,0.037,58,1.262,154,2.245,711,3.136,883,4.295,1105,4.295,1965,5.976,2040,6.67,2051,5.9,2405,4.451,2539,6.388,2546,7.129,2547,7.129,2548,7.129,2549,7.129,2550,7.129,2551,8.591,2552,7.129,2553,7.129,2554,7.129,2555,7.129,2556,6.388,2557,6.388,2558,6.388,2559,7.129,2560,7.129,2561,7.129,2562,7.129]],["title/cases/arr.html",[337,1.767]],["body/cases/arr.html",[1,0.321,2,0.405,3,0.415,4,0.419,5,0.361,6,0.409,7,0.539,8,0.86,9,0.772,10,1.035,11,0.965,14,0.037,36,0.926,37,1.089,38,1.164,39,1.639,58,1.341,62,0.665,140,1.639,145,1.236,337,3.021,481,2.419,637,1.862,675,2.423,705,2.379,708,2.982,711,2.565,730,2.336,1727,3.921,1963,4.651,1965,5.763,2563,4.826,2564,5.832,2565,5.832,2566,5.832,2567,8.415,2568,5.832,2569,5.832,2570,5.832,2571,7.576,2572,5.832,2573,5.832,2574,5.832,2575,5.832]],["title/cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組",[2576,5.535]],["body/cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組",[1,0.29,2,0.381,3,0.305,4,0.385,14,0.037,58,1.234,675,2.897,711,3.067,1105,4.75,1727,4.688,1963,5.048,1965,6.078,2040,7.376,2051,7.863,2543,6.247,2544,6.247,2556,6.247,2557,6.247,2558,6.247,2577,6.972,2578,6.972,2579,6.972,2580,6.972]],["title/cases/if.html",[]],["body/cases/if.html",[1,0.265,2,0.335,3,0.365,4,0.461,5,0.516,6,0.585,7,0.628,8,0.694,9,0.898,10,0.835,11,1.123,12,0.823,14,0.037,19,2.136,27,2.77,36,1.078,37,1.268,38,1.356,39,1.468,40,1.549,55,5.851,58,1.476,62,0.733,114,1.733,140,1.468,154,2.18,287,2.539,341,5.493,409,2.121,2343,5.619,2581,5.619,2582,6.79,2583,6.79,2584,6.79,2585,6.79,2586,8.34,2587,8.34]],["title/array/map.html",[]],["body/array/map.html",[1,0.283,2,0.358,3,0.359,4,0.453,5,0.47,6,0.533,7,0.702,8,0.675,9,0.874,10,0.584,11,0.786,12,0.8,14,0.037,21,0.874,36,0.755,37,0.888,38,0.949,39,1.028,40,1.506,41,1.242,42,1.799,43,1.37,44,1.351,45,1.452,58,1.169,62,0.58,116,2.558,123,3.553,140,1.863,145,1.406,290,3.933,291,3.486,292,3.226,337,1.518,342,2.051,397,2.743,409,1.679,457,1.719,480,1.452,481,1.518,701,1.665,702,1.748,703,1.871,704,1.939,705,1.939,706,1.975,707,1.975,708,2.599,709,1.975,710,1.975,729,1.975,730,1.904,731,1.975,732,2.051,733,2.051,734,1.975,735,2.051,736,2.091,737,2.091,738,2.091,739,2.051,740,2.091,900,1.748,1735,3.865,1963,3.649,2288,3.196,2291,3.301,2334,3.196,2342,3.496,2406,3.196,2408,2.702,2409,3.196,2413,3.69,2414,3.69,2415,3.334,2416,3.69,2417,3.69,2418,3.69,2588,3.69,2589,4.259,2590,3.69,2591,4.259,2592,5.916,2593,4.259,2594,4.259,2595,4.259,2596,4.259,2597,4.259,2598,4.259,2599,4.259,2600,4.259,2601,6.798,2602,4.259,2603,4.259,2604,4.259,2605,4.259,2606,5.89,2607,4.259,2608,4.259,2609,5.916,2610,4.259,2611,7.988,2612,5.916,2613,4.259,2614,4.259,2615,7.718,2616,4.259,2617,4.259,2618,3.69,2619,5.916,2620,4.259,2621,4.259,2622,4.259]],["title/array/map.html#map",[1963,3.06]],["body/array/map.html#map",[1,0.282,2,0.356,3,0.356,4,0.449,5,0.465,6,0.527,7,0.694,8,0.665,9,0.862,10,0.573,11,0.771,12,0.789,14,0.038,21,0.862,36,0.74,37,0.87,38,0.93,39,1.008,40,1.486,41,1.218,42,1.774,43,1.343,44,1.324,45,1.423,58,1.153,62,0.572,116,2.508,123,3.505,140,1.85,145,1.396,290,3.856,291,3.4,292,3.182,337,1.488,342,2.01,397,2.705,457,1.686,480,1.423,481,1.488,701,1.632,702,1.714,703,1.834,704,1.901,705,1.901,706,1.936,707,1.936,708,2.563,709,1.936,710,1.936,729,1.936,730,1.867,731,1.936,732,2.01,733,2.01,734,1.936,735,2.01,736,2.05,737,2.05,738,2.05,739,2.01,740,2.05,900,1.714,1735,3.812,1963,2.576,2288,3.133,2291,3.256,2334,3.133,2342,3.427,2406,3.133,2408,2.649,2409,3.133,2413,3.618,2414,3.618,2415,3.269,2416,3.618,2417,3.618,2418,3.618,2472,4.175,2473,4.175,2474,4.175,2588,3.618,2589,4.175,2590,3.618,2591,4.175,2592,5.835,2593,4.175,2594,4.175,2595,4.175,2596,4.175,2597,4.175,2598,4.175,2599,4.175,2600,4.175,2601,6.726,2602,4.175,2603,4.175,2604,4.175,2605,4.175,2606,5.056,2607,4.175,2608,4.175,2609,5.835,2610,4.175,2611,7.662,2612,5.835,2613,4.175,2614,4.175,2615,7.662,2616,4.175,2617,4.175,2618,3.618,2619,5.835,2620,4.175,2621,4.175,2622,4.175,2623,4.66,2624,4.66,2625,4.66]],["title/array/fill.html",[337,1.325,2286,3.052]],["body/array/fill.html",[1,0.314,2,0.386,3,0.368,4,0.51,5,0.604,6,0.676,7,0.537,8,0.593,9,0.768,10,0.714,11,0.961,14,0.037,21,0.768,24,5.243,27,4.218,36,1.2,37,1.085,58,1.574,62,0.781,140,1.634,145,0.948,292,4.103,337,1.855,494,1.674,513,2.555,994,3.868,2286,6.542,2288,3.905,2289,6.95,2290,6.95,2291,4.198,2626,5.808,2627,5.808,2628,5.808,2629,5.808,2630,8.398,2631,6.95,2632,5.808,2633,5.808,2634,5.808]],["title/cases/replace.html",[176,4.581]],["body/cases/replace.html",[1,0.276,2,0.291,3,0.318,4,0.401,5,0.449,6,0.509,7,0.671,8,0.741,12,1.052,14,0.037,19,2.283,21,0.96,62,0.637,154,1.896,168,5.337,175,4.879,397,3.015,824,6.005,834,3.977,2635,7.256,2636,8.683,2637,7.256,2638,6.502,2639,7.78,2640,7.78,2641,8.683,2642,7.256,2643,7.256]],["title/cases/delay.html",[2644,4.96]],["body/cases/delay.html",[1,0.259,2,0.263,3,0.287,4,0.362,5,0.406,6,0.46,7,0.606,8,0.67,9,0.867,10,0.806,11,1.085,14,0.037,15,2.882,31,5.487,36,1.041,37,1.224,38,1.309,39,1.418,40,1.496,62,0.717,116,4.392,118,5.548,120,3.133,121,5.548,123,3.528,140,2.069,154,1.713,178,5.425,276,2.451,277,4.392,374,5.09,498,2.775,767,3.133,844,4.408,2334,4.408,2343,5.425,2644,7.962,2645,8.161,2646,5.874,2647,8.161,2648,6.556,2649,7.313,2650,6.556,2651,8.161,2652,8.161,2653,6.556]],["title/cases/math.html",[14,0.019]],["body/cases/math.html",[1,0.283,2,0.4,3,0.289,4,0.364,5,0.408,6,0.462,7,0.438,8,0.484,12,0.917,14,0.038,19,1.49,36,0.752,58,1.649,62,0.579,119,2.012,145,0.773,154,1.979,165,1.513,287,1.771,378,2.773,409,1.205,454,2.55,615,2.957,637,2.103,694,2.315,1577,2.861,1639,2.861,1643,2.773,1725,3.484,1726,4.728,1727,4.429,1728,3.484,1729,3.484,1730,3.484,1731,3.484,1732,3.484,1733,4.429,1734,4.429,1735,2.773,1736,3.185,1737,3.185,1738,2.773,1739,3.185,1740,3.185,1741,5.667,1742,5.667,1743,5.036,1744,2.957,1745,4.245,1746,2.957,1747,2.957,1748,4.245,1749,4.245,1750,2.957,1751,4.245,1752,6.096,1753,4.112,1754,5.56,1755,5.11,1756,4.112,1757,4.112,1758,4.112,1759,2.957,1760,4.245,1761,4.245,1762,2.957,1763,2.957,1764,2.957,1765,2.957,1766,2.957,1767,2.957,1768,2.957,1769,2.957,1770,2.957,1771,2.957,1772,2.773,1773,2.957,2654,4.737,2655,4.737]],["title/cases/math.html#浮點數運算的坑",[1776,4.581]],["body/cases/math.html#浮點數運算的坑",[1,0.283,2,0.397,3,0.288,4,0.363,5,0.406,6,0.461,7,0.436,8,0.482,12,0.915,14,0.037,19,1.483,36,0.749,58,1.647,62,0.577,119,2.005,145,0.769,154,1.974,165,1.505,378,2.759,384,2.943,409,1.199,454,2.537,615,2.943,637,1.505,694,2.303,1577,2.847,1639,2.847,1643,2.759,1725,3.467,1726,4.715,1727,4.414,1728,3.467,1729,3.467,1730,3.467,1731,3.467,1732,3.467,1733,3.17,1734,4.414,1735,2.759,1736,3.17,1737,3.17,1738,2.759,1739,3.17,1740,3.17,1741,5.661,1742,5.661,1743,4.781,1744,2.943,1746,2.943,1747,2.943,1750,2.943,1752,6.091,1753,2.943,1754,5.551,1755,5.099,1756,4.098,1757,4.098,1758,4.098,1759,2.943,1762,2.943,1763,2.943,1764,2.943,1765,2.943,1766,2.943,1767,2.943,1768,2.943,1769,2.943,1770,2.943,1771,2.943,1772,2.759,1773,2.943,1777,3.901,1778,3.901,1779,3.901,1780,3.901,1781,3.901,1782,3.901,1783,3.901,1784,3.901,1785,3.901,1786,3.467,1787,3.467,1788,3.467,1789,3.17,1793,3.17,1794,3.17,1795,3.17,1796,3.17,1797,3.17,1798,3.17,1799,2.679,1800,3.17,1801,3.17,1802,3.17,1803,3.17,1804,3.17,1805,3.17,1806,5.979,1807,5.979,1808,5.979,1809,5.979,1810,3.17,1811,3.17,1812,3.17,1813,3.17,1814,3.17,1815,3.17,1816,3.17,1817,3.17,1818,3.17,1819,3.17,1820,3.17,1821,3.17,2656,3.901,2657,3.901]],["title/cases/math.html#科學符號處理",[1786,4.071]],["body/cases/math.html#科學符號處理",[1,0.282,2,0.4,3,0.226,4,0.285,5,0.32,6,0.363,7,0.478,8,0.528,14,0.037,19,1.625,58,1.683,145,0.843,154,1.827,378,3.024,384,3.225,615,3.225,1577,3.12,1639,3.12,1643,3.024,1726,3.225,1733,3.474,1734,4.701,1735,3.024,1736,3.474,1737,3.474,1738,3.024,1739,3.474,1740,3.474,1741,5.755,1742,5.755,1743,4.97,1744,3.225,1746,3.225,1747,3.225,1750,3.225,1752,6.184,1753,3.225,1754,5.708,1755,5.3,1756,4.364,1757,4.364,1758,4.364,1759,3.225,1762,3.225,1763,3.225,1764,3.225,1765,3.225,1766,3.225,1767,3.225,1768,3.225,1769,3.225,1770,3.225,1771,3.225,1772,3.024,1773,3.225,1787,3.8,1788,3.8,1789,3.474,1793,3.474,1794,3.474,1795,3.474,1796,3.474,1797,3.474,1798,3.474,1799,2.937,1800,3.474,1801,3.474,1802,3.474,1803,3.474,1804,3.474,1805,3.474,1806,6.148,1807,6.148,1808,6.148,1809,6.148,1810,3.474,1811,3.474,1812,3.474,1813,3.474,1814,3.474,1815,3.474,1816,3.474,1817,3.474,1818,3.474,1819,3.474,1820,3.474,1821,3.474,2656,4.275,2657,4.275]],["title/cases/math.html#why-0-1-0-2-0-3",[14,0.014,1741,1.387,1742,1.387,1743,1.387]],["body/cases/math.html#why-0-1-0-2-0-3",[1,0.277,2,0.401,14,0.037,19,1.728,58,1.707,154,1.904,384,3.43,1577,3.318,1643,3.217,1726,3.43,1741,5.769,1742,5.769,1743,4.785,1744,3.43,1746,3.43,1747,3.43,1750,3.43,1752,6.244,1753,3.43,1754,5.811,1755,5.434,1756,4.548,1757,4.548,1758,4.548,1759,3.43,1762,3.43,1763,3.43,1764,3.43,1765,3.43,1766,3.43,1767,3.43,1768,3.43,1769,3.43,1770,3.43,1771,3.43,1772,3.217,1773,3.43,1789,3.695,1793,3.695,1794,3.695,1795,3.695,1796,3.695,1797,3.695,1798,3.695,1799,3.123,1800,3.695,1801,3.695,1802,3.695,1803,3.695,1804,3.695,1805,3.695,1806,6.259,1807,6.259,1808,6.259,1809,6.259,1810,3.695,1811,3.695,1812,3.695,1813,3.695,1814,3.695,1815,3.695,1816,3.695,1817,3.695,1818,3.695,1819,3.695,1820,3.695,1821,3.695,2656,4.547,2657,4.547]],["title/function/factory​_factory.html",[21,0.549,2658,3.433]],["body/function/factory​_factory.html",[1,0.288,2,0.364,3,0.409,4,0.501,5,0.561,6,0.636,7,0.838,8,0.885,9,1.146,10,1.031,11,1.387,14,0.038,15,1.226,21,1.262,36,1.275,37,1.28,38,1.368,39,0.855,116,4.32,118,3.615,121,2.469,140,1.631,145,1.524,207,3.273,277,2.129,289,5.201,341,3.292,499,2.025,516,2.186,616,3.071,637,1.849,811,2.66,987,null,1050,2.909,1072,3.747,2658,4.793,2659,6.139,2660,6.757,2661,3.956,2662,3.956,2663,5.791,2664,6.851,2665,5.189,2666,5.791,2667,3.956,2668,6.757,2669,3.544,2670,3.544,2671,7.192,2672,3.544,2673,3.544,2674,3.544,2675,3.071,2676,3.273,2677,5.189,2678,3.544,2679,3.544,2680,5.189,2681,3.544,2682,3.544,2683,3.544,2684,3.544,2685,7.763,2686,7.96,2687,5.189,2688,5.791,2689,6.139,2690,5.189,2691,3.544,2692,3.544,2693,3.544,2694,3.544,2695,3.544,2696,3.956,2697,3.544,2698,3.544,2699,3.544,2700,3.544,2701,3.544,2702,3.956,2703,5.189,2704,4.793,2705,3.544,2706,4.496,2707,3.544,2708,5.189,2709,3.544]],["title/function/factory​_factory.html#組合的工廠函數",[2710,5.535]],["body/function/factory​_factory.html#組合的工廠函數",[1,0.278,2,0.351,3,0.383,4,0.484,5,0.542,6,0.614,7,0.81,8,0.894,9,1.158,10,1.043,11,1.403,14,0.037,15,1.266,21,1.228,36,1.291,37,1.304,38,1.394,39,0.884,116,4.122,118,3.702,121,2.551,140,1.656,145,1.491,277,2.199,289,4.76,341,3.371,499,2.092,516,2.258,616,3.172,637,1.305,811,2.747,987,null,1050,3.005,1072,2.643,2658,3.381,2659,5.313,2660,3.661,2665,3.661,2668,5.313,2669,3.661,2670,3.661,2671,6.862,2672,3.661,2673,3.661,2674,3.661,2675,3.172,2676,3.381,2677,5.313,2678,3.661,2679,3.661,2680,5.313,2681,3.661,2682,3.661,2683,3.661,2684,3.661,2685,7.841,2686,8.032,2687,5.313,2689,6.254,2690,5.313,2691,3.661,2692,3.661,2693,3.661,2694,3.661,2695,3.661,2697,3.661,2698,3.661,2699,3.661,2700,3.661,2701,3.661,2703,5.313,2704,4.907,2705,3.661,2706,4.604,2707,3.661,2708,5.313,2709,3.661,2711,4.086,2712,4.086,2713,4.086,2714,4.086,2715,4.086,2716,4.086,2717,4.086,2718,4.086,2719,4.086,2720,4.086,2721,4.086,2722,4.086,2723,4.086,2724,3.661,2725,4.086,2726,4.086,2727,5.93,2728,4.086,2729,4.086,2730,4.086,2731,4.086,2732,4.086,2733,4.086,2734,5.93,2735,5.93,2736,4.086,2737,4.086,2738,4.086,2739,4.086,2740,4.086,2741,4.086,2742,4.086,2743,4.086,2744,4.086,2745,4.086,2746,4.086,2747,4.086,2748,4.086,2749,4.086,2750,4.086,2751,4.086,2752,4.086,2753,4.086,2754,4.086,2755,4.086,2756,4.086]],["title/cases/str.html",[14,0.015,34,1.692]],["body/cases/str.html",[1,0.299,2,0.362,3,0.395,4,0.461,5,0.42,12,1.094,14,0.037,21,0.898,46,5.84,58,1.202,62,0.793,85,5.619,114,1.411,140,1.468,145,1.108,392,5.686,394,6.475,824,6.902,2638,6.084,2757,6.79,2758,8.34,2759,6.79,2760,6.79,2761,6.79,2762,6.79,2763,6.79,2764,6.79,2765,6.79,2766,6.79,2767,6.084,2768,8.34,2769,6.084,2770,6.084]],["title/cases/str.html#url",[46,3.581]],["body/cases/str.html#url",[1,0.247,2,0.312,3,0.34,12,0.941,14,0.036,46,5.849,62,0.683,85,6.43,140,1.681,182,4.295,437,3.827,2767,6.962,2769,6.962,2770,6.962,2771,9.041]],["title/global/function.html",[]],["body/global/function.html",[1,0.304,2,0.335,3,0.383,4,0.461,5,0.517,6,0.586,7,0.718,8,0.793,9,1.026,10,0.836,11,1.125,12,0.601,14,0.038,15,1.537,21,1.157,36,0.788,37,0.926,38,0.99,39,1.073,40,1.132,62,0.768,114,1.817,115,4.173,212,2.023,276,3.121,335,4.245,337,1.584,348,2.272,391,2.867,392,4.106,494,1.43,499,2.539,652,5.041,915,5.354,916,5.281,922,6.023,945,4.77,974,5.279,987,null,1825,3.479,2675,3.851,2772,6.799,2773,4.444,2774,4.444,2775,4.444,2776,4.444,2777,4.444,2778,4.444,2779,7.479,2780,7.836,2781,7.836,2782,4.444,2783,4.444,2784,4.444,2785,4.444,2786,4.444,2787,4.96,2788,6.092,2789,4.444]],["title/global/function.html#call、apply、bind",[2790,4.96]],["body/global/function.html#call、apply、bind",[337,2.558,494,2.309,915,4.553,916,4.837,2027,7.177,2773,7.177,2774,7.177,2775,7.177,2791,8.01,2792,8.01,2793,8.01,2794,8.01,2795,8.01]],["title/global/function.html#為什麼我們需要-apply-bind-call-？",[14,0.011,652,1.112,915,1.047,916,1.112,2796,1.842,2797,1.842]],["body/global/function.html#為什麼我們需要-apply-bind-call-？",[348,2.7,499,4.135,2776,7.238,2798,8.078,2799,8.078,2800,8.078,2801,8.078,2802,8.078,2803,8.078,2804,8.078]],["title/global/function.html#cab-call-apply-vs-bind",[14,0.016,652,0.834,915,0.785,916,0.834,1825,0.969,2777,1.238]],["body/global/function.html#cab-call-apply-vs-bind",[242,5.451,335,4.851,652,5.46,915,5.139,916,5.46,1158,5.969,1545,6.033,2022,6.962,2023,6.962,2805,7.77,2806,7.77,2807,7.77,2808,6.43,2809,7.77,2810,7.77,2811,7.77,2812,7.77,2813,7.77,2814,7.77]],["title/global/function.html#bind",[915,3.146]],["body/global/function.html#bind",[1,0.287,2,0.348,3,0.38,4,0.48,5,0.537,6,0.609,7,0.753,8,0.832,9,1.077,10,0.891,11,1.199,12,0.661,14,0.037,15,1.69,21,1.148,36,0.866,37,1.018,38,1.089,39,1.179,40,1.244,62,0.794,114,1.877,115,4.338,276,3.245,335,3.404,348,1.822,391,2.938,392,3.293,437,2.308,915,3.099,922,5.628,945,5.085,974,4.233,987,null,1501,4.886,1545,4.233,2675,4.233,2778,4.886,2779,7.775,2780,8.094,2781,8.094,2782,4.886,2783,4.886,2784,4.886,2785,4.886,2786,4.886,2788,4.886,2789,4.886,2808,6.738,2815,8.677,2816,8.677,2817,5.453,2818,5.453,2819,5.453,2820,5.453,2821,5.453,2822,5.453,2823,5.453,2824,5.453,2825,5.453]],["title/global/function.html#References",[212,2.258]],["body/global/function.html#References",[3,0.359,2790,7.342,2808,6.781,2826,8.194,2827,8.194]],["title/global/promise.html",[116,2.979]],["body/global/promise.html",[1,0.268,2,0.305,3,0.369,4,0.42,5,0.47,6,0.485,7,0.639,8,0.706,9,0.915,10,0.494,11,0.665,12,0.837,14,0.038,15,2.355,21,1.005,24,2.508,36,0.638,37,0.75,38,0.802,39,0.869,40,0.917,41,1.05,42,1.094,43,1.158,44,1.142,45,1.227,58,1.037,62,0.765,114,0.835,115,4.215,116,5.228,118,5.434,119,1.789,120,2.799,121,5.042,140,1.883,145,1.128,164,1.92,165,2.579,212,1.639,291,1.502,341,3.929,409,2.054,457,1.453,480,1.227,481,1.283,498,1.7,560,3.599,637,1.283,664,2.998,701,1.407,702,1.477,703,1.581,704,1.639,705,1.639,706,1.669,707,1.669,708,1.581,709,1.669,710,1.669,729,1.669,730,1.609,731,1.669,732,1.733,733,1.733,734,1.669,735,1.733,752,2.008,883,4.46,1016,2.599,1020,2.954,1062,2.954,1823,3.119,2291,2.008,2304,2.599,2332,4.847,2333,3.324,2334,5.108,2342,2.954,2639,3.599,2640,5.248,2646,3.599,2828,4.017,2829,4.017,2830,4.017,2831,4.017,2832,4.017,2833,5.857,2834,5.857,2835,4.017,2836,4.017,2837,4.017,2838,4.017,2839,8.432,2840,4.017,2841,4.017,2842,4.017,2843,4.017,2844,4.017,2845,4.017,2846,5.857,2847,5.857,2848,4.017,2849,4.017,2850,4.017,2851,4.017,2852,4.017,2853,4.017,2854,4.017,2855,4.017,2856,4.017,2857,4.017,2858,4.017,2859,4.017,2860,4.017,2861,4.017]],["title/global/date.html",[277,2.979]],["body/global/date.html",[1,0.249,2,0.314,3,0.378,4,0.432,5,0.484,6,0.43,7,0.724,10,0.962,11,1.295,12,1.136,14,0.037,15,3.021,36,0.974,41,2.252,42,1.671,58,1.526,62,0.687,140,1.692,156,4.302,277,5.363,701,2.148,702,2.255,963,4.511,965,4.511,967,4.511,969,5.756,2862,9.078,2863,6.133,2864,9.078,2865,6.133,2866,6.133,2867,5.495,2868,5.495,2869,5.495,2870,5.495,2871,5.495,2872,5.495,2873,6.075,2874,6.075,2875,7.012,2876,5.495,2877,5.495,2878,5.495]],["title/global/date.html#Date-prototype-toISOString",[2867,4.96]],["body/global/date.html#Date-prototype-toISOString",[1,0.228,2,0.288,3,0.314,4,0.396,5,0.444,6,0.503,7,0.797,10,1.06,14,0.037,15,2.671,42,1.952,58,1.525,62,0.757,140,1.864,156,5.026,277,4.638,702,2.635,963,5.27,965,5.27,967,5.27,969,5.27,2868,6.42,2869,6.42,2870,6.42,2871,6.42,2872,6.42,2873,6.69,2874,6.69,2875,7.721,2876,6.42,2877,6.42,2878,6.42,2879,7.165,2880,7.165]],["title/object/assign.html",[494,1.196,513,1.825]],["body/object/assign.html",[1,0.322,2,0.398,3,0.429,4,0.424,5,0.475,6,0.538,7,0.55,12,1.21,14,0.037,62,0.788,165,3.089,409,2.418,450,3.198,494,2.447,511,5.953,513,3.373,994,4.592,995,5.156,2881,5.941,2882,7.026,2883,7.424,2884,7.424,2885,5.323,2886,5.323,2887,5.941]],["title/object/assign.html#合併物件",[2888,5.535]],["body/object/assign.html#合併物件",[1,0.304,2,0.384,3,0.419,4,0.393,5,0.44,6,0.499,7,0.658,12,1.159,14,0.037,62,0.754,165,2.941,409,2.342,494,2.05,994,3.64,995,4.782,2882,5.885,2883,7.099,2884,7.099,2885,6.372,2886,6.372,2889,7.111]],["title/object/assign.html#有相同屬性時合併物件區段",[2890,5.535]],["body/object/assign.html#有相同屬性時合併物件區段",[1,0.311,2,0.384,3,0.403,4,0.392,5,0.439,6,0.498,12,1.158,14,0.037,62,0.623,165,3.052,409,2.34,494,2.045,513,3.121,994,3.631,995,4.77,2882,7.088,2883,7.088,2884,7.088,2891,7.094]],["title/glossary/hoisting.html",[2892,4.149,2893,4.149]],["body/glossary/hoisting.html",[1,0.309,2,0.385,3,0.42,4,0.496,5,0.556,6,0.631,7,0.831,8,0.918,9,1.14,10,0.659,12,1.143,14,0.037,21,1.285,62,0.853,114,1.114,165,3.013,344,2.507,348,2.395,391,3.067,393,3.153,453,2.551,499,2.744,637,1.712,660,3.346,694,3.502,807,7.234,874,5.045,2894,7.167,2895,7.167,2896,7.167,2897,7.167,2898,5.361,2899,5.361,2900,5.361,2901,5.361]],["title/http/caching.html",[14,0.015,29,2.429]],["body/http/caching.html",[1,0.19,2,0.281,3,0.357,4,0.33,5,0.369,6,0.419,7,0.552,8,0.61,9,0.789,10,1.003,11,0.987,12,0.723,14,0.038,19,1.877,24,2.573,29,4.777,30,3.493,36,0.654,37,0.77,38,0.823,109,6.84,123,3.211,140,1.663,149,3.693,154,1.559,168,6.257,212,1.681,277,2.218,283,4.714,599,3.86,653,2.891,852,3.41,912,4.389,1031,4.012,1846,4.186,2099,7.697,2106,5.724,2606,6.335,2902,3.693,2903,3.693,2904,7.623,2905,7.862,2906,3.693,2907,5.97,2908,4.121,2909,3.693,2910,4.121,2911,4.121,2912,4.121,2913,6.363,2914,6.753,2915,4.938,2916,4.938,2917,4.938,2918,4.938,2919,5.347,2920,4.938,2921,5.967,2922,4.938,2923,8.531,2924,7.623,2925,7.312,2926,8.051,2927,5.347,2928,7.312,2929,4.121,2930,3.693,2931,3.693]],["title/http/caching.html#強緩存",[2932,5.535]],["body/http/caching.html#強緩存",[1,0.176,2,0.222,3,0.382,4,0.305,5,0.342,6,0.388,7,0.511,8,0.565,9,0.731,10,1.008,11,0.914,12,0.67,14,0.037,19,2.301,24,3.45,29,4.281,30,4.281,109,6.995,123,2.974,140,1.582,269,4.291,283,4.3,302,4.574,367,2.585,599,3.575,653,3.877,852,4.574,912,5.379,1031,3.716,1158,3.45,1232,2.974,1799,4.157,1846,3.877,2099,7.855,2106,6.365,2902,4.952,2903,4.952,2904,8.13,2905,8.13,2906,4.952,2907,5.678,2909,4.952,2913,6.052,2914,4.574,2915,4.574,2916,4.574,2917,4.574,2918,4.574,2919,4.952,2920,4.574,2922,4.574,2933,5.527,2934,5.527,2935,5.527,2936,5.527,2937,5.527,2938,5.527,2939,5.527,2940,5.527,2941,5.527,2942,5.527,2943,5.527,2944,5.527,2945,5.527,2946,5.527,2947,5.527,2948,5.527,2949,5.527,2950,5.527,2951,5.527,2952,5.527,2953,5.527,2954,5.527,2955,5.527,2956,5.527,2957,5.527,2958,5.527,2959,4.952,2960,5.527,2961,5.527,2962,4.952,2963,7.314,2964,4.952,2965,4.952,2966,4.952,2967,5.527,2968,5.527,2969,4.952,2970,5.527,2971,5.527,2972,5.527,2973,5.527,2974,5.527,2975,5.527,2976,5.527,2977,5.527,2978,5.527,2979,5.527,2980,5.527,2981,5.527,2982,5.527,2983,5.527,2984,5.527,2985,5.527]],["title/http/caching.html#協商緩存",[2986,5.535]],["body/http/caching.html#協商緩存",[1,0.178,2,0.225,3,0.245,4,0.31,5,0.347,6,0.393,7,0.518,8,0.572,9,0.741,10,0.689,11,0.927,12,0.679,14,0.037,36,0.89,37,1.046,38,1.119,123,3.015,140,1.596,154,1.929,168,6.884,283,4.329,599,3.624,1031,3.767,1799,3.185,1846,3.93,2606,6.809,2724,6.612,2913,6.107,2914,6.829,2915,4.636,2916,4.636,2917,4.636,2918,4.636,2920,4.636,2922,4.636,2923,8.988,2924,8.386,2925,8.167,2926,8.386,2927,6.612,2928,8.167,2930,5.02,2931,5.02,2959,5.02,2962,5.02,2964,5.02,2965,5.02,2966,5.02,2969,5.02,2987,5.603,2988,5.603,2989,5.603,2990,5.603,2991,5.603,2992,5.603,2993,5.603,2994,5.603,2995,5.603,2996,5.603,2997,5.603,2998,5.603,2999,5.603,3000,5.603,3001,5.603,3002,5.603,3003,5.603,3004,5.603,3005,5.603,3006,5.603,3007,5.603,3008,5.603,3009,5.603,3010,5.603,3011,5.603,3012,5.603,3013,5.603,3014,5.603,3015,5.603,3016,5.603,3017,7.38,3018,5.603,3019,7.38,3020,5.603,3021,5.603,3022,5.603,3023,5.603,3024,5.603,3025,5.603,3026,5.603,3027,5.603,3028,7.38,3029,5.603]],["title/http/caching.html#References",[212,2.258]],["body/http/caching.html#References",[29,5.457,2099,6.362,3030,8.194,3031,8.194]],["title/object/create.html",[971,4.298]],["body/object/create.html",[1,0.294,2,0.304,3,0.256,4,0.323,5,0.362,6,0.41,7,0.541,8,0.597,9,0.773,10,0.719,11,0.967,12,0.708,14,0.037,15,1.811,21,1.114,36,0.928,37,1.091,38,1.167,39,1.264,40,1.333,41,1.527,42,1.592,43,1.685,44,1.661,45,1.785,58,1.343,62,0.783,67,5.236,114,1.576,154,1.983,292,2.855,348,1.953,397,3.933,398,6.254,480,1.785,481,1.866,494,2.187,652,3.529,701,2.047,702,2.149,703,2.3,704,2.384,811,3.929,900,2.149,971,6.539,981,6.797,987,null,1072,3.78,1966,3.421,2676,4.836,2704,6.278,3032,9.467,3033,5.844,3034,4.537,3035,9.467,3036,5.844,3037,5.844,3038,5.844,3039,5.844,3040,9.238,3041,6.278,3042,5.844]],["title/object/object​_keys.html",[3043,4.96]],["body/object/object​_keys.html",[1,0.294,2,0.387,3,0.333,4,0.42,5,0.47,6,0.533,7,0.825,8,0.776,9,1.005,10,0.934,11,0.969,12,1.021,14,0.037,29,3.428,31,5.669,36,0.93,37,1.094,38,1.169,39,1.266,40,1.336,41,1.53,58,1.492,62,0.859,114,1.752,119,2.32,123,3.152,140,1.823,165,2.692,218,6.201,289,4.935,409,2.144,494,2.731,503,3.428,900,2.153,994,2.998,3043,5.247,3044,5.856,3045,5.856,3046,5.856,3047,5.856,3048,5.856,3049,5.856,3050,5.856,3051,5.856,3052,5.856,3053,5.856,3054,7.596,3055,5.856,3056,5.856,3057,5.856,3058,5.856]],["title/operators/delete.html",[]],["body/operators/delete.html",[1,0.305,2,0.314,3,0.343,4,0.433,14,0.036,21,1.037,145,1.279,397,4.101,770,4.688]],["title/operators/delete.html#delete",[770,2.705]],["body/operators/delete.html#delete",[1,0.305,2,0.314,3,0.343,4,0.433,14,0.036,21,1.037,145,1.279,397,3.986,770,3.828,3059,7.834,3060,7.834,3061,7.834]],["title/operators/destructuring_assignment.html",[]],["body/operators/destructuring_assignment.html",[1,0.24,2,0.302,3,0.33,4,0.416,5,0.564,6,0.602,7,0.821,8,0.668,9,0.621,10,1.188,11,0.776,14,0.038,36,0.745,37,0.876,38,0.936,39,1.014,40,1.07,41,1.226,42,1.278,43,1.352,44,2.746,45,1.433,62,0.873,140,1.629,145,0.766,156,4.589,165,3.085,183,5.285,277,4.387,409,2.457,453,3.051,454,4.613,457,3.101,480,1.433,481,1.498,494,1.886,513,2.063,734,3.386,744,2.822,994,2.401,2346,6.328,2588,3.642,2590,3.642,2873,5.079,2874,5.079,3062,4.203,3063,5.862,3064,4.203,3065,4.203,3066,4.203,3067,6.75,3068,5.862,3069,5.862,3070,7.303,3071,4.203,3072,4.203,3073,4.203,3074,4.203,3075,4.203,3076,6.542,3077,4.203,3078,4.203]],["title/operators/destructuring_assignment.html#Destructuring-assignment",[513,1.825,3062,3.717]],["body/operators/destructuring_assignment.html#Destructuring-assignment",[1,0.237,2,0.3,3,0.327,4,0.413,5,0.561,6,0.598,7,0.817,8,0.661,9,0.611,10,1.184,11,0.763,14,0.038,36,0.733,37,0.862,38,0.921,39,0.998,40,1.053,41,1.206,42,1.257,43,1.33,44,2.738,45,1.409,62,0.871,140,1.615,145,0.753,156,4.537,165,3.076,183,5.238,277,4.355,409,2.449,453,3.033,454,4.586,457,3.082,480,1.409,481,1.473,494,1.864,734,3.362,744,2.79,994,2.362,2346,6.283,2588,3.583,2590,3.583,2873,5.021,2874,5.021,3063,5.795,3064,4.135,3065,4.135,3066,4.135,3067,6.691,3068,5.795,3069,5.795,3070,7.251,3071,4.135,3072,4.135,3073,4.135,3074,4.135,3075,4.135,3077,4.135,3078,4.135,3079,6.468]],["title/operators/function.html",[]],["body/operators/function.html",[1,0.284,2,0.359,3,0.392,4,0.455,5,0.51,6,0.467,12,1.083,14,0.037,21,1.337,62,0.584,114,1.381,283,3.487,344,3.109,391,2.551,493,6.795,637,2.123,647,4.663,663,5.785,1829,4.663,3080,6.647,3081,6.647,3082,6.647,3083,7.376,3084,5.501,3085,8.012]],["title/operators/function.html#函數表達式",[3086,4.96]],["body/operators/function.html#函數表達式",[1,0.282,2,0.356,3,0.389,4,0.45,5,0.505,6,0.459,12,1.075,14,0.037,21,1.308,62,0.575,114,1.359,283,3.431,344,3.059,391,2.526,493,6.776,647,4.588,663,5.743,3083,7.302,3084,5.413,3085,7.954,3086,7.302,3087,6.541,3088,6.541,3089,6.541,3090,6.541,3091,6.541,3092,5.861,3093,6.541,3094,6.541,3095,6.541,3096,6.541]],["title/operators/typeof.html",[]],["body/operators/typeof.html",[1,0.304,2,0.328,3,0.358,4,0.452,5,0.506,12,0.796,14,0.037,15,2.037,19,2.067,21,1.231,27,3.629,65,5.495,145,1.334,175,6.725,287,3.056,393,4.211,494,2.356,522,6.011,638,4.833,650,5.102,658,3.364,659,4.102,661,3.01,675,2.73,3041,6.763,3097,7.971,3098,5.888,3099,6.571,3100,5.888,3101,5.888,3102,5.888,3103,5.888,3104,5.888,3105,5.101,3106,5.888]],["title/operators/typeof.html#typeof",[393,2.435]],["body/operators/typeof.html#typeof",[1,0.273,2,0.344,3,0.376,4,0.474,5,0.531,12,0.862,14,0.037,21,1.219,65,4.782,145,1.4,175,6.824,393,4.052,522,6.31,650,4.439,658,3.64,661,3.257,675,2.954,3092,6.372,3097,8.254,3098,6.372,3107,7.111,3108,7.111,3109,7.111,3110,7.111,3111,7.111,3112,7.111]],["title/operators/typeof.html#null",[27,2.258]],["body/operators/typeof.html#null",[1,0.283,14,0.036,19,2.373,27,3.625,65,5.073,287,2.821,393,3.319,494,2.175,638,5.549,650,4.71,659,4.71,3041,7.353,3100,6.76,3101,6.76,3102,6.76,3103,6.76,3104,6.76,3105,5.857,3106,6.76,3113,7.544,3114,7.544,3115,7.544,3116,7.544,3117,7.544,3118,7.544,3119,7.544,3120,7.544]],["title/statements/for.html",[]],["body/statements/for.html",[1,0.287,2,0.362,3,0.418,4,0.427,5,0.591,6,0.543,7,0.883,8,0.79,9,1.023,10,0.951,11,1.279,14,0.037,36,0.955,58,1.368,62,0.792,274,4.506,291,3.37,337,1.921,392,3.633,503,5,664,4.614,812,3.326,1036,4.979,1941,7.408,3121,6.016,3122,6.016,3123,9.013,3124,7.653,3125,8.076,3126,5.391,3127,6.016,3128,5.391]],["title/statements/for.html#for…of與for…in的差別",[3129,5.535]],["body/statements/for.html#for…of與for…in的差別",[1,0.285,2,0.36,3,0.416,4,0.423,5,0.588,6,0.537,7,0.879,8,0.782,9,1.013,10,0.942,11,1.267,14,0.037,36,0.942,58,1.355,62,0.787,242,4.159,274,4.481,306,5.312,367,2.773,664,3.92,812,3.277,1113,3.191,1234,4.121,1299,4.159,1941,7.379,3124,7.599,3125,8.032,3126,5.312,3128,5.312,3130,5.929,3131,8.481,3132,5.929,3133,5.929,3134,5.929,3135,5.929,3136,5.929,3137,5.929,3138,5.929,3139,5.929,3140,5.929,3141,5.929,3142,5.929,3143,5.929,3144,5.929,3145,5.929,3146,5.929,3147,5.929,3148,5.929,3149,5.929,3150,5.929,3151,5.929,3152,7.657,3153,5.929,3154,5.929,3155,5.929,3156,5.929,3157,5.929,3158,5.929]],["title/operators/precedence.html",[]],["body/operators/precedence.html",[1,0.307,2,0.399,3,0.36,4,0.406,5,0.455,6,0.515,7,0.514,8,0.568,9,0.736,10,0.684,11,0.92,12,1.059,14,0.037,36,0.883,37,1.038,38,1.11,39,1.202,40,1.268,41,1.453,42,1.515,43,1.602,44,1.58,45,1.698,62,0.768,114,1.155,154,1.453,159,5.527,291,3.074,348,2.454,397,3.633,409,2.223,457,2.011,480,1.698,481,1.775,701,1.947,702,2.044,703,2.188,704,2.268,705,2.268,706,2.31,707,2.31,708,2.188,709,2.31,710,2.31,729,2.31,730,2.227,731,2.31,3159,8.221,3160,4.981,3161,7.366,3162,6.578,3163,5.559,3164,8.919,3165,7.835,3166,4.981,3167,4.981,3168,4.981,3169,4.981,3170,5.559,3171,5.559]],["title/operators/precedence.html#運算子優先序",[1191,3.24]],["body/operators/precedence.html#運算子優先序",[1,0.232,2,0.293,3,0.32,12,0.886,14,0.037,62,0.766,114,1.519,154,1.911,159,6.268,291,3.486,3160,6.552,3161,8.353,3162,7.816,3172,9.654,3173,7.312,3174,7.312,3175,9.322]],["title/operators/precedence.html#運算符比-運算符高",[14,0.012,3176,2.973,3177,3.318]],["body/operators/precedence.html#運算符比-運算符高",[1,0.308,2,0.401,3,0.336,4,0.424,5,0.475,6,0.539,7,0.551,8,0.608,9,0.788,10,0.732,11,0.985,12,1.03,14,0.037,36,0.945,37,1.112,38,1.189,39,1.288,40,1.358,41,1.556,42,1.622,43,1.716,44,1.692,45,1.818,62,0.674,348,2.566,357,5.335,397,3.531,409,2.283,457,2.154,480,1.818,481,1.901,701,2.085,702,2.189,703,2.343,704,2.429,705,2.429,706,2.473,707,2.473,708,2.343,709,2.473,710,2.473,729,2.473,730,2.385,731,2.473,3164,9.016,3165,7.615,3166,5.335,3167,5.335,3168,5.335,3169,5.335,3176,5.335,3178,5.954,3179,5.954,3180,5.954,3181,5.954,3182,5.954,3183,5.954,3184,5.954,3185,5.954]],["title/statements/let.html",[]],["body/statements/let.html",[1,0.287,2,0.363,3,0.34,4,0.429,5,0.481,12,0.941,14,0.036,62,0.683,108,6.43,154,2.031,453,2.766,658,3.977,3186,6.962,3187,6.962]],["title/statements/let.html#let",[]],["body/statements/let.html#let",[1,0.287,2,0.362,3,0.339,4,0.427,5,0.478,12,0.936,14,0.036,62,0.679,108,6.395,154,2.02,453,2.751,658,3.956,3186,6.924,3187,6.924,3188,7.728,3189,7.728,3190,7.728,3191,7.728]],["title/statements/AsyncFunction.html",[3192,4.96]],["body/statements/AsyncFunction.html",[1,0.295,2,0.29,3,0.316,4,0.399,5,0.447,6,0.507,7,0.668,8,0.738,10,1.14,11,1.194,14,0.037,21,0.955,58,1.278,62,0.814,114,1.5,374,6.721,403,3.965,453,2.57,1825,5.065,2649,7.756,3192,6.469,3193,7.219,3194,7.219]],["title/statements/block.html",[14,0.019]],["body/statements/block.html",[1,0.313,2,0.393,3,0.402,4,0.507,5,0.568,6,0.607,7,0.762,8,0.679,9,0.88,10,0.818,11,1.1,12,1.164,14,0.038,19,2.399,21,1.144,36,0.762,37,0.897,38,0.959,39,1.038,40,1.095,41,1.255,62,0.844,114,1.711,140,1.038,145,0.784,292,2.346,348,2.751,391,1.488,393,3.934,397,3.42,409,1.939,453,2.93,454,3.578,485,3.727,522,4.89,647,5.351,658,2.458,661,2.199,664,5.107,912,3.531,1868,3.973,3084,3.973,3195,4.801,3196,8.645,3197,6.649,3198,6.649,3199,4.801,3200,4.801]],["title/string/split.html",[]],["body/string/split.html",[1,0.314,2,0.296,3,0.323,4,0.407,5,0.456,6,0.517,7,0.682,8,0.753,9,0.975,10,0.906,14,0.037,21,0.975,54,6.147,58,1.304,62,0.647,145,1.203,834,3.375,2631,6.098,3201,6.602,3202,7.369,3203,7.369,3204,6.602,3205,8.672,3206,6.602,3207,6.602]],["title/string/split.html#split",[54,3.883]],["body/string/split.html#split",[1,0.307,2,0.293,3,0.32,4,0.404,5,0.453,6,0.513,7,0.676,8,0.747,9,0.967,10,0.899,14,0.037,21,0.967,54,5.13,58,1.294,62,0.642,145,1.193,834,3.349,1105,3.655,2631,6.051,3201,6.552,3204,6.552,3205,8.65,3206,6.552,3207,6.552,3208,7.312,3209,7.312,3210,7.312,3211,7.312,3212,6.552]],["title/statements/if...else.html",[]],["body/statements/if...else.html",[1,0.307,2,0.388,3,0.35,4,0.441,5,0.494,6,0.56,7,0.738,8,0.815,9,0.837,10,0.778,11,1.046,14,0.037,31,6.364,36,1.004,37,1.181,38,1.262,39,1.368,40,1.443,41,1.653,42,1.723,62,0.831,114,1.908,276,2.364,289,5.658,994,4.475,995,4.252,1016,5.655,3213,6.323,3214,6.323,3215,7.832,3216,6.323,3217,7.149,3218,7.978,3219,6.323,3220,6.323,3221,6.323,3222,6.323,3223,6.323,3224,5.666]],["title/statements/if...else.html#if…else",[3225,5.535]],["body/statements/if...else.html#if…else",[]],["title/statements/if...else.html#條件組合的問題",[3226,5.535]],["body/statements/if...else.html#條件組合的問題",[1,0.306,2,0.387,3,0.347,4,0.438,5,0.491,6,0.556,7,0.733,8,0.809,9,0.827,10,0.769,11,1.035,14,0.037,31,6.343,36,0.993,37,1.168,38,1.249,39,1.353,40,1.427,41,1.634,42,1.704,62,0.829,114,1.9,276,2.338,289,5.642,994,4.452,995,4.205,1016,4.046,3215,5.604,3217,5.604,3224,5.604,3227,6.254,3228,6.254,3229,7.923,3230,7.923,3231,6.254,3232,7.923,3233,7.923,3234,7.923,3235,6.254,3236,6.254,3237,6.254,3238,6.254,3239,6.254,3240,6.254,3241,6.254,3242,6.254,3243,6.254,3244,6.254,3245,6.254]],["title/swagger/to-html.html",[1612,2.911,3246,2.59]],["body/swagger/to-html.html",[14,0.026,24,4.655,27,2.322,30,5.849,31,5.592,32,6.081,34,3.963,51,5.592,102,7.848,119,1.738,145,0.929,212,3.834,337,1.818,342,2.456,391,2.311,397,3.455,443,5.834,450,4.476,483,3.993,489,4.122,498,3.52,599,6.464,1033,6.457,1072,3.682,1612,3.993,1628,3.682,1735,4.868,1846,5.834,1851,7.779,2097,4.71,2291,2.846,2563,4.71,2706,4.419,2907,4.419,3034,4.419,3105,6.457,3246,4.655,3247,5.1,3248,5.1,3249,4.71,3250,4.71,3251,6.44,3252,5.1,3253,8.422,3254,7.907,3255,5.1,3256,7.452,3257,6.682,3258,5.1,3259,6.682,3260,6.682,3261,6.171,3262,5.1,3263,4.71,3264,4.71,3265,5.1,3266,5.1,3267,5.1,3268,5.1]],["title/swagger/to-html.html#Swagger-to-HTML",[1612,2.911,3246,2.59]],["body/swagger/to-html.html#Swagger-to-HTML",[14,0.026,24,4.667,27,2.331,30,5.853,31,5.603,32,6.088,34,3.967,51,5.603,102,7.853,119,1.745,145,0.933,212,3.839,337,1.825,342,2.466,391,2.317,397,3.462,443,5.846,450,4.485,483,4.009,489,4.133,498,3.527,599,6.468,1033,6.469,1072,3.697,1628,3.697,1735,4.878,1846,5.846,1851,7.787,2097,4.729,2291,2.857,2563,4.729,2706,4.437,2907,4.437,3034,4.437,3105,6.469,3246,3.568,3247,5.121,3248,5.121,3249,4.729,3250,4.729,3251,6.446,3252,5.121,3253,8.432,3254,7.92,3255,5.121,3256,7.466,3257,6.699,3258,5.121,3259,6.699,3260,6.699,3261,6.187,3262,5.121,3263,4.729,3264,4.729,3265,5.121,3266,5.121,3267,5.121,3268,5.121]],["title/swagger/to-html.html#undefined",[3246,2.59,3249,3.433]],["body/swagger/to-html.html#undefined",[483,5.798,3250,6.84]],["title/swagger/to-html.html#List-all-pets",[1628,2.684,3251,2.79]],["body/swagger/to-html.html#List-all-pets",[3251,5.574]],["title/swagger/to-html.html#Create-a-pet",[1072,2.684,3251,2.79]],["body/swagger/to-html.html#Create-a-pet",[3251,5.558,3261,6.84]],["title/swagger/to-html.html#Info-for-a-specific-pet",[3034,2.576,3251,2.231,3263,2.746]],["body/swagger/to-html.html#Info-for-a-specific-pet",[3264,6.86]],["title/swagger/ui.html",[3246,2.59,3269,3.433]],["body/swagger/ui.html",[1,0.298,14,0.036,21,1.163,145,1.209,370,6.465,443,5.196,2443,5.751,3246,5.487,3269,6.129,3270,6.637,3271,6.637,3272,6.637,3273,6.637,3274,6.637,3275,7.876,3276,6.637,3277,6.637,3278,6.637,3279,6.637,3280,6.637,3281,6.637,3282,6.637,3283,6.637,3284,6.637,3285,6.637,3286,6.637,3287,6.637]],["title/swagger/ui.html#Swagger-UI",[3246,2.59,3269,3.433]],["body/swagger/ui.html#Swagger-UI",[1,0.299,14,0.036,21,1.167,145,1.215,370,6.485,443,5.223,2443,5.781,3246,4.648,3270,6.671,3271,6.671,3272,6.671,3273,6.671,3274,6.671,3275,7.9,3276,6.671,3277,6.671,3278,6.671,3279,6.671,3280,6.671,3281,6.671,3282,6.671,3283,6.671,3284,6.671,3285,6.671,3286,6.671,3287,6.671]],["title/string/queue.html",[3288,4.298]],["body/string/queue.html",[1,0.274,2,0.314,3,0.343,4,0.396,5,0.443,6,0.503,7,0.662,8,0.732,9,0.947,10,0.881,11,1.185,12,0.742,14,0.038,18,2.582,21,1.289,36,1.137,37,1.337,38,1.43,39,1.549,40,1.398,41,1.601,42,1.669,43,1.766,44,1.741,45,1.871,54,2.999,58,1.268,62,0.629,140,0.925,145,1.481,159,4.12,164,3.422,212,1.744,284,2.363,287,1.599,342,3.374,397,2.546,480,1.306,481,1.365,497,2.043,655,4.882,701,1.498,947,2.766,2304,5.573,2581,6.851,2618,3.32,3288,5.56,3289,3.831,3290,4.757,3291,3.831,3292,4.757,3293,3.831,3294,5.49,3295,3.831,3296,3.831,3297,5.071,3298,5.49,3299,5.49,3300,5.49,3301,3.831,3302,3.831,3303,4.276,3304,4.276,3305,4.276,3306,4.276,3307,4.276,3308,5.926,3309,3.538,3310,3.538,3311,3.538,3312,3.538,3313,3.538,3314,3.538,3315,6.416,3316,6.416,3317,3.831,3318,7.008,3319,5.49,3320,3.831,3321,7.008,3322,5.49,3323,3.831,3324,3.831,3325,3.831,3326,3.831,3327,3.831,3328,3.831,3329,3.831]],["title/string/queue.html#數據結構：隊列（Queue）",[3330,5.535]],["body/string/queue.html#數據結構：隊列（Queue）",[1,0.202,2,0.255,3,0.279,4,0.352,5,0.394,6,0.447,7,0.589,8,0.65,9,0.842,10,0.783,11,1.053,14,0.038,21,1.3,36,1.011,37,1.189,38,1.271,39,1.377,40,1.452,41,1.664,42,1.734,43,1.835,44,1.809,45,1.944,58,1.418,145,1.502,164,3.042,342,3.783,947,4.118,3288,4.942,3289,5.704,3290,4.942,3291,5.704,3292,4.942,3293,5.704,3294,7.179,3295,5.704,3296,5.704,3297,5.268,3298,5.704,3331,6.366,3332,6.366,3333,6.366,3334,6.366,3335,6.366,3336,6.366,3337,6.366,3338,6.366]],["title/string/queue.html#時間複雜度",[3339,5.535]],["body/string/queue.html#時間複雜度",[1,0.212,2,0.267,3,0.292,4,0.368,5,0.413,6,0.468,7,0.616,8,0.681,9,0.882,10,0.819,11,1.102,14,0.037,21,1.272,36,1.058,37,1.244,38,1.33,39,1.441,145,1.345,164,3.94,342,2.875,3290,5.173,3292,5.173,3297,5.514,3299,7.386,3300,7.386,3301,5.97,3302,5.97,3308,6.822,3309,5.514,3310,5.514,3311,5.514,3312,5.514,3313,5.514,3314,5.514,3340,6.663,3341,6.663,3342,6.663,3343,6.663,3344,6.663,3345,6.663,3346,6.663,3347,6.663,3348,6.663,3349,6.663,3350,6.663,3351,6.663,3352,6.663,3353,6.663,3354,6.663,3355,5.97,3356,5.97]],["title/string/queue.html#雙端隊列（Deque）",[3355,4.96]],["body/string/queue.html#雙端隊列（Deque）",[1,0.224,2,0.283,3,0.308,4,0.389,5,0.436,6,0.494,7,0.651,8,0.719,9,0.932,10,0.866,11,1.165,14,0.037,21,1.292,36,1.118,37,1.315,38,1.406,39,1.523,145,1.392,164,4.075,342,3.038,3290,5.467,3292,5.467,3308,7.056,3309,5.827,3310,5.827,3311,5.827,3312,5.827,3313,5.827,3314,5.827,3356,6.309]],["title/string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞",[3357,5.535]],["body/string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞",[1,0.263,2,0.297,3,0.325,4,0.311,5,0.349,6,0.396,7,0.521,8,0.576,9,0.746,10,0.693,11,0.932,12,0.898,14,0.037,18,3.404,21,0.98,36,0.895,37,1.053,38,1.125,39,1.219,40,1.286,41,1.473,42,1.536,43,1.625,44,1.602,45,1.721,54,3.954,58,0.998,62,0.727,140,1.219,145,1.209,159,4.981,182,4.095,287,2.107,437,4.327,480,1.721,481,1.8,497,2.693,655,5.488,701,1.974,2304,5.687,2581,7.557,2618,4.376,3212,5.05,3288,4.376,3315,7.416,3316,7.416,3317,5.05,3318,7.877,3319,6.638,3320,5.05,3321,7.877,3322,6.638,3323,5.05,3324,5.05,3325,5.05,3326,5.05,3327,5.05,3328,5.05,3329,5.05,3358,5.636,3359,5.636,3360,5.636,3361,5.636,3362,5.636,3363,5.636,3364,7.409,3365,5.636,3366,5.636,3367,5.636,3368,5.636,3369,5.636,3370,5.636,3371,5.636,3372,5.636]],["title/string/queue.html#References",[212,2.258]],["body/string/queue.html#References",[3373,8.29]]],"invertedIndex":[["",{"_index":14,"title":{"RegExp.html":{},"arrowFunction.html":{},"core.html":{},"math.html":{},"math.html#why-0-1-0-2-0-3":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"array/good_part.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/math.html":{},"cases/math.html#why-0-1-0-2-0-3":{},"cases/str.html":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"global/function.html#cab-call-apply-vs-bind":{},"http/caching.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{}},"body":{"ajax.html":{},"RegExp.html":{},"RegExp.html#match":{},"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"es6.html":{},"es6.html#Module-的加载实现":{},"closures.html":{},"closures.html#傳多個函數":{},"export.html":{},"export.html#export":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"event.html":{},"event.html#代理":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{},"index.html#More-Informations":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#ES6-Airbnb":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"scope.html":{},"url.html":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"F2E/GraphQL.html":{},"F2E/token.html":{},"array/array_method.html":{},"F2E/header.html":{},"F2E/cookie.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/good_part.html":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/object_to_array.html":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"cases/if.html":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/replace.html":{},"cases/delay.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"cases/str.html":{},"cases/str.html#url":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"glossary/hoisting.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/create.html":{},"object/object​_keys.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/typeof.html#null":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"statements/let.html":{},"statements/let.html#let":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["0",{"_index":58,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"RegExp.html#match":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#Let":{},"core.html#箭頭函數":{},"num.html":{},"num.html#補數字":{},"performance.html":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"this.html":{},"this.html#簡易呼叫":{},"this.html#bind-apply-call":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"cases/if.html":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"cases/str.html":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/create.html":{},"object/object​_keys.html":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"statements/AsyncFunction.html":{},"string/split.html":{},"string/split.html#split":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["0&#x4e5f;&#x662f;&#x6700;&#x5f8c;&#x57f7;&#x884c",{"_index":1130,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["0)&#xff1a;radix&#x7684;&#x503c;&#x70ba;0&#xff0c;&#x5224;&#x65b7;&#x5b57;&#x7b26;&#x4e32;&#x767c;&#x73fe;&#x4ecb;&#x65bc;1~9&#xff0c;&#x7528;10&#x9032;&#x5236;&#x8f49;&#x63db;&#xff0c;&#x7d50;&#x679c;&#x70ba;1&#xff0c;&#x6240;&#x4ee5;callback&#x7684;&#x7d50;&#x679c;&#x7b49;&#x50f9;&#x65bc;true&#xff0c;&#x8fd4;&#x56de;&#x5143;&#x7d20;&#x2019;1&#x2019;&#x3002",{"_index":2553,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["0)：radix的值為0，判斷字符串發現介於1~9，用10進制轉換，結果為1，所以callback的結果等價於true，返回元素’1",{"_index":2533,"title":{},"body":{"array/filter.html":{}}}],["0,1,2",{"_index":1922,"title":{},"body":{"this.html":{}}}],["0,1,2,3,4",{"_index":280,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{}}}],["0.00011",{"_index":1751,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["0.000110",{"_index":1759,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.009",{"_index":1732,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["0.009000000000000001",{"_index":1731,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["0.1",{"_index":1741,"title":{"math.html#why-0-1-0-2-0-3":{},"cases/math.html#why-0-1-0-2-0-3":{}},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.1.tostring(2",{"_index":1750,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.1的二進制格式是：0.0001100011",{"_index":1760,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["0.2",{"_index":1742,"title":{"math.html#why-0-1-0-2-0-3":{},"cases/math.html#why-0-1-0-2-0-3":{}},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.2).tofixed(10",{"_index":1763,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.2).toprecision(10",{"_index":1762,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.3",{"_index":1743,"title":{"math.html#why-0-1-0-2-0-3":{},"cases/math.html#why-0-1-0-2-0-3":{}},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.30000000000000004",{"_index":1744,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.4",{"_index":1754,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.6",{"_index":1757,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.8",{"_index":1755,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["0.9",{"_index":1730,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["0.999",{"_index":1586,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["00010",{"_index":431,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["0011",{"_index":1752,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["007",{"_index":1580,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["01",{"_index":1753,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["01&#x201d",{"_index":1804,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["02",{"_index":1772,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["03",{"_index":1773,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["03:24:00",{"_index":2865,"title":{},"body":{"global/date.html":{}}}],["05",{"_index":2874,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["0x",{"_index":713,"title":{},"body":{"core.html":{}}}],["0x&#x662f;&#x6307;&#x5341;&#x516d;&#x9032;&#x5236;&#x6578",{"_index":1211,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["0x01",{"_index":780,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["0x02",{"_index":789,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["0x11",{"_index":712,"title":{},"body":{"core.html":{}}}],["1",{"_index":1,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"RegExp.html#match":{},"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"es6.html":{},"es6.html#Module-的加载实现":{},"closures.html":{},"closures.html#傳多個函數":{},"export.html":{},"export.html#export":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"event.html":{},"event.html#代理":{},"index.html":{},"index.html#Getting-Started":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"scope.html":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"array/array_method.html":{},"F2E/header.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/good_part.html":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/object_to_array.html":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"cases/if.html":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/replace.html":{},"cases/delay.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"cases/str.html":{},"cases/str.html#url":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"glossary/hoisting.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/create.html":{},"object/object​_keys.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/typeof.html#null":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"statements/let.html":{},"statements/let.html#let":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["1&#x662f;&#x6574;&#x578b",{"_index":3117,"title":{},"body":{"operators/typeof.html#null":{}}}],["1&#xff0c;&#x53ea;&#x662f;&#x8a08;&#x7b97;&#x548c;&#x8ce6;&#x503c;&#x7684;&#x9806;&#x5e8f;&#x4e0d;&#x4e00;&#x6a23;&#x3002",{"_index":1906,"title":{},"body":{"operators.html#Increment":{}}}],["1','2','3",{"_index":1964,"title":{},"body":{"this.html":{}}}],["1(function",{"_index":669,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["1)&#xff1a;radix&#x7684;&#x503c;&#x70ba;1&#xff0c;&#x5982;&#x679c;&#x8a72;&#x53c3;&#x6578;&#x5c0f;&#x65bc",{"_index":2555,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["1)：radix的值為1",{"_index":2535,"title":{},"body":{"array/filter.html":{}}}],["1,2,3",{"_index":2399,"title":{},"body":{"array/array_merge.html":{}}}],["1,2,3,4",{"_index":2294,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["1,2,3,4,5,6",{"_index":2398,"title":{},"body":{"array/array_merge.html":{}}}],["1.&#x5728;&#x9810;&#x71b1;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;vip&#x7528;&#x6236;&#x8d08;&#x9001",{"_index":3228,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["1.0",{"_index":3102,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["1.0.0",{"_index":3250,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#undefined":{}}}],["1.0.name",{"_index":3101,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["1.1",{"_index":205,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["1.2",{"_index":1758,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["1.4",{"_index":1729,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["1.4000000000000001",{"_index":1725,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["1.6",{"_index":1756,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["1.name",{"_index":3103,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["1.在預熱中參與活動，vip",{"_index":3214,"title":{},"body":{"statements/if...else.html":{}}}],["10",{"_index":10,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"scope.html":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/filter.html":{},"cases/arr.html":{},"cases/if.html":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"glossary/hoisting.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/create.html":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["100",{"_index":119,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"performance.html":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"this.html":{},"this.html#Closure":{},"this.html#Callback":{},"variable.html":{},"variable.html#動態型別":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"global/promise.html":{},"object/object​_keys.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["1000",{"_index":276,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#const":{},"this.html":{},"this.html#Closure":{},"cases/delay.html":{},"global/function.html":{},"global/function.html#bind":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["10000",{"_index":432,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["1000000",{"_index":1724,"title":{},"body":{"math.html":{},"math.html#Math":{}}}],["100m",{"_index":2828,"title":{},"body":{"global/promise.html":{}}}],["11",{"_index":11,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"closures.html":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"performance.html":{},"performance.html#事件節流":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"cases/arr.html":{},"cases/if.html":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{},"global/date.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/create.html":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["11&#x8868;&#x793a;2+1=3",{"_index":2061,"title":{},"body":{"this.html#bind-apply-call":{}}}],["11*11",{"_index":689,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["110",{"_index":1932,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["1100",{"_index":895,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["11中包含了兩個1,數字20中不包含1,數字1到21中共包含了13個1",{"_index":3203,"title":{},"body":{"string/split.html":{}}}],["11表示2+1=3",{"_index":1973,"title":{},"body":{"this.html":{}}}],["12",{"_index":36,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"closures.html":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"performance.html":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"cases/arr.html":{},"cases/if.html":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/delay.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{},"global/date.html":{},"http/caching.html":{},"http/caching.html#協商緩存":{},"object/create.html":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["120",{"_index":1933,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["121",{"_index":690,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["122",{"_index":1880,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["123",{"_index":522,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/block.html":{}}}],["12345",{"_index":208,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["125",{"_index":1021,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["13",{"_index":37,"title":{},"body":{"ajax.html":{},"RESTfulAPI.html":{},"RESTfulAPI.html#References":{},"asynchronous.html":{},"asynchronous.html#異步":{},"closures.html":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"cases/if.html":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{},"http/caching.html":{},"http/caching.html#協商緩存":{},"object/create.html":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["1337",{"_index":2834,"title":{},"body":{"global/promise.html":{}}}],["13t04:00:00.000z",{"_index":3077,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["14",{"_index":38,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"closures.html":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"cases/if.html":{},"array/map.html":{},"array/map.html#map":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{},"http/caching.html":{},"http/caching.html#協商緩存":{},"object/create.html":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["140",{"_index":2630,"title":{},"body":{"array/fill.html":{}}}],["141.449997",{"_index":3078,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["142.970001",{"_index":3075,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["14t04:00:00.000z",{"_index":3074,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["15",{"_index":39,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"operators.html":{},"operators.html#Increment":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"cases/if.html":{},"array/map.html":{},"array/map.html#map":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{},"object/create.html":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["150",{"_index":1937,"title":{},"body":{"this.html":{},"this.html#Callback":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["16",{"_index":40,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"operators.html":{},"operators.html#Increment":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/if.html":{},"array/map.html":{},"array/map.html#map":{},"cases/delay.html":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{},"object/create.html":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["16+1",{"_index":714,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["17",{"_index":41,"title":{},"body":{"ajax.html":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"this.html":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"global/date.html":{},"object/create.html":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["17t03:24:00",{"_index":2866,"title":{},"body":{"global/date.html":{}}}],["18",{"_index":42,"title":{},"body":{"ajax.html":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"this.html":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["180",{"_index":3206,"title":{},"body":{"string/split.html":{},"string/split.html#split":{}}}],["19",{"_index":43,"title":{},"body":{"ajax.html":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"this.html":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["1995",{"_index":2864,"title":{},"body":{"global/date.html":{}}}],["1:200",{"_index":2627,"title":{},"body":{"array/fill.html":{}}}],["1xx",{"_index":196,"title":{},"body":{"RESTfulAPI.html":{}}}],["1xx&#xff1a;&#x76f8;&#x95dc;&#x4fe1;&#x606f",{"_index":250,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["1到400之間所有數字中包含的1的個數，比如數字1中包含了一個1",{"_index":3202,"title":{},"body":{"string/split.html":{}}}],["2",{"_index":2,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"RegExp.html#match":{},"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"es6.html":{},"es6.html#Module-的加载实现":{},"closures.html":{},"closures.html#傳多個函數":{},"export.html":{},"export.html#export":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"event.html":{},"event.html#代理":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"scope.html":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"array/array_method.html":{},"F2E/header.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"cases/if.html":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/replace.html":{},"cases/delay.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"cases/str.html":{},"cases/str.html#url":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"glossary/hoisting.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/create.html":{},"object/object​_keys.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"statements/let.html":{},"statements/let.html#let":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["2&#x5b9a;&#x7fa9;&#x4e00;&#x6bb5;&#x51fd;&#x5f0f;&#x4e26;&#x8ce6;&#x4e88;&#x5230;&#x53c3;&#x6578;&#x4e0a",{"_index":1352,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["2.&#x5728;&#x9032;&#x884c;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;vip&#x7528;&#x6236;&#x8d08;&#x9001",{"_index":3231,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["2.在進行中參與活動，vip",{"_index":3216,"title":{},"body":{"statements/if...else.html":{}}}],["20",{"_index":44,"title":{},"body":{"ajax.html":{},"closures.html":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"this.html":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["200",{"_index":24,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#函式工廠":{},"array/fill.html":{},"global/promise.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["201",{"_index":3262,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["2019年j",{"_index":125,"title":{},"body":{"RegExp.html":{}}}],["2020",{"_index":2873,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["21",{"_index":45,"title":{},"body":{"ajax.html":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"this.html":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["22",{"_index":480,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["23",{"_index":481,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/arr.html":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"object/create.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["24",{"_index":701,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"global/date.html":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["25",{"_index":702,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["250",{"_index":1020,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"this.html":{},"this.html#Callback":{},"global/promise.html":{}}}],["26",{"_index":703,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["27",{"_index":704,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["28",{"_index":705,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"cases/arr.html":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["29",{"_index":706,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["2:140",{"_index":2628,"title":{},"body":{"array/fill.html":{}}}],["2xx",{"_index":197,"title":{},"body":{"RESTfulAPI.html":{}}}],["2xx&#xff1a;&#x64cd;&#x4f5c;&#x6210;&#x529f",{"_index":251,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["2不會存在nan",{"_index":1971,"title":{},"body":{"this.html":{}}}],["3",{"_index":3,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"RegExp.html#match":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"es6.html":{},"es6.html#Module-的加载实现":{},"closures.html":{},"closures.html#傳多個函數":{},"export.html":{},"export.html#export":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"event.html":{},"event.html#代理":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"scope.html":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"array/array_method.html":{},"F2E/header.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"cases/if.html":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/replace.html":{},"cases/delay.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"cases/str.html":{},"cases/str.html#url":{},"global/function.html":{},"global/function.html#bind":{},"global/function.html#References":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"glossary/hoisting.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/create.html":{},"object/object​_keys.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"statements/let.html":{},"statements/let.html#let":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["3&#x8ce6;&#x4e88;&#x81f3;b&#x7684",{"_index":1194,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["30",{"_index":457,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"this.html":{},"this.html#Closure":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["300",{"_index":1016,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"global/promise.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["3000",{"_index":653,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"http/caching.html":{},"http/caching.html#強緩存":{}}}],["3001",{"_index":2930,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["301狀態碼（永久重定向）和302狀態碼（暫時重定向，307也是這個含義），因為它們可以由應用級別返回，瀏覽器會直接跳轉，api",{"_index":201,"title":{},"body":{"RESTfulAPI.html":{}}}],["303",{"_index":202,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["304",{"_index":2925,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["31",{"_index":707,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["32",{"_index":708,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"cases/arr.html":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["33",{"_index":709,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["34",{"_index":710,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["35",{"_index":729,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["36",{"_index":730,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/filter.html":{},"cases/arr.html":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["36&#xff0c;&#x5247",{"_index":2557,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["37",{"_index":731,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["38",{"_index":732,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{}}}],["39",{"_index":733,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{}}}],["39;1&#39",{"_index":2540,"title":{},"body":{"array/filter.html":{}}}],["39;2&#39",{"_index":2541,"title":{},"body":{"array/filter.html":{}}}],["39;3&#39;].filter(parseint",{"_index":2542,"title":{},"body":{"array/filter.html":{}}}],["39;jacob&#39",{"_index":648,"title":{},"body":{"core.html":{}}}],["39;msg&#39",{"_index":3163,"title":{},"body":{"operators/precedence.html":{}}}],["39;use",{"_index":1832,"title":{},"body":{"scope.html":{}}}],["3xx",{"_index":198,"title":{},"body":{"RESTfulAPI.html":{}}}],["3xx&#xff1a;&#x91cd;&#x5b9a;&#x5411",{"_index":252,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["3’].filter(parseint",{"_index":2531,"title":{},"body":{"array/filter.html":{}}}],["3’].map(parseint",{"_index":2574,"title":{},"body":{"cases/arr.html":{}}}],["3”，它並不是基礎基數2的一個有效數字。所以這個子字符串將被解析為空。如果子字符串被解析成空了，函數將返回為nan",{"_index":2575,"title":{},"body":{"cases/arr.html":{}}}],["3賦予至b",{"_index":682,"title":{},"body":{"core.html":{}}}],["4",{"_index":4,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"RegExp.html#match":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"event.html":{},"event.html#代理":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"scope.html":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"array/array_method.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/filter.html":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"cases/if.html":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/replace.html":{},"cases/delay.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"cases/str.html":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"glossary/hoisting.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/create.html":{},"object/object​_keys.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/let.html":{},"statements/let.html#let":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["4(finish",{"_index":3065,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["40",{"_index":734,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["400",{"_index":2631,"title":{},"body":{"array/fill.html":{},"string/split.html":{},"string/split.html#split":{}}}],["404",{"_index":3050,"title":{},"body":{"object/object​_keys.html":{}}}],["41",{"_index":735,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{}}}],["42",{"_index":736,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{}}}],["43",{"_index":737,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{}}}],["44",{"_index":738,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{}}}],["45",{"_index":739,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/array_method.html":{},"array/map.html":{},"array/map.html#map":{}}}],["46",{"_index":740,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"array/map.html":{},"array/map.html#map":{}}}],["47",{"_index":741,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["48",{"_index":742,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["49",{"_index":743,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["4xx",{"_index":199,"title":{},"body":{"RESTfulAPI.html":{}}}],["4xx&#xff1a;&#x5ba2;&#x6236;&#x7aef;&#x932f;&#x8aa4",{"_index":253,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["5",{"_index":5,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"event.html":{},"event.html#代理":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"scope.html":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"array/array_method.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/filter.html":{},"cases/arr.html":{},"cases/if.html":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/replace.html":{},"cases/delay.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"cases/str.html":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"glossary/hoisting.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/create.html":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/let.html":{},"statements/let.html#let":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["5&#xff1b",{"_index":305,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["5,5,5,5,5",{"_index":275,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{}}}],["50",{"_index":744,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#箭頭函數":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["500",{"_index":752,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#函式工廠":{},"core.html#const":{},"global/promise.html":{}}}],["51",{"_index":745,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["52",{"_index":746,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["52位有效數字，從第53",{"_index":1749,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["53",{"_index":747,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["53位開始)。當然，代價就是，0.1在計算機內部根本就不是精確的0.1，而是一個有舍入誤差的0.1。當代碼被編譯或解釋後，0.1",{"_index":1761,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["54",{"_index":748,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["55",{"_index":749,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["550",{"_index":2465,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["56",{"_index":750,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["5:400",{"_index":2629,"title":{},"body":{"array/fill.html":{}}}],["5xx",{"_index":200,"title":{},"body":{"RESTfulAPI.html":{}}}],["5xx&#xff1a;&#x670d;&#x52d9;&#x5668;&#x932f;&#x8aa4",{"_index":254,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["6",{"_index":6,"title":{"es6.html":{}},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"es6.html":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"event.html":{},"event.html#代理":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"performance.html":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"scope.html":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"array/array_method.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/filter.html":{},"cases/arr.html":{},"cases/if.html":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/replace.html":{},"cases/delay.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"glossary/hoisting.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/create.html":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["600",{"_index":906,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["7",{"_index":7,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{},"event.html":{},"event.html#代理":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"scope.html":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"cases/arr.html":{},"cases/if.html":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/replace.html":{},"cases/delay.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/assign.html":{},"object/assign.html#合併物件":{},"glossary/hoisting.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/create.html":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["700",{"_index":3215,"title":{},"body":{"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["754",{"_index":1746,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["754&#x6a19;&#x6e96;&#x4e2d",{"_index":1791,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{}}}],["754&#x6a19;&#x6e96;&#x4e2d;&#x7684;&#x6d6e;&#x9ede;&#x6578;&#x4e26;&#x4e0d;&#x80fd;&#x7cbe;&#x78ba;&#x5730;&#x8868;&#x9054;&#x5c0f;&#x6578;&#xff08;&#x6bd4;&#x5982;&#x8aaa;0.1&#xff09;&#xff0c",{"_index":2657,"title":{},"body":{"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["754&#x6a19;&#x6e96;&#x6240;&#x7522;&#x751f;&#x7684;&#x5fc5;&#x7136;&#x7d50;&#x679c;&#x3002",{"_index":1790,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{}}}],["754&#x6a19;&#x6e96;&#x6240;&#x7522;&#x751f;&#x7684;&#x5fc5;&#x7136;&#x7d50;&#x679c;&#x3002;iee",{"_index":2656,"title":{},"body":{"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["754標準中的浮點數並不能精確地表達小數（比如說0.1",{"_index":2655,"title":{},"body":{"cases/math.html":{}}}],["754標準所產生的必然結果。ieee",{"_index":2654,"title":{},"body":{"cases/math.html":{}}}],["8",{"_index":8,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{},"event.html":{},"event.html#代理":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"scope.html":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"array/array_method.html":{},"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#filter":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"cases/arr.html":{},"cases/if.html":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/replace.html":{},"cases/delay.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{},"glossary/hoisting.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/create.html":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["80",{"_index":75,"title":{},"body":{"ajax.html":{}}}],["800",{"_index":3217,"title":{},"body":{"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["81",{"_index":693,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["8601",{"_index":2869,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["9",{"_index":9,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"event.html":{},"event.html#代理":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{},"scope.html":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"cases/arr.html":{},"cases/if.html":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{},"glossary/hoisting.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/create.html":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["9*9",{"_index":692,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["999",{"_index":1589,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["999.999",{"_index":1590,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["9]1,2",{"_index":130,"title":{},"body":{"RegExp.html":{}}}],["9]1,2$)|(^[0",{"_index":128,"title":{},"body":{"RegExp.html":{}}}],["9]1,2[\\.]1[0",{"_index":129,"title":{},"body":{"RegExp.html":{}}}],["9_",{"_index":158,"title":{},"body":{"RegExp.html":{}}}],["_.clonedeep",{"_index":492,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["__proto__",{"_index":717,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{},"core.html#new":{}}}],["a&#x201d",{"_index":3362,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["a&#x662f;&#x6536",{"_index":1193,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["a(&#x5177;&#x6709",{"_index":2718,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["a(&#x662f",{"_index":2720,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["a*a",{"_index":691,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["a*b",{"_index":697,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["a+b",{"_index":699,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["a,&#x6b64;&#x6642;a&#x548c;b&#x6307;&#x5411;&#x540c;&#x4e00;&#x500b;&#x5c0d;&#x8c61;&#x3002",{"_index":3178,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["a,b",{"_index":408,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{},"core.html":{},"array/array_methods.html":{},"array/array_methods.html#sort":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["a,b&#x4f7f;&#x7528;&#x540c;&#x500b;&#x53c3;&#x8003;&#x4f4d;&#x5740",{"_index":1223,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["a,此時a和b",{"_index":3170,"title":{},"body":{"operators/precedence.html":{}}}],["a.__proto__.getlast",{"_index":836,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["a.concat(b",{"_index":2397,"title":{},"body":{"array/array_merge.html":{}}}],["a.foreach",{"_index":833,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{},"this.html":{},"this.html#Callback":{}}}],["a.getlast",{"_index":838,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["a.length",{"_index":831,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["a.pric",{"_index":2462,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["a.tostr",{"_index":839,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["a.x",{"_index":3165,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["a.x&#x5df2;&#x7d93;&#x57f7;&#x884c;&#x904e;&#x4e86;,&#x6b64;&#x6642;&#x5c0d;&#x8c61;&#x7684;x&#x5c6c;&#x6027;&#x8ce6;&#x503c;&#x70ba;a,&#x6b64;&#x6642",{"_index":3184,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["a.x已經執行過了,此時對象的x屬性賦值為a",{"_index":3171,"title":{},"body":{"operators/precedence.html":{}}}],["a1",{"_index":565,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["a2",{"_index":566,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["a3",{"_index":567,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["a4",{"_index":568,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["a===b",{"_index":719,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["aahkvsbd5f40g8sufov1i9ehag",{"_index":2083,"title":{},"body":{"variable.html":{},"variable.html#動態型別":{}}}],["aailvqn7gcen3zeexnluhuzmag",{"_index":1835,"title":{},"body":{"scope.html":{}}}],["ab",{"_index":696,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["ab2",{"_index":1884,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["abc.png",{"_index":1617,"title":{},"body":{"performance.html":{}}}],["acc",{"_index":1076,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["access",{"_index":108,"title":{},"body":{"ajax.html":{},"statements/let.html":{},"statements/let.html#let":{}}}],["accumul",{"_index":2438,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["achorad",{"_index":82,"title":{},"body":{"ajax.html":{}}}],["ad",{"_index":1876,"title":{"operators.html#Adding-Strings-and-Numbers":{}},"body":{"operators.html":{}}}],["add",{"_index":405,"title":{},"body":{"closures.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["add10",{"_index":400,"title":{},"body":{"closures.html":{}}}],["add5",{"_index":399,"title":{},"body":{"closures.html":{}}}],["add_transactionhash",{"_index":2615,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["addeventlisten",{"_index":1635,"title":{},"body":{"performance.html":{},"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["addf1",{"_index":407,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["addf1(x,i",{"_index":414,"title":{},"body":{"closures.html":{}}}],["addfirst",{"_index":3309,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["addlast",{"_index":3312,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["addr",{"_index":2122,"title":{},"body":{"F2E/header.html":{}}}],["admin/blob/master/mock",{"_index":478,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["adobe.com",{"_index":2134,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["afunc",{"_index":1867,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["ag",{"_index":2908,"title":{},"body":{"http/caching.html":{}}}],["age&#xff1a;&#x55ae;&#x4f4d;&#x662f;&#x79d2;&#xff0c;&#x7de9;&#x5b58;&#x6642;&#x9593;&#x8a08;&#x7b97;&#x7684;&#x65b9;&#x5f0f;&#x662f;&#x8ddd;&#x96e2;&#x767c;&#x8d77;&#x7684;&#x6642;&#x9593;&#x7684;&#x79d2;&#x6578;&#xff0c;&#x8d85;&#x904e;&#x9593;&#x9694;&#x7684;&#x79d2;&#x6578;&#x7de9;&#x5b58;&#x5931;&#x6548",{"_index":2950,"title":{},"body":{"http/caching.html#強緩存":{}}}],["age=00",{"_index":2929,"title":{},"body":{"http/caching.html":{}}}],["age=00&apo",{"_index":3018,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["age=10",{"_index":2919,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["age=10&apo",{"_index":2967,"title":{},"body":{"http/caching.html#強緩存":{}}}],["ahdaa/blog1/test.html?id=ad&amp;val1=02&amp;val2=22#achorad",{"_index":78,"title":{},"body":{"ajax.html":{}}}],["airbnb",{"_index":1053,"title":{"core.html#ES6-Airbnb":{}},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["ajax",{"_index":0,"title":{"ajax.html":{}},"body":{"ajax.html":{},"core.html":{},"api/promise.html":{},"api/promise.html#Promise":{}}}],["ajax讀json",{"_index":843,"title":{},"body":{"core.html":{}}}],["alert(target.innerhtml",{"_index":576,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["alert(x",{"_index":3195,"title":{},"body":{"statements/block.html":{}}}],["alert(xhr.responsetext",{"_index":25,"title":{},"body":{"ajax.html":{}}}],["all([p1",{"_index":2836,"title":{},"body":{"global/promise.html":{}}}],["all(hashlist.map",{"_index":2605,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["allow",{"_index":110,"title":{},"body":{"ajax.html":{}}}],["am&apo",{"_index":2816,"title":{},"body":{"global/function.html#bind":{}}}],["amp",{"_index":55,"title":{},"body":{"ajax.html":{},"this.html":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"cases/if.html":{}}}],["amp;&amp",{"_index":497,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["amp;typ",{"_index":3224,"title":{},"body":{"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["an",{"_index":2618,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["an_obj",{"_index":3047,"title":{},"body":{"object/object​_keys.html":{}}}],["anchorscrolldecorator($deleg",{"_index":3279,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["anchorscrool",{"_index":3283,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["angular",{"_index":2443,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["angular.bootstrap(document.getelementbyid('swagg",{"_index":3286,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["anim",{"_index":972,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["animal.cal",{"_index":982,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["animal.prototype.mov",{"_index":980,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["ans.map",{"_index":2620,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["ansarr",{"_index":2845,"title":{},"body":{"global/promise.html":{}}}],["ansarr.push(p",{"_index":2849,"title":{},"body":{"global/promise.html":{}}}],["anyon",{"_index":2527,"title":{},"body":{"array/object_to_array.html":{}}}],["anyth",{"_index":3281,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["api",{"_index":18,"title":{"RESTfulAPI.html":{}},"body":{"ajax.html":{},"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{},"RESTfulAPI.html#References":{},"asynchronous.html":{},"asynchronous.html#setTimeout":{},"F2E/GraphQL.html":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["api.github.com",{"_index":211,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["apo",{"_index":437,"title":{},"body":{"closures.html#傳多個函數":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#繼承":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"variable.html#Hoisting":{},"cases/str.html#url":{},"global/function.html#bind":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["apollo",{"_index":2098,"title":{},"body":{"F2E/GraphQL.html":{}}}],["apos;#app&apo",{"_index":1500,"title":{},"body":{"core.html#屬性特徵":{}}}],["apos;#object&apo",{"_index":1480,"title":{},"body":{"core.html#屬性特徵":{}}}],["apos;$&apo",{"_index":1256,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;&#x4f60;&#x597d;&apo",{"_index":1374,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["apos;&#x5168;&#x57df;&apo",{"_index":1984,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{}}}],["apos;&#x5168;&#x57df;2&apo",{"_index":2028,"title":{},"body":{"this.html#bind-apply-call":{}}}],["apos;&#x5177;&#x540d;&#x51fd;&#x5f0f;&apo",{"_index":1338,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;&#x51fd;&#x5f0f;&#x7684;&apo",{"_index":1991,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["apos;&#x51fd;&#x5f0f;&#x8868;&#x9054;&#x5f0f;&apo",{"_index":1339,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;&#x51fd;&#x5f0f;&#x9673;&#x8ff0;&#x5f0f;&apo",{"_index":1337,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;&#x52d5;&#x7269;&#x754c;&apo",{"_index":1461,"title":{},"body":{"core.html#繼承":{}}}],["apos;&#x533f;&#x540d;&#x51fd;&#x5f0f;&apo",{"_index":1340,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;&#x5340;&#x57df;&apo",{"_index":1985,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{},"this.html#立即函式：":{},"this.html#bind-apply-call":{}}}],["apos;&#x53c3;&#x6578;&#x5728;&#x9019;&apo",{"_index":1366,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["apos;&#x547c;&#x53eb;&apo",{"_index":2029,"title":{},"body":{"this.html#bind-apply-call":{}}}],["apos;&#x57f7;&#x884c;&#x51fd;&#x5f0f;&apo",{"_index":1351,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;&#x5c0f;&apo",{"_index":1438,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;&#x60a0;&#x904a;&#x5361;&apo",{"_index":2005,"title":{},"body":{"this.html#Closure":{}}}],["apos;&#x6253;&#x7d66",{"_index":2087,"title":{},"body":{"variable.html#Hoisting":{}}}],["apos;&#x666e;&#x901a;&#x7528;&#x6236;&#x5728;&#x9032;&#x884c;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;&#x8d08;&#x9001;300&#x7a4d;&#x5206;&apo",{"_index":3234,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;&#x666e;&#x901a;&#x7528;&#x6236;&#x5728;&#x9032;&#x884c;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;&#x8d08;&#x9001;800&#x7a4d;&#x5206;&apo",{"_index":3243,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;&#x666e;&#x901a;&#x7528;&#x6236;&#x5728;&#x9810;&#x552e;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;&#x8d08;&#x9001;700&#x7a4d;&#x5206;&apo",{"_index":3232,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;&#x68d5;&#x8272;&apo",{"_index":1437,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;&#x6bd4;&#x6bd4;&apo",{"_index":1436,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;&#x6c92;&#x6709;fna&#x4e5f;&#x53ef;&#x4ee5;&#x57f7;&#x884c;&apo",{"_index":1359,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["apos;&#x7269;&#x4ef6;&#x7684;&apo",{"_index":1990,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{}}}],["apos;&#x72ac;&#x79d1;&apo",{"_index":1464,"title":{},"body":{"core.html#繼承":{}}}],["apos;&#x72d7;&apo",{"_index":1455,"title":{},"body":{"core.html#繼承":{}}}],["apos;&#x7acb;&#x5373;&#x51fd;&#x5f0f;&apo",{"_index":1358,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["apos;&#x7db2;&#x8ecd;&apo",{"_index":1527,"title":{},"body":{"core.html#const":{}}}],["apos;&#x8c93;&#x79d1;&apo",{"_index":1462,"title":{},"body":{"core.html#繼承":{}}}],["apos;&#x8cd3;&#x5915;&#x6cd5;&#x5c3c;&#x4e9e;&#x5dde;&#x662f;&#x7f8e;&#x570b;&#x7684;&#x5dde;&#x4efd;&#x4e4b;&#x4e00;&#xff0c;&#x6b63;&#x5f0f;&#x540d;&#x7a31;&#x70ba;&#x300c;&#x8cd3;&#x5915;&#x6cd5;&#x5c3c;&#x4e9e;&#x90a6;&#x300d;(commonwealth",{"_index":179,"title":{},"body":{"RegExp.html#match":{}}}],["apos;&#x9019;&#x88e1;&#x662f;&#x5177;&#x540d;&#x51fd;&#x5f0f;&apo",{"_index":1360,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["apos;&#x9ee8;&#x5de5;&apo",{"_index":1526,"title":{},"body":{"core.html#const":{}}}],["apos;&apo",{"_index":182,"title":{},"body":{"RegExp.html#match":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"variable.html#動態型別":{},"array/array_methods.html#reduce":{},"cases/str.html#url":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["apos;(1",{"_index":2815,"title":{},"body":{"global/function.html#bind":{}}}],["apos;)&apo",{"_index":181,"title":{},"body":{"RegExp.html#match":{}}}],["apos;,&apo",{"_index":1994,"title":{},"body":{"this.html#簡易呼叫":{}}}],["apos;./index.js&apo",{"_index":387,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["apos;/&apo",{"_index":1450,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;/b&apo",{"_index":2474,"title":{},"body":{"array/array_methods.html#map":{},"array/map.html#map":{}}}],["apos;/public&apo",{"_index":2969,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["apos;0x11&apo",{"_index":1210,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["apos;1&apo",{"_index":1105,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"this.html#bind-apply-call":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"string/split.html#split":{}}}],["apos;1&apos;,&apos;2&apos;,&apos;3&apo",{"_index":2048,"title":{},"body":{"this.html#bind-apply-call":{}}}],["apos;10&apo",{"_index":2091,"title":{},"body":{"variable.html#動態型別":{}}}],["apos;100&apo",{"_index":2489,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;150&apo",{"_index":2487,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;2&apo",{"_index":2040,"title":{},"body":{"this.html#bind-apply-call":{},"variable.html#Hoisting":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["apos;3&apo",{"_index":2051,"title":{},"body":{"this.html#bind-apply-call":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["apos;3&apos;].filter(parseint",{"_index":2562,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["apos;300&apo",{"_index":2493,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;4&apo",{"_index":1379,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"this.html#bind-apply-call":{}}}],["apos;5&apo",{"_index":2045,"title":{},"body":{"this.html#bind-apply-call":{}}}],["apos;7",{"_index":2490,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;a&apo",{"_index":588,"title":{},"body":{"event.html#代理":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#屬性特徵":{}}}],["apos;abc.png&apo",{"_index":1679,"title":{},"body":{"performance.html#懶加載":{}}}],["apos;april&apo",{"_index":2320,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["apos;b&apo",{"_index":2473,"title":{},"body":{"array/array_methods.html#map":{},"array/map.html#map":{}}}],["apos;bar&apo",{"_index":3096,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["apos;barking&apo",{"_index":1444,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;bcde&apo",{"_index":1449,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["apos;cach",{"_index":2964,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["apos;cal",{"_index":1252,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;callfamily&apo",{"_index":1255,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;chen&apo",{"_index":1287,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["apos;chihuahua&apo",{"_index":1468,"title":{},"body":{"core.html#繼承":{}}}],["apos;claire&apo",{"_index":1270,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["apos;click&apo",{"_index":585,"title":{},"body":{"event.html#代理":{},"core.html#箭頭函數":{}}}],["apos;common/js/date&apo",{"_index":448,"title":{},"body":{"export.html#export":{}}}],["apos;components/control&apo",{"_index":449,"title":{},"body":{"export.html#export":{}}}],["apos;corgi&apo",{"_index":2817,"title":{},"body":{"global/function.html#bind":{}}}],["apos;dad&apo",{"_index":1247,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["apos;data",{"_index":1681,"title":{},"body":{"performance.html#懶加載":{}}}],["apos;deep&apo",{"_index":1296,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["apos;deepclone&apo",{"_index":546,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["apos;dessert&apo",{"_index":2716,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["apos;dev&apo",{"_index":1269,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["apos;div1&apo",{"_index":584,"title":{},"body":{"event.html#代理":{}}}],["apos;domcontentloaded&apo",{"_index":1708,"title":{},"body":{"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["apos;done&apo",{"_index":2389,"title":{},"body":{"api/promise.html#鏈接":{}}}],["apos;error",{"_index":544,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["apos;exec",{"_index":1344,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["apos;express&apo",{"_index":2962,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["apos;falsy&apo",{"_index":1227,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["apos;feb&apo",{"_index":2322,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["apos;first&apo",{"_index":1528,"title":{},"body":{"core.html#const":{}}}],["apos;fn&apo",{"_index":2003,"title":{},"body":{"this.html#簡易呼叫":{}}}],["apos;from",{"_index":1787,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["apos;fun&apo",{"_index":1278,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["apos;function&apo",{"_index":557,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["apos;global&apo",{"_index":1996,"title":{},"body":{"this.html#簡易呼叫":{}}}],["apos;hash&apo",{"_index":2625,"title":{},"body":{"array/map.html#map":{}}}],["apos;hello",{"_index":1501,"title":{},"body":{"core.html#屬性特徵":{},"global/function.html#bind":{}}}],["apos;hello&apo",{"_index":1113,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"statements/for.html#for…of與for…in的差別":{}}}],["apos;hsu&apo",{"_index":1245,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{},"core.html#Let":{}}}],["apos;http://3000&apo",{"_index":2771,"title":{},"body":{"cases/str.html#url":{}}}],["apos;i",{"_index":1253,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;i&apo",{"_index":1382,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["apos;iife&apo",{"_index":1357,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["apos;img1&apo",{"_index":1680,"title":{},"body":{"performance.html#懶加載":{}}}],["apos;jacob&apo",{"_index":1095,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"core.html#Let":{},"variable.html#Hoisting":{}}}],["apos;jan&apo",{"_index":2318,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["apos;jessica&apo",{"_index":1418,"title":{},"body":{"core.html#this":{}}}],["apos;jsfood.com/&apo",{"_index":2740,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["apos;june&apo",{"_index":2321,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["apos;keyup&apo",{"_index":1718,"title":{},"body":{"performance.html#事件節流":{}}}],["apos;lastest&apo",{"_index":1496,"title":{},"body":{"core.html#屬性特徵":{}}}],["apos;liao&apo",{"_index":1295,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["apos;list&apo",{"_index":1699,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["apos;load&apo",{"_index":1706,"title":{},"body":{"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["apos;local&apo",{"_index":1997,"title":{},"body":{"this.html#簡易呼叫":{}}}],["apos;march&apo",{"_index":2319,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["apos;max",{"_index":2966,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["apos;meal&apo",{"_index":2735,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["apos;mi",{"_index":1250,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;mom&apo",{"_index":1285,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["apos;mon&apo",{"_index":1246,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;money&apo",{"_index":1257,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;movie&apo",{"_index":2486,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;msg&apo",{"_index":3172,"title":{},"body":{"operators/precedence.html#運算子優先序":{}}}],["apos;music&apo",{"_index":2492,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;myname&apo",{"_index":1276,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["apos;name&apo",{"_index":1254,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;no",{"_index":3021,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["apos;object&apo",{"_index":543,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["apos;order&apo",{"_index":2750,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["apos;others&apo",{"_index":1248,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["apos;p&apo",{"_index":1549,"title":{},"body":{"core.html#箭頭函數":{},"performance.html#DOM-查詢做緩存":{}}}],["apos;pragma&apo",{"_index":3020,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["apos;reduce&apo",{"_index":354,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["apos;save&apo",{"_index":1494,"title":{},"body":{"core.html#屬性特徵":{}}}],["apos;second&apo",{"_index":1532,"title":{},"body":{"core.html#const":{}}}],["apos;select_title&apo",{"_index":2328,"title":{},"body":{"array/array_insert.html#example":{}}}],["apos;settimeout&apo",{"_index":295,"title":{},"body":{"asynchronous.html#異步":{}}}],["apos;small&apo",{"_index":1465,"title":{},"body":{"core.html#繼承":{}}}],["apos;someon",{"_index":1126,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["apos;someone&apo",{"_index":1286,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["apos;status=1&amp;type=1&apo",{"_index":3239,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;status=1&amp;type=2&apo",{"_index":3240,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;status=2&amp;type=1&apo",{"_index":3241,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;status=2&amp;type=2&apo",{"_index":3242,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;str&apo",{"_index":1301,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{}}}],["apos;stranger&apo",{"_index":1288,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["apos;text&apo",{"_index":1717,"title":{},"body":{"performance.html#事件節流":{}}}],["apos;th",{"_index":2484,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["apos;timestampiso&apo",{"_index":2623,"title":{},"body":{"array/map.html#map":{}}}],["apos;trifle&apo",{"_index":2730,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["apos;truthy&apo",{"_index":1226,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["apos;undefined&apo",{"_index":558,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["apos;us",{"_index":1426,"title":{},"body":{"core.html#this":{},"core.html#屬性特徵":{},"this.html#簡易呼叫":{}}}],["apos;value&apo",{"_index":2624,"title":{},"body":{"array/map.html#map":{}}}],["apos;vip&#x7528;&#x6236;&#x5728;&#x9032;&#x884c;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;&#x8d08;&#x9001;800&#x7a4d;&#x5206;&apo",{"_index":3235,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;vip&#x7528;&#x6236;&#x5728;&#x9810;&#x552e;&#x4e2d;&#x53c3;&#x8207;&#x6d3b;&#x52d5;&#xff0c;&#x8d08;&#x9001;1000&#x7a4d;&#x5206;&apo",{"_index":3233,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["apos;watch&apo",{"_index":1986,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["apos;wating...&apo",{"_index":2326,"title":{},"body":{"array/array_insert.html#fill":{}}}],["apos;wating...&apos;,&apos;wating...&apo",{"_index":2325,"title":{},"body":{"array/array_insert.html#fill":{}}}],["apos;welsh",{"_index":1459,"title":{},"body":{"core.html#繼承":{}}}],["app",{"_index":1031,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"F2E/GraphQL.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["app._data.obj",{"_index":1042,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["app.listen",{"_index":2922,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["app.obj",{"_index":1041,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["app.use(express.static((__dirnam",{"_index":2920,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["appli",{"_index":916,"title":{"this.html#bind-apply-call":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"global/function.html#cab-call-apply-vs-bind":{}},"body":{"core.html":{},"core.html#this":{},"this.html":{},"this.html#bind-apply-call":{},"global/function.html":{},"global/function.html#call、apply、bind":{},"global/function.html#cab-call-apply-vs-bind":{}}}],["apppli",{"_index":926,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["app一樣，百貨公司的餐飲店家們開發出一款點餐app",{"_index":2093,"title":{},"body":{"F2E/GraphQL.html":{}}}],["april",{"_index":2280,"title":{},"body":{"array/array_insert.html":{}}}],["arg",{"_index":1050,"title":{},"body":{"core.html":{},"core.html#const":{},"core.html#箭頭函數":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["arg1",{"_index":1947,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["arg2",{"_index":1948,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["argument",{"_index":499,"title":{},"body":{"copy.html":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#箭頭函數":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"glossary/hoisting.html":{}}}],["arguments&apo",{"_index":545,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["arguments.foreach",{"_index":890,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["ari",{"_index":52,"title":{},"body":{"ajax.html":{}}}],["arr",{"_index":900,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"this.html":{},"this.html#bind-apply-call":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/object_to_array.html":{},"array/filter.html":{},"array/map.html":{},"array/map.html#map":{},"object/create.html":{},"object/object​_keys.html":{}}}],["arr.concat",{"_index":2270,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{}}}],["arr.everi",{"_index":2432,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#every":{}}}],["arr.filt",{"_index":2407,"title":{},"body":{"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#filter":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/filter.html":{}}}],["arr.find",{"_index":2424,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#find":{}}}],["arr.foreach",{"_index":1939,"title":{},"body":{"this.html":{},"this.html#Callback":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["arr.lastindexof(item",{"_index":2402,"title":{},"body":{"array/array_merge.html":{}}}],["arr.map",{"_index":2415,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#map":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{}}}],["arr.push",{"_index":901,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{}}}],["arr.reduc",{"_index":2444,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["arr.som",{"_index":2436,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#some":{}}}],["arr.sort",{"_index":2429,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#sort":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["arr.splice(index",{"_index":2403,"title":{},"body":{"array/array_merge.html":{}}}],["arr.unshift",{"_index":2273,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列頭部":{}}}],["arr1",{"_index":2467,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["arr2",{"_index":2406,"title":{},"body":{"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#sort":{},"array/map.html":{},"array/map.html#map":{}}}],["arr[arr.length",{"_index":2267,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{}}}],["array",{"_index":337,"title":{"array/array_method.html":{},"array/array_insert.html":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#Array":{},"array/splice.html":{},"array/object_to_array.html":{},"array/filter.html":{},"cases/arr.html":{},"array/fill.html":{}},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"num.html":{},"num.html#補數字":{},"this.html":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/object_to_array.html":{},"cases/arr.html":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"global/function.html":{},"global/function.html#call、apply、bind":{},"statements/for.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["array&#xff0c;&#x5176;&#x4e2d",{"_index":3133,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["array.from",{"_index":1074,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["array.includes(item",{"_index":2512,"title":{},"body":{"array/good_part.html":{}}}],["array.indexof(item",{"_index":2513,"title":{},"body":{"array/good_part.html":{}}}],["array.join",{"_index":2767,"title":{},"body":{"cases/str.html":{},"cases/str.html#url":{}}}],["array.prototype.concat",{"_index":2269,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_merge.html":{}}}],["array.prototype.everi",{"_index":2430,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#every":{}}}],["array.prototype.fil",{"_index":2287,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["array.prototype.filt",{"_index":2419,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#filter":{}}}],["array.prototype.find",{"_index":2421,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#find":{}}}],["array.prototype.foreach",{"_index":2410,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#forEach":{}}}],["array.prototype.map",{"_index":2413,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#map":{},"array/map.html":{},"array/map.html#map":{}}}],["array.prototype.push",{"_index":2268,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{}}}],["array.prototype.reduc",{"_index":2437,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["array.prototype.som",{"_index":2434,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#some":{}}}],["array.prototype.sort",{"_index":2427,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#sort":{}}}],["array.prototype.splic",{"_index":2274,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["array.prototype.unshift",{"_index":2272,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列頭部":{}}}],["array.reduc",{"_index":340,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#箭頭函數":{}}}],["array1",{"_index":2288,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{}}}],["array1.map",{"_index":2589,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["arrfilt",{"_index":2456,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["arrfn",{"_index":1064,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["arrfnr",{"_index":1066,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["arrfunc",{"_index":899,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["arrow",{"_index":335,"title":{"arrowFunction.html#Arrow-Function":{}},"body":{"arrowFunction.html":{},"core.html":{},"core.html#ES6-Airbnb":{},"this.html":{},"this.html#bind-apply-call":{},"global/function.html":{},"global/function.html#cab-call-apply-vs-bind":{},"global/function.html#bind":{}}}],["arrsortpric",{"_index":2460,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["articl",{"_index":191,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["article/2",{"_index":193,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["articles/2",{"_index":192,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["ary[i].split",{"_index":60,"title":{},"body":{"ajax.html":{}}}],["asi",{"_index":665,"title":{"core.html#ASI-自動分號插入":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["assign",{"_index":513,"title":{"object/assign.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}},"body":{"copy.html":{},"copy.html#Object-assign":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#屬性特徵":{},"array/fill.html":{},"object/assign.html":{},"object/assign.html#有相同屬性時合併物件區段":{},"operators/destructuring_assignment.html":{}}}],["assign(o1",{"_index":2885,"title":{},"body":{"object/assign.html":{},"object/assign.html#合併物件":{}}}],["ast(abstract",{"_index":639,"title":{},"body":{"core.html":{}}}],["async",{"_index":374,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{},"cases/delay.html":{},"statements/AsyncFunction.html":{}}}],["async/await",{"_index":2859,"title":{},"body":{"global/promise.html":{}}}],["asyncfunct",{"_index":3192,"title":{"statements/AsyncFunction.html":{}},"body":{"statements/AsyncFunction.html":{}}}],["asynchron",{"_index":272,"title":{"asynchronous.html":{}},"body":{}}],["asyncrout",{"_index":509,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["authors/12/categories/2",{"_index":194,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["authors/12?categories=2",{"_index":195,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["automat",{"_index":666,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["averag",{"_index":1073,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["await",{"_index":2649,"title":{},"body":{"cases/delay.html":{},"statements/AsyncFunction.html":{}}}],["azqd8pdvbl5uk5mfq_ejlxmkag",{"_index":1978,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["a下的網頁，然後可能瀏覽了不論那個域名下的頁面，最後在域名b下的網頁完成註冊的情況。廣告可以在域名a下的網頁被跟蹤到，而註冊可以在域名b",{"_index":2146,"title":{},"body":{"F2E/cookie.html":{}}}],["a網站底下若有需要去access",{"_index":97,"title":{},"body":{"ajax.html":{}}}],["a網站是b",{"_index":106,"title":{},"body":{"ajax.html":{}}}],["b",{"_index":409,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"scope.html":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#簡易呼叫":{},"F2E/token.html":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#sort":{},"array/array_methods.html#reduce":{},"cases/if.html":{},"array/map.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"global/promise.html":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{}}}],["b&#x53d6;&#x5f97;&#x7684;&#x662f;a&#x7684;&#x53c3;&#x8003;&#x4f4d;&#x5740",{"_index":1222,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["b,c",{"_index":418,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["b.a",{"_index":685,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["b.a&#x6c92;&#x6709;&#x95dc;&#x9023;&#x6027",{"_index":1199,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["b.length",{"_index":2445,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["b.n",{"_index":3167,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["b.person",{"_index":879,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["b.price",{"_index":2461,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["b.x",{"_index":3169,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["b1/b",{"_index":2416,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#map":{},"array/map.html":{},"array/map.html#map":{}}}],["b2/b",{"_index":2417,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#map":{},"array/map.html":{},"array/map.html#map":{}}}],["b3/b",{"_index":2418,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#map":{},"array/map.html":{},"array/map.html#map":{}}}],["b[b.length",{"_index":837,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["babelj",{"_index":3194,"title":{},"body":{"statements/AsyncFunction.html":{}}}],["bad",{"_index":2785,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["bar",{"_index":1829,"title":{},"body":{"scope.html":{},"this.html":{},"this.html#簡易呼叫":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"operators/function.html":{}}}],["bark",{"_index":952,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["barking&apo",{"_index":1456,"title":{},"body":{"core.html#繼承":{}}}],["base",{"_index":1929,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["bcde",{"_index":955,"title":{},"body":{"core.html":{}}}],["be",{"_index":997,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["beauti",{"_index":645,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["befor",{"_index":3186,"title":{},"body":{"statements/let.html":{},"statements/let.html#let":{}}}],["behaviour",{"_index":3284,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["best",{"_index":215,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["between",{"_index":1855,"title":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}},"body":{"operators.html":{}}}],["bfunc",{"_index":1869,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["bibi",{"_index":948,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["bibi.__proto__",{"_index":954,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["bind",{"_index":915,"title":{"this.html#bind-apply-call":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"global/function.html#cab-call-apply-vs-bind":{},"global/function.html#bind":{}},"body":{"core.html":{},"core.html#this":{},"this.html":{},"this.html#bind-apply-call":{},"global/function.html":{},"global/function.html#call、apply、bind":{},"global/function.html#cab-call-apply-vs-bind":{},"global/function.html#bind":{}}}],["bind&#x7684;&#x61c9;&#x7528;&#x5834;&#x666f",{"_index":2033,"title":{},"body":{"this.html#bind-apply-call":{}}}],["bind(thi",{"_index":2789,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["binding&#x5927;&#x6cd5",{"_index":2824,"title":{},"body":{"global/function.html#bind":{}}}],["birthday",{"_index":2862,"title":{},"body":{"global/date.html":{}}}],["blog.xuite.net",{"_index":71,"title":{},"body":{"ajax.html":{}}}],["blog.xuite.net:80",{"_index":73,"title":{},"body":{"ajax.html":{}}}],["bodi",{"_index":470,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{}}}],["boo",{"_index":2782,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["boo.laterhello",{"_index":2784,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["boo.sayhello",{"_index":2783,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["boolean",{"_index":727,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["boolean(fals",{"_index":724,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["boolean{fals",{"_index":725,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["bootstrap",{"_index":597,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["bowl",{"_index":2670,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["browser",{"_index":629,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["btn",{"_index":942,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["bug",{"_index":487,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["busi",{"_index":2094,"title":{},"body":{"F2E/GraphQL.html":{}}}],["button",{"_index":939,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["b取得的是a",{"_index":718,"title":{},"body":{"core.html":{}}}],["b網站就可以在http",{"_index":107,"title":{},"body":{"ajax.html":{}}}],["b網站的http",{"_index":99,"title":{},"body":{"ajax.html":{}}}],["b網站的resourc",{"_index":98,"title":{},"body":{"ajax.html":{}}}],["b網站的web",{"_index":104,"title":{},"body":{"ajax.html":{}}}],["c",{"_index":165,"title":{},"body":{"RegExp.html":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#屬性特徵":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"this.html":{},"this.html#簡易呼叫":{},"array/array_merge.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"global/promise.html":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"glossary/hoisting.html":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["c(2)時會拋出typeerror",{"_index":2899,"title":{},"body":{"glossary/hoisting.html":{}}}],["cab",{"_index":2777,"title":{"global/function.html#cab-call-apply-vs-bind":{}},"body":{"global/function.html":{}}}],["cach",{"_index":2099,"title":{},"body":{"F2E/GraphQL.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#References":{}}}],["cache&apo",{"_index":3022,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["cachelist",{"_index":2515,"title":{},"body":{"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{}}}],["cachelist.push",{"_index":2518,"title":{},"body":{"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{}}}],["calcul",{"_index":336,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{}}}],["calculate.sum",{"_index":349,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{}}}],["call",{"_index":652,"title":{"this.html#bind-apply-call":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"global/function.html#cab-call-apply-vs-bind":{}},"body":{"core.html":{},"core.html#this":{},"this.html":{},"this.html#bind-apply-call":{},"global/function.html":{},"global/function.html#cab-call-apply-vs-bind":{},"object/create.html":{}}}],["call&#x3001;apply&#x3001;bind",{"_index":2790,"title":{"global/function.html#call、apply、bind":{}},"body":{"global/function.html#References":{}}}],["call&#x7684;thi",{"_index":1405,"title":{},"body":{"core.html#this":{}}}],["call&apo",{"_index":1127,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["callarg",{"_index":888,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["callback",{"_index":883,"title":{"this.html#Callback":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"this.html":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"global/promise.html":{}}}],["callback(ansarr",{"_index":2850,"title":{},"body":{"global/promise.html":{}}}],["callback(money",{"_index":921,"title":{},"body":{"core.html":{},"core.html#this":{},"this.html":{},"this.html#Callback":{}}}],["callfamili",{"_index":761,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["callfn",{"_index":796,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#this":{}}}],["callnam",{"_index":918,"title":{},"body":{"core.html":{},"core.html#this":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#立即函式：":{},"this.html#bind-apply-call":{}}}],["callname.cal",{"_index":1951,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["callname.call(obj",{"_index":1952,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["callnamearrow",{"_index":1959,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["callsomefn",{"_index":868,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["callsomeon",{"_index":1827,"title":{},"body":{"scope.html":{},"this.html":{},"this.html#立即函式：":{},"variable.html":{},"variable.html#Hoisting":{}}}],["call、apply、bind",{"_index":2772,"title":{},"body":{"global/function.html":{}}}],["call的thi",{"_index":919,"title":{},"body":{"core.html":{}}}],["camelcasetyper",{"_index":3054,"title":{},"body":{"object/object​_keys.html":{}}}],["case",{"_index":486,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["cash",{"_index":751,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["cat",{"_index":973,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["cat'",{"_index":2895,"title":{},"body":{"glossary/hoisting.html":{}}}],["catalog",{"_index":2450,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["catalog:&apos;music&apo",{"_index":2494,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["catalog:'mus",{"_index":2459,"title":{},"body":{"array/array_methods.html":{}}}],["catch",{"_index":2334,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"cases/delay.html":{},"global/promise.html":{}}}],["catch(onreject",{"_index":2335,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{}}}],["catch(reject",{"_index":2691,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["catnam",{"_index":2894,"title":{},"body":{"glossary/hoisting.html":{}}}],["cbfn",{"_index":884,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["cdn",{"_index":88,"title":{},"body":{"ajax.html":{},"performance.html":{},"performance.html#優化原則和方向":{}}}],["ceil(numb",{"_index":1574,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["cfunc",{"_index":1870,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["ch.md#%e4%b8%ba%e4%bb%80%e4%b9%88",{"_index":1771,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["chang",{"_index":781,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"performance.html":{},"performance.html#事件節流":{}}}],["char",{"_index":3321,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["check",{"_index":1057,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["checkscop",{"_index":1826,"title":{},"body":{"scope.html":{}}}],["chen",{"_index":807,"title":{},"body":{"core.html":{},"glossary/hoisting.html":{}}}],["chihuahua",{"_index":988,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["chihuahua.bark",{"_index":990,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["chihuahua.famili",{"_index":992,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["chihuahua.mov",{"_index":991,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["chrome",{"_index":912,"title":{},"body":{"core.html":{},"core.html#this":{},"http/caching.html":{},"http/caching.html#強緩存":{},"statements/block.html":{}}}],["clair",{"_index":788,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["class",{"_index":2675,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#bind":{}}}],["class1",{"_index":2074,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["clean",{"_index":1604,"title":{},"body":{"performance.html":{}}}],["clear",{"_index":3296,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["cleartimeout(timeoutid",{"_index":1642,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["cli",{"_index":614,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["click",{"_index":572,"title":{},"body":{"event.html":{},"core.html":{}}}],["client端與server端可以作一種對話，並將兩端建立關連，保持伺服器與client可以持續的與serv",{"_index":2152,"title":{},"body":{"F2E/cookie.html":{}}}],["clone",{"_index":617,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["close",{"_index":2346,"title":{},"body":{"api/promise.html":{},"api/promise.html#鏈接":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["closur",{"_index":388,"title":{"closures.html":{},"core.html#閉包-Closure":{},"this.html#Closure":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"this.html":{}}}],["code",{"_index":32,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#ES6-Airbnb":{},"performance.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["coin",{"_index":863,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["color",{"_index":946,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["colour",{"_index":2661,"title":{},"body":{"function/factory​_factory.html":{}}}],["com.vu",{"_index":444,"title":{},"body":{"export.html":{},"export.html#export":{}}}],["common/js/d",{"_index":445,"title":{},"body":{"export.html":{}}}],["commonwealth",{"_index":171,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["compani",{"_index":783,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["comparison",{"_index":1862,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["components/control",{"_index":447,"title":{},"body":{"export.html":{}}}],["concat",{"_index":2396,"title":{},"body":{"array/array_merge.html":{}}}],["concat(arr",{"_index":2285,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#拼接兩個陣列":{}}}],["conditiona",{"_index":2586,"title":{},"body":{"cases/if.html":{}}}],["conditionb",{"_index":2587,"title":{},"body":{"cases/if.html":{}}}],["config",{"_index":3273,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["configur",{"_index":1000,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["consol",{"_index":62,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"RegExp.html#match":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#補數字":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"scope.html":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"array/array_method.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_insert.html#fill":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/filter.html":{},"cases/arr.html":{},"cases/if.html":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/replace.html":{},"cases/delay.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/str.html":{},"cases/str.html#url":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"glossary/hoisting.html":{},"object/create.html":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"statements/let.html":{},"statements/let.html#let":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"string/split.html":{},"string/split.html#split":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["console.dir(object",{"_index":944,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["console.dir(thi",{"_index":943,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["console.log",{"_index":893,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["console.log(&apos;3&apo",{"_index":2041,"title":{},"body":{"this.html#bind-apply-call":{}}}],["console.log(&apos;6&apo",{"_index":2046,"title":{},"body":{"this.html#bind-apply-call":{}}}],["console.log(&apos;i&apo",{"_index":1385,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["console.log('3",{"_index":1958,"title":{},"body":{"this.html":{}}}],["console.log('6",{"_index":1960,"title":{},"body":{"this.html":{}}}],["console.log('i",{"_index":903,"title":{},"body":{"core.html":{}}}],["console.log(1++\"2\"+\"2",{"_index":1881,"title":{},"body":{"operators.html":{}}}],["console.log(1++2+2",{"_index":1909,"title":{},"body":{"operators.html#Adding-Strings-and-Numbers":{}}}],["console.log(11",{"_index":681,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["console.log(123",{"_index":678,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["console.log(32",{"_index":680,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["console.log(321",{"_index":679,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["console.log(a",{"_index":660,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"glossary/hoisting.html":{}}}],["console.log(ari",{"_index":56,"title":{},"body":{"ajax.html":{}}}],["console.log(c",{"_index":2897,"title":{},"body":{"glossary/hoisting.html":{}}}],["console.log(famili",{"_index":816,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["console.log(i,v",{"_index":2593,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["console.log(j)的時候顯示的就是每次循環時的i",{"_index":286,"title":{},"body":{"asynchronous.html":{}}}],["console.log(new",{"_index":723,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["console.log(obj",{"_index":3072,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["console.log(thi",{"_index":941,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["const",{"_index":140,"title":{"core.html#const":{}},"body":{"RegExp.html":{},"RegExp.html#match":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#屬性特徵":{},"core.html#const":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"math.html":{},"math.html#Math":{},"this.html":{},"this.html#bind-apply-call":{},"array/array_method.html":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#fill":{},"array/array_insert.html#example":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/object_to_array.html":{},"array/filter.html":{},"cases/arr.html":{},"cases/if.html":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"cases/str.html":{},"cases/str.html#url":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["constructor",{"_index":987,"title":{},"body":{"core.html":{},"core.html#繼承":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#bind":{},"object/create.html":{}}}],["contain",{"_index":598,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["content",{"_index":604,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["control",{"_index":109,"title":{},"body":{"ajax.html":{},"export.html":{},"export.html#export":{},"http/caching.html":{},"http/caching.html#強緩存":{}}}],["control&#x3002",{"_index":2980,"title":{},"body":{"http/caching.html#強緩存":{}}}],["control&apo",{"_index":2965,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["control.j",{"_index":442,"title":{},"body":{"export.html":{},"export.html#export":{}}}],["convers",{"_index":672,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["cooki",{"_index":2127,"title":{"F2E/cookie.html":{}},"body":{"F2E/cookie.html":{},"F2E/cookie.html#什麼是-Cookie？":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x3002",{"_index":2197,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x5982;&#x679c;&#x60a8;&#x5728",{"_index":2185,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x5982;&#x679c;&#x60a8;&#x9020;&#x8a2a",{"_index":2193,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x53ef;&#x4ee5;&#x7528;&#x4f86;&#x63d0;&#x5347;&#x7528;&#x6236;&#x9ad4;&#x9a57;&#xff0c;&#x6bd4;&#x5982;&#x7db2;&#x7ad9;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;cookie&#x4f86;&#x8a18;&#x9304;&#x7528;&#x6236;&#x7684;&#x767b;&#x9304;&#x72c0;&#x614b;&#xff0c;&#x7528;&#x6236;&#x53ea;&#x8981;&#x767b;&#x9304;&#x4e00;&#x6b21;&#x5c31;&#x53ef;&#x4ee5;&#x4e0d;&#x7528;&#x767b;&#x9304;&#x4e86;&#xff0c;&#x8cfc;&#x7269;&#x7db2;&#x7ad9;&#x901a;&#x904e;cookie&#x4f86;&#x4fdd;&#x5b58;&#x8cfc;&#x7269;&#x8eca;&#x4e2d;&#x7684;&#x5546;&#x54c1;&#x7b49;&#x3002;&#x540c;&#x6642;&#x5f88;&#x591a;&#x7684;&#x7db2;&#x7ad9;&#x5206;&#x6790;&#x90fd;&#x662f;&#x4f9d;&#x9760;cookie&#x4f86;&#x5b8c;&#x6210;&#x7684;&#x3002",{"_index":2182,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["cookie&#x5c31;&#x50cf",{"_index":2225,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x662f;&#x4e00;&#x5f35;&#x9818;&#x9910;&#x7684;&#x865f;&#x78bc;&#x724c;&#xff0c;&#x800c;session&#x53ef;&#x4ee5;&#x662f;&#x4e00;&#x5f35;&#x6578;&#x4f4d;&#x6703;&#x54e1;&#x5361",{"_index":2234,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#x662f;&#x5fc5;&#x9808;&#x7684;&#xff0c;&#x96e2;&#x958b;cookie&#x6211;&#x5011;&#x4ec0;&#x9ebc;&#x4e5f;&#x5206;&#x6790;&#x4e0d;&#x4e86;&#x3002",{"_index":2198,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookie&#xff0c",{"_index":2179,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["cookie&#xff1a",{"_index":2176,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["cookie&#xff1f",{"_index":2173,"title":{"F2E/cookie.html#什麼是-Cookie？":{}},"body":{}}],["cookies&#xff08;third",{"_index":2222,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookies&#xff09;&#x6703;&#x6d29;&#x6f0f;&#x7db2;&#x9801;&#x700f;&#x89bd;&#x7684;&#x96b1;&#x79c1",{"_index":2223,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["cookies（third",{"_index":2149,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie可以用來提升用戶體驗，比如網站可以使用cookie來記錄用戶的登錄狀態，用戶只要登錄一次就可以不用登錄了，購物網站通過cookie來保存購物車中的商品等。同時很多的網站分析都是依靠cooki",{"_index":2131,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie和session得結合，到底還會不會有被竄改的問題，這個時候就要靠”簽章”來驗證資料的真實性，在我使用cooki",{"_index":2165,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie和第三方cooki",{"_index":2132,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie是一張領餐的號碼牌，而sess",{"_index":2153,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie是必須的，離開cooki",{"_index":2137,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie與session彼此之間是可以互換的(指的是你可以把資料存放在session或是cookie，並不是指session可以被放在client端當cookie使用)。但是cookie在最單純的情況裡，是有安全性的問題(資料在client端)。所以考量到這點，大部分都會選擇session。但是正如cookie是一個外加的功能，session也不屬於http",{"_index":2167,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie，會為域名a建立一個cookie，為域名b再建立一個cooki",{"_index":2147,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie，那這個cooki",{"_index":2144,"title":{},"body":{"F2E/cookie.html":{}}}],["cookie，那麼無論多少個域，都只有一個cookie，一個屬於第三方域的cookie，網站下所有域都能共享這個cooki",{"_index":2148,"title":{},"body":{"F2E/cookie.html":{}}}],["copi",{"_index":450,"title":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"object/assign.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["cor",{"_index":95,"title":{},"body":{"ajax.html":{}}}],["corgi",{"_index":974,"title":{},"body":{"core.html":{},"core.html#繼承":{},"global/function.html":{},"global/function.html#bind":{}}}],["corgi&apo",{"_index":1460,"title":{},"body":{"core.html#繼承":{}}}],["corgi.nam",{"_index":976,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["cors是一個w3c標準，全稱是”跨域資源共享”（cross",{"_index":89,"title":{},"body":{"ajax.html":{}}}],["cors需要瀏覽器和服務器同時支持。實現cors通信的關鍵是服務器。只要服務器實現了cor",{"_index":94,"title":{},"body":{"ajax.html":{}}}],["count",{"_index":3205,"title":{},"body":{"string/split.html":{},"string/split.html#split":{}}}],["cours",{"_index":2689,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["cpu",{"_index":1605,"title":{},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["cream",{"_index":2679,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["creat",{"_index":1072,"title":{"swagger/to-html.html#Create-a-pet":{}},"body":{"core.html":{},"core.html#箭頭函數":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"object/create.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["create(animal.prototyp",{"_index":985,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["create(dog",{"_index":975,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["create(shape.prototyp",{"_index":3038,"title":{},"body":{"object/create.html":{}}}],["createalmond",{"_index":2684,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createcream",{"_index":2683,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createcustard",{"_index":2682,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createdessert",{"_index":2669,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createdocumentfrag",{"_index":1625,"title":{"performance.html#合併-DOM-插入-createDocumentFragment":{}},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["createel",{"_index":1631,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["createicecream",{"_index":2665,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createjelli",{"_index":2659,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createm",{"_index":2693,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createmeal(json",{"_index":2692,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createord",{"_index":2707,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["createtrifl",{"_index":2681,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["crud",{"_index":185,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{}}}],["css",{"_index":1607,"title":{},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["curl",{"_index":3256,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["currentvalu",{"_index":1940,"title":{},"body":{"this.html":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["custard",{"_index":2678,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["c已經被賦值為1",{"_index":2898,"title":{},"body":{"glossary/hoisting.html":{}}}],["c為o3.c的值，最後一個出現的屬性c",{"_index":2887,"title":{},"body":{"object/assign.html":{}}}],["d",{"_index":156,"title":{},"body":{"RegExp.html":{},"closures.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["d.setdate(d.getd",{"_index":2876,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["d.toisostring().substr",{"_index":2870,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["dad",{"_index":758,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["dark",{"_index":2452,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["data",{"_index":120,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"export.html":{},"export.html#export":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"performance.html":{},"performance.html#懶加載":{},"array/array_insert.html":{},"array/array_insert.html#example":{},"cases/delay.html":{},"global/promise.html":{}}}],["data.id",{"_index":2308,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["data.nam",{"_index":2309,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["database&#x3001;&#x8a18;&#x61b6;&#x9ad4;&#x6216;&#x662f;&#x5229;&#x7528;&#x6a94;&#x6848;&#x4ea4;&#x63db;&#x7684;&#x65b9;&#x5f0f;&#xff0c;&#x4f86;&#x628a;&#x4f60;&#x7684;&#x9ede;&#x9910;&#x8cc7;&#x8a0a;&#x4f5c;&#x5132;&#x5b58;&#xff0c;&#x800c;&#x7576;&#x4f60;&#x53bb;&#x9818;&#x98f2;&#x6599;&#x6642;&#xff0c;&#x5e97;&#x54e1;&#x6703;&#x8f38;&#x5165;&#x4f60;&#x7684;&#x865f;&#x78bc;&#xff0c;&#x4e26;&#x5728;&#x53eb;&#x51fa;&#x4f60;&#x9ede;&#x7684;&#x5167;&#x5bb9;&#x3002;&#x4f46;&#x5982;&#x679c;&#x662f;&#x5927;&#x578b;&#x7db2;&#x7ad9;&#x4e0a;&#xff0c;&#x5982;&#x679c;&#x6709;&#x8ca0;&#x8f09;&#x5e73;&#x8861;&#x7684;&#x6a5f;&#x5236;&#xff0c;&#x4f60;&#x600e;&#x9ebc;&#x80fd;&#x78ba;&#x5b9a;&#x4f60;&#x7576;&#x521d;&#x8f38;&#x5165;&#x548c;&#x6700;&#x5f8c;&#x53d6;&#x9910;&#x7684;server&#x662f;&#x540c;&#x4e00;&#x53f0;&#x5462;&#xff0c;&#x800c;&#x9019;&#x6a23;&#x4f5c;&#x7576;&#x4f60;&#x8cc7;&#x6599;&#x91cf;&#x5927;&#x6642;&#xff0c;&#x4e5f;&#x6703;&#x6709;&#x6548;&#x80fd;&#x5f71;&#x97ff;&#x7684;&#x554f;&#x984c;&#xff0c;&#x9019;&#x6642;&#x5019;cookie&#x5c31;&#x51fa;&#x5834;&#x4e86;&#x3002",{"_index":2247,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["database、記憶體或是利用檔案交換的方式，來把你的點餐資訊作儲存，而當你去領飲料時，店員會輸入你的號碼，並在叫出你點的內容。但如果是大型網站上，如果有負載平衡的機制，你怎麼能確定你當初輸入和最後取餐的server是同一台呢，而這樣作當你資料量大時，也會有效能影響的問題，這時候cooki",{"_index":2159,"title":{},"body":{"F2E/cookie.html":{}}}],["dataopts.map",{"_index":2307,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["date",{"_index":277,"title":{"global/date.html":{}},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#this":{},"core.html#new":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"http/caching.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["date.j",{"_index":439,"title":{},"body":{"export.html":{},"export.html#export":{}}}],["date.prototype.toisostr",{"_index":2867,"title":{"global/date.html#Date-prototype-toISOString":{}},"body":{"global/date.html":{}}}],["dd",{"_index":963,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["debugg",{"_index":3084,"title":{},"body":{"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/block.html":{}}}],["decemb",{"_index":2863,"title":{},"body":{"global/date.html":{}}}],["decim",{"_index":1576,"title":{},"body":{"num.html":{},"num.html#補數字":{},"math.html":{},"math.html#Math":{}}}],["decimal.substr(decimal.indexof",{"_index":1579,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["decimal.tofixed(length",{"_index":1578,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["declar",{"_index":404,"title":{},"body":{"closures.html":{}}}],["decreas",{"_index":908,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["deep",{"_index":465,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["deepclon",{"_index":496,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["deepclone([...constantrout",{"_index":508,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["deepclone(source[key",{"_index":506,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["default",{"_index":443,"title":{},"body":{"export.html":{},"export.html#export":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["defer",{"_index":375,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{}}}],["defer/script",{"_index":373,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{}}}],["defin",{"_index":661,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"scope.html":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"variable.html":{},"variable.html#Hoisting":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/block.html":{}}}],["defind",{"_index":776,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["defineproperti",{"_index":1026,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["defineproperty(b",{"_index":683,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["defineproperty(obj",{"_index":998,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["defineproperty(wallet",{"_index":1023,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["delay",{"_index":2644,"title":{"cases/delay.html":{}},"body":{"cases/delay.html":{}}}],["deleg",{"_index":3278,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["delet",{"_index":770,"title":{"operators/delete.html#delete":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"variable.html":{},"operators/delete.html":{},"operators/delete.html#delete":{}}}],["delete&#x53ea;&#x80fd;&#x64cd;&#x4f5c;&#x5c0d;&#x8c61;&#x7684;&#x5c6c;&#x6027",{"_index":3060,"title":{},"body":{"operators/delete.html#delete":{}}}],["delete&#xff1a;&#x522a;&#x9664;&#xff08;delete&#xff09",{"_index":230,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["delete：刪除（delet",{"_index":190,"title":{},"body":{"RESTfulAPI.html":{}}}],["depend",{"_index":625,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["dequ",{"_index":3308,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["dequeu",{"_index":3291,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["design",{"_index":214,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["dessert",{"_index":2668,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["dessert&#xff08;&#x751c;&#x9ede;&#xff09;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#xff0c;&#x901a;&#x904e;&#x524d;&#x9762;&#x7684",{"_index":2713,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["dessert.appli",{"_index":2672,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["dessert.prototyp",{"_index":2674,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["destructur",{"_index":3062,"title":{"operators/destructuring_assignment.html#Destructuring-assignment":{}},"body":{"operators/destructuring_assignment.html":{}}}],["dev",{"_index":785,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["devtool",{"_index":913,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#const":{}}}],["differ",{"_index":1854,"title":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}},"body":{"operators.html":{}}}],["dir",{"_index":956,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["dir(callfn",{"_index":798,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["directori",{"_index":623,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["disk",{"_index":2902,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["div",{"_index":562,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["div1",{"_index":563,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["div1.addeventlisten",{"_index":571,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["do",{"_index":3280,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["dobyord",{"_index":2840,"title":{},"body":{"global/promise.html":{}}}],["dobyorder(task",{"_index":2854,"title":{},"body":{"global/promise.html":{}}}],["doc",{"_index":591,"title":{"index.html":{},"index.html#hexo-theme-doc-seed":{}},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{}}}],["document",{"_index":569,"title":{},"body":{"event.html":{},"event.html#代理":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{},"index.html#More-Informations":{},"core.html":{},"core.html#箭頭函數":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{}}}],["documentfrag",{"_index":1609,"title":{},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["dog",{"_index":945,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"global/function.html":{},"global/function.html#bind":{}}}],["dog.prototyp",{"_index":984,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["dog.prototype.bark",{"_index":951,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{}}}],["dog.prototype.constructor",{"_index":986,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["dom",{"_index":917,"title":{"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}},"body":{"core.html":{},"core.html#this":{},"performance.html":{},"performance.html#優化原則和方向":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["dom&#x3002",{"_index":1698,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["dom&#x4e8b;&#x4ef6;&#x8655;&#x7406;&#x5668",{"_index":1402,"title":{},"body":{"core.html#this":{}}}],["domcontentload",{"_index":1610,"title":{"performance.html#儘早執行操作-DOMContentLoaded":{}},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["done",{"_index":2343,"title":{},"body":{"api/promise.html":{},"cases/if.html":{},"cases/delay.html":{}}}],["download",{"_index":3247,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["dummi",{"_index":603,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["e",{"_index":164,"title":{},"body":{"RegExp.html":{},"closures.html":{},"event.html":{},"event.html#代理":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"global/promise.html":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["e.target",{"_index":574,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["easycard",{"_index":1928,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["ecm",{"_index":162,"title":{},"body":{"RegExp.html":{}}}],["ecmascript",{"_index":369,"title":{"es6.html":{}},"body":{"es6.html":{}}}],["edg",{"_index":485,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"statements/block.html":{}}}],["el",{"_index":1032,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{}}}],["ele.addeventlisten",{"_index":1063,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["element",{"_index":477,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["element.pric",{"_index":2464,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["email",{"_index":147,"title":{},"body":{"RegExp.html":{}}}],["empti",{"_index":828,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["emptyobject",{"_index":1030,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["endpoint",{"_index":2100,"title":{},"body":{"F2E/GraphQL.html":{}}}],["enforc",{"_index":1059,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["enqueu",{"_index":3289,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["enumer",{"_index":999,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["epirus\\src\\utils\\api\\queries.t",{"_index":2596,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["equal",{"_index":720,"title":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["erdong",{"_index":2900,"title":{},"body":{"glossary/hoisting.html":{}}}],["error",{"_index":498,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#this":{},"scope.html":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"variable.html":{},"variable.html#Hoisting":{},"cases/delay.html":{},"global/promise.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["es5",{"_index":1036,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"statements/for.html":{}}}],["es5中新增的一個方法，可以改變函數內部的thi",{"_index":1953,"title":{},"body":{"this.html":{}}}],["es6",{"_index":812,"title":{"core.html#ES6-Airbnb":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#ES6-Airbnb":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"this.html":{},"this.html#bind-apply-call":{},"array/good_part.html":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["eslint",{"_index":1055,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["esprima.org",{"_index":642,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["etag",{"_index":2914,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["etag/if",{"_index":2927,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["event",{"_index":560,"title":{"event.html":{}},"body":{"global/promise.html":{}}}],["ex",{"_index":67,"title":{},"body":{"ajax.html":{},"object/create.html":{}}}],["exampl",{"_index":2304,"title":{"array/array_insert.html#example":{},"array/array_methods.html#examples":{}},"body":{"array/array_insert.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"global/promise.html":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["example&#x201d",{"_index":3360,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["examplevalu",{"_index":2567,"title":{},"body":{"cases/arr.html":{}}}],["examplevalues.reduc",{"_index":2570,"title":{},"body":{"cases/arr.html":{}}}],["exec",{"_index":864,"title":{},"body":{"core.html":{}}}],["expect",{"_index":2291,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"global/promise.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["expir",{"_index":2904,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["explicit",{"_index":671,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#屬性特徵":{}}}],["exponenti",{"_index":1733,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["exponential&apo",{"_index":1788,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["export",{"_index":139,"title":{"export.html#export":{}},"body":{"RegExp.html":{},"export.html":{},"export.html#export":{},"num.html":{},"num.html#取值":{}}}],["express",{"_index":283,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["expression&#xff09;&#x975e;&#x5e38;&#x985e;&#x4f3c;&#x65bc;&#x51fd;&#x6578;&#x8072;&#x660e;&#xff08;funct",{"_index":3088,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["expression&#xff0c;&#x7e2e;&#x5beb;&#xff1a;iife&#xff09",{"_index":1356,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["expressionfn",{"_index":855,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["expression）非常類似於函數聲明（funct",{"_index":3080,"title":{},"body":{"operators/function.html":{}}}],["expression，縮寫：iif",{"_index":871,"title":{},"body":{"core.html":{}}}],["extend",{"_index":811,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"object/create.html":{}}}],["f",{"_index":3097,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#typeof":{}}}],["f1",{"_index":422,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f1(b,c",{"_index":423,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f1,f2",{"_index":426,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f2",{"_index":429,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f2(b",{"_index":427,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f3",{"_index":430,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["f3(b,c",{"_index":428,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["factor",{"_index":1567,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["factori",{"_index":2658,"title":{"function/factory​_factory.html":{}},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["factory(...arg",{"_index":2705,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["fail",{"_index":767,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#箭頭函數":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"cases/delay.html":{}}}],["fals",{"_index":19,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#屬性特徵":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"this.html":{},"this.html#簡易呼叫":{},"cases/if.html":{},"cases/replace.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"http/caching.html":{},"http/caching.html#強緩存":{},"operators/typeof.html":{},"operators/typeof.html#null":{},"statements/block.html":{}}}],["falseyvalu",{"_index":2569,"title":{},"body":{"cases/arr.html":{}}}],["falsi",{"_index":728,"title":{},"body":{"core.html":{}}}],["famili",{"_index":754,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#this":{},"core.html#繼承":{}}}],["family&apo",{"_index":1251,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["family.callfamili",{"_index":768,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["family.callnam",{"_index":925,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["family.json",{"_index":850,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["family.oth",{"_index":771,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["family[familymethod[i",{"_index":775,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["family[key",{"_index":804,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["familymethod",{"_index":772,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["familymethod.length;i",{"_index":773,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["father",{"_index":799,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["featur",{"_index":608,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["feb",{"_index":2284,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["fetch(menuurl",{"_index":2687,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["fetchdata3",{"_index":2607,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["file",{"_index":601,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["fill",{"_index":2286,"title":{"array/array_insert.html#fill":{},"array/fill.html":{}},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/fill.html":{}}}],["filter",{"_index":2405,"title":{"array/array_methods.html#filter":{},"array/filter.html":{}},"body":{"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#Array":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["final",{"_index":2342,"title":{},"body":{"api/promise.html":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{}}}],["find",{"_index":779,"title":{"array/array_methods.html#find":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#ES6-Airbnb":{},"array/array_methods.html":{}}}],["firefox",{"_index":3199,"title":{},"body":{"statements/block.html":{}}}],["first",{"_index":612,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{},"core.html":{},"core.html#const":{}}}],["firstregexp",{"_index":148,"title":{},"body":{"RegExp.html":{}}}],["flavour",{"_index":2666,"title":{},"body":{"function/factory​_factory.html":{}}}],["floor(numb",{"_index":1572,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["fmt",{"_index":441,"title":{},"body":{"export.html":{},"export.html#export":{}}}],["fn",{"_index":403,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#this":{},"scope.html":{},"this.html":{},"this.html#簡易呼叫":{},"variable.html":{},"variable.html#Hoisting":{},"statements/AsyncFunction.html":{}}}],["fn.apply(team",{"_index":930,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["fn.bind(team",{"_index":932,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["fn.call",{"_index":933,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["fn.call(team",{"_index":929,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["fn1",{"_index":1822,"title":{},"body":{"scope.html":{}}}],["fn2",{"_index":931,"title":{},"body":{"core.html":{},"core.html#this":{},"scope.html":{}}}],["fna",{"_index":872,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"this.html":{},"this.html#簡易呼叫":{}}}],["fna.bind",{"_index":1921,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["fnb",{"_index":1920,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["foo",{"_index":664,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"scope.html":{},"this.html":{},"this.html#簡易呼叫":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"global/promise.html":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{},"statements/block.html":{}}}],["foo&#xff0c;&#x53ef;&#x770b;&#x5230",{"_index":3154,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["foo.bar",{"_index":1925,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["for&#x2026;in",{"_index":3131,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["for&#x2026;of",{"_index":3130,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["for&#x2026;of&#x8207;for&#x2026;in&#x7684;&#x5dee;&#x5225",{"_index":3129,"title":{"statements/for.html#for…of與for…in的差別":{}},"body":{}}],["for...in",{"_index":3124,"title":{},"body":{"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["for...of",{"_index":3125,"title":{},"body":{"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["foreach",{"_index":832,"title":{"array/array_methods.html#forEach":{}},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["format",{"_index":2872,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["formatdata",{"_index":440,"title":{},"body":{"export.html":{},"export.html#export":{}}}],["forward",{"_index":2123,"title":{},"body":{"F2E/header.html":{}}}],["for…in",{"_index":3123,"title":{},"body":{"statements/for.html":{}}}],["for…of",{"_index":3122,"title":{},"body":{"statements/for.html":{}}}],["for…of與for…in",{"_index":3121,"title":{},"body":{"statements/for.html":{}}}],["for迴圈的時間複雜度為o(n2",{"_index":3303,"title":{},"body":{"string/queue.html":{}}}],["for（xff",{"_index":2125,"title":{},"body":{"F2E/header.html":{}}}],["found",{"_index":2423,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#find":{}}}],["frag",{"_index":1630,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["frag.appendchild(li",{"_index":1633,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["fragment",{"_index":1626,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["freez",{"_index":1004,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["freeze(person",{"_index":1047,"title":{},"body":{"core.html":{},"core.html#const":{}}}],["friday",{"_index":2701,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["fromexponenti",{"_index":1737,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["fromexponential(valu",{"_index":1740,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["fromtoarr",{"_index":2599,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["fromtoarr.push",{"_index":2603,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["fromtoarr[i].transactionhash",{"_index":2616,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["front",{"_index":3295,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["fulfil",{"_index":2333,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{},"global/promise.html":{}}}],["fulfilled/reject",{"_index":2830,"title":{},"body":{"global/promise.html":{}}}],["fun",{"_index":521,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{}}}],["funb",{"_index":446,"title":{},"body":{"export.html":{},"export.html#export":{}}}],["func",{"_index":1962,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["func.appli",{"_index":1949,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["func.cal",{"_index":1946,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["funcb",{"_index":885,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["funcb(cbfn",{"_index":886,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["function",{"_index":21,"title":{"arrowFunction.html#Arrow-Function":{},"core.html#function":{},"function/factory​_factory.html":{}},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"arrowFunction.html":{},"closures.html":{},"closures.html#傳多個函數":{},"export.html":{},"export.html#export":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{},"event.html":{},"event.html#代理":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"performance.html":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"performance.html#事件節流":{},"scope.html":{},"operators.html":{},"operators.html#Increment":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/filter.html":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/replace.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"cases/str.html":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{},"glossary/hoisting.html":{},"object/create.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"string/split.html":{},"string/split.html#split":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["function#bind",{"_index":2786,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["function&#x662f;&#x7269;&#x4ef6",{"_index":1275,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["function&#xff0c;&#x4ee5;&#x6b64;&#x70ba;&#x57fa;&#x6e96;&#x7522;&#x751f;&#x4e00;&#x500b;&#x4f5c;&#x7528;&#x57df",{"_index":2039,"title":{},"body":{"this.html#bind-apply-call":{}}}],["function($provid",{"_index":3276,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["function(pric",{"_index":898,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#屬性特徵":{}}}],["function.nam",{"_index":3106,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["function.prototype.appli",{"_index":2774,"title":{},"body":{"global/function.html":{},"global/function.html#call、apply、bind":{}}}],["function.prototype.bind",{"_index":2775,"title":{},"body":{"global/function.html":{},"global/function.html#call、apply、bind":{}}}],["function.prototype.cal",{"_index":2773,"title":{},"body":{"global/function.html":{},"global/function.html#call、apply、bind":{}}}],["function1",{"_index":2076,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["function_express",{"_index":3098,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#typeof":{}}}],["functionc",{"_index":857,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["functiond",{"_index":858,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["functions&#xff09;&#x3002",{"_index":3091,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["function沒辦法轉成json",{"_index":520,"title":{},"body":{"copy.html":{}}}],["functoind",{"_index":860,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["g",{"_index":175,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{},"index.html":{},"index.html#Getting-Started":{},"cases/replace.html":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{}}}],["get",{"_index":609,"title":{"index.html#Getting-Started":{}},"body":{"index.html":{}}}],["get&#xff1a;&#x8b80;&#x53d6;&#xff08;read&#xff09",{"_index":227,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["getcount",{"_index":3204,"title":{},"body":{"string/split.html":{},"string/split.html#split":{}}}],["getdat",{"_index":964,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["getdata",{"_index":844,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"cases/delay.html":{}}}],["getdata(data",{"_index":2650,"title":{},"body":{"cases/delay.html":{}}}],["getelementbyid",{"_index":570,"title":{},"body":{"event.html":{},"event.html#代理":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{}}}],["getelementsbytagnam",{"_index":1621,"title":{},"body":{"performance.html":{},"performance.html#DOM-查詢做緩存":{}}}],["getfullyear",{"_index":968,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["getmeal",{"_index":2685,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["getmonth",{"_index":966,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["getnam",{"_index":1916,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["getobj",{"_index":3051,"title":{},"body":{"object/object​_keys.html":{}}}],["getobj[typ",{"_index":3055,"title":{},"body":{"object/object​_keys.html":{}}}],["getownpropertydescriptor(wallet",{"_index":1025,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["getpricevalue(order.itempric",{"_index":1736,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["getpricevalue(valu",{"_index":1739,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["getr",{"_index":2647,"title":{},"body":{"cases/delay.html":{}}}],["getter",{"_index":1009,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["getter/sett",{"_index":1035,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["gettim",{"_index":2652,"title":{},"body":{"cases/delay.html":{}}}],["getweeksm",{"_index":2695,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["get|post|put|delet",{"_index":2765,"title":{},"body":{"cases/str.html":{}}}],["get傳遞之網址列資訊(queri",{"_index":33,"title":{},"body":{"ajax.html":{}}}],["get：讀取（read",{"_index":187,"title":{},"body":{"RESTfulAPI.html":{}}}],["git",{"_index":619,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["github",{"_index":210,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["givememoney",{"_index":861,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["givememoney&apo",{"_index":1345,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["givemoremoney",{"_index":862,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["givemoremoney(num",{"_index":866,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["givetimestamp",{"_index":2703,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["global",{"_index":416,"title":{},"body":{"closures.html":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"scope.html":{},"this.html":{},"this.html#簡易呼叫":{},"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["global.person",{"_index":881,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["globalloc",{"_index":1831,"title":{},"body":{"scope.html":{}}}],["go",{"_index":624,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["godfath",{"_index":2449,"title":{},"body":{"array/array_methods.html":{}}}],["godfather&apo",{"_index":2485,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["good",{"_index":2581,"title":{},"body":{"cases/if.html":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["goodby",{"_index":395,"title":{},"body":{"closures.html":{}}}],["gpu",{"_index":1606,"title":{},"body":{"performance.html":{}}}],["graph",{"_index":2096,"title":{},"body":{"F2E/GraphQL.html":{}}}],["graphql",{"_index":2092,"title":{"F2E/GraphQL.html":{}},"body":{"F2E/GraphQL.html":{}}}],["groot",{"_index":762,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["hand",{"_index":656,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["happi",{"_index":219,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["hash",{"_index":2606,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["hash&#x78bc;&#x6703;&#x96a8;&#x4e4b;&#x6539;&#x8b8a;&#xff0c;&#x901a;&#x904e;&#x8acb;&#x6c42;&#x982d;&#x4e2d;&#x7684",{"_index":2997,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["hashlist",{"_index":2598,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["hashlist.push(v.transactionhash",{"_index":2604,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["hashtag",{"_index":1848,"title":{},"body":{"url.html":{}}}],["hateoa",{"_index":209,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["hateoas&#x3002",{"_index":267,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["header",{"_index":2106,"title":{"F2E/token.html#provisional-headers-are-shown":{},"F2E/header.html":{}},"body":{"F2E/token.html":{},"F2E/token.html#provisional-headers-are-shown":{},"http/caching.html":{},"http/caching.html#強緩存":{}}}],["hello",{"_index":392,"title":{},"body":{"closures.html":{},"core.html":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#bind-apply-call":{},"cases/str.html":{},"global/function.html":{},"global/function.html#bind":{},"statements/for.html":{}}}],["hello5",{"_index":1878,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["here",{"_index":2842,"title":{},"body":{"global/promise.html":{}}}],["hexo",{"_index":589,"title":{"index.html":{},"index.html#hexo-theme-doc-seed":{}},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{}}}],["hi",{"_index":2781,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["hoist",{"_index":647,"title":{"variable.html#Hoisting":{}},"body":{"core.html":{},"variable.html":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/block.html":{}}}],["hoisting](https://developer.mozilla.org/zh",{"_index":2892,"title":{"glossary/hoisting.html":{}},"body":{}}],["host",{"_index":77,"title":{},"body":{"ajax.html":{}}}],["hostnam",{"_index":1842,"title":{},"body":{"url.html":{}}}],["href",{"_index":564,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["href=xxx",{"_index":86,"title":{},"body":{"ajax.html":{}}}],["hsu",{"_index":755,"title":{},"body":{"core.html":{}}}],["html",{"_index":1612,"title":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}},"body":{"performance.html":{},"performance.html#優化原則和方向":{},"performance.html#懶加載":{},"swagger/to-html.html":{}}}],["http",{"_index":29,"title":{"http/caching.html":{}},"body":{"ajax.html":{},"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{},"RESTfulAPI.html#狀態碼":{},"F2E/header.html":{},"F2E/cookie.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#References":{},"object/object​_keys.html":{}}}],["http/1.1",{"_index":2906,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["http://3000",{"_index":2768,"title":{},"body":{"cases/str.html":{}}}],["http://blog.xuite.net/ahdaa/blog1/test.html?id=ad&amp;val1=02&amp;val2=22#achorad",{"_index":68,"title":{},"body":{"ajax.html":{}}}],["http://example.com/?userid=jacob.hsu",{"_index":48,"title":{},"body":{"ajax.html":{}}}],["http://localhost:4000",{"_index":630,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["http://ourjs.com/detail/54695381bc3f9b154e000046",{"_index":1765,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["http://petstore.swagger.io/v1/pet",{"_index":3257,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["http://petstore.swagger.io/v1/pets/{petid",{"_index":3267,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["http://www.dengzhr.com/js/1069",{"_index":1956,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["http://www.foo.com",{"_index":101,"title":{},"body":{"ajax.html":{}}}],["http://www.jstips.co/zh_tw/javascript/whi",{"_index":1861,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["http://www.ruanyifeng.com/blog/2018/10/rest",{"_index":220,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["https://${window.location.host",{"_index":1852,"title":{},"body":{"url.html":{}}}],["https://30secondsofinterviews.org",{"_index":1863,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["https://blog.florimondmanca.com/rest",{"_index":213,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["https://developer.mozilla.org/en",{"_index":389,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["https://developer.mozilla.org/zh",{"_index":111,"title":{},"body":{"ajax.html":{},"this.html":{},"this.html#Callback":{}}}],["https://github.com/airbnb/javascript",{"_index":1054,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["https://github.com/interviewmap/c",{"_index":1767,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["https://github.com/vuejs/vue/blob/dev/dist/vue.j",{"_index":1029,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["https://github.com/zalando",{"_index":620,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["https://graphql.cn/learn",{"_index":2101,"title":{},"body":{"F2E/GraphQL.html":{},"F2E/GraphQL.html#References":{}}}],["https://hacpai.com/article/1546570870626?r=vanessa",{"_index":1864,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["https://hacpai.com/article/1546665384680?r=vanessa",{"_index":1875,"title":{},"body":{"operators.html":{},"operators.html#Increment":{},"operators.html#references":{}}}],["https://hacpai.com/article/1547790109416?r=vanessa",{"_index":2469,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["https://is.gd/0iywu2",{"_index":1644,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["https://ithelp.ithome.com.tw/articles/10190254",{"_index":66,"title":{},"body":{"ajax.html":{}}}],["https://ithelp.ithome.com.tw/articles/10200678",{"_index":2102,"title":{},"body":{"F2E/GraphQL.html":{},"F2E/GraphQL.html#References":{}}}],["https://jsbin.com/cejijipevo/edit?js,consol",{"_index":512,"title":{},"body":{"copy.html":{},"copy.html#Object-assign":{}}}],["https://jsbin.com/gaceyen/edit?js,consol",{"_index":2428,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#sort":{}}}],["https://jsbin.com/guqetaviho/edit?js,consol",{"_index":1858,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["https://jsbin.com/hajohit/edit?html,js,output",{"_index":561,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["https://jsbin.com/hipiruzoru/edit?js,consol",{"_index":113,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{}}}],["https://jsbin.com/honidujame/edit?js,consol",{"_index":273,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#異步":{}}}],["https://jsbin.com/hupumaxoru/edit?js,consol",{"_index":1879,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["https://jsbin.com/janoyunemu/edit?js,consol",{"_index":2566,"title":{},"body":{"cases/arr.html":{}}}],["https://jsbin.com/katifugevu/edit?js,console,output",{"_index":35,"title":{},"body":{"ajax.html":{}}}],["https://jsbin.com/keholuroba/edit?js,consol",{"_index":455,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{}}}],["https://jsbin.com/kofawafune/edit?js,consol",{"_index":517,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{}}}],["https://jsbin.com/lokejiveha/edit?js,consol",{"_index":452,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{}}}],["https://jsbin.com/lufavuf/1/edit?js,consol",{"_index":2404,"title":{},"body":{"array/array_merge.html":{}}}],["https://jsbin.com/nefobuh/edit?js,consol",{"_index":2431,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#every":{}}}],["https://jsbin.com/nidizam/edit?js,consol",{"_index":2400,"title":{},"body":{"array/array_merge.html":{}}}],["https://jsbin.com/pupasabapa/edit?js,consol",{"_index":1954,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["https://jsbin.com/qapevom/edit?js,consol",{"_index":2422,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#find":{}}}],["https://jsbin.com/razufufago/edit?js,consol",{"_index":2441,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["https://jsbin.com/samaxubazo/edit?js,consol",{"_index":1866,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["https://jsbin.com/sidixofelo/edit?js,consol",{"_index":3049,"title":{},"body":{"object/object​_keys.html":{}}}],["https://jsbin.com/tagalenuje/edit?js,consol",{"_index":1927,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["https://jsbin.com/venezeyonu/edit?js,consol",{"_index":469,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["https://jsbin.com/vihonezita/edit?js,consol",{"_index":1914,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{}}}],["https://jsbin.com/viziyewore/edit?js,consol",{"_index":1910,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{}}}],["https://jsbin.com/wurocegika/edit?js,consol",{"_index":3044,"title":{},"body":{"object/object​_keys.html":{}}}],["https://jsbin.com/wuxiqeciko/edit?js,consol",{"_index":1957,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["https://jsbin.com/xeqevarisa/1/edit?js,consol",{"_index":466,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["https://jsbin.com/xevunu/edit?js,consol",{"_index":2414,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#map":{},"array/map.html":{},"array/map.html#map":{}}}],["https://jsbin.com/xoninaz/1/edit?js,consol",{"_index":2420,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#filter":{}}}],["https://jsbin.com/xoninaz/edit?js,consol",{"_index":2411,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#forEach":{}}}],["https://jsbin.com/yapugucezi/edit?js,consol",{"_index":2447,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["https://jsbin.com/yeleboz/edit?js,consol",{"_index":2435,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#some":{}}}],["https://jsbin.com/yijuyebixu/edit?js,consol",{"_index":425,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["https://jsbin.com/zosebomeko/edit?js,console,output",{"_index":2838,"title":{},"body":{"global/promise.html":{}}}],["https://juejin.im/post/5dbff8735188252ddb2fd25",{"_index":2539,"title":{},"body":{"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["https://lodash.com/docs/4.17.15#clonedeep",{"_index":510,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["https://paper.dropbox.com/doc/j",{"_index":1834,"title":{},"body":{"scope.html":{}}}],["https://paper.dropbox.com/doc/javascript",{"_index":2082,"title":{},"body":{"variable.html":{},"variable.html#動態型別":{}}}],["https://paper.dropbox.com/doc/jsjavascript",{"_index":1977,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["https://segmentfault.com/a/1190000012175422",{"_index":1766,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["https://tylermcginnis.com/arrow",{"_index":406,"title":{},"body":{"closures.html":{}}}],["https://wcc723.github.io/javascript/2017/12/15/javascript",{"_index":1837,"title":{},"body":{"scope.html":{}}}],["https://wcc723.github.io/javascript/2017/12/21/javascript",{"_index":1980,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["https://wcc723.github.io/javascript/2019/03/18/j",{"_index":1976,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["https://www.jianshu.com/p/8f839f558319",{"_index":1645,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["https://www.sitepoint.com/factori",{"_index":2709,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["https://www.w3schools.com/js/js_operators.asp",{"_index":1874,"title":{},"body":{"operators.html":{},"operators.html#Increment":{},"operators.html#references":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["https://www.youtube.com/watch?v=wiommcfayvi",{"_index":1056,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["https://zh.wikipedia.org/wiki",{"_index":753,"title":{},"body":{"core.html":{}}}],["http代理或負載均衡方式連接到web伺服器的用戶端最原始的ip位址的http",{"_index":2126,"title":{},"body":{"F2E/header.html":{}}}],["http的無狀態(stateless",{"_index":2129,"title":{},"body":{"F2E/cookie.html":{}}}],["http的無狀態性的「額外手段」之一，讓伺服器可以設定或讀取cookies中所包含資訊，藉此來維護我們在使用服務時，可以在背景完成向伺服器發送請求，接著伺服器就匯回傳包含登入憑據（使用者名稱加密碼的某種加密形式）的cookie文檔，到使用者的硬碟(或記憶體上)，在之後登入時，只要cookie尚未到期，瀏覽器會傳送該cooki",{"_index":2130,"title":{},"body":{"F2E/cookie.html":{}}}],["i++)&#x3000;&#x3000;for",{"_index":3342,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["i++)&#x3000;&#x3000;x",{"_index":3341,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["i=1",{"_index":3299,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{}}}],["i=ary.length",{"_index":59,"title":{},"body":{"ajax.html":{}}}],["i=n",{"_index":3300,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{}}}],["icecream",{"_index":2664,"title":{},"body":{"function/factory​_factory.html":{}}}],["icecream&#xff08;&#x51b0;&#x6dc7;&#x6dcb;&#xff09;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#x4f86;&#x5b9a;&#x7fa9;&#x3002",{"_index":2715,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["id",{"_index":51,"title":{},"body":{"ajax.html":{},"event.html":{},"event.html#代理":{},"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["id&#x3002",{"_index":2236,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#x4e5f;&#x6d88;&#x5931;&#x4e86;&#xff0c;&#x4f46;&#x53ea;&#x8981;&#x628a;&#x539f;&#x4f86;&#x7684;sess",{"_index":2253,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#x518d;&#x767c;&#x9001;&#x7d66;server&#xff0c;&#x90a3;&#x9084;&#x662f;&#x80fd;&#x5920;&#x627e;&#x5230;&#x539f;&#x4f86;&#x7684;sess",{"_index":2254,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#x7684;&#x65b9;&#x5f0f;&#x4e5f;&#x53ef;&#x4ee5;&#x63a1;&#x7528;cooki",{"_index":2249,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#xff0c;&#x4e26;&#x5728;&#x672c;&#x6b21;&#x97ff;&#x61c9;&#x4e2d;&#x8fd4;&#x56de;&#x7d66;&#x5ba2;&#x6236;&#x7aef;&#x4fdd;&#x5b58;&#x3002",{"_index":2242,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#xff0c;&#x5c31;&#x8868;&#x793a;&#x9019;&#x500b;&#x5ba2;&#x6236;&#x662f;&#x8001;&#x53f8;&#x6a5f;&#x5566;&#xff0c;&#x7576;&#x7136;&#x4f3a;&#x670d;&#x5668;&#x7aef;&#x4ee5;&#x524d;&#x5c31;&#x70ba;&#x4e86;&#x9019;&#x500b;&#x5ba2;&#x6236;&#x7aef;&#x5275;&#x5efa;&#x904e;session&#xff0c;&#x670d;&#x52d9;&#x5668;&#x5c31;&#x6309;&#x7167;sess",{"_index":2239,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#xff0c;&#x628a;&#x9019;&#x500b;session&#x627e;&#x51fa;&#x4f86;&#x4f7f;&#x7528;&#x3002;&#x4f46;&#x5982;&#x679c;&#x5ba2;&#x6236;&#x7aef;&#x8acb;&#x6c42;&#x4e0d;&#x5305;&#x542b;sess",{"_index":2240,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#xff0c;&#x7576;&#x7136;&#x5982;&#x679c;&#x5df2;&#x5305;&#x542b;&#x4e00;&#x500b;sess",{"_index":2238,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id&#xff0c;&#xff0c;&#x5247;&#x8868;&#x793a;&#x4ed6;&#x662f;&#x65b0;&#x81c9;&#x5b54;&#xff0c;&#x90a3;&#x4f3a;&#x670d;&#x5668;&#x7aef;&#x5c31;&#x70ba;&#x6b64;&#x5ba2;&#x6236;&#x7aef;&#x5275;&#x5efa;&#x4e00;&#x500b;session&#xff0c;&#x4e26;&#x751f;&#x6210;&#x4e00;&#x500b;sess",{"_index":2241,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["id=ad&amp;val1=02&amp;val2=22#achorad",{"_index":80,"title":{},"body":{"ajax.html":{}}}],["id也消失了，但只要把原來的sess",{"_index":2163,"title":{},"body":{"F2E/cookie.html":{}}}],["id再發送給server，那還是能夠找到原來的sess",{"_index":2164,"title":{},"body":{"F2E/cookie.html":{}}}],["id的方式也可以採用cooki",{"_index":2160,"title":{},"body":{"F2E/cookie.html":{}}}],["id，就表示這個客戶是老司機啦，當然伺服器端以前就為了這個客戶端創建過session，服務器就按照sess",{"_index":2156,"title":{},"body":{"F2E/cookie.html":{}}}],["id，把這個session找出來使用。但如果客戶端請求不包含sess",{"_index":2157,"title":{},"body":{"F2E/cookie.html":{}}}],["id，當然如果已包含一個sess",{"_index":2155,"title":{},"body":{"F2E/cookie.html":{}}}],["id，，則表示他是新臉孔，那伺服器端就為此客戶端創建一個session，並生成一個sess",{"_index":2158,"title":{},"body":{"F2E/cookie.html":{}}}],["ie8",{"_index":1038,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["ieee",{"_index":1747,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["if&#x2026;els",{"_index":3225,"title":{"statements/if...else.html#if…else":{}},"body":{}}],["if(a",{"_index":677,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["if…els",{"_index":3213,"title":{},"body":{"statements/if...else.html":{}}}],["if中的console.log(nam",{"_index":2901,"title":{},"body":{"glossary/hoisting.html":{}}}],["iif",{"_index":869,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["iife&#x3001;closure&#x3001;callback",{"_index":2014,"title":{},"body":{"this.html#Callback":{}}}],["iife&#xff08;immedi",{"_index":322,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["iife、closure、callback",{"_index":1945,"title":{},"body":{"this.html":{}}}],["iife（immedi",{"_index":281,"title":{},"body":{"asynchronous.html":{}}}],["img",{"_index":83,"title":{},"body":{"ajax.html":{},"performance.html":{},"performance.html#懶加載":{}}}],["img1",{"_index":1615,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["img1.getattribut",{"_index":1620,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["img1.src",{"_index":1619,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["immedi",{"_index":870,"title":{},"body":{"core.html":{}}}],["immut",{"_index":2265,"title":{},"body":{"array/array_insert.html":{}}}],["implement",{"_index":2841,"title":{},"body":{"global/promise.html":{}}}],["implicit",{"_index":673,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["import",{"_index":378,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{},"export.html":{},"export.html#export":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["in&#x53ea;&#x80fd;&#x505a;&#x7b2c;&#x4e00;&#x5c64;&#x7684;&#x8907;&#x88fd",{"_index":1289,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["increas",{"_index":907,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["increment",{"_index":1865,"title":{"operators.html#Increment":{}},"body":{"operators.html":{}}}],["incubator/hexo",{"_index":621,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["index",{"_index":889,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"this.html":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_merge.html":{}}}],["index,array",{"_index":1943,"title":{},"body":{"this.html":{},"this.html#Callback":{}}}],["index.j",{"_index":379,"title":{},"body":{"es6.html":{}}}],["inewarray.length;i",{"_index":829,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["info",{"_index":3034,"title":{"swagger/to-html.html#Info-for-a-specific-pet":{}},"body":{"object/create.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["inform",{"_index":634,"title":{"index.html#More-Informations":{}},"body":{"index.html":{},"index.html#More-Informations":{}}}],["ingredi",{"_index":2708,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["initi",{"_index":3187,"title":{},"body":{"statements/let.html":{},"statements/let.html#let":{}}}],["initv",{"_index":905,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["inner",{"_index":3197,"title":{},"body":{"statements/block.html":{}}}],["insert",{"_index":668,"title":{"array/array_insert.html":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["insidefn",{"_index":412,"title":{},"body":{"closures.html":{}}}],["instal",{"_index":613,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["instanc",{"_index":2704,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"object/create.html":{}}}],["instanceof",{"_index":3041,"title":{},"body":{"object/create.html":{},"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["int32",{"_index":3254,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["int64",{"_index":3259,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["integ",{"_index":3253,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["interest",{"_index":2528,"title":{},"body":{"array/object_to_array.html":{}}}],["interview",{"_index":1768,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["invalid",{"_index":659,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["invok",{"_index":282,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["ip",{"_index":2120,"title":{},"body":{"F2E/header.html":{}}}],["isempti",{"_index":3293,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["iso",{"_index":2868,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["isvalidpwd",{"_index":141,"title":{},"body":{"RegExp.html":{}}}],["item",{"_index":342,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"this.html":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/map.html":{},"array/map.html#map":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["item,index",{"_index":2408,"title":{},"body":{"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/map.html":{},"array/map.html#map":{}}}],["item.catalog",{"_index":2457,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["items.length",{"_index":3294,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["items.pop",{"_index":3314,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["items.push(",{"_index":3290,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["items.shift",{"_index":3292,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["items.splice(items.length",{"_index":2275,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["items.unshift(",{"_index":3310,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["iter",{"_index":1941,"title":{},"body":{"this.html":{},"this.html#Callback":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["iterable.foo",{"_index":3128,"title":{},"body":{"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["j",{"_index":284,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"string/queue.html":{}}}],["j++)&#x3000;&#x3000;x",{"_index":3343,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["j=1",{"_index":3301,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{}}}],["j=n",{"_index":3302,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{}}}],["jacob",{"_index":649,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{},"core.html#Let":{},"variable.html":{},"variable.html#Hoisting":{}}}],["jacob&#x4f60;&#x597d;1",{"_index":1376,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["jacob.hsu",{"_index":64,"title":{},"body":{"ajax.html":{}}}],["jacob.hsu.tw",{"_index":155,"title":{},"body":{"RegExp.html":{}}}],["jacob.hsu.tw@gmail.com",{"_index":153,"title":{},"body":{"RegExp.html":{}}}],["jacob1",{"_index":2068,"title":{},"body":{"variable.html":{}}}],["jacob2",{"_index":2070,"title":{},"body":{"variable.html":{}}}],["jacob3",{"_index":2072,"title":{},"body":{"variable.html":{}}}],["jacob你好1",{"_index":887,"title":{},"body":{"core.html":{}}}],["jan",{"_index":2278,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["javascript",{"_index":637,"title":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#屬性特徵":{},"num.html":{},"num.html#補數字":{},"performance.html":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"this.html":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#Promise":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/good_part.html":{},"cases/arr.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{},"glossary/hoisting.html":{},"operators/function.html":{}}}],["javascript&#x4e2d;&#x7684;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x6c92;&#x6709;&#x63d0;&#x5347;,&#x4e0d;&#x50cf;&#x51fd;&#x6578;&#x8072;&#x660e;,&#x4f60;&#x5728;&#x5b9a;&#x7fa9;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x4e4b;&#x524d;&#x4e0d;&#x80fd;&#x4f7f;&#x7528;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f",{"_index":3095,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["javascript&#x4e2d;&#x7684;&#x5c0f;&#x6578;&#x63a1;&#x7528;&#x7684;&#x662f;&#x96d9;&#x7cbe;&#x5ea6;(64&#x4f4d;)&#x8868;&#x793a;&#x7684;&#xff0c;&#x7531;&#x4e09;&#x90e8;&#x5206;&#x7d44;&#x6210;&#xff1a;&#x3000;&#x7b26",{"_index":1793,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["javascript中的小數採用的是雙精度(64",{"_index":1748,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["javascript構建的應用程序的複雜性比語言發展的速度還要快。這種情況迫使開發人員使用javascript",{"_index":2511,"title":{},"body":{"array/good_part.html":{}}}],["javascript遵循iee",{"_index":1745,"title":{},"body":{"math.html":{},"cases/math.html":{}}}],["jelli",{"_index":2660,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["jelly&#xff08;&#x679c;&#x51cd;&#xff09;&#x548c",{"_index":2714,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["jessica",{"_index":934,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["join",{"_index":2769,"title":{},"body":{"cases/str.html":{},"cases/str.html#url":{}}}],["jqueri",{"_index":810,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["jquery.extend",{"_index":814,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["js",{"_index":287,"title":{"array/good_part.html":{}},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"performance.html":{},"performance.html#優化原則和方向":{},"math.html":{},"scope.html":{},"this.html":{},"array/array_merge.html":{},"cases/if.html":{},"cases/math.html":{},"operators/typeof.html":{},"operators/typeof.html#null":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["js&#x5169;&#x7a2e;&#x578b;&#x5225",{"_index":1272,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["js&#x5c6c;&#x65bc;&#x975c;&#x614b;&#x4f5c;&#x7528;&#x57df",{"_index":1090,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["js&#x662f;&#x55ae;&#x57f7;&#x884c;&#x5e8f",{"_index":1119,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["js&#x6c92;&#x6709;&#x6574;&#x578b;&#x53ea;&#x6709;&#x5c0d;&#x8c61",{"_index":3119,"title":{},"body":{"operators/typeof.html#null":{}}}],["js&#x8a9e;&#x8a00;&#x4e2d;&#x51fd;&#x5f0f;&#x7684;&#x8a2d;&#x8a08;&#xff0c;&#x5fc5;&#x6709;&#x56de;&#x50b3;&#x503c;&#xff0c;&#x6c92;&#x5beb;&#x76f8;&#x7576;&#x65bc;&#x56de;&#x50b3",{"_index":2047,"title":{},"body":{"this.html#bind-apply-call":{}}}],["jsfood.com",{"_index":2696,"title":{},"body":{"function/factory​_factory.html":{}}}],["json",{"_index":516,"title":{"copy.html#轉成-JSON-再轉回來":{},"core.html#JSON":{}},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"F2E/token.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["json&#x6240;&#x6709;&#x7684;&#x5c6c;&#x6027;&#x4e00;&#x5b9a;&#x90fd;&#x662f;&#x5b57;&#x4e32;&#x7684;&#x5f62;&#x5f0f",{"_index":1319,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["json.pars",{"_index":842,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["json.stringify(famili",{"_index":817,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["json是javascript的一個子集，但json",{"_index":840,"title":{},"body":{"core.html":{}}}],["json，這對於在會話之間持久化，通過http或websocket",{"_index":2702,"title":{},"body":{"function/factory​_factory.html":{}}}],["js正则表达式，限1",{"_index":126,"title":{},"body":{"RegExp.html":{}}}],["june",{"_index":2281,"title":{},"body":{"array/array_insert.html":{}}}],["jwt",{"_index":2103,"title":{},"body":{"F2E/token.html":{}}}],["k98zbcemd1ig9dzyynrul",{"_index":1836,"title":{},"body":{"scope.html":{},"variable.html":{},"variable.html#動態型別":{}}}],["key",{"_index":503,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#ES6-Airbnb":{},"array/object_to_array.html":{},"object/object​_keys.html":{},"statements/for.html":{}}}],["key)，for…of",{"_index":3127,"title":{},"body":{"statements/for.html":{}}}],["keydown",{"_index":1637,"title":{},"body":{"performance.html":{}}}],["keydown&#xff1a;&#x6309;&#x4e0b;&#x9375;&#x76e4;&#x9375",{"_index":1714,"title":{},"body":{"performance.html#事件節流":{}}}],["keys(an_obj",{"_index":3048,"title":{},"body":{"object/object​_keys.html":{}}}],["keys(arr",{"_index":3045,"title":{},"body":{"object/object​_keys.html":{}}}],["keys(obj",{"_index":3046,"title":{},"body":{"object/object​_keys.html":{}}}],["keys(obj).map",{"_index":2529,"title":{},"body":{"array/object_to_array.html":{}}}],["keys(source).foreach",{"_index":502,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["keys(types).foreach",{"_index":3052,"title":{},"body":{"object/object​_keys.html":{}}}],["keyup",{"_index":1636,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["keyup&#xff1a;&#x91cb;&#x653e;&#x9375;&#x76e4;&#x9375",{"_index":1715,"title":{},"body":{"performance.html#事件節流":{}}}],["kingdom",{"_index":979,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["knight",{"_index":2453,"title":{},"body":{"array/array_methods.html":{}}}],["knight&apo",{"_index":2488,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["knowledg",{"_index":1769,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["last",{"_index":2926,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["lastest",{"_index":1027,"title":{},"body":{"core.html":{}}}],["lastindex",{"_index":2401,"title":{},"body":{"array/array_merge.html":{}}}],["lastmodifi",{"_index":2915,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["laterhello",{"_index":2779,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["layer",{"_index":2677,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["left",{"_index":655,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["length",{"_index":834,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"num.html":{},"num.html#補數字":{},"performance.html":{},"performance.html#DOM-查詢做緩存":{},"this.html":{},"this.html#bind-apply-call":{},"cases/replace.html":{},"string/split.html":{},"string/split.html#split":{}}}],["length).join",{"_index":1583,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["let&#x4f5c;&#x7528;&#x57df;&#x53ea;&#x5728;for",{"_index":1386,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["let&#x7684;&#x4f5c;&#x7528;&#x57df;&#x5247;&#x662f;&#x5728;&#x5340;&#x584a;(block",{"_index":1521,"title":{},"body":{"core.html#Let":{}}}],["let作用域只在for",{"_index":904,"title":{},"body":{"core.html":{}}}],["let的作用域則是在區塊(block",{"_index":1044,"title":{},"body":{"core.html":{}}}],["lexic",{"_index":646,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["lh",{"_index":654,"title":{"core.html#LHS":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["lhs)&#xff0c;&#x5be6;&#x969b;&#x4e0a;&#x5728;&#x6b64;&#x5c31;&#x7121;&#x6cd5;&#x7e7c;&#x7e8c;&#x57f7;&#x884c",{"_index":1132,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["li",{"_index":1629,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["li.innerhtml",{"_index":1632,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["liao",{"_index":821,"title":{},"body":{"core.html":{}}}],["limit",{"_index":3252,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["link",{"_index":85,"title":{},"body":{"ajax.html":{},"cases/str.html":{},"cases/str.html#url":{}}}],["list",{"_index":1628,"title":{"swagger/to-html.html#List-all-pets":{}},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"array/array_method.html":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["listchunk",{"_index":2514,"title":{},"body":{"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{}}}],["listnod",{"_index":1627,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["listnode.appendchild(frag",{"_index":1634,"title":{},"body":{"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["load",{"_index":848,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"performance.html":{}}}],["local",{"_index":419,"title":{},"body":{"closures.html":{},"index.html":{},"index.html#Getting-Started":{},"scope.html":{},"this.html":{},"this.html#簡易呼叫":{},"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["locat",{"_index":206,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{}}}],["location.hash",{"_index":81,"title":{},"body":{"ajax.html":{}}}],["location.host",{"_index":72,"title":{},"body":{"ajax.html":{}}}],["location.hostnam",{"_index":70,"title":{},"body":{"ajax.html":{}}}],["location.href",{"_index":47,"title":{},"body":{"ajax.html":{},"url.html":{}}}],["location.pathnam",{"_index":76,"title":{},"body":{"ajax.html":{}}}],["location.port",{"_index":74,"title":{},"body":{"ajax.html":{}}}],["location.protocol",{"_index":69,"title":{},"body":{"ajax.html":{}}}],["location.search",{"_index":79,"title":{},"body":{"ajax.html":{}}}],["locationprovid",{"_index":3275,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["locationprovider.hashprefix",{"_index":3285,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["lodash",{"_index":2523,"title":{},"body":{"array/object_to_array.html":{}}}],["lodash&apos;",{"_index":542,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["lodash'",{"_index":491,"title":{},"body":{"copy.html":{}}}],["log",{"_index":114,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"num.html":{},"num.html#補數字":{},"math.html":{},"math.html#Math":{},"scope.html":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"api/promise.html":{},"api/promise.html#鏈接":{},"cases/if.html":{},"cases/str.html":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{},"glossary/hoisting.html":{},"object/create.html":{},"object/object​_keys.html":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"statements/AsyncFunction.html":{},"statements/block.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["log((",{"_index":3160,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{}}}],["log(++a",{"_index":3193,"title":{},"body":{"statements/AsyncFunction.html":{}}}],["log(++a*a",{"_index":688,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["log(a",{"_index":453,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"operators.html":{},"operators.html#Increment":{},"this.html":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#Hoisting":{},"array/array_merge.html":{},"glossary/hoisting.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/let.html":{},"statements/let.html#let":{},"statements/AsyncFunction.html":{},"statements/block.html":{}}}],["log(a.lastest",{"_index":1028,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["log(a.n",{"_index":3166,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["log(a.x",{"_index":3168,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["log(a===b",{"_index":1860,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["log(a==b",{"_index":1859,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["log(add10",{"_index":402,"title":{},"body":{"closures.html":{}}}],["log(add5",{"_index":401,"title":{},"body":{"closures.html":{}}}],["log(addf1",{"_index":410,"title":{},"body":{"closures.html":{}}}],["log(an",{"_index":3326,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["log(app",{"_index":1034,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["log(arg",{"_index":1051,"title":{},"body":{"core.html":{},"core.html#const":{},"core.html#箭頭函數":{}}}],["log(arr",{"_index":1966,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#拼接兩個陣列":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"object/create.html":{}}}],["log(arr1",{"_index":2468,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["log(arr2",{"_index":2409,"title":{},"body":{"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#sort":{},"array/map.html":{},"array/map.html#map":{}}}],["log(array1.fil",{"_index":2290,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/fill.html":{}}}],["log(array1.reduce(reduc",{"_index":2439,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["log(arrfilt",{"_index":2458,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["log(arrfn",{"_index":1065,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(arrfnr",{"_index":1067,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(arrsortpric",{"_index":2463,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["log(averag",{"_index":1080,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(b",{"_index":454,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"core.html":{},"core.html#this":{},"core.html#new":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"scope.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/block.html":{}}}],["log(b.a",{"_index":686,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["log(b.lasttext",{"_index":958,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(bfunc",{"_index":1872,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["log(bibi",{"_index":949,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(c",{"_index":694,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"array/array_merge.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"glossary/hoisting.html":{}}}],["log(c.person",{"_index":880,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["log(callfn",{"_index":797,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["log(cfunc",{"_index":1873,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["log(chihuahua",{"_index":989,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["log(class1.value2",{"_index":2079,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["log(class1.value3",{"_index":2080,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["log(copi",{"_index":2881,"title":{},"body":{"object/assign.html":{}}}],["log(corgi",{"_index":978,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["log(dat",{"_index":961,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(data",{"_index":845,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["log(date.getfulld",{"_index":970,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(dog.prototyp",{"_index":953,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(error",{"_index":2653,"title":{},"body":{"cases/delay.html":{}}}],["log(expressionfn",{"_index":856,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["log(fail",{"_index":2340,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{}}}],["log(falseyvalu",{"_index":2573,"title":{},"body":{"cases/arr.html":{}}}],["log(famili",{"_index":764,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["log(family.nam",{"_index":763,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["log(family[a",{"_index":765,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["log(familymethod[i",{"_index":774,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["log(firstregexp.test",{"_index":152,"title":{},"body":{"RegExp.html":{}}}],["log(fn",{"_index":421,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["log(fns(addf1",{"_index":424,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["log(fns(f1,f2,f3",{"_index":433,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["log(foo+bar",{"_index":1830,"title":{},"body":{"scope.html":{}}}],["log(foo.bar",{"_index":1924,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["log(found",{"_index":2425,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#find":{}}}],["log(functionc",{"_index":859,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["log(getcount",{"_index":3207,"title":{},"body":{"string/split.html":{},"string/split.html#split":{}}}],["log(getnam",{"_index":1918,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["log(getobj",{"_index":3056,"title":{},"body":{"object/object​_keys.html":{}}}],["log(givememoney",{"_index":867,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["log(i",{"_index":274,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#Let":{},"operators.html":{},"operators.html#Increment":{},"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["log(id",{"_index":63,"title":{},"body":{"ajax.html":{}}}],["log(iif",{"_index":873,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["log(item",{"_index":1967,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{},"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["log(item,index",{"_index":2412,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#forEach":{}}}],["log(j",{"_index":902,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["log(key",{"_index":803,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["log(link",{"_index":2770,"title":{},"body":{"cases/str.html":{},"cases/str.html#url":{}}}],["log(listchunk",{"_index":2520,"title":{},"body":{"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{}}}],["log(longest",{"_index":2446,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["log(map1",{"_index":2590,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["log(mingmoney",{"_index":897,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{}}}],["log(mingmoney.valu",{"_index":911,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["log(month",{"_index":2283,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["log(mynam",{"_index":2081,"title":{},"body":{"variable.html":{},"variable.html#Hoisting":{}}}],["log(nam",{"_index":874,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#Let":{},"glossary/hoisting.html":{}}}],["log(newarray",{"_index":825,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["log(newarray[i",{"_index":830,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["log(newstr",{"_index":792,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["log(newstr2",{"_index":795,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["log(num",{"_index":676,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["log(num.secondpow",{"_index":960,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["log(numfn",{"_index":1069,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(numfunct",{"_index":1071,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(o1",{"_index":2886,"title":{},"body":{"object/assign.html":{},"object/assign.html#合併物件":{}}}],["log(obj",{"_index":995,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["log(obj1",{"_index":460,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{}}}],["log(obj1.bodi",{"_index":473,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{}}}],["log(obj2",{"_index":461,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{}}}],["log(paramet",{"_index":877,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["log(person",{"_index":882,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["log(pick",{"_index":3068,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["log(queu",{"_index":3324,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["log(r",{"_index":178,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{},"cases/delay.html":{}}}],["log(replacestr",{"_index":2766,"title":{},"body":{"cases/str.html":{}}}],["log(rest",{"_index":3063,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["log(result",{"_index":2433,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/filter.html":{}}}],["log(retarr",{"_index":2643,"title":{},"body":{"cases/replace.html":{}}}],["log(self.mynam",{"_index":924,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["log(sevendaysago",{"_index":2878,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["log(statementfn",{"_index":854,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["log(success",{"_index":2339,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{}}}],["log(sum",{"_index":420,"title":{},"body":{"closures.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["log(today",{"_index":2871,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["log(tot",{"_index":1078,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["log(translate(obj",{"_index":2634,"title":{},"body":{"array/fill.html":{}}}],["log(truthyvalu",{"_index":2572,"title":{},"body":{"cases/arr.html":{}}}],["log(typ",{"_index":3053,"title":{},"body":{"object/object​_keys.html":{}}}],["log(uniquelist",{"_index":2115,"title":{},"body":{"array/array_method.html":{}}}],["log(valu",{"_index":1823,"title":{},"body":{"scope.html":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"global/promise.html":{}}}],["log(value1",{"_index":2078,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["log(wallet",{"_index":1024,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["log(wallet.sav",{"_index":1019,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["log(whereparamet",{"_index":878,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["log(word",{"_index":3323,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["log(x",{"_index":1868,"title":{},"body":{"operators.html":{},"operators.html#Increment":{},"statements/block.html":{}}}],["log).catch",{"_index":2829,"title":{},"body":{"global/promise.html":{}}}],["log.bind",{"_index":2855,"title":{},"body":{"global/promise.html":{}}}],["logic",{"_index":695,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["longest",{"_index":2440,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["look",{"_index":611,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["loop",{"_index":2564,"title":{},"body":{"cases/arr.html":{}}}],["loot",{"_index":2856,"title":{},"body":{"global/promise.html":{}}}],["lot",{"_index":484,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["lowercas",{"_index":2758,"title":{},"body":{"cases/str.html":{}}}],["m",{"_index":166,"title":{},"body":{"RegExp.html":{}}}],["main",{"_index":607,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["make",{"_index":217,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["makeadd",{"_index":396,"title":{},"body":{"closures.html":{}}}],["mani",{"_index":3255,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["map",{"_index":1963,"title":{"array/array_methods.html#map":{},"array/map.html#map":{}},"body":{"this.html":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#Array":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/filter.html":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"array/map.html":{},"array/map.html#map":{}}}],["map()&#x3001;filter()&#x3001;reduc",{"_index":2509,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["map()、filter()、reduc",{"_index":2466,"title":{},"body":{"array/array_methods.html":{}}}],["map/blob/master/js/j",{"_index":1770,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["map1",{"_index":2588,"title":{},"body":{"array/map.html":{},"array/map.html#map":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["march",{"_index":2279,"title":{},"body":{"array/array_insert.html":{}}}],["match",{"_index":168,"title":{"RegExp.html#match":{}},"body":{"RegExp.html":{},"cases/replace.html":{},"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["math",{"_index":1568,"title":{"math.html#Math":{}},"body":{"num.html":{},"num.html#取值":{},"num.html#補數字":{},"math.html":{},"math.html#Math":{}}}],["math.ceil",{"_index":1564,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["math.floor",{"_index":1563,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["math.j",{"_index":1764,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["math.pow",{"_index":1561,"title":{},"body":{"num.html":{}}}],["math.pow()&#x50b3;&#x56de;&#x6307;&#x5b9a;&#x4e58;&#x51aa;&#x6578;&#x7684;&#x57fa;&#x5e95;&#x904b;&#x7b97;&#x5f0f;&#x503c",{"_index":1592,"title":{},"body":{"num.html#取值":{}}}],["math.pow(x",{"_index":1723,"title":{},"body":{"math.html":{},"math.html#Math":{}}}],["math.round",{"_index":1562,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["max",{"_index":2907,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["md5",{"_index":1608,"title":{},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["mdn",{"_index":936,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["meal",{"_index":2688,"title":{},"body":{"function/factory​_factory.html":{}}}],["member",{"_index":756,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["memori",{"_index":2903,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["menuurl",{"_index":2686,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["merg",{"_index":2395,"title":{"array/array_merge.html":{}},"body":{}}],["messag",{"_index":1033,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["method",{"_index":1738,"title":{"this.html#物件的方法調用-As-an-object-method":{},"array/array_method.html":{},"array/array_methods.html":{}},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"this.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["mingeasycard",{"_index":1931,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["mingmoney",{"_index":896,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{}}}],["mingmoney.decreas",{"_index":910,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["mingmoney.increas",{"_index":909,"title":{},"body":{"core.html":{},"core.html#函式工廠":{}}}],["mm",{"_index":965,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["model",{"_index":2095,"title":{},"body":{"F2E/GraphQL.html":{}}}],["modern",{"_index":2524,"title":{},"body":{"array/object_to_array.html":{}}}],["modifi",{"_index":2923,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["modified/if",{"_index":2928,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["modul",{"_index":370,"title":{"es6.html#Module-的加载实现":{}},"body":{"es6.html":{},"es6.html#Module-的加载实现":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["module('swagg",{"_index":3270,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["mom",{"_index":801,"title":{},"body":{"core.html":{},"variable.html":{}}}],["mon",{"_index":757,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["monday",{"_index":2697,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["money",{"_index":769,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#const":{},"this.html":{},"this.html#Closure":{},"this.html#Callback":{}}}],["month",{"_index":2277,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["monther",{"_index":800,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["months.splic",{"_index":2282,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["more",{"_index":633,"title":{"index.html#More-Informations":{}},"body":{"index.html":{},"index.html#More-Informations":{}}}],["move",{"_index":981,"title":{},"body":{"core.html":{},"object/create.html":{}}}],["move&apo",{"_index":1463,"title":{},"body":{"core.html#繼承":{}}}],["movi",{"_index":2451,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["mozilla",{"_index":1857,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["ms",{"_index":2645,"title":{},"body":{"cases/delay.html":{}}}],["msg",{"_index":3159,"title":{},"body":{"operators/precedence.html":{}}}],["music",{"_index":2455,"title":{},"body":{"array/array_methods.html":{}}}],["mutationobserver,promise.then",{"_index":2858,"title":{},"body":{"global/promise.html":{}}}],["mycb",{"_index":920,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["myeasycard",{"_index":1936,"title":{},"body":{"this.html":{},"this.html#Closure":{},"this.html#Callback":{}}}],["myfamili",{"_index":760,"title":{},"body":{"core.html":{}}}],["myfamily&apo",{"_index":1249,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["myfirstpromis",{"_index":2831,"title":{},"body":{"global/promise.html":{}}}],["myfirstpromise.then",{"_index":2832,"title":{},"body":{"global/promise.html":{}}}],["myfunct",{"_index":3083,"title":{},"body":{"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["mynam",{"_index":670,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#this":{},"variable.html":{},"variable.html#Hoisting":{}}}],["n",{"_index":3164,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{}}}],["nam",{"_index":715,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["name",{"_index":391,"title":{},"body":{"closures.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#Let":{},"core.html#const":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#Hoisting":{},"global/function.html":{},"global/function.html#bind":{},"glossary/hoisting.html":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"statements/block.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["name&#x4e0d;&#x5c6c;&#x65bc;&#x9663;&#x5217;&#x88e1;&#x9762;&#x7684;&#x9577;&#x5ea6",{"_index":1305,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["name&#x653e;&#x5165;&#x8a18;&#x61b6;&#x9ad4",{"_index":1097,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["name&#xff09;&#xff0c;&#x5728;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x4e2d;&#x53ef;&#x7701;&#x7565;&#x5b83;&#xff0c;&#x5f9e;&#x800c;&#x5275;&#x5efa;&#x533f;&#x540d;&#x51fd;&#x6578;&#xff08;anonym",{"_index":3090,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["name&apos;",{"_index":1264,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["name'",{"_index":782,"title":{},"body":{"core.html":{}}}],["name1",{"_index":2067,"title":{},"body":{"variable.html":{}}}],["name2",{"_index":2069,"title":{},"body":{"variable.html":{}}}],["name3",{"_index":2071,"title":{},"body":{"variable.html":{}}}],["name），在函數表達式中可省略它，從而創建匿名函數（anonym",{"_index":3082,"title":{},"body":{"operators/function.html":{}}}],["nan",{"_index":711,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#bind-apply-call":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["nan&#x3001",{"_index":1901,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["nan&#xff0c;&#x7d50;&#x679c;&#x4e0d;&#x7b49;&#x50f9;&#x65bc;true&#xff0c;&#x4e0d;&#x8fd4;&#x56de;&#x3002",{"_index":2559,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["nan2",{"_index":1883,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["nan，結果不等價於tru",{"_index":2536,"title":{},"body":{"array/filter.html":{}}}],["nativ",{"_index":2525,"title":{},"body":{"array/object_to_array.html":{}}}],["nest",{"_index":2584,"title":{},"body":{"cases/if.html":{}}}],["network",{"_index":852,"title":{},"body":{"core.html":{},"http/caching.html":{},"http/caching.html#強緩存":{}}}],["new",{"_index":15,"title":{"core.html#new":{}},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"array/array_method.html":{},"api/promise.html":{},"api/promise.html#Promise":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{},"object/create.html":{},"operators/typeof.html":{}}}],["new&#x51fa;&#x4f86;&#x7684",{"_index":3116,"title":{},"body":{"operators/typeof.html#null":{}}}],["newarray",{"_index":823,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["newarray.nam",{"_index":827,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["newarray.push",{"_index":826,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["newfamili",{"_index":802,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily.member.oth",{"_index":808,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily.nam",{"_index":806,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily2",{"_index":813,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily3",{"_index":815,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily4",{"_index":819,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily4.member.oth",{"_index":822,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily4.nam",{"_index":820,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfamily[key",{"_index":805,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["newfunc",{"_index":1871,"title":{},"body":{"operators.html":{},"operators.html#Increment":{}}}],["newstr",{"_index":790,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["newstr.nam",{"_index":791,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["newstr2",{"_index":793,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["newstr2.nam",{"_index":794,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["nginx",{"_index":2119,"title":{},"body":{"F2E/header.html":{}}}],["ngsanit",{"_index":3271,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["none",{"_index":2924,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["note",{"_index":1944,"title":{},"body":{"this.html":{},"this.html#Callback":{}}}],["noth",{"_index":3162,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{}}}],["nothoist",{"_index":3085,"title":{},"body":{"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["now",{"_index":616,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["npm",{"_index":615,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["null",{"_index":27,"title":{"operators/typeof.html#null":{}},"body":{"ajax.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#this":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"this.html":{},"this.html#簡易呼叫":{},"array/array_insert.html":{},"array/array_insert.html#example":{},"cases/if.html":{},"array/fill.html":{},"operators/typeof.html":{},"operators/typeof.html#null":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["null,0,1,2",{"_index":1923,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["null不是object",{"_index":3099,"title":{},"body":{"operators/typeof.html":{}}}],["num",{"_index":674,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#this":{},"core.html#new":{},"core.html#箭頭函數":{},"num.html":{},"num.html#補數字":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["num).slic",{"_index":1584,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["num,coin",{"_index":865,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["number",{"_index":675,"title":{"num.html":{},"operators.html#Adding-Strings-and-Numbers":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#this":{},"core.html#new":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"operators.html":{},"variable.html":{},"variable.html#動態型別":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{}}}],["number([10",{"_index":716,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["number1",{"_index":935,"title":{},"body":{"core.html":{}}}],["number{1",{"_index":1420,"title":{},"body":{"core.html#this":{}}}],["numfn",{"_index":1068,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["numfunct",{"_index":1070,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["nums.length",{"_index":1079,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["nums.reduc",{"_index":1075,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["o(1",{"_index":3298,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["o(1)&#xff1c;o(log2n)&#xff1c;o(n)&#xff1c;o(nlog2n)&#xff1c;o(n2)&#xff1c;o(n3)&#xff1c;&#x2026;&#xff1c;o(2n)&#xff1c;o(n",{"_index":3350,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["o(1)＜o(log2n)＜o(n)＜o(nlog2n)＜o(n2)＜o(n3)＜…＜o(2n)＜o(n",{"_index":3305,"title":{},"body":{"string/queue.html":{}}}],["o(2n)&#x548c;o(n!)&#x7a31;&#x70ba",{"_index":3353,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["o(2n)和o(n",{"_index":3307,"title":{},"body":{"string/queue.html":{}}}],["o(log2n)&#x3001;o(n)&#x3001;o(nlog2n)&#x3001;o(n2)&#x548c;o(n3)&#x7a31;&#x70ba",{"_index":3351,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["o(log2n)、o(n)、o(nlog2n)、o(n2)和o(n3",{"_index":3306,"title":{},"body":{"string/queue.html":{}}}],["o(n",{"_index":3297,"title":{},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{}}}],["o(n+n2)=o(n2",{"_index":3304,"title":{},"body":{"string/queue.html":{}}}],["o1",{"_index":2882,"title":{},"body":{"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{}}}],["o2",{"_index":2883,"title":{},"body":{"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{}}}],["o3",{"_index":2884,"title":{},"body":{"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{}}}],["obj",{"_index":994,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#bind-apply-call":{},"array/fill.html":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["obj).slic",{"_index":2633,"title":{},"body":{"array/fill.html":{}}}],["obj.a",{"_index":1001,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["obj.callnam",{"_index":1912,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#立即函式：":{},"this.html#bind-apply-call":{}}}],["obj.callnamearrow",{"_index":1961,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["obj.fn",{"_index":1919,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["obj.getnam",{"_index":1917,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["obj.watch.callnam",{"_index":1913,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{}}}],["obj.x",{"_index":1915,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{}}}],["obj1",{"_index":456,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj1.a",{"_index":467,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["obj1.b",{"_index":464,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["obj1.bodi",{"_index":471,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["obj1.c",{"_index":468,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["obj1.fun",{"_index":523,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj1叫做obj2",{"_index":462,"title":{},"body":{"copy.html":{}}}],["obj1跟obj2",{"_index":475,"title":{},"body":{"copy.html":{}}}],["obj2",{"_index":458,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj2.b",{"_index":459,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{}}}],["obj2.bodi",{"_index":474,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj2.body.a",{"_index":472,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj2.b也不會影響obj1",{"_index":515,"title":{},"body":{"copy.html":{}}}],["obj2.b改成100",{"_index":463,"title":{},"body":{"copy.html":{}}}],["obj2.fun",{"_index":524,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{}}}],["obj2會長得跟obj1",{"_index":514,"title":{},"body":{"copy.html":{}}}],["obj[key",{"_index":2530,"title":{},"body":{"array/object_to_array.html":{}}}],["object",{"_index":494,"title":{"this.html#物件的方法調用-As-an-object-method":{},"array/object_to_array.html":{},"object/assign.html":{}},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#this":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#const":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"this.html":{},"this.html#bind-apply-call":{},"array/object_to_array.html":{},"array/fill.html":{},"global/function.html":{},"global/function.html#call、apply、bind":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"object/create.html":{},"object/object​_keys.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["object.assign",{"_index":511,"title":{"copy.html#Object-assign":{}},"body":{"copy.html":{},"copy.html#Object-assign":{},"object/assign.html":{}}}],["object.cr",{"_index":971,"title":{"object/create.html":{}},"body":{"core.html":{},"core.html#繼承":{},"object/create.html":{}}}],["object.defineproperti",{"_index":996,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["object.defineproperty(&#x7269;&#x4ef6",{"_index":1479,"title":{},"body":{"core.html#屬性特徵":{}}}],["object.fn",{"_index":914,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["object.freez",{"_index":1007,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["object.getownpropertydescriptor",{"_index":1022,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["object.i",{"_index":1856,"title":{},"body":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["object.key",{"_index":3126,"title":{},"body":{"statements/for.html":{},"statements/for.html#for…of與for…in的差別":{}}}],["object.preventextens",{"_index":1005,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["object.prototype.nam",{"_index":3100,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["object.s",{"_index":1006,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["object​.key",{"_index":3043,"title":{"object/object​_keys.html":{}},"body":{"object/object​_keys.html":{}}}],["ok",{"_index":766,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["omtrdc.com",{"_index":2136,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["on",{"_index":2563,"title":{},"body":{"cases/arr.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["onclick",{"_index":940,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["onpress",{"_index":2344,"title":{},"body":{"api/promise.html":{},"api/promise.html#鏈接":{}}}],["open",{"_index":628,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["oper",{"_index":1853,"title":{"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{}},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["operators/operator_preced",{"_index":687,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["opt",{"_index":2306,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["option",{"_index":2913,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["opts.unshift",{"_index":2310,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["order",{"_index":207,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{},"function/factory​_factory.html":{}}}],["oreq",{"_index":846,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["oreq.addeventlisten",{"_index":847,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["oreq.open",{"_index":849,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["oreq.send",{"_index":851,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["origin",{"_index":90,"title":{},"body":{"ajax.html":{}}}],["other",{"_index":759,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["outer",{"_index":3198,"title":{},"body":{"statements/block.html":{}}}],["output",{"_index":292,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{},"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"object/create.html":{},"statements/block.html":{}}}],["output(i",{"_index":293,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{}}}],["p",{"_index":1062,"title":{},"body":{"core.html":{},"performance.html":{},"api/promise.html":{},"api/promise.html#Promise":{},"global/promise.html":{}}}],["p.catch",{"_index":2330,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{}}}],["p.final",{"_index":2331,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{}}}],["p.then",{"_index":2329,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{}}}],["p1",{"_index":2639,"title":{},"body":{"cases/replace.html":{},"global/promise.html":{}}}],["p1.length",{"_index":2642,"title":{},"body":{"cases/replace.html":{}}}],["p2",{"_index":2640,"title":{},"body":{"cases/replace.html":{},"global/promise.html":{}}}],["p3",{"_index":2835,"title":{},"body":{"global/promise.html":{}}}],["p3]).then",{"_index":2837,"title":{},"body":{"global/promise.html":{}}}],["pa",{"_index":170,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["pa.match",{"_index":174,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["pa_u",{"_index":173,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["padding3",{"_index":1575,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["padding4",{"_index":1581,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["paddingint",{"_index":1587,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["paddingpoint",{"_index":1585,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["page",{"_index":3258,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["para1",{"_index":927,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["para2",{"_index":928,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["param",{"_index":493,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"variable.html":{},"variable.html#Hoisting":{},"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["paramet",{"_index":876,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["pars",{"_index":518,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["parsefloat",{"_index":1727,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["parsefloat(1.4000000000000001.toprecision(12",{"_index":1728,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{}}}],["parseint",{"_index":1965,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["parseint(&#x2018;1&#x2019",{"_index":2552,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["parseint(&#x2018;2&#x2019",{"_index":2554,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["parseint(&#x2018;3&#x2019",{"_index":2560,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["parseint(&apos;1&apo",{"_index":2052,"title":{},"body":{"this.html#bind-apply-call":{}}}],["parseint(&apos;11&apo",{"_index":2059,"title":{},"body":{"this.html#bind-apply-call":{}}}],["parseint(&apos;2&apo",{"_index":2053,"title":{},"body":{"this.html#bind-apply-call":{}}}],["parseint(&apos;3&apo",{"_index":2054,"title":{},"body":{"this.html#bind-apply-call":{}}}],["parseint('1",{"_index":1968,"title":{},"body":{"this.html":{}}}],["parseint('11",{"_index":1972,"title":{},"body":{"this.html":{}}}],["parseint('2",{"_index":1969,"title":{},"body":{"this.html":{}}}],["parseint('3",{"_index":1970,"title":{},"body":{"this.html":{}}}],["parseint(item",{"_index":1974,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["parseint(‘1",{"_index":2532,"title":{},"body":{"array/filter.html":{}}}],["parseint(‘2",{"_index":2534,"title":{},"body":{"array/filter.html":{}}}],["parseint(‘3",{"_index":2537,"title":{},"body":{"array/filter.html":{}}}],["parser",{"_index":643,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["parti",{"_index":2150,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["particip",{"_index":2295,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["pass",{"_index":290,"title":{},"body":{"asynchronous.html":{},"array/map.html":{},"array/map.html#map":{}}}],["passfn",{"_index":411,"title":{},"body":{"closures.html":{}}}],["passfn(addf1",{"_index":415,"title":{},"body":{"closures.html":{}}}],["password",{"_index":131,"title":{},"body":{"RegExp.html":{}}}],["patch&#xff1a;&#x66f4;&#x65b0;&#xff08;update&#xff09;&#xff0c;&#x901a;&#x5e38;&#x662f;&#x90e8;&#x5206;&#x66f4;&#x65b0",{"_index":229,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["patch：更新（upd",{"_index":189,"title":{},"body":{"RESTfulAPI.html":{}}}],["path",{"_index":1846,"title":{},"body":{"url.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["path/to/mymodule.j",{"_index":372,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{}}}],["pattern",{"_index":2583,"title":{},"body":{"cases/if.html":{}}}],["pend",{"_index":2332,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{},"global/promise.html":{}}}],["pending&#xff0c",{"_index":2365,"title":{},"body":{"api/promise.html#Promise":{}}}],["pennsylvania",{"_index":172,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["pennsylvania)&apo",{"_index":180,"title":{},"body":{"RegExp.html#match":{}}}],["perfect",{"_index":490,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["perform",{"_index":1603,"title":{"performance.html":{}},"body":{}}],["person",{"_index":777,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#const":{},"scope.html":{}}}],["person.callsomeon",{"_index":1828,"title":{},"body":{"scope.html":{}}}],["person.money",{"_index":1048,"title":{},"body":{"core.html":{},"core.html#const":{}}}],["person.nam",{"_index":1046,"title":{},"body":{"core.html":{},"core.html#const":{}}}],["person2",{"_index":778,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["pet",{"_index":3251,"title":{"swagger/to-html.html#List-all-pets":{},"swagger/to-html.html#Create-a-pet":{},"swagger/to-html.html#Info-for-a-specific-pet":{}},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#List-all-pets":{},"swagger/to-html.html#Create-a-pet":{}}}],["petid",{"_index":3265,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["pets/{petid",{"_index":3264,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#Info-for-a-specific-pet":{}}}],["petstor",{"_index":3249,"title":{"swagger/to-html.html#undefined":{}},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["pick",{"_index":3067,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["picked(obj",{"_index":3073,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["pleas",{"_index":635,"title":{},"body":{"index.html":{},"index.html#More-Informations":{}}}],["plist",{"_index":1622,"title":{},"body":{"performance.html":{},"performance.html#DOM-查詢做緩存":{}}}],["plist.length",{"_index":1623,"title":{},"body":{"performance.html":{},"performance.html#DOM-查詢做緩存":{}}}],["plu",{"_index":602,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["plugin",{"_index":2139,"title":{},"body":{"F2E/cookie.html":{}}}],["plugins)&#x3002",{"_index":2203,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["polyfil",{"_index":993,"title":{},"body":{"core.html":{},"core.html#繼承":{}}}],["port",{"_index":1843,"title":{},"body":{"url.html":{}}}],["posit",{"_index":2289,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{},"array/fill.html":{}}}],["post",{"_index":3261,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#Create-a-pet":{}}}],["post&#xff1a;&#x65b0;&#x5efa;&#xff08;create&#xff09",{"_index":226,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["postethgetfilterlogsr",{"_index":2597,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["postethgetfilterlogsres.map",{"_index":2600,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["postfix",{"_index":1882,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["post：新建（creat",{"_index":186,"title":{},"body":{"RESTfulAPI.html":{}}}],["pow",{"_index":1569,"title":{},"body":{"num.html":{},"num.html#取值":{},"num.html#補數字":{},"math.html":{},"math.html#Math":{}}}],["practic",{"_index":216,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["practices.html",{"_index":221,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{}}}],["pragma",{"_index":2905,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["precis",{"_index":1566,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["precisionceil",{"_index":1573,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["precisionfloor",{"_index":1571,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["precisionround",{"_index":1565,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["prevent",{"_index":3282,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["preventextens",{"_index":1002,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["preview",{"_index":626,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["preview.jpg",{"_index":1616,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["preview.png是預覽圖片，比較小，加載很快，而且很多圖片都共用這個preview.png，加載一次即可。待頁面下拉，圖片顯示出來時，再去替換src",{"_index":1613,"title":{},"body":{"performance.html":{}}}],["price",{"_index":892,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#屬性特徵":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["primit",{"_index":288,"title":{},"body":{"asynchronous.html":{}}}],["private&#xff1a;&#x5c08;&#x7528;&#x65bc;&#x500b;&#x4eba;&#x7684;&#x7de9;&#x5b58;&#xff0c;&#x4e2d;&#x9593;&#x4ee3;&#x7406;&#x3001;cdn",{"_index":2953,"title":{},"body":{"http/caching.html#強緩存":{}}}],["private：專用於個人的緩存，中間代理、cdn",{"_index":2910,"title":{},"body":{"http/caching.html":{}}}],["problem",{"_index":1058,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["produc",{"_index":644,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["product",{"_index":2448,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["program",{"_index":2582,"title":{},"body":{"cases/if.html":{}}}],["project",{"_index":593,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["promis",{"_index":116,"title":{"api/promise.html#Promise":{},"global/promise.html":{}},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{}}}],["promise.al",{"_index":2694,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["promise.catch(onreject",{"_index":2337,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{}}}],["promise.rac",{"_index":2860,"title":{},"body":{"global/promise.html":{}}}],["promise.then",{"_index":122,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{}}}],["promise.then(onfulfil",{"_index":2336,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{}}}],["promise​.al",{"_index":2833,"title":{},"body":{"global/promise.html":{}}}],["propagating_right_shift",{"_index":435,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["properti",{"_index":346,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#屬性特徵":{},"url.html":{}}}],["propos",{"_index":3066,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["props.task",{"_index":2293,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["proto",{"_index":726,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["protocol",{"_index":1840,"title":{},"body":{"url.html":{}}}],["prototyp",{"_index":950,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{}}}],["prototype.getfulld",{"_index":962,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["prototype.lasttext",{"_index":957,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["prototype.push.bind(a",{"_index":1955,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["prototype.secondpow",{"_index":959,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{}}}],["provid",{"_index":3274,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["provide.decorator('$anchorscrol",{"_index":3277,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["provision",{"_index":2105,"title":{"F2E/token.html#provisional-headers-are-shown":{}},"body":{"F2E/token.html":{},"F2E/token.html#provisional-headers-are-shown":{}}}],["proxysett",{"_index":1039,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["ps",{"_index":2776,"title":{},"body":{"global/function.html":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["public",{"_index":2921,"title":{},"body":{"http/caching.html":{}}}],["public&#xff1a;&#x97ff;&#x61c9;&#x53ef;&#x4ee5;&#x88ab;&#x4e2d;&#x9593;&#x4ee3;&#x7406;&#x3001;cdn",{"_index":2955,"title":{},"body":{"http/caching.html#強緩存":{}}}],["public：響應可以被中間代理、cdn",{"_index":2911,"title":{},"body":{"http/caching.html":{}}}],["push(examplevalu",{"_index":2571,"title":{},"body":{"cases/arr.html":{}}}],["push、pop、shift、unshift、reserve、sort、splic",{"_index":2266,"title":{},"body":{"array/array_insert.html":{}}}],["put",{"_index":2763,"title":{},"body":{"cases/str.html":{}}}],["put&#xff1a;&#x66f4;&#x65b0;&#xff08;update&#xff09",{"_index":228,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["put：更新（upd",{"_index":188,"title":{},"body":{"RESTfulAPI.html":{}}}],["pwd",{"_index":142,"title":{},"body":{"RegExp.html":{}}}],["qa",{"_index":787,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["queri",{"_index":2097,"title":{},"body":{"F2E/GraphQL.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["queryselector",{"_index":1061,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["querystr",{"_index":49,"title":{},"body":{"ajax.html":{}}}],["queue",{"_index":3288,"title":{"string/queue.html":{}},"body":{"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["queue.join",{"_index":3325,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["queue.unshift(word",{"_index":3322,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["queuer",{"_index":2297,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["queuers).fil",{"_index":2300,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["quickli",{"_index":596,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["quotes.map",{"_index":3071,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["r\\t\\n\\f",{"_index":160,"title":{},"body":{"RegExp.html":{}}}],["raact",{"_index":2442,"title":{},"body":{"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["radix",{"_index":1975,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["radix&#x7684;&#x503c;&#x70ba;2&#xff0c;&#x9019;&#x5c31;&#x610f;&#x5473;&#x8457;&#x5b57;&#x7b26;&#x4e32;&#x5c07;&#x88ab;&#x89e3;&#x6790;&#x6210;&#x5b57;&#x7bc0;&#x6578;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x50c5;&#x50c5;&#x5305;&#x542b;&#x6578;&#x503c;0&#x548c;1&#x3002;parseint&#x7684;&#x898f;&#x7bc4;&#x6307;&#x51fa;&#xff0c;&#x5b83;&#x50c5;&#x5617;&#x8a66;&#x5206;&#x6790;&#x7b2c;&#x4e00;&#x500b;&#x5b57;&#x7b26;&#x7684;&#x5de6;&#x5074;&#x3002;&#x9019;&#x500b;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x7b2c;&#x4e00;&#x500b;&#x5b57;&#x7b26;&#x662f;&#x201c;3&#x201d;&#xff0c;&#x5b83;&#x4e26;&#x4e0d;&#x662f;&#x57fa;&#x790e;&#x57fa;&#x6578;2&#x7684;&#x4e00;&#x500b;&#x6709;&#x6548;&#x6578;&#x5b57;&#x3002;&#x6240;&#x4ee5;&#x9019;&#x500b;&#x5b50;&#x5b57;&#x7b26;&#x4e32;&#x5c07;&#x88ab;&#x89e3;&#x6790;&#x70ba;&#x7a7a;&#x3002;&#x5982;&#x679c;&#x5b50;&#x5b57;&#x7b26;&#x4e32;&#x88ab;&#x89e3;&#x6790;&#x6210;&#x7a7a;&#x4e86;&#xff0c;&#x51fd;&#x6578;&#x5c07;&#x8fd4;&#x56de;&#x70ba;nan&#x3002",{"_index":2561,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["radix的值為2，這就意味著字符串將被解析成字節數，也就是僅僅包含數值0和1。parseint的規範指出，它僅嘗試分析第一個字符的左側。這個字符串的第一個字符是“3”，它並不是基礎基數2的一個有效數字。所以這個子字符串將被解析為空。如果子字符串被解析成空了，函數將返回為nan",{"_index":2538,"title":{},"body":{"array/filter.html":{}}}],["rail",{"_index":2169,"title":{},"body":{"F2E/cookie.html":{}}}],["rails&#x4f86;&#x8aaa;&#xff0c",{"_index":2259,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["rd",{"_index":786,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{}}}],["re",{"_index":123,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"RegExp.html#match":{},"asynchronous.html":{},"asynchronous.html#異步":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/map.html":{},"array/map.html#map":{},"cases/delay.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/object​_keys.html":{}}}],["react",{"_index":2594,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["reactivesett",{"_index":1040,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["read",{"_index":345,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#屬性特徵":{}}}],["real",{"_index":2124,"title":{},"body":{"F2E/header.html":{}}}],["realsrc",{"_index":1614,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["realsrc&apo",{"_index":1682,"title":{},"body":{"performance.html#懶加載":{}}}],["rect",{"_index":3040,"title":{},"body":{"object/create.html":{}}}],["rect.mov",{"_index":3042,"title":{},"body":{"object/create.html":{}}}],["rectangl",{"_index":3035,"title":{},"body":{"object/create.html":{}}}],["rectangle.prototyp",{"_index":3037,"title":{},"body":{"object/create.html":{}}}],["rectangle.prototype.constructor",{"_index":3039,"title":{},"body":{"object/create.html":{}}}],["red",{"_index":2662,"title":{},"body":{"function/factory​_factory.html":{}}}],["reduc",{"_index":347,"title":{"array/array_methods.html#reduce":{}},"body":{"arrowFunction.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["ref",{"_index":65,"title":{},"body":{"ajax.html":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/typeof.html#null":{}}}],["refer",{"_index":212,"title":{"RESTfulAPI.html#References":{},"operators.html#references":{},"F2E/GraphQL.html#References":{},"global/function.html#References":{},"http/caching.html#References":{},"string/queue.html#References":{}},"body":{"RESTfulAPI.html":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"scope.html":{},"operators.html":{},"operators.html#Increment":{},"this.html":{},"this.html#bind-apply-call":{},"F2E/GraphQL.html":{},"F2E/header.html":{},"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"global/function.html":{},"global/promise.html":{},"http/caching.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"string/queue.html":{}}}],["referenceerror",{"_index":658,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#箭頭函數":{},"scope.html":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"variable.html":{},"variable.html#Hoisting":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/let.html":{},"statements/let.html#let":{},"statements/block.html":{}}}],["referr",{"_index":2116,"title":{},"body":{"F2E/header.html":{}}}],["reg",{"_index":143,"title":{},"body":{"RegExp.html":{}}}],["reg.test(pwd",{"_index":146,"title":{},"body":{"RegExp.html":{}}}],["reg1",{"_index":127,"title":{},"body":{"RegExp.html":{}}}],["regexp",{"_index":124,"title":{"RegExp.html":{}},"body":{}}],["reject",{"_index":121,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"api/promise.html":{},"api/promise.html#Promise":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{}}}],["reject&#xff0c;&#x6240;&#x4ee5;&#x6b64;&#x6bb5;&#x4e0d;&#x57f7;&#x884c",{"_index":2388,"title":{},"body":{"api/promise.html#鏈接":{}}}],["remot",{"_index":2121,"title":{},"body":{"F2E/header.html":{}}}],["removefirst",{"_index":3311,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["removelast",{"_index":3313,"title":{},"body":{"string/queue.html":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["replac",{"_index":176,"title":{"cases/replace.html":{}},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["replacestr",{"_index":2764,"title":{},"body":{"cases/str.html":{}}}],["repositori",{"_index":618,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["request",{"_index":102,"title":{},"body":{"ajax.html":{},"F2E/GraphQL.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["request的head",{"_index":100,"title":{},"body":{"ajax.html":{}}}],["request）的頭信息裡面，設計了一個refer",{"_index":2117,"title":{},"body":{"F2E/header.html":{}}}],["requir",{"_index":599,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["res.map",{"_index":2591,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["res.set",{"_index":2918,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["res.then",{"_index":2345,"title":{},"body":{"api/promise.html":{},"api/promise.html#鏈接":{}}}],["resan",{"_index":2619,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["resolv",{"_index":118,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"api/promise.html":{},"api/promise.html#Promise":{},"cases/delay.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{}}}],["resolve,reject",{"_index":117,"title":{},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{}}}],["resourc",{"_index":91,"title":{},"body":{"ajax.html":{}}}],["respons",{"_index":30,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"http/caching.html":{},"http/caching.html#強緩存":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["rest",{"_index":183,"title":{"RESTfulAPI.html":{}},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{},"F2E/GraphQL.html":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["result",{"_index":341,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"index.html":{},"index.html#Getting-Started":{},"array/array_methods.html":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/filter.html":{},"cases/if.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"global/promise.html":{}}}],["result.json",{"_index":2690,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["retarr",{"_index":2637,"title":{},"body":{"cases/replace.html":{}}}],["retarr.push",{"_index":2641,"title":{},"body":{"cases/replace.html":{}}}],["retriev",{"_index":3266,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["return",{"_index":145,"title":{},"body":{"RegExp.html":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"closures.html#傳多個函數":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"num.html":{},"num.html#取值":{},"num.html#補數字":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"scope.html":{},"operators.html":{},"operators.html#Increment":{},"this.html":{},"this.html#簡易呼叫":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"api/promise.html":{},"api/promise.html#鏈接":{},"array/array_methods.html":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"array/filter.html":{},"cases/arr.html":{},"array/map.html":{},"array/map.html#map":{},"array/fill.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"cases/str.html":{},"global/promise.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"statements/block.html":{},"string/split.html":{},"string/split.html#split":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{},"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["revalid",{"_index":2912,"title":{},"body":{"http/caching.html":{}}}],["revalidate&#xff1a;&#x5728;&#x7de9;&#x5b58;&#x904e;&#x671f;&#x524d;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#xff0c;&#x904e;&#x671f;&#x5f8c;&#x5fc5;&#x9808;&#x5411;&#x670d;&#x52d9;&#x5668;&#x9a57;&#x8b49",{"_index":2957,"title":{},"body":{"http/caching.html#強緩存":{}}}],["reverse().join",{"_index":3329,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["reverseword",{"_index":3315,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["rh",{"_index":662,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["right",{"_index":3316,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["ring",{"_index":2454,"title":{},"body":{"array/array_methods.html":{}}}],["rings&apo",{"_index":2491,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["round(numb",{"_index":1570,"title":{},"body":{"num.html":{},"num.html#取值":{}}}],["rout",{"_index":507,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"F2E/GraphQL.html":{}}}],["rrefer",{"_index":1643,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["run",{"_index":632,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["s",{"_index":159,"title":{},"body":{"RegExp.html":{},"index.html":{},"index.html#Getting-Started":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["s+/g",{"_index":3328,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["s.charat(left",{"_index":3319,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["s.charat(right",{"_index":3320,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["s.length",{"_index":3317,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["s.trim().replac",{"_index":3327,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["safari",{"_index":3200,"title":{},"body":{"statements/block.html":{}}}],["sampl",{"_index":1851,"title":{},"body":{"url.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["save",{"_index":1014,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["save(pric",{"_index":1013,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["sayhello",{"_index":2778,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["schema",{"_index":3248,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["scoop",{"_index":2663,"title":{},"body":{"function/factory​_factory.html":{}}}],["scope",{"_index":417,"title":{"scope.html":{}},"body":{"closures.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"scope.html":{}}}],["script",{"_index":87,"title":{},"body":{"ajax.html":{},"es6.html":{},"es6.html#Module-的加载实现":{},"performance.html":{},"performance.html#懶加載":{}}}],["script標籤,settimeout,setinterval,setimmediate,requestanimationfram",{"_index":2857,"title":{},"body":{"global/promise.html":{}}}],["seal",{"_index":1003,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["sec",{"_index":2780,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["second",{"_index":1052,"title":{},"body":{"core.html":{}}}],["see",{"_index":203,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#狀態碼":{},"index.html":{},"index.html#Getting-Started":{}}}],["seed",{"_index":592,"title":{"index.html":{},"index.html#hexo-theme-doc-seed":{}},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{}}}],["seed.git",{"_index":622,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["select_titl",{"_index":2311,"title":{},"body":{"array/array_insert.html":{}}}],["self",{"_index":922,"title":{},"body":{"core.html":{},"core.html#this":{},"global/function.html":{},"global/function.html#bind":{}}}],["self.nam",{"_index":2788,"title":{},"body":{"global/function.html":{},"global/function.html#bind":{}}}],["semicolon",{"_index":667,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["server",{"_index":627,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{},"F2E/GraphQL.html":{},"F2E/cookie.html":{}}}],["server&#x7aef",{"_index":2245,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["server收到了這個request",{"_index":105,"title":{},"body":{"ajax.html":{}}}],["session",{"_index":2104,"title":{},"body":{"F2E/token.html":{},"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["session&#x53c8;&#x662f;&#x4ec0;&#x9ebc;&#x5462",{"_index":2224,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["session&#x6709;&#x9ede;&#x985e;&#x4f3c;&#x6703;&#x8a71;&#x7684;&#x6982;&#x5ff5;&#xff0c;session&#x6a5f;&#x5236;&#x662f;&#x4e00;&#x7a2e;&#x670d;&#x52d9;&#x5668;&#x7aef;&#x7684;&#x6a5f;&#x5236;&#x3002",{"_index":2228,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["session並不是一個很明確實體的機制，算是一個概念，只要符合概念所實作出來的功能都可以被叫做sess",{"_index":2171,"title":{},"body":{"F2E/cookie.html":{}}}],["session也會消失的錯覺，但本質上並非如此，就像會員卡，除非你主動提出銷卡，否則店家不會刪除顧客資料，這件事情對session來說也如出一轍，除非通知server刪除session，否則serv",{"_index":2161,"title":{},"body":{"F2E/cookie.html":{}}}],["session實現方式是由cooki",{"_index":2170,"title":{},"body":{"F2E/cookie.html":{}}}],["session有點類似會話的概念，sess",{"_index":2151,"title":{},"body":{"F2E/cookie.html":{}}}],["session機制都使用會話cookie來保存sess",{"_index":2162,"title":{},"body":{"F2E/cookie.html":{}}}],["session的時候，服務器首先檢查這個客戶端的請求裡是否有包含了sess",{"_index":2154,"title":{},"body":{"F2E/cookie.html":{}}}],["session的機制都被框架所實現了，以rubi",{"_index":2168,"title":{},"body":{"F2E/cookie.html":{}}}],["set",{"_index":1012,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"array/array_method.html":{}}}],["sethead",{"_index":2916,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["setinterv",{"_index":279,"title":{},"body":{"asynchronous.html":{},"asynchronous.html#setTimeout":{}}}],["setter",{"_index":1008,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["setter改變tot",{"_index":1018,"title":{},"body":{"core.html":{}}}],["settimeout",{"_index":115,"title":{"asynchronous.html#setTimeout":{}},"body":{"ajax.html":{},"asynchronous.html":{},"asynchronous.html#異步":{},"asynchronous.html#setTimeout":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#this":{},"performance.html":{},"performance.html#事件節流":{},"this.html":{},"this.html#bind-apply-call":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{}}}],["settimeout()&#x3002",{"_index":311,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["settimeout()內部回調運行的時候，主進程已經運行完畢了，此時i=5，所以輸出5",{"_index":278,"title":{},"body":{"asynchronous.html":{}}}],["settimeout(resolv",{"_index":2646,"title":{},"body":{"cases/delay.html":{},"global/promise.html":{}}}],["settimeout包裝成promise、等待所有settimout的callback",{"_index":2861,"title":{},"body":{"global/promise.html":{}}}],["sevendaysago",{"_index":2875,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["sevendaysago).toisostring().substr",{"_index":2877,"title":{},"body":{"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["shallow",{"_index":451,"title":{},"body":{"copy.html":{}}}],["shape",{"_index":3032,"title":{},"body":{"object/create.html":{}}}],["shape.cal",{"_index":3036,"title":{},"body":{"object/create.html":{}}}],["shape.prototype.mov",{"_index":3033,"title":{},"body":{"object/create.html":{}}}],["share",{"_index":92,"title":{},"body":{"ajax.html":{}}}],["shim",{"_index":1037,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["show",{"_index":605,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["shown",{"_index":2107,"title":{"F2E/token.html#provisional-headers-are-shown":{}},"body":{"F2E/token.html":{},"F2E/token.html#provisional-headers-are-shown":{}}}],["shown&#x7684;&#x8fc7;&#x7a0b",{"_index":2109,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["side",{"_index":657,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"F2E/GraphQL.html":{}}}],["signedcooki",{"_index":2166,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["simpl",{"_index":482,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#this":{}}}],["size",{"_index":947,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{},"string/queue.html":{},"string/queue.html#數據結構：隊列（Queue）":{}}}],["skeleton",{"_index":594,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["slice",{"_index":1588,"title":{},"body":{"num.html":{},"num.html#補數字":{}}}],["slice和substr",{"_index":1582,"title":{},"body":{"num.html":{}}}],["small",{"_index":983,"title":{},"body":{"core.html":{}}}],["social",{"_index":2138,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["solut",{"_index":2526,"title":{},"body":{"array/object_to_array.html":{}}}],["someon",{"_index":651,"title":{},"body":{"core.html":{}}}],["someth",{"_index":3161,"title":{},"body":{"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{}}}],["son",{"_index":841,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["sort",{"_index":2426,"title":{"array/array_methods.html#sort":{}},"body":{"array/array_methods.html":{}}}],["sourc",{"_index":495,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#this":{}}}],["source.constructor",{"_index":501,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["source[key",{"_index":504,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["span",{"_index":1734,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["specif",{"_index":3263,"title":{"swagger/to-html.html#Info-for-a-specific-pet":{}},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["splice",{"_index":2276,"title":{"array/splice.html":{}},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列指定位置":{}}}],["split",{"_index":54,"title":{"string/split.html#split":{}},"body":{"ajax.html":{},"string/split.html":{},"string/split.html#split":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["spread",{"_index":2271,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#拼接兩個陣列":{}}}],["src",{"_index":371,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{},"performance.html":{},"performance.html#懶加載":{}}}],["src=./foo.js/script",{"_index":377,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{}}}],["src=xxx",{"_index":84,"title":{},"body":{"ajax.html":{}}}],["ssr",{"_index":1611,"title":{},"body":{"performance.html":{},"performance.html#優化原則和方向":{}}}],["stage",{"_index":3064,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["start",{"_index":610,"title":{"index.html#Getting-Started":{}},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["stat",{"_index":2917,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["stateless",{"_index":2128,"title":{},"body":{"F2E/cookie.html":{}}}],["statement",{"_index":663,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["statement&#xff09;&#xff08;&#x8a73;&#x60c5;&#x67e5;&#x770b;&#x51fd;&#x6578;&#x8072;&#x660e;&#xff09;&#xff0c;&#x4e26;&#x4e14;&#x5169;&#x8005;&#x64c1;&#x6709;&#x5e7e;&#x4e4e;&#x76f8;&#x540c;&#x7684;&#x8a9e;&#x6cd5;&#x3002;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x8207;&#x51fd;&#x6578;&#x8072;&#x660e;&#x7684;&#x6700;&#x4e3b;&#x8981;&#x5340;&#x5225;&#x662f;&#x51fd;&#x6578;&#x540d;&#x7a31;&#xff08;funct",{"_index":3089,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["statementfn",{"_index":853,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["statement）（詳情查看函數聲明），並且兩者擁有幾乎相同的語法。函數表達式與函數聲明的最主要區別是函數名稱（funct",{"_index":3081,"title":{},"body":{"operators/function.html":{}}}],["statu",{"_index":31,"title":{},"body":{"ajax.html":{},"cases/delay.html":{},"object/object​_keys.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["status=1&amp;type=1",{"_index":3220,"title":{},"body":{"statements/if...else.html":{}}}],["status=1&amp;type=2",{"_index":3221,"title":{},"body":{"statements/if...else.html":{}}}],["status=2&amp;type=1",{"_index":3222,"title":{},"body":{"statements/if...else.html":{}}}],["status=2&amp;type=2",{"_index":3223,"title":{},"body":{"statements/if...else.html":{}}}],["statusr",{"_index":3057,"title":{},"body":{"object/object​_keys.html":{}}}],["store",{"_index":2909,"title":{},"body":{"http/caching.html":{},"http/caching.html#強緩存":{}}}],["storemoney",{"_index":891,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{}}}],["storemoney()(100",{"_index":894,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["str",{"_index":824,"title":{},"body":{"core.html":{},"cases/replace.html":{},"cases/str.html":{}}}],["str.charat",{"_index":2759,"title":{},"body":{"cases/str.html":{}}}],["str.replac",{"_index":2638,"title":{},"body":{"cases/replace.html":{},"cases/str.html":{}}}],["str.slice",{"_index":2761,"title":{},"body":{"cases/str.html":{}}}],["stranger",{"_index":809,"title":{},"body":{"core.html":{}}}],["strict",{"_index":937,"title":{},"body":{"core.html":{},"scope.html":{},"this.html":{}}}],["strict&#39",{"_index":1833,"title":{},"body":{"scope.html":{}}}],["strict&apo",{"_index":1427,"title":{},"body":{"core.html#this":{},"core.html#屬性特徵":{},"this.html#簡易呼叫":{}}}],["string",{"_index":34,"title":{"operators.html#Adding-Strings-and-Numbers":{},"cases/str.html":{}},"body":{"ajax.html":{},"RegExp.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#this":{},"core.html#new":{},"operators.html":{},"variable.html":{},"variable.html#動態型別":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["string&#x578b;&#x5225;&#x76f8;&#x52a0",{"_index":1201,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["string.prototype.match",{"_index":169,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["string.prototype.replac",{"_index":2635,"title":{},"body":{"cases/replace.html":{}}}],["string.prototype.split",{"_index":3201,"title":{},"body":{"string/split.html":{},"string/split.html#split":{}}}],["stringify(famili",{"_index":818,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["stringify(obj1",{"_index":519,"title":{},"body":{"copy.html":{},"copy.html#轉成-JSON-再轉回來":{}}}],["string​.prototype​.replac",{"_index":2762,"title":{},"body":{"cases/str.html":{}}}],["string​.prototype​.tolower​cas",{"_index":2757,"title":{},"body":{"cases/str.html":{}}}],["structur",{"_index":600,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["style",{"_index":1060,"title":{},"body":{"core.html":{},"core.html#ES6-Airbnb":{}}}],["substr",{"_index":177,"title":{},"body":{"RegExp.html":{},"RegExp.html#match":{}}}],["success",{"_index":2338,"title":{},"body":{"api/promise.html":{},"api/promise.html#Promise":{},"api/promise.html#鏈接":{}}}],["sum",{"_index":338,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["sum(a,b",{"_index":698,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["super",{"_index":2676,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"object/create.html":{}}}],["swagger",{"_index":3246,"title":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#undefined":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["swaggerui",{"_index":3272,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["symbol",{"_index":3070,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["syntax",{"_index":640,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#ES6-Airbnb":{}}}],["syntaxerror",{"_index":3104,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["t",{"_index":2846,"title":{},"body":{"global/promise.html":{}}}],["t.then",{"_index":2848,"title":{},"body":{"global/promise.html":{}}}],["tabl",{"_index":721,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["tag",{"_index":3260,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["tag/if",{"_index":2931,"title":{},"body":{"http/caching.html":{},"http/caching.html#協商緩存":{}}}],["target",{"_index":573,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["target.nodenam",{"_index":575,"title":{},"body":{"event.html":{},"event.html#代理":{}}}],["targetobj",{"_index":500,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["targetobj[key",{"_index":505,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["task",{"_index":2839,"title":{},"body":{"global/promise.html":{}}}],["task(resolv",{"_index":2844,"title":{},"body":{"global/promise.html":{}}}],["tasks.length",{"_index":2847,"title":{},"body":{"global/promise.html":{}}}],["tasks.map",{"_index":2843,"title":{},"body":{"global/promise.html":{}}}],["tasks[1",{"_index":2852,"title":{},"body":{"global/promise.html":{}}}],["tasks[2",{"_index":2853,"title":{},"body":{"global/promise.html":{}}}],["tasks[i",{"_index":2851,"title":{},"body":{"global/promise.html":{}}}],["tasksarr",{"_index":2292,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["tasksarr.concat(waitingarr",{"_index":2303,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["tasksarr.length",{"_index":2296,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["tdz",{"_index":1049,"title":{},"body":{"core.html":{},"core.html#const":{}}}],["team",{"_index":784,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#this":{}}}],["ternari",{"_index":2585,"title":{},"body":{"cases/if.html":{}}}],["test",{"_index":3196,"title":{},"body":{"statements/block.html":{}}}],["text",{"_index":1639,"title":{},"body":{"performance.html":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"array/array_insert.html":{},"array/array_insert.html#example":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{}}}],["text/javascript",{"_index":1618,"title":{},"body":{"performance.html":{},"performance.html#懶加載":{}}}],["textarea",{"_index":1638,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["textarea.addeventlisten",{"_index":1641,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["theme",{"_index":590,"title":{"index.html":{},"index.html#hexo-theme-doc-seed":{}},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{}}}],["then&#x3001;catch",{"_index":2377,"title":{},"body":{"api/promise.html#鏈接":{}}}],["then、catch",{"_index":2341,"title":{},"body":{"api/promise.html":{}}}],["this&#x300d",{"_index":2037,"title":{},"body":{"this.html#bind-apply-call":{}}}],["this&#x6240;&#x6307;&#x5411;&#x7684;window&#x6703;&#x8b8a;undefin",{"_index":1429,"title":{},"body":{"core.html#this":{}}}],["this(指向class",{"_index":2787,"title":{},"body":{"global/function.html":{}}}],["this.array",{"_index":350,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{}}}],["this.nam",{"_index":1950,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["this.valu",{"_index":1926,"title":{},"body":{"this.html":{},"this.html#簡易呼叫":{}}}],["thisarg",{"_index":1942,"title":{},"body":{"this.html":{},"this.html#Callback":{}}}],["this所指向的window會變undefin",{"_index":938,"title":{},"body":{"core.html":{}}}],["throw",{"_index":343,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["thursday",{"_index":2700,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["tigger",{"_index":2896,"title":{},"body":{"glossary/hoisting.html":{}}}],["time",{"_index":2706,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["timeoutid",{"_index":1640,"title":{},"body":{"performance.html":{},"performance.html#事件節流":{}}}],["timer函數包裹了起來，並用j捕獲了每次循環時的i",{"_index":285,"title":{},"body":{"asynchronous.html":{}}}],["timestamp",{"_index":2651,"title":{},"body":{"cases/delay.html":{}}}],["timestampiso",{"_index":2611,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["tmp",{"_index":2516,"title":{},"body":{"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{}}}],["tmp.length",{"_index":2517,"title":{},"body":{"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{}}}],["tmp.splice",{"_index":2519,"title":{},"body":{"array/splice.html":{},"array/splice.html#分割指定长度的元素数组":{}}}],["today",{"_index":969,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["todo",{"_index":1624,"title":{},"body":{"performance.html":{},"performance.html#DOM-查詢做緩存":{}}}],["tofix",{"_index":1577,"title":{},"body":{"num.html":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["tofixed&#x6307;&#x5b9a;&#x4fdd;&#x7559;&#x5e7e;&#x4f4d;&#x5c0f;&#x6578",{"_index":1600,"title":{},"body":{"num.html#補數字":{}}}],["token",{"_index":638,"title":{"F2E/token.html":{}},"body":{"core.html":{},"F2E/token.html":{},"operators/typeof.html":{},"operators/typeof.html#null":{}}}],["tolowercas",{"_index":2760,"title":{},"body":{"cases/str.html":{}}}],["top",{"_index":2680,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["toprecis",{"_index":1726,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["tostr",{"_index":835,"title":{},"body":{"core.html":{}}}],["total",{"_index":1011,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{}}}],["totalarr",{"_index":2302,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["transact",{"_index":2608,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["transactionhash",{"_index":2601,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["transactionsarr",{"_index":2609,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["transactionsarr.push",{"_index":2617,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["transform",{"_index":2522,"title":{},"body":{"array/object_to_array.html":{}}}],["translat",{"_index":2632,"title":{},"body":{"array/fill.html":{}}}],["tree",{"_index":641,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{}}}],["tri",{"_index":2648,"title":{},"body":{"cases/delay.html":{}}}],["trifl",{"_index":2671,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["trifle.prototyp",{"_index":2673,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["true",{"_index":154,"title":{},"body":{"RegExp.html":{},"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#this":{},"core.html#new":{},"core.html#屬性特徵":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"variable.html":{},"variable.html#動態型別":{},"array/array_methods.html":{},"array/array_methods.html#filter":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/filter.html":{},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/if.html":{},"cases/replace.html":{},"cases/delay.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"http/caching.html":{},"http/caching.html#協商緩存":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"statements/let.html":{},"statements/let.html#let":{}}}],["true&#xff0c;&#x56e0;&#x70ba;&#x7269;&#x4ef6;&#x7684;&#x8a18;&#x61b6;&#x9ad4;&#x5df2;&#x7d93;&#x5b58;&#x5728;&#x4e86",{"_index":1189,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["truthi",{"_index":722,"title":{"core.html#Truthy":{}},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["truthy&#xff08;&#x771f;&#x503c;&#xff09",{"_index":1224,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["truthyvalu",{"_index":2568,"title":{},"body":{"cases/arr.html":{}}}],["ts",{"_index":2595,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["tuesday",{"_index":2698,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["ture",{"_index":700,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["tw/docs/glossary/hoist",{"_index":2893,"title":{"glossary/hoisting.html":{}},"body":{}}],["tw/docs/http/access_control_cor",{"_index":112,"title":{},"body":{"ajax.html":{}}}],["tw/docs/web/javascript/reference/global_objects/array/foreach",{"_index":1938,"title":{},"body":{"this.html":{}}}],["tw/docs/web/javascript/reference/global_objects/array/foreach#&#x8a9e;&#x6cd5",{"_index":2006,"title":{},"body":{"this.html#Callback":{}}}],["two",{"_index":2565,"title":{},"body":{"cases/arr.html":{}}}],["type",{"_index":289,"title":{},"body":{"asynchronous.html":{},"es6.html":{},"es6.html#Module-的加载实现":{},"performance.html":{},"performance.html#懶加載":{},"F2E/GraphQL.html":{},"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{},"object/object​_keys.html":{},"statements/if...else.html":{},"statements/if...else.html#條件組合的問題":{}}}],["type&#xff09;&#x7684;&#x53c3;&#x6578;&#x50b3;&#x905e;&#x662f",{"_index":329,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["type=modul",{"_index":376,"title":{},"body":{"es6.html":{},"es6.html#Module-的加载实现":{}}}],["typeerror",{"_index":344,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#屬性特徵":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#Closure":{},"glossary/hoisting.html":{},"operators/function.html":{},"operators/function.html#函數表達式":{}}}],["typeof",{"_index":393,"title":{"operators/typeof.html#typeof":{}},"body":{"closures.html":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#轉成-JSON-再轉回來":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"variable.html":{},"variable.html#動態型別":{},"glossary/hoisting.html":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/typeof.html#null":{},"statements/block.html":{}}}],["ui",{"_index":3269,"title":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}},"body":{"swagger/ui.html":{}}}],["uncaught",{"_index":650,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#箭頭函數":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/typeof.html#null":{}}}],["undefin",{"_index":348,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"closures.html":{},"copy.html":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#this":{},"core.html#繼承":{},"core.html#箭頭函數":{},"scope.html":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"this.html":{},"this.html#簡易呼叫":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"array/array_methods.html":{},"array/array_methods.html#find":{},"array/filter.html":{},"global/function.html":{},"global/function.html#為什麼我們需要-apply-bind-call-？":{},"global/function.html#bind":{},"glossary/hoisting.html":{},"object/create.html":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{}}}],["unexpect",{"_index":3105,"title":{},"body":{"operators/typeof.html":{},"operators/typeof.html#null":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["uniquelist",{"_index":2114,"title":{},"body":{"array/array_method.html":{}}}],["unshift",{"_index":2305,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#example":{}}}],["until",{"_index":2626,"title":{},"body":{"array/fill.html":{}}}],["unwrap",{"_index":3069,"title":{},"body":{"operators/destructuring_assignment.html":{},"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["up",{"_index":631,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["updat",{"_index":1930,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["url",{"_index":46,"title":{"url.html":{},"cases/str.html#url":{}},"body":{"ajax.html":{},"RESTfulAPI.html":{},"RESTfulAPI.html#動詞":{},"F2E/header.html":{},"cases/str.html":{},"cases/str.html#url":{}}}],["url&#x3002;&#x5b83;&#x8207;302&#x548c;307&#x7684;&#x542b;&#x7fa9;&#x4e00;&#x6a23;&#xff0c;&#x4e5f;&#x662f;&#x201d;&#x66ab;&#x6642;&#x91cd;&#x5b9a;&#x5411;&#x201d;&#xff0c;&#x5340;&#x5225;&#x5728;&#x65bc;302&#x548c;307&#x7528;&#x65bc;get&#x8acb;&#x6c42;&#xff0c;&#x800c;303&#x7528;&#x65bc;post&#x3001;put&#x548c;delete&#x8acb;&#x6c42;&#x3002;&#x6536;&#x5230;303&#x4ee5;&#x5f8c;&#xff0c;&#x700f;&#x89bd;&#x5668;&#x4e0d;&#x6703;&#x81ea;&#x52d5;&#x8df3;&#x8f49;&#xff0c;&#x800c;&#x6703;&#x8b93;&#x7528;&#x6236;&#x81ea;&#x5df1;&#x6c7a;&#x5b9a;&#x4e0b;&#x4e00;&#x6b65;&#x600e;&#x9ebc;&#x8fa6;&#x3002",{"_index":259,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["url&#x3002;&#x9019;&#x7a2e;&#x65b9;&#x6cd5;&#x53eb;&#x505a",{"_index":266,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["url&#xff0c;&#x5c31;&#x53ef;&#x4ee5;&#x767c;&#x73fe;&#x5176;&#x4ed6;&#x7684",{"_index":265,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["url&#xff0c;&#x6bd4;&#x5982",{"_index":240,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["url&#xff0c;&#x6bd4;&#x5982;&#x7372;&#x53d6;&#x67d0;&#x500b;&#x4f5c;&#x8005;&#x7684;&#x67d0;&#x4e00;&#x985e;&#x6587;&#x7ae0;&#x3002",{"_index":245,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["url.indexof",{"_index":50,"title":{},"body":{"ajax.html":{}}}],["url.split",{"_index":53,"title":{},"body":{"ajax.html":{}}}],["url。一是功能url，即有的url",{"_index":2118,"title":{},"body":{"F2E/header.html":{}}}],["url。它與302和307的含義一樣，也是”暫時重定向”，區別在於302和307用於get請求，而303用於post、put和delete請求。收到303",{"_index":204,"title":{},"body":{"RESTfulAPI.html":{}}}],["us",{"_index":489,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"core.html":{},"core.html#ES6-Airbnb":{},"scope.html":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"this.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["us/docs/web/javascript/closur",{"_index":390,"title":{},"body":{"closures.html":{}}}],["us/docs/web/javascript/reference/operators/bitwise_operators#%3e%3e_(sign",{"_index":434,"title":{},"body":{"closures.html":{},"closures.html#傳多個函數":{}}}],["usag",{"_index":606,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["user",{"_index":218,"title":{},"body":{"RESTfulAPI.html":{},"RESTfulAPI.html#References":{},"index.html":{},"index.html#More-Informations":{},"object/object​_keys.html":{}}}],["userid",{"_index":61,"title":{},"body":{"ajax.html":{}}}],["userid=jacob.hsu",{"_index":57,"title":{},"body":{"ajax.html":{}}}],["usersr",{"_index":3058,"title":{},"body":{"object/object​_keys.html":{}}}],["utils.j",{"_index":479,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["v",{"_index":1735,"title":{},"body":{"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"array/map.html":{},"array/map.html#map":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["v,i",{"_index":2592,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["v.add_transactionhash",{"_index":2622,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["v.functionmeta.param",{"_index":2614,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["v.functionmeta.params.length",{"_index":2613,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["v.timestampiso",{"_index":2612,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["v.transactionhash",{"_index":2602,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["v.valu",{"_index":2621,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["val",{"_index":1077,"title":{},"body":{"core.html":{},"core.html#箭頭函數":{}}}],["valid",{"_index":3268,"title":{},"body":{"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{}}}],["valu",{"_index":291,"title":{},"body":{"asynchronous.html":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#函式工廠":{},"core.html#屬性特徵":{},"scope.html":{},"this.html":{},"this.html#簡易呼叫":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"array/array_insert.html":{},"array/array_insert.html#example":{},"array/object_to_array.html":{},"array/map.html":{},"array/map.html#map":{},"global/promise.html":{},"statements/for.html":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{}}}],["value&#xff09",{"_index":331,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["value1",{"_index":2073,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["value2",{"_index":2075,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["value3",{"_index":2077,"title":{},"body":{"variable.html":{},"variable.html#變數的作用域在函式內":{}}}],["value=1",{"_index":1824,"title":{},"body":{"scope.html":{}}}],["values.map",{"_index":2610,"title":{},"body":{"array/map.html":{},"array/map.html#map":{}}}],["vanilla",{"_index":2667,"title":{},"body":{"function/factory​_factory.html":{}}}],["var",{"_index":12,"title":{},"body":{"ajax.html":{},"RegExp.html":{},"asynchronous.html":{},"asynchronous.html#setTimeout":{},"closures.html":{},"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{},"event.html":{},"event.html#代理":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"core.html#函式工廠":{},"core.html#this":{},"core.html#new":{},"core.html#繼承":{},"core.html#屬性特徵":{},"core.html#Let":{},"core.html#const":{},"num.html":{},"num.html#補數字":{},"performance.html":{},"performance.html#懶加載":{},"performance.html#DOM-查詢做緩存":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"performance.html#事件節流":{},"math.html":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"scope.html":{},"operators.html":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#Callback":{},"this.html#bind-apply-call":{},"variable.html":{},"variable.html#變數的作用域在函式內":{},"variable.html#Hoisting":{},"variable.html#動態型別":{},"array/array_merge.html":{},"array/array_methods.html":{},"array/array_methods.html#forEach":{},"array/array_methods.html#map":{},"array/array_methods.html#filter":{},"array/array_methods.html#find":{},"array/array_methods.html#sort":{},"array/array_methods.html#every":{},"array/array_methods.html#some":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"array/filter.html":{},"cases/if.html":{},"array/map.html":{},"array/map.html#map":{},"cases/replace.html":{},"cases/math.html":{},"cases/math.html#浮點數運算的坑":{},"cases/str.html":{},"cases/str.html#url":{},"global/function.html":{},"global/function.html#bind":{},"global/promise.html":{},"global/date.html":{},"object/assign.html":{},"object/assign.html#合併物件":{},"object/assign.html#有相同屬性時合併物件區段":{},"glossary/hoisting.html":{},"http/caching.html":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{},"object/create.html":{},"object/object​_keys.html":{},"operators/function.html":{},"operators/function.html#函數表達式":{},"operators/typeof.html":{},"operators/typeof.html#typeof":{},"operators/precedence.html":{},"operators/precedence.html#運算子優先序":{},"operators/precedence.html#運算符比-運算符高":{},"statements/let.html":{},"statements/let.html#let":{},"statements/block.html":{},"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["var&#x7684;&#x4f5c;&#x7528;&#x57df;&#x5728;&#x51fd;&#x6578;(funct",{"_index":1519,"title":{},"body":{"core.html#Let":{}}}],["variabl",{"_index":2066,"title":{"variable.html":{}},"body":{}}],["var的作用域在函數(funct",{"_index":1043,"title":{},"body":{"core.html":{}}}],["version",{"_index":483,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"swagger/to-html.html#undefined":{}}}],["vip用戶在進行中參與活動，贈送800",{"_index":3219,"title":{},"body":{"statements/if...else.html":{}}}],["vip用戶在預售中參與活動，贈送1000",{"_index":3218,"title":{},"body":{"statements/if...else.html":{}}}],["visit",{"_index":636,"title":{},"body":{"index.html":{},"index.html#More-Informations":{}}}],["vm",{"_index":923,"title":{},"body":{"core.html":{},"core.html#this":{}}}],["vs",{"_index":1825,"title":{"global/function.html#cab-call-apply-vs-bind":{}},"body":{"scope.html":{},"this.html":{},"this.html#bind-apply-call":{},"global/function.html":{},"statements/AsyncFunction.html":{}}}],["vti",{"_index":3076,"title":{},"body":{"operators/destructuring_assignment.html":{}}}],["vue",{"_index":476,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"core.html":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"array/array_methods.html":{},"array/array_methods.html#reduce":{}}}],["vue!&apo",{"_index":1502,"title":{},"body":{"core.html#屬性特徵":{}}}],["w",{"_index":149,"title":{},"body":{"RegExp.html":{},"http/caching.html":{}}}],["w+)*@\\w",{"_index":150,"title":{},"body":{"RegExp.html":{}}}],["w+)*\\.\\w",{"_index":151,"title":{},"body":{"RegExp.html":{}}}],["waitingarr",{"_index":2299,"title":{},"body":{"array/array_insert.html":{},"array/array_insert.html#fill":{}}}],["wallet",{"_index":1010,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["wallet.sav",{"_index":1017,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["wallet.tot",{"_index":1015,"title":{},"body":{"core.html":{},"core.html#屬性特徵":{}}}],["want",{"_index":488,"title":{},"body":{"copy.html":{},"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["watch",{"_index":1911,"title":{},"body":{"this.html":{},"this.html#物件的方法調用-As-an-object-method":{}}}],["wate",{"_index":2301,"title":{},"body":{"array/array_insert.html":{}}}],["wating...','w",{"_index":2298,"title":{},"body":{"array/array_insert.html":{}}}],["web",{"_index":184,"title":{},"body":{"RESTfulAPI.html":{},"F2E/token.html":{}}}],["websit",{"_index":595,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{},"index.html#More-Informations":{}}}],["wednesday",{"_index":2699,"title":{},"body":{"function/factory​_factory.html":{},"function/factory​_factory.html#組合的工廠函數":{}}}],["welcom",{"_index":163,"title":{},"body":{"RegExp.html":{}}}],["welsh",{"_index":977,"title":{},"body":{"core.html":{}}}],["whereparamet",{"_index":875,"title":{},"body":{"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["window",{"_index":339,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{},"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#this":{},"core.html#箭頭函數":{},"performance.html":{},"performance.html#儘早執行操作-DOMContentLoaded":{},"this.html":{},"this.html#bind-apply-call":{},"variable.html":{}}}],["window.array",{"_index":351,"title":{},"body":{"arrowFunction.html":{},"arrowFunction.html#Arrow-Function":{}}}],["window.i",{"_index":1045,"title":{},"body":{"core.html":{},"core.html#Let":{}}}],["window.location.hash",{"_index":1847,"title":{},"body":{"url.html":{}}}],["window.location.host",{"_index":1841,"title":{},"body":{"url.html":{}}}],["window.location.hostnam",{"_index":1844,"title":{},"body":{"url.html":{}}}],["window.location.href",{"_index":1838,"title":{},"body":{"url.html":{}}}],["window.location.pathnam",{"_index":1845,"title":{},"body":{"url.html":{}}}],["window.location.port",{"_index":1849,"title":{},"body":{"url.html":{}}}],["window.location.protocol",{"_index":1839,"title":{},"body":{"url.html":{}}}],["window.location.search",{"_index":1850,"title":{},"body":{"url.html":{}}}],["word",{"_index":3318,"title":{},"body":{"string/queue.html":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["workflow",{"_index":96,"title":{},"body":{"ajax.html":{}}}],["world",{"_index":394,"title":{},"body":{"closures.html":{},"this.html":{},"this.html#bind-apply-call":{},"cases/str.html":{}}}],["wrap",{"_index":3287,"title":{},"body":{"swagger/ui.html":{},"swagger/ui.html#Swagger-UI":{}}}],["writabl",{"_index":684,"title":{},"body":{"core.html":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#屬性特徵":{}}}],["www.a.com",{"_index":2141,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.a.com&#x9019;&#x500b;&#x7db2;&#x7ad9;&#x88ab;&#x8a2d;&#x7f6e;&#x4e86;&#x4e00;&#x500b;www.b.com&#x9019;&#x500b;&#x57df;&#x4e0b;&#x7684;cookie&#xff0c;&#x6240;&#x4ee5;&#x53eb;&#x7b2c;&#x4e09;&#x65b9;cookie&#x3002",{"_index":2215,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.a.com&#x9019;&#x500b;&#x7db2;&#x7ad9;&#xff0c;&#x7db2;&#x9801;&#x88e1;&#x6709;&#x7528;&#x5230",{"_index":2208,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.a.com&#x9019;&#x500b;&#x7db2;&#x7ad9;&#xff0c;&#x9019;&#x500b;&#x7db2;&#x7ad9;&#x8a2d;&#x7f6e;&#x4e86;&#x4e00;&#x500b;cookie&#xff0c;&#x9019;&#x500b;cookie&#x4e5f;&#x53ea;&#x80fd;&#x88ab",{"_index":2205,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.a.com這個網站被設置了一個www.b.com這個域下的cookie，所以叫第三方cooki",{"_index":2145,"title":{},"body":{"F2E/cookie.html":{}}}],["www.a.com這個網站，這個網站設置了一個cookie，這個cooki",{"_index":2140,"title":{},"body":{"F2E/cookie.html":{}}}],["www.adobe.com",{"_index":2135,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.adobe.com/tw",{"_index":2133,"title":{},"body":{"F2E/cookie.html":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.b.com",{"_index":2142,"title":{},"body":{"F2E/cookie.html":{}}}],["www.b.com&#x7db2;&#x7ad9;&#x7684;&#x4e00;&#x5f35;&#x5716;&#x7247;&#xff0c;&#x700f;&#x89bd;&#x5668;&#x5728",{"_index":2209,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.b.com&#x8acb;&#x6c42;&#x5716;&#x7247;&#x7684;&#x6642;&#x5019;&#xff0c;www.b.com",{"_index":2210,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.b.com&#x9019;&#x500b;&#x57df;&#x8a2a;&#x554f;&#xff0c;&#x53cd;&#x800c;&#x4e0d;&#x80fd;&#x88ab",{"_index":2212,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["www.b.com請求圖片的時候，www.b.com",{"_index":2143,"title":{},"body":{"F2E/cookie.html":{}}}],["www.foo.com的resourc",{"_index":103,"title":{},"body":{"ajax.html":{}}}],["w”、”l”、”o",{"_index":167,"title":{},"body":{"RegExp.html":{}}}],["x",{"_index":397,"title":{},"body":{"closures.html":{},"performance.html":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"math.html":{},"math.html#Math":{},"operators.html":{},"operators.html#Increment":{},"operators.html#Adding-Strings-and-Numbers":{},"this.html":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#bind-apply-call":{},"F2E/header.html":{},"array/filter.html":{},"array/map.html":{},"array/map.html#map":{},"cases/replace.html":{},"object/create.html":{},"operators/delete.html":{},"operators/delete.html#delete":{},"operators/precedence.html":{},"operators/precedence.html#運算符比-運算符高":{},"statements/block.html":{},"swagger/to-html.html":{},"swagger/to-html.html#Swagger-to-HTML":{},"string/queue.html":{}}}],["x,i",{"_index":413,"title":{},"body":{"closures.html":{}}}],["x2014",{"_index":2808,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{},"global/function.html#bind":{},"global/function.html#References":{}}}],["x2018;&#x56de;&#x50b3;&#x7d50;&#x679c;&#x2019",{"_index":1195,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x2018;1&#x2019",{"_index":2543,"title":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x2018;2&#x2019",{"_index":2544,"title":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x2018;3&#x2019;].filter(parseint",{"_index":2545,"title":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}},"body":{}}],["x2018;3&#x2019;].map(parseint)&#x7684;&#x8f38;&#x51fa;&#x7d50;&#x679c;&#x662f;&#x4ec0;&#x9ebc;&#xff1f",{"_index":2577,"title":{},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x2018;a&#x2019",{"_index":3189,"title":{},"body":{"statements/let.html#let":{}}}],["x2018;vti&#x2019",{"_index":3079,"title":{},"body":{"operators/destructuring_assignment.html#Destructuring-assignment":{}}}],["x201c;&#x4e0d;&#x6703;&#x201d",{"_index":1154,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x201c;0.00011",{"_index":1803,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x201c;a",{"_index":3359,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x201c;exampl",{"_index":3361,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x201c;function&#x201d",{"_index":3120,"title":{},"body":{"operators/typeof.html#null":{}}}],["x201c;object&#x201d",{"_index":3113,"title":{},"body":{"operators/typeof.html#null":{}}}],["x201c;w/&#x201c",{"_index":3002,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x2026",{"_index":3175,"title":{},"body":{"operators/precedence.html#運算子優先序":{}}}],["x2192",{"_index":1808,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x276f",{"_index":1542,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x3000;&#x9a57;&#x8b49;&#x5354;&#x5546;&#x7de9;&#x5b58",{"_index":3015,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x3000;&#x9a57;&#x8b49;&#x5f37;&#x7de9;&#x5b58",{"_index":2958,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x3000;vue",{"_index":1497,"title":{},"body":{"core.html#屬性特徵":{}}}],["x3001",{"_index":1158,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"global/function.html#cab-call-apply-vs-bind":{},"http/caching.html#強緩存":{}}}],["x3001;undefin",{"_index":1423,"title":{},"body":{"core.html#this":{}}}],["x3002",{"_index":242,"title":{},"body":{"RESTfulAPI.html#動詞":{},"arrowFunction.html#Arrow-Function":{},"this.html#bind-apply-call":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"global/function.html#cab-call-apply-vs-bind":{},"statements/for.html#for…of與for…in的差別":{}}}],["x3002;&#xff08",{"_index":2801,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x3002;object.defineproperti",{"_index":1510,"title":{},"body":{"core.html#屬性特徵":{}}}],["x300c;&#x4fdd;&#x6301;&#x72c0;&#x614b;&#x300d;&#xff0c;&#x5247;&#x662f;&#x6307;&#x901a;&#x4fe1;&#x4ea4;&#x8ac7;&#x7684;&#x5176;&#x4e2d;&#x4e00;&#x65b9;&#xff0c;&#x53ef;&#x4ee5;&#x6240;&#x6709;&#x7684;&#x6d88;&#x606f;&#x4f5c;&#x95dc;&#x806f;&#xff0c;&#x5c31;&#x50cf;&#x662f;&#x5df7;&#x53e3;&#x7684;&#x65e9;&#x9910;&#x5e97;&#x963f;&#x59e8;&#xff0c;&#x9084;&#x8a18;&#x5f97;&#x4f60;&#x6700;&#x611b;&#x5403;&#x7684;&#x706b;&#x817f;&#x86cb;&#x4e0d;&#x559c;&#x6b61;&#x6709;&#x7f8e;&#x4e43;&#x6ecb;&#x3002",{"_index":2232,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x300c;&#x7bad;&#x982d;&#x51fd;&#x5f0f;&#x6c92;&#x6709;&#x81ea;&#x5df1;&#x7684",{"_index":2036,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x300c;&#x7d81;&#x5b9a;this&#x7684;&#x51fd;&#x6578;&#x300d",{"_index":2024,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x300c;&#x9762;&#x5411;&#x3001;&#x9023;&#x63a5;&#x300d;&#x8868;&#x662f;&#x5ba2;&#x6236;&#x7aef;&#x548c;server&#x7aef;&#x901a;&#x4fe1;&#x524d;&#x8981;&#x5148;&#x5efa;&#x7acb;&#x4e00;&#x500b;&#x901a;&#x4fe1;&#x7684;&#x6e20;&#x9053",{"_index":2231,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x300c;.&#x300d",{"_index":1334,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x39f;(1",{"_index":3347,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x4e00;&#x4e32",{"_index":2992,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x4e00;&#x4f46;&#x88ab;&#x7d81;&#x5b9a;&#xff0c;&#x5176;this&#x7121;&#x6cd5;&#x518d;&#x88ab;&#x4fee;&#x6539;&#x3002",{"_index":2025,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x4e00;&#x500b;&#x89e3;&#x6c7a;&#x65b9;&#x6cd5;&#x5c31;&#x662f;&#xff0c;&#x5728;&#x56de;&#x61c9;&#x4e2d;&#xff0c;&#x7d66;&#x51fa;&#x76f8;&#x95dc;&#x93c8;&#x63a5;&#xff0c;&#x4fbf;&#x65bc;&#x4e0b;&#x4e00;&#x6b65;&#x64cd;&#x4f5c;&#x3002;&#x9019;&#x6a23;&#x7684;&#x8a71;&#xff0c;&#x7528;&#x6236;&#x53ea;&#x8981;&#x8a18;&#x4f4f;&#x4e00;&#x500b",{"_index":264,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x4e00;&#x500b;&#x8cc7;&#x6e90;&#x7684;&#x6a19;&#x8b58",{"_index":2995,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x4e00;&#x6a23;&#x662f;&#x6703;&#x88ab;&#x5224;&#x5b9a",{"_index":1188,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x4e00;&#x6a23;&#x6709;&#x5275;&#x9020;&#x968e;&#x6bb5",{"_index":1533,"title":{},"body":{"core.html#const":{}}}],["x4e00;&#x6b21;&#x3002;&#x5982;&#x679c;&#x8981;&#x591a;&#x6b21;&#x8abf;&#x7528;&#xff0c;&#x8acb;&#x4f7f;&#x7528",{"_index":308,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x4e00;&#x81f4;&#xff0c;&#x4e0d;&#x4f7f;&#x7528;&#x5f37;&#x7de9;&#x5b58;&#xff0c;&#x9700;&#x8981;&#x8207;&#x670d;&#x52d9;&#x5668;&#x9a57;&#x8b49;&#x7de9;&#x5b58;&#x662f;&#x5426;&#x65b0;&#x9bae;&#xff0c;&#x5728",{"_index":2984,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e00;&#x958b;&#x59cb;&#x5148;&#x7d66;&#x70ba",{"_index":1676,"title":{},"body":{"performance.html#懶加載":{}}}],["x4e09;&#x500b;&#x7b49;&#x865f",{"_index":1885,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x4e0a;&#x5217;&#x7684;&#x4e09;&#x7a2e;&#x72c0;&#x614b;&#x6bcf;&#x6b21;&#x57f7;&#x884c;&#x5fc5;&#x5b9a;&#x6703;&#x7d93;&#x904",{"_index":2364,"title":{},"body":{"api/promise.html#Promise":{}}}],["x4e0a;&#x9762;&#x4ee3;&#x7801;&#x4e2d;&#xff0c",{"_index":382,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["x4e0a;&#xff0c;&#x5982",{"_index":2246,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4e0b;&#x62c9;&#x9078;&#x55ae;&#x88dc;&#x6a19;&#x984c;&#x3000;&#x3000;&#x3000;&#x3000",{"_index":2327,"title":{},"body":{"array/array_insert.html#example":{}}}],["x4e0b;&#x9762;&#x662f;&#x4e00;&#x500b;&#x4f8b;&#x5b50;&#x3002",{"_index":260,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x4e0b;&#x9762;&#x662f;&#x8868;&#x9054;&#x5f0f",{"_index":1998,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x4e0d;&#x4ee5;&#x5efa;&#x69cb;&#x5f0f;&#x65b9;&#x5f0f;&#x5448;&#x73f",{"_index":1432,"title":{},"body":{"core.html#this":{}}}],["x4e0d;&#x5229;&#x65bc;&#x64f4;&#x5c55;&#xff0c;&#x8a9e;&#x7fa9;&#x4e5f;&#x4e0d;&#x660e;&#x78ba",{"_index":247,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x4e0d;&#x5e94;&#x8be5;&#x7528;&#x4e8e;&#x8fed;&#x4ee3;&#x4e00;&#x4e2a",{"_index":3132,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x4e0d;&#x5efa;&#x8b70;&#x8abf;&#x7528;thi",{"_index":1400,"title":{},"body":{"core.html#this":{}}}],["x4e0d;&#x652f;&#x6301",{"_index":1513,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4e0d;&#x662f;&#x5be6;&#x9ad4;&#x5c6c;&#x6027",{"_index":1306,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x4e0d;&#x662f;&#x6240;&#x6709;&#x533f;&#x540d;&#x51fd;&#x5f0f",{"_index":1341,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x4e0d;&#x662f;&#x7d14;&#x503c",{"_index":1273,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x4e0d;&#x662f;&#x7d14;&#x9663;&#x5217",{"_index":1378,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["x4e0d;&#x6703;&#x56de;&#x50b3;&#x7d50;&#x679c",{"_index":1142,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{}}}],["x4e0d;&#x6703;&#x6539;&#x8b8a",{"_index":1089,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x4e0d;&#x6703;&#x8f49;&#x6578;&#x5b57;&#x578b;&#x5225",{"_index":1212,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x4e0d;&#x7b49;&#x65bc;0.3",{"_index":1816,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x4e0d;&#x7ba1;&#x5982;&#x4f55;&#x8abf;&#x6574;&#x79d2;&#x6578",{"_index":1128,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x4e0d;&#x80fd;&#x64cd;&#x4f5c;&#x8b8a;&#x91cf",{"_index":3061,"title":{},"body":{"operators/delete.html#delete":{}}}],["x4e0d;&#x80fd;&#x76f4;&#x63a5;&#x56de;&#x50b3;&#x7269;&#x4ef6;&#x5be6;&#x5b57",{"_index":1552,"title":{},"body":{"core.html#箭頭函數":{}}}],["x4e0d;&#x80fd;&#x8b8a;&#x52d5",{"_index":3107,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x4e0d;&#x80fd;&#x8fed;&#x4ee3;&#x7269;&#x4ef6;&#xff0c;&#x9700;&#x8981;&#x900f;&#x904e;&#x548c",{"_index":3146,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x4e0d;&#x8981;&#x76f8;&#x4fe1;js&#x7684;&#x8a08;&#x7b97",{"_index":1820,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x4e0d;&#x898b;&#x4e86",{"_index":3173,"title":{},"body":{"operators/precedence.html#運算子優先序":{}}}],["x4e0d;&#x8a8d;&#x70ba",{"_index":1898,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x4e0d;&#x8fd4;&#x56d",{"_index":2551,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x4e0d;&#x904e;&#x73fe;&#x5728;&#x505a;&#x7db2;&#x7ad9;&#x6211;&#x5011;&#x90fd;&#x6d41;&#x884c;&#x4f7f;&#x7528;&#x6846;&#x67b6;&#xff0c;session&#x7684;&#x6a5f;&#x5236;&#x90fd;&#x88ab;&#x6846;&#x67b6;&#x6240;&#x5be6;&#x73fe;&#x4e86;&#xff0c;&#x4ee5;rubi",{"_index":2258,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4e0d;&#x9700;&#x8981;&#x540d;&#x7a31",{"_index":1350,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x4e0d;&#x9700;&#x8981;&#x767c;&#x9001;&#x8acb;&#x6c42;&#x5230;&#x670d;&#x52d9;&#x7aef;&#xff0c;&#x76f4;&#x63a5;&#x8b80;&#x53d6;&#x700f;&#x89bd;&#x5668;&#x672c;&#x5730;&#x7de9;&#x5b58;&#xff0c;&#x5728",{"_index":2933,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e14",{"_index":2194,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4e14;&#x7121;&#x6cd5;&#x8abf;&#x6574;&#x503c",{"_index":1490,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4e26;&#x4e0d;&#x6703;&#x76f4;&#x63a5;&#x986f;&#x793a",{"_index":1135,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x4e26;&#x4e14;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":2368,"title":{},"body":{"api/promise.html#Promise":{}}}],["x4e26;&#x4e14;&#x5728;&#x5f8c;&#x9762;&#x52a0;&#x5165",{"_index":1147,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{}}}],["x4e26;&#x52a0;&#x8f09;&#x700f;&#x89bd;&#x5668;&#x7de9;&#x5b58;&#x3002",{"_index":3006,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x4e26;&#x975e;&#x6240;&#x6709;&#x5de5;&#x5ee0;&#x90fd;&#x6703;&#x7acb;&#x5373;&#x8fd4;&#x56de;&#x6578;&#x64da;&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x6709;&#x4e9b;&#x5fc5;&#x9808;&#x5148;&#x7372;&#x53d6;&#x6578;&#x64da;&#x3002",{"_index":2732,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4e2d",{"_index":1331,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x4e2d;&#x4e00;&#x4e2a;&#x65e0;&#x6cd5",{"_index":1511,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4e2d;&#x4e86",{"_index":1693,"title":{},"body":{"performance.html#DOM-查詢做緩存":{}}}],["x4e2d;&#x57fa;&#x672c;&#x985e;&#x578b;&#xff08;primit",{"_index":328,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x4e2d;&#x62ec;&#x5f27;(&#x53ef;&#x7528;&#x8b8a;&#x6578;&#x65b9;&#x5f0f",{"_index":1243,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x4e2d;&#x65b0;&#x589e;&#x7684;&#x5c6c;&#x6027;&#xff0c;&#x5728;&#x8acb;&#x6c42;&#x982d;&#x548c;&#x97ff;&#x61c9;&#x982d;&#x4e2d;&#x90fd;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#xff0c;&#x5e38;&#x7528;&#x7684;&#x5c6c;&#x6027;&#x503c;&#x5982;&#x6709;&#xff1a",{"_index":2949,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e2d;&#x6dfb;&#x52a0",{"_index":2971,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e2d;&#x7684",{"_index":2983,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x500b;&#x5143;&#x7d20;&#x4f5c;&#x70ba;&#x53c3;&#x6578;&#xff0c;&#x5e36;&#x9032;&#x672c",{"_index":2009,"title":{},"body":{"this.html#Callback":{}}}],["x4e2d;&#x81ea;&#x5b9a;&#x7fa9;&#x7684;&#x5c6c;&#x6027;&#xff0c;&#x90fd;&#x61c9;&#x8a72;&#x7528",{"_index":1686,"title":{},"body":{"performance.html#懶加載":{}}}],["x4e2d;&#x986f;&#x793a;&#x7684",{"_index":2934,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e2d;&#xff0c;&#x4f7f;&#x7528;&#x7b2c;&#x4e00;&#x65b9",{"_index":2186,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4e2d;&#xff0c;&#x5f37;&#x7de9;&#x5b58;&#x53c8;&#x5206;&#x70ba",{"_index":2937,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x4e2d;&#xff0c;&#x6700;&#x5f8c;&#x4e00;&#x6b21;&#x6027;&#x63d2;&#x5165;&#x5230",{"_index":1703,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x4e2d;&#xff0c;&#x6e1b;&#x5c11;&#x700f;&#x89bd;&#x5668;&#x4f7f;&#x7528",{"_index":1672,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x4e3a;&#x6570;&#x7ec4;&#x4e2d;&#x7684;&#x6bcf;&#x4e2a;&#x5143;&#x7d20;&#x8c03;&#x7528;&#x4e00;&#x6b21",{"_index":2546,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x4e4b;&#x4e2d;&#x7684;&#x90a3;&#x500b;&#x5143;&#x7d20;&#x3002",{"_index":2012,"title":{},"body":{"this.html#Callback":{}}}],["x4e5f;&#x662f;&#x4e00;&#x500b;&#x7269;&#x4ef6;&#x7684;&#x5c6c;&#x6027",{"_index":1309,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x4e5f;&#x662f;&#x7269;&#x4ef6;&#x7684;&#x4e00;&#x7a2e;&#xff0c;&#x53ea;&#x662f;&#x5b83;&#x662f;&#x64c1;&#x6709;&#x7a0b;&#x5f0f;&#x5340;&#x584a;&#x7684;&#x80fd;&#x529b;&#x7269;&#x4ef6;&#x800c;&#x5df2",{"_index":1333,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x4e5f;&#x662f;&#xff09",{"_index":2802,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x4e5f;&#x7121;&#x6cd5;&#x914d;&#x7f6e;&#x7279;&#x5fb5",{"_index":1487,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4e5f;&#x8f38;&#x51fa;&#x3002",{"_index":3156,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x4e8b;&#x4ef6",{"_index":1720,"title":{},"body":{"performance.html#事件節流":{}}}],["x4e8b;&#x4ef6;&#x4f47;&#x5217",{"_index":1122,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x4e8b;&#x4ef6;&#x7bc0;&#x6d41",{"_index":1670,"title":{"performance.html#事件節流":{}},"body":{"performance.html#優化原則和方向":{}}}],["x4e8b;&#x4ef6;&#xff0c;&#x901a;&#x904",{"_index":1711,"title":{},"body":{"performance.html#事件節流":{}}}],["x4e8c;&#x9032;&#x4f4d",{"_index":1811,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x4e94;&#x5206;&#x9418;&#x6982;&#x8ff0;&#x7db2;&#x8def;&#x754c;&#x7684;&#x8a18;&#x61b6;&#x5927;&#x795",{"_index":2264,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4ec0;&#x9ebc;&#x662f",{"_index":2172,"title":{"F2E/cookie.html#什麼是-Cookie？":{}},"body":{}}],["x4ec0;&#x9ebc;&#x6642;&#x5019;&#x4e0d;&#x4f7f;&#x7528;&#x7bad;&#x982d;&#x51fd;&#x6578",{"_index":352,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x4ed6;&#x5011;&#x90fd;&#x6703;&#x4f7f;&#x8b8a;&#x91cf;&#x589e;&#x52a0",{"_index":1905,"title":{},"body":{"operators.html#Increment":{}}}],["x4ed6;&#x7684;this&#x6307;&#x5411;&#x5916;&#x5c64",{"_index":1548,"title":{},"body":{"core.html#箭頭函數":{}}}],["x4ee3;&#x7406",{"_index":577,"title":{"event.html#代理":{}},"body":{}}],["x4ee3;&#x78bc;&#x58d3;&#x7e2e;&#x5408;&#x4f75;&#x3001;css",{"_index":1655,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x4ee3;&#x78bc;&#x58d3;&#x7e2e;&#x5408;&#x4f75;&#xff09",{"_index":1656,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x4ee3;&#x78bc;&#x751f;&#x6210",{"_index":1084,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x4ee3;&#x8868;&#x76ee;&#x524d;&#x88ab;&#x8655;&#x7406;&#x4e2d;&#x7684",{"_index":2011,"title":{},"body":{"this.html#Callback":{}}}],["x4ee3;&#x8868;&#x8457",{"_index":1116,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x4ee5;&#x53ca;&#x66f4;&#x4f4e;&#x7248;&#x672c;&#x6d4f;&#x89c8;&#x5668;&#x7684;&#x539f;&#x56e0;&#x3002",{"_index":1514,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4f46;&#x4ed6;&#x5011;&#x6703;&#x5171;&#x7528;&#x540c;&#x4e00;&#x500b",{"_index":540,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x4f46;&#x5176;&#x5be6;&#x662f",{"_index":1133,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x4f46;&#x537b;&#x4e0d;&#x5c0f;&#x5fc3;&#x6539;&#x5230;obj1.b",{"_index":531,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x4f46;&#x53ea;&#x6709;&#x53ef;&#x4ee5;&#x8f49;&#x6210;json&#x683c;&#x5f0f;&#x7684;&#x7269;&#x4ef6;&#x624d;&#x53ef;&#x4ee5;&#x9019;&#x6a23;&#x7528",{"_index":555,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["x4f46;&#x5927;&#x5bb6;&#x90fd;&#x6703;&#x64d4;&#x5fc3;&#xff0c;cookie&#x548c;session&#x5f97;&#x7d50;&#x5408;&#xff0c;&#x5230;&#x5e95;&#x9084;&#x6703;&#x4e0d;&#x6703;&#x6709;&#x88ab;&#x7ac4;&#x6539;&#x7684;&#x554f;&#x984c;&#xff0c;&#x9019;&#x500b;&#x6642;&#x5019;&#x5c31;&#x8981;&#x9760;&#x201d;&#x7c3d;&#x7ae0;&#x201d;&#x4f86;&#x9a57;&#x8b49;&#x8cc7;&#x6599;&#x7684;&#x771f;&#x5be6;&#x6027;&#xff0c;&#x5728;&#x6211;&#x4f7f;&#x7528;cookie&#x8acb;&#x6c42;&#x6642;&#xff0c;&#x53ef;&#x4ee5;&#x52a0;&#x4e00;&#x500b;&#x7c3d;&#x7ae0;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x5728;&#x6211;&#x50b3;&#x8f38;&#x7684;&#x8cc7;&#x6599;&#x5f8c;&#x9762;&#x52a0;&#x4e0a;&#x4e00;&#x500b;&#x5c0d;&#x61c9;&#x7684;&#x79d8;&#x5bc6;&#x5b57;&#x4e32;&#xff0c;&#x7576;&#x4f3a;&#x670d;&#x5668;&#x56de;&#x50b3;&#x6642;&#xff0c;&#x53ef;&#x4ee5;&#x56de;&#x61c9;&#x8a72;&#x5b57;&#x4e32;&#xff0c;&#x82e5;&#x662f;&#x5176;&#x4ed6;&#x4f7f;&#x7528;&#x8005;&#x5077;&#x5077;&#x4e32;&#x6539;&#x7684;&#x8a71;&#xff0c;&#x7531;&#x65bc;&#x4e32;&#x6539;&#x7684;&#x8cc7;&#x6599;&#x548c;&#x6211;&#x7684;&#x79d8;&#x5bc6;&#x5b57;&#x4e32;&#x7121;&#x6cd5;&#x76f8;&#x7b26;&#xff0c;&#x7576;&#x7136;&#x4e5f;&#x7121;&#x6cd5;&#x4f5c;&#x507d;&#x9020;&#xff0c;&#x9019;&#x5c31;&#x662f;&#x6240;&#x8b02;&#x7684",{"_index":2255,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4f46;&#x5f9e;&#x5275;&#x9020;&#x5230;&#x5be6;&#x969b;&#x5ba3;&#x544a;&#x7684;&#x968e;&#x6bb5;&#x6703;&#x51fa;&#x73fe;tdz",{"_index":1534,"title":{},"body":{"core.html#const":{}}}],["x4f46;&#x5f9e;&#x9019;&#x88e1;&#x53ef;&#x5f97;&#x77e5;&#xff0c;session&#x4e26;&#x4e0d;&#x662f;&#x4e00;&#x500b;&#x5f88;&#x660e;&#x78ba;&#x5be6;&#x9ad4;&#x7684;&#x6a5f;&#x5236;&#xff0c;&#x7b97;&#x662f;&#x4e00;&#x500b;&#x6982;&#x5ff5;&#xff0c;&#x53ea;&#x8981;&#x7b26;&#x5408;&#x6982;&#x5ff5;&#x6240;&#x5be6;&#x4f5c;&#x51fa;&#x4f86;&#x7684;&#x529f;&#x80fd;&#x90fd;&#x53ef;&#x4ee5;&#x88ab;&#x53eb;&#x505a;session&#x3002",{"_index":2262,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4f46;&#x662f;&#x539f;&#x59cb;&#x578b;&#x5225;&#x76e1;&#x91cf;&#x4e0d;&#x7528;&#x6b64;&#x65b9;&#x5f0f",{"_index":1179,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x4f46;&#x662f;&#x53ef;&#x4ee5;&#x8abf;&#x6574;&#x5c6c;&#x6027;&#x503c",{"_index":1488,"title":{},"body":{"core.html#屬性特徵":{}}}],["x4f46;&#x662f;&#x5728;&#x6700;&#x521d;&#x7684",{"_index":2243,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4f46;&#x6df1;&#x62f7;&#x8c9d;&#x6703;&#x53e6;&#x5916;&#x5275;&#x9020;&#x4e00;&#x500b;&#x4e00;&#x6a21;&#x4e00;&#x6a23;&#x7684;&#x7269;&#x4ef6",{"_index":536,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x4f46;&#x7121;&#x7e7c;&#x627f;&#x52d5;&#x7269;&#x754c;&#x7684;&#x5efa;&#x69cb;&#x51fd;&#x5f0f",{"_index":1470,"title":{},"body":{"core.html#繼承":{}}}],["x4f46;&#x7269;&#x4ef6;&#x5c31;&#x4e0d;&#x540c;&#xff0c;&#x7269;&#x4ef6;&#x50b3;&#x7684;&#x662f",{"_index":527,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x4f46;&#x8a18;&#x4f4f;session&#x5c31;&#x50cf;&#x662f;&#x4f60;&#x7684;&#x6703;&#x54e1;&#x5361;&#x865f;&#xff0c;&#x4e0d;&#x898b;&#x4e5f;&#x8868;&#x793a;&#x4ecd;&#x7136;&#x6709;&#x8cc7;&#x6599;&#x88ab;&#x7aca;&#x53d6;&#x7684;&#x98a8;&#x96aa;&#x3002",{"_index":2256,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4f46;json&#x4e00;&#x5f8b;&#x7528;&#x96d9;&#x5f15;&#x865f",{"_index":1321,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x4f46;null&#x4e0d;&#x662f;object",{"_index":3115,"title":{},"body":{"operators/typeof.html#null":{}}}],["x4f46;target&#x53ef;&#x4ee5;&#x544a;&#x77e5;&#x9ede;&#x64ca;&#x5f9e;&#x54ea;&#x51fa;&#x767c;&#x7684",{"_index":587,"title":{},"body":{"event.html#代理":{}}}],["x4f5c;&#x70ba;&#x539f;&#x578b;&#x4f7f;&#x7528",{"_index":1458,"title":{},"body":{"core.html#繼承":{}}}],["x4f5c;&#x70ba;&#x547d;&#x540d;&#x7d04;&#x5b9a;&#x4f86;&#x986f;&#x793a;&#x9019;&#x4e9b;&#x5de5;&#x5ee0;&#x505a;&#x4e00;&#x4e9b;&#x7570;&#x6b65;&#x5de5;&#x4f5c;&#x548c;&#x8fd4;&#x56de;promise&#x3002",{"_index":2743,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f5c;&#x70ba;&#x7269;&#x4ef6;&#x65b9;&#x6cd5",{"_index":1396,"title":{},"body":{"core.html#this":{}}}],["x4f5c;&#x7528;&#x57df;&#x5c07;&#x4e0a;&#x4e0b;&#x6587;&#x7d81;&#x5b9a;&#x5230",{"_index":356,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x4f5c;&#x7528;&#x57df;&#x662f;&#x51fd;&#x6578;&#x8abf;&#x7528;&#x6642;&#x624d;&#x6c7a;&#x5b9a",{"_index":1092,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x4f5c;&#x7528;&#x5b8c;&#x5168;&#x4e00;&#x6a23;&#xff0c;&#x53ea;&#x662f;&#x63a5;&#x53d7;&#x53c3;&#x6578;&#x7684;&#x65b9;&#x5f0f;&#x4e0d;&#x592a;&#x4e00;&#x6a23",{"_index":2026,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x4f5c;&#x958b;&#x59cb",{"_index":1162,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x4f7f;&#x7528",{"_index":1659,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x4f7f;&#x7528;&#x4e09;&#x5143;&#x904b;&#x7b97;&#x5b50",{"_index":1231,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x4f7f;&#x7528;&#x5305;&#x88f9;&#x7269;&#x4ef6;&#x8f49;&#x63db",{"_index":1214,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x4f7f;&#x7528;&#x7d66;&#x5b9a;&#x7684;this&#x53c3;&#x6578;&#x4ee5;&#x53ca;&#x5206;&#x5225;&#x7d66;&#x5b9a;&#x7684;&#x53c3;&#x6578;&#x4f86;&#x547c;&#x53eb;&#x67d0;&#x500b;&#x51fd;&#x6578",{"_index":2027,"title":{},"body":{"this.html#bind-apply-call":{},"global/function.html#call、apply、bind":{}}}],["x4f7f;&#x7528;&#x8907;&#x6578",{"_index":238,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x4f7f;&#x7528;&#x9019;&#x4e9b;&#x7c21;&#x55ae;&#x7684;&#x69cb;&#x5efa;&#x584a;&#x4f7f;&#x5f97;&#x6211;&#x5011;&#x7684;&#x4ee3;&#x78bc;&#x66f4;&#x52a0;&#x53cb;&#x597d;&#xff0c;&#x9019;&#x7d55;&#x5c0d;&#x662f;&#x6211;&#x5011;&#x61c9;&#x8a72;&#x95dc;&#x5fc3;&#x7684;&#x4e8b;&#x60c5;&#x3002",{"_index":2754,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f7f;&#x7528;javascript&#x5167;&#x7f6e;&#x7684;&#x51fd;&#x6578",{"_index":1818,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x4f86;&#x4fdd;&#x7559;&#x4e00;&#x5b9a;&#x7684;&#x7cbe;&#x5ea6;&#xff1a",{"_index":1819,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x4f86;&#x53d6;&#x5f97;&#x6210;&#x529f;&#x7684;&#x7d50;&#x679c;&#xff0c;&#x5931;&#x6557;&#x7684;&#x90e8;&#x5206;&#x4ea4;&#x7531",{"_index":2372,"title":{},"body":{"api/promise.html#Promise":{}}}],["x4f86;&#x5b9a;&#x7fa9;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#x3002",{"_index":2734,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f86;&#x5b9a;&#x7fa9;&#x65b9;&#x6cd5;&#x3002",{"_index":363,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x4f86;&#x76e3;&#x807d;&#x3002;&#x4f7f;&#x7528;&#x7bc0;&#x6d41;&#x3002",{"_index":1712,"title":{},"body":{"performance.html#事件節流":{}}}],["x4f86;&#x7acb;&#x5373;&#x57f7;&#x884c;&#x51fd;&#x5f0f",{"_index":1148,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{}}}],["x4f86;&#x81ea;&#x5728;&#x7db2;&#x9801;&#x4e0a;&#x5d4c;&#x5165;&#x5ee3;&#x544a;&#x6216;&#x5716;&#x7247;&#x7b49;&#x9805;&#x7684;&#x5176;&#x4ed6;&#x57df;&#x4f86;&#x6e90;&#x3002",{"_index":2181,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["x4f86;&#x8655;&#x7406",{"_index":2373,"title":{},"body":{"api/promise.html#Promise":{}}}],["x4f86;&#x8868;&#x793a;&#x3002;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#xff0c;&#x53ef;&#x4ee5;&#x7528;&#x7d44;&#x5408;&#x800c;&#x4e0d;&#x662f;&#x7e7c;&#x627f;&#x4f86;&#x5be6;&#x73fe;&#x3002",{"_index":2721,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f8b",{"_index":268,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x4f8b;&#x5982;&#x8981;&#x5728;&#x6587;&#x5b57;&#x6539;&#x8b8a;&#x6642;&#x89f8;&#x767c;&#x4e00;&#x500b",{"_index":1710,"title":{},"body":{"performance.html#事件節流":{}}}],["x4f8b;&#x5982;&#xff0c;&#x4f7f;&#x7528;&#x7e7c;&#x627f;&#x3002",{"_index":2722,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f8b;&#x5982;&#xff0c;&#x6211;&#x5011;&#x53ef;&#x4ee5;&#x5275;&#x5efa;&#x4e00;&#x500b",{"_index":2712,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x4f8b;:foreach",{"_index":1312,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x4f8b;:tostr",{"_index":1315,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x4f9d;&#x7136;&#x6307;&#x5411",{"_index":2044,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x4fdd;&#x5b58;&#x9019;&#x500b;session",{"_index":2248,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x4fdd;&#x6301;&#x539f;&#x6709;&#x9663;&#x5217;&#x4e0d;&#x8b8a;&#x7684;&#x6b63;&#x78ba;&#x9078;&#x64c7",{"_index":2500,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x4fee;&#x6539;&#x65b0;&#x7269;&#x4ef6;&#x4e0d;&#x6703;&#x6539;&#x5230;&#x539f;&#x7269;&#x4ef6",{"_index":538,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x500b",{"_index":302,"title":{},"body":{"asynchronous.html#setTimeout":{},"performance.html#合併-DOM-插入-createDocumentFragment":{},"http/caching.html#強緩存":{}}}],["x500b;&#x5b9a;&#x6642;&#x5668;&#xff0c;&#x4e00;&#x822c;&#x60c5;&#x6cc1;&#x4e0b;&#xff0c;&#x9019;&#x4e9b;&#x5b9a;&#x6642;&#x5668;&#x90fd;&#x6703;&#x5728",{"_index":299,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x500b;&#x5c6c;&#x6027;&#xff0c;&#x4ee3;&#x78bc;&#x5982;&#x4e0b;&#xff1a",{"_index":2961,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x500b;&#x65b9;&#x6cd5",{"_index":2827,"title":{},"body":{"global/function.html#References":{}}}],["x500b;&#x982d;&#x90e8;&#x5c6c;&#x6027;&#x4e2d;&#x7684;&#x512a;&#x5148;&#x7d1a;&#x6700;&#x9ad8;&#x3002",{"_index":2985,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x501f;&#x7528;array&#x7684;&#x539f;&#x751f;&#x65b9;&#x6cd5",{"_index":2034,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x503c",{"_index":1475,"title":{},"body":{"core.html#屬性特徵":{}}}],["x503c;&#x5f8c;&#x7db4;&#x8b8a;&#x5316;&#x7684;&#x6642;&#x5019;&#xff0c;&#x624d;&#x6703;&#x771f;&#x6b63;&#x5730;&#x8acb;&#x6c42;&#x8cc7;&#x6e90;&#xff0c;&#x5426;&#x5247;&#x8fd4;&#x56d",{"_index":3005,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x503c;&#x88ab;&#x8907;&#x88fd;&#x4e86",{"_index":334,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x503c;&#x9032;&#x884c;&#x6bd4;&#x8f03;&#xff0c;&#x5982;&#x679c;&#x76f8;&#x7b49;&#x5247;&#x8868;&#x793a;&#x547d;&#x4e2d;&#x5354;&#x5546;&#x7de9;&#x5b58;&#x3002;etag",{"_index":2999,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x503c;(valu",{"_index":3143,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x505c;&#x4e0b;&#x624d;&#x89f8;&#x767c",{"_index":1721,"title":{},"body":{"performance.html#事件節流":{}}}],["x50b3;&#x503c;(call",{"_index":1280,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x50b3;&#x5165;&#x7684;&#x53c3;&#x6578;&#x51fd;&#x5f0f",{"_index":1348,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x50b3;&#x5165;&#x7684;&#x5b57;&#x4e32",{"_index":1329,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x50b3;&#x53c3;&#x8003;&#x7279;&#x6027;&#x6703;&#x6c92;&#x6709",{"_index":1294,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x50b3;&#x53c3;&#x8003;(call",{"_index":1283,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x50b3;&#x591a;&#x500b;&#x51fd;&#x6578",{"_index":436,"title":{"closures.html#傳多個函數":{}},"body":{}}],["x50b3;&#x7d14;&#x503c",{"_index":1419,"title":{},"body":{"core.html#this":{}}}],["x50b3;&#x905e;&#x8b8a;&#x6578",{"_index":1369,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x50cf;function&#x6c92;&#x8fa6;&#x6cd5;&#x8f49;&#x6210;json",{"_index":556,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["x5118;&#x65e9;&#x57f7;&#x884c;&#x64cd;&#x4f5c",{"_index":1705,"title":{"performance.html#儘早執行操作-DOMContentLoaded":{}},"body":{}}],["x5118;&#x65e9;&#x57f7;&#x884c;&#x64cd;&#x4f5c;&#xff08",{"_index":1669,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x5118;&#x7ba1;json&#x662f;javascript&#x7684;&#x4e00;&#x500b;&#x5b50;&#x96c6;&#xff0c;&#x4f46;json&#x662f;&#x7368;&#x7acb;&#x65bc;&#x8a9e;&#x8a00;&#x7684;&#x6587;&#x5b57;&#x683c;&#x5f0f",{"_index":1318,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x5118;&#x91cf;&#x4f7f;&#x7528;&#x5168;&#x7b49;&#x64cd;&#x4f5c;&#x7b26;&#x3002;&#x56e0;&#x70ba;&#x5176;&#x6c92;&#x6709;&#x96b1;&#x5f0f;&#x8f49;&#x63db;&#xff0c;&#x9019;&#x6a23;&#x7d50;&#x679c;&#x6703;&#x6bd4;&#x8f03;&#x5bb9;&#x6613;&#x9810;&#x6e2c;&#x3001;&#x8a08;&#x7b97;&#x4e5f;&#x6703;&#x6bd4;&#x8f03;&#x5feb",{"_index":1889,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x512a;&#x5148;&#x5e8f;&#x9ad8;&#x65bc",{"_index":3174,"title":{},"body":{"operators/precedence.html#運算子優先序":{}}}],["x512a;&#x5148;&#x8f09;&#x5165",{"_index":1103,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x512a;&#x5316;&#x539f;&#x5247;&#x548c;&#x65b9;&#x5411",{"_index":1646,"title":{"performance.html#優化原則和方向":{}},"body":{}}],["x512a;&#x5316;&#x7684;&#x65b9;&#x5411;&#x6709;&#x5169;&#x500b;&#xff1a",{"_index":1652,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x512a;&#x5316;&#x9801;&#x9762;&#x6e32;&#x67d3",{"_index":1661,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x5148;&#x5ba3;&#x544a;&#x8b8a;&#x6578",{"_index":1098,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5148;&#x628a;&#x9019;&#x908a;&#x7684;this(&#x6307;&#x5411;class&#x5167;&#x90e8;)&#x5b58;&#x8d77;&#x4f86",{"_index":2821,"title":{},"body":{"global/function.html#bind":{}}}],["x5148;&#x653e;&#x5728",{"_index":1702,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x5148;&#x8ce6;&#x4e88;&#x547d;&#x540d;&#x7a7a;&#x9593",{"_index":1172,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x5168;&#x4ecb;&#x7d39",{"_index":2347,"title":{},"body":{"api/promise.html#Promise":{}}}],["x5168;&#x57df",{"_index":1522,"title":{},"body":{"core.html#Let":{},"core.html#箭頭函數":{},"this.html#物件的方法調用-As-an-object-method":{},"this.html#簡易呼叫":{},"this.html#立即函式：":{},"this.html#Closure":{},"this.html#bind-apply-call":{}}}],["x5168;&#x57df;,0,1,2",{"_index":1995,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x5169;&#x8005;&#x5b8c;&#x5168;&#x7121;&#x95dc",{"_index":1297,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x5171;&#x6709;&#x5169;&#x7a2e;&#x985e;&#x578b;&#x7684",{"_index":2175,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["x5176",{"_index":2809,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x5176;&#x4ed6;&#x7db2;&#x57df;&#x4e2d;&#x7684",{"_index":2192,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5177;&#x540d;&#x51fd;&#x5f0f;&#x80fd;&#x5920;&#x5728;&#x51fd;&#x5f0f;&#x5167;&#x88ab;&#x8abf;&#x7528",{"_index":1343,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x518d;&#x5c07;&#x968a;&#x5217;&#x8f49;&#x63db;&#x6210;&#x5b57;&#x7b26;&#x4e32;&#x8f38;&#x51fa;&#xff08;&#x5df2;&#x7a7a;&#x683c;&#x70ba;&#x5206;&#x9694;&#x7b26;&#xff09",{"_index":3371,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x518d;&#x8f49;&#x56de;&#x4f86",{"_index":553,"title":{"copy.html#轉成-JSON-再轉回來":{}},"body":{}}],["x51cd;&#x7d50",{"_index":1484,"title":{},"body":{"core.html#屬性特徵":{}}}],["x51e1;&#x662f;&#x4f7f;&#x7528",{"_index":1184,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x51fa;&#x4f86;&#x7684;&#x8cc7;&#x6599;&#x662f;&#x4e00;&#x500b;&#x7269;&#x4ef6;&#xff0c;&#x6240;&#x4ee5;&#x7269;&#x4ef6;&#x6703;&#x6709;&#x50b3;&#x53c3;&#x8003;&#x7279;&#x6027",{"_index":1325,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x51fa;&#x73fe;&#x5728",{"_index":2110,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["x51fa;&#x968a",{"_index":3332,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x51fd;&#x5f0f",{"_index":1282,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x51fd;&#x5f0f;&#x4e0a",{"_index":1446,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x51fd;&#x5f0f;&#x5c07;&#x6703;&#x628a",{"_index":2008,"title":{},"body":{"this.html#Callback":{}}}],["x51fd;&#x5f0f;&#x5de5;&#x5ee0",{"_index":1387,"title":{"core.html#函式工廠":{}},"body":{}}],["x51fd;&#x5f0f;&#x6703;&#x56de;&#x50b3;&#x5927;&#x65bc;&#x7b49;&#x65bc;&#x6240;&#x7d66;&#x6578;&#x5b57;&#x7684;&#x6700;&#x5c0f;&#x6574;&#x6578",{"_index":1595,"title":{},"body":{"num.html#取值":{}}}],["x51fd;&#x5f0f;&#x6703;&#x56de;&#x50b3;&#x7121;&#x689d;&#x4ef6;&#x6368;&#x53bb;&#x5f8c;&#x7684;&#x6700;&#x5927;&#x6574;&#x6578",{"_index":1594,"title":{},"body":{"num.html#取值":{}}}],["x51fd;&#x5f0f;&#x6703;&#x81ea;&#x52d5;&#x63d0;&#x5347",{"_index":2085,"title":{},"body":{"variable.html#Hoisting":{}}}],["x51fd;&#x5f0f;&#x672c;&#x8eab;&#x5c31;&#x662f;&#x4e00;&#x500b;&#x7269;&#x4ef6",{"_index":1439,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x51fd;&#x5f0f;&#x7269;&#x4ef6;&#x6709;&#x4e00;&#x500b;&#x7279;&#x5225;&#x7684;&#x5c6c;&#x6027",{"_index":1440,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x51fd;&#x5f0f;&#x7269;&#x4ef6;&#x7279;&#x6709;&#x7684;&#x5c6c;&#x6027",{"_index":1443,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x51fd;&#x5f0f;&#x8868;&#x9054;&#x5f0f",{"_index":1110,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x51fd;&#x5f0f;&#x88e1;&#xff0c;&#x6bcf;&#x500b;&#x5143;&#x7d20;&#x5404;&#x57f7;&#x884c;&#x4e00;&#x6b21;&#xff0c;&#x63a5;&#x6536;&#x4e09;&#x500b;&#x53c3;&#x6578;&#xff1a",{"_index":2010,"title":{},"body":{"this.html#Callback":{}}}],["x51fd;&#x5f0f;&#xff0c;&#x5247;&#x6703",{"_index":2380,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x51fd;&#x5f0f;&#xff0c;&#x5728;&#x4e0b;&#x4e00;&#x500b",{"_index":2384,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x51fd;&#x6570;&#xff0c;&#x5e76;&#x5229;&#x7528;&#x6240;&#x6709;&#x4f7f;&#x5f97",{"_index":2547,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x51fd;&#x6578",{"_index":3112,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x51fd;&#x6578;&#x539f;&#x578b;&#x6700;&#x5be6;&#x7528;&#x7684",{"_index":2826,"title":{},"body":{"global/function.html#References":{}}}],["x51fd;&#x6578;&#x56de;&#x50b3;&#x56db;&#x6368;&#x4e94;&#x5165;&#x5f8c;&#x7684;&#x8fd1;&#x4f3c;&#x503c",{"_index":1593,"title":{},"body":{"num.html#取值":{}}}],["x51fd;&#x6578;&#x662f;&#x7570;&#x6b65;&#x7684",{"_index":296,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x51fd;&#x6578;&#x8072;&#x660e",{"_index":3092,"title":{},"body":{"operators/function.html#函數表達式":{},"operators/typeof.html#typeof":{}}}],["x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f",{"_index":3086,"title":{"operators/function.html#函數表達式":{}},"body":{"operators/function.html#函數表達式":{}}}],["x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x63d0;&#x5347",{"_index":3094,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#xff08;function",{"_index":3087,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["x51fd;&#x6578;&#x9673;&#x8ff0;&#x5f0f",{"_index":1101,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x51fd;&#x6578;&#x9673;&#x8ff0;&#x5f0f;&#x6c92;&#x6709;&#x540d;&#x7a31;&#x7121;&#x6cd5;&#x57f7;&#x884c",{"_index":1347,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x5206;&#x5272;&#x6307;&#x5b9a;&#x957f;&#x5ea6;&#x7684;&#x5143;&#x7d20;&#x6570;&#x7ec4",{"_index":2521,"title":{"array/splice.html#分割指定长度的元素数组":{}},"body":{}}],["x5224;&#x65b7;&#x60a8;&#x662f;&#x4f7f;&#x7528;&#x7b2c;&#x4e00;&#x65b9;&#x9084;&#x662f;&#x7b2c;&#x4e09;&#x65b9",{"_index":2263,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5224;&#x65b7;&#x6240;&#x6709;&#x5143;&#x7d20;&#x662f;&#x5426;&#x90fd;&#x7b26;&#x5408;&#x689d;&#x4ef6",{"_index":2481,"title":{},"body":{"array/array_methods.html#every":{}}}],["x5224;&#x65b7;&#x662f;&#x5426;&#x81f3;&#x5c11;&#x4e00;&#x500b;&#x5143;&#x7d20;&#x7b26;&#x5408;&#x689d;&#x4ef6",{"_index":2482,"title":{},"body":{"array/array_methods.html#some":{}}}],["x5229;&#x7528",{"_index":326,"title":{},"body":{"asynchronous.html#setTimeout":{},"core.html#const":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{}}}],["x5229;&#x7528;&#x9663;&#x5217;&#x53ca;for&#x8ff4;&#x5708",{"_index":1258,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x5229;&#x7528;&#x9663;&#x5217;&#x9577;&#x5ea6;&#x9032;&#x884c;&#x8ce6;&#x503c",{"_index":2313,"title":{},"body":{"array/array_insert.html#把數據插入陣列尾部":{}}}],["x522a;&#x4e0d;&#x6389;x",{"_index":3059,"title":{},"body":{"operators/delete.html#delete":{}}}],["x5230;&#x76ee;&#x524d;&#x70ba;&#x6b62;&#xff0c;&#x6211;&#x5011;&#x9084;&#x6c92;&#x6709;&#x770b;&#x5230;&#x4efb;&#x4f55;&#x5de5;&#x5ee0;&#x7528;&#x65b9;&#x6cd5;&#x8fd4;&#x56de;&#x5c0d;&#x8c61;&#xff0c;&#x9019;&#x662f;&#x6545;&#x610f;&#x7684;&#x3002",{"_index":2744,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5247;&#x53ef;&#x4ee5;&#x53d6;&#x5f97;&#x7d50;&#x679c",{"_index":2385,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x5247;&#x6574;&#x500b;&#x6f14;&#x7b97;&#x6cd5;&#x7684;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x70ba;o(n+n2)=o(n2)&#x3002",{"_index":3346,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x5247;&#x662f;&#x4e00;&#x500b;&#x8a9e;&#x6cd5;&#xff0c;&#x5c08;&#x9580;&#x7528;&#x4f86;&#x8655;&#x7406;&#x975e;&#x540c;&#x6b65;&#x884c;&#x70ba;&#xff0c",{"_index":2350,"title":{},"body":{"api/promise.html#Promise":{}}}],["x5247;&#x662f;&#x8a72;&#x7269;&#x4ef6",{"_index":1989,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["x5247;&#x6703;&#x56de;&#x50b3;&#x4e00;&#x500b;&#x7d93;&#x904e;&#x5305;&#x88f9;&#x5f8c;&#x7684",{"_index":2020,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x524d;&#x65b9;&#x52a0;&#x5165;&#x5206;&#x865f",{"_index":1166,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x524d;&#x7aef;&#x8fdb;&#x9636;&#x7b97;&#x6cd5;&#xff1a;&#x4e00;&#x770b;&#x5c31;&#x61c2;&#x7684;&#x961f;&#x5217;&#x53ca;&#x914d;&#x5957;&#x7b97;&#x6cd5;&#x9898",{"_index":3373,"title":{},"body":{"string/queue.html#References":{}}}],["x524d;&#x7f6e;&#x905e;&#x589e;&#x662f;&#x5148;&#x8a08;&#x7b97;&#x5f8c;&#x8ce6;&#x503c;&#xff0c;&#x5982;&#xff1a",{"_index":1908,"title":{},"body":{"operators.html#Increment":{}}}],["x5275;&#x9020",{"_index":1529,"title":{},"body":{"core.html#const":{}}}],["x5275;&#x9020;&#x74b0;&#x5883",{"_index":1096,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5275;&#x9020;&#x968e;&#x6bb5",{"_index":1107,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5275;&#x9020;&#x968e;&#x6bb5;&#x51fd;&#x5f0f;&#x512a;&#x5148",{"_index":1111,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5275;&#x9020;&#x968e;&#x6bb5;&#x51fd;&#x5f0f;&#x5df2;&#x53ef;&#x4ee5;&#x904b;&#x884c",{"_index":1104,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x52a0;&#x5206;&#x56de;&#x7b54",{"_index":1888,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x52a0;&#x62ec;&#x865f;&#x4fee;&#x6b63",{"_index":1554,"title":{},"body":{"core.html#箭頭函數":{}}}],["x52a0;&#x8f7d;&#x89c4;&#x5219",{"_index":386,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["x52a0;&#x9322;&#x5230;&#x8d85;&#x904e;100&#x5143;&#x624d;&#x505c;&#x6b62",{"_index":1346,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x52d5;&#x614b;&#x4f5c;&#x7528;&#x57df",{"_index":1091,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x52d5;&#x614b;&#x578b;&#x5225",{"_index":1170,"title":{"core.html#動態型別":{},"variable.html#動態型別":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x52d5;&#x614b;&#x7684",{"_index":2800,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x52d5;&#x8a5e",{"_index":222,"title":{"RESTfulAPI.html#動詞":{}},"body":{"RESTfulAPI.html#動詞":{}}}],["x52d5;&#x8a5e;&#x901a;&#x5e38;&#x5c31;&#x662f;&#x4e94;&#x7a2",{"_index":223,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x533f;&#x540d;&#x51fd;&#x5f0f",{"_index":1145,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{}}}],["x533f;&#x540d;&#x51fd;&#x6578",{"_index":3093,"title":{},"body":{"operators/function.html#函數表達式":{}}}],["x5340;&#x57df",{"_index":1987,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{},"this.html#立即函式：":{},"this.html#bind-apply-call":{}}}],["x5341;&#x9032;&#x4f4d",{"_index":1810,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5354;&#x5546;&#x7de9;&#x5b58",{"_index":2986,"title":{"http/caching.html#協商緩存":{}},"body":{}}],["x5373",{"_index":3185,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x5373;&#x53ef;&#x505a;&#x5230;&#x65b0;&#x589e;&#x5c6c;&#x6027;&#x8207;&#x503c;&#xff0c;&#x6240;&#x4ee5;funct",{"_index":1335,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x5373;&#x7b2c",{"_index":301,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x539f;&#x51fd;&#x6578",{"_index":2023,"title":{},"body":{"this.html#bind-apply-call":{},"global/function.html#cab-call-apply-vs-bind":{}}}],["x539f;&#x578b;&#x93c8;&#x4e0a;&#x65b0;&#x589e;&#x4e00;&#x500b;&#x5c64;&#x7d1a",{"_index":1453,"title":{},"body":{"core.html#繼承":{}}}],["x539f;&#x59cb;&#x578b;&#x5225",{"_index":1177,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x539f;&#x59cb;&#x578b;&#x5225;&#x53ca;&#x7269;&#x4ef6;&#x578b;&#x5225",{"_index":1176,"title":{"core.html#原始型別及物件型別":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x539f;&#x751f;ajax",{"_index":1328,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x539f;&#x751f;ajax&#x8b80;json",{"_index":1327,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x53bb;&#x4e0a;&#x5c64;&#x7d81;&#x5b9a",{"_index":583,"title":{},"body":{"event.html#代理":{}}}],["x53c3;&#x6578",{"_index":1373,"title":{"core.html#參數":{}},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#屬性特徵":{},"core.html#箭頭函數":{},"this.html#bind-apply-call":{}}}],["x53c3;&#x8003;&#x4e5f;&#x90fd;&#x4e0d;&#x4e00;&#x6a23",{"_index":1298,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x53c3;&#x8003;&#x540c;&#x4e00;&#x500b;&#x8a18;&#x61b6;&#x9ad4",{"_index":1218,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x53c3;&#x8003;&#x7269;&#x4ef6",{"_index":1265,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["x53c8;&#x6709;&#x5f37;&#x5f31;&#x6821;&#x9a57;&#x4e4b;&#x5206;&#xff0c;&#x5982;&#x679c",{"_index":3000,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x53ca",{"_index":2369,"title":{},"body":{"api/promise.html#Promise":{},"api/promise.html#鏈接":{}}}],["x53d6;&#x503c",{"_index":1591,"title":{"num.html#取值":{}},"body":{}}],["x53d6;&#x503c;undefin",{"_index":1304,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x53d6;&#x5c0f;&#x6578;&#x524d;&#x7684",{"_index":1809,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x53d6;&#x5f97;&#x6210;&#x529f;&#x6216;&#x5931;&#x6557;&#x7684;&#x7d50;&#x679c;&#x3002",{"_index":2370,"title":{},"body":{"api/promise.html#Promise":{}}}],["x53d6;&#x5f97;&#x7279;&#x5b9a;&#x503c;&#x7684;&#x65b9;&#x6cd5",{"_index":1491,"title":{},"body":{"core.html#屬性特徵":{}}}],["x53d6;&#x5f97;&#x9663;&#x5217;&#x6700;&#x5f8c;&#x4e00;&#x500b;&#x503c",{"_index":1495,"title":{},"body":{"core.html#屬性特徵":{}}}],["x53d6;&#x9910;&#x7684;&#x865f;&#x78bc;&#x724c;&#xff0c;&#x8a8d;&#x865f;&#x4e0d;&#x8a8d;&#x4eba",{"_index":2226,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x53e6;&#x4e00;&#x500b;&#x7279;&#x9ede;&#x5728;&#x65bc",{"_index":2376,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x53e6;&#x5916;&#xff0c;&#x9019;&#x88e1;&#x70ba;&#x4f55;&#x8981;&#x7528;data",{"_index":1683,"title":{},"body":{"performance.html#懶加載":{}}}],["x53ea;&#x57f7;&#x884c",{"_index":307,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x53ea;&#x6709;&#x4e00;&#x500b;&#x5c6c;&#x6027;&#x503c;&#xff0c;&#x5c31;&#x662f",{"_index":2981,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x53ea;&#x67e5;&#x8a62;&#x4e00;&#x500b",{"_index":1691,"title":{},"body":{"performance.html#DOM-查詢做緩存":{}}}],["x53ea;&#x80fd;&#x5728;&#x51fd;&#x6578;&#x5167;&#x4f7f;&#x7528",{"_index":3110,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x53ef;&#x4ee5;&#x4f5c;&#x70ba;&#x547c;&#x53eb",{"_index":2017,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":3236,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x53ef;&#x4ee5;&#x505a;&#x5230;&#x9664;&#x4e86;&#x88ab;&#x51cd;&#x7d50",{"_index":1524,"title":{},"body":{"core.html#const":{}}}],["x53ef;&#x4ee5;&#x505a;&#x5f88;&#x591a;&#x4e0d;&#x540c;&#x4e8b;&#x60c5",{"_index":1390,"title":{},"body":{"core.html#函式工廠":{}}}],["x53ef;&#x4ee5;&#x628a;&#x5176;&#x4ed6;&#x7269;&#x4ef6;&#x4f5c;&#x70ba;&#x539f;&#x578b;&#x4f7f;&#x7528",{"_index":1454,"title":{},"body":{"core.html#繼承":{}}}],["x53ef;&#x4ee5;&#x900f;&#x904e;&#x9ede;&#x904b;&#x7b97;&#x5b50;&#x4e0d;&#x65b7;&#x5411;&#x4e0a;&#x67e5;&#x627e;&#x53d6;&#x5f97;&#x65b9;&#x6cd5",{"_index":1311,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x53ef;&#x4ee5;&#x91cd;&#x65b0;&#x8ce6;&#x503c",{"_index":3109,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x53ef;&#x5229;&#x7528",{"_index":1121,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x53ef;&#x5426;&#x5beb;&#x5165",{"_index":1476,"title":{},"body":{"core.html#屬性特徵":{}}}],["x53ef;&#x5426;&#x88ab;&#x5217;&#x8209",{"_index":1478,"title":{},"body":{"core.html#屬性特徵":{}}}],["x53ef;&#x5426;&#x88ab;&#x522a;&#x9664",{"_index":1477,"title":{},"body":{"core.html#屬性特徵":{}}}],["x53ef;&#x7528;&#x5305;&#x88f9;&#x7269;&#x4ef6;&#x7684;&#x6240;&#x6709;&#x65b9;&#x6cd5",{"_index":1178,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x5408;&#x4f75",{"_index":1694,"title":{"performance.html#合併-DOM-插入-createDocumentFragment":{}},"body":{}}],["x5408;&#x4f75;&#x7269;&#x4ef6",{"_index":2888,"title":{"object/assign.html#合併物件":{}},"body":{}}],["x540c;&#x6642;&#x5b58;&#x5728;&#x7684;&#x6642;&#x5019;&#xff0c;pragma",{"_index":2978,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x540c;&#x6a23;&#x662f;&#x7269;&#x4ef6;&#x578b;&#x5225",{"_index":1220,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x540c;&#x6b65;&#x6982;&#x5ff5;&#x7684;&#x5148;&#x8dd1;&#x5b8c",{"_index":1124,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x540c;&#x6b65;/&#x975e;&#x540c;&#x6b65",{"_index":1118,"title":{"core.html#同步-非同步":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5426;&#x5247",{"_index":2393,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x547c;&#x53eb",{"_index":2030,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x548c",{"_index":1799,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"operators.html#What-is-the-difference-between-the-equality-operators-and":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{},"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["x548c;&#x524d;&#x7f6e;&#x905e;&#x589",{"_index":1903,"title":{},"body":{"operators.html#Increment":{}}}],["x548c;&#x7576;&#x524d;&#x6587;&#x4ef6;&#x7684",{"_index":2998,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x548c;gpu",{"_index":1650,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x54cd;&#x5e94;&#x5f0f;&#x6838;&#x5fc3;&#x5c31;&#x662f;&#xff0c;gett",{"_index":1516,"title":{},"body":{"core.html#屬性特徵":{}}}],["x554f;&#x984c",{"_index":1785,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x5584;&#x7528",{"_index":1821,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x55ae;&#x7d14;&#x8fed;&#x4ee3;&#x9663;&#x5217;&#x7684;&#x8a71;&#xff0c;for&#x2026;in",{"_index":3148,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x56b4;&#x683c;&#x6a21;&#x5f0f",{"_index":1425,"title":{},"body":{"core.html#this":{}}}],["x56b4;&#x683c;&#x6a21;&#x5f0f;&#x4e0b",{"_index":1430,"title":{},"body":{"core.html#this":{}}}],["x56b4;&#x683c;&#x76f8;&#x7b49",{"_index":1202,"title":{"core.html#嚴格相等-寬鬆相等":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x56de;&#x4f86;&#xff0c;&#x56de;&#x50b3;&#x7684;&#x662f;&#x7d81;&#x5b9a",{"_index":2021,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x56de;&#x50b3",{"_index":1774,"title":{},"body":{"math.html#Math":{}}}],["x56de;&#x50b3;&#x300c;key&#x300d",{"_index":3151,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x56de;&#x50b3;&#x300c;key&#x300d;&#xff0c;&#x4e14;&#x6703;&#x8b80;&#x53d6;&#x5230;&#x9663;&#x5217;&#x65b0;&#x589e;&#x7684;&#x5c6c;&#x6027;&#x540d;&#x7a31",{"_index":3158,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x56de;&#x50b3;&#x300c;value&#x300d",{"_index":3152,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x56de;&#x50b3;&#x5931;&#x6557",{"_index":2356,"title":{},"body":{"api/promise.html#Promise":{}}}],["x56de;&#x50b3;&#x6b63;&#x78ba",{"_index":2355,"title":{},"body":{"api/promise.html#Promise":{}}}],["x56de;&#x50b3;&#x7b2c;&#x4e00;&#x500b;&#x6eff;&#x8db3;&#x6240;&#x63d0;&#x4f9b;&#x4e4b;&#x6e2c;&#x8a66;&#x51fd;&#x5f0f;&#x7684;&#x5143;&#x7d20;&#x503c;&#x3002;&#x5426;&#x5247;&#x56de;&#x50b3",{"_index":2476,"title":{},"body":{"array/array_methods.html#find":{}}}],["x56de;&#x547c;&#x51fd;&#x5f0f",{"_index":2062,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x56e0;&#x4e3a;sum&#x662f;&#x5e38;&#x89c4;&#x51fd;&#x6570;&#xff0c;&#x6240;&#x4ee5;&#x5728;&#x8abf;&#x7528",{"_index":365,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x56e0;&#x70ba",{"_index":1798,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x56e0;&#x70ba;&#x4ed6;&#x5011;&#x6839;&#x672c;&#x662f;&#x540c;&#x4e00;&#x500b;&#x7269;&#x4ef6;&#xff0c;&#x9019;&#x5c31;&#x662f;&#x6240;&#x8b02;&#x7684",{"_index":532,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x56e0;&#x70ba;&#x51fd;&#x5f0f;&#x5728;&#x57f7;&#x884c;&#x6642;&#xff0c;&#x8b8a;&#x6578;&#x9084;&#x6c92;&#x6709;&#x88ab;&#x8ce6;&#x4e88;&#x503c",{"_index":1117,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x56e0;&#x70ba;&#x5b83;&#x672c;&#x8cea;&#x5c31;&#x662f;undefin",{"_index":1435,"title":{},"body":{"core.html#this":{}}}],["x56e0;&#x70ba;&#x5c0d;&#x6211;&#x5011;&#x4f86;&#x8aaa;&#xff0c;&#x6211;&#x5011;&#x5be6;&#x969b;&#x662f;&#x5728;&#x8a2a;&#x554f",{"_index":2214,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x56e0;&#x70ba;&#x6d6e;&#x9ede;&#x6578;&#x96bb;&#x6709;52&#x4f4d;&#x6709;&#x6548;&#x6578;&#x5b57;&#xff0c;&#x5f9e;&#x7b2c;53&#x4f4d;&#x958b;&#x59cb;&#xff0c;&#x5c31;&#x820d;&#x5165;&#x4e86;&#x3002;&#x9019;&#x6a23;&#x5c31;&#x9020;&#x6210;&#x4e86;&#x201c;&#x6d6e;&#x9ede;&#x6578;&#x7cbe;&#x5ea6;&#x640d;&#x5931;&#x201d;&#x554f;&#x984c;&#x3002",{"_index":1797,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x56e0;&#x70ba;&#x7570;&#x6b65;&#x51fd;&#x6578;&#x5fc5;&#x9808;&#x7b49;&#x4e3b;&#x9032;&#x7a0b;&#x904b;&#x884c;&#x5b8c;&#x7562;&#x624d;&#x6703;&#x904b;&#x884c;&#xff0c;settimeout()&#x5167;&#x90e8;&#x56de;&#x8abf;&#x904b;&#x884c;&#x7684;&#x6642;&#x5019;&#xff0c;&#x4e3b;&#x9032;&#x7a0b;&#x5df2;&#x7d93;&#x904b;&#x884c;&#x5b8c;&#x7562;&#x4e86;&#xff0c;&#x6b64;&#x6642;i=5&#xff0c;&#x6240;&#x4ee5;&#x8f38;&#x51fa;5&#x3002",{"_index":297,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x56e0;&#x70ba;&#x8a9e;&#x5f59;&#x4e0a;&#x80fd;&#x5920;&#x5f15;&#x7528;self&#x8b8a;&#x6578;&#xff08;&#x540c;&#x500b;&#x584a;&#x4f5c;&#x7528;&#x57df;&#xff09",{"_index":2822,"title":{},"body":{"global/function.html#bind":{}}}],["x56e0;&#x70ba;object.assign&#x8ddf;&#x6211;&#x5011;&#x624b;&#x52d5;&#x8907;&#x88fd;&#x7684;&#x6548;&#x679c;&#x76f8;&#x540c",{"_index":551,"title":{},"body":{"copy.html#Object-assign":{}}}],["x570b;&#x969b;&#x6a19;&#x6e96",{"_index":2879,"title":{},"body":{"global/date.html#Date-prototype-toISOString":{}}}],["x5716;&#x89e3",{"_index":3030,"title":{},"body":{"http/caching.html#References":{}}}],["x5718;&#x968a",{"_index":1897,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x5728",{"_index":1115,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x5728;&#x4e00;&#x500b;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#x4e2d;&#x5b9a;&#x7fa9;&#x53e6;&#x4e00;&#x500b;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#xff0c;&#x53ef;&#x4ee5;&#x5e6b;&#x52a9;&#x6211;&#x5011;&#x628a;&#x8907;&#x96dc;&#x7684;&#x5de5;&#x5ee0;&#x51fd;&#x6578;&#x62c6;&#x5206;&#x6210;&#x66f4;&#x5c0f;&#x7684;&#xff0c;&#x53ef;&#x91cd;&#x7528;&#x7684;&#x788e;&#x7247;&#x3002",{"_index":2711,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5728;&#x4e8c;&#x9032;&#x88fd;&#x8868;&#x793a;&#x70ba",{"_index":1802,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5728;&#x5275;&#x9020;&#x74b0;&#x5883;&#x628a;&#x8a18;&#x61b6;&#x9ad4;&#x7a7a;&#x9593;&#x6e96;&#x5099;&#x597d;&#xff0c;&#x9019;&#x500b;&#x6d41;&#x7a0b;&#x7a31;&#x70ba",{"_index":1094,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5728;&#x5275;&#x9020;&#x968e;&#x6bb5;&#x5c31;&#x6703",{"_index":1102,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5728;&#x539f;&#x6709;&#x968a;&#x5217;&#x7684;&#x57fa;&#x790e;&#x4e0a;&#x64f4;&#x5145;&#x4e86;&#xff1a;&#x968a;&#x982d;&#x3001;&#x968a;&#x5c3e;&#x90fd;&#x53ef;&#x4ee5;&#x9032;&#x968a;&#x51fa;&#x968a",{"_index":3356,"title":{},"body":{"string/queue.html#時間複雜度":{},"string/queue.html#雙端隊列（Deque）":{}}}],["x5728;&#x539f;&#x672c;&#x7684;&#x9663;&#x5217;&#xff0c;&#x65b0;&#x589e;&#x4e00;&#x500b;&#x5c6c;&#x6027",{"_index":3153,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x5728;&#x5927;&#x90e8;&#x5206;&#x60c5;&#x6cc1;&#x4e0b;&#xff0c;&#x958b;&#x767c;&#x8005;&#x7fd2;&#x6163;&#x50c5;&#x4f7f;&#x7528",{"_index":2371,"title":{},"body":{"api/promise.html#Promise":{}}}],["x5728;&#x67d0;&#x500b;&#x7cbe;&#x5ea6;&#x9ede;&#x76f4;&#x63a5;&#x6368;&#x68c4",{"_index":1814,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5728;&#x6bcf;&#x4e00;&#x6b21;&#x8fed;&#x4ee3;&#x7684;&#x4f7f;&#x7528;&#x4e2d;&#x90fd;&#x6703;&#x7522;&#x751f;&#x526f;&#x4f5c;&#x7528;&#xff0c;&#x56e0;&#x6b64",{"_index":2502,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x5728;&#x6bcf;&#x500b;&#x57f7;&#x884c;&#x74b0;&#x5883;&#x5b58;&#x5728",{"_index":1394,"title":{},"body":{"core.html#this":{}}}],["x5728;&#x7acb;&#x5373;&#x51fd;&#x5f0f;&#x524d;&#x6216;&#x5f8c;&#x52a0;&#x5206;&#x865f",{"_index":1368,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x5728;&#x8fed;&#x4ee3",{"_index":3136,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x5728;&#x9019;&#x4e9b;&#x60c5;&#x6cc1;&#x4e0b;&#xff0c;&#x6211;&#x5011;&#x53ef;&#x4ee5;&#x8fd4;&#x56d",{"_index":2733,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x57f7;&#x884c",{"_index":358,"title":{},"body":{"arrowFunction.html#Arrow-Function":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#const":{}}}],["x57f7;&#x884c;&#x51fd;&#x5f0f;&#x7684;&#x7d50;&#x679c",{"_index":2000,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x57f7;&#x884c;&#x6642;&#x76f4;&#x63a5;&#x628a;&#x51fd;&#x6578;&#x53d6;&#x51fa;&#x4f86",{"_index":1999,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x57f7;&#x884c;&#x7269;&#x4ef6;&#x7684;&#x51fd;&#x5f0f",{"_index":1259,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x57f7;&#x884c;&#x932f;&#x8aa4",{"_index":1168,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x57f7;&#x884c;&#x9589;&#x5305;&#x5167;&#x51fd;&#x5f0f;&#x4e5f;&#x662f",{"_index":1408,"title":{},"body":{"core.html#this":{}}}],["x57f7;&#x884c;&#x968e;&#x6bb5",{"_index":1100,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x57f7;&#x884c;&#x968e;&#x6bb5;&#x624d;&#x6703;&#x8ce6;&#x4e88;&#x78ba;&#x7acb;&#x578b;&#x5225",{"_index":1171,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x57f7;&#x884c;&#x968e;&#x6bb5;&#x624d;&#x78ba;&#x8a8d;&#x578b;&#x5225",{"_index":1173,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x57fa;&#x672c;&#x578b;&#x5225;&#x662f;&#x50b3",{"_index":526,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x5916;&#x5c64;&#x5c0f;&#x62ec;&#x865f;&#x5305;&#x8d77;&#x4f86",{"_index":1146,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{}}}],["x5916;&#x90e8;&#x7121;&#x6cd5;&#x5b58;&#x53d6",{"_index":3111,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x591a;&#x4f7f;&#x7528;&#x5167;&#x5b58;&#x3001;&#x7de9;&#x5b58;&#x6216;&#x8005;&#x5176;&#x4ed6;&#x65b9;&#x6cd5",{"_index":1648,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x591a;&#x6578;&#x6642;&#x5019;&#x4e00;&#x822c;&#x51fd;&#x6578;&#x7121;&#x7570;&#xff0c;&#x4f46;&#x662f;&#x6700;&#x5927;&#x7684;&#x5dee;&#x5225;&#x5728;&#x65bc",{"_index":2807,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x591a;&#x9805;&#x5f0f;&#x6642;&#x9593",{"_index":3352,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x5927;&#x578b;&#x6846;&#x67b6;&#x4e0b",{"_index":1371,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x5927;&#x90e8;&#x5206;session&#x6a5f;&#x5236;&#x90fd;&#x4f7f;&#x7528;&#x6703;&#x8a71;cookie&#x4f86;&#x4fdd;&#x5b58;sess",{"_index":2251,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5931;&#x6557;&#x7684;&#x884c;&#x70ba;&#x4e00;&#x5f8b;&#x4ea4;&#x7d66;&#x4e86",{"_index":2374,"title":{},"body":{"api/promise.html#Promise":{}}}],["x597d;&#x6d88;&#x606f;&#x662f;&#x5728",{"_index":1893,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x5982;&#x4f55;&#x5feb;&#x901f;&#x5c07;&#x4e00;&#x500b;&#x5b57;&#x7b26;&#x4e32;&#x6578;&#x7d44;&#x8f49;&#x5316;&#x70ba;&#x6578;&#x5b57;&#x985e;&#x578b;&#x7684;&#x6578;&#x7d44",{"_index":2576,"title":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}},"body":{}}],["x5982;&#x540c;&#x51fd;&#x5f0f;&#x8868;&#x9054;&#x5f0f",{"_index":1349,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x5982;&#x679c",{"_index":1236,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x5982;&#x679c;&#x4e0d;&#x662f",{"_index":2383,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x5982;&#x679c;&#x4f60;&#x53ea;&#x662f;&#x5c0d;&#x6578;&#x5b57;&#x9032;&#x884c;&#x904d;&#x6b77;&#x6642;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":2505,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x5982;&#x679c;&#x4f60;&#x9700;&#x8981;&#x8fed;&#x4ee3;&#x4e00;&#x500b;&#x9663;&#x5217;&#xff0c;&#x4f7f;&#x5176;&#x672c;&#x8eab;&#x767c;&#x751f;&#x8b8a;&#x5316;&#x4e14;&#x4e0d;&#x9700;&#x8981;&#x8fd4;&#x56de;&#x4e00;&#x500b;&#x65b0;&#x9663;&#x5217;&#x6642;&#xff0c;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":2504,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x5982;&#x679c;&#x5169;&#x500b;&#x55ae;&#x8a5e;&#x9593;&#x6709;&#x591a;&#x9918;&#x7684;&#x7a7a;&#x683c;&#xff0c;&#x5c07;&#x53cd;&#x8f49;&#x5f8c;&#x55ae;&#x8a5e;&#x9593;&#x7684;&#x7a7a;&#x683c;&#x6e1b;&#x5c11;&#x5230;&#x53ea;&#x542b;&#x4e00;&#x500b;&#x3002",{"_index":3364,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x5982;&#x679c;&#x55ae;&#x5c31;&#x5be6;&#x73fe;&#x529f;&#x80fd;&#xff0c;cookie&#x8207;session&#x5f7c;&#x6b64;&#x4e4b;&#x9593;&#x662f;&#x53ef;&#x4ee5;&#x4e92;&#x63db;&#x7684;(&#x6307;&#x7684;&#x662f;&#x4f60;&#x53ef;&#x4ee5;&#x628a;&#x8cc7;&#x6599;&#x5b58;&#x653e;&#x5728;session&#x6216;&#x662f;cookie&#xff0c;&#x4e26;&#x4e0d;&#x662f;&#x6307;session&#x53ef;&#x4ee5;&#x88ab;&#x653e;&#x5728;client&#x7aef;&#x7576;cookie&#x4f7f;&#x7528;)&#x3002;&#x4f46;&#x662f;cookie&#x5728;&#x6700;&#x55ae;&#x7d14;&#x7684;&#x60c5;&#x6cc1;&#x88e1;&#xff0c;&#x662f;&#x6709;&#x5b89;&#x5168;&#x6027;&#x7684;&#x554f;&#x984c;(&#x8cc7;&#x6599;&#x5728;client&#x7aef;)&#x3002;&#x6240;&#x4ee5;&#x8003;&#x91cf;&#x5230;&#x9019;&#x9ede;&#xff0c;&#x5927;&#x90e8;&#x5206;&#x90fd;&#x6703;&#x9078;&#x64c7;session&#x3002;&#x4f46;&#x662f;&#x6b63;&#x5982;cookie&#x662f;&#x4e00;&#x500b;&#x5916;&#x52a0;&#x7684;&#x529f;&#x80fd;&#xff0c;session&#x4e5f;&#x4e0d;&#x5c6c;&#x65bc;http&#x5354;&#x5b9a;&#x3002;&#x53ea;&#x8981;&#x662f;&#x5916;&#x52a0;&#x529f;&#x80fd;&#xff0c;&#x5c31;&#x5fc5;&#x9808;&#x984d;&#x5916;&#x5beb;&#x7a0b;&#x5f0f;&#x5be6;&#x73fe;&#x3002",{"_index":2257,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5982;&#x679c;&#x6211;&#x5011;&#x4f7f;&#x7528;&#x7b2c;&#x4e00;&#x65b9;cookie&#xff0c;&#x6703;&#x70ba;&#x57df;&#x540d;a&#x5efa;&#x7acb;&#x4e00;&#x500b;cookie&#xff0c;&#x70ba;&#x57df;&#x540d;b&#x518d;&#x5efa;&#x7acb;&#x4e00;&#x500b;cookie&#xff0c;&#x4ed6;&#x5011;&#x53ef;&#x4ee5;&#x95dc;&#x806f;&#x5404;&#x81ea;&#x57df;&#x540d;&#x4e0b;&#x7db2;&#x9801;&#x4e0a;&#x7684;&#x884c;&#x70ba;&#xff0c;&#x4f46;&#x662f;&#x7121;&#x6cd5;&#x95dc;&#x806f;&#x8d77;&#x4f86;&#x3002",{"_index":2218,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5982;&#x679c;&#x6587;&#x4ef6;&#x7684;&#x4fee;&#x6539;&#x983b;&#x7387;&#x5728;&#x79d2;&#x7d1a;&#x4ee5;&#x4e0b;&#xff0c;last",{"_index":3027,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x5982;&#x679c;&#x6587;&#x4ef6;&#x88ab;&#x4fee;&#x6539;&#x4e86;&#xff0c;&#x4f46;&#x662f;&#x5167;&#x5bb9;&#x6c92;&#x6709;&#x4efb;&#x4f55;&#x8b8a;&#x5316;&#x7684;&#x6642;&#x5019;&#xff0c;last",{"_index":3029,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x5982;&#x679c;&#x662f",{"_index":2379,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x5982;&#x679c;&#x6f14;&#x7b97;&#x6cd5;&#x4e2d;&#x5305;&#x542b;&#x5de2;&#x72c0;&#x7684;&#x8ff4;&#x5708;&#xff0c;&#x5247;&#x57fa;&#x672c;&#x8a9e;&#x53e5;&#x901a;&#x5e38;&#x662f;&#x6700;&#x5167;&#x5c64;&#x7684;&#x8ff4;&#x5708;&#x9ad4;&#xff0c;&#x5982;&#x679c;&#x6f14;&#x7b97;&#x6cd5;&#x4e2d;&#x5305;&#x542b;&#x4e26;&#x5217;&#x7684;&#x8ff4;&#x5708;&#xff0c;&#x5247;&#x5c07;&#x4e26;&#x5217;&#x8ff4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x76f8;&#x52a0;&#x3002;&#x4f8b;&#x5982;&#xff1a",{"_index":3340,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x5982;&#x679c;&#x700f;&#x89bd;&#x5668;&#x4e0d;&#x652f;&#x63f4",{"_index":1471,"title":{},"body":{"core.html#繼承":{}}}],["x5982;&#x679c;&#x8981;&#x4f7f;&#x7528",{"_index":1543,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x5982;&#x679c;&#x9084;&#x662f;&#x8a2a;&#x554f",{"_index":2207,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5b57;&#x4e32;&#x900f;&#x904e;parseint",{"_index":2049,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x5b57;&#x4e32;1",{"_index":1206,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x5b58;&#x503c;&#x7684;&#x65b9;&#x6cd5",{"_index":1492,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5b58;&#x653e;&#x5728;&#x5167;&#x5b58;&#x4e2d;)&#xff0c;&#x5b58;&#x653e;&#x7684;&#x4f4d;&#x7f6e;&#x662f;&#x7531;&#x700f;&#x89bd;&#x5668;&#x63a7;&#x5236;&#x7684;&#x3002",{"_index":2939,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x5b58;&#x653e;&#x5728;&#x786c;&#x76e4;&#x4e2d;)&#x548c",{"_index":2938,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x5b83;&#x5728;javascript",{"_index":1151,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x5b83;&#x8868;&#x793a;&#x4e86;&#x300c;&#x9762;&#x5411;&#x3001;&#x9023;&#x63a5;&#x300d;&#x548c;/&#x6216;&#x300c;&#x4fdd;&#x6301;&#x72c0;&#x614b;&#x300d;&#x9019;&#x6a23;&#x5169;&#x500b;&#x7570;&#x8b70",{"_index":2230,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x5b89;&#x88dd;&#x6559;&#x5b78;&#xff1a",{"_index":1541,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x5b8c;&#x5168;&#x7d81;&#x5b9a;&#x5728;&#x8a9e;&#x5f59;&#x4e0a;&#x7684;&#x4f4d;&#x7f6e;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#x5728",{"_index":2810,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x5b9a;&#x7fa9;&#x5c0d;&#x8c61;&#x4e0a;&#x7684;&#x65b9;&#x6cd5",{"_index":353,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x5b9e;&#x4f8b;&#x4f5c;&#x4e3a",{"_index":1506,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5ba3;&#x544a",{"_index":1181,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x5bb9;&#x6613;&#x51fa;&#x932f;&#x7684;&#x5730;&#x65b9",{"_index":1160,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x5be6;&#x73fe;&#x975e;&#x540c;&#x6b65",{"_index":1123,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x5be6;&#x969b;&#x57f7;&#x884c;&#x5728;&#x9019",{"_index":1375,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["x5be6;&#x969b;&#x904b;&#x4f5c;&#x62c6;&#x89e3",{"_index":1114,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5be6;&#x9ad4",{"_index":1452,"title":{},"body":{"core.html#繼承":{}}}],["x5beb;&#x6cd5;&#xff0c;&#x5982;&#x679c;&#x4ee5;&#x5f8c;&#x6709;&#x4ec0;&#x9ebc;&#x689d;&#x4ef6;&#x6539;&#x4e86;&#xff0c;&#x76f4;&#x63a5;&#x6539",{"_index":3237,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x5bec;&#x9b06;&#x76f8;&#x7b49",{"_index":1203,"title":{"core.html#嚴格相等-寬鬆相等":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x5bf9;&#x8c61;&#x4f20;&#x5165",{"_index":1505,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5c01;&#x88dd",{"_index":1483,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5c06;&#x904d;&#x5386;&#x6b64;&#x5bf9;&#x8c61;&#x6240;&#x6709;&#x7684;&#x5c5e;&#x6027;&#xff0c;&#x5e76;&#x4f7f;&#x7528",{"_index":1508,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5c07;&#x5b83;&#x5011;&#x5206;&#x89e3;&#x6210;&#x591a;&#x500b;&#x4e0d;&#x540c;&#x7684;&#x5de5;&#x5ee0;&#x901a;&#x5e38;&#x662f;&#x6709;&#x5e6b;&#x52a9;&#x7684;&#xff0c;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x5982;&#x4e0b;&#x7de8;&#x5beb;&#x3002",{"_index":2737,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5c07;&#x5de5;&#x5ee0;&#x50b3;&#x905e;&#x7d66;&#x9ad8;&#x968e;&#x51fd;&#x6578;&#xff0c;&#x9019;&#x5c07;&#x7d66;&#x6211;&#x5011;&#x5e36;&#x4f86;&#x5de8;&#x5927;&#x7684;&#x63a7;&#x5236;&#x529b;&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x6211;&#x5011;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x9019;&#x500b;&#x6982;&#x5ff5;&#x4f86;&#x5275;&#x5efa;&#x4e00;&#x500b;&#x589e;&#x5f37;&#x7684;&#x5c0d;&#x8c61;&#x3002",{"_index":2749,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5c07;&#x6703;&#x88ab;&#x7f6e;&#x63db;&#x6210;&#x5168;&#x57df;&#x8b8a;&#x6578",{"_index":1424,"title":{},"body":{"core.html#this":{}}}],["x5c07;&#x6bcf;&#x4e00;&#x500b;&#x6578;&#x5b57;&#x8f49;&#x63db;&#x70ba;&#x5b57;&#x7b26;&#x4e32;&#x7136;&#x5f8c;&#x7d71;&#x8a08",{"_index":3210,"title":{},"body":{"string/split.html#split":{}}}],["x5c07;&#x8fd4;&#x56de",{"_index":2558,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x5c0d;&#x4e00;&#x500b;&#x9663;&#x5217;&#x7684;&#x6240;&#x6709;&#x5143;&#x7d20;&#x9032;&#x884c;&#x6392;&#x5e8f;&#xff0c;&#x4e26;&#x56de;&#x50b3;&#x6b64;&#x9663;&#x5217",{"_index":2477,"title":{},"body":{"array/array_methods.html#sort":{}}}],["x5c0d;&#x5143;&#x7d20;&#x91cd;&#x65b0;&#x7d44;&#x88dd;&#xff0c;&#x751f;&#x6210;&#x65b0;&#x9663;&#x5217",{"_index":2472,"title":{},"body":{"array/array_methods.html#map":{},"array/map.html#map":{}}}],["x5c0d;&#x8c61",{"_index":357,"title":{},"body":{"arrowFunction.html#Arrow-Function":{},"operators/precedence.html#運算符比-運算符高":{}}}],["x5c0d;&#x8c61;&#x53ef;&#x4ee5;&#x7528",{"_index":2717,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5c0f;&#x62ec;&#x865f;&#x53ef;&#x4ee5;&#x79fb;&#x5230;&#x5916;&#x5c64",{"_index":1364,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x5c0f;&#x6578",{"_index":1784,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x5c0f;&#x6578;&#x7684;&#x7b97;&#x6cd5;&#xff0c;&#x662f;&#x4e58;2",{"_index":1805,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5c31;&#x662f;&#x7269;&#x4ef6",{"_index":1274,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x5c31;&#x662f;&#x7c21;&#x6613;&#x547c;&#x53eb",{"_index":1407,"title":{},"body":{"core.html#this":{}}}],["x5c31;&#x6703;&#x505a;&#x539f;&#x578b;&#x4e0a;&#x7684;&#x65b9;&#x6cd5",{"_index":1442,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x5c31;&#x80fd;&#x4f7f;&#x7528",{"_index":2353,"title":{},"body":{"api/promise.html#Promise":{}}}],["x5c3e;&#x6578",{"_index":1795,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5c5e;&#x6027;&#xff0c;&#x811a;&#x672c;&#x5c31;&#x4f1a;&#x5f02;&#x6b65;&#x52a0;&#x8f7d;&#x3002;&#x6e32;&#x67d3;&#x5f15;&#x64ce;&#x9047;&#x5230;&#x8fd9;&#x4e00;&#x884c;&#x547d;&#x4ee4;&#xff0c;&#x5c31;&#x4f1a;&#x5f00;&#x59cb;&#x4e0b;&#x8f7d;&#x5916;&#x90e8;&#x811a;&#x672c;&#xff0c;&#x4f46;&#x4e0d;&#x4f1a;&#x7b49;&#x5b83;&#x4e0b;&#x8f7d;&#x548c;&#x6267;&#x884c",{"_index":385,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["x5c6c;&#x6027",{"_index":1262,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#屬性特徵":{}}}],["x5c6c;&#x6027;&#x3002",{"_index":2990,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x5c6c;&#x6027;&#x4e2d;&#x662f;&#x6700;&#x4f4e;&#x7684;&#x3002",{"_index":2948,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x5c6c;&#x6027;&#x5171;&#x540c;&#x4f86;&#x63a7;&#x5236;&#x3002",{"_index":2941,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x5c6c;&#x6027;&#x7279;&#x5fb5",{"_index":1473,"title":{"core.html#屬性特徵":{}},"body":{}}],["x5c6c;&#x6027;&#xff0c;&#x8abf;&#x6574;&#x5c6c;&#x6027;&#x7684;&#x7279;&#x5fb5",{"_index":1474,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5de5;&#x5ee0;&#x5141;&#x8a31;&#x6211;&#x5011;&#x5f9e;&#x8a08;&#x7b97;&#x4e2d;&#x5206;&#x96e2;&#x6211;&#x5011;&#x7684;&#x6578;&#x64da;&#x3002",{"_index":2746,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5de5;&#x5ee0;&#x9f13;&#x52f5;&#x6211;&#x5011;&#x7528;&#x539f;&#x59cb;&#x6578;&#x64da;&#x4f86;&#x6a21;&#x64ec;&#x8907;&#x96dc;&#x548c;&#x7570;&#x6b65;&#x6578;&#x64da;&#xff0c;&#x539f;&#x59cb;&#x6578;&#x64da;&#x5177;&#x6709;&#x7d44;&#x5408;&#x7684;&#x81ea;&#x7136;&#x80fd;&#x529b;&#xff0c;&#x800c;&#x4e0d;&#x5f37;&#x8feb;&#x6211;&#x5011;&#x53bb;&#x505a;&#x4e00;&#x4e9b;&#x9ad8;&#x7d1a;&#x62bd;&#x8c61;&#x3002;&#x7576;&#x6211;&#x5011;&#x5805;&#x6301;&#x7c21;&#x55ae;&#x6642;&#xff0c;javascript&#x66f4;&#x751c;&#x871c;&#xff01",{"_index":2755,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x5de6;&#x53f3;&#x5169;&#x908a;&#x653e;&#x7684;&#x662f;&#x8868;&#x9054;&#x5f0f",{"_index":1238,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x5de6;&#x79fb;3",{"_index":438,"title":{},"body":{"closures.html#傳多個函數":{}}}],["x5dee;&#x5225;&#x5728;&#x4ee5;&#x9663;&#x5217;&#x65b9;&#x5f0f;&#x5448;&#x73f",{"_index":1413,"title":{},"body":{"core.html#this":{}}}],["x5df2;&#x53ef;&#x4ee5;&#x904b;&#x884c",{"_index":1108,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x5df2;&#x5efa;&#x69cb;&#x5f0f;&#x65b9;&#x5f0f;&#x5448;&#x73f",{"_index":1421,"title":{},"body":{"core.html#this":{}}}],["x5e03;&#x6797;&#x548c;&#x5b57;&#x4e32;&#x8f49;&#x70ba;&#x6578;&#x503c",{"_index":1209,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x5e38;&#x898b;&#x554f;&#x984c",{"_index":1551,"title":{},"body":{"core.html#箭頭函數":{}}}],["x5e38;&#x898b;&#x7684;&#x6f14;&#x7b97;&#x6cd5;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x7531;&#x5c0f;&#x5230;&#x5927;&#x4f9d;&#x6b21;&#x70ba;&#xff1a",{"_index":3349,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x5e38;&#x898f;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f",{"_index":362,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x5e73;&#x5747;&#x6578",{"_index":1557,"title":{},"body":{"core.html#箭頭函數":{}}}],["x5ef6;&#x4f38;&#x7684;&#x4e09;&#x7a2e;&#x7269;&#x4ef6;&#x65b9;&#x6cd5",{"_index":1481,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5efa;&#x69cb;&#x521d;&#x59cb;&#x5316",{"_index":1499,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5efa;&#x69cb;&#x5f0f",{"_index":1180,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x5efa;&#x69cb;&#x5f0f;&#x5ba3;&#x544a;&#x7684;&#x975e;&#x539f;&#x59cb;&#x578b;&#x5225",{"_index":1182,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x5efa;&#x8b70;&#x90fd;&#x4f7f;&#x7528;&#x8907;&#x6578",{"_index":239,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x5f37;&#x7de9;&#x5b58",{"_index":2932,"title":{"http/caching.html#強緩存":{}},"body":{}}],["x5f37;&#x7de9;&#x5b58;&#x8d85;&#x6642;&#x6642;&#x9593;&#x70ba;10&#x79d2",{"_index":2968,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x5f53;&#x4f60;&#x628a;&#x4e00;&#x4e2a;&#x666e;&#x901a;&#x7684",{"_index":1504,"title":{},"body":{"core.html#屬性特徵":{}}}],["x5f88;&#x91cd;&#x8981;&#x3002",{"_index":3135,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x5f8c;&#x65b9;&#x662f;&#x63d2;&#x5165;&#x4e00;&#x500b;callback&#x51fd;&#x5f0f",{"_index":1409,"title":{},"body":{"core.html#this":{}}}],["x5f8c;&#x7684",{"_index":2022,"title":{},"body":{"this.html#bind-apply-call":{},"global/function.html#cab-call-apply-vs-bind":{}}}],["x5f8c;&#x7aef;&#x6e32;&#x67d3;&#xff0c;&#x6578;&#x64da;&#x76f4;&#x63a5;&#x8f38;&#x51fa;&#x5230",{"_index":1671,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x5f8c;&#x7e8c;&#x7684;&#x503c;&#x8b8a;&#x66f4;&#xff0c;&#x539f;&#x672c;&#x7684;&#x503c;&#x4e5f;&#x6703;&#x8b8a;&#x66f4",{"_index":1326,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x5f8c;&#x7f6e;&#x905e;&#x589",{"_index":1902,"title":{},"body":{"operators.html#Increment":{}}}],["x5f8c;&#x7f6e;&#x905e;&#x589e;&#x662f;&#x5148;&#x8ce6;&#x503c;&#x5f8c;&#x8a08;&#x7b97;&#xff0c;&#x5982;&#xff1a",{"_index":1907,"title":{},"body":{"operators.html#Increment":{}}}],["x5f9e;&#x4e0a;&#x9762;&#x53ef;&#x4ee5;&#x770b;&#x51fa;&#xff0c;0.1&#x7684;&#x4e8c;&#x9032;&#x5236;&#x683c;&#x5f0f;&#x662f;&#xff1a;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662f;&#x4e00;&#x500b;&#x4e8c;&#x9032;&#x5236;&#x7121;&#x9650;&#x5faa;&#x74b0;&#x5c0f;&#x6578;&#xff0c;&#x4f46;&#x8a08;&#x7b97;&#x6a5f;&#x5167;&#x5b58;&#x6709;&#x9650;&#xff0c;&#x6211;&#x5011;&#x4e0d;&#x80fd;&#x7528;&#x5132;&#x5b58;&#x6240;&#x6709;&#x7684;&#x5c0f;&#x6578;&#x4f4d;&#x6578;&#x3002;&#x90a3;&#x9ebc;&#x5728;&#x7cbe;&#x5ea6;&#x8207;&#x5167;&#x5b58;&#x9593;&#x5982;&#x4f55;&#x53d6;&#x6368;&#x5462;&#xff1f",{"_index":1812,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x5f9e;&#x5927;&#x5230;&#x5c0f;&#x6392;&#x5e8f",{"_index":2479,"title":{},"body":{"array/array_methods.html#sort":{}}}],["x5f9e;&#x5c0f;&#x5230;&#x5927;&#x6392;&#x5e8f",{"_index":2478,"title":{},"body":{"array/array_methods.html#sort":{}}}],["x5f9e;&#x5de6;&#x81f3;&#x53f3",{"_index":1200,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x5faa;&#x74b0;&#x57f7;&#x884c;&#x904e;&#x7a0b;&#x4e2d;&#xff0c;&#x5e7e;&#x4e4e;&#x540c;&#x6642;&#x8a2d;&#x7f6e;&#x4e86",{"_index":298,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x6027;&#x540d;&#x7a31;(key",{"_index":3140,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x6027;&#x80fd;&#x512a;&#x5316;&#x7684;&#x539f;&#x5247;&#x662f;&#x4ee5;&#x66f4;&#x597d;&#x7684;&#x7528;&#x6236;&#x9ad4;&#x9a57;&#x70ba;&#x6a19;&#x6e96;&#xff0c;&#x5177;&#x9ad4;&#x5c31;&#x662f;&#x5be6;&#x73fe;&#x4e0b;&#x9762;&#x7684;&#x76ee;&#x6a19;&#xff1a",{"_index":1647,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x61f6;&#x52a0;&#x8f09",{"_index":1675,"title":{"performance.html#懶加載":{}},"body":{}}],["x61f6;&#x52a0;&#x8f09;&#xff08;&#x5716;&#x7247;&#x61f6;&#x52a0;&#x8f09;&#x3001;&#x4e0b;&#x62c9;&#x52a0;&#x8f09;&#x66f4;&#x591a;&#xff09",{"_index":1664,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6211;&#x5011;&#x4f7f;&#x7528",{"_index":2741,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x6211;&#x5011;&#x53ef;&#x4ee5;&#x7528;&#x7d44;&#x5408;&#x6a21;&#x5f0f;&#x8868;&#x9054;&#x76f8;&#x540c;&#x7684;&#x610f;&#x601d;&#x3002",{"_index":2725,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x6216",{"_index":384,"title":{},"body":{"es6.html#Module-的加载实现":{},"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"api/promise.html#Promise":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x6216;&#x7b49;&#x4ef7;&#x4e8",{"_index":2549,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x6216;&#x8005",{"_index":2724,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{},"http/caching.html#協商緩存":{}}}],["x6216;&#x8005;&#x5927;&#x65bc",{"_index":2556,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x6216;&#x8005;&#x8b93",{"_index":309,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x6233;&#xff09",{"_index":1658,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6240;&#x4ee5;&#x4fee;&#x6539;obj2.body.a&#x6642;&#x4e5f;&#x6703;&#x4fee;&#x6539;&#x5230;&#x820a;&#x7684",{"_index":541,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x6240;&#x4ee5;&#x6211;&#x5011;&#x53ef;&#x4ee5;&#x60f3;&#x50cf",{"_index":2233,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x6240;&#x4ee5;&#x62ff;&#x5230;&#x4e86;self.nam",{"_index":2823,"title":{},"body":{"global/function.html#bind":{}}}],["x6240;&#x4ee5;&#x6700;&#x5f8c;&#x4e00;&#x7b46;&#x4e0d;&#x53ef;&#x591a;&#x4e86;&#x4e00;&#x500b;&#x9017;&#x865f",{"_index":1323,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x6240;&#x4ee5;&#x8aaa;&#x5982;&#x679c;&#x7576;&#x524d;&#x6b63;&#x5728;&#x904b;&#x884c;&#x7684;&#x4ee3;&#x78bc;&#x6c92;&#x6709;&#x904b;&#x884c;&#x5b8c;&#xff0c;&#x5373;&#x4f7f;&#x5ef6;&#x9072;&#x7684;&#x6642;&#x9593;&#x5df2;&#x7d93;&#x904e;&#x5b8c;&#xff0c",{"_index":315,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x6240;&#x4ee5;&#x9663;&#x5217;&#x4e5f;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x7269;&#x4ef6;&#x539f;&#x578b;&#x7684;&#x65b9;&#x6cd5",{"_index":1314,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x6240;&#x4ee5;2&#x4e0d;&#x6703;&#x5b58;&#x5728;nan",{"_index":2058,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x6240;&#x4ee5;obj2&#x6703;&#x9577;&#x5f97;&#x8ddf;obj1&#x4e00;&#x6a23",{"_index":549,"title":{},"body":{"copy.html#Object-assign":{}}}],["x6240;&#x5efa;&#x69cb;&#x7684;&#x578b;&#x5225;&#xff0c;&#x5728",{"_index":1185,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x6240;&#x6709",{"_index":1685,"title":{},"body":{"performance.html#懶加載":{}}}],["x6240;&#x89e3;&#x6c7a;&#x4e0d;&#x4e86;&#x7684;&#x554f;&#x984c;&#xff1a",{"_index":3026,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x6253;&#x7d66",{"_index":2086,"title":{},"body":{"variable.html#Hoisting":{}}}],["x627e;&#x4e0d;&#x5230;&#x5c31;&#x6703;undefin",{"_index":1993,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["x6280;&#x8853;&#x540d;&#x7a31;&#xff0c;&#x7528;&#x65bc;&#x53d6;&#x5f97;&#x9060;&#x7aef;&#x8cc7;&#x6599;&#xff1b",{"_index":2349,"title":{},"body":{"api/promise.html#Promise":{}}}],["x628a",{"_index":1457,"title":{},"body":{"core.html#繼承":{}}}],["x628a;&#x53e6;&#x4e00;&#x500b;&#x7acb;&#x5373;&#x51fd;&#x5f0f;&#x5b9a;&#x7fa9;&#x7684;&#x8b8a;&#x6578;&#x5370;&#x51fa;&#x4f86",{"_index":1370,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x628a;&#x6578;&#x64da;&#x63d2;&#x5165;&#x9663;&#x5217;&#x5c3e;&#x90e8",{"_index":2312,"title":{"array/array_insert.html#把數據插入陣列尾部":{}},"body":{}}],["x628a;&#x6578;&#x64da;&#x63d2;&#x5165;&#x9663;&#x5217;&#x6307;&#x5b9a;&#x4f4d;&#x7f6",{"_index":2316,"title":{"array/array_insert.html#把數據插入陣列指定位置":{}},"body":{}}],["x628a;&#x6578;&#x64da;&#x63d2;&#x5165;&#x9663;&#x5217;&#x982d;&#x90e8",{"_index":2315,"title":{"array/array_insert.html#把數據插入陣列頭部":{}},"body":{"array/array_insert.html#example":{}}}],["x628a;&#x8fd9;&#x4e9b;&#x5c5e;&#x6027;&#x5168;&#x90e8;&#x8f6c;&#x4e3a",{"_index":1509,"title":{},"body":{"core.html#屬性特徵":{}}}],["x62bd;&#x8c61;&#x7d50;&#x69cb;&#x6a39;ast(abstract",{"_index":1083,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x62ec;&#x865f;&#x5167;&#x5c64;&#x518d;&#x88dc;&#x4e0a;&#x5c0f;&#x62ec;&#x865f",{"_index":1363,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x62fc;&#x63a5;&#x5169;&#x500b;&#x9663;&#x5217",{"_index":2323,"title":{"array/array_insert.html#拼接兩個陣列":{}},"body":{}}],["x62ff;&#x5230;&#x6b63;&#x78ba;&#x7684",{"_index":2803,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x6307;&#x5230;&#x4e0d;&#x4e00;&#x6a23;&#x7684;&#x4f4d;&#x7f6",{"_index":1550,"title":{},"body":{"core.html#箭頭函數":{}}}],["x6307;&#x5411",{"_index":1398,"title":{},"body":{"core.html#this":{}}}],["x6307;&#x5411;&#x662f;&#x4e0d;&#x540c;&#x7684",{"_index":1556,"title":{},"body":{"core.html#箭頭函數":{}}}],["x6307;&#x6578;&#x6642;&#x9593",{"_index":3354,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x6309;&#x503c;&#x50b3;&#x905e;&#xff08;pass",{"_index":330,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x63a5;&#x4e0b;&#x4f86;&#x9032;&#x5165",{"_index":2366,"title":{},"body":{"api/promise.html#Promise":{}}}],["x63a5;&#x6536",{"_index":1197,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x63a5;&#x8457;&#x628a;obj1&#x4e2d;&#x6240;&#x6709;&#x7684;&#x5c6c;&#x6027;&#x8907;&#x88fd;&#x904e;&#x53bb",{"_index":548,"title":{},"body":{"copy.html#Object-assign":{}}}],["x63d0;&#x4f9b;&#x93c8;&#x63a5",{"_index":261,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x63d0;&#x5347;&#xff08;hoisting&#xff09",{"_index":1093,"title":{"core.html#提升（Hoisting）":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x63d0;&#x793a;&#xff1a",{"_index":306,"title":{},"body":{"asynchronous.html#setTimeout":{},"statements/for.html#for…of與for…in的差別":{}}}],["x63d2;&#x5165",{"_index":1695,"title":{"performance.html#合併-DOM-插入-createDocumentFragment":{}},"body":{}}],["x63d2;&#x5165;&#x6216;&#x522a;&#x9664;&#xff1a;&#x9032;&#x68e7;&#x8207;&#x51fa;&#x68e7;&#x7684;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x70ba",{"_index":3338,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x642d;&#x914d;&#x4f7f;&#x7528",{"_index":3147,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x642d;&#x914d;&#x5224;&#x65b7;&#x5f0f;&#x4e0d;&#x80fd;&#x76f4;&#x63a5;&#x63a5;&#x7bad;&#x982d;&#x51fd;&#x5f0f",{"_index":1553,"title":{},"body":{"core.html#箭頭函數":{}}}],["x64cd;&#x4f5c;&#x3002",{"_index":225,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x64cd;&#x4f5c;&#x662f;&#x975e;&#x5e38;&#x8017;&#x8cbb;&#x6027;&#x80fd;&#x7684;&#xff0c;&#x56e0;&#x6b64;&#x63d2;&#x5165;&#x591a;&#x500b;&#x6a19;&#x7c64;&#x6642;&#xff0c;&#x5148;&#x63d2;&#x5165",{"_index":1696,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x64cd;&#x4f5c;&#x6709;&#x4ec0;&#x9ebc;&#x5340;&#x5225;&#xff1f",{"_index":1904,"title":{},"body":{"operators.html#Increment":{}}}],["x64cd;&#x4f5c;&#xff0c;&#x591a;&#x500b;&#x64cd;&#x4f5c;&#x5118;&#x91cf;&#x5408;&#x4f75;&#x5728;&#x4e00;&#x8d77;&#x57f7;&#x884c;&#xff08",{"_index":1667,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x653e;&#x524d;&#x9762",{"_index":1109,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x653e;&#x524d;&#x9762;&#x53ef;&#x56e0;&#x70ba",{"_index":1106,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x653e;&#x524d;&#x9762;&#xff0c;j",{"_index":1662,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x653e;&#x5f8c;&#x9762",{"_index":1663,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6570;&#x5b57;&#x524d;&#x8865;&#x201c;0&#x201d;&#x7684;&#x4e94;&#x79cd;&#x65b9;&#x6cd5",{"_index":1597,"title":{},"body":{"num.html#補數字":{}}}],["x6574;&#x500b;&#x74b0;&#x5883;&#x4e0b;&#x7684;&#x6240;&#x6709;&#x4ee3;&#x78bc;&#x904b;&#x884c;&#x5b8c;&#x7562;&#x4e4b;&#x5f8c;&#x57f7;&#x884c",{"_index":318,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x6578;&#x5b57;&#x586b;&#x5145;9",{"_index":1602,"title":{},"body":{"num.html#補數字":{}}}],["x6578;&#x5b57;&#x88dc;0",{"_index":1598,"title":{},"body":{"num.html#補數字":{}}}],["x6578;&#x5b57;1",{"_index":1204,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x6578;&#x5b57;11&#x4e2d;&#x5305;&#x542b;&#x4e86;&#x5169;&#x500b;1,&#x6578;&#x5b57;20&#x4e2d;&#x4e0d;&#x5305;&#x542b;1,&#x6578;&#x5b57;1&#x5230;21&#x4e2d;&#x5171;&#x5305;&#x542b;&#x4e86;13&#x500b;1&#x3002",{"_index":3209,"title":{},"body":{"string/split.html#split":{}}}],["x6578;&#x64da;&#x7d50;&#x69cb;&#xff1a;&#x968a;&#x5217;&#xff08;queue&#xff09",{"_index":3330,"title":{"string/queue.html#數據結構：隊列（Queue）":{}},"body":{}}],["x6587;&#x4ef6;&#x4e0d;&#x6703;&#x8868;&#x660e;&#x9019;&#x8207",{"_index":1537,"title":{},"body":{"core.html#const":{}}}],["x6587;&#x4ef6;&#x7684;&#x6700;&#x5f8c;&#x4fee;&#x6539;&#x6642;&#x9593",{"_index":3008,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x6587;&#x6a94",{"_index":327,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x65b0;&#x589e",{"_index":580,"title":{},"body":{"event.html#代理":{}}}],["x65b0;&#x589e;&#x65b9;&#x6cd5;&#x5230;&#x539f;&#x578b;&#x93c8;&#x4e0a",{"_index":1316,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x65b0;&#x589e;foo&#x5c6c;&#x6027;&#x540d;&#x7a31",{"_index":3157,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x65b0;&#x7269;&#x4ef6;&#x8ddf;&#x539f;&#x7269;&#x4ef6;&#x4e0d;&#x5171;&#x7528;&#x8a18;&#x61b6;&#x9ad4",{"_index":537,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x65b0;&#x7684;&#x4e00;&#x884c;&#x4ee5",{"_index":1161,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x65b0;&#x7684;&#x4e00;&#x884c;&#x662f",{"_index":1157,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x65b9;&#x6cd5",{"_index":1401,"title":{},"body":{"core.html#this":{},"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#把數據插入陣列指定位置":{},"array/array_insert.html#拼接兩個陣列":{}}}],["x65b9;&#x6cd5;&#x53ef;&#x4ee5;&#x85c9;&#x7531;&#x522a;&#x9664;&#x65e2;&#x6709;&#x5143;&#x7d20;&#x4e26;&#xff0f;&#x6216;&#x52a0;&#x5165;&#x65b0;&#x5143;&#x7d20;&#x4f86;&#x6539;&#x8b8a;&#x4e00;&#x500b;&#x9663;&#x5217;&#x7684;&#x5167;&#x5bb9",{"_index":2317,"title":{},"body":{"array/array_insert.html#把數據插入陣列指定位置":{}}}],["x65b9;&#x6cd5;&#x56de;&#x50b3;&#x7684;&#x662f;&#x7d81;&#x5b9a",{"_index":2806,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x65b9;&#x6cd5;&#x5c07;&#x4e00;&#x500b;&#x7d2f;&#x52a0;&#x5668;&#x53ca;&#x9663;&#x5217;&#x4e2d;&#x6bcf;&#x9805;&#x5143;&#x7d20;&#xff08;&#x7531;&#x5de6;&#x81f3;&#x53f3;&#xff09;&#x50b3;&#x5165;&#x56de;&#x547c;&#x51fd;&#x5f0f;&#xff0c;&#x5c07;&#x9663;&#x5217;&#x5316;&#x70ba;&#x55ae;&#x4e00;&#x503c;&#x3002",{"_index":2483,"title":{},"body":{"array/array_methods.html#reduce":{}}}],["x65b9;&#x6cd5;&#x6703;&#x547c;&#x53eb;&#x4e00;&#x500b;&#x4ee5",{"_index":2791,"title":{},"body":{"global/function.html#call、apply、bind":{}}}],["x65b9;&#x6cd5;&#x6703;&#x5c07;&#x9663;&#x5217;&#x4e2d;&#x7d22;&#x5f15;&#x7684;&#x7b2c;&#x4e00;&#x500b;&#x5230;&#x6700;&#x5f8c;&#x4e00;&#x500b;&#x7684;&#x6bcf;&#x500b;&#x4f4d;&#x7f6e;&#x5168;&#x90e8;&#x586b;&#x5165;&#x4e00;&#x500b;&#x975c;&#x614b;&#x7684;&#x503c;&#x3002",{"_index":2324,"title":{},"body":{"array/array_insert.html#fill":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x5c0d;&#x61c9",{"_index":224,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x6703;&#x5efa;&#x7acb;&#x4e00;&#x500b;&#x65b0;&#x51fd;&#x5f0f;&#x3002;&#x8a72;&#x51fd;&#x5f0f;&#x88ab;&#x547c;&#x53eb;&#x6642;&#xff0c;&#x6703;&#x5c07",{"_index":2794,"title":{},"body":{"global/function.html#call、apply、bind":{}}}],["x65e5;&#x671f",{"_index":2943,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x662f",{"_index":367,"title":{},"body":{"arrowFunction.html#Arrow-Function":{},"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"core.html#屬性特徵":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{},"http/caching.html#強緩存":{},"statements/for.html#for…of與for…in的差別":{}}}],["x662f;&#x4e00;&#x500b;&#x5f88;&#x7279;&#x5225;&#x7684;&#x5b58;&#x5728;&#xff0c;&#x5b83;&#x662f;&#x53ef;&#x4ee5;&#x7576;&#x6210;&#x7269;&#x4ef6;&#x4f86;&#x4f7f;&#x7528;&#xff0c",{"_index":1332,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x662f;&#x4e00;&#x500b;&#x7279;&#x6b8a;&#x7684;&#x7269;&#x4ef6",{"_index":1336,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x662f;&#x4e00;&#x500b;&#x985e;&#x9663;&#x5217",{"_index":1377,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["x662f;&#x4e00;&#x7a2e;&#x6301;&#x4e45;&#x7db2;&#x8def;&#x5354;&#x5b9a;&#xff0c;&#x8b93;client&#x7aef;&#x8207;server&#x7aef;&#x53ef;&#x4ee5;&#x4f5c;&#x4e00;&#x7a2e;&#x5c0d;&#x8a71;&#xff0c;&#x4e26;&#x5c07;&#x5169;&#x7aef;&#x5efa;&#x7acb;&#x95dc;&#x9023;&#xff0c;&#x4fdd;&#x6301;&#x4f3a;&#x670d;&#x5668;&#x8207;client&#x53ef;&#x4ee5;&#x6301;&#x7e8c;&#x7684;&#x8207;server&#x4f5c;&#x4ea4;&#x8ac7;&#x3002",{"_index":2229,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x662f;&#x4e00;&#x7a2e;&#x7a0b;&#x5e8f;&#x89e3;&#x6790;&#x6280;&#x8853;&#xff0c",{"_index":1150,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x662f;&#x52d5;&#x8a5e;&#xff0c",{"_index":236,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x662f;&#x53c3;&#x8003;&#x4f4d;&#x5740",{"_index":1217,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x662f;&#x540c;&#x6b65;&#x7684",{"_index":1120,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x662f;&#x5426;&#x5f37;&#x7de9;&#x5b58;&#x7531",{"_index":2940,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x662f;&#x5426;&#x662f;&#x7a7a;&#x968a",{"_index":3333,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x662f;&#x56e0;&#x70ba;&#x7bad;&#x982d;&#x51fd;&#x6578;&#x6309;&#x8a5e;&#x6cd5",{"_index":355,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x662f;&#x5728;&#x8abf;&#x7528;&#x6642;&#x78ba;&#x5b9a;&#x7684;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x7531;&#x5c01;&#x9589;&#x7684;&#x4e0a;&#x4e0b;&#x6587;&#x6c7a;&#x5b9a;&#x7684",{"_index":364,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x662f;&#x5c6c;&#x65bc;&#x4e00;&#x500b;&#x900f;&#x904",{"_index":2348,"title":{},"body":{"api/promise.html#Promise":{}}}],["x662f;&#x600e;&#x9ebc;&#x8a2d;&#x8a08;&#x7684;&#x3002",{"_index":263,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x662f;&#x60a8;&#x8a2a;&#x554f;&#x904e;&#x7684;&#x7db2;&#x7ad9;&#x5275;&#x5efa;&#x7684;&#x6587;&#x4ef6;&#xff0c;&#x7528;&#x65bc;&#x5b58;&#x5132;&#x700f;&#x89bd;&#x4fe1;&#x606f;&#xff0c;&#x4f8b;&#x5982;&#x60a8;&#x7684;&#x7db2;&#x7ad9;&#x504f;&#x597d;&#x8a2d;&#x7f6e;&#x6216;&#x500b;&#x4eba;&#x8cc7;&#x6599;&#x4fe1;&#x606f;&#x3002",{"_index":2174,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["x662f;&#x6578;&#x503c;&#x6216;&#x70ba",{"_index":1233,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x662f;&#x6578;&#x7d44;&#x5f15;&#x7528",{"_index":368,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x662f;&#x7269;&#x4ef6;&#x578b;&#x5225",{"_index":1183,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x662f;&#x7531;&#x5730;&#x5740;&#x6b04;&#x4e2d;&#x5217;&#x51fa;&#x7684;&#x7db2;&#x7ad9;&#x57df;&#x8a2d;&#x7f6e;&#x7684",{"_index":2178,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["x662f;&#x7acb;&#x523b;&#x57f7;&#x884c",{"_index":1412,"title":{},"body":{"core.html#this":{}}}],["x662f;&#x7b2c;&#x4e00;&#x6b21;&#x57f7;&#x884c;&#x7684;&#x524d;&#x4e00;&#x500b;&#x503c",{"_index":1560,"title":{},"body":{"core.html#箭頭函數":{}}}],["x662f;&#x7de8;&#x7a0b;&#x6280;&#x8853;&#x4e2d;&#x5e38;&#x7528;&#x7684;&#x65b9;&#x6cd5;&#x3002",{"_index":2503,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x662f;&#x8868;&#x9054;&#x5f0f",{"_index":1196,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x662f;&#x89e3;&#x6c7a;&#x8fa6;&#x6cd5",{"_index":1167,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x662f;&#x8cd3;&#x8a9e;&#x3002",{"_index":237,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x662f;&#x900f;&#x904e;&#x5982;&#x793e;&#x7fa4;&#x7db2;&#x8def;&#x7b49;&#x7b2c;&#x4e09;&#x65b9;&#x7a0b;&#x5f0f;&#x5b89;&#x88dd;&#xff0c;&#x4e3b;&#x8981;&#x76ee;&#x7684;&#x70ba;&#x5728;&#x672c;&#x516c;&#x53f8;&#x7db2;&#x7ad9;&#x6574;&#x5408;&#x793e;&#x7fa4;&#x5a92;&#x9ad4;&#x5167;&#x5bb9;&#xff0c;&#x5982;&#x793e;&#x7fa4;&#x63d2;&#x4ef6",{"_index":2202,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x662f;&#x9663;&#x5217;&#x539f;&#x578b;&#x7684;&#x5c6c;&#x6027",{"_index":1307,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x662f;&#x985e;&#x9663;&#x5217;&#x6c92;&#x6709;&#x9663;&#x5217;&#x65b9;&#x6cd5",{"_index":1558,"title":{},"body":{"core.html#箭頭函數":{}}}],["x662f;es5&#x4e2d;&#x65b0;&#x589e;&#x7684;&#x4e00;&#x500b;&#x65b9;&#x6cd5;&#xff0c;&#x53ef;&#x4ee5;&#x6539;&#x8b8a;&#x51fd;&#x6578;&#x5167;&#x90e8;&#x7684;this&#x6307;&#x5411",{"_index":2032,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x6642",{"_index":366,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x6642;&#x9593;&#x6233;&#x5be6;&#x4f8b",{"_index":2752,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6",{"_index":3339,"title":{"string/queue.html#時間複雜度":{}},"body":{}}],["x6642;&#xff0c;&#x4f7f;&#x7528",{"_index":1234,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"statements/for.html#for…of與for…in的差別":{}}}],["x6642;&#xff0c;&#x5247;&#x76f4;&#x63a5;&#x5957;&#x7528",{"_index":1237,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x6642;&#xff0c;cooki",{"_index":2187,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x66ab;&#x505c;&#x6309;&#x9215",{"_index":1391,"title":{},"body":{"core.html#this":{}}}],["x66ab;&#x6642;&#x6027;&#x6b7b;&#x5340",{"_index":1530,"title":{},"body":{"core.html#const":{}}}],["x66f4;&#x56b4;&#x683c;&#xff0c;&#x4ed6;&#x5011;&#x5ba3;&#x7a31;&#x6211;&#x5011;&#x61c9;&#x8a72;&#x601d;&#x8003;&#x9019;&#x4e9b;&#x65b9;&#x6cd5;&#x5982;&#x4f55;&#x8655;&#x7406",{"_index":1900,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x66f4;&#x597d;&#x7684;&#x505a;&#x6cd5;&#x662f;&#xff0c;&#x9664;&#x4e86;&#x7b2c;&#x4e00;&#x7d1a;&#xff0c;&#x5176;&#x4ed6;&#x7d1a;&#x5225;&#x90fd;&#x7528;&#x67e5;&#x8a62;&#x5b57;&#x7b26;&#x4e32;&#x8868;&#x9054;&#x3002",{"_index":248,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x6700;&#x5927;&#x7684;&#x539f;&#x56e0;&#x9084;&#x662f;&#x56e0;&#x70ba",{"_index":2798,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x6700;&#x597d;&#x7684;&#x65b9;&#x5f0f;&#x662f;&#x5f9e;&#x51fd;&#x5f0f;&#x672c;&#x8eab;&#x7684;&#x539f;&#x578b;&#x5c6c;&#x6027;&#x4e0a;&#x53bb;&#x8abf;&#x6574",{"_index":1448,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x6703;&#x4f7f;&#x5176;&#x4e2d;&#x4e00;&#x908a;&#x7684;&#x985e;&#x578b;&#x9032;&#x884c;&#x5f37;&#x5236;&#x8f49;&#x63db;&#xff0c;&#x4f7f;&#x7b49;&#x865f;&#x5169;&#x908a;&#x7684;&#x985e;&#x578b;&#x90fd;&#x76f8;&#x7b49;&#x5f8c;&#x518d;&#x5c0d;&#x6578;&#x503c;&#x9032;&#x884c;&#x6bd4;&#x8f03;&#x3002",{"_index":1887,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x6703;&#x51fa;&#x73f",{"_index":1131,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x6703;&#x5c07;&#x539f;&#x672c;&#x7684;&#x7269;&#x4ef6;&#x8f49;&#x6210;&#x5b57;&#x4e32;&#x518d;&#x8f49;&#x56de;&#x4f86",{"_index":1293,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x6703;&#x5f71;&#x97ff;&#x57f7;&#x884c;&#x7d50;&#x679c",{"_index":1163,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x6703;&#x65b0;&#x589e;&#x66f4;&#x591a;a&#x6a19;&#x7c64",{"_index":578,"title":{},"body":{"event.html#代理":{}}}],["x6703;&#x88ab;&#x8986;&#x84cb;&#x6240;&#x4ee5;&#x88dc;&#x56de;&#x539f;&#x672c;&#x5efa;&#x69cb;&#x51fd;&#x5f0f",{"_index":1467,"title":{},"body":{"core.html#繼承":{}}}],["x6703;&#x8a2d;&#x5b9a;&#x5728",{"_index":2188,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x6703;&#x932f;&#x8aa4;&#x5730;&#x8fd4;&#x56d",{"_index":3028,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x6709",{"_index":2727,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x6709;&#x4e00;&#x500b;&#x65b0;&#x7684",{"_index":1894,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x6709;&#x4ec0;&#x9ebc;&#x5340;&#x5225;&#xff1f",{"_index":2496,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x6709;&#x5275;&#x9020;&#x5230;&#x57f7;&#x884c;&#x7684;&#x6982;&#x5ff5;&#xff0c;&#x4f46;&#x4e0d;&#x6703;&#x9810;&#x5148;&#x51fa;&#x73f",{"_index":1536,"title":{},"body":{"core.html#const":{}}}],["x6709;&#x52a0;&#x5165;&#x56b4;&#x683c;&#x6a21;&#x5f0f",{"_index":1428,"title":{},"body":{"core.html#this":{}}}],["x6709;&#x5c07;&#x6b64;&#x5c6c;&#x6027",{"_index":3155,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x6709;&#x76f8;&#x540c;&#x5c6c;&#x6027;&#x6642;&#x5408;&#x4f75;&#x7269;&#x4ef6;&#x5340;&#x6bb5",{"_index":2890,"title":{"object/assign.html#有相同屬性時合併物件區段":{}},"body":{}}],["x6709;&#x76f8;&#x540c;&#x7684;&#x529f;&#x80fd;&#xff0c;&#x5728;&#x67d0;&#x4e9b;&#x7279;&#x6b8a;&#x60c5;&#x6cc1;&#x4e0b;&#x4e5f;&#x904b;&#x4f5c;&#x7684;&#x5f88;&#x597d;&#xff1a",{"_index":1896,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x6709;hoisting&#x4f46;&#x9396;&#x4f4f",{"_index":1531,"title":{},"body":{"core.html#const":{}}}],["x671f;&#x671b;&#x4ee3;&#x78bc;&#x7684;&#x8f38;&#x51fa;&#x8b8a;&#x6210;&#xff1a;5",{"_index":320,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x672c;&#x5730;&#x901a;&#x904",{"_index":2959,"title":{},"body":{"http/caching.html#強緩存":{},"http/caching.html#協商緩存":{}}}],["x679c;&#x51cd;&#x5c64;&#xff0c;&#x5976;&#x916a;&#x5c64;&#x548c;&#x5976;&#x6cb9;&#x5c64;&#xff0c;&#x9802;&#x90e8;&#x9084",{"_index":2728,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x67e5;&#x627e;&#xff1a;&#x5f9e;&#x5c0d;&#x982d;&#x958b;&#x59cb;&#x67e5;&#x627e;&#xff0c;&#x5f9e;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x70ba",{"_index":3337,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x67e5;&#x8a62;&#x505a;&#x7de9;&#x5b58",{"_index":1665,"title":{"performance.html#DOM-查詢做緩存":{}},"body":{"performance.html#優化原則和方向":{}}}],["x6807;&#x7b7e;&#x6253;&#x5f00",{"_index":383,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["x689d;&#x4ef6;&#x7d44;&#x5408;&#x7684;&#x554f;&#x984c",{"_index":3226,"title":{"statements/if...else.html#條件組合的問題":{}},"body":{}}],["x6a19;&#x7c64",{"_index":1701,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x6a21;&#x677f;&#x6e32;&#x67d3;&#x9801;&#x9762",{"_index":1673,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6b21;&#x65b9",{"_index":1775,"title":{},"body":{"math.html#Math":{}}}],["x6b63;&#x5219",{"_index":3372,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x6b63;&#x78ba",{"_index":1169,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x6b63;&#x898f;&#x8868;&#x9054;&#x5f0f",{"_index":1141,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{}}}],["x6b64;&#x6642",{"_index":3180,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x6bcf;&#x500b;&#x6846;&#x67b6;&#x5be6;&#x73fe;&#x7684;&#x908f;&#x8f2f;&#x90fd;&#x53ef;&#x80fd;&#x4e0d;&#x4e00;&#x6a23;&#xff0c;&#x6240;&#x4ee5;&#x9084;&#x662f;&#x8981;&#x53bb;&#x770b;&#x5b98;&#x65b9;&#x7684;&#x8aaa;&#x660e;&#x6703;&#x6bd4;&#x8f03;&#x6e05;&#x695a;&#x3002",{"_index":2261,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x6bcf;&#x6b21;&#x5faa;&#x74b0;&#xff0c;&#x90fd;&#x6703;&#x67e5;&#x8a62",{"_index":1689,"title":{},"body":{"performance.html#DOM-查詢做緩存":{}}}],["x6bd4",{"_index":1899,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x6bd4;&#x5982;&#xff0c",{"_index":234,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x6bd4;&#x5982;&#xff0c;&#x7576;&#x6211;&#x5011;&#x6709;&#x591a;&#x500b;&#x57df;&#x540d;&#x7684;&#x7db2;&#x7ad9;&#x9700;&#x8981;&#x8ddf;&#x8e64;&#xff0c;&#x6211;&#x5011;&#x5e0c;&#x671b;&#x77ad;&#x89e3;&#x5230;&#x7528;&#x6236;&#x9ede;&#x64ca;&#x67d0;&#x500b;&#x5ee3;&#x544a;&#x5230;&#x9054;&#x57df;&#x540d;a&#x4e0b;&#x7684;&#x7db2;&#x9801;&#xff0c;&#x7136;&#x5f8c;&#x53ef;&#x80fd;&#x700f;&#x89bd;&#x4e86;&#x4e0d;&#x8ad6;&#x90a3;&#x500b;&#x57df;&#x540d;&#x4e0b;&#x7684;&#x9801;&#x9762;&#xff0c;&#x6700;&#x5f8c;&#x5728;&#x57df;&#x540d;b&#x4e0b;&#x7684;&#x7db2;&#x9801;&#x5b8c;&#x6210;&#x8a3b;&#x518a;&#x7684;&#x60c5;&#x6cc1;&#x3002;&#x5ee3;&#x544a;&#x53ef;&#x4ee5;&#x5728;&#x57df;&#x540d;a&#x4e0b;&#x7684;&#x7db2;&#x9801;&#x88ab;&#x8ddf;&#x8e64;&#x5230;&#xff0c;&#x800c;&#x8a3b;&#x518a;&#x53ef;&#x4ee5;&#x5728;&#x57df;&#x540d;b&#x4e0b;&#x7684;&#x7db2;&#x9801;&#x8ddf;&#x8e64;&#x5230;&#x3002",{"_index":2217,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x6bd4;&#x5982;&#xff0c;&#x8a2a;&#x554f",{"_index":2204,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x6bd4;&#x5c0d;&#x7684;&#x4e0d;&#x662f;&#x503c",{"_index":1216,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x6bd4;&#x5c0d;&#x7684;&#x90fd;&#x662f;&#x53c3;&#x8003;&#x4f4d;&#x5740",{"_index":1221,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x6bd4;&#x8f03;&#x4e0d;&#x662f;&#x4e00;&#x500b;&#x6bd4;&#x8f03;&#x597d;&#x7684;&#x89e3;&#x6c7a;&#x65b9;&#x5f0f;&#xff0c;&#x4f60;&#x53ef;&#x4ee5;&#x5f97;&#x5230;&#x9019;&#x6a23;&#x7684;&#x7d50;&#x679c;&#xff1a",{"_index":1892,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x6c38;&#x9060;&#x90fd;&#x662f;&#x8a9e;&#x610f;&#x4e0a;&#x7684",{"_index":2812,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x6c42;&#x503c;&#x7b56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6c42;&#x503c;&#x7b56;&#x7565",{"_index":1240,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x6c59;&#x67d3;&#x6574;&#x500b;&#x4f5c;&#x7528;&#x57df",{"_index":1523,"title":{},"body":{"core.html#Let":{}}}],["x6c92;&#x6709;&#x50b3;&#x7d71;&#x51fd;&#x6578",{"_index":1546,"title":{},"body":{"core.html#箭頭函數":{}}}],["x6c92;&#x6709;&#x95dc;&#x4fc2",{"_index":2016,"title":{},"body":{"this.html#Callback":{}}}],["x6c92;&#x88ab;&#x6539;&#x5230",{"_index":535,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{},"copy.html#Object-assign":{},"copy.html#轉成-JSON-再轉回來":{}}}],["x6c92;&#x8907;&#x88fd",{"_index":559,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["x6ce8;&#x610f;&#xff0c;&#x5982;&#x679c;&#x4f7f;&#x7528;&#x7bad;&#x982d;&#x51fd;&#x5f0f;&#xff0c;thi",{"_index":2043,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x6ce8;&#x610f;&#xff0c;&#x9019;&#x88e1;&#x662f",{"_index":2038,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x6ce8;&#x610f;&#xff0c;&#x901a;&#x5e38;&#x9810;&#x8a2d;&#x503c;&#x4e0d;&#x662f",{"_index":2064,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x6d4f;&#x89c8;&#x5668;&#x5141;&#x8bb8;&#x811a;&#x672c;&#x5f02;&#x6b65;&#x52a0;&#x8f7d;&#xff0c;&#x4e0b;&#x9762;&#x5c31;&#x662f;&#x4e24;&#x79cd;&#x5f02;&#x6b65;&#x52a0;&#x8f7d;&#x7684;&#x8bed;&#x6cd5;&#x3002",{"_index":381,"title":{},"body":{"es6.html#Module-的加载实现":{}}}],["x6d6e;&#x70b9;&#x6570;&#x9677;&#x9631;&#x53ca;&#x89e3;&#x6cd5",{"_index":1777,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x6d6e;&#x9ede;&#x6578;&#x904b;&#x7b97;&#x7684;&#x5751",{"_index":1776,"title":{"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}},"body":{"math.html#Math":{}}}],["x6df1;&#x5165;&#x54cd;&#x5e94;&#x5f0f;&#x539f;&#x7406",{"_index":1503,"title":{},"body":{"core.html#屬性特徵":{}}}],["x6df1;&#x5c64;&#x8907;&#x88fd",{"_index":1292,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x6df1;&#x62f7;&#x8c9d;(deep",{"_index":534,"title":{"copy.html#深拷貝-Deep-Copy":{}},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x6df1;&#x6dfa;&#x62f7;&#x8c9d",{"_index":1284,"title":{"core.html#深淺拷貝":{}},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x6dfa;&#x5c64;&#x8907;&#x88fd",{"_index":1291,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x6dfa;&#x62f7;&#x8c9d",{"_index":533,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x6dfa;&#x62f7;&#x8c9d;(shallow",{"_index":525,"title":{"copy.html#淺拷貝-Shallow-Copy":{}},"body":{}}],["x6e05;&#x7a7a;&#x968a",{"_index":3335,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x6e1b;&#x5c11",{"_index":1649,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6e1b;&#x5c11;&#x9801;&#x9762;&#x9ad4;&#x7a4d;&#xff0c;&#x63d0;&#x5347;&#x7db2;&#x8def;&#x52a0;&#x8f09",{"_index":1653,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6e1b;&#x5c11;dom",{"_index":1666,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x6e2c;&#x8a66;&#x9663;&#x5217",{"_index":2480,"title":{},"body":{"array/array_methods.html#every":{},"array/array_methods.html#some":{}}}],["x6e32;&#x67d3;&#x5b8c;&#x5373;&#x53ef;&#x57f7;&#x884c;&#xff0c;&#x6b64;&#x6642;&#x5716;&#x7247;&#x3001;&#x8996;&#x983b;&#x9084;&#x53ef;&#x80fd;&#x6c92;&#x6709;&#x52a0;&#x8f09;&#x5b8c",{"_index":1709,"title":{},"body":{"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["x6e4a;&#x6574;&#x4f75",{"_index":1780,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x700f;&#x89bd;&#x5668;&#x4e0d;&#x8d70;&#x5f37;&#x7de9;&#x5b58",{"_index":3019,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x70ba;&#x4ec0;&#x9ebc;&#x6211;&#x5011;&#x9700;&#x8981",{"_index":2796,"title":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}},"body":{}}],["x70ba;&#x53c3;&#x6578;&#x7684;&#x51fd;&#x5f0f;&#x3002",{"_index":2793,"title":{},"body":{"global/function.html#call、apply、bind":{}}}],["x70ba;&#x53c3;&#x8003;&#x3002;&#x8acb;&#x4f7f;&#x7528;&#x7bad;&#x982d;&#x51fd;&#x5f0f;&#x6216;&#x662f",{"_index":2820,"title":{},"body":{"global/function.html#bind":{}}}],["x70ba;&#x6240;&#x6709;a&#x6a19;&#x7c64",{"_index":579,"title":{},"body":{"event.html#代理":{}}}],["x70ba;&#x95dc;&#x9375;&#x5b57",{"_index":1393,"title":{},"body":{"core.html#this":{}}}],["x7121;&#x503c;&#x50b3;&#x5165;this&#x5f80;&#x4e0a;&#x627",{"_index":2031,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x7121;&#x6cd5;&#x518d;&#x51fd;&#x5f0f;&#x5916;&#x88ab;&#x518d;&#x6b21;&#x57f7;&#x884c",{"_index":1362,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x7121;&#x6cd5;&#x53d6;&#x5f97;&#x7269;&#x4ef6;&#x7684;mynam",{"_index":1410,"title":{},"body":{"core.html#this":{}}}],["x7121;&#x6cd5;&#x65b0;&#x589e;&#x522a;&#x9664",{"_index":1486,"title":{},"body":{"core.html#屬性特徵":{}}}],["x7121;&#x7a7a;&#x683c;&#x5b57;&#x7b26;&#x69cb;&#x6210;&#x4e00;&#x500b;&#x55ae;&#x8a5e;&#x3002",{"_index":3366,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x7136;&#x5f8c;&#x518d;&#x7d71;&#x4e00;&#x63d2;&#x5165",{"_index":1697,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x7136;&#x5f8c;&#x624d;&#x8ce6;&#x4e88;&#x503c",{"_index":1099,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x7136;&#x5f8c;&#x628a;obj2.b&#x6539;&#x6210;100",{"_index":530,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x7248;&#x672c;)&#xff1a",{"_index":1540,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x7269;&#x4ef6",{"_index":1225,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"this.html#bind-apply-call":{}}}],["x7269;&#x4ef6;&#x4e0a",{"_index":1445,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x7269;&#x4ef6;&#x4e0b;&#x547c;&#x53eb;&#x6703;&#x5f71;&#x97ff",{"_index":1982,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["x7269;&#x4ef6;&#x52a0;&#x4e0a;s",{"_index":1489,"title":{},"body":{"core.html#屬性特徵":{}}}],["x7269;&#x4ef6;&#x53d6;&#x503c",{"_index":1239,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x7269;&#x4ef6;&#x53d6;&#x503c;&#x5c6c;&#x6027;&#x7528;&#x5b57;&#x4e32",{"_index":1244,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x7269;&#x4ef6;&#x53ef;&#x4ee5;&#x7528;&#x55ae;&#x5f15;&#x865f",{"_index":1320,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x7269;&#x4ef6;&#x53ef;&#x96a8;&#x610f;&#x589e;&#x52a0;&#x5c6c;&#x6027",{"_index":1302,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x7269;&#x4ef6;&#x5be6;&#x5b57",{"_index":1143,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x7269;&#x4ef6;&#x5c6c;&#x6027",{"_index":3137,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x7269;&#x4ef6;&#x7684",{"_index":1992,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["x7269;&#x4ef6;&#x7684;&#x53c3;&#x8003;&#x4f4d;&#x5740;&#x4e0d;&#x540c",{"_index":1219,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x7269;&#x4ef6;&#x7684;&#x578b;&#x5225",{"_index":1422,"title":{},"body":{"core.html#this":{}}}],["x7269;&#x4ef6;&#x7684;&#x65b9;&#x6cd5;&#x8abf;&#x7528",{"_index":1981,"title":{"this.html#物件的方法調用-As-an-object-method":{}},"body":{}}],["x7269;&#x4ef6;&#x7684;mynam",{"_index":1411,"title":{},"body":{"core.html#this":{}}}],["x7269;&#x4ef6;&#x8207;&#x7269;&#x4ef6",{"_index":1215,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x7269;&#x4ef6;&#x8207;&#x975e;&#x7269;&#x4ef6",{"_index":1213,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x7269;&#x4ef6;&#x88e1;&#x9762;&#x642d;&#x914d;&#x7bad;&#x982d;&#x51fd;&#x6a39;&#x6703;&#x51fa;&#x932f",{"_index":1555,"title":{},"body":{"core.html#箭頭函數":{}}}],["x7269;&#x4ef6;&#x8a18;&#x61b6;&#x9ad4;&#x7a7a;&#x9593",{"_index":1263,"title":{"core.html#物件記憶體空間":{}},"body":{}}],["x7269;&#x4ef6;&#x8b8a;&#x6578",{"_index":1266,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["x7269;&#x4ef6;&#xff0c;&#x6b64;&#x6642",{"_index":2352,"title":{},"body":{"api/promise.html#Promise":{}}}],["x7269;&#x4ef6;(&#x9663;&#x5217",{"_index":1281,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x7279;&#x5b9a;&#x573a;&#x666f;&#x4e0b;&#x4ee3;&#x66ff;&#x4f18;&#x5316",{"_index":3244,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x7279;&#x6b8a;&#x72c0;&#x6cc1",{"_index":1208,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x72c0;&#x614b",{"_index":2358,"title":{},"body":{"api/promise.html#Promise":{}}}],["x72c0;&#x614b;&#x78bc",{"_index":249,"title":{"RESTfulAPI.html#狀態碼":{}},"body":{}}],["x72c0;&#x614b;&#x78bc;&#x662f",{"_index":2935,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x72c0;&#x614b;&#xff0c;&#x52a0;&#x8f09;&#x700f;&#x89bd;&#x5668;&#x7de9;&#x5b58;&#xff0c;&#x4e26;&#x4e14;&#x97ff;&#x61c9;&#x982d;&#x6703;&#x8a2d;&#x7f6",{"_index":2989,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x72d7;&#x7684;&#x539f;&#x578b;&#x539f;&#x672c;&#x76f4;&#x63a5;&#x7e7c;&#x627f;&#x65bc;&#x52d5;&#x7269;&#x754c;&#x7684;&#x539f;&#x578b",{"_index":1466,"title":{},"body":{"core.html#繼承":{}}}],["x7372;&#x53d6;&#x968a;&#x5217;&#x9577;&#x5ea6",{"_index":3336,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x7372;&#x53d6;&#x968a;&#x982d;&#x5143;&#x7d20",{"_index":3334,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x7406;&#x89e3;&#x4e4b;&#x767d;&#x8bdd",{"_index":1515,"title":{},"body":{"core.html#屬性特徵":{}}}],["x751f;&#x6210;&#x65b0;&#x7684;&#x53c3;&#x8003;&#x7269;&#x4ef6",{"_index":1268,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["x751f;&#x6210;&#x65b0;&#x9663;&#x5217",{"_index":2470,"title":{},"body":{"array/array_methods.html#Array":{}}}],["x7528;&#x4e0d;&#x5230;301&#x72c0;&#x614b;&#x78bc;&#xff08;&#x6c38;&#x4e45;&#x91cd;&#x5b9a;&#x5411;&#xff09;&#x548c;302&#x72c0;&#x614b;&#x78bc;&#xff08;&#x66ab;&#x6642;&#x91cd;&#x5b9a;&#x5411;&#xff0c;307&#x4e5f;&#x662f;&#x9019;&#x500b;&#x542b;&#x7fa9;&#xff09;&#xff0c;&#x56e0;&#x70ba;&#x5b83;&#x5011;&#x53ef;&#x4ee5;&#x7531;&#x61c9;&#x7528;&#x7d1a;&#x5225;&#x8fd4;&#x56de;&#xff0c;&#x700f;&#x89bd;&#x5668;&#x6703;&#x76f4;&#x63a5;&#x8df3;&#x8f49;&#xff0c;api",{"_index":255,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x7528;&#x5168;&#x57df;&#x7269;&#x4ef6;&#x50b3;&#x503c",{"_index":1372,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x7528;&#x5230;&#x7684;3xx&#x72c0;&#x614b;&#x78bc;&#xff0c;&#x4e3b;&#x8981;&#x662f",{"_index":257,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x7528;&#x65bc;&#x5ba3;&#x544a;&#x4e00;&#x500b;&#x300c;&#x53ea;&#x4f5c;&#x7528;&#x5728;&#x7576;&#x524d;&#x5340;&#x584a;&#x7684;&#x8b8a;&#x6578;&#x300d;&#xff0c;&#x521d;&#x59cb;&#x503c;&#x53ef;&#x9078;&#x64c7;&#x6027;&#x7684;&#x8a2d;&#x5b9a;&#x3002",{"_index":3188,"title":{},"body":{"statements/let.html#let":{}}}],["x7528;&#x7acb;&#x5373;&#x57f7;&#x884c;&#x51fd;&#x6578",{"_index":321,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x7528;&#x7acb;&#x5373;&#x57f7;&#x884c;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#x5275;&#x9020;&#x4e86;&#x65b0;&#x7684;&#x51fd;&#x6578;&#x4f5c;&#x7528;&#x57df;&#x5c07;timer&#x51fd;&#x6578;&#x5305;&#x88f9;&#x4e86;&#x8d77;&#x4f86;&#xff0c;&#x4e26;&#x7528;j&#x6355;&#x7372;&#x4e86;&#x6bcf;&#x6b21;&#x5faa;&#x74b0;&#x6642;&#x7684;i",{"_index":324,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x7528;10&#x9032;&#x5236;&#x8f49;&#x63db",{"_index":2578,"title":{},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x7528;array.from&#x8f49;&#x6210;&#x7d14;&#x9663;&#x5217",{"_index":1559,"title":{},"body":{"core.html#箭頭函數":{}}}],["x7531;&#x65bc;&#x4e0a;&#x4e00;&#x500b;&#x968e;&#x6bb5;&#x7d50;&#x679c;&#x662f",{"_index":2387,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x7570;&#x6b65",{"_index":294,"title":{"asynchronous.html#異步":{}},"body":{}}],["x7570;&#x6b65;&#x51fd;&#x6578",{"_index":2390,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x7570;&#x6b65;&#x7684;&#x5de5;&#x5ee0;&#x51fd;&#x6578",{"_index":2731,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x7576",{"_index":1232,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"http/caching.html#強緩存":{}}}],["x7576;&#x4e2d;&#xff0c;&#x4e26;&#x4e0d;&#x662f;&#x7acb;&#x5373;&#x57f7;&#x884c;&#xff1b",{"_index":314,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x7576;&#x4f60;&#x62ff;&#x5230",{"_index":1778,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x7576;&#x6211;&#x5011;&#x9700;&#x8981;&#x70ba;&#x67d0;&#x500b;&#x5ba2;&#x6236;&#x7aef;&#x7684;&#x8acb;&#x6c42;&#x5275;&#x5efa;&#x4e00;&#x500b;session&#x7684;&#x6642;&#x5019;&#xff0c;&#x670d;&#x52d9;&#x5668;&#x9996;&#x5148;&#x6aa2;&#x67e5;&#x9019;&#x500b;&#x5ba2;&#x6236;&#x7aef;&#x7684;&#x8acb;&#x6c42;&#x88e1;&#x662f;&#x5426;&#x6709;&#x5305;&#x542b;&#x4e86;session&#x6a19;&#x8b58;&#xff0c;&#x5c31;&#x662f;&#x525b;&#x525b;&#x63d0;&#x5230;&#x7684",{"_index":2237,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7576;&#x700f;&#x89bd;&#x5668;&#x7684;&#x5f37;&#x7de9;&#x5b58;&#x5931;&#x6548;&#x7684;&#x6642;&#x5019;&#x6216;&#x8005;&#x8acb;&#x6c42;&#x982d;&#x4e2d;&#x8a2d;&#x7f6e;&#x4e86;&#x4e0d;&#x8d70;&#x5f37;&#x7de9;&#x5b58;&#xff0c;&#x4e26;&#x4e14;&#x5728;&#x8acb;&#x6c42;&#x982d;&#x4e2d;&#x8a2d;&#x7f6e;&#x4e86;if",{"_index":2987,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7576;&#x7136;&#xff0c;&#x6211;&#x5011;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x56de;&#x8abf;&#x51fd;&#x6578;&#xff0c;&#x4f46;&#x662f;&#x6211;&#x5011;&#x5df2;&#x7d93;&#x6709;&#x4e86",{"_index":2738,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x767c;&#x751f",{"_index":1155,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x767e;&#x5206;&#x6bd4",{"_index":1782,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x7684",{"_index":269,"title":{},"body":{"RESTfulAPI.html#狀態碼":{},"math.html#Math":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{},"http/caching.html#強緩存":{}}}],["x7684;&#x4e0d;&#x8db3",{"_index":3145,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x7684;&#x4ee3;&#x8868;&#x503c;&#x548c;&#x4e00;&#x500b;&#x9663;&#x5217;&#x5f62;&#x5f0f;&#x7684;&#x503c;&#x7d44;(&#x6216;&#x662f;&#x4e00;&#x500b",{"_index":2792,"title":{},"body":{"global/function.html#call、apply、bind":{}}}],["x7684;&#x4f7f;&#x7528;&#x8005;&#x672a;&#x5fc5;&#x77e5;&#x9053;&#xff0c;url",{"_index":262,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x7684;&#x500b;&#x6578",{"_index":3211,"title":{},"body":{"string/split.html#split":{}}}],["x7684;&#x503c;&#x3002",{"_index":1678,"title":{},"body":{"performance.html#懶加載":{}}}],["x7684;&#x503c;&#x4ee3;&#x8868;&#x7684;&#x662f",{"_index":3007,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x503c;&#x662f",{"_index":2991,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x503c;&#x662f;&#x4e00;&#x500b",{"_index":2942,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7684;&#x503c;&#x7684;&#x5143;&#x7d20;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x6570;&#x7ec4;&#x3002",{"_index":2550,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x7684;&#x503c;&#x9032;&#x884c;&#x6bd4;&#x8f03;&#xff0c;&#x5982;&#x679c;&#x76f8;&#x7b49;&#xff0c;&#x8fd4;&#x56de",{"_index":3013,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x503c;&#x9032;&#x884c;&#x6bd4;&#x8f03;&#xff0c;&#x5982;&#x679c;&#x7cfb;&#x7d71;&#x6642;&#x9593;&#x8d85;&#x904e;&#x4e86",{"_index":2945,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7684;&#x503c;&#xff0c;&#x7de9;&#x5b58;&#x5931;&#x6548;&#x3002;&#x7531;&#x65bc;&#x548c;&#x7cfb;&#x7d71;&#x6642;&#x9593;&#x9032;&#x884c;&#x6bd4;&#x8f03;&#xff0c;&#x6240;&#x4ee5;&#x7576;&#x7cfb;&#x7d71;&#x6642;&#x9593;&#x548c;&#x670d;&#x52d9;&#x5668;&#x6642;&#x9593;&#x4e0d;&#x4e00;&#x81f4;&#x7684;&#x6642;&#x5019;&#xff0c;&#x6703;&#x6709;&#x7de9;&#x5b58;&#x6709;&#x6548;&#x671f;&#x4e0d;&#x51c6;&#x7684;&#x554f;&#x984c;&#x3002;expir",{"_index":2946,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7684;&#x512a;&#x5148;&#x7d1a;&#x5728;&#x4e09;&#x500b",{"_index":2947,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7684;&#x512a;&#x5148;&#x7d1a;&#x9ad8;&#x65bc",{"_index":2979,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7684;&#x5176;&#x4e2d;&#x4e4b;&#x4e00;&#xff0c",{"_index":2367,"title":{},"body":{"api/promise.html#Promise":{}}}],["x7684;&#x51fa;&#x73fe;&#x4e3b;&#x8981;&#x89e3;&#x6c7a;&#x4e86",{"_index":3025,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x52a0;&#x8f7d;&#x5b9e;&#x73b0",{"_index":380,"title":{"es6.html#Module-的加载实现":{}},"body":{}}],["x7684;&#x539f;&#x56e0;&#x3002",{"_index":1817,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x7684;&#x539f;&#x578b;&#x65b9;&#x6cd5;&#xff1a",{"_index":2354,"title":{},"body":{"api/promise.html#Promise":{}}}],["x7684;&#x53e6;&#x4e00;&#x500b;&#x624b;&#x6bb5;&#xff0c;&#x7686;&#x662f;&#x56de;&#x50b3;function&#x57f7;&#x884c;&#x7d50;&#x679c",{"_index":2018,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x7684;&#x5de5;&#x5ee0;&#x3002",{"_index":2753,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x7684;&#x610f;&#x601d;&#x662f;&#x50b3;&#x905e;&#x4e00;&#x500b;&#x51fd;&#x6578;&#xff0c;&#x5ef6;&#x9072;&#x4e00;&#x6bb5;&#x6642;&#x5019;&#x628a;&#x8a72;&#x51fd;&#x6578;&#x6dfb;&#x52a0;&#x5230",{"_index":312,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x7684;&#x610f;&#x601d;&#x662f;&#x5148;&#x5efa;&#x7acb;&#x4e00;&#x500b;&#x7a7a;&#x7269;&#x4ef6",{"_index":547,"title":{},"body":{"copy.html#Object-assign":{}}}],["x7684;&#x6307;&#x5411",{"_index":1983,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["x7684;&#x6578;&#x503c",{"_index":1235,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x7684;&#x65b0;&#x8a9e;&#x6cd5;&#x3002;&#x4fee;&#x5fa9;&#x4e86;es5",{"_index":3144,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x7684;&#x65b9;&#x5f0f;&#x5efa;&#x7acb",{"_index":2351,"title":{},"body":{"api/promise.html#Promise":{}}}],["x7684;&#x65b9;&#x6848",{"_index":3245,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x7684;&#x65f6;&#x5019;&#x4f1a;&#x6536;&#x96c6;&#x4f9d;&#x8d56;&#xff0c;sett",{"_index":1517,"title":{},"body":{"core.html#屬性特徵":{}}}],["x7684;&#x65f6;&#x5019;&#x4f1a;&#x89e6;&#x53d1;&#x4f9d;&#x8d56;&#x66f4;&#x65b0",{"_index":1518,"title":{},"body":{"core.html#屬性特徵":{}}}],["x7684;&#x6642;&#x5019;&#xff0c;&#x6703;&#x5c07;&#x9019;&#x5169;&#x500b;&#x5c6c;&#x6027;&#x503c;&#x5230;&#x670d;&#x52d9;&#x7aef;&#x53bb;&#x9a57;&#x8b49;&#x662f;&#x5426;&#x547d;&#x4e2d;&#x5354;&#x5546;&#x7de9;&#x5b58;&#xff0c;&#x5982;&#x679c;&#x547d;&#x4e2d;&#x4e86;&#x5354;&#x5546;&#x7de9;&#x5b58;&#xff0c;&#x6703;&#x8fd4;&#x56d",{"_index":2988,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x6642;&#x9593",{"_index":1674,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x7684;&#x6642;&#x9593;&#xff0c;&#x4e26;&#x653e;&#x5230",{"_index":3011,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7684;&#x66ff;&#x8eab",{"_index":2818,"title":{},"body":{"global/function.html#bind":{}}}],["x7684;&#x6838;&#x5fc3;&#x601d;&#x60f3;&#x5c31;&#x662f;&#xff0c;&#x5ba2;&#x6236;&#x7aef;&#x767c;&#x51fa;&#x7684;&#x6578;&#x64da;&#x64cd;&#x4f5c;&#x6307;&#x4ee4;&#x90fd;&#x662f;&#x201d;&#x52d5;&#x8a5",{"_index":232,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x7684;&#x683c;&#x5f0f;&#x662f;&#x975e;&#x5e38;&#x56b4;&#x683c;&#x7684;&#xff0c;&#x591a;&#x4e00;&#x500b;&#x9017;&#x865f;&#x5c11;&#x4e00;&#x500b;&#x9017;&#x865f;&#xff0c;&#x90fd;&#x6703;&#x5c0e;&#x81f4;&#x51fa;&#x73fe;&#x932f;&#x8aa4;&#xff0c",{"_index":1322,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x7684;&#x6d6e;&#x9ede;&#x6578;&#x4e26;&#x4e0d;&#x80fd;&#x7cbe;&#x78ba;&#x5730;&#x8868;&#x9054;&#x5c0f;&#x6578;&#xff08;&#x6bd4;&#x5982;&#x8aaa;0.1&#xff09;&#xff0c",{"_index":1792,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{}}}],["x7684;&#x7279;&#x5fb5",{"_index":332,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x7684;&#x7279;&#x6027;&#xff0c;&#x8fd9;&#x4e5f;&#x5c31;&#x662f",{"_index":1512,"title":{},"body":{"core.html#屬性特徵":{}}}],["x7684;&#x7d50;&#x679c",{"_index":2363,"title":{},"body":{"api/promise.html#Promise":{}}}],["x7684;&#x7d50;&#x679c;&#xff08;&#x8a72;&#x627f;&#x8afe;&#x5df2;&#x7d93;&#x88ab;&#x5be6;&#x73f",{"_index":2361,"title":{},"body":{"api/promise.html#Promise":{}}}],["x7684;&#x898f;&#x5247;&#xff1a",{"_index":1156,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x7684;&#x898f;&#x7bc4;&#xff0c;&#x8acb;&#x9078;&#x64c7;&#x6700;&#x5f8c;&#x4e00;&#x500b;&#x9078;&#x9805;&#x3002",{"_index":1544,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x7684;&#x89e3;&#x6c7a;&#x65b9;&#x6cd5",{"_index":1230,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x7684;&#x8abf;&#x7528;&#x65b9;&#x5f0f",{"_index":1395,"title":{},"body":{"core.html#this":{}}}],["x7684;&#x904b;&#x4f5c",{"_index":2382,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x7684;hoisting&#x76f8;&#x540c;&#x6982;&#x5ff5",{"_index":1538,"title":{},"body":{"core.html#const":{}}}],["x7686;&#x662f;&#x56de;&#x50b3;function&#x57f7;&#x884c;&#x7d50;&#x679c",{"_index":2805,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x76e1;&#x53ef;&#x80fd;&#x4e0d;&#x8981;&#x4f7f;&#x7528;simpl",{"_index":1404,"title":{},"body":{"core.html#this":{}}}],["x76e1;&#x53ef;&#x80fd;&#x4e0d;&#x8981;&#x8abf;&#x7528;thi",{"_index":1434,"title":{},"body":{"core.html#this":{}}}],["x76e3;&#x807d;&#x662f;div1",{"_index":586,"title":{},"body":{"event.html#代理":{}}}],["x76ee;&#x524d;&#x53ea;&#x6709;&#x7e7c;&#x627f;&#x539f;&#x578b;prototyp",{"_index":1469,"title":{},"body":{"core.html#繼承":{}}}],["x76ee;&#x6a19;&#x7269;&#x4ef6;&#x672c;&#x8eab;&#x4e5f;&#x88ab;&#x6539;&#x8b8a;&#x3002",{"_index":2889,"title":{},"body":{"object/assign.html#合併物件":{}}}],["x76f4;&#x63a5;&#x64cd;&#x4f5c;&#x7269;&#x4ef6;&#x672c;&#x8eab",{"_index":1485,"title":{},"body":{"core.html#屬性特徵":{}}}],["x76f4;&#x63a5;&#x8f38;&#x51fa;&#xff0c;1",{"_index":303,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x76f4;&#x8b6f;&#x5668",{"_index":1087,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x76f4;&#x8b6f;&#x5668;&#x8f49;&#x63db;&#x904e;&#x7a0b",{"_index":1081,"title":{"core.html#JavaScript-直譯器轉換過程":{}},"body":{}}],["x76f8;&#x7576;&#x65bc;&#x7d66;&#x5c0d;&#x8c61;&#x6dfb;&#x52a0;&#x4e86;x&#x5c6c;&#x6027;&#x3002",{"_index":3181,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x770b;&#x5230;&#x51fd;&#x5f0f;&#x662f;&#x76f4;&#x63a5;&#x57f7;&#x884c;&#x7684",{"_index":1406,"title":{},"body":{"core.html#this":{}}}],["x770b;&#x898b;&#x7269;&#x4ef6;&#x6240;&#x6709;&#x5c6c;&#x6027;&#x5167;&#x5bb9",{"_index":1279,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x77e5;&#x591a;&#x5c11",{"_index":2113,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["x78ba;&#x4fdd;&#x7a7a;&#x7269;&#x4ef6",{"_index":1498,"title":{},"body":{"core.html#屬性特徵":{}}}],["x78bc",{"_index":2993,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x78bc;&#x662f;&#x4ee5",{"_index":3001,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7981;&#x7528;&#x5354;&#x5546;&#x7de9;&#x5b58",{"_index":2963,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x79c1;&#x6709;&#x65b9;&#x6cd5",{"_index":1389,"title":{},"body":{"core.html#函式工廠":{}}}],["x79d1;&#x5b78;&#x7b26;&#x865f;&#x8655;&#x7406",{"_index":1786,"title":{"math.html#科學符號處理":{},"cases/math.html#科學符號處理":{}},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x79d2;&#x3002",{"_index":2973,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x79d2;&#x4e4b;&#x5f8c;&#x89f8;&#x767c;&#xff0c;&#x800c;&#x5faa;&#x74b0;&#x5b8c;&#x7684;&#x8f38;&#x51fa;&#x662f;&#x7acb;&#x5373;&#x57f7;&#x884c;&#x7684",{"_index":300,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x79d2;&#x4e4b;&#x5f8c;&#xff0c;&#x8f38;&#x51fa",{"_index":304,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x79d2;&#x7684;&#x8d85;&#x6642;&#x6642;&#x9593;&#x4e4b;&#x5f8c;&#xff0c;&#x518d;&#x6b21;&#x8acb;&#x6c42;&#x8cc7;&#x6e90;&#xff1a",{"_index":2977,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7a0b;&#x5e8f;&#x7684;&#x8a9e;&#x6cd5;&#x5206;&#x6790;(pars",{"_index":1152,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x7a0b;&#x5f0f",{"_index":1112,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{}}}],["x7a4d;&#x5206;&#x3002",{"_index":3230,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x7a4d;&#x5206;&#xff0c;&#x666e;&#x901a;&#x7528;&#x6236;&#x8d08;&#x9001",{"_index":3229,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x7acb;&#x5373;&#x51fd;&#x5f0f",{"_index":1144,"title":{"core.html#立即函式":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["x7acb;&#x5373;&#x51fd;&#x5f0f;&#x4e00;&#x500b;&#x529f;&#x80fd",{"_index":1383,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["x7acb;&#x5373;&#x51fd;&#x5f0f;&#xff1a",{"_index":2004,"title":{"this.html#立即函式：":{}},"body":{}}],["x7acb;&#x5373;&#x51fd;&#x5f0f;(iif",{"_index":1353,"title":{"core.html#立即函式-IIFE":{}},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x7acb;&#x5373;&#x547c;&#x53eb;&#x51fd;&#x5f0f;&#x8868;&#x9054;&#x5f0f",{"_index":1354,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x7acb;&#x5373;&#x57f7;&#x884c",{"_index":1361,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x7acb;&#x99ac;&#x8abf;&#x7528;clos",{"_index":2394,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x7b26;&#xff0c;&#x7576;&#x670d;&#x52d9;&#x7aef;&#x7684;&#x6587;&#x4ef6;&#x8b8a;&#x5316;&#x7684;&#x6642;&#x5019;&#xff0c;&#x5b83;&#x7684",{"_index":2996,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7b2c;&#x4e00;&#x500b;for&#x8ff4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x70ba",{"_index":3344,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x7b2c;&#x4e00;&#x65b9",{"_index":2177,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e00;&#x65b9;cookie&#x548c;&#x7b2c;&#x4e09;&#x65b9;cookie&#x5340;&#x5225",{"_index":2183,"title":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e00;&#x65b9;cookie&#x63a5;&#x53d7;&#x7387;&#x9ad8;&#xff0c;&#x66f4;&#x6e96;&#x78ba;&#xff0c;&#x6c92;&#x6709;&#x7279;&#x6b8a;&#x9700;&#x8981;&#x5c31;&#x7528;&#x4ed6;&#x3002",{"_index":2199,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e00;&#x6b21;&#x52a0;&#x8f09;&#xff0c;&#x9801;&#x9762;&#x6703;&#x5411;&#x670d;&#x52d9;&#x5668;&#x8acb;&#x6c42;&#x6578;&#x64da;&#xff0c;&#x4e26;&#x5728",{"_index":2970,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7b2c;&#x4e00;&#x6b21;&#x57f7;&#x884c",{"_index":2089,"title":{},"body":{"variable.html#Hoisting":{}}}],["x7b2c;&#x4e09;&#x65b9",{"_index":2190,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e09;&#x65b9;cooki",{"_index":2201,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e09;&#x65b9;cookie&#x53ef;&#x4ee5;&#x8de8;&#x57df;&#x8ddf;&#x8e64;&#xff0c;&#x7279;&#x5225;&#x9700;&#x6c42;&#x53ef;&#x4ee5;&#x61c9;&#x7528;&#x3002",{"_index":2200,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e09;&#x65b9;cookie&#x7684;&#x512a;&#x52e2;&#x548c;&#x61c9;&#x7528",{"_index":2216,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7b2c;&#x4e8c;&#x5c64;&#x662f;&#x50b3;&#x53c3;&#x8003;&#x7684;&#x5f62;&#x5f0f",{"_index":1290,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{}}}],["x7b2c;&#x4e8c;&#x6b21;&#x52a0;&#x8f09;&#xff0c;d",{"_index":2974,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7b2c;&#x4e8c;&#x6b21;&#x57f7;&#x884c",{"_index":2090,"title":{},"body":{"variable.html#Hoisting":{}}}],["x7b2c;&#x4e8c;&#x6b21;&#x8acb;&#x6c42;&#x8cc7;&#x6e90;&#xff0c;&#x670d;&#x52d9;&#x7aef;&#x6839;&#x64da;&#x8acb;&#x6c42;&#x982d;&#x4e2d;&#x7684",{"_index":3023,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x7b2c;53&#x4f4d;&#x958b;&#x59cb;)&#x3002;&#x7576;&#x7136;&#xff0c;&#x4ee3;&#x50f9;&#x5c31;&#x662f;&#xff0c;0.1&#x5728;&#x8a08;&#x7b97;&#x6a5f;&#x5167;&#x90e8;&#x6839;&#x672c;&#x5c31;&#x4e0d;&#x662f;&#x7cbe;&#x78ba;&#x7684;0.1&#xff0c;&#x800c;&#x662f;&#x4e00;&#x500b;&#x6709;&#x820d;&#x5165;&#x8aa4;&#x5dee;&#x7684;0.1&#x3002;&#x7576;&#x4ee3;&#x78bc;&#x88ab;&#x7de8;&#x8b6f;&#x6216;&#x89e3;&#x91cb;&#x5f8c;&#xff0c;0.1&#x5df2;&#x7d93;&#x88ab;&#x56db;&#x6368;&#x4e94;&#x5165;&#x6210;&#x4e00;&#x500b;&#x8207;&#x4e4b;&#x5f88;&#x63a5;&#x8fd1;&#x7684;&#x8a08;&#x7b97;&#x6a5f;&#x5167;&#x90e8;&#x6578;&#x5b57;&#xff0c;&#x4ee5;&#x81f3;&#x65bc;&#x8a08;&#x7b97;&#x9084;&#x6c92;&#x958b;&#x59cb;&#xff0c;&#x4e00;&#x500b;&#x5f88;&#x5c0f;&#x7684;&#x820d;&#x5165;&#x932f;&#x8aa4;&#x5c31;&#x5df2;&#x7d93;&#x7522;&#x751f;&#x4e86;&#x3002;&#x9019;&#x4e5f;&#x5c31;&#x662f",{"_index":1815,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x7b49;&#x4e0d;&#x80fd;&#x7de9;&#x5b58;&#x6b64;&#x97ff;&#x61c9",{"_index":2954,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7b49;&#x51fd;&#x6578;&#x8abf;&#x7528;&#x5b8c",{"_index":2391,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x7b49;&#x540c;&#x65bc",{"_index":359,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x7b49;&#x65b9;&#x6cd5;&#xff0c",{"_index":2510,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x7b49;&#x7de9;&#x5b58",{"_index":2956,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x7b54;&#x6848;&#x662f;&#xff1a",{"_index":1813,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x7bad;&#x982d;&#x51fd;&#x5f0f",{"_index":2035,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x7bad;&#x982d;&#x51fd;&#x5f0f;&#x6c92;&#x6709;&#x81ea;&#x5df1;&#x7684;thi",{"_index":1547,"title":{},"body":{"core.html#箭頭函數":{}}}],["x7bad;&#x982d;&#x51fd;&#x5f0f;(es6",{"_index":1403,"title":{},"body":{"core.html#this":{}}}],["x7bad;&#x982d;&#x51fd;&#x6578",{"_index":1545,"title":{"core.html#箭頭函數":{}},"body":{"core.html#箭頭函數":{},"global/function.html#cab-call-apply-vs-bind":{},"global/function.html#bind":{}}}],["x7c21;&#x6613;&#x547c;&#x53eb",{"_index":1399,"title":{"this.html#簡易呼叫":{}},"body":{"core.html#this":{}}}],["x7c21;&#x6613;&#x547c;&#x53eb;&#x4e0b",{"_index":1433,"title":{},"body":{"core.html#this":{}}}],["x7d14;&#x503c",{"_index":1277,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{}}}],["x7d14;&#x503c;&#x7121;&#x6cd5;&#x65b0;&#x589e;&#x5c6c;&#x6027",{"_index":1271,"title":{"core.html#純值無法新增屬性":{}},"body":{"core.html#物件記憶體空間":{}}}],["x7d14;&#x503c;&#x7dad;&#x6301;&#x539f;&#x578b;&#x5225",{"_index":1431,"title":{},"body":{"core.html#this":{}}}],["x7d1a;&#x5225;&#x53ef;&#x4ee5;&#x4e0d;&#x8003;&#x616e;&#x9019;&#x5169;&#x7a2e;&#x60c5;&#x6cc1;&#x3002",{"_index":256,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x7d22;&#x5f15;&#x987a;&#x5e8f",{"_index":3134,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x7d44;&#x5408;&#x7684;&#x5de5;&#x5ee0;&#x51fd;&#x6578",{"_index":2710,"title":{"function/factory​_factory.html#組合的工廠函數":{}},"body":{}}],["x7d50;&#x69cb;&#x4e2d;&#x3002",{"_index":1704,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x7d66;&#x4e0d;&#x540c;&#x7684;&#x503c;&#x3000;&#x505a;&#x76f8;&#x540c;&#x7684;&#x4e8b;&#x60c5",{"_index":1388,"title":{},"body":{"core.html#函式工廠":{}}}],["x7d81;&#x5b9a;&#x5927;&#x6cd5",{"_index":2825,"title":{},"body":{"global/function.html#bind":{}}}],["x7d93;&#x5178;&#x7684;&#x96d9;&#x7aef;&#x968a;&#x5217;&#x554f;&#x984c;&#xff1a;&#x7ffb;&#x8f49;&#x5b57;&#x7b26;&#x4e32;&#x88e1;&#x7684;&#x55ae;&#x8a5",{"_index":3357,"title":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}},"body":{}}],["x7dad;&#x57fa;&#x767e;&#x79d1",{"_index":1317,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x7db2;&#x57df;&#x4e2d;&#x3002",{"_index":2189,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7db2;&#x57df;&#x4e2d;&#xff0c;&#x9019;&#x4fbf;&#x662f;&#x7b2c;&#x4e09;&#x65b9",{"_index":2196,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7db2;&#x9801;&#x7b2c;&#x4e09;&#x65b9",{"_index":2221,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x7de9;&#x5b58",{"_index":3031,"title":{},"body":{"http/caching.html#References":{}}}],["x7e7c;&#x627f",{"_index":1451,"title":{"core.html#繼承":{}},"body":{}}],["x7e7c;&#x627f;&#x7269;&#x4ef6;&#x7684;&#x539f;&#x578b",{"_index":1313,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x7e7c;&#x7e8c;&#x9075;&#x5faa",{"_index":2381,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x7f3a;&#x9ed",{"_index":2220,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x800c",{"_index":2019,"title":{},"body":{"this.html#bind-apply-call":{},"api/promise.html#Promise":{}}}],["x800c;&#x4e0d;&#x662f",{"_index":2742,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x800c;&#x4f7f;&#x7528;&#x7b2c;&#x4e09;&#x65b9;cookie&#xff0c;&#x90a3;&#x9ebc;&#x7121;&#x8ad6;&#x591a;&#x5c11;&#x500b;&#x57df;&#xff0c;&#x90fd;&#x53ea;&#x6709;&#x4e00;&#x500b;cookie&#xff0c;&#x4e00;&#x500b;&#x5c6c;&#x65bc;&#x7b2c;&#x4e09;&#x65b9;&#x57df;&#x7684;cookie&#xff0c;&#x7db2;&#x7ad9;&#x4e0b;&#x6240;&#x6709;&#x57df;&#x90fd;&#x80fd;&#x5171;&#x4eab;&#x9019;&#x500b;cookie&#xff0c;&#x90a3;&#x9ebc;&#x6240;&#x6709;&#x7684;&#x884c;&#x70ba;&#x90fd;&#x80fd;&#x88ab;&#x95dc;&#x806f;&#x8d77;&#x4f86;&#x5206;&#x6790;&#x3002",{"_index":2219,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x800c;&#x5982;&#x679c;&#x4e0a;&#x4e00;&#x500b;&#x8cc7;&#x6e90;&#x52a0;&#x8f09;&#x5931;&#x6557;,&#x53ef;&#x80fd;&#x5c0e;&#x81f4;&#x5f9e;&#x7de9;&#x5b58;&#x52a0;&#x8f09;&#x7684;&#x8cc7;&#x6e90;&#x5931;&#x6557",{"_index":2112,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["x800c;&#x7b2c;&#x4e09;&#x65b9",{"_index":2180,"title":{},"body":{"F2E/cookie.html#什麼是-Cookie？":{}}}],["x800c;&#x95dc;&#x9589;&#x700f;&#x89bd;&#x5668;&#x5f8c;&#x56e0;&#x70ba;cookie&#x6d88;&#x5931;&#x9020;&#x6210",{"_index":2252,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8072;&#x660e;&#x7684;&#x8b8a;&#x91cf;&#x4e0d;&#x6703;&#x63d0;&#x5347;,&#x4e26;&#x4e14;&#x6703;&#x7522;&#x751f;&#x66ab;&#x5b58;&#x6b7b;&#x5340;&#x3002;&#x5728",{"_index":3190,"title":{},"body":{"statements/let.html#let":{}}}],["x8072;&#x660e;&#x8b8a;&#x91cf;&#x4e4b;&#x524d;&#x8a2a;&#x554f;&#x8b8a;&#x91cf;&#x6703;&#x62cb;&#x51fa;&#x932f;&#x8aa4;&#x3002",{"_index":3191,"title":{},"body":{"statements/let.html#let":{}}}],["x80fd;&#x4ee3;&#x8868;&#x8a72;&#x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x7684;&#x6578;&#x5b57",{"_index":2063,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x81ea;&#x52d5;&#x5206;&#x865f;&#x63d2;&#x5165",{"_index":1149,"title":{"core.html#ASI-自動分號插入":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x81ea;&#x8eab;&#x518d;&#x6b21;&#x8abf;&#x7528",{"_index":310,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x8207",{"_index":1242,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{},"this.html#Callback":{}}}],["x82f1;&#x6587;&#x539f;&#x6587;&#xff1a",{"_index":2756,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x842c;&#x7269;&#x5373;&#x5c0d;&#x8c61",{"_index":3114,"title":{},"body":{"operators/typeof.html#null":{}}}],["x85cd;&#x8272",{"_index":1205,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x86cb;&#x7cd5",{"_index":2726,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x86cb;&#x7cd5;*&#x662f;*&#x751c;&#x9ede",{"_index":2723,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x8868;&#x6578;&#x5b57;&#x5230;1",{"_index":2056,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x8868;&#x793a;&#x56b4;&#x683c;&#x76f8;&#x7b49;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#x985e;&#x578b;&#x548c;&#x503c;&#x90fd;&#x5fc5;&#x9808;&#x76f8;&#x540c;&#x3002;&#x5169;&#x500b;&#x7b49;&#x865f",{"_index":1886,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x8868;&#x793a;&#x57fa;&#x672c;&#x8a9e;&#x53e5;&#x7684;&#x57f7;&#x884c;&#x6b21;&#x6578;&#x662f;&#x4e00;&#x500b;&#x5e38;&#x6578;&#xff0c;&#x4e00;&#x822c;&#x4f86;&#x8aaa;&#xff0c;&#x53ea;&#x8981;&#x6f14;&#x7b97;&#x6cd5;&#x4e2d;&#x4e0d;&#x5b58;&#x5728;&#x8ff4;&#x5708;&#x8a9e;&#x53e5;&#xff0c;&#x5176;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x5c31;&#x662f;o(1",{"_index":3348,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["x8868;&#x9054;&#x5f0f",{"_index":1138,"title":{"core.html#陳述式-表達式":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x8868;&#x9054;&#x5f0f;&#x6703;&#x56de;&#x50b3;&#x7d50;&#x679c",{"_index":2002,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x88ab;&#x6539;&#x5230;&#x4e86",{"_index":528,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x88dc;&#x6578;&#x5b57",{"_index":1596,"title":{"num.html#補數字":{}},"body":{}}],["x88dd;&#x98fe;&#x914d;&#x6599;&#x3002",{"_index":2729,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x88e1",{"_index":1520,"title":{},"body":{"core.html#Let":{}}}],["x88e1;&#x9762;&#x7684",{"_index":2811,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["x8907;&#x88fd;&#x4e00;&#x4efd;obj1&#x53eb;&#x505a;obj2",{"_index":529,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{}}}],["x8981;&#x597d;&#x65bc",{"_index":241,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x8981;&#x63d2;&#x5165",{"_index":1700,"title":{},"body":{"performance.html#合併-DOM-插入-createDocumentFragment":{}}}],["x898b;&#x5927;&#x62ec;&#x865f",{"_index":1267,"title":{},"body":{"core.html#物件記憶體空間":{}}}],["x898f;&#x5247;&#x662f;&#xff1a",{"_index":3227,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x898f;&#x7bc4;&#x6587;&#x4ef6",{"_index":1539,"title":{},"body":{"core.html#ES6-Airbnb":{}}}],["x89e3;&#x51b3;provision",{"_index":2108,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["x89e3;&#x6c7a;&#x65b9;&#x6cd5;&#x662f;&#x4f7f;&#x7528",{"_index":361,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["x89e3;&#x91cb",{"_index":3363,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x89e3;&#x984c;&#x601d;&#x8def;&#xff1a;&#x4f7f;&#x7528;&#x96d9;&#x7aef;&#x968a;&#x5217;&#x89e3;&#x984c",{"_index":3368,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x89f8;&#x767c",{"_index":1722,"title":{},"body":{"performance.html#事件節流":{}}}],["x8a08;&#x7b97;&#x5b8c;a.x,&#x518d;&#x8a08;&#x7b97",{"_index":3182,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x8a08;&#x7b97;&#x65b9;&#x5f0f;&#x4f86;&#x6c7a;&#x5b9a;&#xff09;&#x9054;&#x5230;&#x80fd;&#x5920;&#x89f8;&#x767c",{"_index":3004,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x8a08;&#x7b97;&#x6a5f;&#x8868;&#x793a;&#x5341;&#x9032;&#x5236;&#x662f;&#x63a1;&#x7528;&#x4e8c;&#x9032;&#x88fd;&#x8868;&#x793a;&#x7684;&#xff0c;&#x6240;&#x4ee5",{"_index":1801,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x8a08;&#x7b97;&#xff0c;&#x66f4;&#x5feb;&#x5c55;&#x73f",{"_index":1651,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x8a18;&#x5f97;&#x990a;&#x6210;&#x597d;&#x7fd2;&#x6163",{"_index":1367,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x8a2d;&#x5b9a;&#x5728",{"_index":2195,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8a2d;&#x5b9a;&#x5728;&#x60a8;&#x76ee;&#x524d;&#x9020;&#x8a2a;&#x4e4b;&#x7db2;&#x57df;&#x4e2d",{"_index":2184,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8a2d;&#x5b9a;&#x5728;&#x76ee;&#x524d;&#x9020;&#x8a2a;&#x7db2;&#x57df;&#x4ee5;&#x5916;&#x7684",{"_index":2191,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8a2d;&#x7f6e;&#x4e86;&#x4e00;&#x500b;cookie&#xff0c;&#x90a3;&#x9019;&#x500b;cookie&#x53ea;&#x80fd;&#x88ab",{"_index":2211,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8a2d;&#x8a08;&#x4e2d;&#xff0c;&#x6211;&#x5011;&#x90fd;&#x6703;&#x628a;&#x8cc7;&#x6599;&#x8a18;&#x9304;&#x5728",{"_index":2244,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x8a72;&#x51fd;&#x6578;&#x6703;&#x7b49;&#x5f85;&#x5230;&#x51fd;&#x6578;&#x968a;&#x5217;&#x4e2d;&#x524d;&#x9762;&#x6240;&#x6709;&#x7684;&#x51fd;&#x6578;&#x904b;&#x884c;&#x5b8c;&#x7562;&#x4e4b;&#x5f8c;&#x624d;&#x6703;&#x904b;&#x884c",{"_index":316,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x8a72;&#x53c3;&#x6578;&#x5c0f;&#x65bc",{"_index":2579,"title":{},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x8a9e;&#x6cd5;&#x4f5c;&#x7528;&#x57df",{"_index":1085,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x8a9e;&#x6cd5;&#x57fa;&#x672c;&#x55ae;&#x5143;&#x5316;(token",{"_index":1082,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x8a9e;&#x6cd5;&#x89e3;&#x6790;&#x6642;&#x5c31;&#x5df2;&#x7d93;&#x78ba;&#x5b9a;&#x4f5c;&#x7528;&#x57df",{"_index":1088,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x8aaa;&#x660e;&#xff1a",{"_index":3365,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x8abf;&#x6574;&#x539f;&#x578b;&#x7684;&#x65b9;&#x6cd5;&#x6642",{"_index":1447,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x8abf;&#x7528;clos",{"_index":2392,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x8acb;&#x5225;&#x5132;&#x5b58",{"_index":2819,"title":{},"body":{"global/function.html#bind":{}}}],["x8acb;&#x6c42;&#x982d;&#x5c6c;&#x6027;&#x4e2d;&#xff0c;&#x670d;&#x52d9;&#x7aef;&#x6839;&#x64da;&#x6587;&#x4ef6;&#x6700;&#x5f8c;&#x4e00;&#x6b21;&#x4fee;&#x6539;&#x6642;&#x9593;&#x548c",{"_index":3012,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x8acb;&#x8f38;&#x51fa;1&#x5230;400&#x4e4b;&#x9593;&#x6240;&#x6709;&#x6578;&#x5b57;&#x4e2d;&#x5305;&#x542b;&#x7684;1&#x7684;&#x500b;&#x6578;&#xff0c;&#x6bd4;&#x5982;&#x6578;&#x5b57;1&#x4e2d;&#x5305;&#x542b;&#x4e86;&#x4e00;&#x500b;1",{"_index":3208,"title":{},"body":{"string/split.html#split":{}}}],["x8b8a;&#x5c0d;&#x8c61",{"_index":3118,"title":{},"body":{"operators/typeof.html#null":{}}}],["x8b8a;&#x6578",{"_index":1261,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x8b8a;&#x6578;&#x6703;&#x81ea;&#x52d5;&#x88ab;&#x63d0;&#x5347",{"_index":2088,"title":{},"body":{"variable.html#Hoisting":{}}}],["x8b8a;&#x6578;&#x7121;&#x6cd5;&#x88ab;&#x522a;&#x9664;&#xff0c;&#x5c6c;&#x6027;&#x624d;&#x53ef;&#x4ee5",{"_index":1260,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x8b8a;&#x6578;&#x7684;&#x4f5c;&#x7528;&#x57df;&#x5728;&#x51fd;&#x5f0f;&#x5167",{"_index":2084,"title":{"variable.html#變數的作用域在函式內":{}},"body":{}}],["x8b8a;&#x91cf",{"_index":3108,"title":{},"body":{"operators/typeof.html#typeof":{}}}],["x8b93;&#x8cc7;&#x6e90;&#x52a0;&#x8f09;&#x66f4;&#x5feb",{"_index":1660,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x8b93;&#x9023;&#x7e8c;&#x9375;&#x5165;&#x4e0d;&#x8981;&#x983b;&#x7e41;&#x89f8;&#x767c",{"_index":1719,"title":{},"body":{"performance.html#事件節流":{}}}],["x8cc7;&#x6e90;&#x9700;&#x8981;&#x591a;&#x7d1a;&#x5206;&#x985e;&#xff0c;&#x56e0;&#x6b64;&#x5f88;&#x5bb9;&#x6613;&#x5beb;&#x51fa;&#x591a;&#x7d1a;&#x7684",{"_index":244,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x8cd3;&#x8a9e",{"_index":231,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x8cd3;&#x8a9e;&#x201d;&#x7684;&#x7d50;&#x69cb;&#x3002",{"_index":233,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x8ce6;&#x503c;&#x6210;&#x4e00;&#x500b;&#x901a;&#x7528;&#x7684;&#x9810;&#x89bd;&#x5716;&#xff0c;&#x4e0b;&#x62c9;&#x6642;&#x5019;&#x518d;&#x52d5;&#x614b;&#x8ce6;&#x503c;&#x6210;&#x6b63;&#x5f0f;&#x7684;&#x5716;&#x7247;&#x3002;&#x5982;&#x4e0b;&#xff0c;preview.png&#x662f;&#x9810;&#x89bd;&#x5716;&#x7247;&#xff0c;&#x6bd4;&#x8f03;&#x5c0f;&#xff0c;&#x52a0;&#x8f09;&#x5f88;&#x5feb;&#xff0c;&#x800c;&#x4e14;&#x5f88;&#x591a;&#x5716;&#x7247;&#x90fd;&#x5171;&#x7528;&#x9019;&#x500b;preview.png&#xff0c;&#x52a0;&#x8f09;&#x4e00;&#x6b21;&#x5373;&#x53ef;&#x3002;&#x5f85;&#x9801;&#x9762;&#x4e0b;&#x62c9;&#xff0c;&#x5716;&#x7247;&#x986f;&#x793a;&#x51fa;&#x4f86;&#x6642;&#xff0c;&#x518d;&#x53bb;&#x66ff;&#x63db;src&#x70ba",{"_index":1677,"title":{},"body":{"performance.html#懶加載":{}}}],["x8ce6;&#x503c;&#x662f;&#x5f9e;&#x53f3;&#x5411;&#x5de6;,&#x6b64;&#x6642;a&#x6307;&#x5411;&#x4e00;&#x500b;&#x65b0;&#x5c0d;&#x8c61;&#x3002",{"_index":3183,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x8ce6;&#x503c;&#x662f;&#x8868;&#x9054;&#x5f0f",{"_index":2001,"title":{},"body":{"this.html#簡易呼叫":{}}}],["x8ce6;&#x503c;&#x7684;&#x512a;&#x5148;&#x6027;&#x5f88;&#x4f4e;&#x53ea;&#x6709;3",{"_index":1192,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x8d77;&#x4e00;&#x500b;&#x670d;&#x52d9;&#x4f86;&#x9a57;&#x8b49;&#x5354;&#x5546;&#x7de9;&#x5b58;&#xff0c;&#x4ee3;&#x78bc;&#x5982;&#x4e0b;&#xff1a",{"_index":3016,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x8d77;&#x4e00;&#x500b;&#x670d;&#x52d9;&#x4f86;&#x9a57;&#x8b49;&#x5f37;&#x7de9;&#x5b58;&#x7684",{"_index":2960,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x8ddf",{"_index":1198,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x8f03;&#x5feb",{"_index":2507,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x8f09;&#x5165;&#x7de9;&#x5b58;&#x8cc7;&#x6e90;,&#x8acb;&#x6c42;&#x6c92;&#x6709;&#x88ab;&#x767c;&#x9001",{"_index":2111,"title":{},"body":{"F2E/token.html#provisional-headers-are-shown":{}}}],["x8f38;&#x5165",{"_index":3358,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x8f38;&#x5165;&#x5b57;&#x7b26;&#x4e32;&#x53ef;&#x4ee5;&#x5728;&#x524d;&#x9762;&#x6216;&#x8005;&#x5f8c;&#x9762;&#x5305;&#x542b;&#x591a;&#x9918;&#x7684;&#x7a7a;&#x683c;&#xff0c;&#x4f46;&#x662f;&#x53cd;&#x8f49;&#x5f8c;&#x7684;&#x5b57;&#x7b26;&#x4e0d;&#x80fd;&#x5305;&#x62ec;&#x3002",{"_index":3367,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x8f38;&#x5165;&#x5b8c;&#x89f8;&#x767c;&#x6587;&#x5b57;&#x4fee;&#x6539;&#x4e8b;&#x4ef6",{"_index":1716,"title":{},"body":{"performance.html#事件節流":{}}}],["x8f38;&#x51fa",{"_index":3212,"title":{},"body":{"string/split.html#split":{},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x8f38;&#x51fa;&#x7684;&#x662f",{"_index":3142,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x8f38;&#x51fa;&#x7684;&#x662f;&#x503c;(valu",{"_index":3150,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x8f38;&#x51fa;&#x7684;&#x662f;&#x5c6c",{"_index":3139,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x8f38;&#x51fa;&#x7684;&#x662f;&#x5c6c;&#x6027;&#x540d;&#x7a31;(key)&#xff0c;for&#x2026;of",{"_index":3149,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["x8f49",{"_index":1783,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x8f49;&#x6210",{"_index":552,"title":{"copy.html#轉成-JSON-再轉回來":{}},"body":{}}],["x8f49;&#x6210;&#x6578;&#x5b57;&#x5f8c;&#x518d;&#x986f;&#x793a;&#xff0c;&#x5982;&#x4e0b;&#xff1a",{"_index":1781,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x8f49;&#x6578;&#x5b57",{"_index":2050,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x8f49;&#x70ba;&#x5c0f;&#x6578",{"_index":1599,"title":{},"body":{"num.html#補數字":{}}}],["x8fd4;&#x56de",{"_index":2548,"title":{},"body":{"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{}}}],["x9009;&#x9879;&#xff0c;vue",{"_index":1507,"title":{},"body":{"core.html#屬性特徵":{}}}],["x900f;&#x904e",{"_index":1324,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{},"api/promise.html#Promise":{}}}],["x900f;&#x904e;&#x5efa;&#x69cb;&#x5f0f;&#x4f86;&#x5efa;&#x7acb;&#x7684;&#x7269;&#x4ef6;&#xff0c",{"_index":1187,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x900f;&#x904e;&#x958b;&#x767c;&#x5de5;&#x5177;network&#x53ef;&#x4ee5;&#x770b;&#x7d50;&#x679c",{"_index":1330,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["x900f;&#x904e;prototype&#x6240;&#x65b0;&#x589e;&#x7684;&#x5c6c;&#x6027",{"_index":1441,"title":{},"body":{"core.html#this":{},"core.html#new":{}}}],["x900f;&#x904e;setter&#x6539;&#x8b8a;total&#x7684;&#x503c",{"_index":1493,"title":{},"body":{"core.html#屬性特徵":{}}}],["x9010;&#x500b;&#x8b80;&#x53d6;&#x5b57;&#x7b26;&#x4e32;&#x4e2d;&#x7684;&#x6bcf;&#x500b;&#x55ae;&#x8a5e;&#xff0c;&#x4f9d;&#x6b21;&#x653e;&#x5165;&#x96d9;&#x7aef;&#x968a;&#x5217;&#x7684;&#x5c0d;&#x982d",{"_index":3370,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x9019;&#x500b",{"_index":2007,"title":{},"body":{"this.html#Callback":{}}}],["x9019;&#x500b;&#x5340;&#x57df;&#x7121;&#x6cd5;&#x547c;&#x53eb;&#x8b8a;&#x6578",{"_index":1535,"title":{},"body":{"core.html#const":{}}}],["x9019;&#x500b;&#x547d;&#x4ee4;&#xff0c",{"_index":235,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x9019;&#x500b;&#x57df;&#x4e0b;&#x7684;&#x7db2;&#x9801;&#x8b80;&#x53d6;&#xff0c;&#x9019;&#x5c31;&#x662f;&#x7b2c;&#x4e00;&#x65b9;cookie&#x3002",{"_index":2206,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x9019;&#x500b;&#x57df;&#x540d;&#x4e0b;&#x53ef;&#x67e5;&#x627",{"_index":271,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x9019;&#x500b;&#x57df;&#x8a2a;&#x554f;&#xff0c",{"_index":2213,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x9019;&#x500b;&#x589e;&#x5f37;&#x7684;&#x5c0d;&#x8c61;&#x63a1;&#x7528;&#x4e00;&#x500b;&#x73fe;&#x6709;&#x5de5;&#x5ee0;&#xff0c;&#x4e26;&#x5c07;&#x5176;&#x5305;&#x88dd;&#x4ee5;&#x5275;&#x5efa;&#x8fd4;&#x56de;&#x5e36;&#x6709",{"_index":2751,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9019;&#x500b;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x7b2c;&#x4e00;&#x500b;&#x5b57;&#x7b26;&#x662f;&#x201c;3&#x201d;&#xff0c;&#x5b83;&#x4e26;&#x4e0d;&#x662f;&#x57fa;&#x790e;&#x57fa;&#x6578;2&#x7684;&#x4e00;&#x500b;&#x6709;&#x6548;&#x6578;&#x5b57;&#x3002;&#x6240;&#x4ee5;&#x9019;&#x500b;&#x5b50;&#x5b57;&#x7b26;&#x4e32;&#x5c07;&#x88ab;&#x89e3;&#x6790;&#x70ba;&#x7a7a;&#x3002;&#x5982;&#x679c;&#x5b50;&#x5b57;&#x7b26;&#x4e32;&#x88ab;&#x89e3;&#x6790;&#x6210;&#x7a7a;&#x4e86;&#xff0c;&#x51fd;&#x6578;&#x5c07;&#x8fd4;&#x56de;&#x70ba;nan&#x3002",{"_index":2580,"title":{},"body":{"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{}}}],["x9019;&#x500b;&#x6771;&#x897f;&#x662f",{"_index":2799,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["x9019;&#x500b;&#x7269;&#x4ef6",{"_index":2042,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x9019;&#x500b;&#x914d;&#x7f6e;&#x5c31;&#x597d",{"_index":3238,"title":{},"body":{"statements/if...else.html#條件組合的問題":{}}}],["x9019;&#x500b;&#x968e;&#x6bb5;&#x6703;&#x9032;&#x5165",{"_index":2386,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x9019;&#x5169;&#x7a2e;&#x65b9;&#x6cd5;&#x90fd;&#x662f;&#x5c0d;&#x9663;&#x5217;&#x4e2d;&#x7684;&#x5143;&#x7d20;&#x9032;&#x884c;&#x8fed;&#x4ee3;&#x3002",{"_index":2497,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x9019;&#x53ea;&#x662f;javascript&#x9075;&#x5faa;iee",{"_index":1789,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x9019;&#x610f;&#x5473;&#x8457;&#x6211;&#x5011;&#x7e3d;&#x662f;&#x80fd;&#x5920;&#x5c07;&#x5c0d;&#x8c61;&#x5e8f;&#x5217;&#x5316;&#x70ba;json&#xff0c;&#x9019;&#x5c0d;&#x65bc;&#x5728;&#x6703;&#x8a71;&#x4e4b;&#x9593;&#x6301;&#x4e45;&#x5316;&#xff0c;&#x901a;&#x904e;http&#x6216;websockets&#x767c;&#x9001;&#x5b83;&#x5011;&#xff0c;&#x4e26;&#x5c07;&#x5b83;&#x5011;&#x653e;&#x5165;&#x6578;&#x64da;&#x5b58;&#x5132;&#x5f88;&#x91cd;&#x8981;&#x3002",{"_index":2747,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9019;&#x662f;&#x56e0;&#x70ba;&#x4e00;&#x822c;&#x4f86;&#x8aaa;&#xff0c;&#x6211;&#x5011;&#x4e0d;&#x9700;&#x8981;&#x9019;&#x9ebc;&#x505a;&#x3002",{"_index":2745,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9019;&#x6642;&#x5019;&#x518d;&#x4fee;&#x6539;obj2.b&#x4e5f;&#x4e0d;&#x6703;&#x5f71;&#x97ff;obj1",{"_index":550,"title":{},"body":{"copy.html#Object-assign":{}}}],["x9019;&#x6642;&#x5019;&#x6211;&#x5011;&#x6703;&#x5beb;&#x4e00;&#x4e9b;&#x7a0b;&#x5f0f;&#x4f86;&#x586b;&#x88dc;&#x67d0;&#x4e9b;&#x700f;&#x89bd;&#x5668;&#x4e0d;&#x652f;&#x63f4;&#x7684;&#x60c5;&#x6cc1;&#xff0c;&#x6211;&#x5011;&#x628a;&#x9019;&#x4e9b;&#x7a0b;&#x5f0f;&#x7a31;&#x505a",{"_index":1472,"title":{},"body":{"core.html#繼承":{}}}],["x9019;&#x6a23;&#x505a;&#x662f;&#x771f;&#x6b63;&#x7684",{"_index":554,"title":{},"body":{"copy.html#轉成-JSON-再轉回來":{}}}],["x9019;&#x6a23;&#x7684;&#x5de5;&#x5177;&#x8fd4;&#x56d",{"_index":2739,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9019;&#x6a23;&#x7684;&#x6578;&#x64da;&#x8981;&#x5c55;&#x793a;&#x6642;&#xff0c;&#x5efa;&#x8b70;&#x4f7f;&#x7528",{"_index":1779,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"cases/math.html#浮點數運算的坑":{}}}],["x9019;&#x7a2e",{"_index":246,"title":{},"body":{"RESTfulAPI.html#動詞":{},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x9019;&#x7a2e;&#x6df1;&#x5ea6;&#x5d4c;&#x5957;&#x7684;&#x7e2e;&#x9032;&#x6703;&#x4f7f;&#x7570;&#x6b65;&#x5de5;&#x5ee0;&#x96e3;&#x4ee5;&#x95b1;&#x8b80;&#x548c;&#x6e2c;&#x8a66;&#x3002",{"_index":2736,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9019;&#x88e1;&#x50b3;&#x904e;&#x53bb;&#x7684",{"_index":333,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x9019;&#x88e1;&#x7528;slice&#x548c;substr&#x5747;&#x53ef",{"_index":1601,"title":{},"body":{"num.html#補數字":{}}}],["x901a;&#x904e;&#x4e8b;&#x4ef6;&#x5192;&#x6ce1",{"_index":582,"title":{},"body":{"event.html#代理":{}}}],["x901a;&#x904e;&#x6bcf;&#x500b;&#x5143;&#x7d20;&#x7684;&#x56de;&#x8abf;&#x51fd;&#x6578;&#x5c07;&#x5176;&#x6620;&#x5c04;&#x5230;&#x65b0;&#x7684;&#x5143;&#x7d20;&#x4e0a;&#xff0c;&#x6700;&#x7d42;&#x8fd4;&#x56de;&#x4e00;&#x500b;&#x65b0;&#x7684;&#x9663;&#x5217;&#x3002",{"_index":2498,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x9032;&#x4f4d",{"_index":2065,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x7684;1",{"_index":2055,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x9032;&#x4f4d;&#x7cfb;&#x7d71;&#x7684;2",{"_index":2060,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x9032;&#x5165;&#x57f7;&#x884c;&#x5806;&#x758a",{"_index":1392,"title":{},"body":{"core.html#this":{}}}],["x9032;&#x5230;&#x4e0b;&#x4e00;&#x4f4d",{"_index":2057,"title":{},"body":{"this.html#bind-apply-call":{}}}],["x9032;&#x884c;&#x540c;&#x503c;&#x6bd4;&#x8f03;&#x3002;&#x4ed6;&#x6709;&#x8457;&#x81ea;&#x5df1;&#x7684;&#x7279;&#x6b8a;&#x7528;&#x9014;&#xff0c;&#x4e0d;&#x61c9;&#x8aaa;&#x4ed6;&#x66f4;&#x5bec;&#x9b06;&#x6216;&#x66f4;&#x56b4;&#x683c;&#x65bc;&#x5176;&#x4ed6;&#x7b49;&#x65bc;&#x64cd;&#x4f5c;&#x7b26",{"_index":1891,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x9032;&#x968a",{"_index":3331,"title":{},"body":{"string/queue.html#數據結構：隊列（Queue）":{}}}],["x9032;&#x968e;&#x6982;&#x5ff5",{"_index":1417,"title":{},"body":{"core.html#this":{}}}],["x9047;&#x5230;&#x4ee5;&#x4e0a;&#x7684;&#x6a19;&#x9ede;&#x7b26;&#x865f",{"_index":1165,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x904b;&#x7b97;&#x5b50",{"_index":1190,"title":{"core.html#運算子":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x904b;&#x7b97;&#x5b50;&#x512a;&#x5148;&#x5e8f",{"_index":1191,"title":{"operators/precedence.html#運算子優先序":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{}}}],["x904b;&#x7b97;&#x5f0f;&#x8207;&#x904b;&#x7b97;&#x5b50",{"_index":1140,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{}}}],["x904b;&#x7b97;&#x7b26",{"_index":2314,"title":{},"body":{"array/array_insert.html#把數據插入陣列尾部":{},"array/array_insert.html#把數據插入陣列頭部":{},"array/array_insert.html#拼接兩個陣列":{}}}],["x904b;&#x7b97;&#x7b26;&#x6bd4",{"_index":3176,"title":{"operators/precedence.html#運算符比-運算符高":{}},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x904b;&#x7b97;&#x7b26;&#x9ad8",{"_index":3177,"title":{"operators/precedence.html#運算符比-運算符高":{}},"body":{}}],["x904b;&#x7b97;&#x7b26;&#x9ad8;,&#x5148;&#x8a08;&#x7b97",{"_index":3179,"title":{},"body":{"operators/precedence.html#運算符比-運算符高":{}}}],["x904b;&#x884c;&#x7684",{"_index":2506,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x904d;&#x6b77;&#x6240;&#x6709;&#x5143;&#x7d20",{"_index":2471,"title":{},"body":{"array/array_methods.html#forEach":{}}}],["x904e;&#x4e86",{"_index":2976,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x904e;&#x6ffe;&#x7b26;&#x5408;&#x689d;&#x4ef6;&#x7684;&#x5143;&#x7d20;&#xff0c;&#x751f;&#x6210;&#x65b0;&#x9663;&#x5217",{"_index":2475,"title":{},"body":{"array/array_methods.html#filter":{}}}],["x9078;&#x64c7;&#x6027",{"_index":2013,"title":{},"body":{"this.html#Callback":{}}}],["x907f;&#x514d;&#x591a;&#x7d1a",{"_index":243,"title":{},"body":{"RESTfulAPI.html#動詞":{}}}],["x9084;&#x80fd;&#x4e0d;&#x88ab;&#x8ce6;&#x503c",{"_index":1525,"title":{},"body":{"core.html#const":{}}}],["x908f;&#x8f2f;&#x904b;&#x7b97;&#x5b50;&#x53ca;&#x51fd;&#x5f0f;&#x9810;&#x8a2d;&#x503c",{"_index":1228,"title":{"core.html#邏輯運算子及函式預設值":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{}}}],["x90fd;&#x4e0d;&#x6703;&#x512a;&#x5148;&#x57f7;&#x884c",{"_index":1129,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x90fd;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x93c8;&#x63a5;&#x7684;&#x65b9;&#x5f0f;&#x4e0d;&#x65b7;&#x7684;&#x9032;&#x884c;&#x4e0b;&#x4e00;&#x500b;&#x4efb;&#x52d9",{"_index":2378,"title":{},"body":{"api/promise.html#鏈接":{}}}],["x90fd;&#x5728",{"_index":270,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["x90fd;&#x662f;&#x51fd;&#x5f0f;&#x8868;&#x9054;&#x5f0f",{"_index":1342,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{}}}],["x90fd;&#x662f;&#x7121;&#x9650;&#x5faa;&#x74b0;&#x7684;&#x4e8c;&#x9032;&#x5236;&#x4e86;&#xff0c;&#x6240;&#x4ee5;&#x5728;&#x5c0f;&#x6578;&#x4f4d;&#x672b;&#x5c3e;&#x8655;&#x9700;&#x8981;&#x5224;&#x65b7;&#x662f;&#x5426;&#x9032;&#x4f4d;&#xff08;&#x5c31;&#x548c;&#x5341;&#x9032;&#x5236;&#x7684;&#x56db;&#x6368;&#x4e94;&#x5165;&#x4e00;&#x6a23;&#xff09;&#x3002",{"_index":1800,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x90fd;&#x6703;&#x662f",{"_index":1186,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{}}}],["x932f;&#x8aa4",{"_index":1136,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x932f;&#x8aa4;&#xff0c;&#x53ea;&#x662f",{"_index":1134,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{}}}],["x9375;&#x76e4;&#x4e8b;&#x4ef6",{"_index":1713,"title":{},"body":{"performance.html#事件節流":{}}}],["x93c8;&#x63a5",{"_index":2375,"title":{"api/promise.html#鏈接":{}},"body":{}}],["x9589;&#x5305",{"_index":1381,"title":{"core.html#閉包-Closure":{}},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["x958b;&#x555f;&#x5354;&#x5546;&#x7de9;&#x5b58",{"_index":3017,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x958b;&#x59cb",{"_index":1159,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x958b;&#x982d;&#x7684;&#x4e00;&#x4e32;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x8aaa;&#x660e;&#x6b64;&#x6642;&#x5354;&#x5546;&#x7de9;&#x5b58;&#x7684;&#x6821;&#x9a57;&#x662f;&#x5f31;&#x6821;&#x9a57;&#x7684;&#xff0c;&#x53ea;&#x6709;&#x670d;&#x52d9;&#x5668;&#x4e0a;&#x7684;&#x6587;&#x4ef6;&#x5dee;&#x7570;&#xff08;&#x6839;&#x64da",{"_index":3003,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x958b;&#x982d;&#x7684;&#x5c6c;&#x6027;&#x503c;&#xff1f",{"_index":1684,"title":{},"body":{"performance.html#懶加載":{}}}],["x958b;&#x982d;&#x7684;&#x5c6c;&#x6027;&#x700f;&#x89bd;&#x5668;&#x6e32;&#x67d3;&#x7684;&#x6642;&#x5019;&#x6703;&#x5ffd;&#x7565;&#x6389;&#xff0c;&#x63d0;&#x9ad8;&#x6e32;&#x67d3;&#x6027;&#x80fd;&#x3002",{"_index":1688,"title":{},"body":{"performance.html#懶加載":{}}}],["x958b;&#x982d;&#xff0c;&#x56e0;&#x70ba",{"_index":1687,"title":{},"body":{"performance.html#懶加載":{}}}],["x95dc;&#x4fc2;&#x662f",{"_index":2015,"title":{},"body":{"this.html#Callback":{}}}],["x95dc;&#x4fc2;&#x800c;&#x4e0d;&#x662f",{"_index":2719,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x95dc;&#x6ce8;&#x5728;&#x54ea;&#x500b;&#x7269;&#x4ef6;&#x4e0b;&#x547c;&#x53eb",{"_index":1397,"title":{},"body":{"core.html#this":{}}}],["x95dc;&#x9375;&#x5b57;&#x8a2d;&#x70ba;&#x7d66;&#x5b9a;&#x7684;&#x53c3;&#x6578;&#xff0c;&#x4e26;&#x5728;&#x547c;&#x53eb;&#x6642;&#xff0c;&#x5e36;&#x6709;&#x63d0;&#x4f9b;&#x4e4b;&#x524d;&#xff0c;&#x7d66;&#x5b9a;&#x9806;&#x5e8f;&#x7684;&#x53c3;&#x6578;&#x3002",{"_index":2795,"title":{},"body":{"global/function.html#call、apply、bind":{}}}],["x9632;&#x6b62;&#x64f4;&#x5145",{"_index":1482,"title":{},"body":{"core.html#屬性特徵":{}}}],["x9650;&#x5236;&#x4f5c;&#x7528;&#x57df",{"_index":1384,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{},"core.html#閉包-Closure":{}}}],["x9650;&#x5236;&#x8b8a;&#x6578;&#x7684;&#x4f5c;&#x7528;&#x57df",{"_index":1365,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["x9663;&#x5217",{"_index":1299,"title":{"core.html#陣列":{}},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"this.html#bind-apply-call":{},"statements/for.html#for…of與for…in的差別":{}}}],["x9663;&#x5217;&#x65b9;&#x6cd5",{"_index":2495,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x9663;&#x5217;&#x662f;&#x7269;&#x4ef6;&#x578b;&#x5225;&#x7684;&#x4e00;&#x7a2",{"_index":1300,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x9663;&#x5217;&#x7684;&#x539f;&#x578b",{"_index":1310,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x9663;&#x5217;6",{"_index":1303,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["x9664;&#x4e86;&#x7b49;&#x65bc;&#x64cd;&#x4f5c;&#x7b26;&#xff0c;&#x9084;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":1890,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["x9673;&#x8ff0;&#x5f0f",{"_index":1137,"title":{"core.html#陳述式-表達式":{}},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{}}}],["x9673;&#x8ff0;&#x5f0f;&#x8207;&#x5ba3;&#x544a;&#x5206;&#x985",{"_index":1139,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{}}}],["x968a;&#x5217",{"_index":313,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["x968e;&#x6bb5;&#x8d77;&#x4f5c;&#x7528;&#x3002",{"_index":1153,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x968e;&#x78bc",{"_index":1794,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x96b1;&#x6027;&#x7684;&#x8f49;&#x63db",{"_index":1175,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x96d6;&#x7136;&#x4e5f;&#x70ba;&#x6bcf;&#x4e00;&#x500b;&#x5143;&#x7d20;&#x6e96;&#x5099;&#x4e86;&#x56de;&#x8abf;&#x51fd;&#x6578;&#xff0c;&#x4f46;&#x537b;&#x4e0d;&#x8fd4;&#x56de;&#x65b0;&#x7684;&#x9663;&#x5217;&#x3002",{"_index":2499,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["x96d6;&#x7136;obj1&#x8ddf;obj2&#x662f;&#x4e0d;&#x540c;&#x7269;&#x4ef6",{"_index":539,"title":{},"body":{"copy.html#淺拷貝-Shallow-Copy":{},"copy.html#深拷貝-Deep-Copy":{}}}],["x96d9;&#x7aef;&#x968a;&#x5217;&#xff08;deque&#xff09",{"_index":3355,"title":{"string/queue.html#雙端隊列（Deque）":{}},"body":{"string/queue.html#時間複雜度":{}}}],["x96d9;&#x7cbe;&#x5ea6;&#x3002;&#x516d;&#x5341;&#x56db;&#x4f4d;&#x4e2d;&#x7b26;&#x865f;&#x4f4d;&#x4f54;&#x4e00;&#x4f4d;&#xff0c;&#x6574;&#x6578;&#x4f4d;&#x4f54;&#x5341;&#x4e00;&#x4f4d;&#xff0c;&#x5176;&#x9918;&#x4e94;&#x5341;&#x4e8c;&#x4f4d;&#x90fd;&#x70ba;&#x5c0f;&#x6578;&#x4f4d;&#x3002",{"_index":1796,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["x9700;&#x6ce8;&#x610f;&#x57f7;&#x884c;&#x7d50;&#x679c",{"_index":1164,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{}}}],["x975c;&#x614b;&#x4f5c;&#x7528;&#x57df",{"_index":1086,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{}}}],["x975c;&#x614b;&#x8cc7;&#x6e90;&#x7684;&#x58d3;&#x7e2e;&#x5408;&#x4f75;&#xff08;j",{"_index":1654,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x975c;&#x614b;&#x8cc7;&#x6e90;&#x7de9;&#x5b58;&#xff08;&#x8cc7;&#x6e90;&#x540d;&#x7a31;&#x52a0",{"_index":1657,"title":{},"body":{"performance.html#優化原則和方向":{}}}],["x975e;&#x540c;&#x6b65;&#x57f7;&#x884c;&#x5b8c;&#x7562;&#xff08;&#x7121;&#x8ad6;&#x662f;&#x5426;&#x6b63;&#x78ba;&#x5b8c;&#x6210;&#xff09",{"_index":2357,"title":{},"body":{"api/promise.html#Promise":{}}}],["x975e;&#x540c;&#x6b65;&#x884c;&#x70ba;&#x5148;&#x79fb;&#x81f3;&#x4e8b;&#x4ef6;&#x4f47;&#x5217",{"_index":1125,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{}}}],["x975e;&#x7acb;&#x523b;&#x57f7;&#x884c",{"_index":1414,"title":{},"body":{"core.html#this":{}}}],["x97ff;&#x61c9;&#x982d;&#x4e2d;&#xff0c;&#x7b2c;&#x4e8c;&#x6b21;&#x767c;&#x8d77;&#x8acb;&#x6c42;&#x7684;&#x6642;&#x5019;&#xff0c;&#x8acb;&#x6c42;&#x982d;&#x6703;&#x5e36;&#x4e0a;&#x4e0a;&#x4e00;&#x6b21;&#x97ff;&#x61c9;&#x982d;&#x4e2d;&#x7684",{"_index":3010,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x9801;&#x9762;&#x7684;&#x5168;&#x90e8;&#x8cc7;&#x6e90;&#x52a0;&#x8f09;&#x5b8c;&#x624d;&#x6703;&#x57f7;&#x884c;&#xff0c;&#x5305;&#x62ec;&#x5716;&#x7247;&#x3001;&#x8996;&#x983b;&#x7b49",{"_index":1707,"title":{},"body":{"performance.html#儘早執行操作-DOMContentLoaded":{}}}],["x9806;&#x5e8f;&#x57f7;&#x884c;&#x53c3;&#x6578;&#x6240;&#x4ee5;&#x662f;1",{"_index":1416,"title":{},"body":{"core.html#this":{}}}],["x9806;&#x5e8f;&#x57f7;&#x884c;&#x53c3;&#x6578;&#x6240;&#x4ee5;&#x662f;6",{"_index":1415,"title":{},"body":{"core.html#this":{}}}],["x9810;&#x8a2d;&#x503c;&#x70ba",{"_index":1229,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x9810;&#x8a2d;&#x7684;session&#x5be6;&#x73fe;&#x65b9;&#x5f0f;&#x662f;&#x7531;cookie&#x4f86;&#x5be6;&#x4f5c;&#x7684;(&#x5229;&#x7528;&#x52a0;&#x5bc6;&#x8207;&#x8a2d;&#x5b9a;&#x904e;&#x671f;&#x6642;&#x9593;)&#x3002",{"_index":2260,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["x982d;&#x5c6c;&#x6027;&#x672a;&#x66f4;&#x65b0;&#xff0c;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#x700f;&#x89bd;&#x5668;&#x76f4;&#x63a5;&#x4f7f;&#x7528;&#x4e86;&#x5f37;&#x7de9;&#x5b58;&#xff0c;&#x5be6;&#x969b;&#x6c92;&#x6709;&#x767c;&#x9001;&#x8acb;&#x6c42;&#x3002",{"_index":2975,"title":{},"body":{"http/caching.html#強緩存":{}}}],["x985e;&#x9663;&#x5217;&#x4e26;&#x6c92;&#x6709;&#x7d55;&#x5927;&#x591a;&#x6578;&#x9663;&#x5217;&#x53ef;&#x4f7f;&#x7528;&#x7684;&#x65b9;&#x6cd5",{"_index":1380,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{},"core.html#參數":{}}}],["x986f;&#x6027;&#x7684;&#x8f49;&#x63db",{"_index":1174,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{}}}],["x9996;&#x5148;&#x53bb;&#x9664;&#x5b57;&#x7b26;&#x4e32;&#x5de6;&#x53f3;&#x7a7a;&#x683c",{"_index":3369,"title":{},"body":{"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{}}}],["x9a57;&#x8b49;&#x6587;&#x4ef6;&#x662f;&#x5426;&#x4fee;&#x6539;&#x3002",{"_index":3024,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["x9ad8;&#x7d1a;&#x5de5;&#x5ee0",{"_index":2748,"title":{},"body":{"function/factory​_factory.html#組合的工廠函數":{}}}],["x9ed1;&#x8272",{"_index":1207,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{}}}],["x9ede",{"_index":1241,"title":{},"body":{"core.html#JavaScript-直譯器轉換過程":{},"core.html#提升（Hoisting）":{},"core.html#同步-非同步":{},"core.html#LHS":{},"core.html#陳述式-表達式":{},"core.html#立即函式":{},"core.html#ASI-自動分號插入":{},"core.html#動態型別":{},"core.html#原始型別及物件型別":{},"core.html#運算子":{},"core.html#嚴格相等-寬鬆相等":{},"core.html#Truthy":{},"core.html#邏輯運算子及函式預設值":{}}}],["x9ede;&#x64ca;&#x4e8b;&#x4ef6",{"_index":581,"title":{},"body":{"event.html#代理":{}}}],["x_",{"_index":2636,"title":{},"body":{"cases/replace.html":{}}}],["xa0",{"_index":1308,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{}}}],["xd7",{"_index":1806,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["xff08;&#x82f1;&#x6587;&#xff1a;immedi",{"_index":1355,"title":{},"body":{"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{},"core.html#function":{},"core.html#立即函式-IIFE":{}}}],["xff09",{"_index":1668,"title":{},"body":{"performance.html#優化原則和方向":{},"api/promise.html#Promise":{}}}],["xff0c",{"_index":3141,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["xff0c;&#x4e0d;&#x50c5;&#x53ef;&#x4ee5;&#x8a18;&#x9304;&#x4f60;&#x7684;&#x9ede;&#x9910;&#x865f;&#x78bc;&#xff0c;&#x9084;&#x53ef;&#x4ee5;&#x8a18;&#x61b6;&#x4f60;&#x7684;&#x9910;&#x9ede;&#x7d30;&#x7bc0;&#xff0c;&#x6d88;&#x8cbb;&#x8a18;&#x9304;&#x548c;&#x9ede;&#x9910;&#x559c;&#x597d;&#x2026;&#x7b49;&#x3002;&#x800c;&#x9019;&#x5c31;&#x89e3;&#x6c7a;&#x865f;&#x78bc;&#x724c;&#x907a;&#x5931;&#x9818;&#x4e0d;&#x5230;&#x9910;&#x7684;&#x554f;&#x984c;&#xff0c;&#x4f46;&#x662f;&#x4ed6;&#x4e0d;&#x662f;&#x8a18;&#x61b6;&#x4f60;&#x5e25;&#x6c23;&#x5f97;&#x7a7f;&#x642d;&#x6216;&#x9577;&#x50cf;&#xff0c;&#x800c;&#x662f;&#x9760;&#x8457;&#x6240;&#x8b02;&#x7684;sess",{"_index":2235,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["xff0c;&#x4e0d;&#x7ba1;&#x662f;&#x8ab0;&#x547c;&#x53eb;&#x4ed6;&#xff0c;&#x6216;&#x662f;&#x88ab;&#x5982;&#x4f55",{"_index":2813,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["xff0c;&#x4e14;&#x8fd4;&#x56de;&#x7684;&#x65b0;&#x9663;&#x5217;&#x53ef;&#x4ee5;&#x8b93;&#x4f60;&#x7e7c;&#x7e8c;&#x4f7f;&#x7528",{"_index":2508,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["xff0c;&#x4e26;&#x52a0;&#x8f09;&#x700f;&#x89bd;&#x5668;&#x7de9;&#x5b58;&#x3002",{"_index":3014,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["xff0c;&#x4ed6;&#x53ef;&#x4ee5;&#x8b93;&#x539f;&#x59cb;&#x9663;&#x5217;&#x7684;&#x6bcf;&#x4e00;&#x500b;&#x503c;&#x90fd;&#x6620;&#x5c04;&#x5230;&#x65b0;&#x7684;&#x9663;&#x5217;&#x4e0a;&#x3002",{"_index":2501,"title":{},"body":{"array/array_methods.html#reduce":{},"array/array_methods.html#examples":{}}}],["xff0c;&#x4ed6;&#x6c38;&#x9060;&#x90fd;&#x662f;&#x62ff;&#x5230;&#x539f;&#x5148;&#x4f5c;&#x7528;&#x57df;&#x7684",{"_index":2814,"title":{},"body":{"global/function.html#cab-call-apply-vs-bind":{}}}],["xff0c;&#x4ee3;&#x8868;&#x7684;&#x662f",{"_index":2994,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["xff0c;&#x4f46;&#x4f3c;&#x4e4e;&#x5f88;&#x591a;&#x4eba;&#x90fd;&#x6709;&#x4e00;&#x7a2e;&#x5f77;&#x5f7f;&#x700f;&#x89bd;&#x5668;&#x95dc;&#x6389;session&#x4e5f;&#x6703;&#x6d88;&#x5931;&#x7684;&#x932f;&#x89ba;&#xff0c;&#x4f46;&#x672c;&#x8cea;&#x4e0a;&#x4e26;&#x975e;&#x5982;&#x6b64;&#xff0c;&#x5c31;&#x50cf;&#x6703;&#x54e1;&#x5361;&#xff0c;&#x9664;&#x975e;&#x4f60;&#x4e3b;&#x52d5;&#x63d0;&#x51fa;&#x92b7;&#x5361;&#xff0c;&#x5426;&#x5247;&#x5e97;&#x5bb6;&#x4e0d;&#x6703;&#x522a;&#x9664;&#x9867;&#x5ba2;&#x8cc7;&#x6599;&#xff0c;&#x9019;&#x4ef6;&#x4e8b;&#x60c5;&#x5c0d;session&#x4f86;&#x8aaa;&#x4e5f;&#x5982;&#x51fa;&#x4e00;&#x8f4d;&#xff0c;&#x9664;&#x975e;&#x901a;&#x77e5;server&#x522a;&#x9664;session&#xff0c;&#x5426;&#x5247;server&#x7aef;&#x6703;&#x4e00;&#x76f4;&#x4fdd;&#x7559;&#x4f86;&#x4fdd;&#x6301;&#x6703;&#x8a71;&#x66a2;&#x901a;&#xff0c;&#x4f46;&#x700f;&#x89bd;&#x5668;&#x5f9e;&#x4f86;&#x4e0d;&#x6703;&#x4e3b;&#x52d5;&#x5728;&#x95dc;&#x9589;&#x524d;&#x901a;&#x77e5;&#x670d;&#x52d9;&#x5668;&#x8981;&#x95dc;&#x9589",{"_index":2250,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["xff0c;&#x547c;&#x53eb;&#x662f;&#x5728;&#x7269;&#x4ef6;&#x4e0b;&#x8abf;&#x7528;&#xff0c;&#x90a3;&#x9ebc",{"_index":1988,"title":{},"body":{"this.html#物件的方法調用-As-an-object-method":{}}}],["xff0c;&#x5728",{"_index":2936,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff0c;&#x5728;&#x700f;&#x89bd;&#x5668;&#x767c;&#x8d77;&#x8acb;&#x6c42;&#x6642;&#xff0c;&#x6703;&#x6839;&#x64da;&#x7cfb;&#x7d71;&#x6642;&#x9593;&#x548c",{"_index":2944,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff0c;&#x5982;&#x679c;&#x4eca;&#x5929;&#x907a;&#x5931;&#x6216;&#x662f;&#x88ab;&#x5225;&#x4eba;&#x5e79;&#x8d70;&#xff0c;&#x90a3;&#x4f60;&#x7684;&#x9910;&#x9ede;&#x5c31;&#x6703;&#x88ab;&#x5176;&#x4ed6;&#x4eba;&#x7d66;&#x9818;&#x8d70;&#xff0c;&#x66f4;&#x5225;&#x63d0;&#x95dc;&#x9589;&#x700f;&#x89bd;&#x5668;&#x4e4b;&#x5f8c;cookie&#x5c31;&#x6703;&#x6709;&#x88ab;&#x6e05;&#x9664;&#x7684;&#x98a8;&#x96aa;&#x4e86;&#x3002",{"_index":2227,"title":{},"body":{"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{}}}],["xff0c;&#x5b83;&#x662f",{"_index":360,"title":{},"body":{"arrowFunction.html#Arrow-Function":{}}}],["xff0c;&#x5b83;&#x662f;&#x66f4;&#x7cbe;&#x78ba;&#x800c;&#x4e14;&#x548c",{"_index":1895,"title":{},"body":{"operators.html#What-is-the-difference-between-the-equality-operators-and":{}}}],["xff0c;&#x5c6c;&#x6027;c&#x70ba;o3.c&#x7684;&#x503c;&#xff0c;&#x6700;&#x5f8c;&#x4e00;&#x500b;&#x51fa;&#x73fe;&#x7684;&#x5c6c;&#x6027;c&#x3002",{"_index":2891,"title":{},"body":{"object/assign.html#有相同屬性時合併物件區段":{}}}],["xff0c;&#x6548;&#x679c;&#x548c",{"_index":2982,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff0c;&#x662f;&#x570b;&#x969b;&#x6a19;&#x6e96;&#x5316;&#x7d44;&#x7e54;&#x7684;&#x65e5;&#x671f;&#x548c;&#x6642;&#x9593;&#x7684;&#x8868;&#x793a;&#x65b9;&#x6cd5",{"_index":2880,"title":{},"body":{"global/date.html#Date-prototype-toISOString":{}}}],["xff0c;&#x7b2c;&#x4e00;&#x6b21;&#x8acb;&#x6c42;&#x670d;&#x52d9;&#x7aef;&#x6703;&#x628a;&#x8cc7;&#x6e90;&#x7684;&#x6700;&#x5f8c;&#x4fee;&#x6539;&#x6642;&#x9593;&#x653e;&#x5230",{"_index":3009,"title":{},"body":{"http/caching.html#協商緩存":{}}}],["xff0c;&#x7b2c;&#x4e8c;&#x500b;for&#x8ff4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96dc;&#x5ea6;&#x70ba;o(n2)&#xff0c",{"_index":3345,"title":{},"body":{"string/queue.html#時間複雜度":{}}}],["xff0c;&#x7de9;&#x5b58;&#x5728",{"_index":1692,"title":{},"body":{"performance.html#DOM-查詢做緩存":{}}}],["xff0c;&#x800c;&#x975e;&#x4e00;&#x8a00;&#x4e0d;&#x5408;&#x5c31",{"_index":2804,"title":{},"body":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}}}],["xff0c;&#x8017;&#x8cbb;&#x6027;&#x80fd",{"_index":1690,"title":{},"body":{"performance.html#DOM-查詢做緩存":{}}}],["xff0c;&#x8868;&#x793a;&#x53c3;&#x8003;&#x53e6;&#x4e00;&#x500b",{"_index":258,"title":{},"body":{"RESTfulAPI.html#狀態碼":{}}}],["xff0c;&#x9019;&#x6a23;&#x5728;&#x904b;&#x884c;&#x5230;console.log(j)&#x7684;&#x6642;&#x5019;&#x986f;&#x793a;&#x7684;&#x5c31;&#x662f;&#x6bcf;&#x6b21;&#x5faa;&#x74b0;&#x6642;&#x7684;i&#x503c",{"_index":325,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["xff0c;&#x904e;&#x671f;&#x6642;&#x9593;&#x70ba",{"_index":2972,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff1a;&#x4e0d;&#x4f7f;&#x7528;&#x5f37;&#x7de9;&#x5b58;&#xff0c;&#x9700;&#x8981;&#x8207;&#x670d;&#x52d9;&#x5668;&#x9a57;&#x8b49;&#x7de9;&#x5b58;&#x662f;&#x5426;&#x65b0;&#x9ba",{"_index":2951,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff1a;&#x4e8b;&#x4ef6;&#x5df2;&#x7d93;&#x57f7;&#x884c;&#x5b8c;&#x7562;&#x4e14;&#x6210;&#x529f;&#x64cd;&#x4f5c;&#xff0c;&#x56de;&#x50b3",{"_index":2360,"title":{},"body":{"api/promise.html#Promise":{}}}],["xff1a;&#x4e8b;&#x4ef6;&#x5df2;&#x7d93;&#x57f7;&#x884c;&#x5b8c;&#x7562;&#x4f46;&#x64cd;&#x4f5c;&#x5931;&#x6557;&#xff0c;&#x56de;&#x50b3",{"_index":2362,"title":{},"body":{"api/promise.html#Promise":{}}}],["xff1a;&#x4e8b;&#x4ef6;&#x5df2;&#x7d93;&#x904b;&#x884c;&#x4e2d;&#xff0c;&#x5c1a;&#x672a;&#x53d6;&#x5f97;&#x7d50;&#x679c",{"_index":2359,"title":{},"body":{"api/promise.html#Promise":{}}}],["xff1a;&#x7981;&#x6b62;&#x4f7f;&#x7528;&#x7de9;&#x5b58;&#xff08;&#x5305;&#x62ec;&#x5354;&#x5546;&#x7de9;&#x5b58;&#xff09;&#xff0c;&#x6bcf;&#x6b21;&#x90fd;&#x5411;&#x670d;&#x52d9;&#x5668;&#x8acb;&#x6c42;&#x6700;&#x65b0;&#x7684;&#x8cc7;&#x6e90",{"_index":2952,"title":{},"body":{"http/caching.html#強緩存":{}}}],["xff1a;&#x8072;&#x660e;&#x5373;&#x57f7;&#x884c;&#x7684;&#x51fd;&#x6578;&#x8868;&#x9054;&#x5f0f;&#xff09;&#x52a0;&#x9589;&#x5305",{"_index":323,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["xff1b",{"_index":319,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["xff1b;&#x4e5f;&#x5c31;&#x662f;&#x8aaa;&#x6240;&#x6709;&#x50b3;&#x905e;&#x7d66;settimeout&#x7684;&#x56de;&#x8abf;&#x65b9;&#x6cd5;&#x90fd;&#x6703;&#x5728",{"_index":317,"title":{},"body":{"asynchronous.html#setTimeout":{}}}],["xff1b;&#x5728;&#x8fed;&#x4ee3",{"_index":3138,"title":{},"body":{"statements/for.html#for…of與for…in的差別":{}}}],["xff1f",{"_index":2797,"title":{"global/function.html#為什麼我們需要-apply-bind-call-？":{}},"body":{}}],["xffe3;&#xffe3;&#xffe3;&#xffe3",{"_index":1807,"title":{},"body":{"math.html#Math":{},"math.html#浮點數運算的坑":{},"math.html#科學符號處理":{},"math.html#why-0-1-0-2-0-3":{},"cases/math.html#浮點數運算的坑":{},"cases/math.html#科學符號處理":{},"cases/math.html#why-0-1-0-2-0-3":{}}}],["xhr",{"_index":13,"title":{},"body":{"ajax.html":{}}}],["xhr.onreadystatechang",{"_index":20,"title":{},"body":{"ajax.html":{}}}],["xhr.open",{"_index":17,"title":{},"body":{"ajax.html":{}}}],["xhr.readyst",{"_index":22,"title":{},"body":{"ajax.html":{}}}],["xhr.send",{"_index":26,"title":{},"body":{"ajax.html":{}}}],["xhr.statu",{"_index":23,"title":{},"body":{"ajax.html":{}}}],["xmlhttprequest",{"_index":16,"title":{},"body":{"ajax.html":{},"core.html":{},"core.html#物件記憶體空間":{},"core.html#純值無法新增屬性":{},"core.html#深淺拷貝":{},"core.html#陣列":{},"core.html#JSON":{}}}],["xmlhttprequest.readyst",{"_index":28,"title":{},"body":{"ajax.html":{}}}],["xmlhttprequest請求，從而克服了ajax",{"_index":93,"title":{},"body":{"ajax.html":{}}}],["xw50eztmfnqg0wuxkeiaz",{"_index":1979,"title":{},"body":{"this.html":{},"this.html#bind-apply-call":{}}}],["xyz",{"_index":161,"title":{},"body":{"RegExp.html":{}}}],["y",{"_index":398,"title":{},"body":{"closures.html":{},"math.html":{},"math.html#Math":{},"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{},"object/create.html":{}}}],["youreasycard",{"_index":1934,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["youreasycard2",{"_index":1935,"title":{},"body":{"this.html":{},"this.html#Closure":{}}}],["yyyi",{"_index":967,"title":{},"body":{"core.html":{},"core.html#this":{},"core.html#new":{},"global/date.html":{},"global/date.html#Date-prototype-toISOString":{}}}],["z",{"_index":1877,"title":{},"body":{"operators.html":{},"operators.html#Adding-Strings-and-Numbers":{}}}],["z0",{"_index":157,"title":{},"body":{"RegExp.html":{}}}],["z\\d$@$!%*?&amp;]{8",{"_index":137,"title":{},"body":{"RegExp.html":{}}}],["z\\d$@$!%*?&amp;]{8,10",{"_index":138,"title":{},"body":{"RegExp.html":{}}}],["z\\d]8",{"_index":144,"title":{},"body":{"RegExp.html":{}}}],["z\\d]{8",{"_index":134,"title":{},"body":{"RegExp.html":{}}}],["z])(?=.*[a",{"_index":135,"title":{},"body":{"RegExp.html":{}}}],["z])(?=.*\\d)(?=.*[$@$!%*?&amp;])[a",{"_index":136,"title":{},"body":{"RegExp.html":{}}}],["z])(?=.*\\d)[a",{"_index":133,"title":{},"body":{"RegExp.html":{}}}],["za",{"_index":132,"title":{},"body":{"RegExp.html":{}}}]],"pipeline":["stemmer"]},"store":{"ajax.html":{"title":"AJAX","path":"\\javascript\\ajax.html","body":"1 2 3 4 5 6 7 8 9 10 11 var xhr = new XMLHttpRequest() xhr.open( \"GET\" , \"/api\" , false ) xhr.onreadystatechange = function ( )  // 異步執行 if (xhr.readyState == 4 )  //響應內容解析完成，可以在客戶端調用了 if (xhr.status == 200 )  //表示成功處理請求 alert(xhr.responseText)    xhr.send( null ) XMLHttpRequest XMLHttpRequest.readyState HTTP response status codes 取得用get傳遞之網址列資訊(Query String) https://jsbin.com/katifugevu/edit?js,console,output 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 //取得網址字串 var url = location.href; url = 'http://example.com/?userid=jacob.hsu' ; //再來用去尋找網址列中是否有資料傳遞(QueryString) if (url.indexOf( '?' )!= -1 )  var id = \"\" ; //在此直接將各自的參數資料切割放進ary中 var ary = url.split( '?' )[ 1 ].split( '&amp;' ); // console.log(ary); [\"userid=jacob.hsu\"] //下迴圈去搜尋每個資料參數 for (i= 0 ;i=ary.length -1 ;i++)  //如果資料名稱為id的話那就把他取出來 if (ary[i].split( '=' )[ 0 ] == 'userid' ) id = ary[i].split( '=' )[ 1 ]; console .log(id); //\"jacob.hsu\"   ref : https://ithelp.ithome.com.tw/articles/10190254 ex: http://blog.xuite.net/ahdaa/blog1/test.html?id=AD&amp;val1=02&amp;val2=22#achorAD 1 2 3 4 5 6 7 8 location.href // 完整的網址 location.protocol // 協定　　　　　　 http: location.hostname // 伺服器名稱　　　 blog.xuite.net location.host // 伺服器:埠號　　　blog.xuite.net:80 location.port // 埠號　　　　　　 80 location.pathname // host之後的部份 /ahdaa/blog1/test.html?id=AD&amp;val1=02&amp;val2=22#achorAD location.search // 含?之後所有字串　?id=AD&amp;val1=02&amp;val2=22#achorAD location.hash // 含#之後所有字串　#achorAD(通常用於錨點) 跨域 瀏覽器有同源策略，不允許ajax訪問 跨域條件: 協議、域名、端口，有一個不同就算跨域 所有的跨域請求都必須經由資源提供方允許 可以跨域的三個標籤 img src=xxx link href=xxx script src=xxx link script 可以使用CDN， CDN 也是其他域 CORS是一個W3C標準，全稱是”跨域資源共享”（Cross-origin resource sharing）。 它允許瀏覽器向跨源服務器，發出XMLHttpRequest請求，從而克服了AJAX只能同源使用的限制。 CORS需要瀏覽器和服務器同時支持。實現CORS通信的關鍵是服務器。只要服務器實現了CORS接口，就可以跨源通信。 CORS Workflow 簡單說在A網站底下若有需要去access B網站的resource 那瀏覽器會在送去B網站的http request的header 中加上這行 Origin: http://www.foo.com 表明這個request是從 www.foo.com的resource出來的 那個在B網站的web server收到了這個request後 如果他認為A網站是B網站自己的白名單 那麼B網站就可以在http response 中加入這行 Access-Control-Allow-Origin: http://www.foo.com 這麼一來就可以順利的拿到B網站的resource了 詳細的範例程式在 https://developer.mozilla.org/zh-TW/docs/HTTP/Access_control_CORS 跨域资源共享 CORS 详解 異步 https://jsbin.com/hipiruzoru/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 console .log( 1 ); setTimeout( function ( )  console .log( 'setTimeout' ) , 0 ) let promise = new Promise ( function ( resolve,reject )  console .log( 3 ) resolve( 100 ) ).then( function ( data )  console .log( 100 ) ) console .log( 2 ); // 1 3 2 100 \"setTimeout\" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 console .log( 0 ) let promise = new Promise ( ( resolve, reject )=  console .log( 1 ); setTimeout( () =  console .log( 2 ); resolve(); , 0 ) console .log( 3 ) ) promise.then( res =  console .log( 100 ) ) console .log( 4 )"},"RegExp.html":{"title":"正規表達式 regexp","path":"\\javascript\\RegExp.html","body":"正規表達式 2019年JS正则大全(常用) js正则表达式，限1-2位整数，或者至多含有两位小数 1 2 //1、只能输入数字或者小数点 仅整数,整数加小数 var reg1= /(^[0-9]1,2$)|(^[0-9]1,2[\\.]1[0-9]1,2$)/ ; password 限制密碼必須是八個字符，包括一個大寫字母，一個特殊字符和字母數字字符 至少八個字符，至少一個字母和一個數字： ^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$ 最少八個字符，至少一個大寫字母，一個小寫字母和一個數字： ^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$ 至少八個字符，至少一個大寫字母，一個小寫字母，一個數字和一個特殊字符： ^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&amp;])[A-Za-z\\d$@$!%*?&amp;]{8,} 最少八個最多十個字符，至少一個大寫字母，一個小寫字母，一個數字和一個特殊字符： ^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&amp;])[A-Za-z\\d$@$!%*?&amp;]{8,10} 1 2 3 4 export const isValidPWD = ( pwd: string ) =  const reg = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]8,/ return reg.test(pwd)  email 1 2 3 var firstRegExp = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/ ; console .log(firstRegExp.test( 'jacob.hsu.tw@gmail.com' )); //true console .log(firstRegExp.test( 'jacob.hsu.tw' )); //false 規表示式的特定字元 說明 等效的正規表示式 \\d 數字 [0-9] \\D 非數字 [^0-9] \\w 數字、字母、底線 [a-zA-Z0-9_] \\W 非 \\w [^a-zA-Z0-9_] \\s 空白字元 [ \\r\\t\\n\\f] \\S 非空白字元 [^ \\r\\t\\n\\f] [xyz] 比對中括弧內的任一個字元 /[ecm]/ 可比對 “welcome” 中的 “e” 或 “c” 或 “m” [^xyz] 比對不在中括弧內出現的任一個字元 /[^ecm]/ 可比對 “welcome” 中的 “w”、”l”、”o”，可見出其與 [xyz] 功能相反。（同時請注意 /^/ 與 [^] 之間功能的不同。） match String.prototype.match() 1 2 3 4 const pa = '賓夕法尼亞州是美國的州份之一，正式名稱為「賓夕法尼亞邦」(Commonwealth of Pennsylvania)' ; const pa_us = pa.match( /\\((.+?)\\)/g ) // [\"(Commonwealth of Pennsylvania)\"] const res = pa_us[ 0 ].replace( ')' , '' ).substring( 1 ); console .log(res) // \"Commonwealth of Pennsylvania\""},"RegExp.html#match":{"title":"match","path":"\\javascript\\RegExp.html#match","body":"String.prototype.match() 1 2 3 4 const pa = &apos;&#x8CD3;&#x5915;&#x6CD5;&#x5C3C;&#x4E9E;&#x5DDE;&#x662F;&#x7F8E;&#x570B;&#x7684;&#x5DDE;&#x4EFD;&#x4E4B;&#x4E00;&#xFF0C;&#x6B63;&#x5F0F;&#x540D;&#x7A31;&#x70BA;&#x300C;&#x8CD3;&#x5915;&#x6CD5;&#x5C3C;&#x4E9E;&#x90A6;&#x300D;(Commonwealth of Pennsylvania)&apos; ; const pa_us = pa.match( /\\((.+?)\\)/g ) // [(Commonwealth of Pennsylvania)] const res = pa_us[ 0 ].replace( &apos;)&apos; , &apos;&apos; ).substring( 1 ); console .log(res) // Commonwealth of Pennsylvania"},"RESTfulAPI.html":{"title":"RESTful API","path":"\\javascript\\RESTfulAPI.html","body":"RESTful 是目前最流行的 API 設計規範，用於 Web 數據接口的設計。 動詞 動詞通常就是五種 HTTP 方法，對應 CRUD 操作。 POST：新建（Create） GET：讀取（Read） PUT：更新（Update） PATCH：更新（Update），通常是部分更新 DELETE：刪除（Delete） 動詞 + 賓語 RESTful 的核心思想就是，客戶端發出的數據操作指令都是”動詞 + 賓語”的結構。 比如， GET /articles 這個命令， GET 是動詞， /articles 是賓語。 使用複數 URL 建議都使用複數 URL，比如 GET /articles/2 要好於 GET /article/2 。 避免多級 URL 資源需要多級分類，因此很容易寫出多級的 URL，比如獲取某個作者的某一類文章。 GET /authors/12/categories/2 這種 URL 不利於擴展，語義也不明確 更好的做法是，除了第一級，其他級別都用查詢字符串表達。 GET /authors/12?categories=2 狀態碼 1xx：相關信息 2xx：操作成功 3xx：重定向 4xx：客戶端錯誤 5xx：服務器錯誤 API 用不到301狀態碼（永久重定向）和302狀態碼（暫時重定向，307也是這個含義），因為它們可以由應用級別返回，瀏覽器會直接跳轉，API 級別可以不考慮這兩種情況。 API 用到的3xx狀態碼，主要是 303 See Other ，表示參考另一個 URL。它與302和307的含義一樣，也是”暫時重定向”，區別在於302和307用於GET請求，而303用於POST、PUT和DELETE請求。收到303以後，瀏覽器不會自動跳轉，而會讓用戶自己決定下一步怎麼辦。 下面是一個例子。 1 2 HTTP/ 1.1 303 See Other Location: /api/ orders/ 12345 HATEOAS 提供鏈接 API 的使用者未必知道，URL 是怎麼設計的。 一個解決方法就是，在回應中，給出相關鏈接，便於下一步操作。這樣的話，用戶只要記住一個 URL，就可以發現其他的 URL。這種方法叫做 HATEOAS。 例 GitHub 的 API 都在 api.github.com 這個域名下可查找 References https://blog.florimondmanca.com/restful-api-design-13-best-practices-to-make-your-users-happy http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html"},"RESTfulAPI.html#動詞":{"title":"&#x52D5;&#x8A5E;","path":"\\javascript\\RESTfulAPI.html#動詞","body":"&#x52D5;&#x8A5E;&#x901A;&#x5E38;&#x5C31;&#x662F;&#x4E94;&#x7A2E; HTTP &#x65B9;&#x6CD5;&#xFF0C;&#x5C0D;&#x61C9; CRUD &#x64CD;&#x4F5C;&#x3002; POST&#xFF1A;&#x65B0;&#x5EFA;&#xFF08;Create&#xFF09; GET&#xFF1A;&#x8B80;&#x53D6;&#xFF08;Read&#xFF09; PUT&#xFF1A;&#x66F4;&#x65B0;&#xFF08;Update&#xFF09; PATCH&#xFF1A;&#x66F4;&#x65B0;&#xFF08;Update&#xFF09;&#xFF0C;&#x901A;&#x5E38;&#x662F;&#x90E8;&#x5206;&#x66F4;&#x65B0; DELETE&#xFF1A;&#x522A;&#x9664;&#xFF08;Delete&#xFF09; &#x52D5;&#x8A5E; + &#x8CD3;&#x8A9E; RESTful &#x7684;&#x6838;&#x5FC3;&#x601D;&#x60F3;&#x5C31;&#x662F;&#xFF0C;&#x5BA2;&#x6236;&#x7AEF;&#x767C;&#x51FA;&#x7684;&#x6578;&#x64DA;&#x64CD;&#x4F5C;&#x6307;&#x4EE4;&#x90FD;&#x662F;&#x201D;&#x52D5;&#x8A5E; + &#x8CD3;&#x8A9E;&#x201D;&#x7684;&#x7D50;&#x69CB;&#x3002; &#x6BD4;&#x5982;&#xFF0C; GET /articles &#x9019;&#x500B;&#x547D;&#x4EE4;&#xFF0C; GET &#x662F;&#x52D5;&#x8A5E;&#xFF0C; /articles &#x662F;&#x8CD3;&#x8A9E;&#x3002; &#x4F7F;&#x7528;&#x8907;&#x6578; URL &#x5EFA;&#x8B70;&#x90FD;&#x4F7F;&#x7528;&#x8907;&#x6578; URL&#xFF0C;&#x6BD4;&#x5982; GET /articles/2 &#x8981;&#x597D;&#x65BC; GET /article/2 &#x3002; &#x907F;&#x514D;&#x591A;&#x7D1A; URL &#x8CC7;&#x6E90;&#x9700;&#x8981;&#x591A;&#x7D1A;&#x5206;&#x985E;&#xFF0C;&#x56E0;&#x6B64;&#x5F88;&#x5BB9;&#x6613;&#x5BEB;&#x51FA;&#x591A;&#x7D1A;&#x7684; URL&#xFF0C;&#x6BD4;&#x5982;&#x7372;&#x53D6;&#x67D0;&#x500B;&#x4F5C;&#x8005;&#x7684;&#x67D0;&#x4E00;&#x985E;&#x6587;&#x7AE0;&#x3002; GET /authors/12/categories/2 &#x9019;&#x7A2E; URL &#x4E0D;&#x5229;&#x65BC;&#x64F4;&#x5C55;&#xFF0C;&#x8A9E;&#x7FA9;&#x4E5F;&#x4E0D;&#x660E;&#x78BA; &#x66F4;&#x597D;&#x7684;&#x505A;&#x6CD5;&#x662F;&#xFF0C;&#x9664;&#x4E86;&#x7B2C;&#x4E00;&#x7D1A;&#xFF0C;&#x5176;&#x4ED6;&#x7D1A;&#x5225;&#x90FD;&#x7528;&#x67E5;&#x8A62;&#x5B57;&#x7B26;&#x4E32;&#x8868;&#x9054;&#x3002; GET /authors/12?categories=2"},"RESTfulAPI.html#狀態碼":{"title":"&#x72C0;&#x614B;&#x78BC;","path":"\\javascript\\RESTfulAPI.html#狀態碼","body":"1xx&#xFF1A;&#x76F8;&#x95DC;&#x4FE1;&#x606F; 2xx&#xFF1A;&#x64CD;&#x4F5C;&#x6210;&#x529F; 3xx&#xFF1A;&#x91CD;&#x5B9A;&#x5411; 4xx&#xFF1A;&#x5BA2;&#x6236;&#x7AEF;&#x932F;&#x8AA4; 5xx&#xFF1A;&#x670D;&#x52D9;&#x5668;&#x932F;&#x8AA4; API &#x7528;&#x4E0D;&#x5230;301&#x72C0;&#x614B;&#x78BC;&#xFF08;&#x6C38;&#x4E45;&#x91CD;&#x5B9A;&#x5411;&#xFF09;&#x548C;302&#x72C0;&#x614B;&#x78BC;&#xFF08;&#x66AB;&#x6642;&#x91CD;&#x5B9A;&#x5411;&#xFF0C;307&#x4E5F;&#x662F;&#x9019;&#x500B;&#x542B;&#x7FA9;&#xFF09;&#xFF0C;&#x56E0;&#x70BA;&#x5B83;&#x5011;&#x53EF;&#x4EE5;&#x7531;&#x61C9;&#x7528;&#x7D1A;&#x5225;&#x8FD4;&#x56DE;&#xFF0C;&#x700F;&#x89BD;&#x5668;&#x6703;&#x76F4;&#x63A5;&#x8DF3;&#x8F49;&#xFF0C;API &#x7D1A;&#x5225;&#x53EF;&#x4EE5;&#x4E0D;&#x8003;&#x616E;&#x9019;&#x5169;&#x7A2E;&#x60C5;&#x6CC1;&#x3002; API &#x7528;&#x5230;&#x7684;3xx&#x72C0;&#x614B;&#x78BC;&#xFF0C;&#x4E3B;&#x8981;&#x662F; 303 See Other &#xFF0C;&#x8868;&#x793A;&#x53C3;&#x8003;&#x53E6;&#x4E00;&#x500B; URL&#x3002;&#x5B83;&#x8207;302&#x548C;307&#x7684;&#x542B;&#x7FA9;&#x4E00;&#x6A23;&#xFF0C;&#x4E5F;&#x662F;&#x201D;&#x66AB;&#x6642;&#x91CD;&#x5B9A;&#x5411;&#x201D;&#xFF0C;&#x5340;&#x5225;&#x5728;&#x65BC;302&#x548C;307&#x7528;&#x65BC;GET&#x8ACB;&#x6C42;&#xFF0C;&#x800C;303&#x7528;&#x65BC;POST&#x3001;PUT&#x548C;DELETE&#x8ACB;&#x6C42;&#x3002;&#x6536;&#x5230;303&#x4EE5;&#x5F8C;&#xFF0C;&#x700F;&#x89BD;&#x5668;&#x4E0D;&#x6703;&#x81EA;&#x52D5;&#x8DF3;&#x8F49;&#xFF0C;&#x800C;&#x6703;&#x8B93;&#x7528;&#x6236;&#x81EA;&#x5DF1;&#x6C7A;&#x5B9A;&#x4E0B;&#x4E00;&#x6B65;&#x600E;&#x9EBC;&#x8FA6;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x4E00;&#x500B;&#x4F8B;&#x5B50;&#x3002; 1 2 HTTP/ 1.1 303 See Other Location: /api/ orders/ 12345 HATEOAS &#x63D0;&#x4F9B;&#x93C8;&#x63A5; API &#x7684;&#x4F7F;&#x7528;&#x8005;&#x672A;&#x5FC5;&#x77E5;&#x9053;&#xFF0C;URL &#x662F;&#x600E;&#x9EBC;&#x8A2D;&#x8A08;&#x7684;&#x3002; &#x4E00;&#x500B;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#xFF0C;&#x5728;&#x56DE;&#x61C9;&#x4E2D;&#xFF0C;&#x7D66;&#x51FA;&#x76F8;&#x95DC;&#x93C8;&#x63A5;&#xFF0C;&#x4FBF;&#x65BC;&#x4E0B;&#x4E00;&#x6B65;&#x64CD;&#x4F5C;&#x3002;&#x9019;&#x6A23;&#x7684;&#x8A71;&#xFF0C;&#x7528;&#x6236;&#x53EA;&#x8981;&#x8A18;&#x4F4F;&#x4E00;&#x500B; URL&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x767C;&#x73FE;&#x5176;&#x4ED6;&#x7684; URL&#x3002;&#x9019;&#x7A2E;&#x65B9;&#x6CD5;&#x53EB;&#x505A; HATEOAS&#x3002; &#x4F8B; GitHub &#x7684; API &#x90FD;&#x5728; api.github.com &#x9019;&#x500B;&#x57DF;&#x540D;&#x4E0B;&#x53EF;&#x67E5;&#x627E;"},"RESTfulAPI.html#References":{"title":"References","path":"\\javascript\\RESTfulAPI.html#References","body":"https://blog.florimondmanca.com/restful-api-design-13-best-practices-to-make-your-users-happy http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html"},"asynchronous.html":{"title":"Asynchronous","path":"\\javascript\\asynchronous.html","body":"異步 https://jsbin.com/honidujame/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 console .log( 1 ) setTimeout( () =  console .log( 2 ); , 0 ) console .log( 3 ) setTimeout( function ( )  console .log( 4 ); , 0 ) // 1 3 2 4 https://jsbin.com/hipiruzoru/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 console .log( 1 ); setTimeout( function ( )  console .log( 'setTimeout' ) , 0 ) let promise = new Promise ( function ( resolve,reject )  console .log( 3 ) resolve( 100 ) ).then( function ( data )  console .log( 100 ) ) console .log( 2 ); // 1 3 2 100 \"setTimeout\" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 console .log( 0 ) let promise = new Promise ( ( resolve, reject )=  console .log( 1 ); setTimeout( () =  console .log( 2 ); resolve(); , 0 ) console .log( 3 ) ) promise.then( res =  console .log( 100 ) ) console .log( 4 ) // 0 1 3 4 2 100 setTimeout setTimeout() 函數是異步的 1 2 3 4 5 for ( var i = 0 ; i  5 ; i++)  setTimeout( function ( )  console .log(i); // 5,5,5,5,5 , i* 1000 );  1 2 3 4 5 6 for ( var i = 0 ; i  5 ; i++)  setTimeout( function ( )  console .log( new Date , i); , 1000 );  console .log(i); //5,- 5,5,5,5,5 因為異步函數必須等主進程運行完畢才會運行，setTimeout()內部回調運行的時候，主進程已經運行完畢了，此時i=5，所以輸出5。 循環執行過程中，幾乎同時設置了 5 個定時器，一般情況下，這些定時器都會在 1 秒之後觸發，而循環完的輸出是立即執行的 即第 1 個 5 直接輸出，1 秒之後，輸出 5 個 5； 提示： setTimeout() 只執行 code 一次。如果要多次調用，請使用 setInterval() 或者讓 code 自身再次調用 setTimeout()。 setTimeout 的意思是傳遞一個函數，延遲一段時候把該函數添加到 隊列 當中，並不是立即執行； 所以說如果當前正在運行的代碼沒有運行完，即使延遲的時間已經過完， 該函數會等待到函數隊列中前面所有的函數運行完畢之後才會運行 ；也就是說所有傳遞給setTimeout的回調方法都會在 整個環境下的所有代碼運行完畢之後執行 ； 期望代碼的輸出變成：5 - 0,1,2,3,4 1 用立即執行函數 IIFE（Immediately Invoked Function Expression ：聲明即執行的函數表達式）加閉包 1 2 3 4 5 6 7 8 for ( var i = 0 ; i  5 ; i++)  ( function ( j )  //j =i setTimeout( function ( )  console .log( new Date , j); , 1000 ); )(i)  console .log(i); //5, 0,1,2,3,4 用立即執行函數表達式創造了新的函數作用域將timer函數包裹了起來，並用j捕獲了每次循環時的i ，這樣在運行到console.log(j)的時候顯示的就是每次循環時的i值 2 利用 API 文檔 1 2 3 4 5 6 for ( var i = 0 ; i  5 ; i++)  setTimeout( function ( j )  console .log( new Date , j); , 1000 , i);  console .log(i); //5, 0,1,2,3,4 3 利用 JS 中基本類型（Primitive Type）的參數傳遞是 按值傳遞（Pass by Value） 的特徵 1 2 3 4 5 6 7 8 9 var output = function ( i )  setTimeout( function ( )  console .log( new Date , i); , 1000 ); ; for ( var i = 0 ; i  5 ; i++)  output(i); // 這裡傳過去的 i 值被複製了  console .log(i); //5, 0,1,2,3,4"},"asynchronous.html#異步":{"title":"&#x7570;&#x6B65;","path":"\\javascript\\asynchronous.html#異步","body":"https://jsbin.com/honidujame/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 console .log( 1 ) setTimeout( () = { console .log( 2 ); }, 0 ) console .log( 3 ) setTimeout( function ( ) { console .log( 4 ); }, 0 ) // 1 3 2 4 https://jsbin.com/hipiruzoru/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 console .log( 1 ); setTimeout( function ( ) { console .log( &apos;setTimeout&apos; ) }, 0 ) let promise = new Promise ( function ( resolve,reject ) { console .log( 3 ) resolve( 100 ) }).then( function ( data ) { console .log( 100 ) }) console .log( 2 ); // 1 3 2 100 setTimeout 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 console .log( 0 ) let promise = new Promise ( ( resolve, reject )= { console .log( 1 ); setTimeout( () = { console .log( 2 ); resolve(); }, 0 ) console .log( 3 ) }) promise.then( res = { console .log( 100 ) }) console .log( 4 ) // 0 1 3 4 2 100"},"asynchronous.html#setTimeout":{"title":"setTimeout","path":"\\javascript\\asynchronous.html#setTimeout","body":"setTimeout() &#x51FD;&#x6578;&#x662F;&#x7570;&#x6B65;&#x7684; 1 2 3 4 5 for ( var i = 0 ; i  5 ; i++) { setTimeout( function ( ) { console .log(i); // 5,5,5,5,5 }, i* 1000 ); } 1 2 3 4 5 6 for ( var i = 0 ; i  5 ; i++) { setTimeout( function ( ) { console .log( new Date , i); }, 1000 ); } console .log(i); //5,- 5,5,5,5,5 &#x56E0;&#x70BA;&#x7570;&#x6B65;&#x51FD;&#x6578;&#x5FC5;&#x9808;&#x7B49;&#x4E3B;&#x9032;&#x7A0B;&#x904B;&#x884C;&#x5B8C;&#x7562;&#x624D;&#x6703;&#x904B;&#x884C;&#xFF0C;setTimeout()&#x5167;&#x90E8;&#x56DE;&#x8ABF;&#x904B;&#x884C;&#x7684;&#x6642;&#x5019;&#xFF0C;&#x4E3B;&#x9032;&#x7A0B;&#x5DF2;&#x7D93;&#x904B;&#x884C;&#x5B8C;&#x7562;&#x4E86;&#xFF0C;&#x6B64;&#x6642;i=5&#xFF0C;&#x6240;&#x4EE5;&#x8F38;&#x51FA;5&#x3002; &#x5FAA;&#x74B0;&#x57F7;&#x884C;&#x904E;&#x7A0B;&#x4E2D;&#xFF0C;&#x5E7E;&#x4E4E;&#x540C;&#x6642;&#x8A2D;&#x7F6E;&#x4E86; 5 &#x500B;&#x5B9A;&#x6642;&#x5668;&#xFF0C;&#x4E00;&#x822C;&#x60C5;&#x6CC1;&#x4E0B;&#xFF0C;&#x9019;&#x4E9B;&#x5B9A;&#x6642;&#x5668;&#x90FD;&#x6703;&#x5728; 1 &#x79D2;&#x4E4B;&#x5F8C;&#x89F8;&#x767C;&#xFF0C;&#x800C;&#x5FAA;&#x74B0;&#x5B8C;&#x7684;&#x8F38;&#x51FA;&#x662F;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x7684; &#x5373;&#x7B2C; 1 &#x500B; 5 &#x76F4;&#x63A5;&#x8F38;&#x51FA;&#xFF0C;1 &#x79D2;&#x4E4B;&#x5F8C;&#xFF0C;&#x8F38;&#x51FA; 5 &#x500B; 5&#xFF1B; &#x63D0;&#x793A;&#xFF1A; setTimeout() &#x53EA;&#x57F7;&#x884C; code &#x4E00;&#x6B21;&#x3002;&#x5982;&#x679C;&#x8981;&#x591A;&#x6B21;&#x8ABF;&#x7528;&#xFF0C;&#x8ACB;&#x4F7F;&#x7528; setInterval() &#x6216;&#x8005;&#x8B93; code &#x81EA;&#x8EAB;&#x518D;&#x6B21;&#x8ABF;&#x7528; setTimeout()&#x3002; setTimeout &#x7684;&#x610F;&#x601D;&#x662F;&#x50B3;&#x905E;&#x4E00;&#x500B;&#x51FD;&#x6578;&#xFF0C;&#x5EF6;&#x9072;&#x4E00;&#x6BB5;&#x6642;&#x5019;&#x628A;&#x8A72;&#x51FD;&#x6578;&#x6DFB;&#x52A0;&#x5230; &#x968A;&#x5217; &#x7576;&#x4E2D;&#xFF0C;&#x4E26;&#x4E0D;&#x662F;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#xFF1B; &#x6240;&#x4EE5;&#x8AAA;&#x5982;&#x679C;&#x7576;&#x524D;&#x6B63;&#x5728;&#x904B;&#x884C;&#x7684;&#x4EE3;&#x78BC;&#x6C92;&#x6709;&#x904B;&#x884C;&#x5B8C;&#xFF0C;&#x5373;&#x4F7F;&#x5EF6;&#x9072;&#x7684;&#x6642;&#x9593;&#x5DF2;&#x7D93;&#x904E;&#x5B8C;&#xFF0C; &#x8A72;&#x51FD;&#x6578;&#x6703;&#x7B49;&#x5F85;&#x5230;&#x51FD;&#x6578;&#x968A;&#x5217;&#x4E2D;&#x524D;&#x9762;&#x6240;&#x6709;&#x7684;&#x51FD;&#x6578;&#x904B;&#x884C;&#x5B8C;&#x7562;&#x4E4B;&#x5F8C;&#x624D;&#x6703;&#x904B;&#x884C; &#xFF1B;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#x6240;&#x6709;&#x50B3;&#x905E;&#x7D66;setTimeout&#x7684;&#x56DE;&#x8ABF;&#x65B9;&#x6CD5;&#x90FD;&#x6703;&#x5728; &#x6574;&#x500B;&#x74B0;&#x5883;&#x4E0B;&#x7684;&#x6240;&#x6709;&#x4EE3;&#x78BC;&#x904B;&#x884C;&#x5B8C;&#x7562;&#x4E4B;&#x5F8C;&#x57F7;&#x884C; &#xFF1B; &#x671F;&#x671B;&#x4EE3;&#x78BC;&#x7684;&#x8F38;&#x51FA;&#x8B8A;&#x6210;&#xFF1A;5 - 0,1,2,3,4 1 &#x7528;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x6578; IIFE&#xFF08;Immediately Invoked Function Expression &#xFF1A;&#x8072;&#x660E;&#x5373;&#x57F7;&#x884C;&#x7684;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#xFF09;&#x52A0;&#x9589;&#x5305; 1 2 3 4 5 6 7 8 for ( var i = 0 ; i  5 ; i++) { ( function ( j ) { //j =i setTimeout( function ( ) { console .log( new Date , j); }, 1000 ); })(i) } console .log(i); //5, 0,1,2,3,4 &#x7528;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x5275;&#x9020;&#x4E86;&#x65B0;&#x7684;&#x51FD;&#x6578;&#x4F5C;&#x7528;&#x57DF;&#x5C07;timer&#x51FD;&#x6578;&#x5305;&#x88F9;&#x4E86;&#x8D77;&#x4F86;&#xFF0C;&#x4E26;&#x7528;j&#x6355;&#x7372;&#x4E86;&#x6BCF;&#x6B21;&#x5FAA;&#x74B0;&#x6642;&#x7684;i &#xFF0C;&#x9019;&#x6A23;&#x5728;&#x904B;&#x884C;&#x5230;console.log(j)&#x7684;&#x6642;&#x5019;&#x986F;&#x793A;&#x7684;&#x5C31;&#x662F;&#x6BCF;&#x6B21;&#x5FAA;&#x74B0;&#x6642;&#x7684;i&#x503C; 2 &#x5229;&#x7528; API &#x6587;&#x6A94; 1 2 3 4 5 6 for ( var i = 0 ; i  5 ; i++) { setTimeout( function ( j ) { console .log( new Date , j); }, 1000 , i); } console .log(i); //5, 0,1,2,3,4 3 &#x5229;&#x7528; JS &#x4E2D;&#x57FA;&#x672C;&#x985E;&#x578B;&#xFF08;Primitive Type&#xFF09;&#x7684;&#x53C3;&#x6578;&#x50B3;&#x905E;&#x662F; &#x6309;&#x503C;&#x50B3;&#x905E;&#xFF08;Pass by Value&#xFF09; &#x7684;&#x7279;&#x5FB5; 1 2 3 4 5 6 7 8 9 var output = function ( i ) { setTimeout( function ( ) { console .log( new Date , i); }, 1000 ); }; for ( var i = 0 ; i  5 ; i++) { output(i); // &#x9019;&#x88E1;&#x50B3;&#x904E;&#x53BB;&#x7684; i &#x503C;&#x88AB;&#x8907;&#x88FD;&#x4E86; } console .log(i); //5, 0,1,2,3,4"},"arrowFunction.html":{"title":"箭頭函式","path":"\\javascript\\arrowFunction.html","body":"Arrow Function 什麼時候不使用箭頭函數 定義對象上的方法 1 2 3 4 5 6 7 8 9 10 const calculate =  array: [ 1 , 2 , 3 ], sum: () =  console .log( this === window ); // = true return this .array.reduce( ( result, item ) = result + item);  ; console .log( this === window ); // = true // Throws \"TypeError: Cannot read property 'reduce' of undefined\" calculate.sum(); 是因為箭頭函數按詞法 作用域將上下文綁定到 window 對象 執行 this.array 等同於 window.array ，它是 undefined 。 解決方法是使用 常規函數表達式 來定義方法。 this 是在調用時確定的，而不是由封閉的上下文決定的 1 2 3 4 5 6 7 8 9 const calculate =  array: [ 1 , 2 , 3 ], sum()  console .log( this === window ); // = false console .log( this === calculate); // = true return this .array.reduce( ( result, item ) = result + item);  ; calculate.sum(); // = 6 因为sum是常规函数，所以在調用 calculate.sum() 時 this 是 calculate 對象 。 this.array 是數組引用"},"arrowFunction.html#Arrow-Function":{"title":"Arrow Function","path":"\\javascript\\arrowFunction.html#Arrow-Function","body":"&#x4EC0;&#x9EBC;&#x6642;&#x5019;&#x4E0D;&#x4F7F;&#x7528;&#x7BAD;&#x982D;&#x51FD;&#x6578; &#x5B9A;&#x7FA9;&#x5C0D;&#x8C61;&#x4E0A;&#x7684;&#x65B9;&#x6CD5; 1 2 3 4 5 6 7 8 9 10 const calculate = { array: [ 1 , 2 , 3 ], sum: () = { console .log( this === window ); // = true return this .array.reduce( ( result, item ) = result + item); } }; console .log( this === window ); // = true // Throws TypeError: Cannot read property &apos;reduce&apos; of undefined calculate.sum(); &#x662F;&#x56E0;&#x70BA;&#x7BAD;&#x982D;&#x51FD;&#x6578;&#x6309;&#x8A5E;&#x6CD5; &#x4F5C;&#x7528;&#x57DF;&#x5C07;&#x4E0A;&#x4E0B;&#x6587;&#x7D81;&#x5B9A;&#x5230; window &#x5C0D;&#x8C61; &#x57F7;&#x884C; this.array &#x7B49;&#x540C;&#x65BC; window.array &#xFF0C;&#x5B83;&#x662F; undefined &#x3002; &#x89E3;&#x6C7A;&#x65B9;&#x6CD5;&#x662F;&#x4F7F;&#x7528; &#x5E38;&#x898F;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F; &#x4F86;&#x5B9A;&#x7FA9;&#x65B9;&#x6CD5;&#x3002; this &#x662F;&#x5728;&#x8ABF;&#x7528;&#x6642;&#x78BA;&#x5B9A;&#x7684;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x7531;&#x5C01;&#x9589;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x6C7A;&#x5B9A;&#x7684; 1 2 3 4 5 6 7 8 9 const calculate = { array: [ 1 , 2 , 3 ], sum() { console .log( this === window ); // = false console .log( this === calculate); // = true return this .array.reduce( ( result, item ) = result + item); } }; calculate.sum(); // = 6 &#x56E0;&#x4E3A;sum&#x662F;&#x5E38;&#x89C4;&#x51FD;&#x6570;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x8ABF;&#x7528; calculate.sum() &#x6642; this &#x662F; calculate &#x5C0D;&#x8C61; &#x3002; this.array &#x662F;&#x6578;&#x7D44;&#x5F15;&#x7528;"},"es6.html":{"title":"ECMAScript 6","path":"\\javascript\\es6.html","body":"ECMAScript 6 入门 Module 的加载实现 浏览器允许脚本异步加载，下面就是两种异步加载的语法。 1 2 script src= \"path/to/myModule.js\" defer/script script src= \"path/to/myModule.js\" async /script 上面代码中， script 标签打开 defer 或 async 属性，脚本就会异步加载。渲染引擎遇到这一行命令，就会开始下载外部脚本，但不会等它下载和执行 加载规则 script type=module src=./foo.js/script 1 2 3 script type= \"module\"  import './index.js' ;  /script"},"es6.html#Module-的加载实现":{"title":"Module &#x7684;&#x52A0;&#x8F7D;&#x5B9E;&#x73B0;","path":"\\javascript\\es6.html#Module-的加载实现","body":"&#x6D4F;&#x89C8;&#x5668;&#x5141;&#x8BB8;&#x811A;&#x672C;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#xFF0C;&#x4E0B;&#x9762;&#x5C31;&#x662F;&#x4E24;&#x79CD;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#x7684;&#x8BED;&#x6CD5;&#x3002; 1 2 script src= path/to/myModule.js defer/script script src= path/to/myModule.js async /script &#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C; script &#x6807;&#x7B7E;&#x6253;&#x5F00; defer &#x6216; async &#x5C5E;&#x6027;&#xFF0C;&#x811A;&#x672C;&#x5C31;&#x4F1A;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#x3002;&#x6E32;&#x67D3;&#x5F15;&#x64CE;&#x9047;&#x5230;&#x8FD9;&#x4E00;&#x884C;&#x547D;&#x4EE4;&#xFF0C;&#x5C31;&#x4F1A;&#x5F00;&#x59CB;&#x4E0B;&#x8F7D;&#x5916;&#x90E8;&#x811A;&#x672C;&#xFF0C;&#x4F46;&#x4E0D;&#x4F1A;&#x7B49;&#x5B83;&#x4E0B;&#x8F7D;&#x548C;&#x6267;&#x884C; &#x52A0;&#x8F7D;&#x89C4;&#x5219; script type=module src=./foo.js/script 1 2 3 script type= module  import &apos;./index.js&apos; ;  /script"},"closures.html":{"title":"Closures","path":"\\javascript\\closures.html","body":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures 1 2 3 4 5 6 7 8 9 var name = \"hello\" ; ( function ( )  if ( typeof name === \"undefined\" )  var name = \"world\" ; console .log( \"goodbye \" + name);  else  console .log( \"hello \" +name);  )(); “goodbye world” 1 2 3 4 5 6 7 8 9 10 11 function makeAdder ( x )  return function ( y )  return x + y; ;  var add5 = makeAdder( 5 ); var add10 = makeAdder( 10 ); console .log(add5( 2 )); // 7 console .log(add10( 2 )); // 12 1 2 3 4 5 6 7 8 9 10 11 12 // fn declaration function add ( x )  return function ( y )  return x + y; ;  var add5 = add( 5 ); var add10 = add( 10 ); console .log(add5( 2 )); // 7 console .log(add10( 2 )); // 12 箭頭函式 https://tylermcginnis.com/arrow-functions/ 1 2 3 4 5 6 7 8 9 10 11 12 13 function add ( x )  return ( y ) = x + y;  const addf1 = ( a,b ) = a + b; var add5 = add( 5 ); var add10 = add( 10 ); console .log(add5( 2 )); // 7 console .log(add10( 2 )); // 12 console .log(addf1( 5 , 2 )); // 7 傳函數 (函數即物件) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const addf1 = ( a,b ) = a + b; function passFn ( addf1 )  return addf1;  function insideFn ( x,y )  return addf1(x,y);  console .log( addf1( 5 , 2 ) ); // 7 console .log( passFn(addf1( 5 , 2 )) ); // 7 console .log( insideFn( 5 , 2 ) ); // 7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // global scope var e = 10 ; function sum ( a )  return function ( b,c )  return function ( d )  // local scope return a + b + c + d + e;    console .log(sum( 1 )( 2 , 3 )( 4 )); // log 20 傳多個函數 1 2 3 4 5 6 7 function fns ( a )  return function ( b,c )  return a + b + c;   console .log(fns( 1 )( 2 , 3 )); // log 6 1 2 3 4 5 6 7 8 function fns ( f1 )  return function ( b,c )  return f1(b,c);   const addf1 = ( a,b ) = a + b; console .log(fns(addf1)( 2 , 3 )); // 5 https://jsbin.com/yijuyebixu/edit?js,console 1 2 3 4 5 6 7 8 9 10 function fns ( f1,f2 )  return function ( b,c )  return f1(b,c)+ ' ' +f2(b)+ ' ' +f3(b,c);   const f1 = ( a,b ) = a + b; const f2 = ( a ) = a * a; const f3 = ( a,b ) = a  b; //2 左移3 00010 - 10000 16 console .log(fns(f1,f2,f3)( 2 , 3 )); // \"5 4 16\" https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#%3E%3E_(Sign-propagating_right_shift)"},"closures.html#傳多個函數":{"title":"&#x50B3;&#x591A;&#x500B;&#x51FD;&#x6578;","path":"\\javascript\\closures.html#傳多個函數","body":"1 2 3 4 5 6 7 function fns ( a ) { return function ( b,c ) { return a + b + c; } } console .log(fns( 1 )( 2 , 3 )); // log 6 1 2 3 4 5 6 7 8 function fns ( f1 ) { return function ( b,c ) { return f1(b,c); } } const addf1 = ( a,b ) = a + b; console .log(fns(addf1)( 2 , 3 )); // 5 https://jsbin.com/yijuyebixu/edit?js,console 1 2 3 4 5 6 7 8 9 10 function fns ( f1,f2 ) { return function ( b,c ) { return f1(b,c)+ &apos; &apos; +f2(b)+ &apos; &apos; +f3(b,c); } } const f1 = ( a,b ) = a + b; const f2 = ( a ) = a * a; const f3 = ( a,b ) = a  b; //2 &#x5DE6;&#x79FB;3 00010 - 10000 16 console .log(fns(f1,f2,f3)( 2 , 3 )); // 5 4 16 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#%3E%3E_(Sign-propagating_right_shift)"},"export.html":{"title":"","path":"\\javascript\\export.html","body":"export date.js 1 2 3 export function formatData ( data, fmt )   control.js 1 2 3 export default   com.vue 1 2 3 import formatData from 'common/js/date' // import formatData, funB from 'common/js/date' import control from 'components/control'"},"export.html#export":{"title":"export","path":"\\javascript\\export.html#export","body":"date.js 1 2 3 export function formatData ( data, fmt ) { } control.js 1 2 3 export default { } com.vue 1 2 3 import {formatData} from &apos;common/js/date&apos; // import {formatData, funB} from &apos;common/js/date&apos; import control from &apos;components/control&apos;"},"copy.html":{"title":"Copy","path":"\\javascript\\copy.html","body":"物件跟基本型別最大的不同就在於他們的傳值方式 淺拷貝(Shallow Copy) 基本型別是傳 value https://jsbin.com/lokejiveha/edit?js,console 1 2 3 4 5 6 var a = 10 ; var b = a; b = 20 ; console .log(a); // 10 console .log(b); // 20 但物件就不同，物件傳的是 reference https://jsbin.com/keholuroba/edit?js,console 1 2 3 4 5 6 var obj1 =  a : 10 , b : 20 , c : 30 ; var obj2 = obj1; obj2.b = 100 ; console .log(obj1); //  a: 10, b: 100, c: 30  -- b 被改到了 console .log(obj2); //  a: 10, b: 100, c: 30  複製一份obj1叫做obj2 然後把obj2.b改成100 但卻不小心改到obj1.b 因為他們根本是同一個物件，這就是所謂的 淺拷貝 深拷貝(Deep Copy) https://jsbin.com/xeqevarisa/1/edit?js,console 1 2 3 4 5 6 var obj1 =  a : 10 , b : 20 , c : 30 ; var obj2 =  a : obj1.a, b : obj1.b, c : obj1.c ; obj2.b = 100 ; console .log(obj1); //  a: 10, b: 20, c: 30  -- b 沒被改到 console .log(obj2); //  a: 10, b: 100, c: 30  但深拷貝會另外創造一個一模一樣的物件 新物件跟原物件不共用記憶體 修改新物件不會改到原物件 https://jsbin.com/venezeyonu/edit?js,console 1 2 3 4 5 6 7 8 var obj1 =  body :  a : 10  ; var obj2 =  body : obj1.body ; obj2.body.a = 100 ; console .log(obj1); //  body:  a: 100   -- 被改到了 console .log(obj2); //  body:  a: 100   console .log(obj1 === obj2); // false console .log(obj1.body === obj2.body); // true 雖然obj1跟obj2是不同物件 但他們會共用同一個 obj1.body 所以修改obj2.body.a時也會修改到舊的 vue-element-admin/blob/master/mock/ utils.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 /** * This is just a simple version of deep copy * Has a lot of edge cases bug * If you want to use a perfect deep copy, use lodash's _.cloneDeep * @param Object source * @returns Object */ function deepClone ( source )  if (!source &amp;&amp; typeof source !== 'object' )  throw new Error ( 'error arguments' , 'deepClone' )  const targetObj = source.constructor === Array ? [] :  Object .keys(source).forEach( keys =  if (source[keys] &amp;&amp; typeof source[keys] === 'object' )  targetObj[keys] = deepClone(source[keys])  else  targetObj[keys] = source[keys]  ) return targetObj  const routes = deepClone([...constantRoutes, ...asyncRoutes]) https://lodash.com/docs/4.17.15#cloneDeep Object.assign https://jsbin.com/cejijipevo/edit?js,console 1 2 3 4 5 6 var obj1 =  a : 10 , b : 20 , c : 30 ; var obj2 = Object .assign(, obj1); obj2.b = 100 ; console .log(obj1); //  a: 10, b: 20, c: 30  -- 沒被改到 console .log(obj2); //  a: 10, b: 100, c: 30  Object.assign({}, obj1) 的意思是先建立一個空物件{} 接著把obj1中所有的屬性複製過去 所以obj2會長得跟obj1一樣 這時候再修改obj2.b也不會影響obj1 因為Object.assign跟我們手動複製的效果相同 轉成 JSON 再轉回來 https://jsbin.com/kofawafune/edit?js,console 1 2 3 4 5 6 7 8 var obj1 =  body :  a : 10  ; var obj2 = JSON .parse( JSON .stringify(obj1)); obj2.body.a = 20 ; console .log(obj1); //  body:  a: 10   -- 沒被改到 console .log(obj2); //  body:  a: 20   console .log(obj1 === obj2); // false console .log(obj1.body === obj2.body); // false 這樣做是真正的 Deep Copy 但只有可以轉成JSON格式的物件才可以這樣用 像function沒辦法轉成JSON 1 2 3 4 5 var obj1 =  fun : function ( )  console .log( 123 )  ; var obj2 = JSON .parse( JSON .stringify(obj1)); console .log( typeof obj1.fun); // 'function' console .log( typeof obj2.fun); // 'undefined' -- 沒複製"},"copy.html#淺拷貝-Shallow-Copy":{"title":"&#x6DFA;&#x62F7;&#x8C9D;(Shallow Copy)","path":"\\javascript\\copy.html#淺拷貝-Shallow-Copy","body":"&#x57FA;&#x672C;&#x578B;&#x5225;&#x662F;&#x50B3; value https://jsbin.com/lokejiveha/edit?js,console 1 2 3 4 5 6 var a = 10 ; var b = a; b = 20 ; console .log(a); // 10 console .log(b); // 20 &#x4F46;&#x7269;&#x4EF6;&#x5C31;&#x4E0D;&#x540C;&#xFF0C;&#x7269;&#x4EF6;&#x50B3;&#x7684;&#x662F; reference https://jsbin.com/keholuroba/edit?js,console 1 2 3 4 5 6 var obj1 = { a : 10 , b : 20 , c : 30 }; var obj2 = obj1; obj2.b = 100 ; console .log(obj1); // { a: 10, b: 100, c: 30 } -- b &#x88AB;&#x6539;&#x5230;&#x4E86; console .log(obj2); // { a: 10, b: 100, c: 30 } &#x8907;&#x88FD;&#x4E00;&#x4EFD;obj1&#x53EB;&#x505A;obj2 &#x7136;&#x5F8C;&#x628A;obj2.b&#x6539;&#x6210;100 &#x4F46;&#x537B;&#x4E0D;&#x5C0F;&#x5FC3;&#x6539;&#x5230;obj1.b &#x56E0;&#x70BA;&#x4ED6;&#x5011;&#x6839;&#x672C;&#x662F;&#x540C;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x9019;&#x5C31;&#x662F;&#x6240;&#x8B02;&#x7684; &#x6DFA;&#x62F7;&#x8C9D; &#x6DF1;&#x62F7;&#x8C9D;(Deep Copy) https://jsbin.com/xeqevarisa/1/edit?js,console 1 2 3 4 5 6 var obj1 = { a : 10 , b : 20 , c : 30 }; var obj2 = { a : obj1.a, b : obj1.b, c : obj1.c }; obj2.b = 100 ; console .log(obj1); // { a: 10, b: 20, c: 30 } -- b &#x6C92;&#x88AB;&#x6539;&#x5230; console .log(obj2); // { a: 10, b: 100, c: 30 } &#x4F46;&#x6DF1;&#x62F7;&#x8C9D;&#x6703;&#x53E6;&#x5916;&#x5275;&#x9020;&#x4E00;&#x500B;&#x4E00;&#x6A21;&#x4E00;&#x6A23;&#x7684;&#x7269;&#x4EF6; &#x65B0;&#x7269;&#x4EF6;&#x8DDF;&#x539F;&#x7269;&#x4EF6;&#x4E0D;&#x5171;&#x7528;&#x8A18;&#x61B6;&#x9AD4; &#x4FEE;&#x6539;&#x65B0;&#x7269;&#x4EF6;&#x4E0D;&#x6703;&#x6539;&#x5230;&#x539F;&#x7269;&#x4EF6; https://jsbin.com/venezeyonu/edit?js,console 1 2 3 4 5 6 7 8 var obj1 = { body : { a : 10 } }; var obj2 = { body : obj1.body }; obj2.body.a = 100 ; console .log(obj1); // { body: { a: 100 } } -- &#x88AB;&#x6539;&#x5230;&#x4E86; console .log(obj2); // { body: { a: 100 } } console .log(obj1 === obj2); // false console .log(obj1.body === obj2.body); // true &#x96D6;&#x7136;obj1&#x8DDF;obj2&#x662F;&#x4E0D;&#x540C;&#x7269;&#x4EF6; &#x4F46;&#x4ED6;&#x5011;&#x6703;&#x5171;&#x7528;&#x540C;&#x4E00;&#x500B; obj1.body &#x6240;&#x4EE5;&#x4FEE;&#x6539;obj2.body.a&#x6642;&#x4E5F;&#x6703;&#x4FEE;&#x6539;&#x5230;&#x820A;&#x7684; vue-element-admin/blob/master/mock/ utils.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 /** * This is just a simple version of deep copy * Has a lot of edge cases bug * If you want to use a perfect deep copy, use lodash&apos;s _.cloneDeep * @param {Object} source * @returns {Object} */ function deepClone ( source ) { if (!source &amp;&amp; typeof source !== &apos;object&apos; ) { throw new Error ( &apos;error arguments&apos; , &apos;deepClone&apos; ) } const targetObj = source.constructor === Array ? [] : {} Object .keys(source).forEach( keys = { if (source[keys] &amp;&amp; typeof source[keys] === &apos;object&apos; ) { targetObj[keys] = deepClone(source[keys]) } else { targetObj[keys] = source[keys] } }) return targetObj } const routes = deepClone([...constantRoutes, ...asyncRoutes]) https://lodash.com/docs/4.17.15#cloneDeep"},"copy.html#深拷貝-Deep-Copy":{"title":"&#x6DF1;&#x62F7;&#x8C9D;(Deep Copy)","path":"\\javascript\\copy.html#深拷貝-Deep-Copy","body":"https://jsbin.com/xeqevarisa/1/edit?js,console 1 2 3 4 5 6 var obj1 = { a : 10 , b : 20 , c : 30 }; var obj2 = { a : obj1.a, b : obj1.b, c : obj1.c }; obj2.b = 100 ; console .log(obj1); // { a: 10, b: 20, c: 30 } -- b &#x6C92;&#x88AB;&#x6539;&#x5230; console .log(obj2); // { a: 10, b: 100, c: 30 } &#x4F46;&#x6DF1;&#x62F7;&#x8C9D;&#x6703;&#x53E6;&#x5916;&#x5275;&#x9020;&#x4E00;&#x500B;&#x4E00;&#x6A21;&#x4E00;&#x6A23;&#x7684;&#x7269;&#x4EF6; &#x65B0;&#x7269;&#x4EF6;&#x8DDF;&#x539F;&#x7269;&#x4EF6;&#x4E0D;&#x5171;&#x7528;&#x8A18;&#x61B6;&#x9AD4; &#x4FEE;&#x6539;&#x65B0;&#x7269;&#x4EF6;&#x4E0D;&#x6703;&#x6539;&#x5230;&#x539F;&#x7269;&#x4EF6; https://jsbin.com/venezeyonu/edit?js,console 1 2 3 4 5 6 7 8 var obj1 = { body : { a : 10 } }; var obj2 = { body : obj1.body }; obj2.body.a = 100 ; console .log(obj1); // { body: { a: 100 } } -- &#x88AB;&#x6539;&#x5230;&#x4E86; console .log(obj2); // { body: { a: 100 } } console .log(obj1 === obj2); // false console .log(obj1.body === obj2.body); // true &#x96D6;&#x7136;obj1&#x8DDF;obj2&#x662F;&#x4E0D;&#x540C;&#x7269;&#x4EF6; &#x4F46;&#x4ED6;&#x5011;&#x6703;&#x5171;&#x7528;&#x540C;&#x4E00;&#x500B; obj1.body &#x6240;&#x4EE5;&#x4FEE;&#x6539;obj2.body.a&#x6642;&#x4E5F;&#x6703;&#x4FEE;&#x6539;&#x5230;&#x820A;&#x7684; vue-element-admin/blob/master/mock/ utils.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 /** * This is just a simple version of deep copy * Has a lot of edge cases bug * If you want to use a perfect deep copy, use lodash&apos;s _.cloneDeep * @param {Object} source * @returns {Object} */ function deepClone ( source ) { if (!source &amp;&amp; typeof source !== &apos;object&apos; ) { throw new Error ( &apos;error arguments&apos; , &apos;deepClone&apos; ) } const targetObj = source.constructor === Array ? [] : {} Object .keys(source).forEach( keys = { if (source[keys] &amp;&amp; typeof source[keys] === &apos;object&apos; ) { targetObj[keys] = deepClone(source[keys]) } else { targetObj[keys] = source[keys] } }) return targetObj } const routes = deepClone([...constantRoutes, ...asyncRoutes]) https://lodash.com/docs/4.17.15#cloneDeep"},"copy.html#Object-assign":{"title":"Object.assign","path":"\\javascript\\copy.html#Object-assign","body":"https://jsbin.com/cejijipevo/edit?js,console 1 2 3 4 5 6 var obj1 = { a : 10 , b : 20 , c : 30 }; var obj2 = Object .assign({}, obj1); obj2.b = 100 ; console .log(obj1); // { a: 10, b: 20, c: 30 } -- &#x6C92;&#x88AB;&#x6539;&#x5230; console .log(obj2); // { a: 10, b: 100, c: 30 } Object.assign({}, obj1) &#x7684;&#x610F;&#x601D;&#x662F;&#x5148;&#x5EFA;&#x7ACB;&#x4E00;&#x500B;&#x7A7A;&#x7269;&#x4EF6;{} &#x63A5;&#x8457;&#x628A;obj1&#x4E2D;&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x8907;&#x88FD;&#x904E;&#x53BB; &#x6240;&#x4EE5;obj2&#x6703;&#x9577;&#x5F97;&#x8DDF;obj1&#x4E00;&#x6A23; &#x9019;&#x6642;&#x5019;&#x518D;&#x4FEE;&#x6539;obj2.b&#x4E5F;&#x4E0D;&#x6703;&#x5F71;&#x97FF;obj1 &#x56E0;&#x70BA;Object.assign&#x8DDF;&#x6211;&#x5011;&#x624B;&#x52D5;&#x8907;&#x88FD;&#x7684;&#x6548;&#x679C;&#x76F8;&#x540C;"},"copy.html#轉成-JSON-再轉回來":{"title":"&#x8F49;&#x6210; JSON &#x518D;&#x8F49;&#x56DE;&#x4F86;","path":"\\javascript\\copy.html#轉成-JSON-再轉回來","body":"https://jsbin.com/kofawafune/edit?js,console 1 2 3 4 5 6 7 8 var obj1 = { body : { a : 10 } }; var obj2 = JSON .parse( JSON .stringify(obj1)); obj2.body.a = 20 ; console .log(obj1); // { body: { a: 10 } } -- &#x6C92;&#x88AB;&#x6539;&#x5230; console .log(obj2); // { body: { a: 20 } } console .log(obj1 === obj2); // false console .log(obj1.body === obj2.body); // false &#x9019;&#x6A23;&#x505A;&#x662F;&#x771F;&#x6B63;&#x7684; Deep Copy &#x4F46;&#x53EA;&#x6709;&#x53EF;&#x4EE5;&#x8F49;&#x6210;JSON&#x683C;&#x5F0F;&#x7684;&#x7269;&#x4EF6;&#x624D;&#x53EF;&#x4EE5;&#x9019;&#x6A23;&#x7528; &#x50CF;function&#x6C92;&#x8FA6;&#x6CD5;&#x8F49;&#x6210;JSON 1 2 3 4 5 var obj1 = { fun : function ( ) { console .log( 123 ) } }; var obj2 = JSON .parse( JSON .stringify(obj1)); console .log( typeof obj1.fun); // &apos;function&apos; console .log( typeof obj2.fun); // &apos;undefined&apos; -- &#x6C92;&#x8907;&#x88FD;"},"event.html":{"title":"Event","path":"\\javascript\\event.html","body":"無限下拉加載圖片的頁面 綁定事件? 代理 https://jsbin.com/hajohit/edit?html,js,output 1 2 3 4 5 6 7  div id = \"div1\"   a href = \"#\"  a1 / a   a href = \"#\"  a2 / a   a href = \"#\"  a3 / a   a href = \"#\"  a4 / a  !--會新增更多a標籤-- / div  為所有a標籤 新增 點擊事件 1 2 3 4 5 6 7 8 9 // 通過事件冒泡 去上層綁定 var div1 = document .getElementById( 'div1' ) div1.addEventListener( 'click' , function ( e )  //監聽是div1 但target可以告知點擊從哪出發的 var target = e.target if (target.nodeName === 'A' )  alert(target.innerHTML); //a1  )"},"event.html#代理":{"title":"&#x4EE3;&#x7406;","path":"\\javascript\\event.html#代理","body":"https://jsbin.com/hajohit/edit?html,js,output 1 2 3 4 5 6 7  div id = div1   a href = #  a1 / a   a href = #  a2 / a   a href = #  a3 / a   a href = #  a4 / a  !--&#x6703;&#x65B0;&#x589E;&#x66F4;&#x591A;a&#x6A19;&#x7C64;-- / div  &#x70BA;&#x6240;&#x6709;a&#x6A19;&#x7C64; &#x65B0;&#x589E; &#x9EDE;&#x64CA;&#x4E8B;&#x4EF6; 1 2 3 4 5 6 7 8 9 // &#x901A;&#x904E;&#x4E8B;&#x4EF6;&#x5192;&#x6CE1; &#x53BB;&#x4E0A;&#x5C64;&#x7D81;&#x5B9A; var div1 = document .getElementById( &apos;div1&apos; ) div1.addEventListener( &apos;click&apos; , function ( e ) { //&#x76E3;&#x807D;&#x662F;div1 &#x4F46;target&#x53EF;&#x4EE5;&#x544A;&#x77E5;&#x9EDE;&#x64CA;&#x5F9E;&#x54EA;&#x51FA;&#x767C;&#x7684; var target = e.target if (target.nodeName === &apos;A&apos; ) { alert(target.innerHTML); //a1 } })"},"index.html":{"title":"hexo-theme-doc-seed","path":"\\javascript\\index.html","body":"hexo-theme-doc-seed This project is a skeleton for a documentation website using Hexo and hexo-theme-doc . You can use it to quickly bootstrap your documentation website. The seed contains the required structure and files to use Hexo and the theme, plus dummy content to show the usage of the main features of the theme. Getting Started To get started have a look first to the requirements , then install hexo-cli with: 1 $ npm install -g hexo-cli Now just clone hexo-theme-doc-seed repository: 1 $ git clone https://github.com/zalando-incubator/hexo-theme-doc-seed.git directory Go into the resulting directory and install dependencies: 1 $ npm install Start the preview server locally with: 1 hexo s If you open your browser at http://localhost:4000 you should see the documentation website up and running. More Informations For more informations please visit the user documentation website ."},"index.html#hexo-theme-doc-seed":{"title":"hexo-theme-doc-seed","path":"\\javascript\\index.html#hexo-theme-doc-seed","body":"This project is a skeleton for a documentation website using Hexo and hexo-theme-doc . You can use it to quickly bootstrap your documentation website. The seed contains the required structure and files to use Hexo and the theme, plus dummy content to show the usage of the main features of the theme."},"index.html#Getting-Started":{"title":"Getting Started","path":"\\javascript\\index.html#Getting-Started","body":"To get started have a look first to the requirements , then install hexo-cli with: 1 $ npm install -g hexo-cli Now just clone hexo-theme-doc-seed repository: 1 $ git clone https://github.com/zalando-incubator/hexo-theme-doc-seed.git directory Go into the resulting directory and install dependencies: 1 $ npm install Start the preview server locally with: 1 hexo s If you open your browser at http://localhost:4000 you should see the documentation website up and running."},"index.html#More-Informations":{"title":"More Informations","path":"\\javascript\\index.html#More-Informations","body":"For more informations please visit the user documentation website ."},"core.html":{"title":"JavaScript 核心","path":"\\javascript\\core.html","body":"JavaScript 直譯器轉換過程 語法基本單元化(Tokenizing) 抽象結構樹AST(Abstract Syntax Tree) 代碼生成 esprima.org Parser produces the (beautiful) syntax tree Lexical Scope 語法作用域 (靜態作用域) 直譯器 靜態作用域 語法解析時就已經確定作用域 不會改變 JS屬於靜態作用域 執行 動態作用域 作用域是函數調用時才決定 提升（Hoisting） 在創造環境把記憶體空間準備好，這個流程稱為 提升（Hoisting） var name = &#39;Jacob&#39; // 創造環境 name放入記憶體 name = undefined 1 2 var name; //先宣告變數 name = 'Jacob' //然後才賦予值 執行階段 函數陳述式 在創造階段就會 優先載入 創造階段函式已可以運行 1 2 3 4 var a = '1' function fn ( )  ...  a undefined fn function .. 1 2 3 4 fn() //放前面可因為 創造階段 已可以運行 function fn ( )  console .log()  1 2 3 4 5 fn() //放前面 uncaught typeError: fn is not a function console .log(fn) //undefined var fn = function ( )  //函式表達式 console .log()  創造階段函式優先 1 2 3 4 5 6 7 8 9 10 11 12 //創造階段 function fn ( )  console .log( 1 )  var fn; //執行階段 fn = function ( )  console .log( 2 )  console .log(fn) //2 程式 1 2 3 4 5 function fn ( )  console .log(a)  var a = 'hello' fn() 實際運作拆解 1 2 3 4 5 6 7 8 //創造階段 function fn ( )  console .log(a)  var a; //執行階段 a = 'hello' fn () 1 2 3 4 5 6 7 8 9 function fn ( )  if (a)  // undefined 在 JavaScript 代表著 false console .log( 'hello' )  else  console .log( 'jacob' )   fn() //因為函式在執行時，變數還沒有被賦予值 var a = true 同步/非同步 JS是單執行序 是同步的 可利用 事件佇列 實現非同步 同步概念的先跑完 非同步行為先移至事件佇列 1 2 3 setTimeout( function ( )  console .log( 'someone call' ) , 3000 ) //不管如何調整秒數 都不會優先執行 0也是最後執行 LHS 1= true 1 = true 會出現 left-hand side (LHS)，實際上在此就無法繼續執行 Uncaught ReferenceError: Invalid left-hand side in assignment console.log(a) not defined 但其實是 RHS 錯誤，只是 JavaScript 並不會直接顯示 RHS 錯誤 陳述式 表達式 陳述式與宣告分類 運算式與運算子 正規表達式 陳述式 不會回傳結果 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 )  // 物件實字 var a =  name : \"Jacob\"  立即函式 (匿名函式()) // 匿名函式 外層小括號包起來 並且在後面加入() 來立即執行函式 1 2 3 ( function ( )  console .log( 'Jacob' ) ()) ASI 自動分號插入 自動分號插入( automatic semicolon insertion, ASI ) 是一種程序解析技術， 它在JavaScript 程序的語法分析(parsing) 階段起作用。 “不會” 發生 ASI 的規則： 新的一行是 ( 、 [ 、 / 開始 (容易出錯的地方) 新的一行以 + 、 - 、 * 、 % 作開始 (會影響執行結果) 新的一行以 , 、 . 作開始 (需注意執行結果) 遇到以上的標點符號 前方加入分號 是解決辦法 1 2 3 4 5 6 7 // 執行錯誤 ( function ( )  )() ( function ( )  )() // 正確 ;( function ( )  )() ;( function ( )  )() 1 2 3 4 5 var a = 1 ( function ( )  console .log(a); )() // var a = 1(function() console.log(a);)() 動態型別 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //執行階段才會賦予確立型別 var myName = 'Jacob' var myName; // 先賦予命名空間 myName = 'Jacob' //執行階段才確認型別 console .log( typeof myName) console .log( typeof 'Jacob' ) //顯性的轉換 explicit conversion //隱性的轉換 implicit conversion var num = 1 //number num = num + '' //string num = num * 3 //number console .log(num, typeof num) 原始型別及物件型別 原始型別 可用包裹物件的所有方法 1 2 3 4 a = 'Jacob' var e = new String (a) //但是原始型別盡量不用此方式 建構式 宣告 console .log(a, e) console .log( typeof e) // 建構式宣告的非原始型別 是物件型別 凡是使用 new 所建構的型別，在 typeof 都會是 object 透過建構式來建立的物件， var a = new Object(); if(a) 一樣是會被判定 true，因為物件的記憶體已經存在了 運算子 運算子 運算子優先序 賦值的優先性很低只有3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a是收 3賦予至b的 ‘回傳結果’ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = ; Object .defineProperty(b, 'a' ,  value: 2 , writable: false ) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a 是表達式 接收 1 b.a = 1 跟 b.a沒有關連性 Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 從左至右 console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = '1' ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b )  return a+b console .log( '1'  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( '1' + 2 ) //12 string型別相加 console .log(c)) console .log( 12 ) 嚴格相等 寬鬆相等 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //數字1 藍色 console .log( '1' ) //字串1 黑色 //嚴格相等 特殊狀況 console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //寬鬆相等 console .log( 1 == '1' ) // true 布林和字串轉為數值 console .log( Number ( '1' )) console .log( Number ( '0x11' )) //17 0x是指十六進制數 16+1 console .log( 17 == '0x11' ) //true //Null Undefined 不會轉數字型別 console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // 物件與非物件 使用包裹物件轉換 (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log(  A : 'A' ) //__proto__: Object console .log( String ( A : 'A' )) // [object Object] //物件與物件 比對的不是值 是參考位址 參考同一個記憶體 console .log( == ) //false 物件的參考位址不同 console .log( []==[] ) //false 同樣是物件型別 比對的都是參考位址 var a = [] var b = a ; //b取得的是a的參考位址 console .log( a===b) //a,b使用同個參考位址 JavaScript Equality Table Truthy Truthy（真值） console.log(new Boolean(false)) //Boolean{false} 物件 proto : Object 1 2 3 4 5 if ( new Boolean ( false ))  console .log( 'Truthy' )  else  console .log( 'Falsy' )  邏輯運算子及函式預設值 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // 預設值為 0 的解決方法 使用三元運算子 // 當 cash 是數值或為 0 時，使用 cash 的數值 // 如果 cash 是 NaN 時，則直接套用 500 cash = (cash || cash === 0 )? cash: 500 ; // or 左右兩邊放的是表達式 `` ` # 物件取值 [求值策略](https://zh.wikipedia.org/wiki/求值策略) 點 與 中括弧(可用變數方式) 物件取值屬性用字串 ` `` js const family =  name: 'Hsu' , members:  mon: 'mon' , dad: 'dad' , others: 'others' , 1 : 10 , '$-myFamily' : 'my family' , callFamily: function ( )  console .log( 'call family' ) , 'Hello' : function ( )  console .log( 'I am groot ' )   //物件實字 console .log(family.name); console .log(family[ 'name' ]); const a = 'name' ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ 'callFamily' ](); //add family[ '$' ] = 'money' delete family.others delete family[ '$' ] //利用陣列及for迴圈 執行物件的函式 var familyMethod = [ 'callFamily' , 'Hello' ] for ( var i= 0 ; i familyMethod.length;i++)  console .log(familyMethod[i]) family[familyMethod[i]]();  1 2 3 4 5 6 7 //變數無法被刪除，屬性才可以 var a= 1 ; //變數 b= 2 ; //屬性 console .log( window ) delete a; delete b; //b is not defind console .log( window ) 物件記憶體空間 1 2 3 4 5 var person =  name: 'Jacob'  var person2 = person person2 = 'Hsu' //find 0x01 change name's value 參考物件 Value 0x01 name Jacob 物件變數 Value person 0x01 person2 0x01 1 2 3 4 5 6 7 8 // 見大括號 生成新的參考物件 var company =  team: 'dev' , member:  rd: 'Jacob' qa: 'Claire'   參考物件 Value 0x01 team dev member 0x02 | 0x02 | | | rd | Jacob | | qa | Claire | 物件變數 Value company 0x01 純值無法新增屬性 js兩種型別 不是純值 就是物件 (function是物件) 1 2 3 4 5 6 7 8 9 10 11 12 13 var newStr = 'myname' //純值 newStr.name = 'Jacob' console .log(newStr) var newStr2 = new String ( 'myname' ) //建構式 物件 newStr2.name = 'Jacob' console .log(newStr2) function callFn ( )  console .log( 'fun' )  console .log(callFn) console .dir(callFn) //看見物件所有屬性內容 純值 傳值(call by value) 物件(陣列 函式)) 傳參考(call by reference) 深淺拷貝 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 var family =  name: 'Hsu' , member:  father: 'dad' , monther: 'mom' , other: 'someone'   var newFamily =  for ( var key in family)  console .log(key, family[key]); newFamily[key] =family[key];  newFamily.name = 'Chen' console .log(family, newFamily) newFamily.member.other = 'stranger' console .log(family, newFamily) //for in只能做第一層的複製 第二層是傳參考的形式 //淺層複製 js for in, jQuery extend, ES6 assign //jQuery var newFamily2 = jQuery.extend(, family); //ES6 var newFamily3 = Object .assign(, family) //深層複製 deep copy 會將原本的物件轉成字串再轉回來 傳參考特性會沒有 //console.log(family, JSON.stringify(family)) console .log(family, JSON .parse( JSON .stringify(family) )) var newFamily4 = JSON .parse( JSON .stringify(family) ); console .log(family === newFamily4) newFamily4.name = 'Liao' newFamily4.member.other = 'Deep' console .log(family, newFamily4) //兩者完全無關 參考也都不一樣 陣列 陣列是物件型別的一種 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var newArray = [ 1 , 'Str' , true ,  name: 'Jacob'  ]; console .log(newArray[ 3 ]); //[object Object]  name: \"Jacob\" console .log(newArray .3 ); //\"error\" newArray.push( 5 ); newArray.name = 'Hsu' ; //物件可隨意增加屬性 newArray[ 5 ] = 'Chen' ; newArray[ 7 ] = 'Liao' ; //陣列6 empty 取值undefined console .log(newArray); //name不屬於陣列裡面的長度 for ( var i= 0 ;inewArray.length;i++)  console .log(newArray[i])  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a = [ 1 , 2 , 3 ]; console .log(a, a[ 1 ], a.length) //forEach 不是實體屬性 是陣列原型的屬性 a.forEach( function ( i )  console .log(i) ); ( 3 ) [ 1 , 2 , 3 ] 0 : 1 1 : 2 2 : 3 length: 3 // length 也是一個物件的屬性 __proto__: Array ( 0 ) //陣列的原型 可以透過點運算子不斷向上查找取得方法 例:forEach ... __proto__: Object // 陣列的原型 繼承物件的原型 所以陣列也可以使用物件原型的方法 例:toString 1 2 3 4 5 6 7 8 var a = [ 1 , 2 , 3 ]; var b = [ 4 , 5 , 6 ]; //新增方法到原型鏈上 a.__proto__.getLast = function ( )  return this [ this .length -1 ]; //b[b.length-1]  console .log(a, b, a.getLast(), a.toString()) JSON JSON - 維基百科 儘管JSON是JavaScript的一個子集，但JSON是獨立於語言的文字格式 JSON所有的屬性一定都是字串的形式 物件可以用單引號 &#39; 但JSON一律用雙引號  SON 的格式是非常嚴格的，多一個逗號少一個逗號，都會導致出現錯誤， 所以最後一筆不可多了一個逗號 透過 JSON.parse() 出來的資料是一個物件，所以物件會有傳參考特性 後續的值變更，原本的值也會變更 原生AJAX讀JSON 1 2 3 4 5 6 7 8 9 10 //原生AJAX function getData ( )  console .log( this .response) var data = JSON .parse( this .response); console .log(data);  var oReq = new XMLHttpRequest(); oReq.addEventListener( \"load\" , getData); oReq.open( \"GET\" , \"family.json\" ) //傳入的字串 oReq.send(); 透過開發工具Network可以看結果 function 在 JavaScript 中 function 是一個很特別的存在，它是可以當成物件來使用， function 也是物件的一種，只是它是擁有程式區塊的能力物件而已 透過 「.」 即可做到新增屬性與值，所以function 在 JavaScript 是一個特殊的物件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( )  console .log( '函式陳述式' , '具名函式' ); console .log(statementFn);  statementFn(); var expressionFn = function ( )  console .log( '函式表達式' , '匿名函式' ); //不是所有匿名函式 都是函式表達式 console .log(expressionFn);  expressionFn() var functionC = function functionD ( )  console .log(functionC, functionD) //具名函式能夠在函式內被調用  console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin )  num += 1 console .log( 'Exec giveMeMoney' ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) ; console .log(giveMeMoney( 30 )) //加錢到超過100元才停止 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn )  fn();  // 函數陳述式沒有名稱無法執行 // function (fn)  // fn(); //  // 傳入的參數函式 如同函式表達式 不需要名稱 callSomeFn( function ( )  console .log( '執行函式' ) ) // 2定義一段函式並賦予到參數上 立即函式(IIFE) 立即呼叫函式表達式 （英文：immediately-invoked function expression，縮寫：IIFE） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( )  console .log( 'IIFE' )  fnA(); // IIFE ( function IIFE ( )  console .log( '立即函式' , 'IIFE' , '沒有fnA也可以執行' , '這裡是具名函式' ) // 1. 立即執行 // 2. 無法再函式外被再次執行 ()); //括號內層再補上小括號 ( function IIFE ( )  )(); //小括號可以移到外層 console .log(IIFE); //IIFE is not defined ( function ( )  console .log( '立即函式' , 'IIFE' , '沒有fnA也可以執行' ) // 1. 立即執行 // 2. 無法再函式外被再次執行 ()); ( function ( )  var name = 'Jacob' ; console .log(name) // 限制變數的作用域 )(); var whereParameter = ( function ( parameter )  console .log(parameter) return parameter; )( '參數在這' ); console .log(whereParameter); //記得養成好習慣 在立即函式前或後加分號 // 立即函式 傳遞變數 var a = ; ( function ( b )  b.person = 'jacob' ; )(a) ;( function ( c )  console .log(c.person); //把另一個立即函式定義的變數印出來 )(a) // 大型框架下 用全域物件傳值 ( function ( global )  global.person = 'jacob' ; )( window ) ;( function ( )  console .log(person); //把另一個立即函式定義的變數印出來 )() 參數 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a )  console .log(name+ '你好' +a)  function funcB ( fn )  fn( 'Jacob' , 1 ) //實際執行在這  funcB(cbFn) //\"Jacob你好1\" 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a )  console .log(a, arguments ); //arguments 是一個類陣列 不是純陣列 for ( let index = 0 ; index  arguments .length; index++)  console .log( arguments [index]); // 1 2 3 '4'  // 類陣列並沒有絕大多數陣列可使用的方法 // \"TypeError: arguments.forEach is not a function arguments .forEach( function ( )  )  callArg( 1 , 2 , 3 , '4' ) //1, [object Arguments]  0: 1, 1: 2, 2: 3, 3: \"4\" 閉包 Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( )  var money = 1000 ; return function ( price )  money = money + price return money   //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price)  console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( )  var arr = []; for ( var i= 0 ;i 3 ;i++)  arr.push( function ( )  console .log(i); );  console .log( 'i' , i) // 3 3 3 return arr;  var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); 透過 立即函式 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( )  var arr = []; for ( var i= 0 ;i 3 ;i++)  // 立即函式一個功能 限制作用域 ( function ( j )  arr.push( function ( )  console .log(j); ); )(i);  console .log( 'i' , i) // 0 1 2 return arr;  var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); 透過 let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( )  var arr = []; for ( let i= 0 ;i 3 ;i++)  arr.push( function ( )  console .log(i); // 0 1 2 );  //console.log('i', i) // \"error\" let作用域只在for return arr;  var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); 函式工廠 給不同的值　做相同的事情 1 2 3 4 5 6 7 8 9 function storeMoney ( initVal )  var money = initVal || 1000 return function ( price )  money = money + price; return money;   var MingMoney = storeMoney( 100 ); console .log(MingMoney( 500 )) // 600 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 function storeMoney ( initVal )  var money = initVal || 1000 // 私有方法 可以做很多不同事情 return  increase: function ( price )  money += price , decrease: function ( price )  money -= price , value: function ( )  return money;    var MingMoney = storeMoney( 100 ); MingMoney.increase( 100 ); MingMoney.increase( 25 ); MingMoney.decrease( 25 ); console .log(MingMoney.value()) // 200 this chrome / devTool / Sources / || 暫停按鈕 / 進入執行堆疊 this 為關鍵字 在每個執行環境存在 this 的調用方式 作為物件方法 關注在哪個物件下呼叫 Object.fn() this 指向 Object 簡易呼叫 (不建議調用this) bind, apply, call 方法 new DOM事件處理器 箭頭函式(ES6) simple call 簡易呼叫 1 2 3 4 5 6 var myName = 'Jacob' ; function callName ( )  console .log( this , this .myName)  callName() // this - window // 盡可能不要使用simple call的this 1 2 3 4 5 6 7 ( function ( )  console .log( this .myName); function callFn ( )  console .log( this .myName);  callFn(); //simple call 看到函式是直接執行的 就是簡易呼叫 執行閉包內函式也是 )(); 1 2 3 4 5 6 7 8 // callback function myCb ( callback )  var money = 100 return callback(money)  myCb( function ( money )  console .log( this .myName, money+ 100 ) ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 var a = [ 1 , 2 , 3 ] // forEach 後方是插入一個callback函式 a.forEach( function ( i )  console .log( this .myName, i); ) var family =  myName: 'Hsu' , callName: function ( )  // var self = this; // vm , that setTimeout( function ( )  console .log( this .myName) // simple call this-window 'Jacob' 無法取得物件的myName 'Hsu' console .log(self.myName) // 物件的myName 'Hsu' , 1000 )  family.callName();  Call, appply, bind 1 2 3 4 5 6 7 8 9 10 11 12 13 var team =  myName: 'Jacob'  function fn ( para1, para2 )  console .log( this , para1, para2)  fn( 1 , 2 ); //simple call fn.call(team, 1 , 2 ); // call 是立刻執行 fn.apply(team, [ 3 , 4 ]); // apply 是立刻執行 差別在以陣列方式呈現 var fn2 = fn.bind(team, 5 , 6 ); // bind 非立刻執行 fn2( 6 ); // [object Object] 5 6 順序執行參數所以是6 fn2( 1 , 2 ); // [object Object] 5 1 順序執行參數所以是1 1 2 3 4 5 6 7 8 function fn ( para1, para2 )  console .log( this , para1, para2)  // 進階概念 fn.call( 1 , 'Jacob' , 'Jessica' ) //傳純值 Number1 'Jacob', 'Jessica' 已建構式方式呈現 物件的型別 fn.call( 'Str' , 'Jacob' , 'Jessica' ) fn.call( undefined , 'Jacob' , 'Jessica' ) // null 、undefined 將會被置換成全域變數 [object Window] 'Jacob', 'Jessica' MDN call() 嚴格模式 1 2 3 4 ( function ( )  'use strict' ; name = 'Jacob' ; // \"error\" name is not defined )() 1 2 3 4 5 6 7 function fn ( para1, para2 )  'use strict' ; // 有加入嚴格模式 this所指向的window會變undefined console .log( this , para1, para2) // 1 \"Jacob\" \"Jessica\" 嚴格模式下 純值維持原型別 不以建構式方式呈現  fn.call( 1 , 'Jacob' , 'Jessica' ) fn.call( undefined , 'Jacob' , 'Jessica' ) // undefined \"Jacob\" \"Jessica\" // 簡易呼叫下 盡可能不要調用this 因為它本質就是undefined this: DOM 1 2  button onclick = \"console.log(this)\"  this is btn / button   button onclick = \"console.dir(this)\"  this is btn / button  console.dir(object) new 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function Dog ( name, color, size )  this .name = name; this .color = color; this .size = size;  var Bibi = new Dog( '比比' , '棕色' , '小' ) console .log(Bibi) //函式本身就是一個物件 函式物件有一個特別的屬性 prototype //透過prototype所新增的屬性 就會做原型上的方法 函式物件特有的屬性 Dog.prototype.bark = function ( )  console .log( this .name, 'barking' )  // __proto__ 物件上 // prototype 函式上 // 調整原型的方法時 最好的方式是從函式本身的原型屬性上去調整 console .log(Dog.prototype === Bibi.__proto__) // true 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 var b = new String ( 'bcde' ); console .log(b) console .dir( String ) String .prototype.lastText = function ( )  return this [ this .length - 1 ];  console .log(b.lastText()); Number .prototype.secondPower = function ( )  return this * this ;  var num = 5 ; console .log(num.secondPower()); var date = new Date (); console .log(date); console .dir( Date ); Date .prototype.getFullDate = function ( )  var dd = String ( this .getDate()); var mm = String ( this .getMonth()+ 1 ); var yyyy = this .getFullYear(); var today = yyyy + '/' + mm + '/' +dd; return today;  console .log(date.getFullDate()); 繼承 Object.create() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 var a = [] //Object  Array  a (實體) //原型鏈上新增一個層級 //Object  Animal  Dog  實體 //Object  Animal  Cat  實體 // Object.create() 可以把其他物件作為原型使用 var dog =  name: '狗' , bark: function ( )  console .log( this .name + ' barking' )   var Corgi = Object .create(dog); //Corgi 把 dog 作為原型使用 Corgi.name = 'Welsh Corgi' console .log(Corgi) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 function Animal ( family )  this .kingdom = '動物界' this .family = family || '貓科'  Animal.prototype.move = function ( )  console .log( this .name + ' can move' )  function Dog ( name, size )  Animal.call( this , '犬科' ) this .name = name; this .size = size || 'small'  Dog.prototype = Object .create(Animal.prototype) Dog.prototype.constructor = Dog; // 狗的原型原本直接繼承於動物界的原型 constructor 會被覆蓋所以補回原本建構函式 Dog.prototype.bark = function ( )  console .log( this .name + ' barking' )  var Chihuahua = new Dog( 'Chihuahua' , 'small' ); console .log(Chihuahua) Chihuahua.bark(); Chihuahua.move(); Chihuahua.family // undefined 目前只有繼承原型prototype 但無繼承動物界的建構函式 Animal.call 如果瀏覽器不支援 Object.create() 這時候我們會寫一些程式來填補某些瀏覽器不支援的情況，我們把這些程式稱做 polyfill 屬性特徵 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 const obj =  a: 1 , b: 2 , c: 3  console .log(obj) //Object.defineProperty() // 屬性，調整屬性的特徵 // 1. 值 2. 可否寫入 3. 可否被刪除 4. 可否被列舉 //Object.defineProperty(物件, 屬性, 參數) // being explicit Object .defineProperty(obj, 'a' ,  enumerable: true , configurable: true , writable: false , value: 4 ); console .log(obj) // \"TypeError: Cannot assign to read only property 'a' of object '#Object' ( function ( )  'use strict' ; obj.a = 5 ; ()) Object.defineProperty() // 延伸的三種物件方法 preventExtensions seal Freeze 防止擴充 封裝 凍結 直接操作物件本身 Object.preventExtensions() Object.seal() 無法新增刪除 也無法配置特徵 但是可以調整屬性值 Object.freeze() 物件加上seal 且無法調整值 Setter And Getter 1 2 3 4 5 6 7 8 9 10 11 12 13 14 var wallet =  total: 100 , set save(price)  this .total = this .total + price / 2 , get save()  return this .total / 2   // Getter 取得特定值的方法 // Setter 存值的方法 // wallet.total = 300; wallet.save = 300 ; //透過Setter改變total的值 console .log(wallet.save) //250 / 2 = 125 Object.defineProperty() Object.getOwnPropertyDescriptor() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var wallet =  total: 100  Object .defineProperty(wallet, 'save' ,  configurable: true , set : function(price)  this .total = this .total + price / 2 , get : function()  return this .total / 2  ); wallet.save = 300 ; //透過Setter改變total的值 console .log(wallet); // save 250 / 2 = 125 console .log( Object .getOwnPropertyDescriptor(wallet, 'save' )) // [object Object]  // configurable: false, // enumerable: false, 1 2 3 4 5 6 7 8 // 取得陣列最後一個值 var a = [ 1 , 2 , 3 ]; Object .defineProperty( Array .prototype, 'lastest' ,  get : function()  return this [ this .length - 1 ];  ); console .log(a.lastest); //3 ##　vue https://github.com/vuejs/vue/blob/dev/dist/vue.js var emptyObject = Object.freeze({}); 確保空物件 1 2 3 4 5 6 7 8 var app = new Vue( //建構初始化 el: '#app' , data:  message: 'Hello Vue!'  ) console .log(app) 深入响应式原理 当你把一个普通的 JavaScript 对象传入 Vue 实例作为 data 选项，Vue 将遍历此对象所有的属性，并使用 Object.defineProperty 把这些属性全部转为 getter/setter 。Object.defineProperty 是 ES5 中一个无法 shim 的特性，这也就是 Vue 不支持 IE8 以及更低版本浏览器的原因。 Vue 理解之白话 getter/setter https://github.com/vuejs/vue/blob/dev/dist/vue.js proxySetter reactiveSetter app.obj === app._data.obj Vue 响应式核心就是，getter 的时候会收集依赖，setter 的时候会触发依赖更新 Let var的作用域在函數(function) 裡 let的作用域則是在區塊(block) 裡 1 2 3 4 for ( var i= 0 ;i 10 ;i++)  console .log(i)  console .log(i) //window.i 全域 汙染整個作用域 1 2 3 4 5 6 let name = 'Jacob'  let name = 'Hsu'  console .log(name) //Jacob const 利用 const 可以做到除了被凍結 還能不被賦值 1 2 3 4 5 6 7 8 9 10 11 12 13 const person =  name: '黨工' , money: 500  person.name = '網軍' Object .freeze(person); person.money = 1000 ; person = ; // devTool console person // var  person // const let TDZ 1 2 3 4 5 6 7 8 9 10 let arg = 'first' ;  //創造 let arg; // 暫時性死區 TDZ 有hoisting但鎖住 //執行 console .log(arg); // first let arg = 'second'  1 let 一樣有創造階段 2 但從創造到實際宣告的階段會出現TDZ 這個區域無法呼叫變數 3 有創造到執行的概念，但不會預先出現 (文件不會表明這與 var 的Hoisting相同概念) ES6 Airbnb Airbnb 規範文件 (ES6 版本)： https://github.com/airbnb/javascript ESLint 安裝教學： https://www.youtube.com/watch?v=WiommcFaYvY ? How would you like to use ESLint? (Use arrow keys) To check syntax only To check syntax and find problems ❯ To check syntax, find problems, and enforce code style 如果要使用 Airbnb 的規範，請選擇最後一個選項。 箭頭函數 //沒有傳統函數 arguments 參數 1 2 3 4 const nums = function ( )  console .log( arguments );  nums( 10 , 50 , 100 , 50 , 5 , 1 ); 1 2 3 4 const nums = () =  console .log( arguments ); //Uncaught ReferenceError  nums( 10 , 50 , 100 , 50 , 5 , 1 ); 1 2 3 4 const nums = ( ...arg ) =  console .log(arg); //Uncaught ReferenceError  nums( 10 , 50 , 100 , 50 , 5 , 1 ); 箭頭函式沒有自己的this 他的this指向外層 1 2 3 4 5 6 7 const ele = document .querySelector( 'p' ); ele.addEventListener( 'click' , function ( )  console .log( this ) ); ele.addEventListener( 'click' , () = console .log( this ) //指到不一樣的位置 window 全域 ); 箭頭函數 常見問題 不能直接回傳物件實字 1 2 3 4 const arrFn = () =  data : 1  console .log(arrFn()) //undefined const arrFnr = () = ( data : 1 ) console .log(arrFnr()) //data: 1 搭配判斷式不能直接接箭頭函式 1 2 3 4 5 let num = 0 const numFn = num || () = 1 ; console .log(numFn) const numFunction = num || ( ( ) = 1 ); console .log(numFunction) // 加括號修正 物件裡面搭配箭頭函樹會出錯 指向是不同的 1 2 3 4 5 6 7 8 const app = new Vue( data:  num: 1 , created: () =  console .log( this .num) //FAIL  ) 平均數 1 2 3 4 5 6 7 8 9 10 const average = function ( )  // arguments 是類陣列沒有陣列方法 用Array.from轉成純陣列 const nums = Array .from( arguments ); const total = nums.reduce( function ( acc, val )  return acc + val , 0 ); // 0 是第一次執行的前一個值 console .log(total); return total / nums.length;  console .log(average( 1 , 2 , 3 , 4 , 5 )) // 15 3 Array.from() Array.reduce() 1 2 const average = ( ...nums ) = nums.reduce( ( acc, val ) = acc + val, 0 ) / nums.length console .log(average( 1 , 2 , 3 , 4 , 5 )) // 3"},"core.html#JavaScript-直譯器轉換過程":{"title":"JavaScript &#x76F4;&#x8B6F;&#x5668;&#x8F49;&#x63DB;&#x904E;&#x7A0B;","path":"\\javascript\\core.html#JavaScript-直譯器轉換過程","body":"&#x8A9E;&#x6CD5;&#x57FA;&#x672C;&#x55AE;&#x5143;&#x5316;(Tokenizing) &#x62BD;&#x8C61;&#x7D50;&#x69CB;&#x6A39;AST(Abstract Syntax Tree) &#x4EE3;&#x78BC;&#x751F;&#x6210; esprima.org Parser produces the (beautiful) syntax tree Lexical Scope &#x8A9E;&#x6CD5;&#x4F5C;&#x7528;&#x57DF; (&#x975C;&#x614B;&#x4F5C;&#x7528;&#x57DF;) &#x76F4;&#x8B6F;&#x5668; &#x975C;&#x614B;&#x4F5C;&#x7528;&#x57DF; &#x8A9E;&#x6CD5;&#x89E3;&#x6790;&#x6642;&#x5C31;&#x5DF2;&#x7D93;&#x78BA;&#x5B9A;&#x4F5C;&#x7528;&#x57DF; &#x4E0D;&#x6703;&#x6539;&#x8B8A; JS&#x5C6C;&#x65BC;&#x975C;&#x614B;&#x4F5C;&#x7528;&#x57DF; &#x57F7;&#x884C; &#x52D5;&#x614B;&#x4F5C;&#x7528;&#x57DF; &#x4F5C;&#x7528;&#x57DF;&#x662F;&#x51FD;&#x6578;&#x8ABF;&#x7528;&#x6642;&#x624D;&#x6C7A;&#x5B9A; &#x63D0;&#x5347;&#xFF08;Hoisting&#xFF09; &#x5728;&#x5275;&#x9020;&#x74B0;&#x5883;&#x628A;&#x8A18;&#x61B6;&#x9AD4;&#x7A7A;&#x9593;&#x6E96;&#x5099;&#x597D;&#xFF0C;&#x9019;&#x500B;&#x6D41;&#x7A0B;&#x7A31;&#x70BA; &#x63D0;&#x5347;&#xFF08;Hoisting&#xFF09; var name = &apos;Jacob&apos; // &#x5275;&#x9020;&#x74B0;&#x5883; name&#x653E;&#x5165;&#x8A18;&#x61B6;&#x9AD4; name = undefined 1 2 var name; //&#x5148;&#x5BA3;&#x544A;&#x8B8A;&#x6578; name = &apos;Jacob&apos; //&#x7136;&#x5F8C;&#x624D;&#x8CE6;&#x4E88;&#x503C; &#x57F7;&#x884C;&#x968E;&#x6BB5; &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F; &#x5728;&#x5275;&#x9020;&#x968E;&#x6BB5;&#x5C31;&#x6703; &#x512A;&#x5148;&#x8F09;&#x5165; &#x5275;&#x9020;&#x968E;&#x6BB5;&#x51FD;&#x5F0F;&#x5DF2;&#x53EF;&#x4EE5;&#x904B;&#x884C; 1 2 3 4 var a = &apos;1&apos; function fn ( ) { ... } a undefined fn function .. 1 2 3 4 fn() //&#x653E;&#x524D;&#x9762;&#x53EF;&#x56E0;&#x70BA; &#x5275;&#x9020;&#x968E;&#x6BB5; &#x5DF2;&#x53EF;&#x4EE5;&#x904B;&#x884C; function fn ( ) { console .log() } 1 2 3 4 5 fn() //&#x653E;&#x524D;&#x9762; uncaught typeError: fn is not a function console .log(fn) //undefined var fn = function ( ) { //&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log() } &#x5275;&#x9020;&#x968E;&#x6BB5;&#x51FD;&#x5F0F;&#x512A;&#x5148; 1 2 3 4 5 6 7 8 9 10 11 12 //&#x5275;&#x9020;&#x968E;&#x6BB5; function fn ( ) { console .log( 1 ) } var fn; //&#x57F7;&#x884C;&#x968E;&#x6BB5; fn = function ( ) { console .log( 2 ) } console .log(fn) //2 &#x7A0B;&#x5F0F; 1 2 3 4 5 function fn ( ) { console .log(a) } var a = &apos;hello&apos; fn() &#x5BE6;&#x969B;&#x904B;&#x4F5C;&#x62C6;&#x89E3; 1 2 3 4 5 6 7 8 //&#x5275;&#x9020;&#x968E;&#x6BB5; function fn ( ) { console .log(a) } var a; //&#x57F7;&#x884C;&#x968E;&#x6BB5; a = &apos;hello&apos; fn () 1 2 3 4 5 6 7 8 9 function fn ( ) { if (a) { // undefined &#x5728; JavaScript &#x4EE3;&#x8868;&#x8457; false console .log( &apos;hello&apos; ) } else { console .log( &apos;jacob&apos; ) } } fn() //&#x56E0;&#x70BA;&#x51FD;&#x5F0F;&#x5728;&#x57F7;&#x884C;&#x6642;&#xFF0C;&#x8B8A;&#x6578;&#x9084;&#x6C92;&#x6709;&#x88AB;&#x8CE6;&#x4E88;&#x503C; var a = true &#x540C;&#x6B65;/&#x975E;&#x540C;&#x6B65; JS&#x662F;&#x55AE;&#x57F7;&#x884C;&#x5E8F; &#x662F;&#x540C;&#x6B65;&#x7684; &#x53EF;&#x5229;&#x7528; &#x4E8B;&#x4EF6;&#x4F47;&#x5217; &#x5BE6;&#x73FE;&#x975E;&#x540C;&#x6B65; &#x540C;&#x6B65;&#x6982;&#x5FF5;&#x7684;&#x5148;&#x8DD1;&#x5B8C; &#x975E;&#x540C;&#x6B65;&#x884C;&#x70BA;&#x5148;&#x79FB;&#x81F3;&#x4E8B;&#x4EF6;&#x4F47;&#x5217; 1 2 3 setTimeout( function ( ) { console .log( &apos;someone call&apos; ) }, 3000 ) //&#x4E0D;&#x7BA1;&#x5982;&#x4F55;&#x8ABF;&#x6574;&#x79D2;&#x6578; &#x90FD;&#x4E0D;&#x6703;&#x512A;&#x5148;&#x57F7;&#x884C; 0&#x4E5F;&#x662F;&#x6700;&#x5F8C;&#x57F7;&#x884C; LHS 1= true 1 = true &#x6703;&#x51FA;&#x73FE; left-hand side (LHS)&#xFF0C;&#x5BE6;&#x969B;&#x4E0A;&#x5728;&#x6B64;&#x5C31;&#x7121;&#x6CD5;&#x7E7C;&#x7E8C;&#x57F7;&#x884C; Uncaught ReferenceError: Invalid left-hand side in assignment console.log(a) not defined &#x4F46;&#x5176;&#x5BE6;&#x662F; RHS &#x932F;&#x8AA4;&#xFF0C;&#x53EA;&#x662F; JavaScript &#x4E26;&#x4E0D;&#x6703;&#x76F4;&#x63A5;&#x986F;&#x793A; RHS &#x932F;&#x8AA4; &#x9673;&#x8FF0;&#x5F0F; &#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F;&#x8207;&#x5BA3;&#x544A;&#x5206;&#x985E; &#x904B;&#x7B97;&#x5F0F;&#x8207;&#x904B;&#x7B97;&#x5B50; &#x6B63;&#x898F;&#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F; &#x4E0D;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 ) {} // &#x7269;&#x4EF6;&#x5BE6;&#x5B57; var a = { name : Jacob } &#x7ACB;&#x5373;&#x51FD;&#x5F0F; (&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#提升（Hoisting）":{"title":"&#x63D0;&#x5347;&#xFF08;Hoisting&#xFF09;","path":"\\javascript\\core.html#提升（Hoisting）","body":"&#x5728;&#x5275;&#x9020;&#x74B0;&#x5883;&#x628A;&#x8A18;&#x61B6;&#x9AD4;&#x7A7A;&#x9593;&#x6E96;&#x5099;&#x597D;&#xFF0C;&#x9019;&#x500B;&#x6D41;&#x7A0B;&#x7A31;&#x70BA; &#x63D0;&#x5347;&#xFF08;Hoisting&#xFF09; var name = &apos;Jacob&apos; // &#x5275;&#x9020;&#x74B0;&#x5883; name&#x653E;&#x5165;&#x8A18;&#x61B6;&#x9AD4; name = undefined 1 2 var name; //&#x5148;&#x5BA3;&#x544A;&#x8B8A;&#x6578; name = &apos;Jacob&apos; //&#x7136;&#x5F8C;&#x624D;&#x8CE6;&#x4E88;&#x503C; &#x57F7;&#x884C;&#x968E;&#x6BB5; &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F; &#x5728;&#x5275;&#x9020;&#x968E;&#x6BB5;&#x5C31;&#x6703; &#x512A;&#x5148;&#x8F09;&#x5165; &#x5275;&#x9020;&#x968E;&#x6BB5;&#x51FD;&#x5F0F;&#x5DF2;&#x53EF;&#x4EE5;&#x904B;&#x884C; 1 2 3 4 var a = &apos;1&apos; function fn ( ) { ... } a undefined fn function .. 1 2 3 4 fn() //&#x653E;&#x524D;&#x9762;&#x53EF;&#x56E0;&#x70BA; &#x5275;&#x9020;&#x968E;&#x6BB5; &#x5DF2;&#x53EF;&#x4EE5;&#x904B;&#x884C; function fn ( ) { console .log() } 1 2 3 4 5 fn() //&#x653E;&#x524D;&#x9762; uncaught typeError: fn is not a function console .log(fn) //undefined var fn = function ( ) { //&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log() } &#x5275;&#x9020;&#x968E;&#x6BB5;&#x51FD;&#x5F0F;&#x512A;&#x5148; 1 2 3 4 5 6 7 8 9 10 11 12 //&#x5275;&#x9020;&#x968E;&#x6BB5; function fn ( ) { console .log( 1 ) } var fn; //&#x57F7;&#x884C;&#x968E;&#x6BB5; fn = function ( ) { console .log( 2 ) } console .log(fn) //2 &#x7A0B;&#x5F0F; 1 2 3 4 5 function fn ( ) { console .log(a) } var a = &apos;hello&apos; fn() &#x5BE6;&#x969B;&#x904B;&#x4F5C;&#x62C6;&#x89E3; 1 2 3 4 5 6 7 8 //&#x5275;&#x9020;&#x968E;&#x6BB5; function fn ( ) { console .log(a) } var a; //&#x57F7;&#x884C;&#x968E;&#x6BB5; a = &apos;hello&apos; fn () 1 2 3 4 5 6 7 8 9 function fn ( ) { if (a) { // undefined &#x5728; JavaScript &#x4EE3;&#x8868;&#x8457; false console .log( &apos;hello&apos; ) } else { console .log( &apos;jacob&apos; ) } } fn() //&#x56E0;&#x70BA;&#x51FD;&#x5F0F;&#x5728;&#x57F7;&#x884C;&#x6642;&#xFF0C;&#x8B8A;&#x6578;&#x9084;&#x6C92;&#x6709;&#x88AB;&#x8CE6;&#x4E88;&#x503C; var a = true &#x540C;&#x6B65;/&#x975E;&#x540C;&#x6B65; JS&#x662F;&#x55AE;&#x57F7;&#x884C;&#x5E8F; &#x662F;&#x540C;&#x6B65;&#x7684; &#x53EF;&#x5229;&#x7528; &#x4E8B;&#x4EF6;&#x4F47;&#x5217; &#x5BE6;&#x73FE;&#x975E;&#x540C;&#x6B65; &#x540C;&#x6B65;&#x6982;&#x5FF5;&#x7684;&#x5148;&#x8DD1;&#x5B8C; &#x975E;&#x540C;&#x6B65;&#x884C;&#x70BA;&#x5148;&#x79FB;&#x81F3;&#x4E8B;&#x4EF6;&#x4F47;&#x5217; 1 2 3 setTimeout( function ( ) { console .log( &apos;someone call&apos; ) }, 3000 ) //&#x4E0D;&#x7BA1;&#x5982;&#x4F55;&#x8ABF;&#x6574;&#x79D2;&#x6578; &#x90FD;&#x4E0D;&#x6703;&#x512A;&#x5148;&#x57F7;&#x884C; 0&#x4E5F;&#x662F;&#x6700;&#x5F8C;&#x57F7;&#x884C; LHS 1= true 1 = true &#x6703;&#x51FA;&#x73FE; left-hand side (LHS)&#xFF0C;&#x5BE6;&#x969B;&#x4E0A;&#x5728;&#x6B64;&#x5C31;&#x7121;&#x6CD5;&#x7E7C;&#x7E8C;&#x57F7;&#x884C; Uncaught ReferenceError: Invalid left-hand side in assignment console.log(a) not defined &#x4F46;&#x5176;&#x5BE6;&#x662F; RHS &#x932F;&#x8AA4;&#xFF0C;&#x53EA;&#x662F; JavaScript &#x4E26;&#x4E0D;&#x6703;&#x76F4;&#x63A5;&#x986F;&#x793A; RHS &#x932F;&#x8AA4; &#x9673;&#x8FF0;&#x5F0F; &#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F;&#x8207;&#x5BA3;&#x544A;&#x5206;&#x985E; &#x904B;&#x7B97;&#x5F0F;&#x8207;&#x904B;&#x7B97;&#x5B50; &#x6B63;&#x898F;&#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F; &#x4E0D;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 ) {} // &#x7269;&#x4EF6;&#x5BE6;&#x5B57; var a = { name : Jacob } &#x7ACB;&#x5373;&#x51FD;&#x5F0F; (&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#同步-非同步":{"title":"&#x540C;&#x6B65;/&#x975E;&#x540C;&#x6B65;","path":"\\javascript\\core.html#同步-非同步","body":"JS&#x662F;&#x55AE;&#x57F7;&#x884C;&#x5E8F; &#x662F;&#x540C;&#x6B65;&#x7684; &#x53EF;&#x5229;&#x7528; &#x4E8B;&#x4EF6;&#x4F47;&#x5217; &#x5BE6;&#x73FE;&#x975E;&#x540C;&#x6B65; &#x540C;&#x6B65;&#x6982;&#x5FF5;&#x7684;&#x5148;&#x8DD1;&#x5B8C; &#x975E;&#x540C;&#x6B65;&#x884C;&#x70BA;&#x5148;&#x79FB;&#x81F3;&#x4E8B;&#x4EF6;&#x4F47;&#x5217; 1 2 3 setTimeout( function ( ) { console .log( &apos;someone call&apos; ) }, 3000 ) //&#x4E0D;&#x7BA1;&#x5982;&#x4F55;&#x8ABF;&#x6574;&#x79D2;&#x6578; &#x90FD;&#x4E0D;&#x6703;&#x512A;&#x5148;&#x57F7;&#x884C; 0&#x4E5F;&#x662F;&#x6700;&#x5F8C;&#x57F7;&#x884C; LHS 1= true 1 = true &#x6703;&#x51FA;&#x73FE; left-hand side (LHS)&#xFF0C;&#x5BE6;&#x969B;&#x4E0A;&#x5728;&#x6B64;&#x5C31;&#x7121;&#x6CD5;&#x7E7C;&#x7E8C;&#x57F7;&#x884C; Uncaught ReferenceError: Invalid left-hand side in assignment console.log(a) not defined &#x4F46;&#x5176;&#x5BE6;&#x662F; RHS &#x932F;&#x8AA4;&#xFF0C;&#x53EA;&#x662F; JavaScript &#x4E26;&#x4E0D;&#x6703;&#x76F4;&#x63A5;&#x986F;&#x793A; RHS &#x932F;&#x8AA4; &#x9673;&#x8FF0;&#x5F0F; &#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F;&#x8207;&#x5BA3;&#x544A;&#x5206;&#x985E; &#x904B;&#x7B97;&#x5F0F;&#x8207;&#x904B;&#x7B97;&#x5B50; &#x6B63;&#x898F;&#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F; &#x4E0D;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 ) {} // &#x7269;&#x4EF6;&#x5BE6;&#x5B57; var a = { name : Jacob } &#x7ACB;&#x5373;&#x51FD;&#x5F0F; (&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#LHS":{"title":"LHS","path":"\\javascript\\core.html#LHS","body":"1= true 1 = true &#x6703;&#x51FA;&#x73FE; left-hand side (LHS)&#xFF0C;&#x5BE6;&#x969B;&#x4E0A;&#x5728;&#x6B64;&#x5C31;&#x7121;&#x6CD5;&#x7E7C;&#x7E8C;&#x57F7;&#x884C; Uncaught ReferenceError: Invalid left-hand side in assignment console.log(a) not defined &#x4F46;&#x5176;&#x5BE6;&#x662F; RHS &#x932F;&#x8AA4;&#xFF0C;&#x53EA;&#x662F; JavaScript &#x4E26;&#x4E0D;&#x6703;&#x76F4;&#x63A5;&#x986F;&#x793A; RHS &#x932F;&#x8AA4; &#x9673;&#x8FF0;&#x5F0F; &#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F;&#x8207;&#x5BA3;&#x544A;&#x5206;&#x985E; &#x904B;&#x7B97;&#x5F0F;&#x8207;&#x904B;&#x7B97;&#x5B50; &#x6B63;&#x898F;&#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F; &#x4E0D;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 ) {} // &#x7269;&#x4EF6;&#x5BE6;&#x5B57; var a = { name : Jacob } &#x7ACB;&#x5373;&#x51FD;&#x5F0F; (&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#陳述式-表達式":{"title":"&#x9673;&#x8FF0;&#x5F0F; &#x8868;&#x9054;&#x5F0F;","path":"\\javascript\\core.html#陳述式-表達式","body":"&#x9673;&#x8FF0;&#x5F0F;&#x8207;&#x5BA3;&#x544A;&#x5206;&#x985E; &#x904B;&#x7B97;&#x5F0F;&#x8207;&#x904B;&#x7B97;&#x5B50; &#x6B63;&#x898F;&#x8868;&#x9054;&#x5F0F; &#x9673;&#x8FF0;&#x5F0F; &#x4E0D;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 // expression 100 + 100 // statement var foo; if ( 1 == 1 ) {} // &#x7269;&#x4EF6;&#x5BE6;&#x5B57; var a = { name : Jacob } &#x7ACB;&#x5373;&#x51FD;&#x5F0F; (&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#立即函式":{"title":"&#x7ACB;&#x5373;&#x51FD;&#x5F0F;","path":"\\javascript\\core.html#立即函式","body":"(&#x533F;&#x540D;&#x51FD;&#x5F0F;()) // &#x533F;&#x540D;&#x51FD;&#x5F0F; &#x5916;&#x5C64;&#x5C0F;&#x62EC;&#x865F;&#x5305;&#x8D77;&#x4F86; &#x4E26;&#x4E14;&#x5728;&#x5F8C;&#x9762;&#x52A0;&#x5165;() &#x4F86;&#x7ACB;&#x5373;&#x57F7;&#x884C;&#x51FD;&#x5F0F; 1 2 3 ( function ( ) { console .log( &apos;Jacob&apos; ) }()) ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165; &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#ASI-自動分號插入":{"title":"ASI &#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;","path":"\\javascript\\core.html#ASI-自動分號插入","body":"&#x81EA;&#x52D5;&#x5206;&#x865F;&#x63D2;&#x5165;( automatic semicolon insertion, ASI ) &#x662F;&#x4E00;&#x7A2E;&#x7A0B;&#x5E8F;&#x89E3;&#x6790;&#x6280;&#x8853;&#xFF0C; &#x5B83;&#x5728;JavaScript &#x7A0B;&#x5E8F;&#x7684;&#x8A9E;&#x6CD5;&#x5206;&#x6790;(parsing) &#x968E;&#x6BB5;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x201C;&#x4E0D;&#x6703;&#x201D; &#x767C;&#x751F; ASI &#x7684;&#x898F;&#x5247;&#xFF1A; &#x65B0;&#x7684;&#x4E00;&#x884C;&#x662F; ( &#x3001; [ &#x3001; / &#x958B;&#x59CB; (&#x5BB9;&#x6613;&#x51FA;&#x932F;&#x7684;&#x5730;&#x65B9;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; + &#x3001; - &#x3001; * &#x3001; % &#x4F5C;&#x958B;&#x59CB; (&#x6703;&#x5F71;&#x97FF;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x65B0;&#x7684;&#x4E00;&#x884C;&#x4EE5; , &#x3001; . &#x4F5C;&#x958B;&#x59CB; (&#x9700;&#x6CE8;&#x610F;&#x57F7;&#x884C;&#x7D50;&#x679C;) &#x9047;&#x5230;&#x4EE5;&#x4E0A;&#x7684;&#x6A19;&#x9EDE;&#x7B26;&#x865F; &#x524D;&#x65B9;&#x52A0;&#x5165;&#x5206;&#x865F; &#x662F;&#x89E3;&#x6C7A;&#x8FA6;&#x6CD5; 1 2 3 4 5 6 7 // &#x57F7;&#x884C;&#x932F;&#x8AA4; ( function ( ) { })() ( function ( ) { })() // &#x6B63;&#x78BA; ;( function ( ) { })() ;( function ( ) { })() 1 2 3 4 5 var a = 1 ( function ( ) { console .log(a); })() // var a = 1(function(){ console.log(a);})() &#x52D5;&#x614B;&#x578B;&#x5225; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#動態型別":{"title":"&#x52D5;&#x614B;&#x578B;&#x5225;","path":"\\javascript\\core.html#動態型別","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x6703;&#x8CE6;&#x4E88;&#x78BA;&#x7ACB;&#x578B;&#x5225; var myName = &apos;Jacob&apos; var myName; // &#x5148;&#x8CE6;&#x4E88;&#x547D;&#x540D;&#x7A7A;&#x9593; myName = &apos;Jacob&apos; //&#x57F7;&#x884C;&#x968E;&#x6BB5;&#x624D;&#x78BA;&#x8A8D;&#x578B;&#x5225; console .log( typeof myName) console .log( typeof &apos;Jacob&apos; ) //&#x986F;&#x6027;&#x7684;&#x8F49;&#x63DB; explicit conversion //&#x96B1;&#x6027;&#x7684;&#x8F49;&#x63DB; implicit conversion var num = 1 //number num = num + &apos;&apos; //string num = num * 3 //number console .log(num, typeof num) &#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#原始型別及物件型別":{"title":"&#x539F;&#x59CB;&#x578B;&#x5225;&#x53CA;&#x7269;&#x4EF6;&#x578B;&#x5225;","path":"\\javascript\\core.html#原始型別及物件型別","body":"&#x539F;&#x59CB;&#x578B;&#x5225; &#x53EF;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; 1 2 3 4 a = &apos;Jacob&apos; var e = new String (a) //&#x4F46;&#x662F;&#x539F;&#x59CB;&#x578B;&#x5225;&#x76E1;&#x91CF;&#x4E0D;&#x7528;&#x6B64;&#x65B9;&#x5F0F; &#x5EFA;&#x69CB;&#x5F0F; &#x5BA3;&#x544A; console .log(a, e) console .log( typeof e) // &#x5EFA;&#x69CB;&#x5F0F;&#x5BA3;&#x544A;&#x7684;&#x975E;&#x539F;&#x59CB;&#x578B;&#x5225; &#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x51E1;&#x662F;&#x4F7F;&#x7528; new &#x6240;&#x5EFA;&#x69CB;&#x7684;&#x578B;&#x5225;&#xFF0C;&#x5728; typeof &#x90FD;&#x6703;&#x662F; object &#x900F;&#x904E;&#x5EFA;&#x69CB;&#x5F0F;&#x4F86;&#x5EFA;&#x7ACB;&#x7684;&#x7269;&#x4EF6;&#xFF0C; var a = new Object(); if(a) &#x4E00;&#x6A23;&#x662F;&#x6703;&#x88AB;&#x5224;&#x5B9A; true&#xFF0C;&#x56E0;&#x70BA;&#x7269;&#x4EF6;&#x7684;&#x8A18;&#x61B6;&#x9AD4;&#x5DF2;&#x7D93;&#x5B58;&#x5728;&#x4E86; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#運算子":{"title":"&#x904B;&#x7B97;&#x5B50;","path":"\\javascript\\core.html#運算子","body":"&#x904B;&#x7B97;&#x5B50; &#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F; &#x8CE6;&#x503C;&#x7684;&#x512A;&#x5148;&#x6027;&#x5F88;&#x4F4E;&#x53EA;&#x6709;3 Assignment console.log(123); //true console.log(321); //false console.log(32) // true console.log(11) // false a = b = 3 // a&#x662F;&#x6536; 3&#x8CE6;&#x4E88;&#x81F3;b&#x7684; &#x2018;&#x56DE;&#x50B3;&#x7D50;&#x679C;&#x2019; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const b = {}; Object .defineProperty(b, &apos;a&apos; , { value: 2 , writable: false }) b.a = 3 console .log(b.a) //2 var a = 3 ; a = b.a = 1 ; console .log(a, b.a) // 1, 2 // b.a &#x662F;&#x8868;&#x9054;&#x5F0F; &#x63A5;&#x6536; 1 b.a = 1 &#x8DDF; b.a&#x6C92;&#x6709;&#x95DC;&#x9023;&#x6027; Operators/Operator_Precedence 1 2 3 4 var a = 10 ; console .log(++a*a) //a + 1 11*11 121 var a = 10 ; console .log(--a*a) //9*9 81 1 2 3 4 5 6 7 8 9 var a = 1 , b = 2 , c= 0 ; console .log(c || c &amp;&amp; c || a) // \tLogical AND 6 \t Logical OR 5 &#x5F9E;&#x5DE6;&#x81F3;&#x53F3; console .log(c || 0 &amp;&amp; 0 || a) console .log(c || 0 || a) console .log( 0 || 0 || a) console .log( 0 || a) console .log( 0 || 1 ) console .log( 1 ) 1 2 3 4 5 6 7 8 var a = 1 + 1 === 1 console .log(a = 2 === 1 ) console .log( false ) 1000  10000  10 console .log( true  10 ) console .log( 1  10 ) console .log( true ) 1 2 3 4 5 6 7 8 9 10 var a = &apos;1&apos; ; var b = 2 ; var c = (ab) ? a*b : sum(a,b); function sum ( a, b ) { return a+b} console .log( &apos;1&apos;  2 ) console .log( 1  2 ) // ture sum(a,b) console .log( &apos;1&apos; + 2 ) //12 string&#x578B;&#x5225;&#x76F8;&#x52A0; console .log(c)) console .log( 12 ) &#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#嚴格相等-寬鬆相等":{"title":"&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x5BEC;&#x9B06;&#x76F8;&#x7B49;","path":"\\javascript\\core.html#嚴格相等-寬鬆相等","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 console .log( 1 ) //&#x6578;&#x5B57;1 &#x85CD;&#x8272; console .log( &apos;1&apos; ) //&#x5B57;&#x4E32;1 &#x9ED1;&#x8272; //&#x56B4;&#x683C;&#x76F8;&#x7B49; &#x7279;&#x6B8A;&#x72C0;&#x6CC1; console .log( NaN === NaN ) //false console .log(+ 0 === -0 ) //true //&#x5BEC;&#x9B06;&#x76F8;&#x7B49; console .log( 1 == &apos;1&apos; ) // true &#x5E03;&#x6797;&#x548C;&#x5B57;&#x4E32;&#x8F49;&#x70BA;&#x6578;&#x503C; console .log( Number ( &apos;1&apos; )) console .log( Number ( &apos;0x11&apos; )) //17 0x&#x662F;&#x6307;&#x5341;&#x516D;&#x9032;&#x5236;&#x6578; 16+1 console .log( 17 == &apos;0x11&apos; ) //true //Null Undefined &#x4E0D;&#x6703;&#x8F49;&#x6578;&#x5B57;&#x578B;&#x5225; console .log( Number ( null )) //0 console .log( Number ( undefined )) //NaM console .log( null == undefined ) //true console .log( null === undefined ) //false // &#x7269;&#x4EF6;&#x8207;&#x975E;&#x7269;&#x4EF6; &#x4F7F;&#x7528;&#x5305;&#x88F9;&#x7269;&#x4EF6;&#x8F49;&#x63DB; (Number String) console .log([ 10 ]) console .log( 10 == [ 10 ]) // [10] Number([10]) 10 console .log( { A : &apos;A&apos; }) //__proto__: Object console .log( String ({ A : &apos;A&apos; })) // [object Object] //&#x7269;&#x4EF6;&#x8207;&#x7269;&#x4EF6; &#x6BD4;&#x5C0D;&#x7684;&#x4E0D;&#x662F;&#x503C; &#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; &#x53C3;&#x8003;&#x540C;&#x4E00;&#x500B;&#x8A18;&#x61B6;&#x9AD4; console .log( {}=={} ) //false &#x7269;&#x4EF6;&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740;&#x4E0D;&#x540C; console .log( []==[] ) //false &#x540C;&#x6A23;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225; &#x6BD4;&#x5C0D;&#x7684;&#x90FD;&#x662F;&#x53C3;&#x8003;&#x4F4D;&#x5740; var a = [] var b = a ; //b&#x53D6;&#x5F97;&#x7684;&#x662F;a&#x7684;&#x53C3;&#x8003;&#x4F4D;&#x5740; console .log( a===b) //a,b&#x4F7F;&#x7528;&#x540C;&#x500B;&#x53C3;&#x8003;&#x4F4D;&#x5740; JavaScript Equality Table Truthy Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#Truthy":{"title":"Truthy","path":"\\javascript\\core.html#Truthy","body":"Truthy&#xFF08;&#x771F;&#x503C;&#xFF09; console.log(new Boolean(false)) //Boolean{false} &#x7269;&#x4EF6; proto : Object 1 2 3 4 5 if ( new Boolean ( false )) { console .log( &apos;Truthy&apos; ) } else { console .log( &apos;Falsy&apos; ) } &#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#邏輯運算子及函式預設值":{"title":"&#x908F;&#x8F2F;&#x904B;&#x7B97;&#x5B50;&#x53CA;&#x51FD;&#x5F0F;&#x9810;&#x8A2D;&#x503C;","path":"\\javascript\\core.html#邏輯運算子及函式預設值","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 console .log( 1 &amp;&amp; 2 ) //2 console .log(![]) //false // &#x9810;&#x8A2D;&#x503C;&#x70BA; 0 &#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x904B;&#x7B97;&#x5B50; // &#x7576; cash &#x662F;&#x6578;&#x503C;&#x6216;&#x70BA; 0 &#x6642;&#xFF0C;&#x4F7F;&#x7528; cash &#x7684;&#x6578;&#x503C; // &#x5982;&#x679C; cash &#x662F; NaN &#x6642;&#xFF0C;&#x5247;&#x76F4;&#x63A5;&#x5957;&#x7528; 500 cash = (cash || cash === 0 )? cash: 500 ; // or &#x5DE6;&#x53F3;&#x5169;&#x908A;&#x653E;&#x7684;&#x662F;&#x8868;&#x9054;&#x5F0F; `` ` # &#x7269;&#x4EF6;&#x53D6;&#x503C; [&#x6C42;&#x503C;&#x7B56;&#x7565;](https://zh.wikipedia.org/wiki/&#x6C42;&#x503C;&#x7B56;&#x7565;) &#x9EDE; &#x8207; &#x4E2D;&#x62EC;&#x5F27;(&#x53EF;&#x7528;&#x8B8A;&#x6578;&#x65B9;&#x5F0F;) &#x7269;&#x4EF6;&#x53D6;&#x503C;&#x5C6C;&#x6027;&#x7528;&#x5B57;&#x4E32; ` `` js const family = { name: &apos;Hsu&apos; , members: { mon: &apos;mon&apos; , dad: &apos;dad&apos; }, others: &apos;others&apos; , 1 : 10 , &apos;$-myFamily&apos; : &apos;my family&apos; , callFamily: function ( ) { console .log( &apos;call family&apos; ) }, &apos;Hello&apos; : function ( ) { console .log( &apos;I am groot &apos; ) } } //&#x7269;&#x4EF6;&#x5BE6;&#x5B57; console .log(family.name); console .log(family[ &apos;name&apos; ]); const a = &apos;name&apos; ; console .log(family[a]); console .log(family[ 1 ]) //OK console .log(family .1 ) //FAIL family.callFamily(); family[ &apos;callFamily&apos; ](); //add family[ &apos;$&apos; ] = &apos;money&apos; delete family.others delete family[ &apos;$&apos; ] //&#x5229;&#x7528;&#x9663;&#x5217;&#x53CA;for&#x8FF4;&#x5708; &#x57F7;&#x884C;&#x7269;&#x4EF6;&#x7684;&#x51FD;&#x5F0F; var familyMethod = [ &apos;callFamily&apos; , &apos;Hello&apos; ] for ( var i= 0 ; i familyMethod.length;i++) { console .log(familyMethod[i]) family[familyMethod[i]](); } 1 2 3 4 5 6 7 //&#x8B8A;&#x6578;&#x7121;&#x6CD5;&#x88AB;&#x522A;&#x9664;&#xFF0C;&#x5C6C;&#x6027;&#x624D;&#x53EF;&#x4EE5; var a= 1 ; //&#x8B8A;&#x6578; b= 2 ; //&#x5C6C;&#x6027; console .log( window ) delete a; delete b; //b is not defind console .log( window )"},"core.html#物件記憶體空間":{"title":"&#x7269;&#x4EF6;&#x8A18;&#x61B6;&#x9AD4;&#x7A7A;&#x9593;","path":"\\javascript\\core.html#物件記憶體空間","body":"1 2 3 4 5 var person = { name: &apos;Jacob&apos; } var person2 = person person2 = &apos;Hsu&apos; //find 0x01 change name&apos;s value &#x53C3;&#x8003;&#x7269;&#x4EF6; Value 0x01 name Jacob &#x7269;&#x4EF6;&#x8B8A;&#x6578; Value person 0x01 person2 0x01 1 2 3 4 5 6 7 8 // &#x898B;&#x5927;&#x62EC;&#x865F; &#x751F;&#x6210;&#x65B0;&#x7684;&#x53C3;&#x8003;&#x7269;&#x4EF6; var company = { team: &apos;dev&apos; , member: { rd: &apos;Jacob&apos; qa: &apos;Claire&apos; } } &#x53C3;&#x8003;&#x7269;&#x4EF6; Value 0x01 team dev member 0x02 | 0x02 | | | rd | Jacob | | qa | Claire | &#x7269;&#x4EF6;&#x8B8A;&#x6578; Value company 0x01 &#x7D14;&#x503C;&#x7121;&#x6CD5;&#x65B0;&#x589E;&#x5C6C;&#x6027; js&#x5169;&#x7A2E;&#x578B;&#x5225; &#x4E0D;&#x662F;&#x7D14;&#x503C; &#x5C31;&#x662F;&#x7269;&#x4EF6; (function&#x662F;&#x7269;&#x4EF6;) 1 2 3 4 5 6 7 8 9 10 11 12 13 var newStr = &apos;myname&apos; //&#x7D14;&#x503C; newStr.name = &apos;Jacob&apos; console .log(newStr) var newStr2 = new String ( &apos;myname&apos; ) //&#x5EFA;&#x69CB;&#x5F0F; &#x7269;&#x4EF6; newStr2.name = &apos;Jacob&apos; console .log(newStr2) function callFn ( ) { console .log( &apos;fun&apos; ) } console .log(callFn) console .dir(callFn) //&#x770B;&#x898B;&#x7269;&#x4EF6;&#x6240;&#x6709;&#x5C6C;&#x6027;&#x5167;&#x5BB9; &#x7D14;&#x503C; &#x50B3;&#x503C;(call by value) &#x7269;&#x4EF6;(&#x9663;&#x5217; &#x51FD;&#x5F0F;)) &#x50B3;&#x53C3;&#x8003;(call by reference) &#x6DF1;&#x6DFA;&#x62F7;&#x8C9D; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 var family = { name: &apos;Hsu&apos; , member: { father: &apos;dad&apos; , monther: &apos;mom&apos; , other: &apos;someone&apos; } } var newFamily = {} for ( var key in family) { console .log(key, family[key]); newFamily[key] =family[key]; } newFamily.name = &apos;Chen&apos; console .log(family, newFamily) newFamily.member.other = &apos;stranger&apos; console .log(family, newFamily) //for in&#x53EA;&#x80FD;&#x505A;&#x7B2C;&#x4E00;&#x5C64;&#x7684;&#x8907;&#x88FD; &#x7B2C;&#x4E8C;&#x5C64;&#x662F;&#x50B3;&#x53C3;&#x8003;&#x7684;&#x5F62;&#x5F0F; //&#x6DFA;&#x5C64;&#x8907;&#x88FD; js for in, jQuery extend, ES6 assign //jQuery var newFamily2 = jQuery.extend({}, family); //ES6 var newFamily3 = Object .assign({}, family) //&#x6DF1;&#x5C64;&#x8907;&#x88FD; deep copy &#x6703;&#x5C07;&#x539F;&#x672C;&#x7684;&#x7269;&#x4EF6;&#x8F49;&#x6210;&#x5B57;&#x4E32;&#x518D;&#x8F49;&#x56DE;&#x4F86; &#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027;&#x6703;&#x6C92;&#x6709; //console.log(family, JSON.stringify(family)) console .log(family, JSON .parse( JSON .stringify(family) )) var newFamily4 = JSON .parse( JSON .stringify(family) ); console .log(family === newFamily4) newFamily4.name = &apos;Liao&apos; newFamily4.member.other = &apos;Deep&apos; console .log(family, newFamily4) //&#x5169;&#x8005;&#x5B8C;&#x5168;&#x7121;&#x95DC; &#x53C3;&#x8003;&#x4E5F;&#x90FD;&#x4E0D;&#x4E00;&#x6A23; &#x9663;&#x5217; &#x9663;&#x5217;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225;&#x7684;&#x4E00;&#x7A2E; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var newArray = [ 1 , &apos;Str&apos; , true , { name: &apos;Jacob&apos; } ]; console .log(newArray[ 3 ]); //[object Object] { name: Jacob} console .log(newArray .3 ); //error newArray.push( 5 ); newArray.name = &apos;Hsu&apos; ; //&#x7269;&#x4EF6;&#x53EF;&#x96A8;&#x610F;&#x589E;&#x52A0;&#x5C6C;&#x6027; newArray[ 5 ] = &apos;Chen&apos; ; newArray[ 7 ] = &apos;Liao&apos; ; //&#x9663;&#x5217;6 empty &#x53D6;&#x503C;undefined console .log(newArray); //name&#x4E0D;&#x5C6C;&#x65BC;&#x9663;&#x5217;&#x88E1;&#x9762;&#x7684;&#x9577;&#x5EA6; for ( var i= 0 ;inewArray.length;i++) { console .log(newArray[i]) } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a = [ 1 , 2 , 3 ]; console .log(a, a[ 1 ], a.length) //forEach &#x4E0D;&#x662F;&#x5BE6;&#x9AD4;&#x5C6C;&#x6027; &#x662F;&#x9663;&#x5217;&#x539F;&#x578B;&#x7684;&#x5C6C;&#x6027; a.forEach( function ( i ) { console .log(i) }); ( 3 )&#xA0;[ 1 , 2 , 3 ] 0 : 1 1 : 2 2 : 3 length: 3 // length &#x4E5F;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#x7684;&#x5C6C;&#x6027; __proto__: Array ( 0 ) //&#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x53EF;&#x4EE5;&#x900F;&#x904E;&#x9EDE;&#x904B;&#x7B97;&#x5B50;&#x4E0D;&#x65B7;&#x5411;&#x4E0A;&#x67E5;&#x627E;&#x53D6;&#x5F97;&#x65B9;&#x6CD5; &#x4F8B;:forEach ... __proto__: Object // &#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x7E7C;&#x627F;&#x7269;&#x4EF6;&#x7684;&#x539F;&#x578B; &#x6240;&#x4EE5;&#x9663;&#x5217;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7269;&#x4EF6;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5; &#x4F8B;:toString 1 2 3 4 5 6 7 8 var a = [ 1 , 2 , 3 ]; var b = [ 4 , 5 , 6 ]; //&#x65B0;&#x589E;&#x65B9;&#x6CD5;&#x5230;&#x539F;&#x578B;&#x93C8;&#x4E0A; a.__proto__.getLast = function ( ) { return this [ this .length -1 ]; //b[b.length-1] } console .log(a, b, a.getLast(), a.toString()) JSON JSON - &#x7DAD;&#x57FA;&#x767E;&#x79D1; &#x5118;&#x7BA1;JSON&#x662F;JavaScript&#x7684;&#x4E00;&#x500B;&#x5B50;&#x96C6;&#xFF0C;&#x4F46;JSON&#x662F;&#x7368;&#x7ACB;&#x65BC;&#x8A9E;&#x8A00;&#x7684;&#x6587;&#x5B57;&#x683C;&#x5F0F; JSON&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x4E00;&#x5B9A;&#x90FD;&#x662F;&#x5B57;&#x4E32;&#x7684;&#x5F62;&#x5F0F; &#x7269;&#x4EF6;&#x53EF;&#x4EE5;&#x7528;&#x55AE;&#x5F15;&#x865F; &apos; &#x4F46;JSON&#x4E00;&#x5F8B;&#x7528;&#x96D9;&#x5F15;&#x865F;  SON &#x7684;&#x683C;&#x5F0F;&#x662F;&#x975E;&#x5E38;&#x56B4;&#x683C;&#x7684;&#xFF0C;&#x591A;&#x4E00;&#x500B;&#x9017;&#x865F;&#x5C11;&#x4E00;&#x500B;&#x9017;&#x865F;&#xFF0C;&#x90FD;&#x6703;&#x5C0E;&#x81F4;&#x51FA;&#x73FE;&#x932F;&#x8AA4;&#xFF0C; &#x6240;&#x4EE5;&#x6700;&#x5F8C;&#x4E00;&#x7B46;&#x4E0D;&#x53EF;&#x591A;&#x4E86;&#x4E00;&#x500B;&#x9017;&#x865F; &#x900F;&#x904E; JSON.parse() &#x51FA;&#x4F86;&#x7684;&#x8CC7;&#x6599;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x7269;&#x4EF6;&#x6703;&#x6709;&#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027; &#x5F8C;&#x7E8C;&#x7684;&#x503C;&#x8B8A;&#x66F4;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x503C;&#x4E5F;&#x6703;&#x8B8A;&#x66F4; &#x539F;&#x751F;AJAX&#x8B80;JSON 1 2 3 4 5 6 7 8 9 10 //&#x539F;&#x751F;AJAX function getData ( ) { console .log( this .response) var data = JSON .parse( this .response); console .log(data); } var oReq = new XMLHttpRequest(); oReq.addEventListener( load , getData); oReq.open( GET , family.json ) //&#x50B3;&#x5165;&#x7684;&#x5B57;&#x4E32; oReq.send(); &#x900F;&#x904E;&#x958B;&#x767C;&#x5DE5;&#x5177;Network&#x53EF;&#x4EE5;&#x770B;&#x7D50;&#x679C; function &#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#純值無法新增屬性":{"title":"&#x7D14;&#x503C;&#x7121;&#x6CD5;&#x65B0;&#x589E;&#x5C6C;&#x6027;","path":"\\javascript\\core.html#純值無法新增屬性","body":"js&#x5169;&#x7A2E;&#x578B;&#x5225; &#x4E0D;&#x662F;&#x7D14;&#x503C; &#x5C31;&#x662F;&#x7269;&#x4EF6; (function&#x662F;&#x7269;&#x4EF6;) 1 2 3 4 5 6 7 8 9 10 11 12 13 var newStr = &apos;myname&apos; //&#x7D14;&#x503C; newStr.name = &apos;Jacob&apos; console .log(newStr) var newStr2 = new String ( &apos;myname&apos; ) //&#x5EFA;&#x69CB;&#x5F0F; &#x7269;&#x4EF6; newStr2.name = &apos;Jacob&apos; console .log(newStr2) function callFn ( ) { console .log( &apos;fun&apos; ) } console .log(callFn) console .dir(callFn) //&#x770B;&#x898B;&#x7269;&#x4EF6;&#x6240;&#x6709;&#x5C6C;&#x6027;&#x5167;&#x5BB9; &#x7D14;&#x503C; &#x50B3;&#x503C;(call by value) &#x7269;&#x4EF6;(&#x9663;&#x5217; &#x51FD;&#x5F0F;)) &#x50B3;&#x53C3;&#x8003;(call by reference) &#x6DF1;&#x6DFA;&#x62F7;&#x8C9D; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 var family = { name: &apos;Hsu&apos; , member: { father: &apos;dad&apos; , monther: &apos;mom&apos; , other: &apos;someone&apos; } } var newFamily = {} for ( var key in family) { console .log(key, family[key]); newFamily[key] =family[key]; } newFamily.name = &apos;Chen&apos; console .log(family, newFamily) newFamily.member.other = &apos;stranger&apos; console .log(family, newFamily) //for in&#x53EA;&#x80FD;&#x505A;&#x7B2C;&#x4E00;&#x5C64;&#x7684;&#x8907;&#x88FD; &#x7B2C;&#x4E8C;&#x5C64;&#x662F;&#x50B3;&#x53C3;&#x8003;&#x7684;&#x5F62;&#x5F0F; //&#x6DFA;&#x5C64;&#x8907;&#x88FD; js for in, jQuery extend, ES6 assign //jQuery var newFamily2 = jQuery.extend({}, family); //ES6 var newFamily3 = Object .assign({}, family) //&#x6DF1;&#x5C64;&#x8907;&#x88FD; deep copy &#x6703;&#x5C07;&#x539F;&#x672C;&#x7684;&#x7269;&#x4EF6;&#x8F49;&#x6210;&#x5B57;&#x4E32;&#x518D;&#x8F49;&#x56DE;&#x4F86; &#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027;&#x6703;&#x6C92;&#x6709; //console.log(family, JSON.stringify(family)) console .log(family, JSON .parse( JSON .stringify(family) )) var newFamily4 = JSON .parse( JSON .stringify(family) ); console .log(family === newFamily4) newFamily4.name = &apos;Liao&apos; newFamily4.member.other = &apos;Deep&apos; console .log(family, newFamily4) //&#x5169;&#x8005;&#x5B8C;&#x5168;&#x7121;&#x95DC; &#x53C3;&#x8003;&#x4E5F;&#x90FD;&#x4E0D;&#x4E00;&#x6A23; &#x9663;&#x5217; &#x9663;&#x5217;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225;&#x7684;&#x4E00;&#x7A2E; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var newArray = [ 1 , &apos;Str&apos; , true , { name: &apos;Jacob&apos; } ]; console .log(newArray[ 3 ]); //[object Object] { name: Jacob} console .log(newArray .3 ); //error newArray.push( 5 ); newArray.name = &apos;Hsu&apos; ; //&#x7269;&#x4EF6;&#x53EF;&#x96A8;&#x610F;&#x589E;&#x52A0;&#x5C6C;&#x6027; newArray[ 5 ] = &apos;Chen&apos; ; newArray[ 7 ] = &apos;Liao&apos; ; //&#x9663;&#x5217;6 empty &#x53D6;&#x503C;undefined console .log(newArray); //name&#x4E0D;&#x5C6C;&#x65BC;&#x9663;&#x5217;&#x88E1;&#x9762;&#x7684;&#x9577;&#x5EA6; for ( var i= 0 ;inewArray.length;i++) { console .log(newArray[i]) } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a = [ 1 , 2 , 3 ]; console .log(a, a[ 1 ], a.length) //forEach &#x4E0D;&#x662F;&#x5BE6;&#x9AD4;&#x5C6C;&#x6027; &#x662F;&#x9663;&#x5217;&#x539F;&#x578B;&#x7684;&#x5C6C;&#x6027; a.forEach( function ( i ) { console .log(i) }); ( 3 )&#xA0;[ 1 , 2 , 3 ] 0 : 1 1 : 2 2 : 3 length: 3 // length &#x4E5F;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#x7684;&#x5C6C;&#x6027; __proto__: Array ( 0 ) //&#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x53EF;&#x4EE5;&#x900F;&#x904E;&#x9EDE;&#x904B;&#x7B97;&#x5B50;&#x4E0D;&#x65B7;&#x5411;&#x4E0A;&#x67E5;&#x627E;&#x53D6;&#x5F97;&#x65B9;&#x6CD5; &#x4F8B;:forEach ... __proto__: Object // &#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x7E7C;&#x627F;&#x7269;&#x4EF6;&#x7684;&#x539F;&#x578B; &#x6240;&#x4EE5;&#x9663;&#x5217;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7269;&#x4EF6;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5; &#x4F8B;:toString 1 2 3 4 5 6 7 8 var a = [ 1 , 2 , 3 ]; var b = [ 4 , 5 , 6 ]; //&#x65B0;&#x589E;&#x65B9;&#x6CD5;&#x5230;&#x539F;&#x578B;&#x93C8;&#x4E0A; a.__proto__.getLast = function ( ) { return this [ this .length -1 ]; //b[b.length-1] } console .log(a, b, a.getLast(), a.toString()) JSON JSON - &#x7DAD;&#x57FA;&#x767E;&#x79D1; &#x5118;&#x7BA1;JSON&#x662F;JavaScript&#x7684;&#x4E00;&#x500B;&#x5B50;&#x96C6;&#xFF0C;&#x4F46;JSON&#x662F;&#x7368;&#x7ACB;&#x65BC;&#x8A9E;&#x8A00;&#x7684;&#x6587;&#x5B57;&#x683C;&#x5F0F; JSON&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x4E00;&#x5B9A;&#x90FD;&#x662F;&#x5B57;&#x4E32;&#x7684;&#x5F62;&#x5F0F; &#x7269;&#x4EF6;&#x53EF;&#x4EE5;&#x7528;&#x55AE;&#x5F15;&#x865F; &apos; &#x4F46;JSON&#x4E00;&#x5F8B;&#x7528;&#x96D9;&#x5F15;&#x865F;  SON &#x7684;&#x683C;&#x5F0F;&#x662F;&#x975E;&#x5E38;&#x56B4;&#x683C;&#x7684;&#xFF0C;&#x591A;&#x4E00;&#x500B;&#x9017;&#x865F;&#x5C11;&#x4E00;&#x500B;&#x9017;&#x865F;&#xFF0C;&#x90FD;&#x6703;&#x5C0E;&#x81F4;&#x51FA;&#x73FE;&#x932F;&#x8AA4;&#xFF0C; &#x6240;&#x4EE5;&#x6700;&#x5F8C;&#x4E00;&#x7B46;&#x4E0D;&#x53EF;&#x591A;&#x4E86;&#x4E00;&#x500B;&#x9017;&#x865F; &#x900F;&#x904E; JSON.parse() &#x51FA;&#x4F86;&#x7684;&#x8CC7;&#x6599;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x7269;&#x4EF6;&#x6703;&#x6709;&#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027; &#x5F8C;&#x7E8C;&#x7684;&#x503C;&#x8B8A;&#x66F4;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x503C;&#x4E5F;&#x6703;&#x8B8A;&#x66F4; &#x539F;&#x751F;AJAX&#x8B80;JSON 1 2 3 4 5 6 7 8 9 10 //&#x539F;&#x751F;AJAX function getData ( ) { console .log( this .response) var data = JSON .parse( this .response); console .log(data); } var oReq = new XMLHttpRequest(); oReq.addEventListener( load , getData); oReq.open( GET , family.json ) //&#x50B3;&#x5165;&#x7684;&#x5B57;&#x4E32; oReq.send(); &#x900F;&#x904E;&#x958B;&#x767C;&#x5DE5;&#x5177;Network&#x53EF;&#x4EE5;&#x770B;&#x7D50;&#x679C; function &#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#深淺拷貝":{"title":"&#x6DF1;&#x6DFA;&#x62F7;&#x8C9D;","path":"\\javascript\\core.html#深淺拷貝","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 var family = { name: &apos;Hsu&apos; , member: { father: &apos;dad&apos; , monther: &apos;mom&apos; , other: &apos;someone&apos; } } var newFamily = {} for ( var key in family) { console .log(key, family[key]); newFamily[key] =family[key]; } newFamily.name = &apos;Chen&apos; console .log(family, newFamily) newFamily.member.other = &apos;stranger&apos; console .log(family, newFamily) //for in&#x53EA;&#x80FD;&#x505A;&#x7B2C;&#x4E00;&#x5C64;&#x7684;&#x8907;&#x88FD; &#x7B2C;&#x4E8C;&#x5C64;&#x662F;&#x50B3;&#x53C3;&#x8003;&#x7684;&#x5F62;&#x5F0F; //&#x6DFA;&#x5C64;&#x8907;&#x88FD; js for in, jQuery extend, ES6 assign //jQuery var newFamily2 = jQuery.extend({}, family); //ES6 var newFamily3 = Object .assign({}, family) //&#x6DF1;&#x5C64;&#x8907;&#x88FD; deep copy &#x6703;&#x5C07;&#x539F;&#x672C;&#x7684;&#x7269;&#x4EF6;&#x8F49;&#x6210;&#x5B57;&#x4E32;&#x518D;&#x8F49;&#x56DE;&#x4F86; &#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027;&#x6703;&#x6C92;&#x6709; //console.log(family, JSON.stringify(family)) console .log(family, JSON .parse( JSON .stringify(family) )) var newFamily4 = JSON .parse( JSON .stringify(family) ); console .log(family === newFamily4) newFamily4.name = &apos;Liao&apos; newFamily4.member.other = &apos;Deep&apos; console .log(family, newFamily4) //&#x5169;&#x8005;&#x5B8C;&#x5168;&#x7121;&#x95DC; &#x53C3;&#x8003;&#x4E5F;&#x90FD;&#x4E0D;&#x4E00;&#x6A23; &#x9663;&#x5217; &#x9663;&#x5217;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225;&#x7684;&#x4E00;&#x7A2E; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var newArray = [ 1 , &apos;Str&apos; , true , { name: &apos;Jacob&apos; } ]; console .log(newArray[ 3 ]); //[object Object] { name: Jacob} console .log(newArray .3 ); //error newArray.push( 5 ); newArray.name = &apos;Hsu&apos; ; //&#x7269;&#x4EF6;&#x53EF;&#x96A8;&#x610F;&#x589E;&#x52A0;&#x5C6C;&#x6027; newArray[ 5 ] = &apos;Chen&apos; ; newArray[ 7 ] = &apos;Liao&apos; ; //&#x9663;&#x5217;6 empty &#x53D6;&#x503C;undefined console .log(newArray); //name&#x4E0D;&#x5C6C;&#x65BC;&#x9663;&#x5217;&#x88E1;&#x9762;&#x7684;&#x9577;&#x5EA6; for ( var i= 0 ;inewArray.length;i++) { console .log(newArray[i]) } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a = [ 1 , 2 , 3 ]; console .log(a, a[ 1 ], a.length) //forEach &#x4E0D;&#x662F;&#x5BE6;&#x9AD4;&#x5C6C;&#x6027; &#x662F;&#x9663;&#x5217;&#x539F;&#x578B;&#x7684;&#x5C6C;&#x6027; a.forEach( function ( i ) { console .log(i) }); ( 3 )&#xA0;[ 1 , 2 , 3 ] 0 : 1 1 : 2 2 : 3 length: 3 // length &#x4E5F;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#x7684;&#x5C6C;&#x6027; __proto__: Array ( 0 ) //&#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x53EF;&#x4EE5;&#x900F;&#x904E;&#x9EDE;&#x904B;&#x7B97;&#x5B50;&#x4E0D;&#x65B7;&#x5411;&#x4E0A;&#x67E5;&#x627E;&#x53D6;&#x5F97;&#x65B9;&#x6CD5; &#x4F8B;:forEach ... __proto__: Object // &#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x7E7C;&#x627F;&#x7269;&#x4EF6;&#x7684;&#x539F;&#x578B; &#x6240;&#x4EE5;&#x9663;&#x5217;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7269;&#x4EF6;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5; &#x4F8B;:toString 1 2 3 4 5 6 7 8 var a = [ 1 , 2 , 3 ]; var b = [ 4 , 5 , 6 ]; //&#x65B0;&#x589E;&#x65B9;&#x6CD5;&#x5230;&#x539F;&#x578B;&#x93C8;&#x4E0A; a.__proto__.getLast = function ( ) { return this [ this .length -1 ]; //b[b.length-1] } console .log(a, b, a.getLast(), a.toString()) JSON JSON - &#x7DAD;&#x57FA;&#x767E;&#x79D1; &#x5118;&#x7BA1;JSON&#x662F;JavaScript&#x7684;&#x4E00;&#x500B;&#x5B50;&#x96C6;&#xFF0C;&#x4F46;JSON&#x662F;&#x7368;&#x7ACB;&#x65BC;&#x8A9E;&#x8A00;&#x7684;&#x6587;&#x5B57;&#x683C;&#x5F0F; JSON&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x4E00;&#x5B9A;&#x90FD;&#x662F;&#x5B57;&#x4E32;&#x7684;&#x5F62;&#x5F0F; &#x7269;&#x4EF6;&#x53EF;&#x4EE5;&#x7528;&#x55AE;&#x5F15;&#x865F; &apos; &#x4F46;JSON&#x4E00;&#x5F8B;&#x7528;&#x96D9;&#x5F15;&#x865F;  SON &#x7684;&#x683C;&#x5F0F;&#x662F;&#x975E;&#x5E38;&#x56B4;&#x683C;&#x7684;&#xFF0C;&#x591A;&#x4E00;&#x500B;&#x9017;&#x865F;&#x5C11;&#x4E00;&#x500B;&#x9017;&#x865F;&#xFF0C;&#x90FD;&#x6703;&#x5C0E;&#x81F4;&#x51FA;&#x73FE;&#x932F;&#x8AA4;&#xFF0C; &#x6240;&#x4EE5;&#x6700;&#x5F8C;&#x4E00;&#x7B46;&#x4E0D;&#x53EF;&#x591A;&#x4E86;&#x4E00;&#x500B;&#x9017;&#x865F; &#x900F;&#x904E; JSON.parse() &#x51FA;&#x4F86;&#x7684;&#x8CC7;&#x6599;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x7269;&#x4EF6;&#x6703;&#x6709;&#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027; &#x5F8C;&#x7E8C;&#x7684;&#x503C;&#x8B8A;&#x66F4;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x503C;&#x4E5F;&#x6703;&#x8B8A;&#x66F4; &#x539F;&#x751F;AJAX&#x8B80;JSON 1 2 3 4 5 6 7 8 9 10 //&#x539F;&#x751F;AJAX function getData ( ) { console .log( this .response) var data = JSON .parse( this .response); console .log(data); } var oReq = new XMLHttpRequest(); oReq.addEventListener( load , getData); oReq.open( GET , family.json ) //&#x50B3;&#x5165;&#x7684;&#x5B57;&#x4E32; oReq.send(); &#x900F;&#x904E;&#x958B;&#x767C;&#x5DE5;&#x5177;Network&#x53EF;&#x4EE5;&#x770B;&#x7D50;&#x679C; function &#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#陣列":{"title":"&#x9663;&#x5217;","path":"\\javascript\\core.html#陣列","body":"&#x9663;&#x5217;&#x662F;&#x7269;&#x4EF6;&#x578B;&#x5225;&#x7684;&#x4E00;&#x7A2E; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var newArray = [ 1 , &apos;Str&apos; , true , { name: &apos;Jacob&apos; } ]; console .log(newArray[ 3 ]); //[object Object] { name: Jacob} console .log(newArray .3 ); //error newArray.push( 5 ); newArray.name = &apos;Hsu&apos; ; //&#x7269;&#x4EF6;&#x53EF;&#x96A8;&#x610F;&#x589E;&#x52A0;&#x5C6C;&#x6027; newArray[ 5 ] = &apos;Chen&apos; ; newArray[ 7 ] = &apos;Liao&apos; ; //&#x9663;&#x5217;6 empty &#x53D6;&#x503C;undefined console .log(newArray); //name&#x4E0D;&#x5C6C;&#x65BC;&#x9663;&#x5217;&#x88E1;&#x9762;&#x7684;&#x9577;&#x5EA6; for ( var i= 0 ;inewArray.length;i++) { console .log(newArray[i]) } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a = [ 1 , 2 , 3 ]; console .log(a, a[ 1 ], a.length) //forEach &#x4E0D;&#x662F;&#x5BE6;&#x9AD4;&#x5C6C;&#x6027; &#x662F;&#x9663;&#x5217;&#x539F;&#x578B;&#x7684;&#x5C6C;&#x6027; a.forEach( function ( i ) { console .log(i) }); ( 3 )&#xA0;[ 1 , 2 , 3 ] 0 : 1 1 : 2 2 : 3 length: 3 // length &#x4E5F;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#x7684;&#x5C6C;&#x6027; __proto__: Array ( 0 ) //&#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x53EF;&#x4EE5;&#x900F;&#x904E;&#x9EDE;&#x904B;&#x7B97;&#x5B50;&#x4E0D;&#x65B7;&#x5411;&#x4E0A;&#x67E5;&#x627E;&#x53D6;&#x5F97;&#x65B9;&#x6CD5; &#x4F8B;:forEach ... __proto__: Object // &#x9663;&#x5217;&#x7684;&#x539F;&#x578B; &#x7E7C;&#x627F;&#x7269;&#x4EF6;&#x7684;&#x539F;&#x578B; &#x6240;&#x4EE5;&#x9663;&#x5217;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7269;&#x4EF6;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5; &#x4F8B;:toString 1 2 3 4 5 6 7 8 var a = [ 1 , 2 , 3 ]; var b = [ 4 , 5 , 6 ]; //&#x65B0;&#x589E;&#x65B9;&#x6CD5;&#x5230;&#x539F;&#x578B;&#x93C8;&#x4E0A; a.__proto__.getLast = function ( ) { return this [ this .length -1 ]; //b[b.length-1] } console .log(a, b, a.getLast(), a.toString()) JSON JSON - &#x7DAD;&#x57FA;&#x767E;&#x79D1; &#x5118;&#x7BA1;JSON&#x662F;JavaScript&#x7684;&#x4E00;&#x500B;&#x5B50;&#x96C6;&#xFF0C;&#x4F46;JSON&#x662F;&#x7368;&#x7ACB;&#x65BC;&#x8A9E;&#x8A00;&#x7684;&#x6587;&#x5B57;&#x683C;&#x5F0F; JSON&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x4E00;&#x5B9A;&#x90FD;&#x662F;&#x5B57;&#x4E32;&#x7684;&#x5F62;&#x5F0F; &#x7269;&#x4EF6;&#x53EF;&#x4EE5;&#x7528;&#x55AE;&#x5F15;&#x865F; &apos; &#x4F46;JSON&#x4E00;&#x5F8B;&#x7528;&#x96D9;&#x5F15;&#x865F;  SON &#x7684;&#x683C;&#x5F0F;&#x662F;&#x975E;&#x5E38;&#x56B4;&#x683C;&#x7684;&#xFF0C;&#x591A;&#x4E00;&#x500B;&#x9017;&#x865F;&#x5C11;&#x4E00;&#x500B;&#x9017;&#x865F;&#xFF0C;&#x90FD;&#x6703;&#x5C0E;&#x81F4;&#x51FA;&#x73FE;&#x932F;&#x8AA4;&#xFF0C; &#x6240;&#x4EE5;&#x6700;&#x5F8C;&#x4E00;&#x7B46;&#x4E0D;&#x53EF;&#x591A;&#x4E86;&#x4E00;&#x500B;&#x9017;&#x865F; &#x900F;&#x904E; JSON.parse() &#x51FA;&#x4F86;&#x7684;&#x8CC7;&#x6599;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x7269;&#x4EF6;&#x6703;&#x6709;&#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027; &#x5F8C;&#x7E8C;&#x7684;&#x503C;&#x8B8A;&#x66F4;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x503C;&#x4E5F;&#x6703;&#x8B8A;&#x66F4; &#x539F;&#x751F;AJAX&#x8B80;JSON 1 2 3 4 5 6 7 8 9 10 //&#x539F;&#x751F;AJAX function getData ( ) { console .log( this .response) var data = JSON .parse( this .response); console .log(data); } var oReq = new XMLHttpRequest(); oReq.addEventListener( load , getData); oReq.open( GET , family.json ) //&#x50B3;&#x5165;&#x7684;&#x5B57;&#x4E32; oReq.send(); &#x900F;&#x904E;&#x958B;&#x767C;&#x5DE5;&#x5177;Network&#x53EF;&#x4EE5;&#x770B;&#x7D50;&#x679C; function &#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#JSON":{"title":"JSON","path":"\\javascript\\core.html#JSON","body":"JSON - &#x7DAD;&#x57FA;&#x767E;&#x79D1; &#x5118;&#x7BA1;JSON&#x662F;JavaScript&#x7684;&#x4E00;&#x500B;&#x5B50;&#x96C6;&#xFF0C;&#x4F46;JSON&#x662F;&#x7368;&#x7ACB;&#x65BC;&#x8A9E;&#x8A00;&#x7684;&#x6587;&#x5B57;&#x683C;&#x5F0F; JSON&#x6240;&#x6709;&#x7684;&#x5C6C;&#x6027;&#x4E00;&#x5B9A;&#x90FD;&#x662F;&#x5B57;&#x4E32;&#x7684;&#x5F62;&#x5F0F; &#x7269;&#x4EF6;&#x53EF;&#x4EE5;&#x7528;&#x55AE;&#x5F15;&#x865F; &apos; &#x4F46;JSON&#x4E00;&#x5F8B;&#x7528;&#x96D9;&#x5F15;&#x865F;  SON &#x7684;&#x683C;&#x5F0F;&#x662F;&#x975E;&#x5E38;&#x56B4;&#x683C;&#x7684;&#xFF0C;&#x591A;&#x4E00;&#x500B;&#x9017;&#x865F;&#x5C11;&#x4E00;&#x500B;&#x9017;&#x865F;&#xFF0C;&#x90FD;&#x6703;&#x5C0E;&#x81F4;&#x51FA;&#x73FE;&#x932F;&#x8AA4;&#xFF0C; &#x6240;&#x4EE5;&#x6700;&#x5F8C;&#x4E00;&#x7B46;&#x4E0D;&#x53EF;&#x591A;&#x4E86;&#x4E00;&#x500B;&#x9017;&#x865F; &#x900F;&#x904E; JSON.parse() &#x51FA;&#x4F86;&#x7684;&#x8CC7;&#x6599;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x7269;&#x4EF6;&#x6703;&#x6709;&#x50B3;&#x53C3;&#x8003;&#x7279;&#x6027; &#x5F8C;&#x7E8C;&#x7684;&#x503C;&#x8B8A;&#x66F4;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x503C;&#x4E5F;&#x6703;&#x8B8A;&#x66F4; &#x539F;&#x751F;AJAX&#x8B80;JSON 1 2 3 4 5 6 7 8 9 10 //&#x539F;&#x751F;AJAX function getData ( ) { console .log( this .response) var data = JSON .parse( this .response); console .log(data); } var oReq = new XMLHttpRequest(); oReq.addEventListener( load , getData); oReq.open( GET , family.json ) //&#x50B3;&#x5165;&#x7684;&#x5B57;&#x4E32; oReq.send(); &#x900F;&#x904E;&#x958B;&#x767C;&#x5DE5;&#x5177;Network&#x53EF;&#x4EE5;&#x770B;&#x7D50;&#x679C; function &#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#function":{"title":"function","path":"\\javascript\\core.html#function","body":"&#x5728; JavaScript &#x4E2D; function &#x662F;&#x4E00;&#x500B;&#x5F88;&#x7279;&#x5225;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x7576;&#x6210;&#x7269;&#x4EF6;&#x4F86;&#x4F7F;&#x7528;&#xFF0C; function &#x4E5F;&#x662F;&#x7269;&#x4EF6;&#x7684;&#x4E00;&#x7A2E;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x662F;&#x64C1;&#x6709;&#x7A0B;&#x5F0F;&#x5340;&#x584A;&#x7684;&#x80FD;&#x529B;&#x7269;&#x4EF6;&#x800C;&#x5DF2; &#x900F;&#x904E; &#x300C;.&#x300D; &#x5373;&#x53EF;&#x505A;&#x5230;&#x65B0;&#x589E;&#x5C6C;&#x6027;&#x8207;&#x503C;&#xFF0C;&#x6240;&#x4EE5;function &#x5728; JavaScript &#x662F;&#x4E00;&#x500B;&#x7279;&#x6B8A;&#x7684;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 function statementFn ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x9673;&#x8FF0;&#x5F0F;&apos; , &apos;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ); console .log(statementFn); } statementFn(); var expressionFn = function ( ) { console .log( &apos;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F;&apos; , &apos;&#x533F;&#x540D;&#x51FD;&#x5F0F;&apos; ); //&#x4E0D;&#x662F;&#x6240;&#x6709;&#x533F;&#x540D;&#x51FD;&#x5F0F; &#x90FD;&#x662F;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; console .log(expressionFn); } expressionFn() var functionC = function functionD ( ) { console .log(functionC, functionD) //&#x5177;&#x540D;&#x51FD;&#x5F0F;&#x80FD;&#x5920;&#x5728;&#x51FD;&#x5F0F;&#x5167;&#x88AB;&#x8ABF;&#x7528; } console .log(functionC) console .log(functionC, functionD) //functoinD is not defind var num = 1 var giveMeMoney = function giveMoreMoney ( coin ) { num += 1 console .log( &apos;Exec giveMeMoney&apos; ,num,coin) return coin 100 ? coin : giveMoreMoney(num * coin) }; console .log(giveMeMoney( 30 )) //&#x52A0;&#x9322;&#x5230;&#x8D85;&#x904E;100&#x5143;&#x624D;&#x505C;&#x6B62; 1 2 3 4 5 6 7 8 9 function callSomeFn ( fn ) { fn(); } // &#x51FD;&#x6578;&#x9673;&#x8FF0;&#x5F0F;&#x6C92;&#x6709;&#x540D;&#x7A31;&#x7121;&#x6CD5;&#x57F7;&#x884C; // function (fn) { // fn(); // } // &#x50B3;&#x5165;&#x7684;&#x53C3;&#x6578;&#x51FD;&#x5F0F; &#x5982;&#x540C;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#x4E0D;&#x9700;&#x8981;&#x540D;&#x7A31; callSomeFn( function ( ) { console .log( &apos;&#x57F7;&#x884C;&#x51FD;&#x5F0F;&apos; ) }) // 2&#x5B9A;&#x7FA9;&#x4E00;&#x6BB5;&#x51FD;&#x5F0F;&#x4E26;&#x8CE6;&#x4E88;&#x5230;&#x53C3;&#x6578;&#x4E0A; &#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE) &#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#立即函式-IIFE":{"title":"&#x7ACB;&#x5373;&#x51FD;&#x5F0F;(IIFE)","path":"\\javascript\\core.html#立即函式-IIFE","body":"&#x7ACB;&#x5373;&#x547C;&#x53EB;&#x51FD;&#x5F0F;&#x8868;&#x9054;&#x5F0F; &#xFF08;&#x82F1;&#x6587;&#xFF1A;immediately-invoked function expression&#xFF0C;&#x7E2E;&#x5BEB;&#xFF1A;IIFE&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function fnA ( ) { console .log( &apos;IIFE&apos; ) } fnA(); // IIFE ( function IIFE ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; , &apos;&#x9019;&#x88E1;&#x662F;&#x5177;&#x540D;&#x51FD;&#x5F0F;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); //&#x62EC;&#x865F;&#x5167;&#x5C64;&#x518D;&#x88DC;&#x4E0A;&#x5C0F;&#x62EC;&#x865F; ( function IIFE ( ) { })(); //&#x5C0F;&#x62EC;&#x865F;&#x53EF;&#x4EE5;&#x79FB;&#x5230;&#x5916;&#x5C64; console .log(IIFE); //IIFE is not defined ( function ( ) { console .log( &apos;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&apos; , &apos;IIFE&apos; , &apos;&#x6C92;&#x6709;fnA&#x4E5F;&#x53EF;&#x4EE5;&#x57F7;&#x884C;&apos; ) // 1. &#x7ACB;&#x5373;&#x57F7;&#x884C; // 2. &#x7121;&#x6CD5;&#x518D;&#x51FD;&#x5F0F;&#x5916;&#x88AB;&#x518D;&#x6B21;&#x57F7;&#x884C; }()); ( function ( ) { var name = &apos;Jacob&apos; ; console .log(name) // &#x9650;&#x5236;&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF; })(); var whereParameter = ( function ( parameter ) { console .log(parameter) return parameter; })( &apos;&#x53C3;&#x6578;&#x5728;&#x9019;&apos; ); console .log(whereParameter); //&#x8A18;&#x5F97;&#x990A;&#x6210;&#x597D;&#x7FD2;&#x6163; &#x5728;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x524D;&#x6216;&#x5F8C;&#x52A0;&#x5206;&#x865F; // &#x7ACB;&#x5373;&#x51FD;&#x5F0F; &#x50B3;&#x905E;&#x8B8A;&#x6578; var a = {}; ( function ( b ) { b.person = &apos;jacob&apos; ; })(a) ;( function ( c ) { console .log(c.person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })(a) // &#x5927;&#x578B;&#x6846;&#x67B6;&#x4E0B; &#x7528;&#x5168;&#x57DF;&#x7269;&#x4EF6;&#x50B3;&#x503C; ( function ( global ) { global.person = &apos;jacob&apos; ; })( window ) ;( function ( ) { console .log(person); //&#x628A;&#x53E6;&#x4E00;&#x500B;&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x5B9A;&#x7FA9;&#x7684;&#x8B8A;&#x6578;&#x5370;&#x51FA;&#x4F86; })() &#x53C3;&#x6578; 1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#參數":{"title":"&#x53C3;&#x6578;","path":"\\javascript\\core.html#參數","body":"1 2 3 4 5 6 7 8 // callback function function cbFn ( name, a ) { console .log(name+ &apos;&#x4F60;&#x597D;&apos; +a) } function funcB ( fn ) { fn( &apos;Jacob&apos; , 1 ) //&#x5BE6;&#x969B;&#x57F7;&#x884C;&#x5728;&#x9019; } funcB(cbFn) //Jacob&#x4F60;&#x597D;1 1 2 3 4 5 6 7 8 9 10 11 12 13 function callArg ( a ) { console .log(a, arguments ); //arguments &#x662F;&#x4E00;&#x500B;&#x985E;&#x9663;&#x5217; &#x4E0D;&#x662F;&#x7D14;&#x9663;&#x5217; for ( let index = 0 ; index  arguments .length; index++) { console .log( arguments [index]); // 1 2 3 &apos;4&apos; } // &#x985E;&#x9663;&#x5217;&#x4E26;&#x6C92;&#x6709;&#x7D55;&#x5927;&#x591A;&#x6578;&#x9663;&#x5217;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5; // TypeError: arguments.forEach is not a function arguments .forEach( function ( ) { }) } callArg( 1 , 2 , 3 , &apos;4&apos; ) //1, [object Arguments] { 0: 1, 1: 2, 2: 3, 3: 4} &#x9589;&#x5305; Closure 1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#閉包-Closure":{"title":"&#x9589;&#x5305; Closure","path":"\\javascript\\core.html#閉包-Closure","body":"1 2 3 4 5 6 7 8 9 10 11 function storeMoney ( ) { var money = 1000 ; return function ( price ) { money = money + price return money } } //console.log( storeMoney()(100) ) // 1100 var mingMoney = storeMoney() console .log(mingMoney) //function(price) { console .log(mingMoney( 100 )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); }); } console .log( &apos;i&apos; , i) // 3 3 3 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; &#x7ACB;&#x5373;&#x51FD;&#x5F0F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function arrFunc ( ) { var arr = []; for ( var i= 0 ;i 3 ;i++) { // &#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#x4E00;&#x500B;&#x529F;&#x80FD; &#x9650;&#x5236;&#x4F5C;&#x7528;&#x57DF; ( function ( j ) { arr.push( function ( ) { console .log(j); }); })(i); } console .log( &apos;i&apos; , i) // 0 1 2 return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ](); &#x900F;&#x904E; let 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function arrFunc ( ) { var arr = []; for ( let i= 0 ;i 3 ;i++) { arr.push( function ( ) { console .log(i); // 0 1 2 }); } //console.log(&apos;i&apos;, i) // error let&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;for return arr; } var fn = arrFunc(); fn[ 0 ](); fn[ 1 ](); fn[ 2 ]();"},"core.html#函式工廠":{"title":"&#x51FD;&#x5F0F;&#x5DE5;&#x5EE0;","path":"\\javascript\\core.html#函式工廠","body":"&#x7D66;&#x4E0D;&#x540C;&#x7684;&#x503C;&#x3000;&#x505A;&#x76F8;&#x540C;&#x7684;&#x4E8B;&#x60C5; 1 2 3 4 5 6 7 8 9 function storeMoney ( initVal ) { var money = initVal || 1000 return function ( price ) { money = money + price; return money; } } var MingMoney = storeMoney( 100 ); console .log(MingMoney( 500 )) // 600 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 function storeMoney ( initVal ) { var money = initVal || 1000 // &#x79C1;&#x6709;&#x65B9;&#x6CD5; &#x53EF;&#x4EE5;&#x505A;&#x5F88;&#x591A;&#x4E0D;&#x540C;&#x4E8B;&#x60C5; return { increase: function ( price ) { money += price }, decrease: function ( price ) { money -= price }, value: function ( ) { return money; } } } var MingMoney = storeMoney( 100 ); MingMoney.increase( 100 ); MingMoney.increase( 25 ); MingMoney.decrease( 25 ); console .log(MingMoney.value()) // 200"},"core.html#this":{"title":"this","path":"\\javascript\\core.html#this","body":"chrome / devTool / Sources / || &#x66AB;&#x505C;&#x6309;&#x9215; / &#x9032;&#x5165;&#x57F7;&#x884C;&#x5806;&#x758A; this &#x70BA;&#x95DC;&#x9375;&#x5B57; &#x5728;&#x6BCF;&#x500B;&#x57F7;&#x884C;&#x74B0;&#x5883;&#x5B58;&#x5728; this &#x7684;&#x8ABF;&#x7528;&#x65B9;&#x5F0F; &#x4F5C;&#x70BA;&#x7269;&#x4EF6;&#x65B9;&#x6CD5; &#x95DC;&#x6CE8;&#x5728;&#x54EA;&#x500B;&#x7269;&#x4EF6;&#x4E0B;&#x547C;&#x53EB; Object.fn() this &#x6307;&#x5411; Object &#x7C21;&#x6613;&#x547C;&#x53EB; (&#x4E0D;&#x5EFA;&#x8B70;&#x8ABF;&#x7528;this) bind, apply, call &#x65B9;&#x6CD5; new DOM&#x4E8B;&#x4EF6;&#x8655;&#x7406;&#x5668; &#x7BAD;&#x982D;&#x51FD;&#x5F0F;(ES6) simple call &#x7C21;&#x6613;&#x547C;&#x53EB; 1 2 3 4 5 6 var myName = &apos;Jacob&apos; ; function callName ( ) { console .log( this , this .myName) } callName() // this - window // &#x76E1;&#x53EF;&#x80FD;&#x4E0D;&#x8981;&#x4F7F;&#x7528;simple call&#x7684;this 1 2 3 4 5 6 7 ( function ( ) { console .log( this .myName); function callFn ( ) { console .log( this .myName); } callFn(); //simple call &#x770B;&#x5230;&#x51FD;&#x5F0F;&#x662F;&#x76F4;&#x63A5;&#x57F7;&#x884C;&#x7684; &#x5C31;&#x662F;&#x7C21;&#x6613;&#x547C;&#x53EB; &#x57F7;&#x884C;&#x9589;&#x5305;&#x5167;&#x51FD;&#x5F0F;&#x4E5F;&#x662F; })(); 1 2 3 4 5 6 7 8 // callback function myCb ( callback ) { var money = 100 return callback(money) } myCb( function ( money ) { console .log( this .myName, money+ 100 ) }) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 var a = [ 1 , 2 , 3 ] // forEach &#x5F8C;&#x65B9;&#x662F;&#x63D2;&#x5165;&#x4E00;&#x500B;callback&#x51FD;&#x5F0F; a.forEach( function ( i ) { console .log( this .myName, i); }) var family = { myName: &apos;Hsu&apos; , callName: function ( ) { // var self = this; // vm , that setTimeout( function ( ) { console .log( this .myName) // simple call this-window &apos;Jacob&apos; &#x7121;&#x6CD5;&#x53D6;&#x5F97;&#x7269;&#x4EF6;&#x7684;myName &apos;Hsu&apos; console .log(self.myName) // &#x7269;&#x4EF6;&#x7684;myName &apos;Hsu&apos; }, 1000 ) } family.callName(); } Call, appply, bind 1 2 3 4 5 6 7 8 9 10 11 12 13 var team = { myName: &apos;Jacob&apos; } function fn ( para1, para2 ) { console .log( this , para1, para2) } fn( 1 , 2 ); //simple call fn.call(team, 1 , 2 ); // call &#x662F;&#x7ACB;&#x523B;&#x57F7;&#x884C; fn.apply(team, [ 3 , 4 ]); // apply &#x662F;&#x7ACB;&#x523B;&#x57F7;&#x884C; &#x5DEE;&#x5225;&#x5728;&#x4EE5;&#x9663;&#x5217;&#x65B9;&#x5F0F;&#x5448;&#x73FE; var fn2 = fn.bind(team, 5 , 6 ); // bind &#x975E;&#x7ACB;&#x523B;&#x57F7;&#x884C; fn2( 6 ); // [object Object] 5 6 &#x9806;&#x5E8F;&#x57F7;&#x884C;&#x53C3;&#x6578;&#x6240;&#x4EE5;&#x662F;6 fn2( 1 , 2 ); // [object Object] 5 1 &#x9806;&#x5E8F;&#x57F7;&#x884C;&#x53C3;&#x6578;&#x6240;&#x4EE5;&#x662F;1 1 2 3 4 5 6 7 8 function fn ( para1, para2 ) { console .log( this , para1, para2) } // &#x9032;&#x968E;&#x6982;&#x5FF5; fn.call( 1 , &apos;Jacob&apos; , &apos;Jessica&apos; ) //&#x50B3;&#x7D14;&#x503C; Number{1} &apos;Jacob&apos;, &apos;Jessica&apos; &#x5DF2;&#x5EFA;&#x69CB;&#x5F0F;&#x65B9;&#x5F0F;&#x5448;&#x73FE; &#x7269;&#x4EF6;&#x7684;&#x578B;&#x5225; fn.call( &apos;Str&apos; , &apos;Jacob&apos; , &apos;Jessica&apos; ) fn.call( undefined , &apos;Jacob&apos; , &apos;Jessica&apos; ) // null &#x3001;undefined &#x5C07;&#x6703;&#x88AB;&#x7F6E;&#x63DB;&#x6210;&#x5168;&#x57DF;&#x8B8A;&#x6578; [object Window] &apos;Jacob&apos;, &apos;Jessica&apos; MDN call() &#x56B4;&#x683C;&#x6A21;&#x5F0F; 1 2 3 4 ( function ( ) { &apos;use strict&apos; ; name = &apos;Jacob&apos; ; // error name is not defined })() 1 2 3 4 5 6 7 function fn ( para1, para2 ) { &apos;use strict&apos; ; // &#x6709;&#x52A0;&#x5165;&#x56B4;&#x683C;&#x6A21;&#x5F0F; this&#x6240;&#x6307;&#x5411;&#x7684;window&#x6703;&#x8B8A;undefined console .log( this , para1, para2) // 1 Jacob Jessica &#x56B4;&#x683C;&#x6A21;&#x5F0F;&#x4E0B; &#x7D14;&#x503C;&#x7DAD;&#x6301;&#x539F;&#x578B;&#x5225; &#x4E0D;&#x4EE5;&#x5EFA;&#x69CB;&#x5F0F;&#x65B9;&#x5F0F;&#x5448;&#x73FE; } fn.call( 1 , &apos;Jacob&apos; , &apos;Jessica&apos; ) fn.call( undefined , &apos;Jacob&apos; , &apos;Jessica&apos; ) // undefined Jacob Jessica // &#x7C21;&#x6613;&#x547C;&#x53EB;&#x4E0B; &#x76E1;&#x53EF;&#x80FD;&#x4E0D;&#x8981;&#x8ABF;&#x7528;this &#x56E0;&#x70BA;&#x5B83;&#x672C;&#x8CEA;&#x5C31;&#x662F;undefined this: DOM 1 2  button onclick = console.log(this)  this is btn / button   button onclick = console.dir(this)  this is btn / button  console.dir(object) new 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function Dog ( name, color, size ) { this .name = name; this .color = color; this .size = size; } var Bibi = new Dog( &apos;&#x6BD4;&#x6BD4;&apos; , &apos;&#x68D5;&#x8272;&apos; , &apos;&#x5C0F;&apos; ) console .log(Bibi) //&#x51FD;&#x5F0F;&#x672C;&#x8EAB;&#x5C31;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6; &#x51FD;&#x5F0F;&#x7269;&#x4EF6;&#x6709;&#x4E00;&#x500B;&#x7279;&#x5225;&#x7684;&#x5C6C;&#x6027; prototype //&#x900F;&#x904E;prototype&#x6240;&#x65B0;&#x589E;&#x7684;&#x5C6C;&#x6027; &#x5C31;&#x6703;&#x505A;&#x539F;&#x578B;&#x4E0A;&#x7684;&#x65B9;&#x6CD5; &#x51FD;&#x5F0F;&#x7269;&#x4EF6;&#x7279;&#x6709;&#x7684;&#x5C6C;&#x6027; Dog.prototype.bark = function ( ) { console .log( this .name, &apos;barking&apos; ) } // __proto__ &#x7269;&#x4EF6;&#x4E0A; // prototype &#x51FD;&#x5F0F;&#x4E0A; // &#x8ABF;&#x6574;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5;&#x6642; &#x6700;&#x597D;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x5F9E;&#x51FD;&#x5F0F;&#x672C;&#x8EAB;&#x7684;&#x539F;&#x578B;&#x5C6C;&#x6027;&#x4E0A;&#x53BB;&#x8ABF;&#x6574; console .log(Dog.prototype === Bibi.__proto__) // true 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 var b = new String ( &apos;bcde&apos; ); console .log(b) console .dir( String ) String .prototype.lastText = function ( ) { return this [ this .length - 1 ]; } console .log(b.lastText()); Number .prototype.secondPower = function ( ) { return this * this ; } var num = 5 ; console .log(num.secondPower()); var date = new Date (); console .log(date); console .dir( Date ); Date .prototype.getFullDate = function ( ) { var dd = String ( this .getDate()); var mm = String ( this .getMonth()+ 1 ); var yyyy = this .getFullYear(); var today = yyyy + &apos;/&apos; + mm + &apos;/&apos; +dd; return today; } console .log(date.getFullDate());"},"core.html#new":{"title":"new","path":"\\javascript\\core.html#new","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function Dog ( name, color, size ) { this .name = name; this .color = color; this .size = size; } var Bibi = new Dog( &apos;&#x6BD4;&#x6BD4;&apos; , &apos;&#x68D5;&#x8272;&apos; , &apos;&#x5C0F;&apos; ) console .log(Bibi) //&#x51FD;&#x5F0F;&#x672C;&#x8EAB;&#x5C31;&#x662F;&#x4E00;&#x500B;&#x7269;&#x4EF6; &#x51FD;&#x5F0F;&#x7269;&#x4EF6;&#x6709;&#x4E00;&#x500B;&#x7279;&#x5225;&#x7684;&#x5C6C;&#x6027; prototype //&#x900F;&#x904E;prototype&#x6240;&#x65B0;&#x589E;&#x7684;&#x5C6C;&#x6027; &#x5C31;&#x6703;&#x505A;&#x539F;&#x578B;&#x4E0A;&#x7684;&#x65B9;&#x6CD5; &#x51FD;&#x5F0F;&#x7269;&#x4EF6;&#x7279;&#x6709;&#x7684;&#x5C6C;&#x6027; Dog.prototype.bark = function ( ) { console .log( this .name, &apos;barking&apos; ) } // __proto__ &#x7269;&#x4EF6;&#x4E0A; // prototype &#x51FD;&#x5F0F;&#x4E0A; // &#x8ABF;&#x6574;&#x539F;&#x578B;&#x7684;&#x65B9;&#x6CD5;&#x6642; &#x6700;&#x597D;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x5F9E;&#x51FD;&#x5F0F;&#x672C;&#x8EAB;&#x7684;&#x539F;&#x578B;&#x5C6C;&#x6027;&#x4E0A;&#x53BB;&#x8ABF;&#x6574; console .log(Dog.prototype === Bibi.__proto__) // true 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 var b = new String ( &apos;bcde&apos; ); console .log(b) console .dir( String ) String .prototype.lastText = function ( ) { return this [ this .length - 1 ]; } console .log(b.lastText()); Number .prototype.secondPower = function ( ) { return this * this ; } var num = 5 ; console .log(num.secondPower()); var date = new Date (); console .log(date); console .dir( Date ); Date .prototype.getFullDate = function ( ) { var dd = String ( this .getDate()); var mm = String ( this .getMonth()+ 1 ); var yyyy = this .getFullYear(); var today = yyyy + &apos;/&apos; + mm + &apos;/&apos; +dd; return today; } console .log(date.getFullDate());"},"core.html#繼承":{"title":"&#x7E7C;&#x627F;","path":"\\javascript\\core.html#繼承","body":"Object.create() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 var a = [] //Object  Array  a (&#x5BE6;&#x9AD4;) //&#x539F;&#x578B;&#x93C8;&#x4E0A;&#x65B0;&#x589E;&#x4E00;&#x500B;&#x5C64;&#x7D1A; //Object  Animal  Dog  &#x5BE6;&#x9AD4; //Object  Animal  Cat  &#x5BE6;&#x9AD4; // Object.create() &#x53EF;&#x4EE5;&#x628A;&#x5176;&#x4ED6;&#x7269;&#x4EF6;&#x4F5C;&#x70BA;&#x539F;&#x578B;&#x4F7F;&#x7528; var dog = { name: &apos;&#x72D7;&apos; , bark: function ( ) { console .log( this .name + &apos; barking&apos; ) } } var Corgi = Object .create(dog); //Corgi &#x628A; dog &#x4F5C;&#x70BA;&#x539F;&#x578B;&#x4F7F;&#x7528; Corgi.name = &apos;Welsh Corgi&apos; console .log(Corgi) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 function Animal ( family ) { this .kingdom = &apos;&#x52D5;&#x7269;&#x754C;&apos; this .family = family || &apos;&#x8C93;&#x79D1;&apos; } Animal.prototype.move = function ( ) { console .log( this .name + &apos; can move&apos; ) } function Dog ( name, size ) { Animal.call( this , &apos;&#x72AC;&#x79D1;&apos; ) this .name = name; this .size = size || &apos;small&apos; } Dog.prototype = Object .create(Animal.prototype) Dog.prototype.constructor = Dog; // &#x72D7;&#x7684;&#x539F;&#x578B;&#x539F;&#x672C;&#x76F4;&#x63A5;&#x7E7C;&#x627F;&#x65BC;&#x52D5;&#x7269;&#x754C;&#x7684;&#x539F;&#x578B; constructor &#x6703;&#x88AB;&#x8986;&#x84CB;&#x6240;&#x4EE5;&#x88DC;&#x56DE;&#x539F;&#x672C;&#x5EFA;&#x69CB;&#x51FD;&#x5F0F; Dog.prototype.bark = function ( ) { console .log( this .name + &apos; barking&apos; ) } var Chihuahua = new Dog( &apos;Chihuahua&apos; , &apos;small&apos; ); console .log(Chihuahua) Chihuahua.bark(); Chihuahua.move(); Chihuahua.family // undefined &#x76EE;&#x524D;&#x53EA;&#x6709;&#x7E7C;&#x627F;&#x539F;&#x578B;prototype &#x4F46;&#x7121;&#x7E7C;&#x627F;&#x52D5;&#x7269;&#x754C;&#x7684;&#x5EFA;&#x69CB;&#x51FD;&#x5F0F; Animal.call &#x5982;&#x679C;&#x700F;&#x89BD;&#x5668;&#x4E0D;&#x652F;&#x63F4; Object.create() &#x9019;&#x6642;&#x5019;&#x6211;&#x5011;&#x6703;&#x5BEB;&#x4E00;&#x4E9B;&#x7A0B;&#x5F0F;&#x4F86;&#x586B;&#x88DC;&#x67D0;&#x4E9B;&#x700F;&#x89BD;&#x5668;&#x4E0D;&#x652F;&#x63F4;&#x7684;&#x60C5;&#x6CC1;&#xFF0C;&#x6211;&#x5011;&#x628A;&#x9019;&#x4E9B;&#x7A0B;&#x5F0F;&#x7A31;&#x505A; polyfill"},"core.html#屬性特徵":{"title":"&#x5C6C;&#x6027;&#x7279;&#x5FB5;","path":"\\javascript\\core.html#屬性特徵","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 const obj = { a: 1 , b: 2 , c: 3 } console .log(obj) //Object.defineProperty() // &#x5C6C;&#x6027;&#xFF0C;&#x8ABF;&#x6574;&#x5C6C;&#x6027;&#x7684;&#x7279;&#x5FB5; // 1. &#x503C; 2. &#x53EF;&#x5426;&#x5BEB;&#x5165; 3. &#x53EF;&#x5426;&#x88AB;&#x522A;&#x9664; 4. &#x53EF;&#x5426;&#x88AB;&#x5217;&#x8209; //Object.defineProperty(&#x7269;&#x4EF6;, &#x5C6C;&#x6027;, &#x53C3;&#x6578;) // being explicit Object .defineProperty(obj, &apos;a&apos; , { enumerable: true , configurable: true , writable: false , value: 4 }); console .log(obj) // TypeError: Cannot assign to read only property &apos;a&apos; of object &apos;#Object&apos; ( function ( ) { &apos;use strict&apos; ; obj.a = 5 ; }()) Object.defineProperty() // &#x5EF6;&#x4F38;&#x7684;&#x4E09;&#x7A2E;&#x7269;&#x4EF6;&#x65B9;&#x6CD5; preventExtensions seal Freeze &#x9632;&#x6B62;&#x64F4;&#x5145; &#x5C01;&#x88DD; &#x51CD;&#x7D50; &#x76F4;&#x63A5;&#x64CD;&#x4F5C;&#x7269;&#x4EF6;&#x672C;&#x8EAB; Object.preventExtensions() Object.seal() &#x7121;&#x6CD5;&#x65B0;&#x589E;&#x522A;&#x9664; &#x4E5F;&#x7121;&#x6CD5;&#x914D;&#x7F6E;&#x7279;&#x5FB5; &#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x8ABF;&#x6574;&#x5C6C;&#x6027;&#x503C; Object.freeze() &#x7269;&#x4EF6;&#x52A0;&#x4E0A;seal &#x4E14;&#x7121;&#x6CD5;&#x8ABF;&#x6574;&#x503C; Setter And Getter 1 2 3 4 5 6 7 8 9 10 11 12 13 14 var wallet = { total: 100 , set save(price) { this .total = this .total + price / 2 }, get save() { return this .total / 2 } } // Getter &#x53D6;&#x5F97;&#x7279;&#x5B9A;&#x503C;&#x7684;&#x65B9;&#x6CD5; // Setter &#x5B58;&#x503C;&#x7684;&#x65B9;&#x6CD5; // wallet.total = 300; wallet.save = 300 ; //&#x900F;&#x904E;Setter&#x6539;&#x8B8A;total&#x7684;&#x503C; console .log(wallet.save) //250 / 2 = 125 Object.defineProperty() Object.getOwnPropertyDescriptor() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var wallet = { total: 100 } Object .defineProperty(wallet, &apos;save&apos; , { configurable: true , set : function(price) { this .total = this .total + price / 2 }, get : function() { return this .total / 2 } }); wallet.save = 300 ; //&#x900F;&#x904E;Setter&#x6539;&#x8B8A;total&#x7684;&#x503C; console .log(wallet); // save 250 / 2 = 125 console .log( Object .getOwnPropertyDescriptor(wallet, &apos;save&apos; )) // [object Object] { // configurable: false, // enumerable: false, 1 2 3 4 5 6 7 8 // &#x53D6;&#x5F97;&#x9663;&#x5217;&#x6700;&#x5F8C;&#x4E00;&#x500B;&#x503C; var a = [ 1 , 2 , 3 ]; Object .defineProperty( Array .prototype, &apos;lastest&apos; , { get : function() { return this [ this .length - 1 ]; } }); console .log(a.lastest); //3 ##&#x3000;vue https://github.com/vuejs/vue/blob/dev/dist/vue.js var emptyObject = Object.freeze({}); &#x78BA;&#x4FDD;&#x7A7A;&#x7269;&#x4EF6; 1 2 3 4 5 6 7 8 var app = new Vue({ //&#x5EFA;&#x69CB;&#x521D;&#x59CB;&#x5316; el: &apos;#app&apos; , data: { message: &apos;Hello Vue!&apos; } }) console .log(app) &#x6DF1;&#x5165;&#x54CD;&#x5E94;&#x5F0F;&#x539F;&#x7406; &#x5F53;&#x4F60;&#x628A;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x7684; JavaScript &#x5BF9;&#x8C61;&#x4F20;&#x5165; Vue &#x5B9E;&#x4F8B;&#x4F5C;&#x4E3A; data &#x9009;&#x9879;&#xFF0C;Vue &#x5C06;&#x904D;&#x5386;&#x6B64;&#x5BF9;&#x8C61;&#x6240;&#x6709;&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x5E76;&#x4F7F;&#x7528; Object.defineProperty &#x628A;&#x8FD9;&#x4E9B;&#x5C5E;&#x6027;&#x5168;&#x90E8;&#x8F6C;&#x4E3A; getter/setter &#x3002;Object.defineProperty &#x662F; ES5 &#x4E2D;&#x4E00;&#x4E2A;&#x65E0;&#x6CD5; shim &#x7684;&#x7279;&#x6027;&#xFF0C;&#x8FD9;&#x4E5F;&#x5C31;&#x662F; Vue &#x4E0D;&#x652F;&#x6301; IE8 &#x4EE5;&#x53CA;&#x66F4;&#x4F4E;&#x7248;&#x672C;&#x6D4F;&#x89C8;&#x5668;&#x7684;&#x539F;&#x56E0;&#x3002; Vue &#x7406;&#x89E3;&#x4E4B;&#x767D;&#x8BDD; getter/setter https://github.com/vuejs/vue/blob/dev/dist/vue.js proxySetter reactiveSetter app.obj === app._data.obj Vue &#x54CD;&#x5E94;&#x5F0F;&#x6838;&#x5FC3;&#x5C31;&#x662F;&#xFF0C;getter &#x7684;&#x65F6;&#x5019;&#x4F1A;&#x6536;&#x96C6;&#x4F9D;&#x8D56;&#xFF0C;setter &#x7684;&#x65F6;&#x5019;&#x4F1A;&#x89E6;&#x53D1;&#x4F9D;&#x8D56;&#x66F4;&#x65B0;"},"core.html#Let":{"title":"Let","path":"\\javascript\\core.html#Let","body":"var&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x5728;&#x51FD;&#x6578;(function) &#x88E1; let&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x5247;&#x662F;&#x5728;&#x5340;&#x584A;(block) &#x88E1; 1 2 3 4 for ( var i= 0 ;i 10 ;i++) { console .log(i) } console .log(i) //window.i &#x5168;&#x57DF; &#x6C59;&#x67D3;&#x6574;&#x500B;&#x4F5C;&#x7528;&#x57DF; 1 2 3 4 5 6 let name = &apos;Jacob&apos; { let name = &apos;Hsu&apos; } console .log(name) //Jacob"},"core.html#const":{"title":"const","path":"\\javascript\\core.html#const","body":"&#x5229;&#x7528; const &#x53EF;&#x4EE5;&#x505A;&#x5230;&#x9664;&#x4E86;&#x88AB;&#x51CD;&#x7D50; &#x9084;&#x80FD;&#x4E0D;&#x88AB;&#x8CE6;&#x503C; 1 2 3 4 5 6 7 8 9 10 11 12 13 const person = { name: &apos;&#x9EE8;&#x5DE5;&apos; , money: 500 } person.name = &apos;&#x7DB2;&#x8ECD;&apos; Object .freeze(person); person.money = 1000 ; person = {}; // devTool console person // var {} person // const let TDZ 1 2 3 4 5 6 7 8 9 10 let arg = &apos;first&apos; ; { //&#x5275;&#x9020; let arg; // &#x66AB;&#x6642;&#x6027;&#x6B7B;&#x5340; TDZ &#x6709;hoisting&#x4F46;&#x9396;&#x4F4F; //&#x57F7;&#x884C; console .log(arg); // first let arg = &apos;second&apos; } 1 let &#x4E00;&#x6A23;&#x6709;&#x5275;&#x9020;&#x968E;&#x6BB5; 2 &#x4F46;&#x5F9E;&#x5275;&#x9020;&#x5230;&#x5BE6;&#x969B;&#x5BA3;&#x544A;&#x7684;&#x968E;&#x6BB5;&#x6703;&#x51FA;&#x73FE;TDZ &#x9019;&#x500B;&#x5340;&#x57DF;&#x7121;&#x6CD5;&#x547C;&#x53EB;&#x8B8A;&#x6578; 3 &#x6709;&#x5275;&#x9020;&#x5230;&#x57F7;&#x884C;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x4F46;&#x4E0D;&#x6703;&#x9810;&#x5148;&#x51FA;&#x73FE; (&#x6587;&#x4EF6;&#x4E0D;&#x6703;&#x8868;&#x660E;&#x9019;&#x8207; var &#x7684;Hoisting&#x76F8;&#x540C;&#x6982;&#x5FF5;)"},"core.html#ES6-Airbnb":{"title":"ES6 Airbnb","path":"\\javascript\\core.html#ES6-Airbnb","body":"Airbnb &#x898F;&#x7BC4;&#x6587;&#x4EF6; (ES6 &#x7248;&#x672C;)&#xFF1A; https://github.com/airbnb/javascript ESLint &#x5B89;&#x88DD;&#x6559;&#x5B78;&#xFF1A; https://www.youtube.com/watch?v=WiommcFaYvY ? How would you like to use ESLint? (Use arrow keys) To check syntax only To check syntax and find problems &#x276F; To check syntax, find problems, and enforce code style &#x5982;&#x679C;&#x8981;&#x4F7F;&#x7528; Airbnb &#x7684;&#x898F;&#x7BC4;&#xFF0C;&#x8ACB;&#x9078;&#x64C7;&#x6700;&#x5F8C;&#x4E00;&#x500B;&#x9078;&#x9805;&#x3002;"},"core.html#箭頭函數":{"title":"&#x7BAD;&#x982D;&#x51FD;&#x6578;","path":"\\javascript\\core.html#箭頭函數","body":"//&#x6C92;&#x6709;&#x50B3;&#x7D71;&#x51FD;&#x6578; arguments &#x53C3;&#x6578; 1 2 3 4 const nums = function ( ) { console .log( arguments ); } nums( 10 , 50 , 100 , 50 , 5 , 1 ); 1 2 3 4 const nums = () = { console .log( arguments ); //Uncaught ReferenceError } nums( 10 , 50 , 100 , 50 , 5 , 1 ); 1 2 3 4 const nums = ( ...arg ) = { console .log(arg); //Uncaught ReferenceError } nums( 10 , 50 , 100 , 50 , 5 , 1 ); &#x7BAD;&#x982D;&#x51FD;&#x5F0F;&#x6C92;&#x6709;&#x81EA;&#x5DF1;&#x7684;this &#x4ED6;&#x7684;this&#x6307;&#x5411;&#x5916;&#x5C64; 1 2 3 4 5 6 7 const ele = document .querySelector( &apos;p&apos; ); ele.addEventListener( &apos;click&apos; , function ( ) { console .log( this ) }); ele.addEventListener( &apos;click&apos; , () ={ console .log( this ) //&#x6307;&#x5230;&#x4E0D;&#x4E00;&#x6A23;&#x7684;&#x4F4D;&#x7F6E; window &#x5168;&#x57DF; }); &#x7BAD;&#x982D;&#x51FD;&#x6578; &#x5E38;&#x898B;&#x554F;&#x984C; &#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x56DE;&#x50B3;&#x7269;&#x4EF6;&#x5BE6;&#x5B57; 1 2 3 4 const arrFn = () = { data : 1 } console .log(arrFn()) //undefined const arrFnr = () = ({ data : 1 }) console .log(arrFnr()) //{data: 1} &#x642D;&#x914D;&#x5224;&#x65B7;&#x5F0F;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x63A5;&#x7BAD;&#x982D;&#x51FD;&#x5F0F; 1 2 3 4 5 let num = 0 const numFn = num || () = 1 ; console .log(numFn) const numFunction = num || ( ( ) = 1 ); console .log(numFunction) // &#x52A0;&#x62EC;&#x865F;&#x4FEE;&#x6B63; &#x7269;&#x4EF6;&#x88E1;&#x9762;&#x642D;&#x914D;&#x7BAD;&#x982D;&#x51FD;&#x6A39;&#x6703;&#x51FA;&#x932F; &#x6307;&#x5411;&#x662F;&#x4E0D;&#x540C;&#x7684; 1 2 3 4 5 6 7 8 const app = new Vue({ data: { num: 1 }, created: () = { console .log( this .num) //FAIL } }) &#x5E73;&#x5747;&#x6578; 1 2 3 4 5 6 7 8 9 10 const average = function ( ) { // arguments &#x662F;&#x985E;&#x9663;&#x5217;&#x6C92;&#x6709;&#x9663;&#x5217;&#x65B9;&#x6CD5; &#x7528;Array.from&#x8F49;&#x6210;&#x7D14;&#x9663;&#x5217; const nums = Array .from( arguments ); const total = nums.reduce( function ( acc, val ) { return acc + val }, 0 ); // 0 &#x662F;&#x7B2C;&#x4E00;&#x6B21;&#x57F7;&#x884C;&#x7684;&#x524D;&#x4E00;&#x500B;&#x503C; console .log(total); return total / nums.length; } console .log(average( 1 , 2 , 3 , 4 , 5 )) // 15 3 Array.from() Array.reduce() 1 2 const average = ( ...nums ) = nums.reduce( ( acc, val ) = acc + val, 0 ) / nums.length console .log(average( 1 , 2 , 3 , 4 , 5 )) // 3"},"num.html":{"title":"number","path":"\\javascript\\num.html","body":"取值 Math.pow()傳回指定乘冪數的基底運算式值 Math.round() 函數回傳四捨五入後的近似值 Math.floor() 函式會回傳無條件捨去後的最大整數 Math.ceil() 函式會回傳大於等於所給數字的最小整數 1 2 3 4 5 6 7 8 9 10 11 12 13 14 export function precisionRound ( number, precision )  const factor = Math .pow( 10 , precision) return Math .round(number * factor) / factor  export function precisionFloor ( number, precision )  const factor = Math .pow( 10 , precision) return Math .floor(number * factor) / factor  export function precisionCeil ( number, precision )  const factor = Math .pow( 10 , precision) return Math .ceil(number * factor) / factor  補數字 JavaScript 数字前补“0”的五种方法 數字補0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //轉為小數 function padding3 ( num, length )  var decimal = num / Math .pow( 10 , length); //toFixed指定保留幾位小數 decimal = decimal.toFixed(length) + \"\" ; return decimal.substr(decimal.indexOf( \".\" )+ 1 );  console .log( padding3( 7 , 3 ) ) //\"007\" function padding4 ( num, length )  //這裡用slice和substr均可 return ( Array (length).join( \"0\" ) + num).slice(-length);  console .log( padding4( 7 , 3 ) ) //\"007\" 數字填充9 function paddingPoint ( length ) { var decimal = 1 / Math .pow( 10 , length); decimal = decimal.toFixed(length) + \"\" ; return 1 -decimal;} console .log( paddingPoint( 3 ) ) // 0.999 function paddingInt ( length ) { return ( Array (length).join( \"9\" ) + 9 ).slice(-length);} console .log( paddingInt( 3 ) ) //\"999\" console .log( Number (paddingInt( 3 )) + paddingPoint( 3 ) ) // 999.999"},"num.html#取值":{"title":"&#x53D6;&#x503C;","path":"\\javascript\\num.html#取值","body":"Math.pow()&#x50B3;&#x56DE;&#x6307;&#x5B9A;&#x4E58;&#x51AA;&#x6578;&#x7684;&#x57FA;&#x5E95;&#x904B;&#x7B97;&#x5F0F;&#x503C; Math.round() &#x51FD;&#x6578;&#x56DE;&#x50B3;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x5F8C;&#x7684;&#x8FD1;&#x4F3C;&#x503C; Math.floor() &#x51FD;&#x5F0F;&#x6703;&#x56DE;&#x50B3;&#x7121;&#x689D;&#x4EF6;&#x6368;&#x53BB;&#x5F8C;&#x7684;&#x6700;&#x5927;&#x6574;&#x6578; Math.ceil() &#x51FD;&#x5F0F;&#x6703;&#x56DE;&#x50B3;&#x5927;&#x65BC;&#x7B49;&#x65BC;&#x6240;&#x7D66;&#x6578;&#x5B57;&#x7684;&#x6700;&#x5C0F;&#x6574;&#x6578; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 export function precisionRound ( number, precision ) { const factor = Math .pow( 10 , precision) return Math .round(number * factor) / factor } export function precisionFloor ( number, precision ) { const factor = Math .pow( 10 , precision) return Math .floor(number * factor) / factor } export function precisionCeil ( number, precision ) { const factor = Math .pow( 10 , precision) return Math .ceil(number * factor) / factor }"},"num.html#補數字":{"title":"&#x88DC;&#x6578;&#x5B57;","path":"\\javascript\\num.html#補數字","body":"JavaScript &#x6570;&#x5B57;&#x524D;&#x8865;&#x201C;0&#x201D;&#x7684;&#x4E94;&#x79CD;&#x65B9;&#x6CD5; &#x6578;&#x5B57;&#x88DC;0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 //&#x8F49;&#x70BA;&#x5C0F;&#x6578; function padding3 ( num, length ) { var decimal = num / Math .pow( 10 , length); //toFixed&#x6307;&#x5B9A;&#x4FDD;&#x7559;&#x5E7E;&#x4F4D;&#x5C0F;&#x6578; decimal = decimal.toFixed(length) +  ; return decimal.substr(decimal.indexOf( . )+ 1 ); } console .log( padding3( 7 , 3 ) ) //007 function padding4 ( num, length ) { //&#x9019;&#x88E1;&#x7528;slice&#x548C;substr&#x5747;&#x53EF; return ( Array (length).join( 0 ) + num).slice(-length); } console .log( padding4( 7 , 3 ) ) //007 &#x6578;&#x5B57;&#x586B;&#x5145;9 function paddingPoint ( length ) { var decimal = 1 / Math .pow( 10 , length); decimal = decimal.toFixed(length) +  ; return 1 -decimal;} console .log( paddingPoint( 3 ) ) // 0.999 function paddingInt ( length ) { return ( Array (length).join( 9 ) + 9 ).slice(-length);} console .log( paddingInt( 3 ) ) //999 console .log( Number (paddingInt( 3 )) + paddingPoint( 3 ) ) // 999.999"},"performance.html":{"title":"Performance","path":"\\javascript\\performance.html","body":"##　Clean Code 如何寫出漂亮的 JavaScript 代碼 優化原則和方向 性能優化的原則是以更好的用戶體驗為標準，具體就是實現下面的目標： 多使用內存、緩存或者其他方法 減少 CPU 和GPU 計算，更快展現 優化的方向有兩個： 減少頁面體積，提升網路加載 靜態資源的壓縮合併（JS 代碼壓縮合併、CSS 代碼壓縮合併） 靜態資源緩存（資源名稱加 MD5 戳） 使用 CDN 讓資源加載更快 優化頁面渲染 CSS 放前面，JS 放後面 懶加載（圖片懶加載、下拉加載更多） DOM 查詢做緩存 減少DOM 操作，多個操作儘量合併在一起執行（ DocumentFragment ） 儘早執行操作（ DOMContentLoaded ） 事件節流 使用 SSR 後端渲染，數據直接輸出到 HTML 中，減少瀏覽器使用 JS 模板渲染頁面 HTML 的時間 懶加載 一開始先給為 src 賦值成一個通用的預覽圖，下拉時候再動態賦值成正式的圖片。如下，preview.png是預覽圖片，比較小，加載很快，而且很多圖片都共用這個preview.png，加載一次即可。待頁面下拉，圖片顯示出來時，再去替換src為 data-realsrc 的值。 1 2 3 4 5  img src = \"img1\" src = \"preview.jpg\" data-realsrc = 'abc.png'   script type = \"text/javascript\"  \t var img1 = document .getElementById( 'img1' ) \timg1.src= img1.getAttribute( 'data-realsrc' ) / script  另外，這裡為何要用data-開頭的屬性值？ 所有 HTML 中自定義的屬性，都應該用 data- 開頭，因為 data- 開頭的屬性瀏覽器渲染的時候會忽略掉，提高渲染性能。 DOM 查詢做緩存 1 2 3 4 // 每次循環，都會查詢 DOM ，耗費性能 var i for (i = 0 ; i  document .getElementsByTagName( 'p' ).length; i++)   1 2 3 4 5 6 // 只查詢一個 DOM ，緩存在 pList 中了 var pList = document .getElementsByTagName( 'p' ) var i for (i = 0 ; i  pList.length; i++)  //todo  合併 DOM 插入 (createDocumentFragment) DOM 操作是非常耗費性能的，因此插入多個標籤時，先插入 Fragment 然後再統一插入 DOM。 1 2 3 4 5 6 7 8 9 10 var listNode = document .getElementById( 'list' ) // 要插入 10 個 li 標籤 var frag = document .createDocumentFragment(); var x, li; for (x = 0 ; x  10 ; x++)  li = document .createElement( \"li\" ); li.innerHTML = \"List item \" + x; frag.appendChild(li); // 先放在 frag 中，最後一次性插入到 DOM 結構中。  listNode.appendChild(frag); 儘早執行操作 (DOMContentLoaded) 1 2 3 4 5 6 window .addEventListener( 'load' , function ( )  // 頁面的全部資源加載完才會執行，包括圖片、視頻等 ) document .addEventListener( 'DOMContentLoaded' , function ( )  // DOM 渲染完即可執行，此時圖片、視頻還可能沒有加載完 ) 事件節流 例如要在文字改變時觸發一個 change 事件，通過 keyup 來監聽。使用節流。 鍵盤事件 keydown：按下鍵盤鍵 keyup：釋放鍵盤鍵 1 2 3 4 5 6 7 8 9 10 11 12 // 輸入完觸發文字修改事件 var textarea = document .getElementById( 'text' ) var timeoutId textarea.addEventListener( 'keyup' , function ( )  if (timeoutId)  clearTimeout(timeoutId)  // 讓連續鍵入不要頻繁觸發 change 事件 停下才觸發 timeoutId = setTimeout( function ( )  // 觸發 change 事件 , 100 ) ) Rreferences https://is.gd/0IyWU2 https://www.jianshu.com/p/8f839f558319"},"performance.html#優化原則和方向":{"title":"&#x512A;&#x5316;&#x539F;&#x5247;&#x548C;&#x65B9;&#x5411;","path":"\\javascript\\performance.html#優化原則和方向","body":"&#x6027;&#x80FD;&#x512A;&#x5316;&#x7684;&#x539F;&#x5247;&#x662F;&#x4EE5;&#x66F4;&#x597D;&#x7684;&#x7528;&#x6236;&#x9AD4;&#x9A57;&#x70BA;&#x6A19;&#x6E96;&#xFF0C;&#x5177;&#x9AD4;&#x5C31;&#x662F;&#x5BE6;&#x73FE;&#x4E0B;&#x9762;&#x7684;&#x76EE;&#x6A19;&#xFF1A; &#x591A;&#x4F7F;&#x7528;&#x5167;&#x5B58;&#x3001;&#x7DE9;&#x5B58;&#x6216;&#x8005;&#x5176;&#x4ED6;&#x65B9;&#x6CD5; &#x6E1B;&#x5C11; CPU &#x548C;GPU &#x8A08;&#x7B97;&#xFF0C;&#x66F4;&#x5FEB;&#x5C55;&#x73FE; &#x512A;&#x5316;&#x7684;&#x65B9;&#x5411;&#x6709;&#x5169;&#x500B;&#xFF1A; &#x6E1B;&#x5C11;&#x9801;&#x9762;&#x9AD4;&#x7A4D;&#xFF0C;&#x63D0;&#x5347;&#x7DB2;&#x8DEF;&#x52A0;&#x8F09; &#x975C;&#x614B;&#x8CC7;&#x6E90;&#x7684;&#x58D3;&#x7E2E;&#x5408;&#x4F75;&#xFF08;JS &#x4EE3;&#x78BC;&#x58D3;&#x7E2E;&#x5408;&#x4F75;&#x3001;CSS &#x4EE3;&#x78BC;&#x58D3;&#x7E2E;&#x5408;&#x4F75;&#xFF09; &#x975C;&#x614B;&#x8CC7;&#x6E90;&#x7DE9;&#x5B58;&#xFF08;&#x8CC7;&#x6E90;&#x540D;&#x7A31;&#x52A0; MD5 &#x6233;&#xFF09; &#x4F7F;&#x7528; CDN &#x8B93;&#x8CC7;&#x6E90;&#x52A0;&#x8F09;&#x66F4;&#x5FEB; &#x512A;&#x5316;&#x9801;&#x9762;&#x6E32;&#x67D3; CSS &#x653E;&#x524D;&#x9762;&#xFF0C;JS &#x653E;&#x5F8C;&#x9762; &#x61F6;&#x52A0;&#x8F09;&#xFF08;&#x5716;&#x7247;&#x61F6;&#x52A0;&#x8F09;&#x3001;&#x4E0B;&#x62C9;&#x52A0;&#x8F09;&#x66F4;&#x591A;&#xFF09; DOM &#x67E5;&#x8A62;&#x505A;&#x7DE9;&#x5B58; &#x6E1B;&#x5C11;DOM &#x64CD;&#x4F5C;&#xFF0C;&#x591A;&#x500B;&#x64CD;&#x4F5C;&#x5118;&#x91CF;&#x5408;&#x4F75;&#x5728;&#x4E00;&#x8D77;&#x57F7;&#x884C;&#xFF08; DocumentFragment &#xFF09; &#x5118;&#x65E9;&#x57F7;&#x884C;&#x64CD;&#x4F5C;&#xFF08; DOMContentLoaded &#xFF09; &#x4E8B;&#x4EF6;&#x7BC0;&#x6D41; &#x4F7F;&#x7528; SSR &#x5F8C;&#x7AEF;&#x6E32;&#x67D3;&#xFF0C;&#x6578;&#x64DA;&#x76F4;&#x63A5;&#x8F38;&#x51FA;&#x5230; HTML &#x4E2D;&#xFF0C;&#x6E1B;&#x5C11;&#x700F;&#x89BD;&#x5668;&#x4F7F;&#x7528; JS &#x6A21;&#x677F;&#x6E32;&#x67D3;&#x9801;&#x9762; HTML &#x7684;&#x6642;&#x9593;"},"performance.html#懶加載":{"title":"&#x61F6;&#x52A0;&#x8F09;","path":"\\javascript\\performance.html#懶加載","body":"&#x4E00;&#x958B;&#x59CB;&#x5148;&#x7D66;&#x70BA; src &#x8CE6;&#x503C;&#x6210;&#x4E00;&#x500B;&#x901A;&#x7528;&#x7684;&#x9810;&#x89BD;&#x5716;&#xFF0C;&#x4E0B;&#x62C9;&#x6642;&#x5019;&#x518D;&#x52D5;&#x614B;&#x8CE6;&#x503C;&#x6210;&#x6B63;&#x5F0F;&#x7684;&#x5716;&#x7247;&#x3002;&#x5982;&#x4E0B;&#xFF0C;preview.png&#x662F;&#x9810;&#x89BD;&#x5716;&#x7247;&#xFF0C;&#x6BD4;&#x8F03;&#x5C0F;&#xFF0C;&#x52A0;&#x8F09;&#x5F88;&#x5FEB;&#xFF0C;&#x800C;&#x4E14;&#x5F88;&#x591A;&#x5716;&#x7247;&#x90FD;&#x5171;&#x7528;&#x9019;&#x500B;preview.png&#xFF0C;&#x52A0;&#x8F09;&#x4E00;&#x6B21;&#x5373;&#x53EF;&#x3002;&#x5F85;&#x9801;&#x9762;&#x4E0B;&#x62C9;&#xFF0C;&#x5716;&#x7247;&#x986F;&#x793A;&#x51FA;&#x4F86;&#x6642;&#xFF0C;&#x518D;&#x53BB;&#x66FF;&#x63DB;src&#x70BA; data-realsrc &#x7684;&#x503C;&#x3002; 1 2 3 4 5  img src = img1 src = preview.jpg data-realsrc = &apos;abc.png&apos;   script type = text/javascript  \t var img1 = document .getElementById( &apos;img1&apos; ) \timg1.src= img1.getAttribute( &apos;data-realsrc&apos; ) / script  &#x53E6;&#x5916;&#xFF0C;&#x9019;&#x88E1;&#x70BA;&#x4F55;&#x8981;&#x7528;data-&#x958B;&#x982D;&#x7684;&#x5C6C;&#x6027;&#x503C;&#xFF1F; &#x6240;&#x6709; HTML &#x4E2D;&#x81EA;&#x5B9A;&#x7FA9;&#x7684;&#x5C6C;&#x6027;&#xFF0C;&#x90FD;&#x61C9;&#x8A72;&#x7528; data- &#x958B;&#x982D;&#xFF0C;&#x56E0;&#x70BA; data- &#x958B;&#x982D;&#x7684;&#x5C6C;&#x6027;&#x700F;&#x89BD;&#x5668;&#x6E32;&#x67D3;&#x7684;&#x6642;&#x5019;&#x6703;&#x5FFD;&#x7565;&#x6389;&#xFF0C;&#x63D0;&#x9AD8;&#x6E32;&#x67D3;&#x6027;&#x80FD;&#x3002;"},"performance.html#DOM-查詢做緩存":{"title":"DOM &#x67E5;&#x8A62;&#x505A;&#x7DE9;&#x5B58;","path":"\\javascript\\performance.html#DOM-查詢做緩存","body":"1 2 3 4 // &#x6BCF;&#x6B21;&#x5FAA;&#x74B0;&#xFF0C;&#x90FD;&#x6703;&#x67E5;&#x8A62; DOM &#xFF0C;&#x8017;&#x8CBB;&#x6027;&#x80FD; var i for (i = 0 ; i  document .getElementsByTagName( &apos;p&apos; ).length; i++) { } 1 2 3 4 5 6 // &#x53EA;&#x67E5;&#x8A62;&#x4E00;&#x500B; DOM &#xFF0C;&#x7DE9;&#x5B58;&#x5728; pList &#x4E2D;&#x4E86; var pList = document .getElementsByTagName( &apos;p&apos; ) var i for (i = 0 ; i  pList.length; i++) { //todo }"},"performance.html#合併-DOM-插入-createDocumentFragment":{"title":"&#x5408;&#x4F75; DOM &#x63D2;&#x5165; (createDocumentFragment)","path":"\\javascript\\performance.html#合併-DOM-插入-createDocumentFragment","body":"DOM &#x64CD;&#x4F5C;&#x662F;&#x975E;&#x5E38;&#x8017;&#x8CBB;&#x6027;&#x80FD;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x63D2;&#x5165;&#x591A;&#x500B;&#x6A19;&#x7C64;&#x6642;&#xFF0C;&#x5148;&#x63D2;&#x5165; Fragment &#x7136;&#x5F8C;&#x518D;&#x7D71;&#x4E00;&#x63D2;&#x5165; DOM&#x3002; 1 2 3 4 5 6 7 8 9 10 var listNode = document .getElementById( &apos;list&apos; ) // &#x8981;&#x63D2;&#x5165; 10 &#x500B; li &#x6A19;&#x7C64; var frag = document .createDocumentFragment(); var x, li; for (x = 0 ; x  10 ; x++) { li = document .createElement( li ); li.innerHTML = List item  + x; frag.appendChild(li); // &#x5148;&#x653E;&#x5728; frag &#x4E2D;&#xFF0C;&#x6700;&#x5F8C;&#x4E00;&#x6B21;&#x6027;&#x63D2;&#x5165;&#x5230; DOM &#x7D50;&#x69CB;&#x4E2D;&#x3002; } listNode.appendChild(frag);"},"performance.html#儘早執行操作-DOMContentLoaded":{"title":"&#x5118;&#x65E9;&#x57F7;&#x884C;&#x64CD;&#x4F5C; (DOMContentLoaded)","path":"\\javascript\\performance.html#儘早執行操作-DOMContentLoaded","body":"1 2 3 4 5 6 window .addEventListener( &apos;load&apos; , function ( ) { // &#x9801;&#x9762;&#x7684;&#x5168;&#x90E8;&#x8CC7;&#x6E90;&#x52A0;&#x8F09;&#x5B8C;&#x624D;&#x6703;&#x57F7;&#x884C;&#xFF0C;&#x5305;&#x62EC;&#x5716;&#x7247;&#x3001;&#x8996;&#x983B;&#x7B49; }) document .addEventListener( &apos;DOMContentLoaded&apos; , function ( ) { // DOM &#x6E32;&#x67D3;&#x5B8C;&#x5373;&#x53EF;&#x57F7;&#x884C;&#xFF0C;&#x6B64;&#x6642;&#x5716;&#x7247;&#x3001;&#x8996;&#x983B;&#x9084;&#x53EF;&#x80FD;&#x6C92;&#x6709;&#x52A0;&#x8F09;&#x5B8C; })"},"performance.html#事件節流":{"title":"&#x4E8B;&#x4EF6;&#x7BC0;&#x6D41;","path":"\\javascript\\performance.html#事件節流","body":"&#x4F8B;&#x5982;&#x8981;&#x5728;&#x6587;&#x5B57;&#x6539;&#x8B8A;&#x6642;&#x89F8;&#x767C;&#x4E00;&#x500B; change &#x4E8B;&#x4EF6;&#xFF0C;&#x901A;&#x904E; keyup &#x4F86;&#x76E3;&#x807D;&#x3002;&#x4F7F;&#x7528;&#x7BC0;&#x6D41;&#x3002; &#x9375;&#x76E4;&#x4E8B;&#x4EF6; keydown&#xFF1A;&#x6309;&#x4E0B;&#x9375;&#x76E4;&#x9375; keyup&#xFF1A;&#x91CB;&#x653E;&#x9375;&#x76E4;&#x9375; 1 2 3 4 5 6 7 8 9 10 11 12 // &#x8F38;&#x5165;&#x5B8C;&#x89F8;&#x767C;&#x6587;&#x5B57;&#x4FEE;&#x6539;&#x4E8B;&#x4EF6; var textarea = document .getElementById( &apos;text&apos; ) var timeoutId textarea.addEventListener( &apos;keyup&apos; , function ( ) { if (timeoutId) { clearTimeout(timeoutId) } // &#x8B93;&#x9023;&#x7E8C;&#x9375;&#x5165;&#x4E0D;&#x8981;&#x983B;&#x7E41;&#x89F8;&#x767C; change &#x4E8B;&#x4EF6; &#x505C;&#x4E0B;&#x624D;&#x89F8;&#x767C; timeoutId = setTimeout( function ( ) { // &#x89F8;&#x767C; change &#x4E8B;&#x4EF6; }, 100 ) }) Rreferences https://is.gd/0IyWU2 https://www.jianshu.com/p/8f839f558319"},"math.html":{"title":"問題","path":"\\javascript\\math.html","body":"Math Math.pow(x, y) 回傳 x 的 y 次方 1 2 const decimals = 6 console .log( Math .pow( 10 , decimals)) //1000000` 浮點數運算的坑 JavaScript 浮点数陷阱及解法 當你拿到 1.4000000000000001 這樣的數據要展示時，建議使用 toPrecision 湊整併 parseFloat 轉成數字後再顯示，如下： parseFloat(1.4000000000000001.toPrecision(12)) === 1.4 // True 百分比 轉 小數 問題 1 2 3 4 5 6 var a = 0.9 ; var b = a / 100 ; var c = parseFloat ( (a / 100 ).toPrecision( 12 )) console .log(b) // 0.009000000000000001 console .log(c) // 0.009 科學符號處理 npm from-exponential 1 2 3 4 5 6 7 8 span v-text= \"getPriceValue(order.itemPrice)\"  / span  import fromExponential from 'from-exponential' methods:  getPriceValue(value)  return fromExponential(value)   why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 這只是JavaScript遵循IEEE 754標準所產生的必然結果。 IEEE 754標準中 的浮點數並不能精確地表達小數（比如說0.1）， JavaScript中的小數採用的是雙精度(64位)表示的，由三部分組成：　符 + 階碼 + 尾數 IEEE 754 雙精度。六十四位中符號位佔一位，整數位佔十一位，其餘五十二位都為小數位。 因為浮點數隻有52位有效數字，從第53位開始，就舍入了。這樣就造成了“浮點數精度損失”問題。 因為 0.1 和 0.2 都是無限循環的二進制了，所以在小數位末尾處需要判斷是否進位（就和十進制的四捨五入一樣）。 計算機表示十進制是採用二進製表示的，所以 0.1 在二進製表示為 `0.1.toString(2) // “0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01” 小數的算法，是乘2 0.1 × 2 ￣￣￣￣ 0.2 → 取小數前的 0 0.2 × 2 ￣￣￣￣ 0.4 → 取小數前的 0 0.4 × 2 ￣￣￣￣ 0.8 → 取小數前的 0 0.8 × 2 ￣￣￣￣ 1.6 → 取小數前的 1 0.6 × 2 ￣￣￣￣ 1.2 → 取小數前的 1 0.2 × 2 ￣￣￣￣ 0.4 → 取小數前的 0 十進位 0.1 = 二進位 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 從上面可以看出，0.1的二進制格式是：0.0001100011….。這是一個二進制無限循環小數，但計算機內存有限，我們不能用儲存所有的小數位數。那麼在精度與內存間如何取捨呢？ 答案是： 在某個精度點直接捨棄 (第53位開始)。當然，代價就是，0.1在計算機內部根本就不是精確的0.1，而是一個有舍入誤差的0.1。當代碼被編譯或解釋後，0.1已經被四捨五入成一個與之很接近的計算機內部數字，以至於計算還沒開始，一個很小的舍入錯誤就已經產生了。這也就是 0.1 + 0.2 不等於0.3 的原因。 使用JavaScript內置的函數 toPrecision 或 toFixed 來保留一定的精度： (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true 不要相信js的計算 善用 math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"math.html#Math":{"title":"Math","path":"\\javascript\\math.html#Math","body":"Math.pow(x, y) &#x56DE;&#x50B3; x &#x7684; y &#x6B21;&#x65B9; 1 2 const decimals = 6 console .log( Math .pow( 10 , decimals)) //1000000` &#x6D6E;&#x9EDE;&#x6578;&#x904B;&#x7B97;&#x7684;&#x5751; JavaScript &#x6D6E;&#x70B9;&#x6570;&#x9677;&#x9631;&#x53CA;&#x89E3;&#x6CD5; &#x7576;&#x4F60;&#x62FF;&#x5230; 1.4000000000000001 &#x9019;&#x6A23;&#x7684;&#x6578;&#x64DA;&#x8981;&#x5C55;&#x793A;&#x6642;&#xFF0C;&#x5EFA;&#x8B70;&#x4F7F;&#x7528; toPrecision &#x6E4A;&#x6574;&#x4F75; parseFloat &#x8F49;&#x6210;&#x6578;&#x5B57;&#x5F8C;&#x518D;&#x986F;&#x793A;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; parseFloat(1.4000000000000001.toPrecision(12)) === 1.4 // True &#x767E;&#x5206;&#x6BD4; &#x8F49; &#x5C0F;&#x6578; &#x554F;&#x984C; 1 2 3 4 5 6 var a = 0.9 ; var b = a / 100 ; var c = parseFloat ( (a / 100 ).toPrecision( 12 )) console .log(b) // 0.009000000000000001 console .log(c) // 0.009 &#x79D1;&#x5B78;&#x7B26;&#x865F;&#x8655;&#x7406; npm from-exponential 1 2 3 4 5 6 7 8 span v-text= getPriceValue(order.itemPrice)  / span  import fromExponential from &apos;from-exponential&apos; methods: { getPriceValue(value) { return fromExponential(value) } } why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002; IEEE 754&#x6A19;&#x6E96;&#x4E2D; &#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"math.html#浮點數運算的坑":{"title":"&#x6D6E;&#x9EDE;&#x6578;&#x904B;&#x7B97;&#x7684;&#x5751;","path":"\\javascript\\math.html#浮點數運算的坑","body":"JavaScript &#x6D6E;&#x70B9;&#x6570;&#x9677;&#x9631;&#x53CA;&#x89E3;&#x6CD5; &#x7576;&#x4F60;&#x62FF;&#x5230; 1.4000000000000001 &#x9019;&#x6A23;&#x7684;&#x6578;&#x64DA;&#x8981;&#x5C55;&#x793A;&#x6642;&#xFF0C;&#x5EFA;&#x8B70;&#x4F7F;&#x7528; toPrecision &#x6E4A;&#x6574;&#x4F75; parseFloat &#x8F49;&#x6210;&#x6578;&#x5B57;&#x5F8C;&#x518D;&#x986F;&#x793A;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; parseFloat(1.4000000000000001.toPrecision(12)) === 1.4 // True &#x767E;&#x5206;&#x6BD4; &#x8F49; &#x5C0F;&#x6578; &#x554F;&#x984C; 1 2 3 4 5 6 var a = 0.9 ; var b = a / 100 ; var c = parseFloat ( (a / 100 ).toPrecision( 12 )) console .log(b) // 0.009000000000000001 console .log(c) // 0.009 &#x79D1;&#x5B78;&#x7B26;&#x865F;&#x8655;&#x7406; npm from-exponential 1 2 3 4 5 6 7 8 span v-text= getPriceValue(order.itemPrice)  / span  import fromExponential from &apos;from-exponential&apos; methods: { getPriceValue(value) { return fromExponential(value) } } why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002; IEEE 754&#x6A19;&#x6E96;&#x4E2D; &#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"math.html#科學符號處理":{"title":"&#x79D1;&#x5B78;&#x7B26;&#x865F;&#x8655;&#x7406;","path":"\\javascript\\math.html#科學符號處理","body":"npm from-exponential 1 2 3 4 5 6 7 8 span v-text= getPriceValue(order.itemPrice)  / span  import fromExponential from &apos;from-exponential&apos; methods: { getPriceValue(value) { return fromExponential(value) } } why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002; IEEE 754&#x6A19;&#x6E96;&#x4E2D; &#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"math.html#why-0-1-0-2-0-3":{"title":"why 0.1 + 0.2 != 0.3","path":"\\javascript\\math.html#why-0-1-0-2-0-3","body":"0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002; IEEE 754&#x6A19;&#x6E96;&#x4E2D; &#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"scope.html":{"title":"Scope","path":"\\javascript\\scope.html","body":"範圍鏈 當函式本身沒有變數會向外層尋找 1 2 3 4 5 6 7 8 9 10 var value = 1 function fn1 ( )  console .log(value) //沒有變數 向外尋找 指向全域的變數 value=1 //尋找時與執行環境無關 因為js是語法作用域 撰寫時已確定作用域  function fn2 ( )  var value = 2 fn1()  fn2() 變數的作用域在函式內 全域變數 vs 區域變數：內可用外，外不可用內。 不能污染全域變數。 1 2 3 4 5 var value = \"global\" ; var fn = function ( )  console .log(value); // \"global\"  fn(); 1 2 3 4 5 6 7 var value = \"global\" ; var fn = function ( )  console .log(value); // \"global\" value = \"local\" ; console .log(value); // \"local\"  fn(); 1 2 3 4 5 6 var value = \"global\" ; var fn = function ( )  console .log(value); // undefined var value = \"local\" ;  fn(); 1 2 3 4 5 6 7 8 9 var scope = 'global' ; function checkScope ( )  var scope = 'local' ; function fn ( )  return scope;  return fn(); ; console .log( checkScope() ); // \"local\" 1 2 3 4 5 6 7 8 9 var value = 'global' ; var person =  value: 'local' , callSomeone: function ( )  console .log(value) ,  person.callSomeone() //\"global\" 1 2 3 4 5 6 var foo = \"global\" ; ( function ( )  var bar = \"Local\" console .log(foo+bar); //\"globalLocal\" )(); console .log(foo+bar); // \"error\" ReferenceError: bar is not defined 1 2 3 4 5 ( function ( )  var a = b = 1 ; )(); console .log(b); // 1 b沒有宣告 為全域 ‘use strict’ 1 2 3 4 5 ( function ( )  'use strict' ; var a = b = 1 ; )(); console .log(b); // \"error\" \"ReferenceError: b is not defined 注意: 只有將 &#39;use strict&#39; 放在函式開頭才會有作用。 References https://paper.dropbox.com/doc/JS--AaILvqN7Gcen3zEExnLuHUzmAg-K98zBcemd1Ig9DZYYNruL https://wcc723.github.io/javascript/2017/12/15/javascript-use-strict/"},"url.html":{"title":"URL","path":"\\javascript\\url.html","body":"取得網址的property window.location.href 取得目前造訪網頁的網址 window.location.protocol 取得目前造訪網頁的通訊協定(protocol) window.location.host 取得目前造訪網頁的主機名稱(hostname), 包含port window.location.hostname 取得目前造訪網頁的主機名稱(hostname) window.location.pathname 取得目前造訪網頁的路徑(path) window.location.hash 取得目前造訪網頁茅點(#)(hashtag) window.location.port 取得目前造訪網頁的port window.location.search 取得目前造訪網頁查詢參數(?) sample location.href = https://${window.location.host}"},"operators.html":{"title":"Operators","path":"\\javascript\\operators.html","body":"What is the difference between the equality operators == and === ? 三個等號 === 表示嚴格相等，也就是說類型和值都必須相同。兩個等號 == 會使其中一邊的類型進行強制轉換，使等號兩邊的類型都相等後再對數值進行比較。 加分回答 儘量使用全等操作符。因為其沒有隱式轉換，這樣結果會比較容易預測、計算也會比較快 除了等於操作符，還可以使用 Object.is 進行同值比較。他有著自己的特殊用途，不應說他更寬鬆或更嚴格於其他等於操作符 === 比較不是一個比較好的解決方式，你可以得到這樣的結果： NaN === NaN //false 好消息是在 ES6 有一個新的 Object.is() ，它是更精確而且和 === 有相同的功能，在某些特殊情況下也運作的很好： Mozilla 團隊 不認為 Object.is 比 === 更嚴格，他們宣稱我們應該思考這些方法如何處理 NaN、-0 和 +0 1 2 3 4 Object .is( 0 , ' ' ); //false Object .is( null , undefined ); //false Object .is([ 1 ], true ); //false Object .is( NaN , NaN ); //true https://jsbin.com/guqetaviho/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 var a = true , b = 1 ; console .log(a==b); //true console .log(a===b); //false console .log(a==b== 1 ); //true console .log(a===b== 1 ); //false console .log(a===b=== 1 ); //false console .log(a==b=== 1 ); // false console .log(a==b== 0 ); // false console .log(a===b== 0 ); // true console .log(a===b=== 0 ); // false console .log(a==b=== 0 ); // false http://www.jstips.co/zh_tw/javascript/why-you-should-use-Object.is()-in-equality-comparison/ https://30secondsofinterviews.org/ https://hacpai.com/article/1546570870626?r=Vanessa ++ Increment 後置遞增 i++ 和前置遞增 ++i 操作有什麼區別？ 他們都會使變量增加 1，只是計算和賦值的順序不一樣。 後置遞增是先賦值後計算，如： 1 2 3 4 5 let i = 1 ; console .log(i); // 1 let a = i++; console .log(i); // 2 console .log(a); // 1 前置遞增是先計算後賦值，如： 1 2 3 4 5 let i = 1 ; console .log(i); // 1 let a = ++i; console .log(i); // 2 console .log(a); // 2 https://jsbin.com/samaxubazo/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 function aFunc ( x )  return () = console .log(x++);  function bFunc ( x )  return x++;  function cFunc ( x )  return ++x;  let newFunc = aFunc( 1 ) newFunc() //1 newFunc() //2 newFunc() //3 console .log(bFunc( 1 )) //1 console .log(cFunc( 1 )) //2 references https://www.w3schools.com/js/js_operators.asp https://hacpai.com/article/1546665384680?r=Vanessa Adding Strings and Numbers 1 2 3 var x = 5 + 5 ; // 10 var y = \"5\" + 5 ; // 55 var z = \"Hello\" + 5 ; //Hello5 https://jsbin.com/hupumaxoru/edit?js,console 1 2 3 4 5 6 7 8 9 console .log( 1 + \"2\" + \"2\" ); // \"122\" //console.log(1++\"2\"+\"2\"); // \"error\" \"ReferenceError: Invalid left-hand side expression in postfix operation console .log( 1 + + \"2\" + \"2\" ); // \"32\" console .log( 1 + - \"1\" + \"2\" ); // \"02\" console .log(+ \"1\" + + \"1\" + \"2\" ); // \"22\" console .log( \"A\" - \"B\" ); // NaN console .log( \"A\" - \"B\" + \"2\" ); // \"NaN2\" console .log( \"A\" + \"B\" + \"2\" ); // \"AB2\" console .log( \"A\" + \"B\" + 2 ); // \"AB2\" https://www.w3schools.com/js/js_operators.asp"},"operators.html#What-is-the-difference-between-the-equality-operators-and":{"title":"What is the difference between the equality operators == and === ?","path":"\\javascript\\operators.html#What-is-the-difference-between-the-equality-operators-and","body":"&#x4E09;&#x500B;&#x7B49;&#x865F; === &#x8868;&#x793A;&#x56B4;&#x683C;&#x76F8;&#x7B49;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#x985E;&#x578B;&#x548C;&#x503C;&#x90FD;&#x5FC5;&#x9808;&#x76F8;&#x540C;&#x3002;&#x5169;&#x500B;&#x7B49;&#x865F; == &#x6703;&#x4F7F;&#x5176;&#x4E2D;&#x4E00;&#x908A;&#x7684;&#x985E;&#x578B;&#x9032;&#x884C;&#x5F37;&#x5236;&#x8F49;&#x63DB;&#xFF0C;&#x4F7F;&#x7B49;&#x865F;&#x5169;&#x908A;&#x7684;&#x985E;&#x578B;&#x90FD;&#x76F8;&#x7B49;&#x5F8C;&#x518D;&#x5C0D;&#x6578;&#x503C;&#x9032;&#x884C;&#x6BD4;&#x8F03;&#x3002; &#x52A0;&#x5206;&#x56DE;&#x7B54; &#x5118;&#x91CF;&#x4F7F;&#x7528;&#x5168;&#x7B49;&#x64CD;&#x4F5C;&#x7B26;&#x3002;&#x56E0;&#x70BA;&#x5176;&#x6C92;&#x6709;&#x96B1;&#x5F0F;&#x8F49;&#x63DB;&#xFF0C;&#x9019;&#x6A23;&#x7D50;&#x679C;&#x6703;&#x6BD4;&#x8F03;&#x5BB9;&#x6613;&#x9810;&#x6E2C;&#x3001;&#x8A08;&#x7B97;&#x4E5F;&#x6703;&#x6BD4;&#x8F03;&#x5FEB; &#x9664;&#x4E86;&#x7B49;&#x65BC;&#x64CD;&#x4F5C;&#x7B26;&#xFF0C;&#x9084;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; Object.is &#x9032;&#x884C;&#x540C;&#x503C;&#x6BD4;&#x8F03;&#x3002;&#x4ED6;&#x6709;&#x8457;&#x81EA;&#x5DF1;&#x7684;&#x7279;&#x6B8A;&#x7528;&#x9014;&#xFF0C;&#x4E0D;&#x61C9;&#x8AAA;&#x4ED6;&#x66F4;&#x5BEC;&#x9B06;&#x6216;&#x66F4;&#x56B4;&#x683C;&#x65BC;&#x5176;&#x4ED6;&#x7B49;&#x65BC;&#x64CD;&#x4F5C;&#x7B26; === &#x6BD4;&#x8F03;&#x4E0D;&#x662F;&#x4E00;&#x500B;&#x6BD4;&#x8F03;&#x597D;&#x7684;&#x89E3;&#x6C7A;&#x65B9;&#x5F0F;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x9019;&#x6A23;&#x7684;&#x7D50;&#x679C;&#xFF1A; NaN === NaN //false &#x597D;&#x6D88;&#x606F;&#x662F;&#x5728; ES6 &#x6709;&#x4E00;&#x500B;&#x65B0;&#x7684; Object.is() &#xFF0C;&#x5B83;&#x662F;&#x66F4;&#x7CBE;&#x78BA;&#x800C;&#x4E14;&#x548C; === &#x6709;&#x76F8;&#x540C;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x5728;&#x67D0;&#x4E9B;&#x7279;&#x6B8A;&#x60C5;&#x6CC1;&#x4E0B;&#x4E5F;&#x904B;&#x4F5C;&#x7684;&#x5F88;&#x597D;&#xFF1A; Mozilla &#x5718;&#x968A; &#x4E0D;&#x8A8D;&#x70BA; Object.is &#x6BD4; === &#x66F4;&#x56B4;&#x683C;&#xFF0C;&#x4ED6;&#x5011;&#x5BA3;&#x7A31;&#x6211;&#x5011;&#x61C9;&#x8A72;&#x601D;&#x8003;&#x9019;&#x4E9B;&#x65B9;&#x6CD5;&#x5982;&#x4F55;&#x8655;&#x7406; NaN&#x3001;-0 &#x548C; +0 1 2 3 4 Object .is( 0 , &apos; &apos; ); //false Object .is( null , undefined ); //false Object .is([ 1 ], true ); //false Object .is( NaN , NaN ); //true https://jsbin.com/guqetaviho/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 var a = true , b = 1 ; console .log(a==b); //true console .log(a===b); //false console .log(a==b== 1 ); //true console .log(a===b== 1 ); //false console .log(a===b=== 1 ); //false console .log(a==b=== 1 ); // false console .log(a==b== 0 ); // false console .log(a===b== 0 ); // true console .log(a===b=== 0 ); // false console .log(a==b=== 0 ); // false http://www.jstips.co/zh_tw/javascript/why-you-should-use-Object.is()-in-equality-comparison/ https://30secondsofinterviews.org/ https://hacpai.com/article/1546570870626?r=Vanessa"},"operators.html#Increment":{"title":"++ Increment","path":"\\javascript\\operators.html#Increment","body":"&#x5F8C;&#x7F6E;&#x905E;&#x589E; i++ &#x548C;&#x524D;&#x7F6E;&#x905E;&#x589E; ++i &#x64CD;&#x4F5C;&#x6709;&#x4EC0;&#x9EBC;&#x5340;&#x5225;&#xFF1F; &#x4ED6;&#x5011;&#x90FD;&#x6703;&#x4F7F;&#x8B8A;&#x91CF;&#x589E;&#x52A0; 1&#xFF0C;&#x53EA;&#x662F;&#x8A08;&#x7B97;&#x548C;&#x8CE6;&#x503C;&#x7684;&#x9806;&#x5E8F;&#x4E0D;&#x4E00;&#x6A23;&#x3002; &#x5F8C;&#x7F6E;&#x905E;&#x589E;&#x662F;&#x5148;&#x8CE6;&#x503C;&#x5F8C;&#x8A08;&#x7B97;&#xFF0C;&#x5982;&#xFF1A; 1 2 3 4 5 let i = 1 ; console .log(i); // 1 let a = i++; console .log(i); // 2 console .log(a); // 1 &#x524D;&#x7F6E;&#x905E;&#x589E;&#x662F;&#x5148;&#x8A08;&#x7B97;&#x5F8C;&#x8CE6;&#x503C;&#xFF0C;&#x5982;&#xFF1A; 1 2 3 4 5 let i = 1 ; console .log(i); // 1 let a = ++i; console .log(i); // 2 console .log(a); // 2 https://jsbin.com/samaxubazo/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 function aFunc ( x ) { return () = console .log(x++); } function bFunc ( x ) { return x++; } function cFunc ( x ) { return ++x; } let newFunc = aFunc( 1 ) newFunc() //1 newFunc() //2 newFunc() //3 console .log(bFunc( 1 )) //1 console .log(cFunc( 1 )) //2 references https://www.w3schools.com/js/js_operators.asp https://hacpai.com/article/1546665384680?r=Vanessa"},"operators.html#references":{"title":"references","path":"\\javascript\\operators.html#references","body":"https://www.w3schools.com/js/js_operators.asp https://hacpai.com/article/1546665384680?r=Vanessa"},"operators.html#Adding-Strings-and-Numbers":{"title":"Adding Strings and Numbers","path":"\\javascript\\operators.html#Adding-Strings-and-Numbers","body":"1 2 3 var x = 5 + 5 ; // 10 var y = 5 + 5 ; // 55 var z = Hello + 5 ; //Hello5 https://jsbin.com/hupumaxoru/edit?js,console 1 2 3 4 5 6 7 8 9 console .log( 1 + 2 + 2 ); // 122 //console.log(1++2+2); // error ReferenceError: Invalid left-hand side expression in postfix operation console .log( 1 + + 2 + 2 ); // 32 console .log( 1 + - 1 + 2 ); // 02 console .log(+ 1 + + 1 + 2 ); // 22 console .log( A - B ); // NaN console .log( A - B + 2 ); // NaN2 console .log( A + B + 2 ); // AB2 console .log( A + B + 2 ); // AB2 https://www.w3schools.com/js/js_operators.asp"},"this.html":{"title":"This","path":"\\javascript\\this.html","body":"物件的方法調用 (As an object method) 物件下呼叫會影響 this 的指向 https://jsbin.com/viziyewore/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 function callName ( )  console .log( this .name);  var name = '全域' ; var obj =  name: '區域' , callName: callName, watch:  name: 'Watch' , callName: callName   callName() // \"全域\" obj.callName(); //\"區域\" ，呼叫是在物件下調用，那麼 this 則是該物件 obj.watch.callName(); //\"Watch\" https://jsbin.com/vihonezita/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 var name = '全域' ; var obj =  name: '區域' , callName: function ( )  console .log( this .name);   //callName; // callName is not defined //callName(); // error\" \"TypeError: callName is not a function obj.callName(); //\"區域\" ，呼叫是在物件下調用，那麼 this 則是該物件 var callName = obj.callName; callName(); // \"全域\" 1 2 3 4 5 6 7 8 9 var name = '全域' var obj =  //name : '物件的', x: function ( )  name = '函式的' ; console .log( this .name); //\"物件的\" 找不到就會undefined   obj.x() 簡易呼叫 1 2 3 4 5 6 7 8 9 var name = '全域' var obj =  name : '物件的' , getName: function ( )  return this .name;   var getName = obj.getName; console .log(getName()) //\"全域\" 1 2 3 4 5 6 7 8 9 10 var name = '全域' var obj =  name : '物件的' , fn: function ( a, b, c )  return this .name+ ',' +a+ ',' +b+ ',' +c;   var fnA = obj.fn; var fnB = fnA.bind( null , 0 ); // a console .log( fnB( 1 , 2 ) ) // b c \"全域,0,1,2\" 1 2 3 4 5 6 7 8 9 10 11 var name = '全域' var obj =  name : '物件的' , fn: function ( a, b, c )  'use strict' return this + ',' +a+ ',' +b+ ',' +c;   var fnA = obj.fn; var fnB = fnA.bind( null , 0 ); // a console .log( fnB( 1 , 2 ) ) // b c \"null,0,1,2\" 1 2 3 4 5 6 7 8 9 10 11 12 13 var value = 'global' ; var foo =  value: 'local' , bar: function ( )  return this .value;   console .log(foo.bar()); // \"local\" // 下面是表達式 執行時直接把函數取出來 執行函式的結果 console .log( foo.bar = foo.bar ); // function() return this.value; // 賦值是表達式 表達式會回傳結果 console .log( (foo.bar = foo.bar)() ); // \"global\" console .log( ( false || foo.bar)() ) // \"global\" 1 2 3 4 5 6 7 8 var value = 'global' ; var obj =  x: function ( )  value: 'fn' , console .log( this .value); //undefined ,  obj.x(); // \"local\" 1 2 3 4 5 6 7 8 9 10 var value = 'global' ; var obj =  x: function ( )  value: 'fn' , console .log( this .value); , value: 'local' ,  obj.x(); // \"local\" 立即函式： 1 2 3 4 5 6 7 var name = '全域' ; ( function ( )  function callSomeone ( )  console .log( this .name);  callSomeone(); //\"全域\" )(); 1 2 3 4 5 var name = '全域' ; ( function ( )  var name = '區域' ; console .log( this .name); //\"全域\" )() 1 2 3 4 5 6 7 8 9 10 var name = '全域' ; var obj =  name: '區域' , callName: function ( )  console .log( this .name);  ; ( function ( )  obj.callName(); // \"區域\" )(); Closure https://jsbin.com/tagalenuje/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 var name = '全域' function easyCard ( base = 100 )  var money = base return function ( update = 10 )  money = money + update console .log( this .name, money)   var MingEasyCard = easyCard( 100 ) MingEasyCard(); // 110 MingEasyCard(); // 120 var YourEasyCard = easyCard( 20 ); YourEasyCard(); //30 var YourEasyCard2 = easyCard( 20 ); YourEasyCard2( 100 ); // 120 var MyEasyCard = easyCard( 1000 )( 100 ); MyEasyCard( 100 ); // \"TypeError: MyEasyCard is not a function 1 2 3 4 5 6 7 8 9 10 11 var name = '全域' function easyCard ( base = 100 )  var money = base var name = '悠遊卡' return function ( update = 10 )  money = money + update console .log( this .name, money) // \"全域\" 110   var MingEasyCard = easyCard( 100 ) MingEasyCard() Callback 1 2 3 4 5 6 7 function myEasyCard ( callback )  var money = 150 return callback(money)  myEasyCard( function ( money )  console .log( money + 100 ) //250 ) 1 2 3 4 var a = [ 1 , 2 , 3 ]; a.forEach( function ( item )  console .log( this , item) ); https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#語法 1 2 3 arr.forEach( function callback ( currentValue[, index[, array]] )  //your iterator [, thisArg]); 這個 callback 函式將會把 Array 中的每一個元素作為參數，帶進本 callback 函式裡，每個元素各執行一次，接收三個參數： currentValue 代表目前被處理中的 Array 之中的那個元素。 index,array, thisArg 選擇性 Note: IIFE、Closure、Callback function 與 this 關係是!? 沒有關係 bind, apply, call call &amp; apply 可以作為呼叫 Function 的另一個手段，皆是回傳function執行結果 而 bind 則會回傳一個經過包裹後的 Function 回來，回傳的是綁定 this 後的 原函數 。 「綁定this的函數」 一但被綁定，其this無法再被修改。 call vs. apply 作用完全一樣，只是接受參數的方式不太一樣 1 2 func.call( this , arg1, arg2); func.apply( this , [arg1, arg2]); //陣列 JavaScript Call 使用給定的this參數以及分別給定的參數來呼叫某個函數 1 2 3 4 5 6 7 8 9 10 11 function callName ( name )  console .log( this .name, name);  var name = '全域' ; var obj =  name: '區域' ,  callName( undefined , '全域2' ); // \"全域\" undefined (this.name, name) callName.call( undefined , '呼叫' ); // \"全域\" \"呼叫\" (this.name, name) 無值傳入this往上找 callName.call(obj, '呼叫' ); // \"區域\" \"呼叫\" (this.name, name) bind 是ES5中新增的一個方法，可以改變函數內部的this指向 bind的應用場景 借用Array的原生方法 https://jsbin.com/pupasabapa/edit?js,console 1 2 3 4 5 6 7 8 9 var a = ; Array .prototype.push.bind(a, \"hello\" , \"world\" )(); console .log(a); // [object Object]  // 0: \"hello\", // 1: \"world\", // length: 2 //  http://www.dengzhr.com/js/1069 箭頭函式 「箭頭函式沒有自己的 this」 https://jsbin.com/wuxiqeciko/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 var name = '全域' var obj =  name: '區域' , callName: function ( )  // 注意，這裡是 function，以此為基準產生一個作用域 console .log( '1' , this .name); // 1 \"區域\" setTimeout( () =  console .log( '2' , this .name); // 2 \"區域\" //console.log('3', this); // 3 obj 這個物件 , 10 ); , callNameArrow: () =  // 注意，如果使用箭頭函式，this 依然指向 window console .log( '4' , this .name); // 4 \"全域\" setTimeout( () =  console .log( '5' , this .name); // 5 \"全域\" //console.log('6', this); // 6 window 物件 , 10 );   obj.callName(); obj.callNameArrow(); const func = (x) = x + 1 const func = function (x) { return x + 1 } JS語言中函式的設計，必有回傳值，沒寫相當於回傳 undefined map 1 2 3 4 5 6 7 8 9 10 // ['1','2','3'] 字串透過parseInt 轉數字 var arr = [ '1' , '2' , '3' ].map( parseInt ); console .log(arr) // [1, NaN, NaN] var arr = [ '1' , '2' , '3' ].map( function ( item, i )  console .log(item, i) // parseInt('1', 0); parseInt('2', 1); parseInt('3', 2); // parseInt('2', 1) 進位系統的1 表數字到1 進到下一位 所以2不會存在NaN // parseInt('11', 2) 進位系統的2 11表示2+1=3 return parseInt (item, 10 ) // \"1\" \"2\" \"3\" parseInt(item, i) ); map() callback 回呼函式 參數 currentValue index array parseInt() radix 能代表該進位系統的數字 注意，通常預設值不是 10 進位 References https://wcc723.github.io/javascript/2019/03/18/JS-THIS/ https://paper.dropbox.com/doc/JSJavaScript-This---AZqD8PDvbl5uk5Mfq_EJlXMkAg-Xw50EZtMFNqG0wUxKeIaz https://wcc723.github.io/javascript/2017/12/21/javascript-es6-arrow-function/"},"this.html#物件的方法調用-As-an-object-method":{"title":"&#x7269;&#x4EF6;&#x7684;&#x65B9;&#x6CD5;&#x8ABF;&#x7528; (As an object method)","path":"\\javascript\\this.html#物件的方法調用-As-an-object-method","body":"&#x7269;&#x4EF6;&#x4E0B;&#x547C;&#x53EB;&#x6703;&#x5F71;&#x97FF; this &#x7684;&#x6307;&#x5411; https://jsbin.com/viziyewore/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 function callName ( ) { console .log( this .name); } var name = &apos;&#x5168;&#x57DF;&apos; ; var obj = { name: &apos;&#x5340;&#x57DF;&apos; , callName: callName, watch: { name: &apos;Watch&apos; , callName: callName } } callName() // &#x5168;&#x57DF; obj.callName(); //&#x5340;&#x57DF; &#xFF0C;&#x547C;&#x53EB;&#x662F;&#x5728;&#x7269;&#x4EF6;&#x4E0B;&#x8ABF;&#x7528;&#xFF0C;&#x90A3;&#x9EBC; this &#x5247;&#x662F;&#x8A72;&#x7269;&#x4EF6; obj.watch.callName(); //Watch https://jsbin.com/vihonezita/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 var name = &apos;&#x5168;&#x57DF;&apos; ; var obj = { name: &apos;&#x5340;&#x57DF;&apos; , callName: function ( ) { console .log( this .name); } } //callName; // callName is not defined //callName(); // error TypeError: callName is not a function obj.callName(); //&#x5340;&#x57DF; &#xFF0C;&#x547C;&#x53EB;&#x662F;&#x5728;&#x7269;&#x4EF6;&#x4E0B;&#x8ABF;&#x7528;&#xFF0C;&#x90A3;&#x9EBC; this &#x5247;&#x662F;&#x8A72;&#x7269;&#x4EF6; var callName = obj.callName; callName(); // &#x5168;&#x57DF; 1 2 3 4 5 6 7 8 9 var name = &apos;&#x5168;&#x57DF;&apos; var obj = { //name : &apos;&#x7269;&#x4EF6;&#x7684;&apos;, x: function ( ) { name = &apos;&#x51FD;&#x5F0F;&#x7684;&apos; ; console .log( this .name); //&#x7269;&#x4EF6;&#x7684; &#x627E;&#x4E0D;&#x5230;&#x5C31;&#x6703;undefined } } obj.x()"},"this.html#簡易呼叫":{"title":"&#x7C21;&#x6613;&#x547C;&#x53EB;","path":"\\javascript\\this.html#簡易呼叫","body":"1 2 3 4 5 6 7 8 9 var name = &apos;&#x5168;&#x57DF;&apos; var obj = { name : &apos;&#x7269;&#x4EF6;&#x7684;&apos; , getName: function ( ) { return this .name; } } var getName = obj.getName; console .log(getName()) //&#x5168;&#x57DF; 1 2 3 4 5 6 7 8 9 10 var name = &apos;&#x5168;&#x57DF;&apos; var obj = { name : &apos;&#x7269;&#x4EF6;&#x7684;&apos; , fn: function ( a, b, c ) { return this .name+ &apos;,&apos; +a+ &apos;,&apos; +b+ &apos;,&apos; +c; } } var fnA = obj.fn; var fnB = fnA.bind( null , 0 ); // a console .log( fnB( 1 , 2 ) ) // b c &#x5168;&#x57DF;,0,1,2 1 2 3 4 5 6 7 8 9 10 11 var name = &apos;&#x5168;&#x57DF;&apos; var obj = { name : &apos;&#x7269;&#x4EF6;&#x7684;&apos; , fn: function ( a, b, c ) { &apos;use strict&apos; return this + &apos;,&apos; +a+ &apos;,&apos; +b+ &apos;,&apos; +c; } } var fnA = obj.fn; var fnB = fnA.bind( null , 0 ); // a console .log( fnB( 1 , 2 ) ) // b c null,0,1,2 1 2 3 4 5 6 7 8 9 10 11 12 13 var value = &apos;global&apos; ; var foo = { value: &apos;local&apos; , bar: function ( ) { return this .value; } } console .log(foo.bar()); // local // &#x4E0B;&#x9762;&#x662F;&#x8868;&#x9054;&#x5F0F; &#x57F7;&#x884C;&#x6642;&#x76F4;&#x63A5;&#x628A;&#x51FD;&#x6578;&#x53D6;&#x51FA;&#x4F86; &#x57F7;&#x884C;&#x51FD;&#x5F0F;&#x7684;&#x7D50;&#x679C; console .log( foo.bar = foo.bar ); // function() {return this.value;} // &#x8CE6;&#x503C;&#x662F;&#x8868;&#x9054;&#x5F0F; &#x8868;&#x9054;&#x5F0F;&#x6703;&#x56DE;&#x50B3;&#x7D50;&#x679C; console .log( (foo.bar = foo.bar)() ); // global console .log( ( false || foo.bar)() ) // global 1 2 3 4 5 6 7 8 var value = &apos;global&apos; ; var obj = { x: function ( ) { value: &apos;fn&apos; , console .log( this .value); //undefined }, } obj.x(); // local 1 2 3 4 5 6 7 8 9 10 var value = &apos;global&apos; ; var obj = { x: function ( ) { value: &apos;fn&apos; , console .log( this .value); }, value: &apos;local&apos; , } obj.x(); // local"},"this.html#立即函式：":{"title":"&#x7ACB;&#x5373;&#x51FD;&#x5F0F;&#xFF1A;","path":"\\javascript\\this.html#立即函式：","body":"1 2 3 4 5 6 7 var name = &apos;&#x5168;&#x57DF;&apos; ; ( function ( ) { function callSomeone ( ) { console .log( this .name); } callSomeone(); //&#x5168;&#x57DF; })(); 1 2 3 4 5 var name = &apos;&#x5168;&#x57DF;&apos; ; ( function ( ) { var name = &apos;&#x5340;&#x57DF;&apos; ; console .log( this .name); //&#x5168;&#x57DF; })() 1 2 3 4 5 6 7 8 9 10 var name = &apos;&#x5168;&#x57DF;&apos; ; var obj = { name: &apos;&#x5340;&#x57DF;&apos; , callName: function ( ) { console .log( this .name); } }; ( function ( ) { obj.callName(); // &#x5340;&#x57DF; })();"},"this.html#Closure":{"title":"Closure","path":"\\javascript\\this.html#Closure","body":"https://jsbin.com/tagalenuje/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 var name = &apos;&#x5168;&#x57DF;&apos; function easyCard ( base = 100 ) { var money = base return function ( update = 10 ) { money = money + update console .log( this .name, money) } } var MingEasyCard = easyCard( 100 ) MingEasyCard(); // 110 MingEasyCard(); // 120 var YourEasyCard = easyCard( 20 ); YourEasyCard(); //30 var YourEasyCard2 = easyCard( 20 ); YourEasyCard2( 100 ); // 120 var MyEasyCard = easyCard( 1000 )( 100 ); MyEasyCard( 100 ); // TypeError: MyEasyCard is not a function 1 2 3 4 5 6 7 8 9 10 11 var name = &apos;&#x5168;&#x57DF;&apos; function easyCard ( base = 100 ) { var money = base var name = &apos;&#x60A0;&#x904A;&#x5361;&apos; return function ( update = 10 ) { money = money + update console .log( this .name, money) // &#x5168;&#x57DF; 110 } } var MingEasyCard = easyCard( 100 ) MingEasyCard()"},"this.html#Callback":{"title":"Callback","path":"\\javascript\\this.html#Callback","body":"1 2 3 4 5 6 7 function myEasyCard ( callback ) { var money = 150 return callback(money) } myEasyCard( function ( money ) { console .log( money + 100 ) //250 }) 1 2 3 4 var a = [ 1 , 2 , 3 ]; a.forEach( function ( item ) { console .log( this , item) }); https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#&#x8A9E;&#x6CD5; 1 2 3 arr.forEach( function callback ( currentValue[, index[, array]] ) { //your iterator }[, thisArg]); &#x9019;&#x500B; callback &#x51FD;&#x5F0F;&#x5C07;&#x6703;&#x628A; Array &#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x4F5C;&#x70BA;&#x53C3;&#x6578;&#xFF0C;&#x5E36;&#x9032;&#x672C; callback &#x51FD;&#x5F0F;&#x88E1;&#xFF0C;&#x6BCF;&#x500B;&#x5143;&#x7D20;&#x5404;&#x57F7;&#x884C;&#x4E00;&#x6B21;&#xFF0C;&#x63A5;&#x6536;&#x4E09;&#x500B;&#x53C3;&#x6578;&#xFF1A; currentValue &#x4EE3;&#x8868;&#x76EE;&#x524D;&#x88AB;&#x8655;&#x7406;&#x4E2D;&#x7684; Array &#x4E4B;&#x4E2D;&#x7684;&#x90A3;&#x500B;&#x5143;&#x7D20;&#x3002; index,array, thisArg &#x9078;&#x64C7;&#x6027; Note: IIFE&#x3001;Closure&#x3001;Callback function &#x8207; this &#x95DC;&#x4FC2;&#x662F;!? &#x6C92;&#x6709;&#x95DC;&#x4FC2;"},"this.html#bind-apply-call":{"title":"bind, apply, call","path":"\\javascript\\this.html#bind-apply-call","body":"call &amp; apply &#x53EF;&#x4EE5;&#x4F5C;&#x70BA;&#x547C;&#x53EB; Function &#x7684;&#x53E6;&#x4E00;&#x500B;&#x624B;&#x6BB5;&#xFF0C;&#x7686;&#x662F;&#x56DE;&#x50B3;function&#x57F7;&#x884C;&#x7D50;&#x679C; &#x800C; bind &#x5247;&#x6703;&#x56DE;&#x50B3;&#x4E00;&#x500B;&#x7D93;&#x904E;&#x5305;&#x88F9;&#x5F8C;&#x7684; Function &#x56DE;&#x4F86;&#xFF0C;&#x56DE;&#x50B3;&#x7684;&#x662F;&#x7D81;&#x5B9A; this &#x5F8C;&#x7684; &#x539F;&#x51FD;&#x6578; &#x3002; &#x300C;&#x7D81;&#x5B9A;this&#x7684;&#x51FD;&#x6578;&#x300D; &#x4E00;&#x4F46;&#x88AB;&#x7D81;&#x5B9A;&#xFF0C;&#x5176;this&#x7121;&#x6CD5;&#x518D;&#x88AB;&#x4FEE;&#x6539;&#x3002; call vs. apply &#x4F5C;&#x7528;&#x5B8C;&#x5168;&#x4E00;&#x6A23;&#xFF0C;&#x53EA;&#x662F;&#x63A5;&#x53D7;&#x53C3;&#x6578;&#x7684;&#x65B9;&#x5F0F;&#x4E0D;&#x592A;&#x4E00;&#x6A23; 1 2 func.call( this , arg1, arg2); func.apply( this , [arg1, arg2]); //&#x9663;&#x5217; JavaScript Call &#x4F7F;&#x7528;&#x7D66;&#x5B9A;&#x7684;this&#x53C3;&#x6578;&#x4EE5;&#x53CA;&#x5206;&#x5225;&#x7D66;&#x5B9A;&#x7684;&#x53C3;&#x6578;&#x4F86;&#x547C;&#x53EB;&#x67D0;&#x500B;&#x51FD;&#x6578; 1 2 3 4 5 6 7 8 9 10 11 function callName ( name ) { console .log( this .name, name); } var name = &apos;&#x5168;&#x57DF;&apos; ; var obj = { name: &apos;&#x5340;&#x57DF;&apos; , } callName( undefined , &apos;&#x5168;&#x57DF;2&apos; ); // &#x5168;&#x57DF; undefined (this.name, name) callName.call( undefined , &apos;&#x547C;&#x53EB;&apos; ); // &#x5168;&#x57DF; &#x547C;&#x53EB; (this.name, name) &#x7121;&#x503C;&#x50B3;&#x5165;this&#x5F80;&#x4E0A;&#x627E; callName.call(obj, &apos;&#x547C;&#x53EB;&apos; ); // &#x5340;&#x57DF; &#x547C;&#x53EB; (this.name, name) bind &#x662F;ES5&#x4E2D;&#x65B0;&#x589E;&#x7684;&#x4E00;&#x500B;&#x65B9;&#x6CD5;&#xFF0C;&#x53EF;&#x4EE5;&#x6539;&#x8B8A;&#x51FD;&#x6578;&#x5167;&#x90E8;&#x7684;this&#x6307;&#x5411; bind&#x7684;&#x61C9;&#x7528;&#x5834;&#x666F; &#x501F;&#x7528;Array&#x7684;&#x539F;&#x751F;&#x65B9;&#x6CD5; https://jsbin.com/pupasabapa/edit?js,console 1 2 3 4 5 6 7 8 9 var a = {}; Array .prototype.push.bind(a, hello , world )(); console .log(a); // [object Object] { // 0: hello, // 1: world, // length: 2 // } http://www.dengzhr.com/js/1069 &#x7BAD;&#x982D;&#x51FD;&#x5F0F; &#x300C;&#x7BAD;&#x982D;&#x51FD;&#x5F0F;&#x6C92;&#x6709;&#x81EA;&#x5DF1;&#x7684; this&#x300D; https://jsbin.com/wuxiqeciko/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 var name = &apos;&#x5168;&#x57DF;&apos; var obj = { name: &apos;&#x5340;&#x57DF;&apos; , callName: function ( ) { // &#x6CE8;&#x610F;&#xFF0C;&#x9019;&#x88E1;&#x662F; function&#xFF0C;&#x4EE5;&#x6B64;&#x70BA;&#x57FA;&#x6E96;&#x7522;&#x751F;&#x4E00;&#x500B;&#x4F5C;&#x7528;&#x57DF; console .log( &apos;1&apos; , this .name); // 1 &#x5340;&#x57DF; setTimeout( () = { console .log( &apos;2&apos; , this .name); // 2 &#x5340;&#x57DF; //console.log(&apos;3&apos;, this); // 3 obj &#x9019;&#x500B;&#x7269;&#x4EF6; }, 10 ); }, callNameArrow: () = { // &#x6CE8;&#x610F;&#xFF0C;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x7BAD;&#x982D;&#x51FD;&#x5F0F;&#xFF0C;this &#x4F9D;&#x7136;&#x6307;&#x5411; window console .log( &apos;4&apos; , this .name); // 4 &#x5168;&#x57DF; setTimeout( () = { console .log( &apos;5&apos; , this .name); // 5 &#x5168;&#x57DF; //console.log(&apos;6&apos;, this); // 6 window &#x7269;&#x4EF6; }, 10 ); } } obj.callName(); obj.callNameArrow(); const func = (x) = x + 1 const func = function (x) { return x + 1 } JS&#x8A9E;&#x8A00;&#x4E2D;&#x51FD;&#x5F0F;&#x7684;&#x8A2D;&#x8A08;&#xFF0C;&#x5FC5;&#x6709;&#x56DE;&#x50B3;&#x503C;&#xFF0C;&#x6C92;&#x5BEB;&#x76F8;&#x7576;&#x65BC;&#x56DE;&#x50B3; undefined map 1 2 3 4 5 6 7 8 9 10 // [&apos;1&apos;,&apos;2&apos;,&apos;3&apos;] &#x5B57;&#x4E32;&#x900F;&#x904E;parseInt &#x8F49;&#x6578;&#x5B57; var arr = [ &apos;1&apos; , &apos;2&apos; , &apos;3&apos; ].map( parseInt ); console .log(arr) // [1, NaN, NaN] var arr = [ &apos;1&apos; , &apos;2&apos; , &apos;3&apos; ].map( function ( item, i ) { console .log(item, i) // parseInt(&apos;1&apos;, 0); parseInt(&apos;2&apos;, 1); parseInt(&apos;3&apos;, 2); // parseInt(&apos;2&apos;, 1) &#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x7684;1 &#x8868;&#x6578;&#x5B57;&#x5230;1 &#x9032;&#x5230;&#x4E0B;&#x4E00;&#x4F4D; &#x6240;&#x4EE5;2&#x4E0D;&#x6703;&#x5B58;&#x5728;NaN // parseInt(&apos;11&apos;, 2) &#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x7684;2 11&#x8868;&#x793A;2+1=3 return parseInt (item, 10 ) // 1 2 3 parseInt(item, i) }); map() callback &#x56DE;&#x547C;&#x51FD;&#x5F0F; &#x53C3;&#x6578; currentValue index array parseInt() radix &#x80FD;&#x4EE3;&#x8868;&#x8A72;&#x9032;&#x4F4D;&#x7CFB;&#x7D71;&#x7684;&#x6578;&#x5B57; &#x6CE8;&#x610F;&#xFF0C;&#x901A;&#x5E38;&#x9810;&#x8A2D;&#x503C;&#x4E0D;&#x662F; 10 &#x9032;&#x4F4D; References https://wcc723.github.io/javascript/2019/03/18/JS-THIS/ https://paper.dropbox.com/doc/JSJavaScript-This---AZqD8PDvbl5uk5Mfq_EJlXMkAg-Xw50EZtMFNqG0wUxKeIaz https://wcc723.github.io/javascript/2017/12/21/javascript-es6-arrow-function/"},"variable.html":{"title":"Variable","path":"\\javascript\\variable.html","body":"1 2 3 4 5 6 7 8 9 10 11 var name = 'Jacob' ; console .log( window .name); //\"Jacob\" mom = 'Jacob' ; console .log( window .name); //\"Jacob\" ( function ( )  name = 'Jacob' )(); console .log( window .name); //\"Jacob\" 宣告的變數不能被刪除 屬性可以被刪除 1 2 3 4 5 6 7 8 9 10 11 var name1 = \"Jacob1\" ; name2 = \"Jacob2\" ; ( function ( )  name3 = \"Jacob3\" ; )(); delete name1; delete name2; delete name3; console .log( window .name1); //\"Jacob1\" console .log( window .name2); // undefined console .log( window .name3); // undefined 變數的作用域在函式內 1 2 3 4 5 6 7 8 9 10 11 var value1 = \"global\" ; var class1 =  value2: \"local\" , function1 : function ( )  var value3 = \"function\" ;   console .log(value1); //\"global\" console .log(class1.value2); //\"local\" console .log(class1.value3); //undefined 1 2 3 4 5 6 7 8 9 10 11 12 var value = 1 ; function foo ( )  console .log(value); // 1  function bar ( )  var value = 2 ; foo();  bar(); Hoisting 函式會自動提升 1 2 3 4 callSomeone( 'Jacob' ); // \"打給 Jacob\" function callSomeone ( name )  console .log( '打給 ' + name)  變數會自動被提升 1 console .log(myname); // \"error\" ReferenceError: myname is not defined 1 2 console .log(myname); // undefined var myname = 'jacob' ; 1 2 3 4 5 6 7 8 9 10 fn() function fn ( params )  console .log(a) // undefined if (a)  a = 2 ;  console .log(a) // undefined  var a = 1 ; console .log(a) // 1 1 2 3 4 5 6 7 8 9 10 fn() function fn ( params )  console .log(a) // undefined if (! a)  a = 2 ;  console .log(a) // 2  var a = 1 ; console .log(a) // 1 1 2 3 4 5 fn(); function fn ( )  console .log(a); // undefined  var a = 1 ; 1 2 3 4 5 6 7 8 9 function foo ( )  console .log( '1' );  foo(); // 第一次執行 \"2\" function foo ( )  console .log( '2' );  foo(); // 第二次執行 \"2\" 動態型別 1 2 3 4 5 6 var a = '1' ; console .log( typeof a) // \"string\" a = +a; console .log( typeof a) // \"number\" a = a + '' ; console .log( typeof a) // \"string\" 1 console .log( 100 === '10' * 10 ) // true '10' * 10 = number https://paper.dropbox.com/doc/JavaScript--AaHkVSbD5F40g8SUfOv1i9ehAg-K98zBcemd1Ig9DZYYNruL"},"variable.html#變數的作用域在函式內":{"title":"&#x8B8A;&#x6578;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x5728;&#x51FD;&#x5F0F;&#x5167;","path":"\\javascript\\variable.html#變數的作用域在函式內","body":"1 2 3 4 5 6 7 8 9 10 11 var value1 = global ; var class1 = { value2: local , function1 : function ( ) { var value3 = function ; } } console .log(value1); //global console .log(class1.value2); //local console .log(class1.value3); //undefined 1 2 3 4 5 6 7 8 9 10 11 12 var value = 1 ; function foo ( ) { console .log(value); // 1 } function bar ( ) { var value = 2 ; foo(); } bar();"},"variable.html#Hoisting":{"title":"Hoisting","path":"\\javascript\\variable.html#Hoisting","body":"&#x51FD;&#x5F0F;&#x6703;&#x81EA;&#x52D5;&#x63D0;&#x5347; 1 2 3 4 callSomeone( &apos;Jacob&apos; ); // &#x6253;&#x7D66; Jacob function callSomeone ( name ) { console .log( &apos;&#x6253;&#x7D66; &apos; + name) } &#x8B8A;&#x6578;&#x6703;&#x81EA;&#x52D5;&#x88AB;&#x63D0;&#x5347; 1 console .log(myname); // error ReferenceError: myname is not defined 1 2 console .log(myname); // undefined var myname = &apos;jacob&apos; ; 1 2 3 4 5 6 7 8 9 10 fn() function fn ( params ) { console .log(a) // undefined if (a) { a = 2 ; } console .log(a) // undefined } var a = 1 ; console .log(a) // 1 1 2 3 4 5 6 7 8 9 10 fn() function fn ( params ) { console .log(a) // undefined if (! a) { a = 2 ; } console .log(a) // 2 } var a = 1 ; console .log(a) // 1 1 2 3 4 5 fn(); function fn ( ) { console .log(a); // undefined } var a = 1 ; 1 2 3 4 5 6 7 8 9 function foo ( ) { console .log( &apos;1&apos; ); } foo(); // &#x7B2C;&#x4E00;&#x6B21;&#x57F7;&#x884C; 2 function foo ( ) { console .log( &apos;2&apos; ); } foo(); // &#x7B2C;&#x4E8C;&#x6B21;&#x57F7;&#x884C; 2"},"variable.html#動態型別":{"title":"&#x52D5;&#x614B;&#x578B;&#x5225;","path":"\\javascript\\variable.html#動態型別","body":"1 2 3 4 5 6 var a = &apos;1&apos; ; console .log( typeof a) // string a = +a; console .log( typeof a) // number a = a + &apos;&apos; ; console .log( typeof a) // string 1 console .log( 100 === &apos;10&apos; * 10 ) // true &apos;10&apos; * 10 = number https://paper.dropbox.com/doc/JavaScript--AaHkVSbD5F40g8SUfOv1i9ehAg-K98zBcemd1Ig9DZYYNruL"},"F2E/GraphQL.html":{"title":"GraphQL","path":"\\javascript\\F2E\\GraphQL.html","body":"GraphQL 是一個用於 API 的查詢語言，是一個使用基於類型系統來執行查詢的服務端運行時（類型系統由你的數據定義）。GraphQL 並沒有和任何特定數據庫或者存儲引擎綁定，而是依靠你現有的代碼和數據支撐。 使用一個 API 系統就像在百貨公司的地下美食廣場買晚餐， 傳統的 RESTful API 會要求你要一家一家 (很多 route) 去點餐，耗時又費力。 GraphQL 的體驗就如同使用APP一樣，百貨公司的餐飲店家們開發出一款點餐APP整合各家的點餐介面，消費者只要把想點的各家食物放進菜單，一鍵送出後就只要等待所有餐點送來桌上，省時又不費力！此外通過 APP 還可以更容易取得額外資訊如餐廳的聯絡方式 有了 GraphQL ，你可以把你的商業模型 (business model) 像圖形 (graph) 一樣串連起來 不同或相同type 的資料可以串接再一起，使得 GraphQL 只要一筆 query 就能一次拿全資料且資料格式非常有彈性！ 反觀 RESTful API 同樣的資料需要多筆 request 才能拿到且格式難以調整。 優點 缺點 資料只拿剛好且彈性十足 過於自由、規範少 程式即文檔 學習成本 前端控制權提升 相關社群仍在開發中 (Apollo) 強型別 Server Side Caching 實作困難 Server Side Caching 實作困難 RESTful API 的 endpoint 固定且資料需求單純，然而 GraphQL 難以保證每次 request 的模樣，因此較難實作 Caching References https://graphql.cn/learn/ https://ithelp.ithome.com.tw/articles/10200678"},"F2E/GraphQL.html#References":{"title":"References","path":"\\javascript\\F2E\\GraphQL.html#References","body":"https://graphql.cn/learn/ https://ithelp.ithome.com.tw/articles/10200678"},"F2E/token.html":{"title":"Token","path":"\\javascript\\F2E\\token.html","body":"JSON Web Token 入門教程 JSON Web Token （縮寫 JWT ）是目前最流行的跨域認證解決方案 A 網站和 B 網站是同一家公司的關聯服務。現在要求，用戶只要在其中一個網站登錄，再訪問另一個網站就會自動登錄，請問怎麼實現？ 一種方案是服務器索性不保存 session 數據了，所有數據都保存在客戶端，每次請求都發回服務器。 JWT 就是這種方案的一個代表。 provisional headers are shown 解决provisional headers are shown的过程 出現在 載入緩存資源,請求沒有被發送, 而如果上一個資源加載失敗,可能導致從緩存加載的資源失敗 provisional headers are shown 知多少"},"F2E/token.html#provisional-headers-are-shown":{"title":"provisional headers are shown","path":"\\javascript\\F2E\\token.html#provisional-headers-are-shown","body":"&#x89E3;&#x51B3;provisional headers are shown&#x7684;&#x8FC7;&#x7A0B; &#x51FA;&#x73FE;&#x5728; &#x8F09;&#x5165;&#x7DE9;&#x5B58;&#x8CC7;&#x6E90;,&#x8ACB;&#x6C42;&#x6C92;&#x6709;&#x88AB;&#x767C;&#x9001;, &#x800C;&#x5982;&#x679C;&#x4E0A;&#x4E00;&#x500B;&#x8CC7;&#x6E90;&#x52A0;&#x8F09;&#x5931;&#x6557;,&#x53EF;&#x80FD;&#x5C0E;&#x81F4;&#x5F9E;&#x7DE9;&#x5B58;&#x52A0;&#x8F09;&#x7684;&#x8CC7;&#x6E90;&#x5931;&#x6557; provisional headers are shown &#x77E5;&#x591A;&#x5C11;"},"array/array_method.html":{"title":"Array Method","path":"\\javascript\\array\\array_method.html","body":"一行代碼去重數組 Set 1 2 3 const list = [ 1 , 1 , 2 , 3 , 6 , 45 , 8 , 5 , 4 , 6 , 5 ] const uniqueList = [...new Set (list)] // [1, 2, 3, 6, 45, 8, 5, 4] console .log(uniqueList)"},"F2E/header.html":{"title":"Header","path":"\\javascript\\F2E\\header.html","body":"HTTP Referer 教程 Referer 提供訪問來源的信息。 引薦人（referrer） ，誰引薦了你？ HTTP 協議在請求（request）的頭信息裡面，設計了一個Referer字段，給出 “引薦網頁” 的 URL。 字段是可選的。 主要是以下三種場景，會發送Referer字段。 （1）用戶點擊網頁上的鏈接。 （2）用戶發送表單。 （3）網頁加載靜態資源，比如加載圖片、腳本、樣式。 ###　Referer 的作用 涉及隱私，很多時候不適合發送 Referer 字段 不適合暴露 URL。一是功能URL，即有的URL不要登錄，可以訪問，就能直接完成 密碼重置、郵件退訂 等功能。 還有一種特殊情況，需要定製Referer字段。比如 社交網站 上，用戶在對話中提到某個網址。這時，不希望暴露用戶所在的原始網址，但是可以暴露社交網站的域名，讓對方知道，是我貢獻了你的流量。 nginx 真實IP Remote-Addr X-Forwarded-For X-Real-IP X-Forwarded-For（XFF） 是用來辨識通過HTTP代理或負載均衡方式連接到Web伺服器的用戶端最原始的IP位址的HTTP請求頭欄位。"},"F2E/cookie.html":{"title":"Cookie","path":"\\javascript\\F2E\\cookie.html","body":"因為HTTP 本身是 無狀態(Stateless) 的協議。 無論是客戶端還是服務器端，每一次的請求都是獨立性質，而且沒有必要紀錄彼此過去的互動行為，自然而然他沒辦法記憶你每次請求的內容。 舉凡像是登入來說，過去我們總是必須藉著不斷又不斷的登打帳號密碼，來完成網站上身分驗證的這件事情，起因當然是因為HTTP的無狀態(stateless)通訊協議造成的，而 Cookie 就是用來繞開HTTP的無狀態性的「額外手段」之一，讓伺服器可以設定或讀取Cookies中所包含資訊，藉此來維護我們在使用服務時，可以在背景完成向伺服器發送請求，接著伺服器就匯回傳包含登入憑據（使用者名稱加密碼的某種加密形式）的Cookie文檔，到使用者的硬碟(或記憶體上)，在之後登入時，只要Cookie尚未到期，瀏覽器會傳送該Cookie給伺服器作驗證憑據，來減少重複登入的輸入行為。 什麼是 Cookie？ Cookie 是您訪問過的網站創建的文件，用於存儲瀏覽信息，例如您的網站偏好設置或個人資料信息。 共有兩種類型的 Cookie： 第一方 Cookie 是由地址欄中列出的網站域設置的 Cookie， 而第三方 Cookie 來自在網頁上嵌入廣告或圖片等項的其他域來源。 Cookie可以用來提升用戶體驗，比如網站可以使用Cookie來記錄用戶的登錄狀態，用戶只要登錄一次就可以不用登錄了，購物網站通過Cookie來保存購物車中的商品等。同時很多的網站分析都是依靠Cookie來完成的。 第一方Cookie和第三方Cookie區別 第一方 Cookie 是 設定在您目前造訪之網域中 的 Cookie。例如，如果您在 www.adobe.com/tw 中，使用第一方 Cookie 時，Cookie 會設定在 adobe.com 網域中。 第三方 Cookie 是 設定在目前造訪網域以外的 其他網域中的 Cookie。例如，如果您造訪 www.adobe.com 且 Cookie 設定在 omtrdc.com 網域中，這便是第三方 Cookie。 Cookie是必須的，離開Cookie我們什麼也分析不了。 第一方Cookie接受率高，更準確，沒有特殊需要就用他。 第三方Cookie可以跨域跟蹤，特別需求可以應用。 第三方Cookie 這種 Cookie 是透過如社群網路等第三方程式安裝，主要目的為在本公司網站整合社群媒體內容，如社群插件 (Social Plugins)。 比如，訪問 www.a.com這個網站，這個網站設置了一個Cookie，這個Cookie也只能被 www.a.com 這個域下的網頁讀取，這就是第一方Cookie。 如果還是訪問 www.a.com這個網站，網頁裡有用到 www.b.com網站的一張圖片，瀏覽器在 www.b.com請求圖片的時候，www.b.com 設置了一個Cookie，那這個Cookie只能被 www.b.com這個域訪問，反而不能被 www.a.com 這個域訪問， 因為對我們來說，我們實際是在訪問 www.a.com這個網站被設置了一個www.b.com這個域下的Cookie，所以叫第三方Cookie。 第三方Cookie的優勢和應用 比如，當我們有多個域名的網站需要跟蹤，我們希望瞭解到用戶點擊某個廣告到達域名A下的網頁，然後可能瀏覽了不論那個域名下的頁面，最後在域名B下的網頁完成註冊的情況。廣告可以在域名A下的網頁被跟蹤到，而註冊可以在域名B下的網頁跟蹤到。 如果我們使用第一方Cookie，會為域名A建立一個Cookie，為域名B再建立一個Cookie，他們可以關聯各自域名下網頁上的行為，但是無法關聯起來。 而使用第三方Cookie，那麼無論多少個域，都只有一個Cookie，一個屬於第三方域的Cookie，網站下所有域都能共享這個Cookie，那麼所有的行為都能被關聯起來分析。 缺點 網頁第三方 Cookies（Third-Party Cookies）會洩漏網頁瀏覽的隱私 Session又是什麼呢? Cookie就像 取餐的號碼牌，認號不認人 ，如果今天遺失或是被別人幹走，那你的餐點就會被其他人給領走，更別提關閉瀏覽器之後Cookie就會有被清除的風險了。 Session有點類似會話的概念，Session機制是一種服務器端的機制。 是一種持久網路協定，讓Client端與Server端可以作一種對話，並將兩端建立關連，保持伺服器與Client可以持續的與Server作交談。 它表示了「面向、連接」和/或「保持狀態」這樣兩個異議 「面向、連接」表是客戶端和Server端通信前要先建立一個通信的渠道 「保持狀態」，則是指通信交談的其中一方，可以所有的消息作關聯，就像是巷口的早餐店阿姨，還記得你最愛吃的火腿蛋不喜歡有美乃滋。 所以我們可以想像 Cookie是一張領餐的號碼牌，而Session可以是一張數位會員卡 ，不僅可以記錄你的點餐號碼，還可以記憶你的餐點細節，消費記錄和點餐喜好…等。而這就解決號碼牌遺失領不到餐的問題，但是他不是記憶你帥氣得穿搭或長像，而是靠著所謂的Session ID。 當我們需要為某個客戶端的請求創建一個Session的時候，服務器首先檢查這個客戶端的請求裡是否有包含了Session標識，就是剛剛提到的 Session id，當然如果已包含一個Session id，就表示這個客戶是老司機啦，當然伺服器端以前就為了這個客戶端創建過Session，服務器就按照Session id，把這個Session找出來使用。但如果客戶端請求不包含Session id，，則表示他是新臉孔，那伺服器端就為此客戶端創建一個Session，並生成一個Session id，並在本次響應中返回給客戶端保存。 但是在最初的 Session 設計中，我們都會把資料記錄在 Server端 上，如 Database、記憶體或是利用檔案交換的方式，來把你的點餐資訊作儲存，而當你去領飲料時，店員會輸入你的號碼，並在叫出你點的內容。但如果是大型網站上，如果有負載平衡的機制，你怎麼能確定你當初輸入和最後取餐的Server是同一台呢，而這樣作當你資料量大時，也會有效能影響的問題，這時候Cookie就出場了。 保存這個Session id的方式也可以採用Cookie ，但似乎很多人都有一種彷彿瀏覽器關掉Session也會消失的錯覺，但本質上並非如此，就像會員卡，除非你主動提出銷卡，否則店家不會刪除顧客資料，這件事情對Session來說也如出一轍，除非通知Server刪除Session，否則Server端會一直保留來保持會話暢通，但瀏覽器從來不會主動在關閉前通知服務器要關閉 大部分Session機制都使用會話Cookie來保存Session ID 而關閉瀏覽器後因為Cookie消失造成 Session id也消失了，但只要把原來的Session ID再發送給Server，那還是能夠找到原來的Session 。 但大家都會擔心，Cookie和Session得結合，到底還會不會有被竄改的問題，這個時候就要靠”簽章”來驗證資料的真實性，在我使用Cookie請求時，可以加一個簽章，也就是在我傳輸的資料後面加上一個對應的秘密字串，當伺服器回傳時，可以回應該字串，若是其他使用者偷偷串改的話，由於串改的資料和我的秘密字串無法相符，當然也無法作偽造，這就是所謂的 SignedCookie 但記住Session就像是你的會員卡號，不見也表示仍然有資料被竊取的風險。 如果單就實現功能，Cookie與Session彼此之間是可以互換的(指的是你可以把資料存放在Session或是Cookie，並不是指Session可以被放在Client端當Cookie使用)。但是Cookie在最單純的情況裡，是有安全性的問題(資料在Client端)。所以考量到這點，大部分都會選擇Session。但是正如Cookie是一個外加的功能，Session也不屬於HTTP協定。只要是外加功能，就必須額外寫程式實現。 不過現在做網站我們都流行使用框架，Session的機制都被框架所實現了，以Ruby on Rails來說， 預設的Session實現方式是由Cookie來實作的(利用加密與設定過期時間)。 每個框架實現的邏輯都可能不一樣，所以還是要去看官方的說明會比較清楚。 但從這裡可得知，Session並不是一個很明確實體的機制，算是一個概念，只要符合概念所實作出來的功能都可以被叫做Session。 references 第一方Cookie和第三方Cookie區別 判斷您是使用第一方還是第三方 Cookie 五分鐘概述網路界的記憶大神-Session"},"F2E/cookie.html#什麼是-Cookie？":{"title":"&#x4EC0;&#x9EBC;&#x662F; Cookie&#xFF1F;","path":"\\javascript\\F2E\\cookie.html#什麼是-Cookie？","body":"Cookie &#x662F;&#x60A8;&#x8A2A;&#x554F;&#x904E;&#x7684;&#x7DB2;&#x7AD9;&#x5275;&#x5EFA;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x7528;&#x65BC;&#x5B58;&#x5132;&#x700F;&#x89BD;&#x4FE1;&#x606F;&#xFF0C;&#x4F8B;&#x5982;&#x60A8;&#x7684;&#x7DB2;&#x7AD9;&#x504F;&#x597D;&#x8A2D;&#x7F6E;&#x6216;&#x500B;&#x4EBA;&#x8CC7;&#x6599;&#x4FE1;&#x606F;&#x3002; &#x5171;&#x6709;&#x5169;&#x7A2E;&#x985E;&#x578B;&#x7684; Cookie&#xFF1A; &#x7B2C;&#x4E00;&#x65B9; Cookie &#x662F;&#x7531;&#x5730;&#x5740;&#x6B04;&#x4E2D;&#x5217;&#x51FA;&#x7684;&#x7DB2;&#x7AD9;&#x57DF;&#x8A2D;&#x7F6E;&#x7684; Cookie&#xFF0C; &#x800C;&#x7B2C;&#x4E09;&#x65B9; Cookie &#x4F86;&#x81EA;&#x5728;&#x7DB2;&#x9801;&#x4E0A;&#x5D4C;&#x5165;&#x5EE3;&#x544A;&#x6216;&#x5716;&#x7247;&#x7B49;&#x9805;&#x7684;&#x5176;&#x4ED6;&#x57DF;&#x4F86;&#x6E90;&#x3002; Cookie&#x53EF;&#x4EE5;&#x7528;&#x4F86;&#x63D0;&#x5347;&#x7528;&#x6236;&#x9AD4;&#x9A57;&#xFF0C;&#x6BD4;&#x5982;&#x7DB2;&#x7AD9;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;Cookie&#x4F86;&#x8A18;&#x9304;&#x7528;&#x6236;&#x7684;&#x767B;&#x9304;&#x72C0;&#x614B;&#xFF0C;&#x7528;&#x6236;&#x53EA;&#x8981;&#x767B;&#x9304;&#x4E00;&#x6B21;&#x5C31;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;&#x767B;&#x9304;&#x4E86;&#xFF0C;&#x8CFC;&#x7269;&#x7DB2;&#x7AD9;&#x901A;&#x904E;Cookie&#x4F86;&#x4FDD;&#x5B58;&#x8CFC;&#x7269;&#x8ECA;&#x4E2D;&#x7684;&#x5546;&#x54C1;&#x7B49;&#x3002;&#x540C;&#x6642;&#x5F88;&#x591A;&#x7684;&#x7DB2;&#x7AD9;&#x5206;&#x6790;&#x90FD;&#x662F;&#x4F9D;&#x9760;Cookie&#x4F86;&#x5B8C;&#x6210;&#x7684;&#x3002;"},"F2E/cookie.html#第一方Cookie和第三方Cookie區別":{"title":"&#x7B2C;&#x4E00;&#x65B9;Cookie&#x548C;&#x7B2C;&#x4E09;&#x65B9;Cookie&#x5340;&#x5225;","path":"\\javascript\\F2E\\cookie.html#第一方Cookie和第三方Cookie區別","body":"&#x7B2C;&#x4E00;&#x65B9; Cookie &#x662F; &#x8A2D;&#x5B9A;&#x5728;&#x60A8;&#x76EE;&#x524D;&#x9020;&#x8A2A;&#x4E4B;&#x7DB2;&#x57DF;&#x4E2D; &#x7684; Cookie&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x60A8;&#x5728; www.adobe.com/tw &#x4E2D;&#xFF0C;&#x4F7F;&#x7528;&#x7B2C;&#x4E00;&#x65B9; Cookie &#x6642;&#xFF0C;Cookie &#x6703;&#x8A2D;&#x5B9A;&#x5728; adobe.com &#x7DB2;&#x57DF;&#x4E2D;&#x3002; &#x7B2C;&#x4E09;&#x65B9; Cookie &#x662F; &#x8A2D;&#x5B9A;&#x5728;&#x76EE;&#x524D;&#x9020;&#x8A2A;&#x7DB2;&#x57DF;&#x4EE5;&#x5916;&#x7684; &#x5176;&#x4ED6;&#x7DB2;&#x57DF;&#x4E2D;&#x7684; Cookie&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x60A8;&#x9020;&#x8A2A; www.adobe.com &#x4E14; Cookie &#x8A2D;&#x5B9A;&#x5728; omtrdc.com &#x7DB2;&#x57DF;&#x4E2D;&#xFF0C;&#x9019;&#x4FBF;&#x662F;&#x7B2C;&#x4E09;&#x65B9; Cookie&#x3002; Cookie&#x662F;&#x5FC5;&#x9808;&#x7684;&#xFF0C;&#x96E2;&#x958B;Cookie&#x6211;&#x5011;&#x4EC0;&#x9EBC;&#x4E5F;&#x5206;&#x6790;&#x4E0D;&#x4E86;&#x3002; &#x7B2C;&#x4E00;&#x65B9;Cookie&#x63A5;&#x53D7;&#x7387;&#x9AD8;&#xFF0C;&#x66F4;&#x6E96;&#x78BA;&#xFF0C;&#x6C92;&#x6709;&#x7279;&#x6B8A;&#x9700;&#x8981;&#x5C31;&#x7528;&#x4ED6;&#x3002; &#x7B2C;&#x4E09;&#x65B9;Cookie&#x53EF;&#x4EE5;&#x8DE8;&#x57DF;&#x8DDF;&#x8E64;&#xFF0C;&#x7279;&#x5225;&#x9700;&#x6C42;&#x53EF;&#x4EE5;&#x61C9;&#x7528;&#x3002; &#x7B2C;&#x4E09;&#x65B9;Cookie &#x9019;&#x7A2E; Cookie &#x662F;&#x900F;&#x904E;&#x5982;&#x793E;&#x7FA4;&#x7DB2;&#x8DEF;&#x7B49;&#x7B2C;&#x4E09;&#x65B9;&#x7A0B;&#x5F0F;&#x5B89;&#x88DD;&#xFF0C;&#x4E3B;&#x8981;&#x76EE;&#x7684;&#x70BA;&#x5728;&#x672C;&#x516C;&#x53F8;&#x7DB2;&#x7AD9;&#x6574;&#x5408;&#x793E;&#x7FA4;&#x5A92;&#x9AD4;&#x5167;&#x5BB9;&#xFF0C;&#x5982;&#x793E;&#x7FA4;&#x63D2;&#x4EF6; (Social Plugins)&#x3002; &#x6BD4;&#x5982;&#xFF0C;&#x8A2A;&#x554F; www.a.com&#x9019;&#x500B;&#x7DB2;&#x7AD9;&#xFF0C;&#x9019;&#x500B;&#x7DB2;&#x7AD9;&#x8A2D;&#x7F6E;&#x4E86;&#x4E00;&#x500B;Cookie&#xFF0C;&#x9019;&#x500B;Cookie&#x4E5F;&#x53EA;&#x80FD;&#x88AB; www.a.com &#x9019;&#x500B;&#x57DF;&#x4E0B;&#x7684;&#x7DB2;&#x9801;&#x8B80;&#x53D6;&#xFF0C;&#x9019;&#x5C31;&#x662F;&#x7B2C;&#x4E00;&#x65B9;Cookie&#x3002; &#x5982;&#x679C;&#x9084;&#x662F;&#x8A2A;&#x554F; www.a.com&#x9019;&#x500B;&#x7DB2;&#x7AD9;&#xFF0C;&#x7DB2;&#x9801;&#x88E1;&#x6709;&#x7528;&#x5230; www.b.com&#x7DB2;&#x7AD9;&#x7684;&#x4E00;&#x5F35;&#x5716;&#x7247;&#xFF0C;&#x700F;&#x89BD;&#x5668;&#x5728; www.b.com&#x8ACB;&#x6C42;&#x5716;&#x7247;&#x7684;&#x6642;&#x5019;&#xFF0C;www.b.com &#x8A2D;&#x7F6E;&#x4E86;&#x4E00;&#x500B;Cookie&#xFF0C;&#x90A3;&#x9019;&#x500B;Cookie&#x53EA;&#x80FD;&#x88AB; www.b.com&#x9019;&#x500B;&#x57DF;&#x8A2A;&#x554F;&#xFF0C;&#x53CD;&#x800C;&#x4E0D;&#x80FD;&#x88AB; www.a.com &#x9019;&#x500B;&#x57DF;&#x8A2A;&#x554F;&#xFF0C; &#x56E0;&#x70BA;&#x5C0D;&#x6211;&#x5011;&#x4F86;&#x8AAA;&#xFF0C;&#x6211;&#x5011;&#x5BE6;&#x969B;&#x662F;&#x5728;&#x8A2A;&#x554F; www.a.com&#x9019;&#x500B;&#x7DB2;&#x7AD9;&#x88AB;&#x8A2D;&#x7F6E;&#x4E86;&#x4E00;&#x500B;www.b.com&#x9019;&#x500B;&#x57DF;&#x4E0B;&#x7684;Cookie&#xFF0C;&#x6240;&#x4EE5;&#x53EB;&#x7B2C;&#x4E09;&#x65B9;Cookie&#x3002; &#x7B2C;&#x4E09;&#x65B9;Cookie&#x7684;&#x512A;&#x52E2;&#x548C;&#x61C9;&#x7528; &#x6BD4;&#x5982;&#xFF0C;&#x7576;&#x6211;&#x5011;&#x6709;&#x591A;&#x500B;&#x57DF;&#x540D;&#x7684;&#x7DB2;&#x7AD9;&#x9700;&#x8981;&#x8DDF;&#x8E64;&#xFF0C;&#x6211;&#x5011;&#x5E0C;&#x671B;&#x77AD;&#x89E3;&#x5230;&#x7528;&#x6236;&#x9EDE;&#x64CA;&#x67D0;&#x500B;&#x5EE3;&#x544A;&#x5230;&#x9054;&#x57DF;&#x540D;A&#x4E0B;&#x7684;&#x7DB2;&#x9801;&#xFF0C;&#x7136;&#x5F8C;&#x53EF;&#x80FD;&#x700F;&#x89BD;&#x4E86;&#x4E0D;&#x8AD6;&#x90A3;&#x500B;&#x57DF;&#x540D;&#x4E0B;&#x7684;&#x9801;&#x9762;&#xFF0C;&#x6700;&#x5F8C;&#x5728;&#x57DF;&#x540D;B&#x4E0B;&#x7684;&#x7DB2;&#x9801;&#x5B8C;&#x6210;&#x8A3B;&#x518A;&#x7684;&#x60C5;&#x6CC1;&#x3002;&#x5EE3;&#x544A;&#x53EF;&#x4EE5;&#x5728;&#x57DF;&#x540D;A&#x4E0B;&#x7684;&#x7DB2;&#x9801;&#x88AB;&#x8DDF;&#x8E64;&#x5230;&#xFF0C;&#x800C;&#x8A3B;&#x518A;&#x53EF;&#x4EE5;&#x5728;&#x57DF;&#x540D;B&#x4E0B;&#x7684;&#x7DB2;&#x9801;&#x8DDF;&#x8E64;&#x5230;&#x3002; &#x5982;&#x679C;&#x6211;&#x5011;&#x4F7F;&#x7528;&#x7B2C;&#x4E00;&#x65B9;Cookie&#xFF0C;&#x6703;&#x70BA;&#x57DF;&#x540D;A&#x5EFA;&#x7ACB;&#x4E00;&#x500B;Cookie&#xFF0C;&#x70BA;&#x57DF;&#x540D;B&#x518D;&#x5EFA;&#x7ACB;&#x4E00;&#x500B;Cookie&#xFF0C;&#x4ED6;&#x5011;&#x53EF;&#x4EE5;&#x95DC;&#x806F;&#x5404;&#x81EA;&#x57DF;&#x540D;&#x4E0B;&#x7DB2;&#x9801;&#x4E0A;&#x7684;&#x884C;&#x70BA;&#xFF0C;&#x4F46;&#x662F;&#x7121;&#x6CD5;&#x95DC;&#x806F;&#x8D77;&#x4F86;&#x3002; &#x800C;&#x4F7F;&#x7528;&#x7B2C;&#x4E09;&#x65B9;Cookie&#xFF0C;&#x90A3;&#x9EBC;&#x7121;&#x8AD6;&#x591A;&#x5C11;&#x500B;&#x57DF;&#xFF0C;&#x90FD;&#x53EA;&#x6709;&#x4E00;&#x500B;Cookie&#xFF0C;&#x4E00;&#x500B;&#x5C6C;&#x65BC;&#x7B2C;&#x4E09;&#x65B9;&#x57DF;&#x7684;Cookie&#xFF0C;&#x7DB2;&#x7AD9;&#x4E0B;&#x6240;&#x6709;&#x57DF;&#x90FD;&#x80FD;&#x5171;&#x4EAB;&#x9019;&#x500B;Cookie&#xFF0C;&#x90A3;&#x9EBC;&#x6240;&#x6709;&#x7684;&#x884C;&#x70BA;&#x90FD;&#x80FD;&#x88AB;&#x95DC;&#x806F;&#x8D77;&#x4F86;&#x5206;&#x6790;&#x3002; &#x7F3A;&#x9EDE; &#x7DB2;&#x9801;&#x7B2C;&#x4E09;&#x65B9; Cookies&#xFF08;Third-Party Cookies&#xFF09;&#x6703;&#x6D29;&#x6F0F;&#x7DB2;&#x9801;&#x700F;&#x89BD;&#x7684;&#x96B1;&#x79C1; Session&#x53C8;&#x662F;&#x4EC0;&#x9EBC;&#x5462;? Cookie&#x5C31;&#x50CF; &#x53D6;&#x9910;&#x7684;&#x865F;&#x78BC;&#x724C;&#xFF0C;&#x8A8D;&#x865F;&#x4E0D;&#x8A8D;&#x4EBA; &#xFF0C;&#x5982;&#x679C;&#x4ECA;&#x5929;&#x907A;&#x5931;&#x6216;&#x662F;&#x88AB;&#x5225;&#x4EBA;&#x5E79;&#x8D70;&#xFF0C;&#x90A3;&#x4F60;&#x7684;&#x9910;&#x9EDE;&#x5C31;&#x6703;&#x88AB;&#x5176;&#x4ED6;&#x4EBA;&#x7D66;&#x9818;&#x8D70;&#xFF0C;&#x66F4;&#x5225;&#x63D0;&#x95DC;&#x9589;&#x700F;&#x89BD;&#x5668;&#x4E4B;&#x5F8C;Cookie&#x5C31;&#x6703;&#x6709;&#x88AB;&#x6E05;&#x9664;&#x7684;&#x98A8;&#x96AA;&#x4E86;&#x3002; Session&#x6709;&#x9EDE;&#x985E;&#x4F3C;&#x6703;&#x8A71;&#x7684;&#x6982;&#x5FF5;&#xFF0C;Session&#x6A5F;&#x5236;&#x662F;&#x4E00;&#x7A2E;&#x670D;&#x52D9;&#x5668;&#x7AEF;&#x7684;&#x6A5F;&#x5236;&#x3002; &#x662F;&#x4E00;&#x7A2E;&#x6301;&#x4E45;&#x7DB2;&#x8DEF;&#x5354;&#x5B9A;&#xFF0C;&#x8B93;Client&#x7AEF;&#x8207;Server&#x7AEF;&#x53EF;&#x4EE5;&#x4F5C;&#x4E00;&#x7A2E;&#x5C0D;&#x8A71;&#xFF0C;&#x4E26;&#x5C07;&#x5169;&#x7AEF;&#x5EFA;&#x7ACB;&#x95DC;&#x9023;&#xFF0C;&#x4FDD;&#x6301;&#x4F3A;&#x670D;&#x5668;&#x8207;Client&#x53EF;&#x4EE5;&#x6301;&#x7E8C;&#x7684;&#x8207;Server&#x4F5C;&#x4EA4;&#x8AC7;&#x3002; &#x5B83;&#x8868;&#x793A;&#x4E86;&#x300C;&#x9762;&#x5411;&#x3001;&#x9023;&#x63A5;&#x300D;&#x548C;/&#x6216;&#x300C;&#x4FDD;&#x6301;&#x72C0;&#x614B;&#x300D;&#x9019;&#x6A23;&#x5169;&#x500B;&#x7570;&#x8B70; &#x300C;&#x9762;&#x5411;&#x3001;&#x9023;&#x63A5;&#x300D;&#x8868;&#x662F;&#x5BA2;&#x6236;&#x7AEF;&#x548C;Server&#x7AEF;&#x901A;&#x4FE1;&#x524D;&#x8981;&#x5148;&#x5EFA;&#x7ACB;&#x4E00;&#x500B;&#x901A;&#x4FE1;&#x7684;&#x6E20;&#x9053; &#x300C;&#x4FDD;&#x6301;&#x72C0;&#x614B;&#x300D;&#xFF0C;&#x5247;&#x662F;&#x6307;&#x901A;&#x4FE1;&#x4EA4;&#x8AC7;&#x7684;&#x5176;&#x4E2D;&#x4E00;&#x65B9;&#xFF0C;&#x53EF;&#x4EE5;&#x6240;&#x6709;&#x7684;&#x6D88;&#x606F;&#x4F5C;&#x95DC;&#x806F;&#xFF0C;&#x5C31;&#x50CF;&#x662F;&#x5DF7;&#x53E3;&#x7684;&#x65E9;&#x9910;&#x5E97;&#x963F;&#x59E8;&#xFF0C;&#x9084;&#x8A18;&#x5F97;&#x4F60;&#x6700;&#x611B;&#x5403;&#x7684;&#x706B;&#x817F;&#x86CB;&#x4E0D;&#x559C;&#x6B61;&#x6709;&#x7F8E;&#x4E43;&#x6ECB;&#x3002; &#x6240;&#x4EE5;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x60F3;&#x50CF; Cookie&#x662F;&#x4E00;&#x5F35;&#x9818;&#x9910;&#x7684;&#x865F;&#x78BC;&#x724C;&#xFF0C;&#x800C;Session&#x53EF;&#x4EE5;&#x662F;&#x4E00;&#x5F35;&#x6578;&#x4F4D;&#x6703;&#x54E1;&#x5361; &#xFF0C;&#x4E0D;&#x50C5;&#x53EF;&#x4EE5;&#x8A18;&#x9304;&#x4F60;&#x7684;&#x9EDE;&#x9910;&#x865F;&#x78BC;&#xFF0C;&#x9084;&#x53EF;&#x4EE5;&#x8A18;&#x61B6;&#x4F60;&#x7684;&#x9910;&#x9EDE;&#x7D30;&#x7BC0;&#xFF0C;&#x6D88;&#x8CBB;&#x8A18;&#x9304;&#x548C;&#x9EDE;&#x9910;&#x559C;&#x597D;&#x2026;&#x7B49;&#x3002;&#x800C;&#x9019;&#x5C31;&#x89E3;&#x6C7A;&#x865F;&#x78BC;&#x724C;&#x907A;&#x5931;&#x9818;&#x4E0D;&#x5230;&#x9910;&#x7684;&#x554F;&#x984C;&#xFF0C;&#x4F46;&#x662F;&#x4ED6;&#x4E0D;&#x662F;&#x8A18;&#x61B6;&#x4F60;&#x5E25;&#x6C23;&#x5F97;&#x7A7F;&#x642D;&#x6216;&#x9577;&#x50CF;&#xFF0C;&#x800C;&#x662F;&#x9760;&#x8457;&#x6240;&#x8B02;&#x7684;Session ID&#x3002; &#x7576;&#x6211;&#x5011;&#x9700;&#x8981;&#x70BA;&#x67D0;&#x500B;&#x5BA2;&#x6236;&#x7AEF;&#x7684;&#x8ACB;&#x6C42;&#x5275;&#x5EFA;&#x4E00;&#x500B;Session&#x7684;&#x6642;&#x5019;&#xFF0C;&#x670D;&#x52D9;&#x5668;&#x9996;&#x5148;&#x6AA2;&#x67E5;&#x9019;&#x500B;&#x5BA2;&#x6236;&#x7AEF;&#x7684;&#x8ACB;&#x6C42;&#x88E1;&#x662F;&#x5426;&#x6709;&#x5305;&#x542B;&#x4E86;Session&#x6A19;&#x8B58;&#xFF0C;&#x5C31;&#x662F;&#x525B;&#x525B;&#x63D0;&#x5230;&#x7684; Session id&#xFF0C;&#x7576;&#x7136;&#x5982;&#x679C;&#x5DF2;&#x5305;&#x542B;&#x4E00;&#x500B;Session id&#xFF0C;&#x5C31;&#x8868;&#x793A;&#x9019;&#x500B;&#x5BA2;&#x6236;&#x662F;&#x8001;&#x53F8;&#x6A5F;&#x5566;&#xFF0C;&#x7576;&#x7136;&#x4F3A;&#x670D;&#x5668;&#x7AEF;&#x4EE5;&#x524D;&#x5C31;&#x70BA;&#x4E86;&#x9019;&#x500B;&#x5BA2;&#x6236;&#x7AEF;&#x5275;&#x5EFA;&#x904E;Session&#xFF0C;&#x670D;&#x52D9;&#x5668;&#x5C31;&#x6309;&#x7167;Session id&#xFF0C;&#x628A;&#x9019;&#x500B;Session&#x627E;&#x51FA;&#x4F86;&#x4F7F;&#x7528;&#x3002;&#x4F46;&#x5982;&#x679C;&#x5BA2;&#x6236;&#x7AEF;&#x8ACB;&#x6C42;&#x4E0D;&#x5305;&#x542B;Session id&#xFF0C;&#xFF0C;&#x5247;&#x8868;&#x793A;&#x4ED6;&#x662F;&#x65B0;&#x81C9;&#x5B54;&#xFF0C;&#x90A3;&#x4F3A;&#x670D;&#x5668;&#x7AEF;&#x5C31;&#x70BA;&#x6B64;&#x5BA2;&#x6236;&#x7AEF;&#x5275;&#x5EFA;&#x4E00;&#x500B;Session&#xFF0C;&#x4E26;&#x751F;&#x6210;&#x4E00;&#x500B;Session id&#xFF0C;&#x4E26;&#x5728;&#x672C;&#x6B21;&#x97FF;&#x61C9;&#x4E2D;&#x8FD4;&#x56DE;&#x7D66;&#x5BA2;&#x6236;&#x7AEF;&#x4FDD;&#x5B58;&#x3002; &#x4F46;&#x662F;&#x5728;&#x6700;&#x521D;&#x7684; Session &#x8A2D;&#x8A08;&#x4E2D;&#xFF0C;&#x6211;&#x5011;&#x90FD;&#x6703;&#x628A;&#x8CC7;&#x6599;&#x8A18;&#x9304;&#x5728; Server&#x7AEF; &#x4E0A;&#xFF0C;&#x5982; Database&#x3001;&#x8A18;&#x61B6;&#x9AD4;&#x6216;&#x662F;&#x5229;&#x7528;&#x6A94;&#x6848;&#x4EA4;&#x63DB;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x4F86;&#x628A;&#x4F60;&#x7684;&#x9EDE;&#x9910;&#x8CC7;&#x8A0A;&#x4F5C;&#x5132;&#x5B58;&#xFF0C;&#x800C;&#x7576;&#x4F60;&#x53BB;&#x9818;&#x98F2;&#x6599;&#x6642;&#xFF0C;&#x5E97;&#x54E1;&#x6703;&#x8F38;&#x5165;&#x4F60;&#x7684;&#x865F;&#x78BC;&#xFF0C;&#x4E26;&#x5728;&#x53EB;&#x51FA;&#x4F60;&#x9EDE;&#x7684;&#x5167;&#x5BB9;&#x3002;&#x4F46;&#x5982;&#x679C;&#x662F;&#x5927;&#x578B;&#x7DB2;&#x7AD9;&#x4E0A;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x8CA0;&#x8F09;&#x5E73;&#x8861;&#x7684;&#x6A5F;&#x5236;&#xFF0C;&#x4F60;&#x600E;&#x9EBC;&#x80FD;&#x78BA;&#x5B9A;&#x4F60;&#x7576;&#x521D;&#x8F38;&#x5165;&#x548C;&#x6700;&#x5F8C;&#x53D6;&#x9910;&#x7684;Server&#x662F;&#x540C;&#x4E00;&#x53F0;&#x5462;&#xFF0C;&#x800C;&#x9019;&#x6A23;&#x4F5C;&#x7576;&#x4F60;&#x8CC7;&#x6599;&#x91CF;&#x5927;&#x6642;&#xFF0C;&#x4E5F;&#x6703;&#x6709;&#x6548;&#x80FD;&#x5F71;&#x97FF;&#x7684;&#x554F;&#x984C;&#xFF0C;&#x9019;&#x6642;&#x5019;Cookie&#x5C31;&#x51FA;&#x5834;&#x4E86;&#x3002; &#x4FDD;&#x5B58;&#x9019;&#x500B;Session id&#x7684;&#x65B9;&#x5F0F;&#x4E5F;&#x53EF;&#x4EE5;&#x63A1;&#x7528;Cookie &#xFF0C;&#x4F46;&#x4F3C;&#x4E4E;&#x5F88;&#x591A;&#x4EBA;&#x90FD;&#x6709;&#x4E00;&#x7A2E;&#x5F77;&#x5F7F;&#x700F;&#x89BD;&#x5668;&#x95DC;&#x6389;Session&#x4E5F;&#x6703;&#x6D88;&#x5931;&#x7684;&#x932F;&#x89BA;&#xFF0C;&#x4F46;&#x672C;&#x8CEA;&#x4E0A;&#x4E26;&#x975E;&#x5982;&#x6B64;&#xFF0C;&#x5C31;&#x50CF;&#x6703;&#x54E1;&#x5361;&#xFF0C;&#x9664;&#x975E;&#x4F60;&#x4E3B;&#x52D5;&#x63D0;&#x51FA;&#x92B7;&#x5361;&#xFF0C;&#x5426;&#x5247;&#x5E97;&#x5BB6;&#x4E0D;&#x6703;&#x522A;&#x9664;&#x9867;&#x5BA2;&#x8CC7;&#x6599;&#xFF0C;&#x9019;&#x4EF6;&#x4E8B;&#x60C5;&#x5C0D;Session&#x4F86;&#x8AAA;&#x4E5F;&#x5982;&#x51FA;&#x4E00;&#x8F4D;&#xFF0C;&#x9664;&#x975E;&#x901A;&#x77E5;Server&#x522A;&#x9664;Session&#xFF0C;&#x5426;&#x5247;Server&#x7AEF;&#x6703;&#x4E00;&#x76F4;&#x4FDD;&#x7559;&#x4F86;&#x4FDD;&#x6301;&#x6703;&#x8A71;&#x66A2;&#x901A;&#xFF0C;&#x4F46;&#x700F;&#x89BD;&#x5668;&#x5F9E;&#x4F86;&#x4E0D;&#x6703;&#x4E3B;&#x52D5;&#x5728;&#x95DC;&#x9589;&#x524D;&#x901A;&#x77E5;&#x670D;&#x52D9;&#x5668;&#x8981;&#x95DC;&#x9589; &#x5927;&#x90E8;&#x5206;Session&#x6A5F;&#x5236;&#x90FD;&#x4F7F;&#x7528;&#x6703;&#x8A71;Cookie&#x4F86;&#x4FDD;&#x5B58;Session ID &#x800C;&#x95DC;&#x9589;&#x700F;&#x89BD;&#x5668;&#x5F8C;&#x56E0;&#x70BA;Cookie&#x6D88;&#x5931;&#x9020;&#x6210; Session id&#x4E5F;&#x6D88;&#x5931;&#x4E86;&#xFF0C;&#x4F46;&#x53EA;&#x8981;&#x628A;&#x539F;&#x4F86;&#x7684;Session ID&#x518D;&#x767C;&#x9001;&#x7D66;Server&#xFF0C;&#x90A3;&#x9084;&#x662F;&#x80FD;&#x5920;&#x627E;&#x5230;&#x539F;&#x4F86;&#x7684;Session &#x3002; &#x4F46;&#x5927;&#x5BB6;&#x90FD;&#x6703;&#x64D4;&#x5FC3;&#xFF0C;Cookie&#x548C;Session&#x5F97;&#x7D50;&#x5408;&#xFF0C;&#x5230;&#x5E95;&#x9084;&#x6703;&#x4E0D;&#x6703;&#x6709;&#x88AB;&#x7AC4;&#x6539;&#x7684;&#x554F;&#x984C;&#xFF0C;&#x9019;&#x500B;&#x6642;&#x5019;&#x5C31;&#x8981;&#x9760;&#x201D;&#x7C3D;&#x7AE0;&#x201D;&#x4F86;&#x9A57;&#x8B49;&#x8CC7;&#x6599;&#x7684;&#x771F;&#x5BE6;&#x6027;&#xFF0C;&#x5728;&#x6211;&#x4F7F;&#x7528;Cookie&#x8ACB;&#x6C42;&#x6642;&#xFF0C;&#x53EF;&#x4EE5;&#x52A0;&#x4E00;&#x500B;&#x7C3D;&#x7AE0;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5728;&#x6211;&#x50B3;&#x8F38;&#x7684;&#x8CC7;&#x6599;&#x5F8C;&#x9762;&#x52A0;&#x4E0A;&#x4E00;&#x500B;&#x5C0D;&#x61C9;&#x7684;&#x79D8;&#x5BC6;&#x5B57;&#x4E32;&#xFF0C;&#x7576;&#x4F3A;&#x670D;&#x5668;&#x56DE;&#x50B3;&#x6642;&#xFF0C;&#x53EF;&#x4EE5;&#x56DE;&#x61C9;&#x8A72;&#x5B57;&#x4E32;&#xFF0C;&#x82E5;&#x662F;&#x5176;&#x4ED6;&#x4F7F;&#x7528;&#x8005;&#x5077;&#x5077;&#x4E32;&#x6539;&#x7684;&#x8A71;&#xFF0C;&#x7531;&#x65BC;&#x4E32;&#x6539;&#x7684;&#x8CC7;&#x6599;&#x548C;&#x6211;&#x7684;&#x79D8;&#x5BC6;&#x5B57;&#x4E32;&#x7121;&#x6CD5;&#x76F8;&#x7B26;&#xFF0C;&#x7576;&#x7136;&#x4E5F;&#x7121;&#x6CD5;&#x4F5C;&#x507D;&#x9020;&#xFF0C;&#x9019;&#x5C31;&#x662F;&#x6240;&#x8B02;&#x7684; SignedCookie &#x4F46;&#x8A18;&#x4F4F;Session&#x5C31;&#x50CF;&#x662F;&#x4F60;&#x7684;&#x6703;&#x54E1;&#x5361;&#x865F;&#xFF0C;&#x4E0D;&#x898B;&#x4E5F;&#x8868;&#x793A;&#x4ECD;&#x7136;&#x6709;&#x8CC7;&#x6599;&#x88AB;&#x7ACA;&#x53D6;&#x7684;&#x98A8;&#x96AA;&#x3002; &#x5982;&#x679C;&#x55AE;&#x5C31;&#x5BE6;&#x73FE;&#x529F;&#x80FD;&#xFF0C;Cookie&#x8207;Session&#x5F7C;&#x6B64;&#x4E4B;&#x9593;&#x662F;&#x53EF;&#x4EE5;&#x4E92;&#x63DB;&#x7684;(&#x6307;&#x7684;&#x662F;&#x4F60;&#x53EF;&#x4EE5;&#x628A;&#x8CC7;&#x6599;&#x5B58;&#x653E;&#x5728;Session&#x6216;&#x662F;Cookie&#xFF0C;&#x4E26;&#x4E0D;&#x662F;&#x6307;Session&#x53EF;&#x4EE5;&#x88AB;&#x653E;&#x5728;Client&#x7AEF;&#x7576;Cookie&#x4F7F;&#x7528;)&#x3002;&#x4F46;&#x662F;Cookie&#x5728;&#x6700;&#x55AE;&#x7D14;&#x7684;&#x60C5;&#x6CC1;&#x88E1;&#xFF0C;&#x662F;&#x6709;&#x5B89;&#x5168;&#x6027;&#x7684;&#x554F;&#x984C;(&#x8CC7;&#x6599;&#x5728;Client&#x7AEF;)&#x3002;&#x6240;&#x4EE5;&#x8003;&#x91CF;&#x5230;&#x9019;&#x9EDE;&#xFF0C;&#x5927;&#x90E8;&#x5206;&#x90FD;&#x6703;&#x9078;&#x64C7;Session&#x3002;&#x4F46;&#x662F;&#x6B63;&#x5982;Cookie&#x662F;&#x4E00;&#x500B;&#x5916;&#x52A0;&#x7684;&#x529F;&#x80FD;&#xFF0C;Session&#x4E5F;&#x4E0D;&#x5C6C;&#x65BC;HTTP&#x5354;&#x5B9A;&#x3002;&#x53EA;&#x8981;&#x662F;&#x5916;&#x52A0;&#x529F;&#x80FD;&#xFF0C;&#x5C31;&#x5FC5;&#x9808;&#x984D;&#x5916;&#x5BEB;&#x7A0B;&#x5F0F;&#x5BE6;&#x73FE;&#x3002; &#x4E0D;&#x904E;&#x73FE;&#x5728;&#x505A;&#x7DB2;&#x7AD9;&#x6211;&#x5011;&#x90FD;&#x6D41;&#x884C;&#x4F7F;&#x7528;&#x6846;&#x67B6;&#xFF0C;Session&#x7684;&#x6A5F;&#x5236;&#x90FD;&#x88AB;&#x6846;&#x67B6;&#x6240;&#x5BE6;&#x73FE;&#x4E86;&#xFF0C;&#x4EE5;Ruby on Rails&#x4F86;&#x8AAA;&#xFF0C; &#x9810;&#x8A2D;&#x7684;Session&#x5BE6;&#x73FE;&#x65B9;&#x5F0F;&#x662F;&#x7531;Cookie&#x4F86;&#x5BE6;&#x4F5C;&#x7684;(&#x5229;&#x7528;&#x52A0;&#x5BC6;&#x8207;&#x8A2D;&#x5B9A;&#x904E;&#x671F;&#x6642;&#x9593;)&#x3002; &#x6BCF;&#x500B;&#x6846;&#x67B6;&#x5BE6;&#x73FE;&#x7684;&#x908F;&#x8F2F;&#x90FD;&#x53EF;&#x80FD;&#x4E0D;&#x4E00;&#x6A23;&#xFF0C;&#x6240;&#x4EE5;&#x9084;&#x662F;&#x8981;&#x53BB;&#x770B;&#x5B98;&#x65B9;&#x7684;&#x8AAA;&#x660E;&#x6703;&#x6BD4;&#x8F03;&#x6E05;&#x695A;&#x3002; &#x4F46;&#x5F9E;&#x9019;&#x88E1;&#x53EF;&#x5F97;&#x77E5;&#xFF0C;Session&#x4E26;&#x4E0D;&#x662F;&#x4E00;&#x500B;&#x5F88;&#x660E;&#x78BA;&#x5BE6;&#x9AD4;&#x7684;&#x6A5F;&#x5236;&#xFF0C;&#x7B97;&#x662F;&#x4E00;&#x500B;&#x6982;&#x5FF5;&#xFF0C;&#x53EA;&#x8981;&#x7B26;&#x5408;&#x6982;&#x5FF5;&#x6240;&#x5BE6;&#x4F5C;&#x51FA;&#x4F86;&#x7684;&#x529F;&#x80FD;&#x90FD;&#x53EF;&#x4EE5;&#x88AB;&#x53EB;&#x505A;Session&#x3002; references &#x7B2C;&#x4E00;&#x65B9;Cookie&#x548C;&#x7B2C;&#x4E09;&#x65B9;Cookie&#x5340;&#x5225; &#x5224;&#x65B7;&#x60A8;&#x662F;&#x4F7F;&#x7528;&#x7B2C;&#x4E00;&#x65B9;&#x9084;&#x662F;&#x7B2C;&#x4E09;&#x65B9; Cookie &#x4E94;&#x5206;&#x9418;&#x6982;&#x8FF0;&#x7DB2;&#x8DEF;&#x754C;&#x7684;&#x8A18;&#x61B6;&#x5927;&#x795E;-Session"},"array/array_insert.html":{"title":"Array Insert","path":"\\javascript\\array\\array_insert.html","body":"immutable 的重要性，處理資料要注意有沒有改變到本身。 處理 array 用 push、pop、shift、unshift、reserve、sort、splice 都會改變原有的陣列。這個觀念在處理複雜的全域變數陣列有幫助。 把數據插入陣列尾部 利用陣列長度進行賦值 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr[arr.length] = 6 ; console .log(arr); // [1, 2, 3, 4, 5, 6] 利用 Array.prototype.push 方法 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.push( 6 ); console .log(arr); // [1, 2, 3, 4, 5, 6] 利用 Array.prototype.concat 方法 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = arr.concat( 6 ); console .log(arr); // [1, 2, 3, 4, 5, 6] 利用 spread 運算符 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [...arr, 6 ]; console .log(arr); // [1, 2, 3, 4, 5, 6] 把數據插入陣列頭部 利用 Array.prototype.unshift 方法 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.unshift( 0 ); console .log(arr); // [1, 2, 3, 4, 5, 6] 利用 Array.prototype.concat 方法 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.unshift( 0 ); console .log(arr); // [1, 2, 3, 4, 5, 6] 利用 spread 運算符 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [ 0 , ...arr]; console .log(arr); // [1, 2, 3, 4, 5, 6] 把數據插入陣列指定位置 利用 Array.prototype.splice 方法 1 2 3 let items = [ 1 , 2 , 4 , 5 ]; items.splice(items.length / 2 , 0 , 3 ); console .log(items); Array.prototype.splice() splice() 方法可以藉由刪除既有元素並／或加入新元素來改變一個陣列的內容 1 2 3 4 5 const months = [ 'Jan' , 'March' , 'April' , 'June' ]; months.splice( 1 , 3 ); console .log(months); // [\"Jan\"] months.splice( 1 , 0 , 'Feb' ); // inserts at index 1 console .log(months); // [\"Jan\", \"Feb\"] 拼接兩個陣列 利用 Array.prototype.concat 方法 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [ -2 , -1 , 0 ].concat(arr); console .log(arr); // [-2, -1, 0, 1, 2, 3, 4, 5] 利用 spread 運算符 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [...[ -2 , -1 , 0 ], ...arr]; console .log(arr); // [-2, -1, 0, 1, 2, 3, 4, 5] fill() Array.prototype.fill() 方法會將陣列中索引的第一個到最後一個的每個位置全部填入一個靜態的值。 1 2 3 4 5 6 7 8 const array1 = [ 1 , 2 , 3 , 4 ]; // fill with 5 from position 1 console .log(array1.fill( 5 , 1 )); // expected output: [1, 5, 5, 5] console .log(array1.fill( 6 )); // expected output: [6, 6, 6, 6] 1 2 3 4 5 const tasksArr = props.tasks; // [1,2,3,4] const participants = tasksArr.length; const queuers = 6 - tasksArr.length; //4 ['Wating...','Wating...'] let waitingArr = queuers === 0 ? [] : Array (queuers).fill( 'Wating...' ); const totalArr = tasksArr.concat(waitingArr); example unshift 把數據插入陣列頭部 下拉選單補標題　　　　 1 2 3 4 5 6 7 8 const opts = this .dataOpts.map( data = ( value: data.id, text: data.name )) opts.unshift( value: null , text: 'select_title' )"},"array/array_insert.html#把數據插入陣列尾部":{"title":"&#x628A;&#x6578;&#x64DA;&#x63D2;&#x5165;&#x9663;&#x5217;&#x5C3E;&#x90E8;","path":"\\javascript\\array\\array_insert.html#把數據插入陣列尾部","body":"&#x5229;&#x7528;&#x9663;&#x5217;&#x9577;&#x5EA6;&#x9032;&#x884C;&#x8CE6;&#x503C; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr[arr.length] = 6 ; console .log(arr); // [1, 2, 3, 4, 5, 6] &#x5229;&#x7528; Array.prototype.push &#x65B9;&#x6CD5; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.push( 6 ); console .log(arr); // [1, 2, 3, 4, 5, 6] &#x5229;&#x7528; Array.prototype.concat &#x65B9;&#x6CD5; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = arr.concat( 6 ); console .log(arr); // [1, 2, 3, 4, 5, 6] &#x5229;&#x7528; spread &#x904B;&#x7B97;&#x7B26; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [...arr, 6 ]; console .log(arr); // [1, 2, 3, 4, 5, 6]"},"array/array_insert.html#把數據插入陣列頭部":{"title":"&#x628A;&#x6578;&#x64DA;&#x63D2;&#x5165;&#x9663;&#x5217;&#x982D;&#x90E8;","path":"\\javascript\\array\\array_insert.html#把數據插入陣列頭部","body":"&#x5229;&#x7528; Array.prototype.unshift &#x65B9;&#x6CD5; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.unshift( 0 ); console .log(arr); // [1, 2, 3, 4, 5, 6] &#x5229;&#x7528; Array.prototype.concat &#x65B9;&#x6CD5; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr.unshift( 0 ); console .log(arr); // [1, 2, 3, 4, 5, 6] &#x5229;&#x7528; spread &#x904B;&#x7B97;&#x7B26; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [ 0 , ...arr]; console .log(arr); // [1, 2, 3, 4, 5, 6]"},"array/array_insert.html#把數據插入陣列指定位置":{"title":"&#x628A;&#x6578;&#x64DA;&#x63D2;&#x5165;&#x9663;&#x5217;&#x6307;&#x5B9A;&#x4F4D;&#x7F6E;","path":"\\javascript\\array\\array_insert.html#把數據插入陣列指定位置","body":"&#x5229;&#x7528; Array.prototype.splice &#x65B9;&#x6CD5; 1 2 3 let items = [ 1 , 2 , 4 , 5 ]; items.splice(items.length / 2 , 0 , 3 ); console .log(items); Array.prototype.splice() splice() &#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x85C9;&#x7531;&#x522A;&#x9664;&#x65E2;&#x6709;&#x5143;&#x7D20;&#x4E26;&#xFF0F;&#x6216;&#x52A0;&#x5165;&#x65B0;&#x5143;&#x7D20;&#x4F86;&#x6539;&#x8B8A;&#x4E00;&#x500B;&#x9663;&#x5217;&#x7684;&#x5167;&#x5BB9; 1 2 3 4 5 const months = [ &apos;Jan&apos; , &apos;March&apos; , &apos;April&apos; , &apos;June&apos; ]; months.splice( 1 , 3 ); console .log(months); // [Jan] months.splice( 1 , 0 , &apos;Feb&apos; ); // inserts at index 1 console .log(months); // [Jan, Feb]"},"array/array_insert.html#拼接兩個陣列":{"title":"&#x62FC;&#x63A5;&#x5169;&#x500B;&#x9663;&#x5217;","path":"\\javascript\\array\\array_insert.html#拼接兩個陣列","body":"&#x5229;&#x7528; Array.prototype.concat &#x65B9;&#x6CD5; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [ -2 , -1 , 0 ].concat(arr); console .log(arr); // [-2, -1, 0, 1, 2, 3, 4, 5] &#x5229;&#x7528; spread &#x904B;&#x7B97;&#x7B26; 1 2 3 let arr = [ 1 , 2 , 3 , 4 , 5 ]; arr = [...[ -2 , -1 , 0 ], ...arr]; console .log(arr); // [-2, -1, 0, 1, 2, 3, 4, 5]"},"array/array_insert.html#fill":{"title":"fill()","path":"\\javascript\\array\\array_insert.html#fill","body":"Array.prototype.fill() &#x65B9;&#x6CD5;&#x6703;&#x5C07;&#x9663;&#x5217;&#x4E2D;&#x7D22;&#x5F15;&#x7684;&#x7B2C;&#x4E00;&#x500B;&#x5230;&#x6700;&#x5F8C;&#x4E00;&#x500B;&#x7684;&#x6BCF;&#x500B;&#x4F4D;&#x7F6E;&#x5168;&#x90E8;&#x586B;&#x5165;&#x4E00;&#x500B;&#x975C;&#x614B;&#x7684;&#x503C;&#x3002; 1 2 3 4 5 6 7 8 const array1 = [ 1 , 2 , 3 , 4 ]; // fill with 5 from position 1 console .log(array1.fill( 5 , 1 )); // expected output: [1, 5, 5, 5] console .log(array1.fill( 6 )); // expected output: [6, 6, 6, 6] 1 2 3 4 5 const tasksArr = props.tasks; // [1,2,3,4] const participants = tasksArr.length; const queuers = 6 - tasksArr.length; //4 [&apos;Wating...&apos;,&apos;Wating...&apos;] let waitingArr = queuers === 0 ? [] : Array (queuers).fill( &apos;Wating...&apos; ); const totalArr = tasksArr.concat(waitingArr);"},"array/array_insert.html#example":{"title":"example","path":"\\javascript\\array\\array_insert.html#example","body":"unshift &#x628A;&#x6578;&#x64DA;&#x63D2;&#x5165;&#x9663;&#x5217;&#x982D;&#x90E8; &#x4E0B;&#x62C9;&#x9078;&#x55AE;&#x88DC;&#x6A19;&#x984C;&#x3000;&#x3000;&#x3000;&#x3000; 1 2 3 4 5 6 7 8 const opts = this .dataOpts.map( data = ({ value: data.id, text: data.name })) opts.unshift({ value: null , text: &apos;select_title&apos; })"},"api/promise.html":{"title":"","path":"\\javascript\\api\\promise.html","body":"Promise JavaScript Promise 全介紹 Ajax 是屬於一個透過 JavaScript 技術名稱，用於取得遠端資料； 而 Promise 則是一個語法，專門用來處理非同步行為， 透過 new Promise() 的方式建立 p 物件，此時 p 就能使用 Promise 的原型方法： 1 2 3 4 5 const p = new Promise (); p.then(); // Promise 回傳正確 p.catch(); // Promise 回傳失敗 p.finally(); // 非同步執行完畢（無論是否正確完成） 狀態 pending ：事件已經運行中，尚未取得結果 resolved ：事件已經執行完畢且成功操作，回傳 resolve 的結果（該承諾已經被實現 fulfilled ） rejected ：事件已經執行完畢但操作失敗，回傳 rejected 的結果 上列的三種狀態每次執行必定會經過 Pending， 接下來進入 Fulfilled 或 Rejected 的其中之一， 並且可以使用 then() 及 catch() 取得成功或失敗的結果。 在大部分情況下，開發者習慣僅使用 .then() 來取得成功的結果，失敗的部分交由 catch(onRejected) 來處理 1 2 3 4 5 6 7 8 9 10 // promise.then(onFulfilled); // promise.catch(onRejected) promise() .then( success =  console .log(success); ) // 失敗的行為一律交給了 catch .catch( fail =  console .log(fail); ); 鏈接 Promise 另一個特點在於 then、catch 都可以使用鏈接的方式不斷的進行下一個任務 如果是 promise 函式，則會 繼續遵循 then 及 catch 的運作 如果不是 promise 函式，在下一個 then 則可以取得結果 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 promise( 1 ) .then( success =  console .log(success); return promise( 2 ); ) .then( success =  console .log(success); return promise( 0 ); // 這個階段會進入 catch ) .then( success =  // 由於上一個階段結果是 reject，所以此段不執行 console .log(success); return promise( 3 ); ) .catch( fail =  console .log(fail); ) .finally( () =  console .log( 'done' ); ) 1 2 3 4 const res = onPress() // 異步函數 if ( res &amp; res.then )  res.then( ( close ). catch ( ( )= ) ) //等函數調用完 調用close  else close() //否則 立馬調用close"},"api/promise.html#Promise":{"title":"Promise","path":"\\javascript\\api\\promise.html#Promise","body":"JavaScript Promise &#x5168;&#x4ECB;&#x7D39; Ajax &#x662F;&#x5C6C;&#x65BC;&#x4E00;&#x500B;&#x900F;&#x904E; JavaScript &#x6280;&#x8853;&#x540D;&#x7A31;&#xFF0C;&#x7528;&#x65BC;&#x53D6;&#x5F97;&#x9060;&#x7AEF;&#x8CC7;&#x6599;&#xFF1B; &#x800C; Promise &#x5247;&#x662F;&#x4E00;&#x500B;&#x8A9E;&#x6CD5;&#xFF0C;&#x5C08;&#x9580;&#x7528;&#x4F86;&#x8655;&#x7406;&#x975E;&#x540C;&#x6B65;&#x884C;&#x70BA;&#xFF0C; &#x900F;&#x904E; new Promise() &#x7684;&#x65B9;&#x5F0F;&#x5EFA;&#x7ACB; p &#x7269;&#x4EF6;&#xFF0C;&#x6B64;&#x6642; p &#x5C31;&#x80FD;&#x4F7F;&#x7528; Promise &#x7684;&#x539F;&#x578B;&#x65B9;&#x6CD5;&#xFF1A; 1 2 3 4 5 const p = new Promise (); p.then(); // Promise &#x56DE;&#x50B3;&#x6B63;&#x78BA; p.catch(); // Promise &#x56DE;&#x50B3;&#x5931;&#x6557; p.finally(); // &#x975E;&#x540C;&#x6B65;&#x57F7;&#x884C;&#x5B8C;&#x7562;&#xFF08;&#x7121;&#x8AD6;&#x662F;&#x5426;&#x6B63;&#x78BA;&#x5B8C;&#x6210;&#xFF09; &#x72C0;&#x614B; pending &#xFF1A;&#x4E8B;&#x4EF6;&#x5DF2;&#x7D93;&#x904B;&#x884C;&#x4E2D;&#xFF0C;&#x5C1A;&#x672A;&#x53D6;&#x5F97;&#x7D50;&#x679C; resolved &#xFF1A;&#x4E8B;&#x4EF6;&#x5DF2;&#x7D93;&#x57F7;&#x884C;&#x5B8C;&#x7562;&#x4E14;&#x6210;&#x529F;&#x64CD;&#x4F5C;&#xFF0C;&#x56DE;&#x50B3; resolve &#x7684;&#x7D50;&#x679C;&#xFF08;&#x8A72;&#x627F;&#x8AFE;&#x5DF2;&#x7D93;&#x88AB;&#x5BE6;&#x73FE; fulfilled &#xFF09; rejected &#xFF1A;&#x4E8B;&#x4EF6;&#x5DF2;&#x7D93;&#x57F7;&#x884C;&#x5B8C;&#x7562;&#x4F46;&#x64CD;&#x4F5C;&#x5931;&#x6557;&#xFF0C;&#x56DE;&#x50B3; rejected &#x7684;&#x7D50;&#x679C; &#x4E0A;&#x5217;&#x7684;&#x4E09;&#x7A2E;&#x72C0;&#x614B;&#x6BCF;&#x6B21;&#x57F7;&#x884C;&#x5FC5;&#x5B9A;&#x6703;&#x7D93;&#x904E; Pending&#xFF0C; &#x63A5;&#x4E0B;&#x4F86;&#x9032;&#x5165; Fulfilled &#x6216; Rejected &#x7684;&#x5176;&#x4E2D;&#x4E4B;&#x4E00;&#xFF0C; &#x4E26;&#x4E14;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; then() &#x53CA; catch() &#x53D6;&#x5F97;&#x6210;&#x529F;&#x6216;&#x5931;&#x6557;&#x7684;&#x7D50;&#x679C;&#x3002; &#x5728;&#x5927;&#x90E8;&#x5206;&#x60C5;&#x6CC1;&#x4E0B;&#xFF0C;&#x958B;&#x767C;&#x8005;&#x7FD2;&#x6163;&#x50C5;&#x4F7F;&#x7528; .then() &#x4F86;&#x53D6;&#x5F97;&#x6210;&#x529F;&#x7684;&#x7D50;&#x679C;&#xFF0C;&#x5931;&#x6557;&#x7684;&#x90E8;&#x5206;&#x4EA4;&#x7531; catch(onRejected) &#x4F86;&#x8655;&#x7406; 1 2 3 4 5 6 7 8 9 10 // promise.then(onFulfilled); // promise.catch(onRejected) promise() .then( success = { console .log(success); }) // &#x5931;&#x6557;&#x7684;&#x884C;&#x70BA;&#x4E00;&#x5F8B;&#x4EA4;&#x7D66;&#x4E86; catch .catch( fail = { console .log(fail); });"},"api/promise.html#鏈接":{"title":"&#x93C8;&#x63A5;","path":"\\javascript\\api\\promise.html#鏈接","body":"Promise &#x53E6;&#x4E00;&#x500B;&#x7279;&#x9EDE;&#x5728;&#x65BC; then&#x3001;catch &#x90FD;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x93C8;&#x63A5;&#x7684;&#x65B9;&#x5F0F;&#x4E0D;&#x65B7;&#x7684;&#x9032;&#x884C;&#x4E0B;&#x4E00;&#x500B;&#x4EFB;&#x52D9; &#x5982;&#x679C;&#x662F; promise &#x51FD;&#x5F0F;&#xFF0C;&#x5247;&#x6703; &#x7E7C;&#x7E8C;&#x9075;&#x5FAA; then &#x53CA; catch &#x7684;&#x904B;&#x4F5C; &#x5982;&#x679C;&#x4E0D;&#x662F; promise &#x51FD;&#x5F0F;&#xFF0C;&#x5728;&#x4E0B;&#x4E00;&#x500B; then &#x5247;&#x53EF;&#x4EE5;&#x53D6;&#x5F97;&#x7D50;&#x679C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 promise( 1 ) .then( success = { console .log(success); return promise( 2 ); }) .then( success = { console .log(success); return promise( 0 ); // &#x9019;&#x500B;&#x968E;&#x6BB5;&#x6703;&#x9032;&#x5165; catch }) .then( success = { // &#x7531;&#x65BC;&#x4E0A;&#x4E00;&#x500B;&#x968E;&#x6BB5;&#x7D50;&#x679C;&#x662F; reject&#xFF0C;&#x6240;&#x4EE5;&#x6B64;&#x6BB5;&#x4E0D;&#x57F7;&#x884C; console .log(success); return promise( 3 ); }) .catch( fail = { console .log(fail); }) .finally( () = { console .log( &apos;done&apos; ); }) 1 2 3 4 const res = onPress() // &#x7570;&#x6B65;&#x51FD;&#x6578; if ( res &amp; res.then ) { res.then( ( close ). catch ( ( )= {}) ) //&#x7B49;&#x51FD;&#x6578;&#x8ABF;&#x7528;&#x5B8C; &#x8ABF;&#x7528;close } else close() //&#x5426;&#x5247; &#x7ACB;&#x99AC;&#x8ABF;&#x7528;close"},"array/array_merge.html":{"title":"Array Merge","path":"\\javascript\\array\\array_merge.html","body":"concat 合併陣列 Array.prototype.concat() 1 2 3 4 var a = [ 1 , 2 , 3 ], b = [ 4 , 5 , 6 ]; var c = a.concat(b); console .log(c); // 1,2,3,4,5,6 console .log(a); // 1,2,3 不改變本身 JS 中合併多個陣列，且去除陣列重複元素 1 2 3 4 var a = [ \"a\" , \"b\" , \"c\" ], b = [ \"c\" , 1 , 2 ]; var arr = a.concat(b); console .log(arr); // [\"a\", \"b\", \"c\", \"c\", 1, 2] 要求必須返回原陣列 https://jsbin.com/nidizam/edit?js,console 1 2 3 4 5 6 7 8 // 對該陣列進行循環 arr.forEach( ( item, index ) =  // 如果當前下標和當前元素在陣列中的lastIndex不同，則刪除這個元素 if (index != arr.lastIndexOf(item))  arr.splice(index, 1 );  ); console .log(arr); // \"a\", \"b\", \"c\", 1, 2] 要求返回新陣列 https://jsbin.com/lufavuf/1/edit?js,console 1 2 3 4 5 6 // 最簡單的應該是使用陣列的 filter 方法，將當前下標和當前元素在數組中的 lastIndex 相同的元素篩選出來 var arr2 = arr.filter( ( item,index ) = index ===arr.lastIndexOf(item) ); console .log(arr); // [\"a\", \"b\", \"c\", \"c\", 1, 2] console .log(arr2); // [\"a\", \"b\", \"c\", 1, 2]"},"array/array_methods.html":{"title":"Array methods","path":"\\javascript\\array\\array_methods.html","body":"Array 生成新陣列 map filter forEach 遍歷所有元素 Array.prototype.forEach() https://jsbin.com/xoninaz/edit?js,console 1 2 3 4 5 6 7 8 9 var arr = [ 1 , 2 , 3 ]; arr.forEach( function ( item,index )  console .log(item,index); ); // expected output: 1 0 // expected output: 2 1 // expected output: 3 2 map 對元素重新組裝，生成新陣列 Array.prototype.map() https://jsbin.com/xevunu/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.map( function ( item,index )  return 'b' +item+ '/b' ; ) console .log(arr2); // expected output: [\"b1/b\", \"b2/b\", \"b3/b\"] filter 過濾符合條件的元素，生成新陣列 Array.prototype.filter() https://jsbin.com/xoninaz/1/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.filter( function ( item,index )  if (item 2 )  return true ;  ) console .log(arr2); // expected output: [3] find 回傳第一個滿足所提供之測試函式的元素值。否則回傳 undefined Array.prototype.find() https://jsbin.com/qapevom/edit?js,console 1 2 3 4 5 6 var arr = [ 1 , 2 , 3 ]; var found = arr.find( function ( item,index )  return item 1 ; ) console .log(found); // expected output: 2 sort 對一個陣列的所有元素進行排序，並回傳此陣列 Array.prototype.sort() https://jsbin.com/gaceyen/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 4 , 2 , 3 , 5 ]; var arr2 = arr.sort( function ( a,b )  return a - b; //從小到大排序 //return b - a; //從大到小排序 ) console .log(arr2); // expected output: [1, 2, 3, 4, 5] every 測試陣列 判斷所有元素是否都符合條件 Array.prototype.every() https://jsbin.com/nefobuh/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var result = arr.every( function ( item,index )  if (item 4 )  return true ;  ) console .log(result); // expected output: true some 測試陣列 判斷是否至少一個元素符合條件 Array.prototype.some() https://jsbin.com/yeleboz/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var result = arr.some( function ( item,index )  if (item 2 )  return true ;  ) console .log(result); // expected output: true reduce Array.prototype.reduce() reduce() 方法將一個累加器及陣列中每項元素（由左至右）傳入回呼函式，將陣列化為單一值。 1 2 3 4 5 6 const array1 = [ 1 , 2 , 3 , 4 ]; const reducer = ( accumulator, currentValue ) = accumulator + currentValue; // 1 + 2 + 3 + 4 console .log(array1.reduce(reducer)); // expected output: 10 Return longest string in array https://jsbin.com/razufufago/edit?js,console 1 2 3 var arr = [ \"vue\" , \"raact\" , \"JavaScript\" , \"Angular\" , \"jQuery\" ]; var longest = arr.reduce( ( a, b ) = a.length  b.length ? a : b, '' ); console .log(longest); // \"JavaScript\" examples https://jsbin.com/yapugucezi/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 let arr = [  product : 'The Godfather' , catalog : 'movie' , price : '150' ,  product : 'The Dark Knight' , catalog : 'movie' , price : '100' ,  product : '7 Rings' , catalog : 'music' , price : '300'  ] var arrFilter = arr.filter( function ( item,index )  if (item.catalog == \"movie\" )  return true ;  ) console .log(arrFilter); //arr catalog:'music' var arrSortPrice = arr.sort( function ( a,b )  return b.price - a.price; ) console .log(arrSortPrice); // arr 300 150 100 let sum = 0 ; arr.forEach( function ( element )  sum+= parseInt (element.price); ); console .log(sum); //sum price 550 陣列方法 map() 和 forEach() 有什麼區別？ 這兩種方法都是對陣列中的元素進行迭代。 map() 通過每個元素的回調函數將其映射到新的元素上，最終返回一個新的陣列。 forEach() 雖然也為每一個元素準備了回調函數，但卻不返回新的陣列。 map() 是 保持原有陣列不變的正確選擇 ，他可以讓原始陣列的每一個值都映射到新的陣列上。 forEach() 在每一次迭代的使用中都會產生副作用，因此 map() 是編程技術中常用的方法。 如果你需要迭代一個陣列，使其本身發生變化且不需要返回一個新陣列時，可以使用 forEach() 如果你只是對數字進行遍歷時，也可以使用 forEach() map() 運行的 較快 ，且返回的新陣列可以讓你繼續使用 map()、filter()、reduce() 等方法， 1 2 3 4 const arr = [ 1 , 2 , 3 , 4 , 5 ]; const arr1 = arr.map( num = num * 2 ).filter( num = num  5 ); console .log(arr); // [1, 2, 3, 4, 5] console .log(arr1); // [6, 8, 10] ref: https://hacpai.com/article/1547790109416?r=Vanessa"},"array/array_methods.html#Array":{"title":"Array","path":"\\javascript\\array\\array_methods.html#Array","body":"&#x751F;&#x6210;&#x65B0;&#x9663;&#x5217; map filter"},"array/array_methods.html#forEach":{"title":"forEach","path":"\\javascript\\array\\array_methods.html#forEach","body":"&#x904D;&#x6B77;&#x6240;&#x6709;&#x5143;&#x7D20; Array.prototype.forEach() https://jsbin.com/xoninaz/edit?js,console 1 2 3 4 5 6 7 8 9 var arr = [ 1 , 2 , 3 ]; arr.forEach( function ( item,index ) { console .log(item,index); }); // expected output: 1 0 // expected output: 2 1 // expected output: 3 2"},"array/array_methods.html#map":{"title":"map","path":"\\javascript\\array\\array_methods.html#map","body":"&#x5C0D;&#x5143;&#x7D20;&#x91CD;&#x65B0;&#x7D44;&#x88DD;&#xFF0C;&#x751F;&#x6210;&#x65B0;&#x9663;&#x5217; Array.prototype.map() https://jsbin.com/xevunu/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.map( function ( item,index ) { return &apos;b&apos; +item+ &apos;/b&apos; ; }) console .log(arr2); // expected output: [b1/b, b2/b, b3/b]"},"array/array_methods.html#filter":{"title":"filter","path":"\\javascript\\array\\array_methods.html#filter","body":"&#x904E;&#x6FFE;&#x7B26;&#x5408;&#x689D;&#x4EF6;&#x7684;&#x5143;&#x7D20;&#xFF0C;&#x751F;&#x6210;&#x65B0;&#x9663;&#x5217; Array.prototype.filter() https://jsbin.com/xoninaz/1/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.filter( function ( item,index ) { if (item 2 ) { return true ; } }) console .log(arr2); // expected output: [3]"},"array/array_methods.html#find":{"title":"find","path":"\\javascript\\array\\array_methods.html#find","body":"&#x56DE;&#x50B3;&#x7B2C;&#x4E00;&#x500B;&#x6EFF;&#x8DB3;&#x6240;&#x63D0;&#x4F9B;&#x4E4B;&#x6E2C;&#x8A66;&#x51FD;&#x5F0F;&#x7684;&#x5143;&#x7D20;&#x503C;&#x3002;&#x5426;&#x5247;&#x56DE;&#x50B3; undefined Array.prototype.find() https://jsbin.com/qapevom/edit?js,console 1 2 3 4 5 6 var arr = [ 1 , 2 , 3 ]; var found = arr.find( function ( item,index ) { return item 1 ; }) console .log(found); // expected output: 2"},"array/array_methods.html#sort":{"title":"sort","path":"\\javascript\\array\\array_methods.html#sort","body":"&#x5C0D;&#x4E00;&#x500B;&#x9663;&#x5217;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x9032;&#x884C;&#x6392;&#x5E8F;&#xFF0C;&#x4E26;&#x56DE;&#x50B3;&#x6B64;&#x9663;&#x5217; Array.prototype.sort() https://jsbin.com/gaceyen/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 4 , 2 , 3 , 5 ]; var arr2 = arr.sort( function ( a,b ) { return a - b; //&#x5F9E;&#x5C0F;&#x5230;&#x5927;&#x6392;&#x5E8F; //return b - a; //&#x5F9E;&#x5927;&#x5230;&#x5C0F;&#x6392;&#x5E8F; }) console .log(arr2); // expected output: [1, 2, 3, 4, 5]"},"array/array_methods.html#every":{"title":"every","path":"\\javascript\\array\\array_methods.html#every","body":"&#x6E2C;&#x8A66;&#x9663;&#x5217; &#x5224;&#x65B7;&#x6240;&#x6709;&#x5143;&#x7D20;&#x662F;&#x5426;&#x90FD;&#x7B26;&#x5408;&#x689D;&#x4EF6; Array.prototype.every() https://jsbin.com/nefobuh/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var result = arr.every( function ( item,index ) { if (item 4 ) { return true ; } }) console .log(result); // expected output: true"},"array/array_methods.html#some":{"title":"some","path":"\\javascript\\array\\array_methods.html#some","body":"&#x6E2C;&#x8A66;&#x9663;&#x5217; &#x5224;&#x65B7;&#x662F;&#x5426;&#x81F3;&#x5C11;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x7B26;&#x5408;&#x689D;&#x4EF6; Array.prototype.some() https://jsbin.com/yeleboz/edit?js,console 1 2 3 4 5 6 7 8 var arr = [ 1 , 2 , 3 ]; var result = arr.some( function ( item,index ) { if (item 2 ) { return true ; } }) console .log(result); // expected output: true"},"array/array_methods.html#reduce":{"title":"reduce","path":"\\javascript\\array\\array_methods.html#reduce","body":"Array.prototype.reduce() reduce() &#x65B9;&#x6CD5;&#x5C07;&#x4E00;&#x500B;&#x7D2F;&#x52A0;&#x5668;&#x53CA;&#x9663;&#x5217;&#x4E2D;&#x6BCF;&#x9805;&#x5143;&#x7D20;&#xFF08;&#x7531;&#x5DE6;&#x81F3;&#x53F3;&#xFF09;&#x50B3;&#x5165;&#x56DE;&#x547C;&#x51FD;&#x5F0F;&#xFF0C;&#x5C07;&#x9663;&#x5217;&#x5316;&#x70BA;&#x55AE;&#x4E00;&#x503C;&#x3002; 1 2 3 4 5 6 const array1 = [ 1 , 2 , 3 , 4 ]; const reducer = ( accumulator, currentValue ) = accumulator + currentValue; // 1 + 2 + 3 + 4 console .log(array1.reduce(reducer)); // expected output: 10 Return longest string in array https://jsbin.com/razufufago/edit?js,console 1 2 3 var arr = [ vue , raact , JavaScript , Angular , jQuery ]; var longest = arr.reduce( ( a, b ) = a.length  b.length ? a : b, &apos;&apos; ); console .log(longest); // JavaScript examples https://jsbin.com/yapugucezi/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 let arr = [ { product : &apos;The Godfather&apos; , catalog : &apos;movie&apos; , price : &apos;150&apos; }, { product : &apos;The Dark Knight&apos; , catalog : &apos;movie&apos; , price : &apos;100&apos; }, { product : &apos;7 Rings&apos; , catalog : &apos;music&apos; , price : &apos;300&apos; } ] var arrFilter = arr.filter( function ( item,index ) { if (item.catalog == movie ) { return true ; } }) console .log(arrFilter); //arr catalog:&apos;music&apos; var arrSortPrice = arr.sort( function ( a,b ) { return b.price - a.price; }) console .log(arrSortPrice); // arr 300 150 100 let sum = 0 ; arr.forEach( function ( element ) { sum+= parseInt (element.price); }); console .log(sum); //sum price 550 &#x9663;&#x5217;&#x65B9;&#x6CD5; map() &#x548C; forEach() &#x6709;&#x4EC0;&#x9EBC;&#x5340;&#x5225;&#xFF1F; &#x9019;&#x5169;&#x7A2E;&#x65B9;&#x6CD5;&#x90FD;&#x662F;&#x5C0D;&#x9663;&#x5217;&#x4E2D;&#x7684;&#x5143;&#x7D20;&#x9032;&#x884C;&#x8FED;&#x4EE3;&#x3002; map() &#x901A;&#x904E;&#x6BCF;&#x500B;&#x5143;&#x7D20;&#x7684;&#x56DE;&#x8ABF;&#x51FD;&#x6578;&#x5C07;&#x5176;&#x6620;&#x5C04;&#x5230;&#x65B0;&#x7684;&#x5143;&#x7D20;&#x4E0A;&#xFF0C;&#x6700;&#x7D42;&#x8FD4;&#x56DE;&#x4E00;&#x500B;&#x65B0;&#x7684;&#x9663;&#x5217;&#x3002; forEach() &#x96D6;&#x7136;&#x4E5F;&#x70BA;&#x6BCF;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x6E96;&#x5099;&#x4E86;&#x56DE;&#x8ABF;&#x51FD;&#x6578;&#xFF0C;&#x4F46;&#x537B;&#x4E0D;&#x8FD4;&#x56DE;&#x65B0;&#x7684;&#x9663;&#x5217;&#x3002; map() &#x662F; &#x4FDD;&#x6301;&#x539F;&#x6709;&#x9663;&#x5217;&#x4E0D;&#x8B8A;&#x7684;&#x6B63;&#x78BA;&#x9078;&#x64C7; &#xFF0C;&#x4ED6;&#x53EF;&#x4EE5;&#x8B93;&#x539F;&#x59CB;&#x9663;&#x5217;&#x7684;&#x6BCF;&#x4E00;&#x500B;&#x503C;&#x90FD;&#x6620;&#x5C04;&#x5230;&#x65B0;&#x7684;&#x9663;&#x5217;&#x4E0A;&#x3002; forEach() &#x5728;&#x6BCF;&#x4E00;&#x6B21;&#x8FED;&#x4EE3;&#x7684;&#x4F7F;&#x7528;&#x4E2D;&#x90FD;&#x6703;&#x7522;&#x751F;&#x526F;&#x4F5C;&#x7528;&#xFF0C;&#x56E0;&#x6B64; map() &#x662F;&#x7DE8;&#x7A0B;&#x6280;&#x8853;&#x4E2D;&#x5E38;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x5982;&#x679C;&#x4F60;&#x9700;&#x8981;&#x8FED;&#x4EE3;&#x4E00;&#x500B;&#x9663;&#x5217;&#xFF0C;&#x4F7F;&#x5176;&#x672C;&#x8EAB;&#x767C;&#x751F;&#x8B8A;&#x5316;&#x4E14;&#x4E0D;&#x9700;&#x8981;&#x8FD4;&#x56DE;&#x4E00;&#x500B;&#x65B0;&#x9663;&#x5217;&#x6642;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; forEach() &#x5982;&#x679C;&#x4F60;&#x53EA;&#x662F;&#x5C0D;&#x6578;&#x5B57;&#x9032;&#x884C;&#x904D;&#x6B77;&#x6642;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; forEach() map() &#x904B;&#x884C;&#x7684; &#x8F03;&#x5FEB; &#xFF0C;&#x4E14;&#x8FD4;&#x56DE;&#x7684;&#x65B0;&#x9663;&#x5217;&#x53EF;&#x4EE5;&#x8B93;&#x4F60;&#x7E7C;&#x7E8C;&#x4F7F;&#x7528; map()&#x3001;filter()&#x3001;reduce() &#x7B49;&#x65B9;&#x6CD5;&#xFF0C; 1 2 3 4 const arr = [ 1 , 2 , 3 , 4 , 5 ]; const arr1 = arr.map( num = num * 2 ).filter( num = num  5 ); console .log(arr); // [1, 2, 3, 4, 5] console .log(arr1); // [6, 8, 10] ref: https://hacpai.com/article/1547790109416?r=Vanessa"},"array/array_methods.html#examples":{"title":"examples","path":"\\javascript\\array\\array_methods.html#examples","body":"https://jsbin.com/yapugucezi/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 let arr = [ { product : &apos;The Godfather&apos; , catalog : &apos;movie&apos; , price : &apos;150&apos; }, { product : &apos;The Dark Knight&apos; , catalog : &apos;movie&apos; , price : &apos;100&apos; }, { product : &apos;7 Rings&apos; , catalog : &apos;music&apos; , price : &apos;300&apos; } ] var arrFilter = arr.filter( function ( item,index ) { if (item.catalog == movie ) { return true ; } }) console .log(arrFilter); //arr catalog:&apos;music&apos; var arrSortPrice = arr.sort( function ( a,b ) { return b.price - a.price; }) console .log(arrSortPrice); // arr 300 150 100 let sum = 0 ; arr.forEach( function ( element ) { sum+= parseInt (element.price); }); console .log(sum); //sum price 550 &#x9663;&#x5217;&#x65B9;&#x6CD5; map() &#x548C; forEach() &#x6709;&#x4EC0;&#x9EBC;&#x5340;&#x5225;&#xFF1F; &#x9019;&#x5169;&#x7A2E;&#x65B9;&#x6CD5;&#x90FD;&#x662F;&#x5C0D;&#x9663;&#x5217;&#x4E2D;&#x7684;&#x5143;&#x7D20;&#x9032;&#x884C;&#x8FED;&#x4EE3;&#x3002; map() &#x901A;&#x904E;&#x6BCF;&#x500B;&#x5143;&#x7D20;&#x7684;&#x56DE;&#x8ABF;&#x51FD;&#x6578;&#x5C07;&#x5176;&#x6620;&#x5C04;&#x5230;&#x65B0;&#x7684;&#x5143;&#x7D20;&#x4E0A;&#xFF0C;&#x6700;&#x7D42;&#x8FD4;&#x56DE;&#x4E00;&#x500B;&#x65B0;&#x7684;&#x9663;&#x5217;&#x3002; forEach() &#x96D6;&#x7136;&#x4E5F;&#x70BA;&#x6BCF;&#x4E00;&#x500B;&#x5143;&#x7D20;&#x6E96;&#x5099;&#x4E86;&#x56DE;&#x8ABF;&#x51FD;&#x6578;&#xFF0C;&#x4F46;&#x537B;&#x4E0D;&#x8FD4;&#x56DE;&#x65B0;&#x7684;&#x9663;&#x5217;&#x3002; map() &#x662F; &#x4FDD;&#x6301;&#x539F;&#x6709;&#x9663;&#x5217;&#x4E0D;&#x8B8A;&#x7684;&#x6B63;&#x78BA;&#x9078;&#x64C7; &#xFF0C;&#x4ED6;&#x53EF;&#x4EE5;&#x8B93;&#x539F;&#x59CB;&#x9663;&#x5217;&#x7684;&#x6BCF;&#x4E00;&#x500B;&#x503C;&#x90FD;&#x6620;&#x5C04;&#x5230;&#x65B0;&#x7684;&#x9663;&#x5217;&#x4E0A;&#x3002; forEach() &#x5728;&#x6BCF;&#x4E00;&#x6B21;&#x8FED;&#x4EE3;&#x7684;&#x4F7F;&#x7528;&#x4E2D;&#x90FD;&#x6703;&#x7522;&#x751F;&#x526F;&#x4F5C;&#x7528;&#xFF0C;&#x56E0;&#x6B64; map() &#x662F;&#x7DE8;&#x7A0B;&#x6280;&#x8853;&#x4E2D;&#x5E38;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x5982;&#x679C;&#x4F60;&#x9700;&#x8981;&#x8FED;&#x4EE3;&#x4E00;&#x500B;&#x9663;&#x5217;&#xFF0C;&#x4F7F;&#x5176;&#x672C;&#x8EAB;&#x767C;&#x751F;&#x8B8A;&#x5316;&#x4E14;&#x4E0D;&#x9700;&#x8981;&#x8FD4;&#x56DE;&#x4E00;&#x500B;&#x65B0;&#x9663;&#x5217;&#x6642;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; forEach() &#x5982;&#x679C;&#x4F60;&#x53EA;&#x662F;&#x5C0D;&#x6578;&#x5B57;&#x9032;&#x884C;&#x904D;&#x6B77;&#x6642;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; forEach() map() &#x904B;&#x884C;&#x7684; &#x8F03;&#x5FEB; &#xFF0C;&#x4E14;&#x8FD4;&#x56DE;&#x7684;&#x65B0;&#x9663;&#x5217;&#x53EF;&#x4EE5;&#x8B93;&#x4F60;&#x7E7C;&#x7E8C;&#x4F7F;&#x7528; map()&#x3001;filter()&#x3001;reduce() &#x7B49;&#x65B9;&#x6CD5;&#xFF0C; 1 2 3 4 const arr = [ 1 , 2 , 3 , 4 , 5 ]; const arr1 = arr.map( num = num * 2 ).filter( num = num  5 ); console .log(arr); // [1, 2, 3, 4, 5] console .log(arr1); // [6, 8, 10] ref: https://hacpai.com/article/1547790109416?r=Vanessa"},"array/good_part.html":{"title":"JS 不良編碼習慣","path":"\\javascript\\array\\good_part.html","body":"不要使用早期的JavaScript技巧 它的創建者沒有料到這種語言會如此流行。 基於JavaScript構建的應用程序的複雜性比語言發展的速度還要快。這種情況迫使開發人員使用JavaScript技巧和變通方法，只是為了讓事情正常運行。 一個典型的例子是查看數組是否包含某個元素。 ES6 中可以使用 array.includes(item) 來代替 array.indexOf(item) !== -1"},"array/splice.html":{"title":"Array splice","path":"\\javascript\\array\\splice.html","body":"分割指定长度的元素数组 1 2 3 4 5 6 7 8 9 10 11 12 const listChunk = ( list, size= 1 , cacheList=[] ) =  const tmp = [...list] if (size  0 ) return list while (tmp.length)  cacheList.push( tmp.splice( 0 ,size))  return cacheList  console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ])) // [[1], [2], [3], [4], [5], [6], [7], [8], [9]] console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ], 3 )) // [[1, 2, 3], [4, 5, 6], [7, 8, 9]] console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ], 0 )) // [] console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ], -1 )) // []"},"array/splice.html#分割指定长度的元素数组":{"title":"&#x5206;&#x5272;&#x6307;&#x5B9A;&#x957F;&#x5EA6;&#x7684;&#x5143;&#x7D20;&#x6570;&#x7EC4;","path":"\\javascript\\array\\splice.html#分割指定长度的元素数组","body":"1 2 3 4 5 6 7 8 9 10 11 12 const listChunk = ( list, size= 1 , cacheList=[] ) = { const tmp = [...list] if (size  0 ) return list while (tmp.length) { cacheList.push( tmp.splice( 0 ,size)) } return cacheList } console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ])) // [[1], [2], [3], [4], [5], [6], [7], [8], [9]] console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ], 3 )) // [[1, 2, 3], [4, 5, 6], [7, 8, 9]] console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ], 0 )) // [] console .log(listChunk([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ], -1 )) // []"},"array/object_to_array.html":{"title":"object to array","path":"\\javascript\\array\\object_to_array.html","body":"transform object to array with lodash A modern native solution if anyone is interested: 1 const arr = Object .keys(obj).map( key = ( key, value : obj[key] ));"},"array/filter.html":{"title":"Array filter","path":"\\javascript\\array\\filter.html","body":"filter 1 2 3 4 5 6 var arr = [ 0 , 1 , 2 ] arr[ 10 ] = 10 ; const result = arr.filter( function ( x )  return x === undefined ; ) console .log(result) // [] filter 和 map 基本屬性 會把 或直接略過那些空的東西 不處理 [‘1’, ‘2’, ‘3’].filter(parseInt) ? filter 为数组中的每个元素调用一次 callback 函数，并利用所有使得 callback 返回 true 或等价于 true 的值的元素创建一个新数组。 1 2 3 parseInt ( '1' , 0 ); // 1 parseInt ( '2' , 1 ); // 不返回 parseInt ( '3' , 2 ); // NaN 不返回 parseInt(‘1’, 0)：radix的值為0，判斷字符串發現介於1~9，用10進制轉換，結果為1，所以callback的結果等價於true，返回元素’1’。 parseInt(‘2’, 1)：radix的值為1，如果該參數小於 2 或者大於 36，則 parseInt() 將返回 NaN，結果不等價於true，不返回。 parseInt(‘3’, 2): radix的值為2，這就意味著字符串將被解析成字節數，也就是僅僅包含數值0和1。parseInt的規範指出，它僅嘗試分析第一個字符的左側。這個字符串的第一個字符是“3”，它並不是基礎基數2的一個有效數字。所以這個子字符串將被解析為空。如果子字符串被解析成空了，函數將返回為NaN。 https://juejin.im/post/5dbff8735188252ddb2fd25e [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;].filter(parseInt) // [1]"},"array/filter.html#‘1’-‘2’-‘3’-filter-parseInt":{"title":"[&#x2018;1&#x2019;, &#x2018;2&#x2019;, &#x2018;3&#x2019;].filter(parseInt) ?","path":"\\javascript\\array\\filter.html#‘1’-‘2’-‘3’-filter-parseInt","body":"filter &#x4E3A;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x8C03;&#x7528;&#x4E00;&#x6B21; callback &#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x5229;&#x7528;&#x6240;&#x6709;&#x4F7F;&#x5F97; callback &#x8FD4;&#x56DE; true &#x6216;&#x7B49;&#x4EF7;&#x4E8E; true &#x7684;&#x503C;&#x7684;&#x5143;&#x7D20;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x6570;&#x7EC4;&#x3002; 1 2 3 parseInt ( &apos;1&apos; , 0 ); // 1 parseInt ( &apos;2&apos; , 1 ); // &#x4E0D;&#x8FD4;&#x56DE; parseInt ( &apos;3&apos; , 2 ); // NaN &#x4E0D;&#x8FD4;&#x56DE; parseInt(&#x2018;1&#x2019;, 0)&#xFF1A;radix&#x7684;&#x503C;&#x70BA;0&#xFF0C;&#x5224;&#x65B7;&#x5B57;&#x7B26;&#x4E32;&#x767C;&#x73FE;&#x4ECB;&#x65BC;1~9&#xFF0C;&#x7528;10&#x9032;&#x5236;&#x8F49;&#x63DB;&#xFF0C;&#x7D50;&#x679C;&#x70BA;1&#xFF0C;&#x6240;&#x4EE5;callback&#x7684;&#x7D50;&#x679C;&#x7B49;&#x50F9;&#x65BC;true&#xFF0C;&#x8FD4;&#x56DE;&#x5143;&#x7D20;&#x2019;1&#x2019;&#x3002; parseInt(&#x2018;2&#x2019;, 1)&#xFF1A;radix&#x7684;&#x503C;&#x70BA;1&#xFF0C;&#x5982;&#x679C;&#x8A72;&#x53C3;&#x6578;&#x5C0F;&#x65BC; 2 &#x6216;&#x8005;&#x5927;&#x65BC; 36&#xFF0C;&#x5247; parseInt() &#x5C07;&#x8FD4;&#x56DE; NaN&#xFF0C;&#x7D50;&#x679C;&#x4E0D;&#x7B49;&#x50F9;&#x65BC;true&#xFF0C;&#x4E0D;&#x8FD4;&#x56DE;&#x3002; parseInt(&#x2018;3&#x2019;, 2): radix&#x7684;&#x503C;&#x70BA;2&#xFF0C;&#x9019;&#x5C31;&#x610F;&#x5473;&#x8457;&#x5B57;&#x7B26;&#x4E32;&#x5C07;&#x88AB;&#x89E3;&#x6790;&#x6210;&#x5B57;&#x7BC0;&#x6578;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x50C5;&#x50C5;&#x5305;&#x542B;&#x6578;&#x503C;0&#x548C;1&#x3002;parseInt&#x7684;&#x898F;&#x7BC4;&#x6307;&#x51FA;&#xFF0C;&#x5B83;&#x50C5;&#x5617;&#x8A66;&#x5206;&#x6790;&#x7B2C;&#x4E00;&#x500B;&#x5B57;&#x7B26;&#x7684;&#x5DE6;&#x5074;&#x3002;&#x9019;&#x500B;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x7B2C;&#x4E00;&#x500B;&#x5B57;&#x7B26;&#x662F;&#x201C;3&#x201D;&#xFF0C;&#x5B83;&#x4E26;&#x4E0D;&#x662F;&#x57FA;&#x790E;&#x57FA;&#x6578;2&#x7684;&#x4E00;&#x500B;&#x6709;&#x6548;&#x6578;&#x5B57;&#x3002;&#x6240;&#x4EE5;&#x9019;&#x500B;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x5C07;&#x88AB;&#x89E3;&#x6790;&#x70BA;&#x7A7A;&#x3002;&#x5982;&#x679C;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x88AB;&#x89E3;&#x6790;&#x6210;&#x7A7A;&#x4E86;&#xFF0C;&#x51FD;&#x6578;&#x5C07;&#x8FD4;&#x56DE;&#x70BA;NaN&#x3002; https://juejin.im/post/5dbff8735188252ddb2fd25e [&apos;1&apos;, &apos;2&apos;, &apos;3&apos;].filter(parseInt) // [1]"},"cases/arr.html":{"title":"arrays","path":"\\javascript\\cases\\arr.html","body":"一个合格的中级前端工程师必须要掌握的 28 个 JavaScript 技巧 ###　 One loop two arrays https://jsbin.com/janoyunemu/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const exampleValues = [ 2 , 15 , 8 , 23 , 1 , 32 ]; const [truthyValues, falseyValues] = exampleValues.reduce( ( arrays, exampleValue ) =  if (exampleValue  10 )  arrays[ 0 ].push(exampleValue); return arrays;  arrays[ 1 ].push(exampleValue); return arrays; , [[], []]); console .log(truthyValues); // [15, 23, 32] console .log(falseyValues); // [2, 8, 1] 如何快速將一個字符串數組轉化為數字類型的數組 1 2 [ '1' , '2' , '3' ].map( parseFloat ) [ '1' , '2' , '3' ].map( Number ) [‘1’, ‘2’, ‘3’].map(parseInt)的輸出結果是什麼？ 1 2 3 4 [ '1' , '2' , '3' ].map( parseInt ) parseInt ( '1' , 0 ); // 用10進制轉換 parseInt ( '2' , 1 ); // 該參數小於 2 或者大於 36，則 parseInt() 將返回 NaN parseInt ( '3' , 2 ); // 這個字符串的第一個字符是“3”，它並不是基礎基數2的一個有效數字。所以這個子字符串將被解析為空。如果子字符串被解析成空了，函數將返回為NaN。"},"cases/arr.html#如何快速將一個字符串數組轉化為數字類型的數組":{"title":"&#x5982;&#x4F55;&#x5FEB;&#x901F;&#x5C07;&#x4E00;&#x500B;&#x5B57;&#x7B26;&#x4E32;&#x6578;&#x7D44;&#x8F49;&#x5316;&#x70BA;&#x6578;&#x5B57;&#x985E;&#x578B;&#x7684;&#x6578;&#x7D44;","path":"\\javascript\\cases\\arr.html#如何快速將一個字符串數組轉化為數字類型的數組","body":"1 2 [ &apos;1&apos; , &apos;2&apos; , &apos;3&apos; ].map( parseFloat ) [ &apos;1&apos; , &apos;2&apos; , &apos;3&apos; ].map( Number ) [&#x2018;1&#x2019;, &#x2018;2&#x2019;, &#x2018;3&#x2019;].map(parseInt)&#x7684;&#x8F38;&#x51FA;&#x7D50;&#x679C;&#x662F;&#x4EC0;&#x9EBC;&#xFF1F; 1 2 3 4 [ &apos;1&apos; , &apos;2&apos; , &apos;3&apos; ].map( parseInt ) parseInt ( &apos;1&apos; , 0 ); // &#x7528;10&#x9032;&#x5236;&#x8F49;&#x63DB; parseInt ( &apos;2&apos; , 1 ); // &#x8A72;&#x53C3;&#x6578;&#x5C0F;&#x65BC; 2 &#x6216;&#x8005;&#x5927;&#x65BC; 36&#xFF0C;&#x5247; parseInt() &#x5C07;&#x8FD4;&#x56DE; NaN parseInt ( &apos;3&apos; , 2 ); // &#x9019;&#x500B;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x7B2C;&#x4E00;&#x500B;&#x5B57;&#x7B26;&#x662F;&#x201C;3&#x201D;&#xFF0C;&#x5B83;&#x4E26;&#x4E0D;&#x662F;&#x57FA;&#x790E;&#x57FA;&#x6578;2&#x7684;&#x4E00;&#x500B;&#x6709;&#x6548;&#x6578;&#x5B57;&#x3002;&#x6240;&#x4EE5;&#x9019;&#x500B;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x5C07;&#x88AB;&#x89E3;&#x6790;&#x70BA;&#x7A7A;&#x3002;&#x5982;&#x679C;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x88AB;&#x89E3;&#x6790;&#x6210;&#x7A7A;&#x4E86;&#xFF0C;&#x51FD;&#x6578;&#x5C07;&#x8FD4;&#x56DE;&#x70BA;NaN&#x3002;"},"cases/if.html":{"title":"if else","path":"\\javascript\\cases\\if.html","body":"good programming patterns 三元運算符 Nested ternaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 let result = null ; if (conditionA)  if (conditionB)  result = \"A &amp; B\" ;  else  result = \"A\" ;   else  result = \"Not A\" ;  const result = !conditionA ? \"Not A\" : conditionB ? \"A &amp; B\" : \"A\" ; 1 2 3 4 5 6 var a = [ 0 ] if (a)  console .log( a == true )  else  console .log( \"done\" )  if 作為判斷數組有東西會過 但js怕比 [0] == true false"},"array/map.html":{"title":"","path":"\\javascript\\array\\map.html","body":"map 對元素重新組裝，生成新陣列 Array.prototype.map() https://jsbin.com/xevunu/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.map( function ( item,index )  return 'b' +item+ '/b' ; ) console .log(arr2); // expected output: [\"b1/b\", \"b2/b\", \"b3/b\"] 1 2 3 4 5 6 7 const array1 = [ 1 , 4 , 9 , 16 ]; // pass a function to map const map1 = array1.map( x = x * 2 ); console .log(map1); // expected output: Array [2, 8, 18, 32] res.map( (v,i)={ console.log(i,v) } ) react-ts-epirus\\src\\utils\\api\\queries.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 .then( postEthGetFilterLogsRes =  let hashList = [], fromtoArr=[]; postEthGetFilterLogsRes.map( v =  let transactionHash = v.transactionHash; fromtoArr.push(  transactionHash :transactionHash ) hashList.push(v.transactionHash) ) return Promise .all(hashList.map( ( hash ) = fetchData3( `/transactions/ $hash ` ))) .then( ( values ) =  let transactionsArr = []; values.map( ( v,i )=  let timestampISO = v.timestampISO; let value = v.functionMeta.params.length === 0 ? 0 : v.functionMeta.params[ 1 ].value let add_transactionHash = fromtoArr[i].transactionHash transactionsArr.push(  timestampISO: timestampISO, value : value, add_transactionHash: add_transactionHash  ) ) return transactionsArr; ) .catch( () =  ) .finally( () =  ); ) .then( res =  let ans = res as any[]; let resans = ans.map( v =  const timestampISO = v.timestampISO; const value = v.value; const add_transactionHash = v.add_transactionHash; return  'timestampISO' : timestampISO, 'value' : value, 'hash' : add_transactionHash, ; ) return resans; )"},"array/map.html#map":{"title":"map","path":"\\javascript\\array\\map.html#map","body":"&#x5C0D;&#x5143;&#x7D20;&#x91CD;&#x65B0;&#x7D44;&#x88DD;&#xFF0C;&#x751F;&#x6210;&#x65B0;&#x9663;&#x5217; Array.prototype.map() https://jsbin.com/xevunu/edit?js,console 1 2 3 4 5 6 7 var arr = [ 1 , 2 , 3 ]; var arr2 = arr.map( function ( item,index ) { return &apos;b&apos; +item+ &apos;/b&apos; ; }) console .log(arr2); // expected output: [b1/b, b2/b, b3/b] 1 2 3 4 5 6 7 const array1 = [ 1 , 4 , 9 , 16 ]; // pass a function to map const map1 = array1.map( x = x * 2 ); console .log(map1); // expected output: Array [2, 8, 18, 32] res.map( (v,i)={ console.log(i,v) } ) react-ts-epirus\\src\\utils\\api\\queries.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 .then( postEthGetFilterLogsRes = { let hashList = [], fromtoArr=[]; postEthGetFilterLogsRes.map( v = { let transactionHash = v.transactionHash; fromtoArr.push( { transactionHash :transactionHash }) hashList.push(v.transactionHash) }) return Promise .all(hashList.map( ( hash ) = fetchData3( `/transactions/ ${hash} ` ))) .then( ( values ) = { let transactionsArr = []; values.map( ( v,i )= { let timestampISO = v.timestampISO; let value = v.functionMeta.params.length === 0 ? 0 : v.functionMeta.params[ 1 ].value let add_transactionHash = fromtoArr[i].transactionHash transactionsArr.push( { timestampISO: timestampISO, value : value, add_transactionHash: add_transactionHash } ) }) return transactionsArr; }) .catch( () = { }) .finally( () = { }); }) .then( res = { let ans = res as any[]; let resans = ans.map( v = { const timestampISO = v.timestampISO; const value = v.value; const add_transactionHash = v.add_transactionHash; return { &apos;timestampISO&apos; : timestampISO, &apos;value&apos; : value, &apos;hash&apos; : add_transactionHash, }; }) return resans; })"},"array/fill.html":{"title":"Array fill","path":"\\javascript\\array\\fill.html","body":"fill 1 2 3 4 5 6 7 8 9 10 11 12 const array1 = [ 1 , 2 , 3 , 4 ]; // fill with 0 from position 2 until position 4 console .log(array1.fill( 0 , 2 , 4 )); // expected output: [1, 2, 0, 0] // fill with 5 from position 1 console .log(array1.fill( 5 , 1 )); // expected output: [1, 5, 5, 5] console .log(array1.fill( 6 )); // expected output: [6, 6, 6, 6] {1:200, 2:140, 5:400} 請將上面的數據格式轉換為 [200, 140, null, null, 400, null, null, null, null, null, null, null] ,其中數組的長度為12 1 2 3 4 5 6 const obj =  1 : 200 , 2 : 140 , 5 : 400 ; function translate ( obj )  return Object .assign( Array ( 13 ).fill( null ), obj).slice( 1 );  // 輸出 [200, 140, null, null, 400, null, null, null, null, null, null, null] console .log(translate(obj));"},"cases/replace.html":{"title":"replace","path":"\\javascript\\cases\\replace.html","body":"String.prototype.replace() 1 2 3 4 5 6 7 8 var str = 'x-x_' ; var retArr = []; str.replace( /(x_*)|(-)/g , function ( match, p1, p2 )  if (p1)  retArr.push( on : true , length : p1.length );  if (p2)  retArr.push( on : false , length : 1 );  ); console .log(retArr);"},"cases/delay.html":{"title":"Delay","path":"\\javascript\\cases\\delay.html","body":"延迟函数delay 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 const delay = ms = new Promise ( ( resolve, reject ) = setTimeout(resolve, ms)) const getData = status = new Promise ( ( resolve, reject ) =  status ? resolve( 'done' ) : reject( 'fail' ) ) const getRes = async (data) =  try  const res = await getData(data) const timestamp = new Date ().getTime() await delay( 1000 ) console .log(res, new Date ().getTime() - timestamp)  catch (error)  console .log(error)   getRes( true ) // 隔了1秒"},"cases/math.html":{"title":"問題","path":"\\javascript\\cases\\math.html","body":"浮點數運算的坑 JavaScript 浮点数陷阱及解法 當你拿到 1.4000000000000001 這樣的數據要展示時，建議使用 toPrecision 湊整併 parseFloat 轉成數字後再顯示，如下： parseFloat(1.4000000000000001.toPrecision(12)) === 1.4 // True 百分比 轉 小數 問題 1 2 3 4 5 6 var a = 0.9 ; var b = a / 100 ; var c = parseFloat ( (a / 100 ).toPrecision( 12 )) console .log(b) // 0.009000000000000001 console .log(c) // 0.009 科學符號處理 npm from-exponential 1 2 3 4 5 6 7 8 span v-text= \"getPriceValue(order.itemPrice)\"  / span  import fromExponential from 'from-exponential' methods:  getPriceValue(value)  return fromExponential(value)   why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 這只是JavaScript遵循IEEE 754標準所產生的必然結果。IEEE 754標準中的浮點數並不能精確地表達小數（比如說0.1）， JavaScript中的小數採用的是雙精度(64位)表示的，由三部分組成：　符 + 階碼 + 尾數 IEEE 754 雙精度。六十四位中符號位佔一位，整數位佔十一位，其餘五十二位都為小數位。 因為浮點數隻有52位有效數字，從第53位開始，就舍入了。這樣就造成了“浮點數精度損失”問題。 因為 0.1 和 0.2 都是無限循環的二進制了，所以在小數位末尾處需要判斷是否進位（就和十進制的四捨五入一樣）。 計算機表示十進制是採用二進製表示的，所以 0.1 在二進製表示為 `0.1.toString(2) // “0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01” 小數的算法，是乘2 0.1 × 2 ￣￣￣￣ 0.2 → 取小數前的 0 0.2 × 2 ￣￣￣￣ 0.4 → 取小數前的 0 0.4 × 2 ￣￣￣￣ 0.8 → 取小數前的 0 0.8 × 2 ￣￣￣￣ 1.6 → 取小數前的 1 0.6 × 2 ￣￣￣￣ 1.2 → 取小數前的 1 0.2 × 2 ￣￣￣￣ 0.4 → 取小數前的 0 十進位 0.1 = 二進位 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 從上面可以看出，0.1的二進制格式是：0.0001100011….。這是一個二進制無限循環小數，但計算機內存有限，我們不能用儲存所有的小數位數。那麼在精度與內存間如何取捨呢？ 答案是： 在某個精度點直接捨棄 (第53位開始)。當然，代價就是，0.1在計算機內部根本就不是精確的0.1，而是一個有舍入誤差的0.1。當代碼被編譯或解釋後，0.1已經被四捨五入成一個與之很接近的計算機內部數字，以至於計算還沒開始，一個很小的舍入錯誤就已經產生了。這也就是 0.1 + 0.2 不等於0.3 的原因。 使用JavaScript內置的函數 toPrecision 或 toFixed 來保留一定的精度： (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true 不要相信js的計算 善用 math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"cases/math.html#浮點數運算的坑":{"title":"&#x6D6E;&#x9EDE;&#x6578;&#x904B;&#x7B97;&#x7684;&#x5751;","path":"\\javascript\\cases\\math.html#浮點數運算的坑","body":"JavaScript &#x6D6E;&#x70B9;&#x6570;&#x9677;&#x9631;&#x53CA;&#x89E3;&#x6CD5; &#x7576;&#x4F60;&#x62FF;&#x5230; 1.4000000000000001 &#x9019;&#x6A23;&#x7684;&#x6578;&#x64DA;&#x8981;&#x5C55;&#x793A;&#x6642;&#xFF0C;&#x5EFA;&#x8B70;&#x4F7F;&#x7528; toPrecision &#x6E4A;&#x6574;&#x4F75; parseFloat &#x8F49;&#x6210;&#x6578;&#x5B57;&#x5F8C;&#x518D;&#x986F;&#x793A;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; parseFloat(1.4000000000000001.toPrecision(12)) === 1.4 // True &#x767E;&#x5206;&#x6BD4; &#x8F49; &#x5C0F;&#x6578; &#x554F;&#x984C; 1 2 3 4 5 6 var a = 0.9 ; var b = a / 100 ; var c = parseFloat ( (a / 100 ).toPrecision( 12 )) console .log(b) // 0.009000000000000001 console .log(c) // 0.009 &#x79D1;&#x5B78;&#x7B26;&#x865F;&#x8655;&#x7406; npm from-exponential 1 2 3 4 5 6 7 8 span v-text= getPriceValue(order.itemPrice)  / span  import fromExponential from &apos;from-exponential&apos; methods: { getPriceValue(value) { return fromExponential(value) } } why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002;IEEE 754&#x6A19;&#x6E96;&#x4E2D;&#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"cases/math.html#科學符號處理":{"title":"&#x79D1;&#x5B78;&#x7B26;&#x865F;&#x8655;&#x7406;","path":"\\javascript\\cases\\math.html#科學符號處理","body":"npm from-exponential 1 2 3 4 5 6 7 8 span v-text= getPriceValue(order.itemPrice)  / span  import fromExponential from &apos;from-exponential&apos; methods: { getPriceValue(value) { return fromExponential(value) } } why 0.1 + 0.2 != 0.3 0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002;IEEE 754&#x6A19;&#x6E96;&#x4E2D;&#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"cases/math.html#why-0-1-0-2-0-3":{"title":"why 0.1 + 0.2 != 0.3","path":"\\javascript\\cases\\math.html#why-0-1-0-2-0-3","body":"0.1 + 0.2 == 0.3 false 0.1 + 0.2 0.30000000000000004 &#x9019;&#x53EA;&#x662F;JavaScript&#x9075;&#x5FAA;IEEE 754&#x6A19;&#x6E96;&#x6240;&#x7522;&#x751F;&#x7684;&#x5FC5;&#x7136;&#x7D50;&#x679C;&#x3002;IEEE 754&#x6A19;&#x6E96;&#x4E2D;&#x7684;&#x6D6E;&#x9EDE;&#x6578;&#x4E26;&#x4E0D;&#x80FD;&#x7CBE;&#x78BA;&#x5730;&#x8868;&#x9054;&#x5C0F;&#x6578;&#xFF08;&#x6BD4;&#x5982;&#x8AAA;0.1&#xFF09;&#xFF0C; JavaScript&#x4E2D;&#x7684;&#x5C0F;&#x6578;&#x63A1;&#x7528;&#x7684;&#x662F;&#x96D9;&#x7CBE;&#x5EA6;(64&#x4F4D;)&#x8868;&#x793A;&#x7684;&#xFF0C;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7D44;&#x6210;&#xFF1A;&#x3000;&#x7B26; + &#x968E;&#x78BC; + &#x5C3E;&#x6578; IEEE 754 &#x96D9;&#x7CBE;&#x5EA6;&#x3002;&#x516D;&#x5341;&#x56DB;&#x4F4D;&#x4E2D;&#x7B26;&#x865F;&#x4F4D;&#x4F54;&#x4E00;&#x4F4D;&#xFF0C;&#x6574;&#x6578;&#x4F4D;&#x4F54;&#x5341;&#x4E00;&#x4F4D;&#xFF0C;&#x5176;&#x9918;&#x4E94;&#x5341;&#x4E8C;&#x4F4D;&#x90FD;&#x70BA;&#x5C0F;&#x6578;&#x4F4D;&#x3002; &#x56E0;&#x70BA;&#x6D6E;&#x9EDE;&#x6578;&#x96BB;&#x6709;52&#x4F4D;&#x6709;&#x6548;&#x6578;&#x5B57;&#xFF0C;&#x5F9E;&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;&#xFF0C;&#x5C31;&#x820D;&#x5165;&#x4E86;&#x3002;&#x9019;&#x6A23;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x201C;&#x6D6E;&#x9EDE;&#x6578;&#x7CBE;&#x5EA6;&#x640D;&#x5931;&#x201D;&#x554F;&#x984C;&#x3002; &#x56E0;&#x70BA; 0.1 &#x548C; 0.2 &#x90FD;&#x662F;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x7684;&#x4E8C;&#x9032;&#x5236;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5C0F;&#x6578;&#x4F4D;&#x672B;&#x5C3E;&#x8655;&#x9700;&#x8981;&#x5224;&#x65B7;&#x662F;&#x5426;&#x9032;&#x4F4D;&#xFF08;&#x5C31;&#x548C;&#x5341;&#x9032;&#x5236;&#x7684;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x4E00;&#x6A23;&#xFF09;&#x3002; &#x8A08;&#x7B97;&#x6A5F;&#x8868;&#x793A;&#x5341;&#x9032;&#x5236;&#x662F;&#x63A1;&#x7528;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x6240;&#x4EE5; 0.1 &#x5728;&#x4E8C;&#x9032;&#x88FD;&#x8868;&#x793A;&#x70BA; `0.1.toString(2) // &#x201C;0.00011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 0011 01&#x201D; &#x5C0F;&#x6578;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x662F;&#x4E58;2 0.1 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.4 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.8 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 0.8 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.6 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.6 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 1.2 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 1 0.2 &#xD7; 2 &#xFFE3;&#xFFE3;&#xFFE3;&#xFFE3; 0.4 &#x2192; &#x53D6;&#x5C0F;&#x6578;&#x524D;&#x7684; 0 &#x5341;&#x9032;&#x4F4D; 0.1 = &#x4E8C;&#x9032;&#x4F4D; 0.000110 0.1 2 = 0.2 # 0 0.2 2 = 0.4 # 0 0.4 2 = 0.8 # 0 0.8 2 = 1.6 # 1 0.6 2 = 1.2 # 1 0.2 2 = 0.4 # 0 &#x5F9E;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;0.1&#x7684;&#x4E8C;&#x9032;&#x5236;&#x683C;&#x5F0F;&#x662F;&#xFF1A;0.0001100011&#x2026;.&#x3002;&#x9019;&#x662F;&#x4E00;&#x500B;&#x4E8C;&#x9032;&#x5236;&#x7121;&#x9650;&#x5FAA;&#x74B0;&#x5C0F;&#x6578;&#xFF0C;&#x4F46;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x5B58;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x80FD;&#x7528;&#x5132;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5C0F;&#x6578;&#x4F4D;&#x6578;&#x3002;&#x90A3;&#x9EBC;&#x5728;&#x7CBE;&#x5EA6;&#x8207;&#x5167;&#x5B58;&#x9593;&#x5982;&#x4F55;&#x53D6;&#x6368;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A; &#x5728;&#x67D0;&#x500B;&#x7CBE;&#x5EA6;&#x9EDE;&#x76F4;&#x63A5;&#x6368;&#x68C4; (&#x7B2C;53&#x4F4D;&#x958B;&#x59CB;)&#x3002;&#x7576;&#x7136;&#xFF0C;&#x4EE3;&#x50F9;&#x5C31;&#x662F;&#xFF0C;0.1&#x5728;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x662F;&#x7CBE;&#x78BA;&#x7684;0.1&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x500B;&#x6709;&#x820D;&#x5165;&#x8AA4;&#x5DEE;&#x7684;0.1&#x3002;&#x7576;&#x4EE3;&#x78BC;&#x88AB;&#x7DE8;&#x8B6F;&#x6216;&#x89E3;&#x91CB;&#x5F8C;&#xFF0C;0.1&#x5DF2;&#x7D93;&#x88AB;&#x56DB;&#x6368;&#x4E94;&#x5165;&#x6210;&#x4E00;&#x500B;&#x8207;&#x4E4B;&#x5F88;&#x63A5;&#x8FD1;&#x7684;&#x8A08;&#x7B97;&#x6A5F;&#x5167;&#x90E8;&#x6578;&#x5B57;&#xFF0C;&#x4EE5;&#x81F3;&#x65BC;&#x8A08;&#x7B97;&#x9084;&#x6C92;&#x958B;&#x59CB;&#xFF0C;&#x4E00;&#x500B;&#x5F88;&#x5C0F;&#x7684;&#x820D;&#x5165;&#x932F;&#x8AA4;&#x5C31;&#x5DF2;&#x7D93;&#x7522;&#x751F;&#x4E86;&#x3002;&#x9019;&#x4E5F;&#x5C31;&#x662F; 0.1 + 0.2 &#x4E0D;&#x7B49;&#x65BC;0.3 &#x7684;&#x539F;&#x56E0;&#x3002; &#x4F7F;&#x7528;JavaScript&#x5167;&#x7F6E;&#x7684;&#x51FD;&#x6578; toPrecision &#x6216; toFixed &#x4F86;&#x4FDD;&#x7559;&#x4E00;&#x5B9A;&#x7684;&#x7CBE;&#x5EA6;&#xFF1A; (0.1 + 0.2).toPrecision(10) == 0.3 true (0.1 + 0.2).toFixed(10) == 0.3 true &#x4E0D;&#x8981;&#x76F8;&#x4FE1;js&#x7684;&#x8A08;&#x7B97; &#x5584;&#x7528; math.js Rreferences http://ourjs.com/detail/54695381bc3f9b154e000046 https://segmentfault.com/a/1190000012175422 https://github.com/InterviewMap/CS-Interview-Knowledge-Map/blob/master/JS/JS-ch.md#%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03"},"function/factory​_factory.html":{"title":"factory function","path":"\\javascript\\function\\factory​_factory.html","body":"當一個函數返回一個對象時，我們稱之他為 工廠函數(factory function) 1 2 3 4 5 6 7 function createJelly ( )  return  type: 'jelly' , colour: 'red' scoops: 3 ;  每次我們調用這個工廠函數，它將返回一個新的 jelly（果凍） 對象實例。 要注意的重點是，我們不必在工廠函數名稱前面加上create，但它可以讓其他人更清楚函數的意圖。 對於type屬性也是如此，但通常它可以幫助我們區分我們程序的對象。 帶參數的工廠函數 通過參數來定義我們的工廠函數 （icecream 冰淇淋），這可以用來改變返回對象的模型。 1 2 3 4 5 6 7 function createIceCream ( flavour= 'Vanilla' )  return  type: 'icecream' , scoops: 3 , flavour   組合的工廠函數 在一個工廠函數中定義另一個工廠函數，可以幫助我們把複雜的工廠函數拆分成更小的，可重用的碎片。 例如，我們可以創建一個 dessert（甜點）工廠函數，通過前面的 jelly（果凍）和 icecream（冰淇淋）工廠函數來定義。 1 2 3 4 5 6 7 8 9 function createDessert ( )  return  type: 'dessert' , bowl: [ createJelly(), createIceCream() ] ;  對象可以用 has-a(具有) 關係而不是 is-a(是) 來表示。也就是說，可以用組合而不是繼承來實現。 例如，使用繼承。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // A trifle *is a* dessert 蛋糕*是*甜點 function Trifle ( )  Dessert.apply( this , arguments );  Trifle.prototype = Dessert.prototype; // 或者 class Trifle extends Dessert  constructor ()  super ();   我們可以用組合模式表達相同的意思。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // A trifle *has* layers of jelly, custard and cream. It also *has a* topping. // 蛋糕 *有* 果凍層，奶酪層和奶油層，頂部還 *有* 裝飾配料。 function createTrifle ( )  return  type: 'trifle' , layers: [ createJelly(), createCustard(), createCream() ], topping: createAlmonds() ;  異步的工廠函數 並非所有工廠都會立即返回數據。例如，有些必須先獲取數據。 在這些情況下，我們可以返回 Promises 來定義工廠函數。 1 2 3 4 5 6 7 8 9 10 11 12 function getMeal ( menuUrl )  return new Promise ( ( resolve, reject ) =  fetch(menuUrl) .then( result =  resolve( type: 'meal' , courses: result.json() ); ) .catch(reject); );  這種深度嵌套的縮進會使異步工廠難以閱讀和測試。 將它們分解成多個不同的工廠通常是有幫助的，可以使用如下編寫。 1 2 3 4 5 6 7 8 9 10 11 12 function getMeal ( menuUrl )  return fetch(menuUrl) .then( result = result.json()) .then( json = createMeal(json));  function createMeal ( courses=[] )  return  type: 'meal' , courses ;  當然，我們可以使用回調函數，但是我們已經有了 Promise.all 這樣的工具返回 Promises 來定義工廠函數。 1 2 3 4 5 6 7 8 9 10 11 function getWeeksMeals ( )  const menuUrl = 'jsfood.com/' ; return Promise .all([ getMeal( ` $menuUrl /monday` ), getMeal( ` $menuUrl /tuesday` ), getMeal( ` $menuUrl /wednesday` ), getMeal( ` $menuUrl /thursday` ), getMeal( ` $menuUrl /friday` ) ]);  我們使用 get 而不是 create 作為命名約定來顯示這些工廠做一些異步工作和返回promise。 到目前為止，我們還沒有看到任何工廠用方法返回對象，這是故意的。 這是因為一般來說，我們不需要這麼做。 工廠允許我們從計算中分離我們的數據。 這意味著我們總是能夠將對象序列化為JSON，這對於在會話之間持久化，通過HTTP或WebSockets發送它們，並將它們放入數據存儲很重要。 高級工廠 將工廠傳遞給高階函數，這將給我們帶來巨大的控制力。例如，我們可以使用這個概念來創建一個增強的對象。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function giveTimestamp ( factory )  return ( ...args ) =  const instance = factory(...args); const time = Date .now(); return  time, instance ; ;  const createOrder = giveTimestamp( function ( ingredients )  return  type: 'order' , ingredients ; ); 這個增強的對象採用一個現有工廠，並將其包裝以創建返回帶有 時間戳實例 的工廠。 使用這些簡單的構建塊使得我們的代碼更加友好，這絕對是我們應該關心的事情。 工廠鼓勵我們用原始數據來模擬複雜和異步數據，原始數據具有組合的自然能力，而不強迫我們去做一些高級抽象。當我們堅持簡單時，JavaScript更甜蜜！ 英文原文： https://www.sitepoint.com/factory-functions-javascript/"},"function/factory​_factory.html#組合的工廠函數":{"title":"&#x7D44;&#x5408;&#x7684;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;","path":"\\javascript\\function\\factory​_factory.html#組合的工廠函數","body":"&#x5728;&#x4E00;&#x500B;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#x4E2D;&#x5B9A;&#x7FA9;&#x53E6;&#x4E00;&#x500B;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#xFF0C;&#x53EF;&#x4EE5;&#x5E6B;&#x52A9;&#x6211;&#x5011;&#x628A;&#x8907;&#x96DC;&#x7684;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#x62C6;&#x5206;&#x6210;&#x66F4;&#x5C0F;&#x7684;&#xFF0C;&#x53EF;&#x91CD;&#x7528;&#x7684;&#x788E;&#x7247;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x5275;&#x5EFA;&#x4E00;&#x500B; dessert&#xFF08;&#x751C;&#x9EDE;&#xFF09;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#xFF0C;&#x901A;&#x904E;&#x524D;&#x9762;&#x7684; jelly&#xFF08;&#x679C;&#x51CD;&#xFF09;&#x548C; icecream&#xFF08;&#x51B0;&#x6DC7;&#x6DCB;&#xFF09;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#x4F86;&#x5B9A;&#x7FA9;&#x3002; 1 2 3 4 5 6 7 8 9 function createDessert ( ) { return { type: &apos;dessert&apos; , bowl: [ createJelly(), createIceCream() ] }; } &#x5C0D;&#x8C61;&#x53EF;&#x4EE5;&#x7528; has-a(&#x5177;&#x6709;) &#x95DC;&#x4FC2;&#x800C;&#x4E0D;&#x662F; is-a(&#x662F;) &#x4F86;&#x8868;&#x793A;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x7D44;&#x5408;&#x800C;&#x4E0D;&#x662F;&#x7E7C;&#x627F;&#x4F86;&#x5BE6;&#x73FE;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x4F7F;&#x7528;&#x7E7C;&#x627F;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // A trifle *is a* dessert &#x86CB;&#x7CD5;*&#x662F;*&#x751C;&#x9EDE; function Trifle ( ) { Dessert.apply( this , arguments ); } Trifle.prototype = Dessert.prototype; // &#x6216;&#x8005; class Trifle extends Dessert { constructor () { super (); } } &#x6211;&#x5011;&#x53EF;&#x4EE5;&#x7528;&#x7D44;&#x5408;&#x6A21;&#x5F0F;&#x8868;&#x9054;&#x76F8;&#x540C;&#x7684;&#x610F;&#x601D;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // A trifle *has* layers of jelly, custard and cream. It also *has a* topping. // &#x86CB;&#x7CD5; *&#x6709;* &#x679C;&#x51CD;&#x5C64;&#xFF0C;&#x5976;&#x916A;&#x5C64;&#x548C;&#x5976;&#x6CB9;&#x5C64;&#xFF0C;&#x9802;&#x90E8;&#x9084; *&#x6709;* &#x88DD;&#x98FE;&#x914D;&#x6599;&#x3002; function createTrifle ( ) { return { type: &apos;trifle&apos; , layers: [ createJelly(), createCustard(), createCream() ], topping: createAlmonds() }; } &#x7570;&#x6B65;&#x7684;&#x5DE5;&#x5EE0;&#x51FD;&#x6578; &#x4E26;&#x975E;&#x6240;&#x6709;&#x5DE5;&#x5EE0;&#x90FD;&#x6703;&#x7ACB;&#x5373;&#x8FD4;&#x56DE;&#x6578;&#x64DA;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x6709;&#x4E9B;&#x5FC5;&#x9808;&#x5148;&#x7372;&#x53D6;&#x6578;&#x64DA;&#x3002; &#x5728;&#x9019;&#x4E9B;&#x60C5;&#x6CC1;&#x4E0B;&#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x8FD4;&#x56DE; Promises &#x4F86;&#x5B9A;&#x7FA9;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 function getMeal ( menuUrl ) { return new Promise ( ( resolve, reject ) = { fetch(menuUrl) .then( result = { resolve({ type: &apos;meal&apos; , courses: result.json() }); }) .catch(reject); }); } &#x9019;&#x7A2E;&#x6DF1;&#x5EA6;&#x5D4C;&#x5957;&#x7684;&#x7E2E;&#x9032;&#x6703;&#x4F7F;&#x7570;&#x6B65;&#x5DE5;&#x5EE0;&#x96E3;&#x4EE5;&#x95B1;&#x8B80;&#x548C;&#x6E2C;&#x8A66;&#x3002; &#x5C07;&#x5B83;&#x5011;&#x5206;&#x89E3;&#x6210;&#x591A;&#x500B;&#x4E0D;&#x540C;&#x7684;&#x5DE5;&#x5EE0;&#x901A;&#x5E38;&#x662F;&#x6709;&#x5E6B;&#x52A9;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5982;&#x4E0B;&#x7DE8;&#x5BEB;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 function getMeal ( menuUrl ) { return fetch(menuUrl) .then( result = result.json()) .then( json = createMeal(json)); } function createMeal ( courses=[] ) { return { type: &apos;meal&apos; , courses }; } &#x7576;&#x7136;&#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x56DE;&#x8ABF;&#x51FD;&#x6578;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x5011;&#x5DF2;&#x7D93;&#x6709;&#x4E86; Promise.all &#x9019;&#x6A23;&#x7684;&#x5DE5;&#x5177;&#x8FD4;&#x56DE; Promises &#x4F86;&#x5B9A;&#x7FA9;&#x5DE5;&#x5EE0;&#x51FD;&#x6578;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 function getWeeksMeals ( ) { const menuUrl = &apos;jsfood.com/&apos; ; return Promise .all([ getMeal( ` ${menuUrl} /monday` ), getMeal( ` ${menuUrl} /tuesday` ), getMeal( ` ${menuUrl} /wednesday` ), getMeal( ` ${menuUrl} /thursday` ), getMeal( ` ${menuUrl} /friday` ) ]); } &#x6211;&#x5011;&#x4F7F;&#x7528; get &#x800C;&#x4E0D;&#x662F; create &#x4F5C;&#x70BA;&#x547D;&#x540D;&#x7D04;&#x5B9A;&#x4F86;&#x986F;&#x793A;&#x9019;&#x4E9B;&#x5DE5;&#x5EE0;&#x505A;&#x4E00;&#x4E9B;&#x7570;&#x6B65;&#x5DE5;&#x4F5C;&#x548C;&#x8FD4;&#x56DE;promise&#x3002; &#x5230;&#x76EE;&#x524D;&#x70BA;&#x6B62;&#xFF0C;&#x6211;&#x5011;&#x9084;&#x6C92;&#x6709;&#x770B;&#x5230;&#x4EFB;&#x4F55;&#x5DE5;&#x5EE0;&#x7528;&#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x5C0D;&#x8C61;&#xFF0C;&#x9019;&#x662F;&#x6545;&#x610F;&#x7684;&#x3002; &#x9019;&#x662F;&#x56E0;&#x70BA;&#x4E00;&#x822C;&#x4F86;&#x8AAA;&#xFF0C;&#x6211;&#x5011;&#x4E0D;&#x9700;&#x8981;&#x9019;&#x9EBC;&#x505A;&#x3002; &#x5DE5;&#x5EE0;&#x5141;&#x8A31;&#x6211;&#x5011;&#x5F9E;&#x8A08;&#x7B97;&#x4E2D;&#x5206;&#x96E2;&#x6211;&#x5011;&#x7684;&#x6578;&#x64DA;&#x3002; &#x9019;&#x610F;&#x5473;&#x8457;&#x6211;&#x5011;&#x7E3D;&#x662F;&#x80FD;&#x5920;&#x5C07;&#x5C0D;&#x8C61;&#x5E8F;&#x5217;&#x5316;&#x70BA;JSON&#xFF0C;&#x9019;&#x5C0D;&#x65BC;&#x5728;&#x6703;&#x8A71;&#x4E4B;&#x9593;&#x6301;&#x4E45;&#x5316;&#xFF0C;&#x901A;&#x904E;HTTP&#x6216;WebSockets&#x767C;&#x9001;&#x5B83;&#x5011;&#xFF0C;&#x4E26;&#x5C07;&#x5B83;&#x5011;&#x653E;&#x5165;&#x6578;&#x64DA;&#x5B58;&#x5132;&#x5F88;&#x91CD;&#x8981;&#x3002; &#x9AD8;&#x7D1A;&#x5DE5;&#x5EE0; &#x5C07;&#x5DE5;&#x5EE0;&#x50B3;&#x905E;&#x7D66;&#x9AD8;&#x968E;&#x51FD;&#x6578;&#xFF0C;&#x9019;&#x5C07;&#x7D66;&#x6211;&#x5011;&#x5E36;&#x4F86;&#x5DE8;&#x5927;&#x7684;&#x63A7;&#x5236;&#x529B;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x9019;&#x500B;&#x6982;&#x5FF5;&#x4F86;&#x5275;&#x5EFA;&#x4E00;&#x500B;&#x589E;&#x5F37;&#x7684;&#x5C0D;&#x8C61;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function giveTimestamp ( factory ) { return ( ...args ) = { const instance = factory(...args); const time = Date .now(); return { time, instance }; }; } const createOrder = giveTimestamp( function ( ingredients ) { return { type: &apos;order&apos; , ingredients }; }); &#x9019;&#x500B;&#x589E;&#x5F37;&#x7684;&#x5C0D;&#x8C61;&#x63A1;&#x7528;&#x4E00;&#x500B;&#x73FE;&#x6709;&#x5DE5;&#x5EE0;&#xFF0C;&#x4E26;&#x5C07;&#x5176;&#x5305;&#x88DD;&#x4EE5;&#x5275;&#x5EFA;&#x8FD4;&#x56DE;&#x5E36;&#x6709; &#x6642;&#x9593;&#x6233;&#x5BE6;&#x4F8B; &#x7684;&#x5DE5;&#x5EE0;&#x3002; &#x4F7F;&#x7528;&#x9019;&#x4E9B;&#x7C21;&#x55AE;&#x7684;&#x69CB;&#x5EFA;&#x584A;&#x4F7F;&#x5F97;&#x6211;&#x5011;&#x7684;&#x4EE3;&#x78BC;&#x66F4;&#x52A0;&#x53CB;&#x597D;&#xFF0C;&#x9019;&#x7D55;&#x5C0D;&#x662F;&#x6211;&#x5011;&#x61C9;&#x8A72;&#x95DC;&#x5FC3;&#x7684;&#x4E8B;&#x60C5;&#x3002; &#x5DE5;&#x5EE0;&#x9F13;&#x52F5;&#x6211;&#x5011;&#x7528;&#x539F;&#x59CB;&#x6578;&#x64DA;&#x4F86;&#x6A21;&#x64EC;&#x8907;&#x96DC;&#x548C;&#x7570;&#x6B65;&#x6578;&#x64DA;&#xFF0C;&#x539F;&#x59CB;&#x6578;&#x64DA;&#x5177;&#x6709;&#x7D44;&#x5408;&#x7684;&#x81EA;&#x7136;&#x80FD;&#x529B;&#xFF0C;&#x800C;&#x4E0D;&#x5F37;&#x8FEB;&#x6211;&#x5011;&#x53BB;&#x505A;&#x4E00;&#x4E9B;&#x9AD8;&#x7D1A;&#x62BD;&#x8C61;&#x3002;&#x7576;&#x6211;&#x5011;&#x5805;&#x6301;&#x7C21;&#x55AE;&#x6642;&#xFF0C;JavaScript&#x66F4;&#x751C;&#x871C;&#xFF01; &#x82F1;&#x6587;&#x539F;&#x6587;&#xFF1A; https://www.sitepoint.com/factory-functions-javascript/"},"cases/str.html":{"title":"String 類別","path":"\\javascript\\cases\\str.html","body":"String​.prototype​.toLower​Case() 1 2 3 4 5 function lowercase ( str )  return str.charAt( 0 ).toLowerCase() + str.slice( 1 );  console .log( lowercase( 'Hello' ) ) // \"hello\" String​.prototype​.replace() 1 2 3 4 var str = 'hello put world' ; var replaceStr = str.replace( /get|post|put|delete/ , \"\" ); console .log(replaceStr) // \"hello world\" url Array.join() 1 2 3 var url = 'http://3000' ; const link = [ \"'\" ,url, \"'\" ].join( '' ) console .log(link); // = \"'http://3000'\""},"cases/str.html#url":{"title":"url","path":"\\javascript\\cases\\str.html#url","body":"Array.join() 1 2 3 var url = &apos;http://3000&apos; ; const link = [ &apos; ,url, &apos; ].join( &apos;&apos; ) console .log(link); // = &apos;http://3000&apos;"},"global/function.html":{"title":"","path":"\\javascript\\global\\function.html","body":"call、apply、bind Function.prototype.call() 使用給定的this參數以及分別給定的參數來呼叫某個函數 Function.prototype.apply() apply() 方法會呼叫一個以 this 的代表值和一個陣列形式的值組(或是一個 array-like object )為參數的函式。 Function.prototype.bind() bind() 方法，會建立一個新函式。該函式被呼叫時，會將 this 關鍵字設為給定的參數，並在呼叫時，帶有提供之前，給定順序的參數。 為什麼我們需要 apply / bind / call ？ 最大的原因還是因為 this 這個東西是 動態的 。（ PS. arguments 也是） 拿到正確的 this ，而非一言不合就 undefined cab [ call , apply ] vs [ bind ] call 、 apply 皆是回傳function執行結果 bind 方法回傳的是綁定 this 後的 原函數 箭頭函數 多數時候一般函數無異，但是最大的差別在於 — 其 this 完全綁定在語彙上的位置，也就是說在 arrow 裡面的 this 永遠都是語意上的 this ，不管是誰呼叫他，或是被如何 bind 、 call 、 apply ，他永遠都是拿到原先作用域的 this 。 bind 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class dog  constructor (name) this .name = name;  sayHello() console .log( 'Hello I am ' , this .name);  laterHello() setTimeout( function ( )  console .log( '(1 sec...) Hi!, I am' , this .name) , 1000 );   let boo = new dog( 'Corgi' ); boo.sayHello(); // Hello I am Corgi boo.laterHello(); // (1 sec...) Hi!, I am undefined 1 2 3 4 5 6 7 8 9 10 11 // Self — this 的替身 // bad 請別儲存 this 為參考。請使用箭頭函式或是 Function#bind laterHello()  var self = this ; // 先把這邊的this(指向class內部)存起來 setTimeout( function ( )  console .log( '(1 sec...) Hi!, I am' , self.name); // 因為語彙上能夠引用self變數（同個塊作用域） // 所以拿到了self.name , 1000 );  1 2 3 4 5 6 7 8 9 // .bind(this) — Binding大法 綁定大法 laterHello()  setTimeout( function ( )  console .log( '(1 sec...) Hi!, I am' , this .name); .bind( this ), 1000 );  1 2 3 4 5 6 // Arrow Function — 箭頭函數 laterHello()  setTimeout( () =  console .log( '(1 sec...) Hi!, I am' , this .name); , 1000 );  References 函數原型最實用的 3 個方法 — call、apply、bind"},"global/function.html#call、apply、bind":{"title":"call&#x3001;apply&#x3001;bind","path":"\\javascript\\global\\function.html#call、apply、bind","body":"Function.prototype.call() &#x4F7F;&#x7528;&#x7D66;&#x5B9A;&#x7684;this&#x53C3;&#x6578;&#x4EE5;&#x53CA;&#x5206;&#x5225;&#x7D66;&#x5B9A;&#x7684;&#x53C3;&#x6578;&#x4F86;&#x547C;&#x53EB;&#x67D0;&#x500B;&#x51FD;&#x6578; Function.prototype.apply() apply() &#x65B9;&#x6CD5;&#x6703;&#x547C;&#x53EB;&#x4E00;&#x500B;&#x4EE5; this &#x7684;&#x4EE3;&#x8868;&#x503C;&#x548C;&#x4E00;&#x500B;&#x9663;&#x5217;&#x5F62;&#x5F0F;&#x7684;&#x503C;&#x7D44;(&#x6216;&#x662F;&#x4E00;&#x500B; array-like object )&#x70BA;&#x53C3;&#x6578;&#x7684;&#x51FD;&#x5F0F;&#x3002; Function.prototype.bind() bind() &#x65B9;&#x6CD5;&#xFF0C;&#x6703;&#x5EFA;&#x7ACB;&#x4E00;&#x500B;&#x65B0;&#x51FD;&#x5F0F;&#x3002;&#x8A72;&#x51FD;&#x5F0F;&#x88AB;&#x547C;&#x53EB;&#x6642;&#xFF0C;&#x6703;&#x5C07; this &#x95DC;&#x9375;&#x5B57;&#x8A2D;&#x70BA;&#x7D66;&#x5B9A;&#x7684;&#x53C3;&#x6578;&#xFF0C;&#x4E26;&#x5728;&#x547C;&#x53EB;&#x6642;&#xFF0C;&#x5E36;&#x6709;&#x63D0;&#x4F9B;&#x4E4B;&#x524D;&#xFF0C;&#x7D66;&#x5B9A;&#x9806;&#x5E8F;&#x7684;&#x53C3;&#x6578;&#x3002;"},"global/function.html#為什麼我們需要-apply-bind-call-？":{"title":"&#x70BA;&#x4EC0;&#x9EBC;&#x6211;&#x5011;&#x9700;&#x8981; apply / bind / call &#xFF1F;","path":"\\javascript\\global\\function.html#為什麼我們需要-apply-bind-call-？","body":"&#x6700;&#x5927;&#x7684;&#x539F;&#x56E0;&#x9084;&#x662F;&#x56E0;&#x70BA; this &#x9019;&#x500B;&#x6771;&#x897F;&#x662F; &#x52D5;&#x614B;&#x7684; &#x3002;&#xFF08; PS. arguments &#x4E5F;&#x662F;&#xFF09; &#x62FF;&#x5230;&#x6B63;&#x78BA;&#x7684; this &#xFF0C;&#x800C;&#x975E;&#x4E00;&#x8A00;&#x4E0D;&#x5408;&#x5C31; undefined"},"global/function.html#cab-call-apply-vs-bind":{"title":"cab [ call , apply ] vs [ bind ]","path":"\\javascript\\global\\function.html#cab-call-apply-vs-bind","body":"call &#x3001; apply &#x7686;&#x662F;&#x56DE;&#x50B3;function&#x57F7;&#x884C;&#x7D50;&#x679C; bind &#x65B9;&#x6CD5;&#x56DE;&#x50B3;&#x7684;&#x662F;&#x7D81;&#x5B9A; this &#x5F8C;&#x7684; &#x539F;&#x51FD;&#x6578; &#x7BAD;&#x982D;&#x51FD;&#x6578; &#x591A;&#x6578;&#x6642;&#x5019;&#x4E00;&#x822C;&#x51FD;&#x6578;&#x7121;&#x7570;&#xFF0C;&#x4F46;&#x662F;&#x6700;&#x5927;&#x7684;&#x5DEE;&#x5225;&#x5728;&#x65BC; &#x2014; &#x5176; this &#x5B8C;&#x5168;&#x7D81;&#x5B9A;&#x5728;&#x8A9E;&#x5F59;&#x4E0A;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#x5728; arrow &#x88E1;&#x9762;&#x7684; this &#x6C38;&#x9060;&#x90FD;&#x662F;&#x8A9E;&#x610F;&#x4E0A;&#x7684; this &#xFF0C;&#x4E0D;&#x7BA1;&#x662F;&#x8AB0;&#x547C;&#x53EB;&#x4ED6;&#xFF0C;&#x6216;&#x662F;&#x88AB;&#x5982;&#x4F55; bind &#x3001; call &#x3001; apply &#xFF0C;&#x4ED6;&#x6C38;&#x9060;&#x90FD;&#x662F;&#x62FF;&#x5230;&#x539F;&#x5148;&#x4F5C;&#x7528;&#x57DF;&#x7684; this &#x3002;"},"global/function.html#bind":{"title":"bind","path":"\\javascript\\global\\function.html#bind","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class dog { constructor (name){ this .name = name; } sayHello(){ console .log( &apos;Hello I am &apos; , this .name); } laterHello(){ setTimeout( function ( ) { console .log( &apos;(1 sec...) Hi!, I am&apos; , this .name) }, 1000 ); } } let boo = new dog( &apos;Corgi&apos; ); boo.sayHello(); // Hello I am Corgi boo.laterHello(); // (1 sec...) Hi!, I am undefined 1 2 3 4 5 6 7 8 9 10 11 // Self &#x2014; this &#x7684;&#x66FF;&#x8EAB; // bad &#x8ACB;&#x5225;&#x5132;&#x5B58; this &#x70BA;&#x53C3;&#x8003;&#x3002;&#x8ACB;&#x4F7F;&#x7528;&#x7BAD;&#x982D;&#x51FD;&#x5F0F;&#x6216;&#x662F; Function#bind laterHello() { var self = this ; // &#x5148;&#x628A;&#x9019;&#x908A;&#x7684;this(&#x6307;&#x5411;class&#x5167;&#x90E8;)&#x5B58;&#x8D77;&#x4F86; setTimeout( function ( ) { console .log( &apos;(1 sec...) Hi!, I am&apos; , self.name); // &#x56E0;&#x70BA;&#x8A9E;&#x5F59;&#x4E0A;&#x80FD;&#x5920;&#x5F15;&#x7528;self&#x8B8A;&#x6578;&#xFF08;&#x540C;&#x500B;&#x584A;&#x4F5C;&#x7528;&#x57DF;&#xFF09; // &#x6240;&#x4EE5;&#x62FF;&#x5230;&#x4E86;self.name }, 1000 ); } 1 2 3 4 5 6 7 8 9 // .bind(this) &#x2014; Binding&#x5927;&#x6CD5; &#x7D81;&#x5B9A;&#x5927;&#x6CD5; laterHello() { setTimeout( function ( ) { console .log( &apos;(1 sec...) Hi!, I am&apos; , this .name); }.bind( this ), 1000 ); } 1 2 3 4 5 6 // Arrow Function &#x2014; &#x7BAD;&#x982D;&#x51FD;&#x6578; laterHello() { setTimeout( () = { console .log( &apos;(1 sec...) Hi!, I am&apos; , this .name); }, 1000 ); }"},"global/function.html#References":{"title":"References","path":"\\javascript\\global\\function.html#References","body":"&#x51FD;&#x6578;&#x539F;&#x578B;&#x6700;&#x5BE6;&#x7528;&#x7684; 3 &#x500B;&#x65B9;&#x6CD5; &#x2014; call&#x3001;apply&#x3001;bind"},"global/promise.html":{"title":"Promise","path":"\\javascript\\global\\promise.html","body":"Promise 是一個表示非同步運算的最終完成或失敗的物件。 Promise 對象在異步操作後可對其完成或失敗進行回調，並展示其結果值。 以下代碼片斷是一個 Promise 的示例：100ms 後使用標準輸出流打印出 result 字符串。 此外請注意 catch ，他可以用於錯誤處理。Promise 是 鏈式的 。 1 2 3 4 5 new Promise ( ( resolve, reject ) =  setTimeout( () =  resolve( \"result\" ) , 100 ) ).then( console .log).catch( console .error) // result Promise 有哪些狀態？ Promise 對象用於表示一個異步操作的最終狀態（完成或失敗）及其返回值。他有以下幾種狀態： pending ：初始狀態，完成或失敗狀態的前一個狀態 fulfilled ：操作成功完成 rejected ：操作失敗 pending 狀態的 Promise 對象會觸發 fulfilled/rejected 狀態，在其狀態處理方法中可以傳入參數 / 失敗信息。 當操作成功完成時，Promise 對象的 then 方法就會被調用；否則就會觸發 catch 。如： 1 2 3 4 5 6 7 8 9 const myFirstPromise = new Promise ( ( resolve, reject ) =  setTimeout( function ( )  resolve( \"成功!\" ); , 250 ); ); myFirstPromise.then( ( data ) =  console .log( \"完成!\" + data); ).catch( ( e ) = ...); Promise​.all() Promise​.all() 1 2 3 4 5 6 7 8 9 var p1 = Promise .resolve( 3 ); var p2 = 1337 ; var p3 = new Promise ( ( resolve, reject ) =  setTimeout(resolve, 100 , 'foo' ); ); Promise .all([p1, p2, p3]).then( values =  console .log(values); // [3, 1337, \"foo\"] ); examples https://jsbin.com/zosebomeko/edit?js,console,output 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 /* * 依照 tasks 順序 console 出 a, b, c */ const a = callback =  setTimeout( () =  callback( 'a' ); , 500 ); ; const b = callback =  setTimeout( () =  callback( 'b' ); , 200 ); ; const c = callback =  setTimeout( () =  callback( 'c' ); , 300 ); ; const tasks = [a, b, c]; const doByOrder = ( tasks, callback ) =  // implement here tasks = tasks.map( function ( task )  return new Promise ( ( resolve, reject ) =  task(resolve); ); ); const ansArr = []; let t = tasks[ 0 ]; for ( let i = 0 ; i  tasks.length; ++i)  t = t.then( p =  ansArr.push(p); //等待所有setTimeout callback function執行完畢才執行 if (i === tasks.length - 1 )  return callback(ansArr);  return tasks[i + 1 ]; //tasks[1] tasks[2] );  ; doByOrder(tasks, console .log.bind( console )); // expect to be [\"a\", \"b\", \"c\"] 事件循環：javascript的執行規則裡面有個 事件循環Event Loot 的規則 在事件循環中，異步事件會放到異步隊列裡面， 但是異步隊列裡面又分為宏任務和微任務， 瀏覽器端的 宏任務一般有： script標籤,setTimeout,setInterval,setImmediate,requestAnimationFrame 微任務有： MutationObserver,Promise.then catch finally 宏任務會阻塞瀏覽器的渲染進程，微任務會在宏任務結束後立即執行，在渲染之前。 在不使用 async/await 的情況下，順序執行一組異步代碼函數，並輸出最後的結果。 Promise.race() References 把setTimeout包裝成Promise、等待所有setTimout的callback function執行完程式流程才往下執行 promise經典面試題"},"global/date.html":{"title":"Date","path":"\\javascript\\global\\date.html","body":"Date 建立 Date 物件的方式： 1 2 3 4 5 var today = new Date (); var birthday = new Date ( 'December 17, 1995 03:24:00' ); var birthday = new Date ( '1995-12-17T03:24:00' ); var birthday = new Date ( 1995 , 11 , 17 ); var birthday = new Date ( 1995 , 11 , 17 , 3 , 24 , 0 ); Date.prototype.toISOString() 國際標準 ISO 8601 ，是國際標準化組織的日期和時間的表示方法 1 2 3 4 5 6 7 const d = new Date (); const today = d.toISOString().substring( 0 , 10 ); console .log(today) // \"yyyy-mm-dd\" format. 2020-05-25 let sevenDaysAgo = d.setDate(d.getDate() - 7 ); sevenDaysAgo = new Date (sevenDaysAgo).toISOString().substring( 0 , 10 );; console .log(sevenDaysAgo) // 2020-05-18"},"global/date.html#Date-prototype-toISOString":{"title":"Date.prototype.toISOString()","path":"\\javascript\\global\\date.html#Date-prototype-toISOString","body":"&#x570B;&#x969B;&#x6A19;&#x6E96; ISO 8601 &#xFF0C;&#x662F;&#x570B;&#x969B;&#x6A19;&#x6E96;&#x5316;&#x7D44;&#x7E54;&#x7684;&#x65E5;&#x671F;&#x548C;&#x6642;&#x9593;&#x7684;&#x8868;&#x793A;&#x65B9;&#x6CD5; 1 2 3 4 5 6 7 const d = new Date (); const today = d.toISOString().substring( 0 , 10 ); console .log(today) // yyyy-mm-dd format. 2020-05-25 let sevenDaysAgo = d.setDate(d.getDate() - 7 ); sevenDaysAgo = new Date (sevenDaysAgo).toISOString().substring( 0 , 10 );; console .log(sevenDaysAgo) // 2020-05-18"},"object/assign.html":{"title":"Object assign","path":"\\javascript\\object\\assign.html","body":"用來複製 Object.assign() 被用來複製一個或多個物件自身所有可數的屬性到另一個目標物件。回傳的值為該目標物件。 Object.assign() 只會從來源物件將自身可列舉的 屬性複製 到目標物件。 ##　複製物件 1 2 3 var obj =  a : 1 ; var copy = Object .assign(, obj); console .log(copy); //  a: 1  合併物件 1 2 3 4 5 6 7 var o1 =  a : 1 ; var o2 =  b : 2 ; var o3 =  c : 3 ; var obj = Object .assign(o1, o2, o3); console .log(obj); //  a: 1, b: 2, c: 3  console .log(o1); //  a: 1, b: 2, c: 3 , 目標物件本身也被改變。 有相同屬性時合併物件區段 1 2 3 4 5 6 var o1 =  a : 1 , b : 1 , c : 1 ; var o2 =  b : 2 , c : 2 ; var o3 =  c : 3 ; var obj = Object .assign(, o1, o2, o3); console .log(obj); //  a: 1, b: 2, c: 3 ，屬性c為o3.c的值，最後一個出現的屬性c。"},"object/assign.html#合併物件":{"title":"&#x5408;&#x4F75;&#x7269;&#x4EF6;","path":"\\javascript\\object\\assign.html#合併物件","body":"1 2 3 4 5 6 7 var o1 = { a : 1 }; var o2 = { b : 2 }; var o3 = { c : 3 }; var obj = Object .assign(o1, o2, o3); console .log(obj); // { a: 1, b: 2, c: 3 } console .log(o1); // { a: 1, b: 2, c: 3 }, &#x76EE;&#x6A19;&#x7269;&#x4EF6;&#x672C;&#x8EAB;&#x4E5F;&#x88AB;&#x6539;&#x8B8A;&#x3002;"},"object/assign.html#有相同屬性時合併物件區段":{"title":"&#x6709;&#x76F8;&#x540C;&#x5C6C;&#x6027;&#x6642;&#x5408;&#x4F75;&#x7269;&#x4EF6;&#x5340;&#x6BB5;","path":"\\javascript\\object\\assign.html#有相同屬性時合併物件區段","body":"1 2 3 4 5 6 var o1 = { a : 1 , b : 1 , c : 1 }; var o2 = { b : 2 , c : 2 }; var o3 = { c : 3 }; var obj = Object .assign({}, o1, o2, o3); console .log(obj); // { a: 1, b: 2, c: 3 }&#xFF0C;&#x5C6C;&#x6027;c&#x70BA;o3.c&#x7684;&#x503C;&#xFF0C;&#x6700;&#x5F8C;&#x4E00;&#x500B;&#x51FA;&#x73FE;&#x7684;&#x5C6C;&#x6027;c&#x3002;"},"glossary/hoisting.html":{"title":"提升（[Hoisting](https://developer.mozilla.org/zh-TW/docs/Glossary/Hoisting)）","path":"\\javascript\\glossary\\hoisting.html","body":"在執行任何程式碼前，JavaScript 會把函式宣告放進記憶體裡面，這樣做的優點是：可以在程式碼宣告該函式之前使用它。 1 2 3 4 5 6 7 8 function catName ( name )  console .log( \"My cat's name is \" + name);  catName( \"Tigger\" ); /* 上面程式的結果是: \"My cat's name is Tigger\" */ 1 2 3 4 5 6 7 8 9 console .log(c); var c; function c ( a )  console .log(a); var a = 3 ; function a ( )    c( 2 ); // 输出 1 2 3 4 5 6 7 8 9 10 // console.log(c); function c ( a )  console .log(a); var a = 3 ; function a ( )    // console.log(a); function a ( )   變量提升也有優先級, 函數聲明  arguments  變量聲明 1 2 3 var c = 1 ; console .log(c); c( 2 ); 1 “TypeError: c is not a function 由於函數聲明會提升,當函數外的 console.log(c) 執行時,c已經被賦值為1。 因此,執行c(2)時會拋出TypeError,因為 1 不是函數。 1 2 3 4 5 6 7 8 9 var name = 'erdong' ; ( function ( )  if ( typeof name === 'undefined' )  var name = 'chen' ; console .log(name);  else  console .log(name);  )(); chen 自執行函數執行時,會先進行變量提升(這裡涉及到執行上下文不過多說,一定要搞懂執行上下文), 在自執行函數執行時,偽代碼為: 1 2 3 4 5 6 7 8 9 ( function ( )  var name; // 變量name會提升到當前作用域頂部 if ( typeof name === 'undefined' )  name = 'chen' ; console .log(name);  else  console .log(name);  )(); 所以會執行if中的console.log(name)"},"http/caching.html":{"title":"HTTP 緩存","path":"\\javascript\\http\\caching.html","body":"HTTP 緩存分為 2 種，一種是強緩存，另一種是協商緩存。 主要作用是可以加快資源獲取速度，提升用戶體驗，減少網絡傳輸，緩解服務端的壓力。 這是緩存運作的一個整體流程圖： 強緩存 不需要發送請求到服務端，直接讀取瀏覽器本地緩存，在 Chrome 的 Network 中顯示的 HTTP 狀態碼是 200 ，在 Chrome 中，強緩存又分為 Disk Cache (存放在硬盤中)和 Memory Cache (存放在內存中)，存放的位置是由瀏覽器控制的。 是否強緩存由 Expires 、 Cache-Control 和 Pragma 3 個 Header 屬性共同來控制。 Expires Expires 的值是一個 HTTP 日期 ，在瀏覽器發起請求時，會根據系統時間和 Expires 的值進行比較，如果系統時間超過了 Expires 的值，緩存失效。由於和系統時間進行比較，所以當系統時間和服務器時間不一致的時候，會有緩存有效期不准的問題。Expires 的優先級在三個 Header 屬性中是最低的。 Cache-Control Cache-Control 是 HTTP/1.1 中新增的屬性，在請求頭和響應頭中都可以使用，常用的屬性值如有： max-age：單位是秒，緩存時間計算的方式是距離發起的時間的秒數，超過間隔的秒數緩存失效 no-cache ：不使用強緩存，需要與服務器驗證緩存是否新鮮 no-store ：禁止使用緩存（包括協商緩存），每次都向服務器請求最新的資源 private：專用於個人的緩存，中間代理、CDN 等不能緩存此響應 public：響應可以被中間代理、CDN 等緩存 must-revalidate：在緩存過期前可以使用，過期後必須向服務器驗證 ###　驗證強緩存 本地通過 express 起一個服務來驗證強緩存的 3 個屬性，代碼如下： 1 2 3 4 5 6 7 8 9 10 11 const express = require ( 'express' ); const app = express(); var options =  etag: false , // 禁用協商緩存 lastModified: false , // 禁用協商緩存 setHeaders: ( res, path, stat ) =  res.set( 'Cache-Control' , 'max-age=10' ); // 強緩存超時時間為10秒 , ; app.use(express.static((__dirname + '/public' ), options)); app.listen( 3000 ); 第一次加載，頁面會向服務器請求數據，並在 Response Header 中添加 Cache-Control ，過期時間為 10 秒。 第二次加載，Date 頭屬性未更新，可以看到瀏覽器直接使用了強緩存，實際沒有發送請求。 過了 10 秒的超時時間之後，再次請求資源： 當 Pragma 和 Cache-Control 同時存在的時候，Pragma 的優先級高於 Cache-Control。 Headers  Response Headers  Cache-Control: max-age=10 / Pragma: no-cache Pragma Pragma 只有一個屬性值，就是 no-cache ，效果和 Cache-Control 中的 no-cache 一致，不使用強緩存，需要與服務器驗證緩存是否新鮮，在 3 個頭部屬性中的優先級最高。 協商緩存 當瀏覽器的強緩存失效的時候或者請求頭中設置了不走強緩存，並且在請求頭中設置了If-Modified-Since 或者 If-None-Match 的時候，會將這兩個屬性值到服務端去驗證是否命中協商緩存，如果命中了協商緩存，會返回 304 狀態，加載瀏覽器緩存，並且響應頭會設置 Last-Modified 或者 ETag 屬性。 ETag/If-None-Match ETag/If-None-Match 的值是 一串 hash 碼 ，代表的是 一個資源的標識 符，當服務端的文件變化的時候，它的 hash碼會隨之改變，通過請求頭中的 If-None-Match 和當前文件的 hash 值進行比較，如果相等則表示命中協商緩存。ETag 又有強弱校驗之分，如果 hash 碼是以 “W/“ 開頭的一串字符串，說明此時協商緩存的校驗是弱校驗的，只有服務器上的文件差異（根據 ETag 計算方式來決定）達到能夠觸發 hash 值後綴變化的時候，才會真正地請求資源，否則返回 304 並加載瀏覽器緩存。 Last-Modified/If-Modified-Since Last-Modified/If-Modified-Since 的值代表的是 文件的最後修改時間 ，第一次請求服務端會把資源的最後修改時間放到 Last-Modified 響應頭中，第二次發起請求的時候，請求頭會帶上上一次響應頭中的 Last-Modified 的時間，並放到 If-Modified-Since 請求頭屬性中，服務端根據文件最後一次修改時間和 If-Modified-Since 的值進行比較，如果相等，返回 304 ，並加載瀏覽器緩存。 ###　驗證協商緩存 本地通過 express 起一個服務來驗證協商緩存，代碼如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const express = require ( 'express' ); const app = express(); var options =  etag: true , // 開啟協商緩存 lastModified: true , // 開啟協商緩存 setHeaders: ( res, path, stat ) =  res.set( 'Cache-Control' : 'max-age=00' , // 瀏覽器不走強緩存 'Pragma' : 'no-cache' , // 瀏覽器不走強緩存 ); , ; app.use(express.static((__dirname + '/public' ), options)); app.listen( 3001 ); 第二次請求資源，服務端根據請求頭中的 If-Modified-Since 和 If-None-Match 驗證文件是否修改。 Tag/If-None-Match 的出現主要解決了 Last-Modified/If-Modified-Since 所解決不了的問題： 如果文件的修改頻率在秒級以下，Last-Modified/If-Modified-Since 會錯誤地返回 304 如果文件被修改了，但是內容沒有任何變化的時候，Last-Modified/If-Modified-Since 會錯誤地返回 304 References HTTP caching 圖解 HTTP 緩存"},"http/caching.html#強緩存":{"title":"&#x5F37;&#x7DE9;&#x5B58;","path":"\\javascript\\http\\caching.html#強緩存","body":"&#x4E0D;&#x9700;&#x8981;&#x767C;&#x9001;&#x8ACB;&#x6C42;&#x5230;&#x670D;&#x52D9;&#x7AEF;&#xFF0C;&#x76F4;&#x63A5;&#x8B80;&#x53D6;&#x700F;&#x89BD;&#x5668;&#x672C;&#x5730;&#x7DE9;&#x5B58;&#xFF0C;&#x5728; Chrome &#x7684; Network &#x4E2D;&#x986F;&#x793A;&#x7684; HTTP &#x72C0;&#x614B;&#x78BC;&#x662F; 200 &#xFF0C;&#x5728; Chrome &#x4E2D;&#xFF0C;&#x5F37;&#x7DE9;&#x5B58;&#x53C8;&#x5206;&#x70BA; Disk Cache (&#x5B58;&#x653E;&#x5728;&#x786C;&#x76E4;&#x4E2D;)&#x548C; Memory Cache (&#x5B58;&#x653E;&#x5728;&#x5167;&#x5B58;&#x4E2D;)&#xFF0C;&#x5B58;&#x653E;&#x7684;&#x4F4D;&#x7F6E;&#x662F;&#x7531;&#x700F;&#x89BD;&#x5668;&#x63A7;&#x5236;&#x7684;&#x3002; &#x662F;&#x5426;&#x5F37;&#x7DE9;&#x5B58;&#x7531; Expires &#x3001; Cache-Control &#x548C; Pragma 3 &#x500B; Header &#x5C6C;&#x6027;&#x5171;&#x540C;&#x4F86;&#x63A7;&#x5236;&#x3002; Expires Expires &#x7684;&#x503C;&#x662F;&#x4E00;&#x500B; HTTP &#x65E5;&#x671F; &#xFF0C;&#x5728;&#x700F;&#x89BD;&#x5668;&#x767C;&#x8D77;&#x8ACB;&#x6C42;&#x6642;&#xFF0C;&#x6703;&#x6839;&#x64DA;&#x7CFB;&#x7D71;&#x6642;&#x9593;&#x548C; Expires &#x7684;&#x503C;&#x9032;&#x884C;&#x6BD4;&#x8F03;&#xFF0C;&#x5982;&#x679C;&#x7CFB;&#x7D71;&#x6642;&#x9593;&#x8D85;&#x904E;&#x4E86; Expires &#x7684;&#x503C;&#xFF0C;&#x7DE9;&#x5B58;&#x5931;&#x6548;&#x3002;&#x7531;&#x65BC;&#x548C;&#x7CFB;&#x7D71;&#x6642;&#x9593;&#x9032;&#x884C;&#x6BD4;&#x8F03;&#xFF0C;&#x6240;&#x4EE5;&#x7576;&#x7CFB;&#x7D71;&#x6642;&#x9593;&#x548C;&#x670D;&#x52D9;&#x5668;&#x6642;&#x9593;&#x4E0D;&#x4E00;&#x81F4;&#x7684;&#x6642;&#x5019;&#xFF0C;&#x6703;&#x6709;&#x7DE9;&#x5B58;&#x6709;&#x6548;&#x671F;&#x4E0D;&#x51C6;&#x7684;&#x554F;&#x984C;&#x3002;Expires &#x7684;&#x512A;&#x5148;&#x7D1A;&#x5728;&#x4E09;&#x500B; Header &#x5C6C;&#x6027;&#x4E2D;&#x662F;&#x6700;&#x4F4E;&#x7684;&#x3002; Cache-Control Cache-Control &#x662F; HTTP/1.1 &#x4E2D;&#x65B0;&#x589E;&#x7684;&#x5C6C;&#x6027;&#xFF0C;&#x5728;&#x8ACB;&#x6C42;&#x982D;&#x548C;&#x97FF;&#x61C9;&#x982D;&#x4E2D;&#x90FD;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#xFF0C;&#x5E38;&#x7528;&#x7684;&#x5C6C;&#x6027;&#x503C;&#x5982;&#x6709;&#xFF1A; max-age&#xFF1A;&#x55AE;&#x4F4D;&#x662F;&#x79D2;&#xFF0C;&#x7DE9;&#x5B58;&#x6642;&#x9593;&#x8A08;&#x7B97;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x8DDD;&#x96E2;&#x767C;&#x8D77;&#x7684;&#x6642;&#x9593;&#x7684;&#x79D2;&#x6578;&#xFF0C;&#x8D85;&#x904E;&#x9593;&#x9694;&#x7684;&#x79D2;&#x6578;&#x7DE9;&#x5B58;&#x5931;&#x6548; no-cache &#xFF1A;&#x4E0D;&#x4F7F;&#x7528;&#x5F37;&#x7DE9;&#x5B58;&#xFF0C;&#x9700;&#x8981;&#x8207;&#x670D;&#x52D9;&#x5668;&#x9A57;&#x8B49;&#x7DE9;&#x5B58;&#x662F;&#x5426;&#x65B0;&#x9BAE; no-store &#xFF1A;&#x7981;&#x6B62;&#x4F7F;&#x7528;&#x7DE9;&#x5B58;&#xFF08;&#x5305;&#x62EC;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#xFF09;&#xFF0C;&#x6BCF;&#x6B21;&#x90FD;&#x5411;&#x670D;&#x52D9;&#x5668;&#x8ACB;&#x6C42;&#x6700;&#x65B0;&#x7684;&#x8CC7;&#x6E90; private&#xFF1A;&#x5C08;&#x7528;&#x65BC;&#x500B;&#x4EBA;&#x7684;&#x7DE9;&#x5B58;&#xFF0C;&#x4E2D;&#x9593;&#x4EE3;&#x7406;&#x3001;CDN &#x7B49;&#x4E0D;&#x80FD;&#x7DE9;&#x5B58;&#x6B64;&#x97FF;&#x61C9; public&#xFF1A;&#x97FF;&#x61C9;&#x53EF;&#x4EE5;&#x88AB;&#x4E2D;&#x9593;&#x4EE3;&#x7406;&#x3001;CDN &#x7B49;&#x7DE9;&#x5B58; must-revalidate&#xFF1A;&#x5728;&#x7DE9;&#x5B58;&#x904E;&#x671F;&#x524D;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#xFF0C;&#x904E;&#x671F;&#x5F8C;&#x5FC5;&#x9808;&#x5411;&#x670D;&#x52D9;&#x5668;&#x9A57;&#x8B49; ###&#x3000;&#x9A57;&#x8B49;&#x5F37;&#x7DE9;&#x5B58; &#x672C;&#x5730;&#x901A;&#x904E; express &#x8D77;&#x4E00;&#x500B;&#x670D;&#x52D9;&#x4F86;&#x9A57;&#x8B49;&#x5F37;&#x7DE9;&#x5B58;&#x7684; 3 &#x500B;&#x5C6C;&#x6027;&#xFF0C;&#x4EE3;&#x78BC;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 const express = require ( &apos;express&apos; ); const app = express(); var options = { etag: false , // &#x7981;&#x7528;&#x5354;&#x5546;&#x7DE9;&#x5B58; lastModified: false , // &#x7981;&#x7528;&#x5354;&#x5546;&#x7DE9;&#x5B58; setHeaders: ( res, path, stat ) = { res.set( &apos;Cache-Control&apos; , &apos;max-age=10&apos; ); // &#x5F37;&#x7DE9;&#x5B58;&#x8D85;&#x6642;&#x6642;&#x9593;&#x70BA;10&#x79D2; }, }; app.use(express.static((__dirname + &apos;/public&apos; ), options)); app.listen( 3000 ); &#x7B2C;&#x4E00;&#x6B21;&#x52A0;&#x8F09;&#xFF0C;&#x9801;&#x9762;&#x6703;&#x5411;&#x670D;&#x52D9;&#x5668;&#x8ACB;&#x6C42;&#x6578;&#x64DA;&#xFF0C;&#x4E26;&#x5728; Response Header &#x4E2D;&#x6DFB;&#x52A0; Cache-Control &#xFF0C;&#x904E;&#x671F;&#x6642;&#x9593;&#x70BA; 10 &#x79D2;&#x3002; &#x7B2C;&#x4E8C;&#x6B21;&#x52A0;&#x8F09;&#xFF0C;Date &#x982D;&#x5C6C;&#x6027;&#x672A;&#x66F4;&#x65B0;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x700F;&#x89BD;&#x5668;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x4E86;&#x5F37;&#x7DE9;&#x5B58;&#xFF0C;&#x5BE6;&#x969B;&#x6C92;&#x6709;&#x767C;&#x9001;&#x8ACB;&#x6C42;&#x3002; &#x904E;&#x4E86; 10 &#x79D2;&#x7684;&#x8D85;&#x6642;&#x6642;&#x9593;&#x4E4B;&#x5F8C;&#xFF0C;&#x518D;&#x6B21;&#x8ACB;&#x6C42;&#x8CC7;&#x6E90;&#xFF1A; &#x7576; Pragma &#x548C; Cache-Control &#x540C;&#x6642;&#x5B58;&#x5728;&#x7684;&#x6642;&#x5019;&#xFF0C;Pragma &#x7684;&#x512A;&#x5148;&#x7D1A;&#x9AD8;&#x65BC; Cache-Control&#x3002; Headers  Response Headers  Cache-Control: max-age=10 / Pragma: no-cache Pragma Pragma &#x53EA;&#x6709;&#x4E00;&#x500B;&#x5C6C;&#x6027;&#x503C;&#xFF0C;&#x5C31;&#x662F; no-cache &#xFF0C;&#x6548;&#x679C;&#x548C; Cache-Control &#x4E2D;&#x7684; no-cache &#x4E00;&#x81F4;&#xFF0C;&#x4E0D;&#x4F7F;&#x7528;&#x5F37;&#x7DE9;&#x5B58;&#xFF0C;&#x9700;&#x8981;&#x8207;&#x670D;&#x52D9;&#x5668;&#x9A57;&#x8B49;&#x7DE9;&#x5B58;&#x662F;&#x5426;&#x65B0;&#x9BAE;&#xFF0C;&#x5728; 3 &#x500B;&#x982D;&#x90E8;&#x5C6C;&#x6027;&#x4E2D;&#x7684;&#x512A;&#x5148;&#x7D1A;&#x6700;&#x9AD8;&#x3002;"},"http/caching.html#協商緩存":{"title":"&#x5354;&#x5546;&#x7DE9;&#x5B58;","path":"\\javascript\\http\\caching.html#協商緩存","body":"&#x7576;&#x700F;&#x89BD;&#x5668;&#x7684;&#x5F37;&#x7DE9;&#x5B58;&#x5931;&#x6548;&#x7684;&#x6642;&#x5019;&#x6216;&#x8005;&#x8ACB;&#x6C42;&#x982D;&#x4E2D;&#x8A2D;&#x7F6E;&#x4E86;&#x4E0D;&#x8D70;&#x5F37;&#x7DE9;&#x5B58;&#xFF0C;&#x4E26;&#x4E14;&#x5728;&#x8ACB;&#x6C42;&#x982D;&#x4E2D;&#x8A2D;&#x7F6E;&#x4E86;If-Modified-Since &#x6216;&#x8005; If-None-Match &#x7684;&#x6642;&#x5019;&#xFF0C;&#x6703;&#x5C07;&#x9019;&#x5169;&#x500B;&#x5C6C;&#x6027;&#x503C;&#x5230;&#x670D;&#x52D9;&#x7AEF;&#x53BB;&#x9A57;&#x8B49;&#x662F;&#x5426;&#x547D;&#x4E2D;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#xFF0C;&#x5982;&#x679C;&#x547D;&#x4E2D;&#x4E86;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#xFF0C;&#x6703;&#x8FD4;&#x56DE; 304 &#x72C0;&#x614B;&#xFF0C;&#x52A0;&#x8F09;&#x700F;&#x89BD;&#x5668;&#x7DE9;&#x5B58;&#xFF0C;&#x4E26;&#x4E14;&#x97FF;&#x61C9;&#x982D;&#x6703;&#x8A2D;&#x7F6E; Last-Modified &#x6216;&#x8005; ETag &#x5C6C;&#x6027;&#x3002; ETag/If-None-Match ETag/If-None-Match &#x7684;&#x503C;&#x662F; &#x4E00;&#x4E32; hash &#x78BC; &#xFF0C;&#x4EE3;&#x8868;&#x7684;&#x662F; &#x4E00;&#x500B;&#x8CC7;&#x6E90;&#x7684;&#x6A19;&#x8B58; &#x7B26;&#xFF0C;&#x7576;&#x670D;&#x52D9;&#x7AEF;&#x7684;&#x6587;&#x4EF6;&#x8B8A;&#x5316;&#x7684;&#x6642;&#x5019;&#xFF0C;&#x5B83;&#x7684; hash&#x78BC;&#x6703;&#x96A8;&#x4E4B;&#x6539;&#x8B8A;&#xFF0C;&#x901A;&#x904E;&#x8ACB;&#x6C42;&#x982D;&#x4E2D;&#x7684; If-None-Match &#x548C;&#x7576;&#x524D;&#x6587;&#x4EF6;&#x7684; hash &#x503C;&#x9032;&#x884C;&#x6BD4;&#x8F03;&#xFF0C;&#x5982;&#x679C;&#x76F8;&#x7B49;&#x5247;&#x8868;&#x793A;&#x547D;&#x4E2D;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#x3002;ETag &#x53C8;&#x6709;&#x5F37;&#x5F31;&#x6821;&#x9A57;&#x4E4B;&#x5206;&#xFF0C;&#x5982;&#x679C; hash &#x78BC;&#x662F;&#x4EE5; &#x201C;W/&#x201C; &#x958B;&#x982D;&#x7684;&#x4E00;&#x4E32;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x8AAA;&#x660E;&#x6B64;&#x6642;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#x7684;&#x6821;&#x9A57;&#x662F;&#x5F31;&#x6821;&#x9A57;&#x7684;&#xFF0C;&#x53EA;&#x6709;&#x670D;&#x52D9;&#x5668;&#x4E0A;&#x7684;&#x6587;&#x4EF6;&#x5DEE;&#x7570;&#xFF08;&#x6839;&#x64DA; ETag &#x8A08;&#x7B97;&#x65B9;&#x5F0F;&#x4F86;&#x6C7A;&#x5B9A;&#xFF09;&#x9054;&#x5230;&#x80FD;&#x5920;&#x89F8;&#x767C; hash &#x503C;&#x5F8C;&#x7DB4;&#x8B8A;&#x5316;&#x7684;&#x6642;&#x5019;&#xFF0C;&#x624D;&#x6703;&#x771F;&#x6B63;&#x5730;&#x8ACB;&#x6C42;&#x8CC7;&#x6E90;&#xFF0C;&#x5426;&#x5247;&#x8FD4;&#x56DE; 304 &#x4E26;&#x52A0;&#x8F09;&#x700F;&#x89BD;&#x5668;&#x7DE9;&#x5B58;&#x3002; Last-Modified/If-Modified-Since Last-Modified/If-Modified-Since &#x7684;&#x503C;&#x4EE3;&#x8868;&#x7684;&#x662F; &#x6587;&#x4EF6;&#x7684;&#x6700;&#x5F8C;&#x4FEE;&#x6539;&#x6642;&#x9593; &#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x8ACB;&#x6C42;&#x670D;&#x52D9;&#x7AEF;&#x6703;&#x628A;&#x8CC7;&#x6E90;&#x7684;&#x6700;&#x5F8C;&#x4FEE;&#x6539;&#x6642;&#x9593;&#x653E;&#x5230; Last-Modified &#x97FF;&#x61C9;&#x982D;&#x4E2D;&#xFF0C;&#x7B2C;&#x4E8C;&#x6B21;&#x767C;&#x8D77;&#x8ACB;&#x6C42;&#x7684;&#x6642;&#x5019;&#xFF0C;&#x8ACB;&#x6C42;&#x982D;&#x6703;&#x5E36;&#x4E0A;&#x4E0A;&#x4E00;&#x6B21;&#x97FF;&#x61C9;&#x982D;&#x4E2D;&#x7684; Last-Modified &#x7684;&#x6642;&#x9593;&#xFF0C;&#x4E26;&#x653E;&#x5230; If-Modified-Since &#x8ACB;&#x6C42;&#x982D;&#x5C6C;&#x6027;&#x4E2D;&#xFF0C;&#x670D;&#x52D9;&#x7AEF;&#x6839;&#x64DA;&#x6587;&#x4EF6;&#x6700;&#x5F8C;&#x4E00;&#x6B21;&#x4FEE;&#x6539;&#x6642;&#x9593;&#x548C; If-Modified-Since &#x7684;&#x503C;&#x9032;&#x884C;&#x6BD4;&#x8F03;&#xFF0C;&#x5982;&#x679C;&#x76F8;&#x7B49;&#xFF0C;&#x8FD4;&#x56DE; 304 &#xFF0C;&#x4E26;&#x52A0;&#x8F09;&#x700F;&#x89BD;&#x5668;&#x7DE9;&#x5B58;&#x3002; ###&#x3000;&#x9A57;&#x8B49;&#x5354;&#x5546;&#x7DE9;&#x5B58; &#x672C;&#x5730;&#x901A;&#x904E; express &#x8D77;&#x4E00;&#x500B;&#x670D;&#x52D9;&#x4F86;&#x9A57;&#x8B49;&#x5354;&#x5546;&#x7DE9;&#x5B58;&#xFF0C;&#x4EE3;&#x78BC;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const express = require ( &apos;express&apos; ); const app = express(); var options = { etag: true , // &#x958B;&#x555F;&#x5354;&#x5546;&#x7DE9;&#x5B58; lastModified: true , // &#x958B;&#x555F;&#x5354;&#x5546;&#x7DE9;&#x5B58; setHeaders: ( res, path, stat ) = { res.set({ &apos;Cache-Control&apos; : &apos;max-age=00&apos; , // &#x700F;&#x89BD;&#x5668;&#x4E0D;&#x8D70;&#x5F37;&#x7DE9;&#x5B58; &apos;Pragma&apos; : &apos;no-cache&apos; , // &#x700F;&#x89BD;&#x5668;&#x4E0D;&#x8D70;&#x5F37;&#x7DE9;&#x5B58; }); }, }; app.use(express.static((__dirname + &apos;/public&apos; ), options)); app.listen( 3001 ); &#x7B2C;&#x4E8C;&#x6B21;&#x8ACB;&#x6C42;&#x8CC7;&#x6E90;&#xFF0C;&#x670D;&#x52D9;&#x7AEF;&#x6839;&#x64DA;&#x8ACB;&#x6C42;&#x982D;&#x4E2D;&#x7684; If-Modified-Since &#x548C; If-None-Match &#x9A57;&#x8B49;&#x6587;&#x4EF6;&#x662F;&#x5426;&#x4FEE;&#x6539;&#x3002; Tag/If-None-Match &#x7684;&#x51FA;&#x73FE;&#x4E3B;&#x8981;&#x89E3;&#x6C7A;&#x4E86; Last-Modified/If-Modified-Since &#x6240;&#x89E3;&#x6C7A;&#x4E0D;&#x4E86;&#x7684;&#x554F;&#x984C;&#xFF1A; &#x5982;&#x679C;&#x6587;&#x4EF6;&#x7684;&#x4FEE;&#x6539;&#x983B;&#x7387;&#x5728;&#x79D2;&#x7D1A;&#x4EE5;&#x4E0B;&#xFF0C;Last-Modified/If-Modified-Since &#x6703;&#x932F;&#x8AA4;&#x5730;&#x8FD4;&#x56DE; 304 &#x5982;&#x679C;&#x6587;&#x4EF6;&#x88AB;&#x4FEE;&#x6539;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x5167;&#x5BB9;&#x6C92;&#x6709;&#x4EFB;&#x4F55;&#x8B8A;&#x5316;&#x7684;&#x6642;&#x5019;&#xFF0C;Last-Modified/If-Modified-Since &#x6703;&#x932F;&#x8AA4;&#x5730;&#x8FD4;&#x56DE; 304"},"http/caching.html#References":{"title":"References","path":"\\javascript\\http\\caching.html#References","body":"HTTP caching &#x5716;&#x89E3; HTTP &#x7DE9;&#x5B58;"},"object/create.html":{"title":"Object.create()","path":"\\javascript\\object\\create.html","body":"Object.create() 指定其原型物件與屬性，創建一個新物件。 使用 Object.create() 實現類別繼承 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // Shape - 父類別 function Shape ( )  this .x = 0 ; this .y = 0 ;  // 父類別的方法 Shape.prototype.move = function ( x, y )  this .x += x; this .y += y; console .info( 'Shape moved.' ); ; // Rectangle - 子類別 function Rectangle ( )  Shape.call( this ); // call super constructor.  // 子類別擴展(extends)父類別 Rectangle.prototype = Object .create(Shape.prototype); Rectangle.prototype.constructor = Rectangle; var rect = new Rectangle(); console .log( 'Is rect an instance of Rectangle?' , rect instanceof Rectangle); // true console .log( 'Is rect an instance of Shape?' , rect instanceof Shape); // true rect.move( 1 , 1 ); // Outputs, 'Shape moved.' ex 1 2 let ...arr = Object .create( x : 1 ) // Object.create 將x掛在原形鏈上了 沒有掛在值上  console .log(arr) // undefined"},"object/object​_keys.html":{"title":"Object​.keys()","path":"\\javascript\\object\\object​_keys.html","body":"Object​.keys() https://jsbin.com/wurocegika/edit?js,console 1 2 3 4 5 6 7 8 9 10 var arr = [ 'a' , 'b' , 'c' ]; console .log( Object .keys(arr)); // console: ['0', '1', '2'] // 類似陣列的物件 var obj =  0 : 'a' , 1 : 'b' , 2 : 'c' ; console .log( Object .keys(obj)); // console: ['0', '1', '2'] // 擁有隨機 key 排序，類似陣列的物件 var an_obj =  100 : 'a' , 2 : 'b' , 7 : 'c' ; console .log( Object .keys(an_obj)); // console: ['2', '7', '100'] https://jsbin.com/sidixofelo/edit?js,console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 const types =  status: '404' , users: 'https'  const getObj = ; Object .keys(types).forEach( type =  console .log(type) // \"status\" \"users\" const camelCaseTypeRes = type + 'Res' ; getObj[type] = camelCaseTypeRes; ) console .log(getObj) // [object Object]  // status: \"statusRes\", // users: \"usersRes\" // "},"operators/delete.html":{"title":"","path":"\\javascript\\operators\\delete.html","body":"delete 1 2 3 4 ( function ( x )  delete x; return x; )( 1 ) //1 刪不掉x delete只能操作對象的屬性 不能操作變量"},"operators/delete.html#delete":{"title":"delete","path":"\\javascript\\operators\\delete.html#delete","body":"1 2 3 4 ( function ( x ) { delete x; return x; })( 1 ) //1 &#x522A;&#x4E0D;&#x6389;x delete&#x53EA;&#x80FD;&#x64CD;&#x4F5C;&#x5C0D;&#x8C61;&#x7684;&#x5C6C;&#x6027; &#x4E0D;&#x80FD;&#x64CD;&#x4F5C;&#x8B8A;&#x91CF;"},"operators/destructuring_assignment.html":{"title":"","path":"\\javascript\\operators\\destructuring_assignment.html","body":"Destructuring assignment 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 let a, b, rest; [a, b] = [ 10 , 20 ]; console .log(a); // 10 console .log(b); // 20 [a, b, ...rest] = [ 10 , 20 , 30 , 40 , 50 ]; console .log(a); // 10 console .log(b); // 20 console .log(rest); // [30, 40, 50] ( a, b  =  a : 10 , b : 20 ); console .log(a); // 10 console .log(b); // 20 ( a, b  =  a : 10 , b : 20 , c : 30 ); console .log(a); // 10 console .log(b); // 20 // Stage 4(finished) proposal (a, b, ...rest =  a : 10 , b : 20 , c : 30 , d : 40 ); console .log(a); // 10 console .log(b); // 20 console .log(rest); // c: 30, d: 40 1 2 3 4 5 6 7 8 const object =  a : 5 , b : 6 , c : 7 ; const picked = ( ( a, c  ) = ( a, c ))(object); console .log(picked); //  a: 5, c: 7  let unwrap = ( a, c ) = (a, c); let picked = unwrap( a : 5 , b : 6 , c : 7 ); console .log(picked) //  a: 5, c: 7  1 2 3 4 5 6 let picked = ( date, close, symbol ) = (date, close, symbol); const map1 = quotes.map( obj =  // console.log(obj) return picked(obj) ); console .log(map1); [ { date: 2020-05-14T04:00:00.000Z, close: 142.970001, symbol: ‘vti’ }, { date: 2020-05-13T04:00:00.000Z, close: 141.449997, symbol: ‘vti’ } ]"},"operators/destructuring_assignment.html#Destructuring-assignment":{"title":"Destructuring assignment","path":"\\javascript\\operators\\destructuring_assignment.html#Destructuring-assignment","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 let a, b, rest; [a, b] = [ 10 , 20 ]; console .log(a); // 10 console .log(b); // 20 [a, b, ...rest] = [ 10 , 20 , 30 , 40 , 50 ]; console .log(a); // 10 console .log(b); // 20 console .log(rest); // [30, 40, 50] ({ a, b } = { a : 10 , b : 20 }); console .log(a); // 10 console .log(b); // 20 ({ a, b } = { a : 10 , b : 20 , c : 30 }); console .log(a); // 10 console .log(b); // 20 // Stage 4(finished) proposal ({a, b, ...rest} = { a : 10 , b : 20 , c : 30 , d : 40 }); console .log(a); // 10 console .log(b); // 20 console .log(rest); // {c: 30, d: 40} 1 2 3 4 5 6 7 8 const object = { a : 5 , b : 6 , c : 7 }; const picked = ( ({ a, c } ) = ({ a, c }))(object); console .log(picked); // { a: 5, c: 7 } let unwrap = ( {a, c} ) = ({a, c}); let picked = unwrap({ a : 5 , b : 6 , c : 7 }); console .log(picked) // { a: 5, c: 7 } 1 2 3 4 5 6 let picked = ( {date, close, symbol} ) = ({date, close, symbol}); const map1 = quotes.map( obj = { // console.log(obj) return picked(obj) }); console .log(map1); [ { date: 2020-05-14T04:00:00.000Z, close: 142.970001, symbol: &#x2018;vti&#x2019; }, { date: 2020-05-13T04:00:00.000Z, close: 141.449997, symbol: &#x2018;vti&#x2019; } ]"},"operators/function.html":{"title":"","path":"\\javascript\\operators\\function.html","body":"函數表達式 函數表達式（function expression）非常類似於函數聲明（function statement）（詳情查看函數聲明），並且兩者擁有幾乎相同的語法。函數表達式與函數聲明的最主要區別是函數名稱（function name），在函數表達式中可省略它，從而創建匿名函數（anonymous functions）。 1 2 3 4 5 6 // 函數聲明 function name ( [param[, param[, ... param]]] )  statements  // 函數表達式 var myFunction = function name ( [param[, param[, ... param]]] )  statements  // 函數表達式 匿名函數 var myFunction = function ( [param[, param[, ... param]]] )  statements  1 2 3 ( function ( )  debugger )() 函數表達式提升 (Function expression hoisting) JavaScript中的函數表達式沒有提升,不像函數聲明,你在定義函數表達式之前不能使用函數表達式: 1 2 3 4 5 notHoisted(); // TypeError: notHoisted is not a function var notHoisted = function ( )  console .log( 'bar' ); ;"},"operators/function.html#函數表達式":{"title":"&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;","path":"\\javascript\\operators\\function.html#函數表達式","body":"&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#xFF08;function expression&#xFF09;&#x975E;&#x5E38;&#x985E;&#x4F3C;&#x65BC;&#x51FD;&#x6578;&#x8072;&#x660E;&#xFF08;function statement&#xFF09;&#xFF08;&#x8A73;&#x60C5;&#x67E5;&#x770B;&#x51FD;&#x6578;&#x8072;&#x660E;&#xFF09;&#xFF0C;&#x4E26;&#x4E14;&#x5169;&#x8005;&#x64C1;&#x6709;&#x5E7E;&#x4E4E;&#x76F8;&#x540C;&#x7684;&#x8A9E;&#x6CD5;&#x3002;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x8207;&#x51FD;&#x6578;&#x8072;&#x660E;&#x7684;&#x6700;&#x4E3B;&#x8981;&#x5340;&#x5225;&#x662F;&#x51FD;&#x6578;&#x540D;&#x7A31;&#xFF08;function name&#xFF09;&#xFF0C;&#x5728;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x4E2D;&#x53EF;&#x7701;&#x7565;&#x5B83;&#xFF0C;&#x5F9E;&#x800C;&#x5275;&#x5EFA;&#x533F;&#x540D;&#x51FD;&#x6578;&#xFF08;anonymous functions&#xFF09;&#x3002; 1 2 3 4 5 6 // &#x51FD;&#x6578;&#x8072;&#x660E; function name ( [param[, param[, ... param]]] ) { statements } // &#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F; var myFunction = function name ( [param[, param[, ... param]]] ) { statements } // &#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F; &#x533F;&#x540D;&#x51FD;&#x6578; var myFunction = function ( [param[, param[, ... param]]] ) { statements } 1 2 3 ( function ( ) { debugger })() &#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x63D0;&#x5347; (Function expression hoisting) JavaScript&#x4E2D;&#x7684;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x6C92;&#x6709;&#x63D0;&#x5347;,&#x4E0D;&#x50CF;&#x51FD;&#x6578;&#x8072;&#x660E;,&#x4F60;&#x5728;&#x5B9A;&#x7FA9;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;&#x4E4B;&#x524D;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;&#x51FD;&#x6578;&#x8868;&#x9054;&#x5F0F;: 1 2 3 4 5 notHoisted(); // TypeError: notHoisted is not a function var notHoisted = function ( ) { console .log( &apos;bar&apos; ); };"},"operators/typeof.html":{"title":"","path":"\\javascript\\operators\\typeof.html","body":"typeof 1 2 3 4 5 var f = function g ( )  return 123  typeof g(); // Uncaught ReferenceError: g is not defined typeof f; // \"function\" g() 不能變動 變量 f function_expression 可以重新賦值 g() 只能在函數內使用 外部無法存取 1 2 3 4 5 // g() 函數聲明 function g ( )  return 123  typeof g(); // \"number\" ref 函數 null [typeof null, null instanceof Object] // [“object”, false] js 萬物即對象 但null不是Object new出來的 ref: instanceof Object.prototype.name = 1 ; 1.0.name; // 1 1是整型 1.0 變對象 1.name; // Uncaught SyntaxError: Invalid or unexpected token js沒有整型只有對象 Function.name; // “Function”"},"operators/typeof.html#typeof":{"title":"typeof","path":"\\javascript\\operators\\typeof.html#typeof","body":"1 2 3 4 5 var f = function g ( ) { return 123 } typeof g(); // Uncaught ReferenceError: g is not defined typeof f; // function g() &#x4E0D;&#x80FD;&#x8B8A;&#x52D5; &#x8B8A;&#x91CF; f function_expression &#x53EF;&#x4EE5;&#x91CD;&#x65B0;&#x8CE6;&#x503C; g() &#x53EA;&#x80FD;&#x5728;&#x51FD;&#x6578;&#x5167;&#x4F7F;&#x7528; &#x5916;&#x90E8;&#x7121;&#x6CD5;&#x5B58;&#x53D6; 1 2 3 4 5 // g() &#x51FD;&#x6578;&#x8072;&#x660E; function g ( ) { return 123 } typeof g(); // number ref &#x51FD;&#x6578;"},"operators/typeof.html#null":{"title":"null","path":"\\javascript\\operators\\typeof.html#null","body":"[typeof null, null instanceof Object] // [&#x201C;object&#x201D;, false] js &#x842C;&#x7269;&#x5373;&#x5C0D;&#x8C61; &#x4F46;null&#x4E0D;&#x662F;Object new&#x51FA;&#x4F86;&#x7684; ref: instanceof Object.prototype.name = 1 ; 1.0.name; // 1 1&#x662F;&#x6574;&#x578B; 1.0 &#x8B8A;&#x5C0D;&#x8C61; 1.name; // Uncaught SyntaxError: Invalid or unexpected token js&#x6C92;&#x6709;&#x6574;&#x578B;&#x53EA;&#x6709;&#x5C0D;&#x8C61; Function.name; // &#x201C;Function&#x201D;"},"statements/for.html":{"title":"","path":"\\javascript\\statements\\for.html","body":"for…of與for…in的差別 For…Of for…in 提示： for...in 不应该用于迭代一个 Array，其中 索引顺序 很重要。 在迭代 物件屬性 時，使用 for...in ；在迭代 陣列 時，使用 for...of 。 for...in 輸出的是屬 性名稱(key) ， for...of 輸出的是 值(value) for...of 是 ES6 的新語法。修復了ES5 for…in 的不足 for...of 不能迭代物件，需要透過和 Object.keys() 搭配使用 單純迭代陣列的話，for…in 輸出的是屬性名稱(key)，for…of 輸出的是值(value) 1 2 3 4 5 6 7 8 9 10 11 let iterable = [ 3 , 5 , 7 ]; // 回傳「key」 for ( let i in iterable)  console .log(i); // \"0\", \"1\", \"2\"  // 回傳「value」 for ( let i of iterable)  console .log(i); // 3, 5, 7  在原本的陣列，新增一個屬性 foo，可看到 for…in 有將此屬性 foo 也輸出。 1 2 3 4 5 6 7 8 9 10 11 12 let iterable = [ 3 , 5 , 7 ]; iterable.foo = 'hello' ; //新增foo屬性名稱 // 回傳「key」，且會讀取到陣列新增的屬性名稱 for ( let i in iterable)  console .log(i); // \"0\", \"1\", \"2\", \"foo\"  // 回傳「value」 for ( let i of iterable)  console .log(i); // 3, 5, 7 "},"statements/for.html#for…of與for…in的差別":{"title":"for&#x2026;of&#x8207;for&#x2026;in&#x7684;&#x5DEE;&#x5225;","path":"\\javascript\\statements\\for.html#for…of與for…in的差別","body":"For&#x2026;Of for&#x2026;in &#x63D0;&#x793A;&#xFF1A; for...in &#x4E0D;&#x5E94;&#x8BE5;&#x7528;&#x4E8E;&#x8FED;&#x4EE3;&#x4E00;&#x4E2A; Array&#xFF0C;&#x5176;&#x4E2D; &#x7D22;&#x5F15;&#x987A;&#x5E8F; &#x5F88;&#x91CD;&#x8981;&#x3002; &#x5728;&#x8FED;&#x4EE3; &#x7269;&#x4EF6;&#x5C6C;&#x6027; &#x6642;&#xFF0C;&#x4F7F;&#x7528; for...in &#xFF1B;&#x5728;&#x8FED;&#x4EE3; &#x9663;&#x5217; &#x6642;&#xFF0C;&#x4F7F;&#x7528; for...of &#x3002; for...in &#x8F38;&#x51FA;&#x7684;&#x662F;&#x5C6C; &#x6027;&#x540D;&#x7A31;(key) &#xFF0C; for...of &#x8F38;&#x51FA;&#x7684;&#x662F; &#x503C;(value) for...of &#x662F; ES6 &#x7684;&#x65B0;&#x8A9E;&#x6CD5;&#x3002;&#x4FEE;&#x5FA9;&#x4E86;ES5 for&#x2026;in &#x7684;&#x4E0D;&#x8DB3; for...of &#x4E0D;&#x80FD;&#x8FED;&#x4EE3;&#x7269;&#x4EF6;&#xFF0C;&#x9700;&#x8981;&#x900F;&#x904E;&#x548C; Object.keys() &#x642D;&#x914D;&#x4F7F;&#x7528; &#x55AE;&#x7D14;&#x8FED;&#x4EE3;&#x9663;&#x5217;&#x7684;&#x8A71;&#xFF0C;for&#x2026;in &#x8F38;&#x51FA;&#x7684;&#x662F;&#x5C6C;&#x6027;&#x540D;&#x7A31;(key)&#xFF0C;for&#x2026;of &#x8F38;&#x51FA;&#x7684;&#x662F;&#x503C;(value) 1 2 3 4 5 6 7 8 9 10 11 let iterable = [ 3 , 5 , 7 ]; // &#x56DE;&#x50B3;&#x300C;key&#x300D; for ( let i in iterable) { console .log(i); // 0, 1, 2 } // &#x56DE;&#x50B3;&#x300C;value&#x300D; for ( let i of iterable) { console .log(i); // 3, 5, 7 } &#x5728;&#x539F;&#x672C;&#x7684;&#x9663;&#x5217;&#xFF0C;&#x65B0;&#x589E;&#x4E00;&#x500B;&#x5C6C;&#x6027; foo&#xFF0C;&#x53EF;&#x770B;&#x5230; for&#x2026;in &#x6709;&#x5C07;&#x6B64;&#x5C6C;&#x6027; foo &#x4E5F;&#x8F38;&#x51FA;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 let iterable = [ 3 , 5 , 7 ]; iterable.foo = &apos;hello&apos; ; //&#x65B0;&#x589E;foo&#x5C6C;&#x6027;&#x540D;&#x7A31; // &#x56DE;&#x50B3;&#x300C;key&#x300D;&#xFF0C;&#x4E14;&#x6703;&#x8B80;&#x53D6;&#x5230;&#x9663;&#x5217;&#x65B0;&#x589E;&#x7684;&#x5C6C;&#x6027;&#x540D;&#x7A31; for ( let i in iterable) { console .log(i); // 0, 1, 2, foo } // &#x56DE;&#x50B3;&#x300C;value&#x300D; for ( let i of iterable) { console .log(i); // 3, 5, 7 }"},"operators/precedence.html":{"title":"","path":"\\javascript\\operators\\precedence.html","body":"運算子優先序 1 2 3 var s = 'msg' console .log((s === 'msg' ) ? \"something\" : \"nothing\" ) console .log( \"value is \" + (s === 'msg' ) ? \"something\" : \"nothing\" ) // something value is 不見了 + 優先序高於 … ? … : … value is  + (s ===&#39;msg&#39;) // true .運算符比 = 運算符高 1 2 3 4 5 6 var a =  n : 1  var b = a a.x = a =  n : 2  console .log(a.n, b.n); console .log(a.x, b.x); 2 1 undefined {n: 2} 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 var b = a,此時a和b指向同一個對象。 .運算符比 = 運算符高,先計算 `a.x` ,此時 b =  n: 1 , x: undefined  相當於給對象添加了x屬性。 a.x = a =  n : 2 ; 計算完a.x,再計算 = ,賦值是從右向左,此時a指向一個新對象。 a =  n: 2  a.x已經執行過了,此時對象的x屬性賦值為a,此時 對象 =  n: 1 , x: n: 2   即: a =  n: 2  b =  n: 1 , x: n: 2  "},"operators/precedence.html#運算子優先序":{"title":"&#x904B;&#x7B97;&#x5B50;&#x512A;&#x5148;&#x5E8F;","path":"\\javascript\\operators\\precedence.html#運算子優先序","body":"1 2 3 var s = &apos;msg&apos; console .log((s === &apos;msg&apos; ) ? something : nothing ) console .log( value is  + (s === &apos;msg&apos; ) ? something : nothing ) // something value is &#x4E0D;&#x898B;&#x4E86; + &#x512A;&#x5148;&#x5E8F;&#x9AD8;&#x65BC; &#x2026; ? &#x2026; : &#x2026; value is  + (s ===&apos;msg&apos;) // true"},"operators/precedence.html#運算符比-運算符高":{"title":".&#x904B;&#x7B97;&#x7B26;&#x6BD4; = &#x904B;&#x7B97;&#x7B26;&#x9AD8;","path":"\\javascript\\operators\\precedence.html#運算符比-運算符高","body":"1 2 3 4 5 6 var a = { n : 1 } var b = a a.x = a = { n : 2 } console .log(a.n, b.n); console .log(a.x, b.x); 2 1 undefined {n: 2} 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 var b = a,&#x6B64;&#x6642;a&#x548C;b&#x6307;&#x5411;&#x540C;&#x4E00;&#x500B;&#x5C0D;&#x8C61;&#x3002; .&#x904B;&#x7B97;&#x7B26;&#x6BD4; = &#x904B;&#x7B97;&#x7B26;&#x9AD8;,&#x5148;&#x8A08;&#x7B97; `a.x` ,&#x6B64;&#x6642; b = { n: 1 , x: undefined } &#x76F8;&#x7576;&#x65BC;&#x7D66;&#x5C0D;&#x8C61;&#x6DFB;&#x52A0;&#x4E86;x&#x5C6C;&#x6027;&#x3002; a.x = a = { n : 2 }; &#x8A08;&#x7B97;&#x5B8C;a.x,&#x518D;&#x8A08;&#x7B97; = ,&#x8CE6;&#x503C;&#x662F;&#x5F9E;&#x53F3;&#x5411;&#x5DE6;,&#x6B64;&#x6642;a&#x6307;&#x5411;&#x4E00;&#x500B;&#x65B0;&#x5C0D;&#x8C61;&#x3002; a = { n: 2 } a.x&#x5DF2;&#x7D93;&#x57F7;&#x884C;&#x904E;&#x4E86;,&#x6B64;&#x6642;&#x5C0D;&#x8C61;&#x7684;x&#x5C6C;&#x6027;&#x8CE6;&#x503C;&#x70BA;a,&#x6B64;&#x6642; &#x5C0D;&#x8C61; = { n: 1 , x:{ n: 2 } } &#x5373;: a = { n: 2 } b = { n: 1 , x:{ n: 2 } }"},"statements/let.html":{"title":"","path":"\\javascript\\statements\\let.html","body":"let let 用於宣告一個「只作用在當前區塊的變數」，初始值可選擇性的設定。 1 2 3 4 5 var a = 1 ; if ( true ) console .log(a); let a = 2 ;  ReferenceError: Cannot access ‘a’ before initialization let 聲明的變量不會提升,並且會產生暫存死區。在 let 聲明變量之前訪問變量會拋出錯誤。"},"statements/let.html#let":{"title":"let","path":"\\javascript\\statements\\let.html#let","body":"let &#x7528;&#x65BC;&#x5BA3;&#x544A;&#x4E00;&#x500B;&#x300C;&#x53EA;&#x4F5C;&#x7528;&#x5728;&#x7576;&#x524D;&#x5340;&#x584A;&#x7684;&#x8B8A;&#x6578;&#x300D;&#xFF0C;&#x521D;&#x59CB;&#x503C;&#x53EF;&#x9078;&#x64C7;&#x6027;&#x7684;&#x8A2D;&#x5B9A;&#x3002; 1 2 3 4 5 var a = 1 ; if ( true ){ console .log(a); let a = 2 ; } ReferenceError: Cannot access &#x2018;a&#x2019; before initialization let &#x8072;&#x660E;&#x7684;&#x8B8A;&#x91CF;&#x4E0D;&#x6703;&#x63D0;&#x5347;,&#x4E26;&#x4E14;&#x6703;&#x7522;&#x751F;&#x66AB;&#x5B58;&#x6B7B;&#x5340;&#x3002;&#x5728; let &#x8072;&#x660E;&#x8B8A;&#x91CF;&#x4E4B;&#x524D;&#x8A2A;&#x554F;&#x8B8A;&#x91CF;&#x6703;&#x62CB;&#x51FA;&#x932F;&#x8AA4;&#x3002;"},"statements/AsyncFunction.html":{"title":"AsyncFunction","path":"\\javascript\\statements\\AsyncFunction.html","body":"async function 宣告被定義為一個回傳 AsyncFunction 物件的非同步函式 。 同一個步道(同步 接力賽跑 等) vs 不同步道(非同步 賽跑) 1 2 3 4 5 6 7 8 let a = 0 let fn = async () =  a = a + await 10 ; console .log( '異步' ) console .log(a)  fn() console .log(++a) babeljs 1 ‘異步’ 10 a = await 10 + a; 1 ‘異步’ 11"},"statements/block.html":{"title":"區塊","path":"\\javascript\\statements\\block.html","body":"區塊陳述用來組合零個或多個陳述。我們使用一對大括號 { } 以界定區塊。 var 1 2 3 4 5 var x = 1 ;  var x = 2 ;  alert(x); // outputs 2 let 和 const 1 2 3 4 5 let x = 1 ;  let x = 2 ;  console .log(x); // logs 1 function 1 2 3 4 5 6 7 8 9 10 11 function foo ( )   var a = 'var' ;  let a = 'let' ; console .log(a); // let   console .log(a); // var  foo(); 1 2 3 4 5 6 7  debugger function test ( )  test = 123 console .log( 'inner:' ,test) // inner: 123  console .log( 'outer:' ,test) // outer: ƒ test() 塊會限制函數的提升 有条件的创建函数 函数可以被有条件来声明 ，这意味着，函数声明可能出现在一个 if 语句里，但是，这种声明方式在不同的浏览器里可能有不同的效果。因此，不应该在生成环境代码中使用这种声明方式，应该使用函数表达式来代替。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 var hoisted = \"foo\" in this ; console .log( `'foo' name $hoisted ? \"is\" : \"is not\"  hoisted. typeof foo is $ typeof foo ` ); if ( false )  function foo ( )  return 1 ;   // 在Chrome里: // 'foo' 变量名被提升，但是 typeof foo 为 undefined // // 在Firefox里: // 'foo' 变量名被提升. 但是 typeof foo 为 undefined // // 在Edge里: // 'foo' 变量名未被提升. 而且 typeof foo 为 undefined // // 在Safari里: // 'foo' 变量名被提升. 而且 typeof foo 为 function var 不會產生塊級作用域, let 會產生塊級作用域。 1 2 3 4 5 6 if ( false ) var a = 1 ; let b = 2 ;  console .log(a); console .log(b); 代碼相當於: 1 2 3 4 5 6 7 var a; if ( false ) a = 1 ; let b = 2 ;  console .log(a); // undefined console .log(b); // ReferenceError: b is not defined"},"string/split.html":{"title":"","path":"\\javascript\\string\\split.html","body":"split String.prototype.split() 請輸出1到400之間所有數字中包含的1的個數，比如數字1中包含了一個1, 數字11中包含了兩個1,數字20中不包含1,數字1到21中共包含了13個1。 將每一個數字轉換為字符串然後統計 1 的個數 1 2 3 4 5 6 7 8 9 10 function getCount ( )  let count = 0 for ( let i= 1 ;i 400 ;i++)  count = count + ` $i ` .split( '1' ).length - 1  return count  // 輸出 180 console .log(getCount())"},"string/split.html#split":{"title":"split","path":"\\javascript\\string\\split.html#split","body":"String.prototype.split() &#x8ACB;&#x8F38;&#x51FA;1&#x5230;400&#x4E4B;&#x9593;&#x6240;&#x6709;&#x6578;&#x5B57;&#x4E2D;&#x5305;&#x542B;&#x7684;1&#x7684;&#x500B;&#x6578;&#xFF0C;&#x6BD4;&#x5982;&#x6578;&#x5B57;1&#x4E2D;&#x5305;&#x542B;&#x4E86;&#x4E00;&#x500B;1, &#x6578;&#x5B57;11&#x4E2D;&#x5305;&#x542B;&#x4E86;&#x5169;&#x500B;1,&#x6578;&#x5B57;20&#x4E2D;&#x4E0D;&#x5305;&#x542B;1,&#x6578;&#x5B57;1&#x5230;21&#x4E2D;&#x5171;&#x5305;&#x542B;&#x4E86;13&#x500B;1&#x3002; &#x5C07;&#x6BCF;&#x4E00;&#x500B;&#x6578;&#x5B57;&#x8F49;&#x63DB;&#x70BA;&#x5B57;&#x7B26;&#x4E32;&#x7136;&#x5F8C;&#x7D71;&#x8A08; 1 &#x7684;&#x500B;&#x6578; 1 2 3 4 5 6 7 8 9 10 function getCount ( ) { let count = 0 for ( let i= 1 ;i 400 ;i++) { count = count + ` ${i} ` .split( &apos;1&apos; ).length - 1 } return count } // &#x8F38;&#x51FA; 180 console .log(getCount())"},"statements/if...else.html":{"title":"","path":"\\javascript\\statements\\if...else.html","body":"if…else 條件組合的問題 規則是： 1.在預熱中參與活動，vip用戶贈送 1000 積分，普通用戶贈送 700 積分。 2.在進行中參與活動，vip用戶贈送 800 積分，普通用戶贈送 300 積分。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 let status= 1 let type= 2 if (status=== 1 ) if (type=== 1 ) console .log( '普通用戶在預售中參與活動，贈送700積分' )  else if (type=== 2 ) console .log( 'vip用戶在預售中參與活動，贈送1000積分' )   else if (status=== 2 ) if (type=== 1 ) console .log( '普通用戶在進行中參與活動，贈送300積分' )  else if (type=== 2 ) console .log( 'vip用戶在進行中參與活動，贈送800積分' )   可以使用 obj 寫法，如果以後有什麼條件改了，直接改 obj 這個配置就好 1 2 3 4 5 6 7 8 let obj= 'status=1&amp;type=1' : '普通用戶在預售中參與活動，贈送700積分' , 'status=1&amp;type=2' : 'vip用戶在預售中參與活動，贈送1000積分' , 'status=2&amp;type=1' : '普通用戶在進行中參與活動，贈送300積分' , 'status=2&amp;type=2' : '普通用戶在進行中參與活動，贈送800積分'  console .log(obj[ `status= $status &amp;type= $type ` ]) 特定场景下代替优化 if-else 的方案"},"statements/if...else.html#if…else":{"title":"if&#x2026;else","path":"\\javascript\\statements\\if...else.html#if…else","body":""},"statements/if...else.html#條件組合的問題":{"title":"&#x689D;&#x4EF6;&#x7D44;&#x5408;&#x7684;&#x554F;&#x984C;","path":"\\javascript\\statements\\if...else.html#條件組合的問題","body":"&#x898F;&#x5247;&#x662F;&#xFF1A; 1.&#x5728;&#x9810;&#x71B1;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;vip&#x7528;&#x6236;&#x8D08;&#x9001; 1000 &#x7A4D;&#x5206;&#xFF0C;&#x666E;&#x901A;&#x7528;&#x6236;&#x8D08;&#x9001; 700 &#x7A4D;&#x5206;&#x3002; 2.&#x5728;&#x9032;&#x884C;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;vip&#x7528;&#x6236;&#x8D08;&#x9001; 800 &#x7A4D;&#x5206;&#xFF0C;&#x666E;&#x901A;&#x7528;&#x6236;&#x8D08;&#x9001; 300 &#x7A4D;&#x5206;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 let status= 1 let type= 2 if (status=== 1 ){ if (type=== 1 ){ console .log( &apos;&#x666E;&#x901A;&#x7528;&#x6236;&#x5728;&#x9810;&#x552E;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;700&#x7A4D;&#x5206;&apos; ) } else if (type=== 2 ){ console .log( &apos;vip&#x7528;&#x6236;&#x5728;&#x9810;&#x552E;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;1000&#x7A4D;&#x5206;&apos; ) } } else if (status=== 2 ){ if (type=== 1 ){ console .log( &apos;&#x666E;&#x901A;&#x7528;&#x6236;&#x5728;&#x9032;&#x884C;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;300&#x7A4D;&#x5206;&apos; ) } else if (type=== 2 ){ console .log( &apos;vip&#x7528;&#x6236;&#x5728;&#x9032;&#x884C;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;800&#x7A4D;&#x5206;&apos; ) } } &#x53EF;&#x4EE5;&#x4F7F;&#x7528; obj &#x5BEB;&#x6CD5;&#xFF0C;&#x5982;&#x679C;&#x4EE5;&#x5F8C;&#x6709;&#x4EC0;&#x9EBC;&#x689D;&#x4EF6;&#x6539;&#x4E86;&#xFF0C;&#x76F4;&#x63A5;&#x6539; obj &#x9019;&#x500B;&#x914D;&#x7F6E;&#x5C31;&#x597D; 1 2 3 4 5 6 7 8 let obj={ &apos;status=1&amp;type=1&apos; : &apos;&#x666E;&#x901A;&#x7528;&#x6236;&#x5728;&#x9810;&#x552E;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;700&#x7A4D;&#x5206;&apos; , &apos;status=1&amp;type=2&apos; : &apos;vip&#x7528;&#x6236;&#x5728;&#x9810;&#x552E;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;1000&#x7A4D;&#x5206;&apos; , &apos;status=2&amp;type=1&apos; : &apos;&#x666E;&#x901A;&#x7528;&#x6236;&#x5728;&#x9032;&#x884C;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;300&#x7A4D;&#x5206;&apos; , &apos;status=2&amp;type=2&apos; : &apos;&#x666E;&#x901A;&#x7528;&#x6236;&#x5728;&#x9032;&#x884C;&#x4E2D;&#x53C3;&#x8207;&#x6D3B;&#x52D5;&#xFF0C;&#x8D08;&#x9001;800&#x7A4D;&#x5206;&apos; } console .log(obj[ `status= ${status} &amp;type= ${type} ` ]) &#x7279;&#x5B9A;&#x573A;&#x666F;&#x4E0B;&#x4EE3;&#x66FF;&#x4F18;&#x5316; if-else &#x7684;&#x65B9;&#x6848;"},"swagger/to-html.html":{"title":"swagger - to HTML","path":"\\javascript\\swagger\\to-html.html","body":"Swagger to HTML Download Schema Swagger Petstore Version: 1.0.0 List all pets GET /pets Request Sample Request Path limit integer (int32) Used in query How many items to return at one time (max 100) curl -v -X GET http://petstore.swagger.io/v1/pets Copy Request Response Sample Response Status Code: 200 An paged array of pets Reference [] [].id integer (int64) required [].name string required [].tag string This is a default response for the request. unexpected error Reference code integer (int32) required message string required Create a pet POST /pets Request Sample Request curl -v -X POST http://petstore.swagger.io/v1/pets Copy Request Response Sample Response Status Code: 201 Null response Reference This is a default response for the request. unexpected error Reference code integer (int32) required message string required Info for a specific pet GET /pets/{petId} Request Sample Request Path petId string required Used in path The id of the pet to retrieve curl -v -X GET http://petstore.swagger.io/v1/pets/{petId} Copy Request Response Sample Response Status Code: 200 Expected response to a valid request Reference [] [].id integer (int64) required [].name string required [].tag string This is a default response for the request. unexpected error Reference code integer (int32) required message string required"},"swagger/to-html.html#Swagger-to-HTML":{"title":"Swagger to HTML","path":"\\javascript\\swagger\\to-html.html#Swagger-to-HTML","body":"Download Schema Swagger Petstore Version: 1.0.0 List all pets GET /pets Request Sample Request Path limit integer (int32) Used in query How many items to return at one time (max 100) curl -v -X GET http://petstore.swagger.io/v1/pets Copy Request Response Sample Response Status Code: 200 An paged array of pets Reference [] [].id integer (int64) required [].name string required [].tag string This is a default response for the request. unexpected error Reference code integer (int32) required message string required Create a pet POST /pets Request Sample Request curl -v -X POST http://petstore.swagger.io/v1/pets Copy Request Response Sample Response Status Code: 201 Null response Reference This is a default response for the request. unexpected error Reference code integer (int32) required message string required Info for a specific pet GET /pets/{petId} Request Sample Request Path petId string required Used in path The id of the pet to retrieve curl -v -X GET http://petstore.swagger.io/v1/pets/{petId} Copy Request Response Sample Response Status Code: 200 Expected response to a valid request Reference [] [].id integer (int64) required [].name string required [].tag string This is a default response for the request. unexpected error Reference code integer (int32) required message string required"},"swagger/to-html.html#undefined":{"title":"Swagger Petstore","path":"\\javascript\\swagger\\to-html.html#undefined","body":"Version: 1.0.0"},"swagger/to-html.html#List-all-pets":{"title":"List all pets","path":"\\javascript\\swagger\\to-html.html#List-all-pets","body":"GET /pets"},"swagger/to-html.html#Create-a-pet":{"title":"Create a pet","path":"\\javascript\\swagger\\to-html.html#Create-a-pet","body":"POST /pets"},"swagger/to-html.html#Info-for-a-specific-pet":{"title":"Info for a specific pet","path":"\\javascript\\swagger\\to-html.html#Info-for-a-specific-pet","body":"GET /pets/{petId}"},"swagger/ui.html":{"title":"swagger - UI","path":"\\javascript\\swagger\\ui.html","body":"Swagger UI angular .module('swagger-module-1', ['ngSanitize', 'swaggerUi']) .config([ '$provide', '$locationProvider', function($provide, $locationProvider) { $provide.decorator('$anchorScroll', [ '$delegate', function anchorScrollDecorator($delegate){ return function () { /* Just not doing anything to prevent $anchorScrool default behaviour */} } ]); $locationProvider.hashPrefix(''); } ]); angular.bootstrap(document.getElementById('swagger-wrap-1'), ['swagger-module-1'])"},"swagger/ui.html#Swagger-UI":{"title":"Swagger UI","path":"\\javascript\\swagger\\ui.html#Swagger-UI","body":"angular .module('swagger-module-1', ['ngSanitize', 'swaggerUi']) .config([ '$provide', '$locationProvider', function($provide, $locationProvider) { $provide.decorator('$anchorScroll', [ '$delegate', function anchorScrollDecorator($delegate){ return function () { /* Just not doing anything to prevent $anchorScrool default behaviour */} } ]); $locationProvider.hashPrefix(''); } ]); angular.bootstrap(document.getElementById('swagger-wrap-1'), ['swagger-module-1'])"},"string/queue.html":{"title":"隊列（Queue）","path":"\\javascript\\string\\queue.html","body":"數據結構：隊列（Queue） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 function Queue ( )  let items = [] this .enqueue = function ( e )  items.push(e) // 進隊  this .dequeue = function ( )  return items.shift() // 出隊  this .isEmpty = function ( )  return items.length === 0 // 是否是空隊  this .front = function ( )  return items[ 0 ] // 獲取隊頭元素  this .clear = function ( )  items = [] // 清空隊  this .size = function ( )  return items.length // 獲取隊列長度   查找：從對頭開始查找，從時間複雜度為 O(n) 插入或刪除：進棧與出棧的時間複雜度為 O(1) 時間複雜度 如果演算法中包含巢狀的迴圈，則基本語句通常是最內層的迴圈體，如果演算法中包含並列的迴圈，則將並列迴圈的時間複雜度相加。例如： for (i=1; i=n; i++)　　x++; for (i=1; i=n; i++)　　for (j=1; j=n; j++)　　x++; 第一個for迴圈的時間複雜度為 O(n) ，第二個for迴圈的時間複雜度為O(n2)， 則整個演算法的時間複雜度為O(n+n2)=O(n2)。 Ο(1) 表示基本語句的執行次數是一個常數，一般來說，只要演算法中不存在迴圈語句，其時間複雜度就是O(1) 常見的演算法時間複雜度由小到大依次為： O(1)＜O(log2n)＜O(n)＜O(nlog2n)＜O(n2)＜O(n3)＜…＜O(2n)＜O(n!) O(log2n)、O(n)、O(nlog2n)、O(n2)和O(n3)稱為 多項式時間 O(2n)和O(n!)稱為 指數時間 雙端隊列（Deque） Deque 在原有隊列的基礎上擴充了：隊頭、隊尾都可以進隊出隊 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 function Deque ( )  let items = [] this .addFirst = function ( e )  items.unshift(e)  this .removeFirst = function ( )  return items.shift()  this .addLast = function ( e )  items.push(e)  this .removeLast = function ( )  return items.pop()   經典的雙端隊列問題：翻轉字符串裡的單詞 輸入: “a good example” 輸出: “example good a” 解釋: 如果兩個單詞間有多餘的空格，將反轉後單詞間的空格減少到只含一個。 說明： 無空格字符構成一個單詞。 輸入字符串可以在前面或者後面包含多餘的空格，但是反轉後的字符不能包括。 如果兩個單詞間有多餘的空格，將反轉後單詞間的空格減少到只含一個。 解題思路：使用雙端隊列解題 首先去除字符串左右空格 逐個讀取字符串中的每個單詞，依次放入雙端隊列的對頭 再將隊列轉換成字符串輸出（已空格為分隔符） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 var reverseWords = function ( s )  let left = 0 let right = s.length - 1 let queue = [] let word = '' while (s.charAt(left) === ' ' ) left ++ while (s.charAt(right) === ' ' ) right -- while (left = right)  let char = s.charAt(left) if (char === ' ' &amp;&amp; word)  queue.unshift(word) word = ''  else if (char !== ' ' ) word += char  left++  console .log(word) // example queue.unshift(word) console .log(queue) // [\"example\", \"good\", \"a\"] return queue.join( ' ' ) ; const ans = reverseWords( \"a good example\" ) console .log(ans) // \"example good a\" 正则 + JS API 1 2 3 var reverseWords = function ( s )  return s.trim().replace( /\\s+/g , ' ' ).split( ' ' ).reverse().join( ' ' ) ; References 前端进阶算法：一看就懂的队列及配套算法题"},"string/queue.html#數據結構：隊列（Queue）":{"title":"&#x6578;&#x64DA;&#x7D50;&#x69CB;&#xFF1A;&#x968A;&#x5217;&#xFF08;Queue&#xFF09;","path":"\\javascript\\string\\queue.html#數據結構：隊列（Queue）","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 function Queue ( ) { let items = [] this .enqueue = function ( e ) { items.push(e) // &#x9032;&#x968A; } this .dequeue = function ( ) { return items.shift() // &#x51FA;&#x968A; } this .isEmpty = function ( ) { return items.length === 0 // &#x662F;&#x5426;&#x662F;&#x7A7A;&#x968A; } this .front = function ( ) { return items[ 0 ] // &#x7372;&#x53D6;&#x968A;&#x982D;&#x5143;&#x7D20; } this .clear = function ( ) { items = [] // &#x6E05;&#x7A7A;&#x968A; } this .size = function ( ) { return items.length // &#x7372;&#x53D6;&#x968A;&#x5217;&#x9577;&#x5EA6; } } &#x67E5;&#x627E;&#xFF1A;&#x5F9E;&#x5C0D;&#x982D;&#x958B;&#x59CB;&#x67E5;&#x627E;&#xFF0C;&#x5F9E;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x70BA; O(n) &#x63D2;&#x5165;&#x6216;&#x522A;&#x9664;&#xFF1A;&#x9032;&#x68E7;&#x8207;&#x51FA;&#x68E7;&#x7684;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x70BA; O(1)"},"string/queue.html#時間複雜度":{"title":"&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;","path":"\\javascript\\string\\queue.html#時間複雜度","body":"&#x5982;&#x679C;&#x6F14;&#x7B97;&#x6CD5;&#x4E2D;&#x5305;&#x542B;&#x5DE2;&#x72C0;&#x7684;&#x8FF4;&#x5708;&#xFF0C;&#x5247;&#x57FA;&#x672C;&#x8A9E;&#x53E5;&#x901A;&#x5E38;&#x662F;&#x6700;&#x5167;&#x5C64;&#x7684;&#x8FF4;&#x5708;&#x9AD4;&#xFF0C;&#x5982;&#x679C;&#x6F14;&#x7B97;&#x6CD5;&#x4E2D;&#x5305;&#x542B;&#x4E26;&#x5217;&#x7684;&#x8FF4;&#x5708;&#xFF0C;&#x5247;&#x5C07;&#x4E26;&#x5217;&#x8FF4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x76F8;&#x52A0;&#x3002;&#x4F8B;&#x5982;&#xFF1A; for (i=1; i=n; i++)&#x3000;&#x3000;x++; for (i=1; i=n; i++)&#x3000;&#x3000;for (j=1; j=n; j++)&#x3000;&#x3000;x++; &#x7B2C;&#x4E00;&#x500B;for&#x8FF4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x70BA; O(n) &#xFF0C;&#x7B2C;&#x4E8C;&#x500B;for&#x8FF4;&#x5708;&#x7684;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x70BA;O(n2)&#xFF0C; &#x5247;&#x6574;&#x500B;&#x6F14;&#x7B97;&#x6CD5;&#x7684;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x70BA;O(n+n2)=O(n2)&#x3002; &#x39F;(1) &#x8868;&#x793A;&#x57FA;&#x672C;&#x8A9E;&#x53E5;&#x7684;&#x57F7;&#x884C;&#x6B21;&#x6578;&#x662F;&#x4E00;&#x500B;&#x5E38;&#x6578;&#xFF0C;&#x4E00;&#x822C;&#x4F86;&#x8AAA;&#xFF0C;&#x53EA;&#x8981;&#x6F14;&#x7B97;&#x6CD5;&#x4E2D;&#x4E0D;&#x5B58;&#x5728;&#x8FF4;&#x5708;&#x8A9E;&#x53E5;&#xFF0C;&#x5176;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x5C31;&#x662F;O(1) &#x5E38;&#x898B;&#x7684;&#x6F14;&#x7B97;&#x6CD5;&#x6642;&#x9593;&#x8907;&#x96DC;&#x5EA6;&#x7531;&#x5C0F;&#x5230;&#x5927;&#x4F9D;&#x6B21;&#x70BA;&#xFF1A; O(1)&#xFF1C;O(log2n)&#xFF1C;O(n)&#xFF1C;O(nlog2n)&#xFF1C;O(n2)&#xFF1C;O(n3)&#xFF1C;&#x2026;&#xFF1C;O(2n)&#xFF1C;O(n!) O(log2n)&#x3001;O(n)&#x3001;O(nlog2n)&#x3001;O(n2)&#x548C;O(n3)&#x7A31;&#x70BA; &#x591A;&#x9805;&#x5F0F;&#x6642;&#x9593; O(2n)&#x548C;O(n!)&#x7A31;&#x70BA; &#x6307;&#x6578;&#x6642;&#x9593; &#x96D9;&#x7AEF;&#x968A;&#x5217;&#xFF08;Deque&#xFF09; Deque &#x5728;&#x539F;&#x6709;&#x968A;&#x5217;&#x7684;&#x57FA;&#x790E;&#x4E0A;&#x64F4;&#x5145;&#x4E86;&#xFF1A;&#x968A;&#x982D;&#x3001;&#x968A;&#x5C3E;&#x90FD;&#x53EF;&#x4EE5;&#x9032;&#x968A;&#x51FA;&#x968A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 function Deque ( ) { let items = [] this .addFirst = function ( e ) { items.unshift(e) } this .removeFirst = function ( ) { return items.shift() } this .addLast = function ( e ) { items.push(e) } this .removeLast = function ( ) { return items.pop() } }"},"string/queue.html#雙端隊列（Deque）":{"title":"&#x96D9;&#x7AEF;&#x968A;&#x5217;&#xFF08;Deque&#xFF09;","path":"\\javascript\\string\\queue.html#雙端隊列（Deque）","body":"Deque &#x5728;&#x539F;&#x6709;&#x968A;&#x5217;&#x7684;&#x57FA;&#x790E;&#x4E0A;&#x64F4;&#x5145;&#x4E86;&#xFF1A;&#x968A;&#x982D;&#x3001;&#x968A;&#x5C3E;&#x90FD;&#x53EF;&#x4EE5;&#x9032;&#x968A;&#x51FA;&#x968A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 function Deque ( ) { let items = [] this .addFirst = function ( e ) { items.unshift(e) } this .removeFirst = function ( ) { return items.shift() } this .addLast = function ( e ) { items.push(e) } this .removeLast = function ( ) { return items.pop() } }"},"string/queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞":{"title":"&#x7D93;&#x5178;&#x7684;&#x96D9;&#x7AEF;&#x968A;&#x5217;&#x554F;&#x984C;&#xFF1A;&#x7FFB;&#x8F49;&#x5B57;&#x7B26;&#x4E32;&#x88E1;&#x7684;&#x55AE;&#x8A5E;","path":"\\javascript\\string\\queue.html#經典的雙端隊列問題：翻轉字符串裡的單詞","body":"&#x8F38;&#x5165;: &#x201C;a good example&#x201D; &#x8F38;&#x51FA;: &#x201C;example good a&#x201D; &#x89E3;&#x91CB;: &#x5982;&#x679C;&#x5169;&#x500B;&#x55AE;&#x8A5E;&#x9593;&#x6709;&#x591A;&#x9918;&#x7684;&#x7A7A;&#x683C;&#xFF0C;&#x5C07;&#x53CD;&#x8F49;&#x5F8C;&#x55AE;&#x8A5E;&#x9593;&#x7684;&#x7A7A;&#x683C;&#x6E1B;&#x5C11;&#x5230;&#x53EA;&#x542B;&#x4E00;&#x500B;&#x3002; &#x8AAA;&#x660E;&#xFF1A; &#x7121;&#x7A7A;&#x683C;&#x5B57;&#x7B26;&#x69CB;&#x6210;&#x4E00;&#x500B;&#x55AE;&#x8A5E;&#x3002; &#x8F38;&#x5165;&#x5B57;&#x7B26;&#x4E32;&#x53EF;&#x4EE5;&#x5728;&#x524D;&#x9762;&#x6216;&#x8005;&#x5F8C;&#x9762;&#x5305;&#x542B;&#x591A;&#x9918;&#x7684;&#x7A7A;&#x683C;&#xFF0C;&#x4F46;&#x662F;&#x53CD;&#x8F49;&#x5F8C;&#x7684;&#x5B57;&#x7B26;&#x4E0D;&#x80FD;&#x5305;&#x62EC;&#x3002; &#x5982;&#x679C;&#x5169;&#x500B;&#x55AE;&#x8A5E;&#x9593;&#x6709;&#x591A;&#x9918;&#x7684;&#x7A7A;&#x683C;&#xFF0C;&#x5C07;&#x53CD;&#x8F49;&#x5F8C;&#x55AE;&#x8A5E;&#x9593;&#x7684;&#x7A7A;&#x683C;&#x6E1B;&#x5C11;&#x5230;&#x53EA;&#x542B;&#x4E00;&#x500B;&#x3002; &#x89E3;&#x984C;&#x601D;&#x8DEF;&#xFF1A;&#x4F7F;&#x7528;&#x96D9;&#x7AEF;&#x968A;&#x5217;&#x89E3;&#x984C; &#x9996;&#x5148;&#x53BB;&#x9664;&#x5B57;&#x7B26;&#x4E32;&#x5DE6;&#x53F3;&#x7A7A;&#x683C; &#x9010;&#x500B;&#x8B80;&#x53D6;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;&#x6BCF;&#x500B;&#x55AE;&#x8A5E;&#xFF0C;&#x4F9D;&#x6B21;&#x653E;&#x5165;&#x96D9;&#x7AEF;&#x968A;&#x5217;&#x7684;&#x5C0D;&#x982D; &#x518D;&#x5C07;&#x968A;&#x5217;&#x8F49;&#x63DB;&#x6210;&#x5B57;&#x7B26;&#x4E32;&#x8F38;&#x51FA;&#xFF08;&#x5DF2;&#x7A7A;&#x683C;&#x70BA;&#x5206;&#x9694;&#x7B26;&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 var reverseWords = function ( s ) { let left = 0 let right = s.length - 1 let queue = [] let word = &apos;&apos; while (s.charAt(left) === &apos; &apos; ) left ++ while (s.charAt(right) === &apos; &apos; ) right -- while (left = right) { let char = s.charAt(left) if (char === &apos; &apos; &amp;&amp; word) { queue.unshift(word) word = &apos;&apos; } else if (char !== &apos; &apos; ){ word += char } left++ } console .log(word) // example queue.unshift(word) console .log(queue) // [example, good, a] return queue.join( &apos; &apos; ) }; const ans = reverseWords( a good example ) console .log(ans) // example good a &#x6B63;&#x5219; + JS API 1 2 3 var reverseWords = function ( s ) { return s.trim().replace( /\\s+/g , &apos; &apos; ).split( &apos; &apos; ).reverse().join( &apos; &apos; ) };"},"string/queue.html#References":{"title":"References","path":"\\javascript\\string\\queue.html#References","body":"&#x524D;&#x7AEF;&#x8FDB;&#x9636;&#x7B97;&#x6CD5;&#xFF1A;&#x4E00;&#x770B;&#x5C31;&#x61C2;&#x7684;&#x961F;&#x5217;&#x53CA;&#x914D;&#x5957;&#x7B97;&#x6CD5;&#x9898;"}}}